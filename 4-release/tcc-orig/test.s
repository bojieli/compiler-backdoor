
tcc1:     file format elf64-x86-64


Disassembly of section .text:

000000000804a2c0 <_start>:
 804a2c0:	31 ed                	xor    %ebp,%ebp
 804a2c2:	49 89 d1             	mov    %rdx,%r9
 804a2c5:	5e                   	pop    %rsi
 804a2c6:	48 89 e2             	mov    %rsp,%rdx
 804a2c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 804a2cd:	50                   	push   %rax
 804a2ce:	54                   	push   %rsp
 804a2cf:	49 c7 c0 40 75 08 08 	mov    $0x8087540,%r8
 804a2d6:	48 c7 c1 b0 74 08 08 	mov    $0x80874b0,%rcx
 804a2dd:	48 c7 c7 56 b3 04 08 	mov    $0x804b356,%rdi
 804a2e4:	e8 c7 d7 03 00       	callq  8087ab0 <__preinit_array_end+0x10>
 804a2e9:	f4                   	hlt    
 804a2ea:	66 90                	xchg   %ax,%ax
	...

000000000804a300 <__bswap_16>:
 804a300:	55                   	push   %rbp
 804a301:	48 89 e5             	mov    %rsp,%rbp
 804a304:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804a30b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a30f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804a312:	c1 f8 08             	sar    $0x8,%eax
 804a315:	81 e0 ff 00 00 00    	and    $0xff,%eax
 804a31b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804a31e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 804a324:	c1 e1 08             	shl    $0x8,%ecx
 804a327:	48 09 c8             	or     %rcx,%rax
 804a32a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 804a330:	e9 00 00 00 00       	jmpq   804a335 <__bswap_16+0x35>
 804a335:	c9                   	leaveq 
 804a336:	c3                   	retq   

000000000804a337 <__bswap_32>:
 804a337:	55                   	push   %rbp
 804a338:	48 89 e5             	mov    %rsp,%rbp
 804a33b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804a342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a346:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804a349:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 804a34f:	c1 e8 18             	shr    $0x18,%eax
 804a352:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804a355:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 804a35b:	c1 e9 08             	shr    $0x8,%ecx
 804a35e:	48 09 c8             	or     %rcx,%rax
 804a361:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804a364:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 804a36a:	c1 e1 08             	shl    $0x8,%ecx
 804a36d:	48 09 c8             	or     %rcx,%rax
 804a370:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804a373:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 804a379:	c1 e1 18             	shl    $0x18,%ecx
 804a37c:	48 09 c8             	or     %rcx,%rax
 804a37f:	e9 00 00 00 00       	jmpq   804a384 <__bswap_32+0x4d>
 804a384:	c9                   	leaveq 
 804a385:	c3                   	retq   

000000000804a386 <__bswap_64>:
 804a386:	55                   	push   %rbp
 804a387:	48 89 e5             	mov    %rsp,%rbp
 804a38a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804a391:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a399:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 804a3a0:	00 00 ff 
 804a3a3:	48 21 c8             	and    %rcx,%rax
 804a3a6:	48 89 c1             	mov    %rax,%rcx
 804a3a9:	48 c1 e9 38          	shr    $0x38,%rcx
 804a3ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a3b1:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 804a3b8:	00 ff 00 
 804a3bb:	48 21 d0             	and    %rdx,%rax
 804a3be:	48 89 c2             	mov    %rax,%rdx
 804a3c1:	48 c1 ea 28          	shr    $0x28,%rdx
 804a3c5:	48 89 c8             	mov    %rcx,%rax
 804a3c8:	48 89 d1             	mov    %rdx,%rcx
 804a3cb:	48 09 c8             	or     %rcx,%rax
 804a3ce:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804a3d2:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 804a3d9:	ff 00 00 
 804a3dc:	48 21 d1             	and    %rdx,%rcx
 804a3df:	48 89 ca             	mov    %rcx,%rdx
 804a3e2:	48 c1 ea 18          	shr    $0x18,%rdx
 804a3e6:	48 89 c1             	mov    %rax,%rcx
 804a3e9:	48 89 d0             	mov    %rdx,%rax
 804a3ec:	48 09 c1             	or     %rax,%rcx
 804a3ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a3f3:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 804a3fa:	00 00 00 
 804a3fd:	48 21 d0             	and    %rdx,%rax
 804a400:	48 89 c2             	mov    %rax,%rdx
 804a403:	48 c1 ea 08          	shr    $0x8,%rdx
 804a407:	48 89 c8             	mov    %rcx,%rax
 804a40a:	48 89 d1             	mov    %rdx,%rcx
 804a40d:	48 09 c8             	or     %rcx,%rax
 804a410:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804a414:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 804a41b:	00 00 00 
 804a41e:	48 21 d1             	and    %rdx,%rcx
 804a421:	48 89 ca             	mov    %rcx,%rdx
 804a424:	48 c1 e2 08          	shl    $0x8,%rdx
 804a428:	48 89 c1             	mov    %rax,%rcx
 804a42b:	48 89 d0             	mov    %rdx,%rax
 804a42e:	48 09 c1             	or     %rax,%rcx
 804a431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a435:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 804a43c:	00 00 00 
 804a43f:	48 21 d0             	and    %rdx,%rax
 804a442:	48 89 c2             	mov    %rax,%rdx
 804a445:	48 c1 e2 18          	shl    $0x18,%rdx
 804a449:	48 89 c8             	mov    %rcx,%rax
 804a44c:	48 89 d1             	mov    %rdx,%rcx
 804a44f:	48 09 c8             	or     %rcx,%rax
 804a452:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804a456:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 804a45d:	00 00 00 
 804a460:	48 21 d1             	and    %rdx,%rcx
 804a463:	48 89 ca             	mov    %rcx,%rdx
 804a466:	48 c1 e2 28          	shl    $0x28,%rdx
 804a46a:	48 89 c1             	mov    %rax,%rcx
 804a46d:	48 89 d0             	mov    %rdx,%rax
 804a470:	48 09 c1             	or     %rax,%rcx
 804a473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a477:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 804a47e:	00 00 00 
 804a481:	48 21 d0             	and    %rdx,%rax
 804a484:	48 89 c2             	mov    %rax,%rdx
 804a487:	48 c1 e2 38          	shl    $0x38,%rdx
 804a48b:	48 89 c8             	mov    %rcx,%rax
 804a48e:	48 89 d1             	mov    %rdx,%rcx
 804a491:	48 09 c8             	or     %rcx,%rax
 804a494:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804a498:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a49c:	e9 00 00 00 00       	jmpq   804a4a1 <__bswap_64+0x11b>
 804a4a1:	c9                   	leaveq 
 804a4a2:	c3                   	retq   

000000000804a4a3 <time>:
 804a4a3:	55                   	push   %rbp
 804a4a4:	48 89 e5             	mov    %rsp,%rbp
 804a4a7:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804a4ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a4b2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804a4b9:	00 00 00 
 804a4bc:	e9 00 00 00 00       	jmpq   804a4c1 <time+0x1e>
 804a4c1:	c9                   	leaveq 
 804a4c2:	c3                   	retq   

000000000804a4c3 <help>:
 804a4c3:	55                   	push   %rbp
 804a4c4:	48 89 e5             	mov    %rsp,%rbp
 804a4c7:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 804a4ce:	48 8d 05 53 e9 03 00 	lea    0x3e953(%rip),%rax        # 8088e28 <L.107>
 804a4d5:	48 89 c7             	mov    %rax,%rdi
 804a4d8:	b8 00 00 00 00       	mov    $0x0,%eax
 804a4dd:	e8 de d5 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 804a4e2:	c9                   	leaveq 
 804a4e3:	c3                   	retq   

000000000804a4e4 <getclock_us>:
 804a4e4:	55                   	push   %rbp
 804a4e5:	48 89 e5             	mov    %rsp,%rbp
 804a4e8:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 804a4ef:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804a4f6:	00 00 00 
 804a4f9:	e9 00 00 00 00       	jmpq   804a4fe <getclock_us+0x1a>
 804a4fe:	c9                   	leaveq 
 804a4ff:	c3                   	retq   

000000000804a500 <expand_args>:
 804a500:	55                   	push   %rbp
 804a501:	48 89 e5             	mov    %rsp,%rbp
 804a504:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804a50b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a50f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804a513:	b8 00 00 00 00       	mov    $0x0,%eax
 804a518:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 804a51b:	b8 00 00 00 00       	mov    $0x0,%eax
 804a520:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804a524:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a528:	0f be 08             	movsbl (%rax),%ecx
 804a52b:	48 89 cf             	mov    %rcx,%rdi
 804a52e:	b8 00 00 00 00       	mov    $0x0,%eax
 804a533:	e8 5a 15 00 00       	callq  804ba92 <is_space>
 804a538:	85 c0                	test   %eax,%eax
 804a53a:	0f 84 1a 00 00 00    	je     804a55a <expand_args+0x5a>
 804a540:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a544:	48 89 c1             	mov    %rax,%rcx
 804a547:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804a54e:	00 00 00 
 804a551:	48 01 d0             	add    %rdx,%rax
 804a554:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804a558:	eb ca                	jmp    804a524 <expand_args+0x24>
 804a55a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a55e:	0f be 08             	movsbl (%rax),%ecx
 804a561:	83 f9 00             	cmp    $0x0,%ecx
 804a564:	0f 85 05 00 00 00    	jne    804a56f <expand_args+0x6f>
 804a56a:	e9 e0 00 00 00       	jmpq   804a64f <expand_args+0x14f>
 804a56f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a573:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804a577:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a57b:	0f be 08             	movsbl (%rax),%ecx
 804a57e:	83 f9 00             	cmp    $0x0,%ecx
 804a581:	0f 84 3b 00 00 00    	je     804a5c2 <expand_args+0xc2>
 804a587:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a58b:	0f be 08             	movsbl (%rax),%ecx
 804a58e:	48 89 cf             	mov    %rcx,%rdi
 804a591:	b8 00 00 00 00       	mov    $0x0,%eax
 804a596:	e8 f7 14 00 00       	callq  804ba92 <is_space>
 804a59b:	85 c0                	test   %eax,%eax
 804a59d:	0f 84 05 00 00 00    	je     804a5a8 <expand_args+0xa8>
 804a5a3:	e9 1a 00 00 00       	jmpq   804a5c2 <expand_args+0xc2>
 804a5a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a5ac:	48 89 c1             	mov    %rax,%rcx
 804a5af:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804a5b6:	00 00 00 
 804a5b9:	48 01 d0             	add    %rdx,%rax
 804a5bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804a5c0:	eb b5                	jmp    804a577 <expand_args+0x77>
 804a5c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a5c6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804a5ca:	48 29 c8             	sub    %rcx,%rax
 804a5cd:	48 89 c1             	mov    %rax,%rcx
 804a5d0:	89 4d d0             	mov    %ecx,-0x30(%rbp)
 804a5d3:	8b 45 d0             	mov    -0x30(%rbp),%eax
 804a5d6:	83 c0 01             	add    $0x1,%eax
 804a5d9:	48 63 c0             	movslq %eax,%rax
 804a5dc:	48 89 c1             	mov    %rax,%rcx
 804a5df:	48 89 cf             	mov    %rcx,%rdi
 804a5e2:	b8 00 00 00 00       	mov    $0x0,%eax
 804a5e7:	e8 6c 19 00 00       	callq  804bf58 <tcc_malloc>
 804a5ec:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804a5f0:	8b 45 d0             	mov    -0x30(%rbp),%eax
 804a5f3:	49 89 c2             	mov    %rax,%r10
 804a5f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804a5fa:	48 89 c6             	mov    %rax,%rsi
 804a5fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804a601:	48 89 c7             	mov    %rax,%rdi
 804a604:	4c 89 d2             	mov    %r10,%rdx
 804a607:	b8 00 00 00 00       	mov    $0x0,%eax
 804a60c:	e8 5f c6 03 00       	callq  8086c70 <memcpy>
 804a611:	8b 45 d0             	mov    -0x30(%rbp),%eax
 804a614:	48 63 c0             	movslq %eax,%rax
 804a617:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 804a61b:	48 89 c2             	mov    %rax,%rdx
 804a61e:	48 01 d1             	add    %rdx,%rcx
 804a621:	b8 00 00 00 00       	mov    $0x0,%eax
 804a626:	88 01                	mov    %al,(%rcx)
 804a628:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804a62c:	49 89 c2             	mov    %rax,%r10
 804a62f:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
 804a633:	48 89 c6             	mov    %rax,%rsi
 804a636:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 804a63a:	48 89 c7             	mov    %rax,%rdi
 804a63d:	4c 89 d2             	mov    %r10,%rdx
 804a640:	b8 00 00 00 00       	mov    $0x0,%eax
 804a645:	e8 b9 1a 00 00       	callq  804c103 <dynarray_add>
 804a64a:	e9 d5 fe ff ff       	jmpq   804a524 <expand_args+0x24>
 804a64f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a653:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804a657:	48 89 08             	mov    %rcx,(%rax)
 804a65a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804a65d:	e9 00 00 00 00       	jmpq   804a662 <expand_args+0x162>
 804a662:	c9                   	leaveq 
 804a663:	c3                   	retq   

000000000804a664 <exec_other_tcc>:
 804a664:	55                   	push   %rbp
 804a665:	48 89 e5             	mov    %rsp,%rbp
 804a668:	48 81 ec 30 10 00 00 	sub    $0x1030,%rsp
 804a66f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a673:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804a677:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804a67b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804a67f:	48 89 c7             	mov    %rax,%rdi
 804a682:	b8 00 00 00 00       	mov    $0x0,%eax
 804a687:	e8 44 d4 03 00       	callq  8087ad0 <__preinit_array_end+0x30>
 804a68c:	e9 05 00 00 00       	jmpq   804a696 <exec_other_tcc+0x32>
 804a691:	e9 09 00 00 00       	jmpq   804a69f <exec_other_tcc+0x3b>
 804a696:	83 f8 40             	cmp    $0x40,%eax
 804a699:	0f 85 0a 00 00 00    	jne    804a6a9 <exec_other_tcc+0x45>
 804a69f:	e9 81 01 00 00       	jmpq   804a825 <exec_other_tcc+0x1c1>
 804a6a4:	e9 09 00 00 00       	jmpq   804a6b2 <exec_other_tcc+0x4e>
 804a6a9:	83 f8 20             	cmp    $0x20,%eax
 804a6ac:	0f 85 4a 01 00 00    	jne    804a7fc <exec_other_tcc+0x198>
 804a6b2:	48 8d 05 46 f0 03 00 	lea    0x3f046(%rip),%rax        # 80896ff <L.148>
 804a6b9:	48 89 85 d8 ef ff ff 	mov    %rax,-0x1028(%rbp)
 804a6c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a6c4:	48 8b 08             	mov    (%rax),%rcx
 804a6c7:	49 89 ca             	mov    %rcx,%r10
 804a6ca:	b8 d8 0f 00 00       	mov    $0xfd8,%eax
 804a6cf:	48 89 c6             	mov    %rax,%rsi
 804a6d2:	48 8d 85 e8 ef ff ff 	lea    -0x1018(%rbp),%rax
 804a6d9:	48 89 c7             	mov    %rax,%rdi
 804a6dc:	4c 89 d2             	mov    %r10,%rdx
 804a6df:	b8 00 00 00 00       	mov    $0x0,%eax
 804a6e4:	e8 ba 15 00 00       	callq  804bca3 <pstrcpy>
 804a6e9:	48 8d 85 e8 ef ff ff 	lea    -0x1018(%rbp),%rax
 804a6f0:	48 89 c7             	mov    %rax,%rdi
 804a6f3:	b8 00 00 00 00       	mov    $0x0,%eax
 804a6f8:	e8 3c 17 00 00       	callq  804be39 <tcc_basename>
 804a6fd:	48 89 85 e0 ef ff ff 	mov    %rax,-0x1020(%rbp)
 804a704:	48 8b 85 d8 ef ff ff 	mov    -0x1028(%rbp),%rax
 804a70b:	48 89 c6             	mov    %rax,%rsi
 804a70e:	48 8b 85 e0 ef ff ff 	mov    -0x1020(%rbp),%rax
 804a715:	48 89 c7             	mov    %rax,%rdi
 804a718:	b8 00 00 00 00       	mov    $0x0,%eax
 804a71d:	e8 3e cb 03 00       	callq  8087260 <strcpy>
 804a722:	48 8d 05 db ef 03 00 	lea    0x3efdb(%rip),%rax        # 8089704 <L.149>
 804a729:	48 89 c6             	mov    %rax,%rsi
 804a72c:	48 8b 85 e0 ef ff ff 	mov    -0x1020(%rbp),%rax
 804a733:	48 89 c7             	mov    %rax,%rdi
 804a736:	b8 00 00 00 00       	mov    $0x0,%eax
 804a73b:	e8 80 c8 03 00       	callq  8086fc0 <strcat>
 804a740:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a744:	48 8d 8d e8 ef ff ff 	lea    -0x1018(%rbp),%rcx
 804a74b:	48 89 ce             	mov    %rcx,%rsi
 804a74e:	48 8b 08             	mov    (%rax),%rcx
 804a751:	48 89 cf             	mov    %rcx,%rdi
 804a754:	b8 00 00 00 00       	mov    $0x0,%eax
 804a759:	e8 82 ca 03 00       	callq  80871e0 <strcmp>
 804a75e:	85 c0                	test   %eax,%eax
 804a760:	0f 84 73 00 00 00    	je     804a7d9 <exec_other_tcc+0x175>
 804a766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a76a:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804a771:	00 00 00 
 804a774:	48 01 c8             	add    %rcx,%rax
 804a777:	8b 08                	mov    (%rax),%ecx
 804a779:	83 f9 00             	cmp    $0x0,%ecx
 804a77c:	0f 8e 35 00 00 00    	jle    804a7b7 <exec_other_tcc+0x153>
 804a782:	48 8b 85 e0 ef ff ff 	mov    -0x1020(%rbp),%rax
 804a789:	48 89 c6             	mov    %rax,%rsi
 804a78c:	48 8d 05 76 ef 03 00 	lea    0x3ef76(%rip),%rax        # 8089709 <L.150>
 804a793:	48 89 c7             	mov    %rax,%rdi
 804a796:	b8 00 00 00 00       	mov    $0x0,%eax
 804a79b:	e8 20 d3 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 804a7a0:	48 8b 05 79 36 04 00 	mov    0x43679(%rip),%rax        # 808de20 <_GLOBAL_OFFSET_TABLE_+0x1a0>
 804a7a7:	48 8b 00             	mov    (%rax),%rax
 804a7aa:	48 89 c7             	mov    %rax,%rdi
 804a7ad:	b8 00 00 00 00       	mov    $0x0,%eax
 804a7b2:	e8 29 d3 03 00       	callq  8087ae0 <__preinit_array_end+0x40>
 804a7b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a7bb:	48 8d 8d e8 ef ff ff 	lea    -0x1018(%rbp),%rcx
 804a7c2:	48 89 08             	mov    %rcx,(%rax)
 804a7c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a7c9:	48 89 c6             	mov    %rax,%rsi
 804a7cc:	48 89 cf             	mov    %rcx,%rdi
 804a7cf:	b8 00 00 00 00       	mov    $0x0,%eax
 804a7d4:	e8 17 d3 03 00       	callq  8087af0 <__preinit_array_end+0x50>
 804a7d9:	48 8b 85 e0 ef ff ff 	mov    -0x1020(%rbp),%rax
 804a7e0:	48 89 c6             	mov    %rax,%rsi
 804a7e3:	48 8d 05 30 ef 03 00 	lea    0x3ef30(%rip),%rax        # 808971a <L.151>
 804a7ea:	48 89 c7             	mov    %rax,%rdi
 804a7ed:	b8 00 00 00 00       	mov    $0x0,%eax
 804a7f2:	e8 d0 2e 00 00       	callq  804d6c7 <tcc_error>
 804a7f7:	e9 09 00 00 00       	jmpq   804a805 <exec_other_tcc+0x1a1>
 804a7fc:	83 f8 00             	cmp    $0x0,%eax
 804a7ff:	0f 85 05 00 00 00    	jne    804a80a <exec_other_tcc+0x1a6>
 804a805:	e9 1b 00 00 00       	jmpq   804a825 <exec_other_tcc+0x1c1>
 804a80a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804a80e:	48 89 c6             	mov    %rax,%rsi
 804a811:	48 8d 05 11 ef 03 00 	lea    0x3ef11(%rip),%rax        # 8089729 <L.152>
 804a818:	48 89 c7             	mov    %rax,%rdi
 804a81b:	b8 00 00 00 00       	mov    $0x0,%eax
 804a820:	e8 da 30 00 00       	callq  804d8ff <tcc_warning>
 804a825:	c9                   	leaveq 
 804a826:	c3                   	retq   

000000000804a827 <parse_option_D>:
 804a827:	55                   	push   %rbp
 804a828:	48 89 e5             	mov    %rsp,%rbp
 804a82b:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804a832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804a83a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804a83e:	48 89 c7             	mov    %rax,%rdi
 804a841:	b8 00 00 00 00       	mov    $0x0,%eax
 804a846:	e8 51 18 00 00       	callq  804c09c <tcc_strdup>
 804a84b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804a84f:	b8 3d 00 00 00       	mov    $0x3d,%eax
 804a854:	48 89 c6             	mov    %rax,%rsi
 804a857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804a85b:	48 89 c7             	mov    %rax,%rdi
 804a85e:	b8 00 00 00 00       	mov    $0x0,%eax
 804a863:	e8 d8 c7 03 00       	callq  8087040 <strchr>
 804a868:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804a86c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804a870:	85 c0                	test   %eax,%eax
 804a872:	0f 84 1f 00 00 00    	je     804a897 <parse_option_D+0x70>
 804a878:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804a87c:	48 89 c1             	mov    %rax,%rcx
 804a87f:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804a886:	00 00 00 
 804a889:	48 01 d0             	add    %rdx,%rax
 804a88c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804a890:	b8 00 00 00 00       	mov    $0x0,%eax
 804a895:	88 01                	mov    %al,(%rcx)
 804a897:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804a89b:	49 89 c2             	mov    %rax,%r10
 804a89e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804a8a2:	48 89 c6             	mov    %rax,%rsi
 804a8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804a8a9:	48 89 c7             	mov    %rax,%rdi
 804a8ac:	4c 89 d2             	mov    %r10,%rdx
 804a8af:	b8 00 00 00 00       	mov    $0x0,%eax
 804a8b4:	e8 34 3c 00 00       	callq  804e4ed <tcc_define_symbol>
 804a8b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804a8bd:	48 89 c7             	mov    %rax,%rdi
 804a8c0:	b8 00 00 00 00       	mov    $0x0,%eax
 804a8c5:	e8 6c 16 00 00       	callq  804bf36 <tcc_free>
 804a8ca:	c9                   	leaveq 
 804a8cb:	c3                   	retq   

000000000804a8cc <parse_args>:
 804a8cc:	55                   	push   %rbp
 804a8cd:	48 89 e5             	mov    %rsp,%rbp
 804a8d0:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 804a8d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804a8db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804a8df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804a8e3:	b8 00 00 00 00       	mov    $0x0,%eax
 804a8e8:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 804a8eb:	b8 00 00 00 00       	mov    $0x0,%eax
 804a8f0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804a8f3:	48 8d 05 06 38 04 00 	lea    0x43806(%rip),%rax        # 808e100 <linker_arg>
 804a8fa:	48 89 c7             	mov    %rax,%rdi
 804a8fd:	b8 00 00 00 00       	mov    $0x0,%eax
 804a902:	e8 c0 6a 00 00       	callq  80513c7 <cstr_new>
 804a907:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804a90a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 804a90d:	39 c8                	cmp    %ecx,%eax
 804a90f:	0f 8d 81 09 00 00    	jge    804b296 <parse_args+0x9ca>
 804a915:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804a918:	48 89 c1             	mov    %rax,%rcx
 804a91b:	83 c0 01             	add    $0x1,%eax
 804a91e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804a921:	48 63 c9             	movslq %ecx,%rcx
 804a924:	48 89 c8             	mov    %rcx,%rax
 804a927:	48 c1 e0 03          	shl    $0x3,%rax
 804a92b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804a92f:	48 89 c2             	mov    %rax,%rdx
 804a932:	48 01 d1             	add    %rdx,%rcx
 804a935:	48 8b 01             	mov    (%rcx),%rax
 804a938:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 804a93c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804a940:	0f be 08             	movsbl (%rax),%ecx
 804a943:	83 f9 2d             	cmp    $0x2d,%ecx
 804a946:	0f 85 22 00 00 00    	jne    804a96e <parse_args+0xa2>
 804a94c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804a950:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804a957:	00 00 00 
 804a95a:	48 01 c8             	add    %rcx,%rax
 804a95d:	0f be 08             	movsbl (%rax),%ecx
 804a960:	83 f9 00             	cmp    $0x0,%ecx
 804a963:	0f 84 05 00 00 00    	je     804a96e <parse_args+0xa2>
 804a969:	e9 51 00 00 00       	jmpq   804a9bf <parse_args+0xf3>
 804a96e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804a972:	49 89 c2             	mov    %rax,%r10
 804a975:	48 8d 05 4c 37 04 00 	lea    0x4374c(%rip),%rax        # 808e0c8 <nb_files>
 804a97c:	48 89 c6             	mov    %rax,%rsi
 804a97f:	48 8d 05 3a 37 04 00 	lea    0x4373a(%rip),%rax        # 808e0c0 <files>
 804a986:	48 89 c7             	mov    %rax,%rdi
 804a989:	4c 89 d2             	mov    %r10,%rdx
 804a98c:	b8 00 00 00 00       	mov    $0x0,%eax
 804a991:	e8 6d 17 00 00       	callq  804c103 <dynarray_add>
 804a996:	8b 05 34 37 04 00    	mov    0x43734(%rip),%eax        # 808e0d0 <multiple_files>
 804a99c:	85 c0                	test   %eax,%eax
 804a99e:	0f 84 05 00 00 00    	je     804a9a9 <parse_args+0xdd>
 804a9a4:	e9 11 00 00 00       	jmpq   804a9ba <parse_args+0xee>
 804a9a9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804a9ac:	48 89 c1             	mov    %rax,%rcx
 804a9af:	83 c0 ff             	add    $0xffffffff,%eax
 804a9b2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804a9b5:	e9 dc 08 00 00       	jmpq   804b296 <parse_args+0x9ca>
 804a9ba:	e9 d2 08 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804a9bf:	48 8d 05 12 ea 03 00 	lea    0x3ea12(%rip),%rax        # 80893d8 <tcc_options>
 804a9c6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804a9ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804a9ce:	48 8b 08             	mov    (%rax),%rcx
 804a9d1:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 804a9d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 804a9d9:	48 89 c1             	mov    %rax,%rcx
 804a9dc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804a9e3:	00 00 00 
 804a9e6:	48 39 c1             	cmp    %rax,%rcx
 804a9e9:	0f 85 1b 00 00 00    	jne    804aa0a <parse_args+0x13e>
 804a9ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804a9f3:	48 89 c6             	mov    %rax,%rsi
 804a9f6:	48 8d 05 46 ed 03 00 	lea    0x3ed46(%rip),%rax        # 8089743 <L.153>
 804a9fd:	48 89 c7             	mov    %rax,%rdi
 804aa00:	b8 00 00 00 00       	mov    $0x0,%eax
 804aa05:	e8 bd 2c 00 00       	callq  804d6c7 <tcc_error>
 804aa0a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804aa0e:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804aa15:	00 00 00 
 804aa18:	48 01 c8             	add    %rcx,%rax
 804aa1b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804aa1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 804aa23:	0f be 08             	movsbl (%rax),%ecx
 804aa26:	83 f9 00             	cmp    $0x0,%ecx
 804aa29:	0f 85 05 00 00 00    	jne    804aa34 <parse_args+0x168>
 804aa2f:	e9 6a 00 00 00       	jmpq   804aa9e <parse_args+0x1d2>
 804aa34:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804aa38:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 804aa3c:	0f be 10             	movsbl (%rax),%edx
 804aa3f:	0f be 01             	movsbl (%rcx),%eax
 804aa42:	39 c2                	cmp    %eax,%edx
 804aa44:	0f 84 05 00 00 00    	je     804aa4f <parse_args+0x183>
 804aa4a:	e9 32 00 00 00       	jmpq   804aa81 <parse_args+0x1b5>
 804aa4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 804aa53:	48 89 c1             	mov    %rax,%rcx
 804aa56:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804aa5d:	00 00 00 
 804aa60:	48 01 d0             	add    %rdx,%rax
 804aa63:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 804aa67:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804aa6b:	48 89 c1             	mov    %rax,%rcx
 804aa6e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804aa75:	00 00 00 
 804aa78:	48 01 d0             	add    %rdx,%rax
 804aa7b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804aa7f:	eb 9e                	jmp    804aa1f <parse_args+0x153>
 804aa81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804aa85:	48 89 c1             	mov    %rax,%rcx
 804aa88:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 804aa8f:	00 00 00 
 804aa92:	48 01 d0             	add    %rdx,%rax
 804aa95:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804aa99:	e9 2c ff ff ff       	jmpq   804a9ca <parse_args+0xfe>
 804aa9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804aaa2:	48 b9 0a 00 00 00 00 	movabs $0xa,%rcx
 804aaa9:	00 00 00 
 804aaac:	48 01 c8             	add    %rcx,%rax
 804aaaf:	0f b7 08             	movzwl (%rax),%ecx
 804aab2:	83 e1 01             	and    $0x1,%ecx
 804aab5:	85 c9                	test   %ecx,%ecx
 804aab7:	0f 84 96 00 00 00    	je     804ab53 <parse_args+0x287>
 804aabd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804aac1:	0f be 08             	movsbl (%rax),%ecx
 804aac4:	83 f9 00             	cmp    $0x0,%ecx
 804aac7:	0f 85 24 00 00 00    	jne    804aaf1 <parse_args+0x225>
 804aacd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804aad1:	48 b9 0a 00 00 00 00 	movabs $0xa,%rcx
 804aad8:	00 00 00 
 804aadb:	48 01 c8             	add    %rcx,%rax
 804aade:	0f b7 08             	movzwl (%rax),%ecx
 804aae1:	83 e1 02             	and    $0x2,%ecx
 804aae4:	85 c9                	test   %ecx,%ecx
 804aae6:	0f 85 05 00 00 00    	jne    804aaf1 <parse_args+0x225>
 804aaec:	e9 0d 00 00 00       	jmpq   804aafe <parse_args+0x232>
 804aaf1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804aaf5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804aaf9:	e9 50 00 00 00       	jmpq   804ab4e <parse_args+0x282>
 804aafe:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804ab01:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 804ab04:	39 c8                	cmp    %ecx,%eax
 804ab06:	0f 8c 1b 00 00 00    	jl     804ab27 <parse_args+0x25b>
 804ab0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804ab10:	48 89 c6             	mov    %rax,%rsi
 804ab13:	48 8d 05 40 ec 03 00 	lea    0x3ec40(%rip),%rax        # 808975a <L.154>
 804ab1a:	48 89 c7             	mov    %rax,%rdi
 804ab1d:	b8 00 00 00 00       	mov    $0x0,%eax
 804ab22:	e8 a0 2b 00 00       	callq  804d6c7 <tcc_error>
 804ab27:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804ab2a:	48 89 c1             	mov    %rax,%rcx
 804ab2d:	83 c0 01             	add    $0x1,%eax
 804ab30:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804ab33:	48 63 c9             	movslq %ecx,%rcx
 804ab36:	48 89 c8             	mov    %rcx,%rax
 804ab39:	48 c1 e0 03          	shl    $0x3,%rax
 804ab3d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804ab41:	48 89 c2             	mov    %rax,%rdx
 804ab44:	48 01 d1             	add    %rdx,%rcx
 804ab47:	48 8b 01             	mov    (%rcx),%rax
 804ab4a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804ab4e:	e9 23 00 00 00       	jmpq   804ab76 <parse_args+0x2aa>
 804ab53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804ab57:	0f be 08             	movsbl (%rax),%ecx
 804ab5a:	83 f9 00             	cmp    $0x0,%ecx
 804ab5d:	0f 84 0a 00 00 00    	je     804ab6d <parse_args+0x2a1>
 804ab63:	b8 00 00 00 00       	mov    $0x0,%eax
 804ab68:	e9 e7 07 00 00       	jmpq   804b354 <parse_args+0xa88>
 804ab6d:	b8 00 00 00 00       	mov    $0x0,%eax
 804ab72:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804ab76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804ab7a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804ab81:	00 00 00 
 804ab84:	48 01 c8             	add    %rcx,%rax
 804ab87:	0f b7 08             	movzwl (%rax),%ecx
 804ab8a:	e9 05 00 00 00       	jmpq   804ab94 <parse_args+0x2c8>
 804ab8f:	e9 09 00 00 00       	jmpq   804ab9d <parse_args+0x2d1>
 804ab94:	83 f9 00             	cmp    $0x0,%ecx
 804ab97:	0f 85 0f 00 00 00    	jne    804abac <parse_args+0x2e0>
 804ab9d:	b8 00 00 00 00       	mov    $0x0,%eax
 804aba2:	e9 ad 07 00 00       	jmpq   804b354 <parse_args+0xa88>
 804aba7:	e9 09 00 00 00       	jmpq   804abb5 <parse_args+0x2e9>
 804abac:	83 f9 01             	cmp    $0x1,%ecx
 804abaf:	0f 85 3f 00 00 00    	jne    804abf4 <parse_args+0x328>
 804abb5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804abb9:	48 89 c6             	mov    %rax,%rsi
 804abbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804abc0:	48 89 c7             	mov    %rax,%rdi
 804abc3:	b8 00 00 00 00       	mov    $0x0,%eax
 804abc8:	e8 e8 46 00 00       	callq  804f2b5 <tcc_add_include_path>
 804abcd:	83 f8 00             	cmp    $0x0,%eax
 804abd0:	0f 8d 14 00 00 00    	jge    804abea <parse_args+0x31e>
 804abd6:	48 8d 05 99 eb 03 00 	lea    0x3eb99(%rip),%rax        # 8089776 <L.155>
 804abdd:	48 89 c7             	mov    %rax,%rdi
 804abe0:	b8 00 00 00 00       	mov    $0x0,%eax
 804abe5:	e8 dd 2a 00 00       	callq  804d6c7 <tcc_error>
 804abea:	e9 a2 06 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804abef:	e9 09 00 00 00       	jmpq   804abfd <parse_args+0x331>
 804abf4:	83 f9 02             	cmp    $0x2,%ecx
 804abf7:	0f 85 22 00 00 00    	jne    804ac1f <parse_args+0x353>
 804abfd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ac01:	48 89 c6             	mov    %rax,%rsi
 804ac04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ac08:	48 89 c7             	mov    %rax,%rdi
 804ac0b:	b8 00 00 00 00       	mov    $0x0,%eax
 804ac10:	e8 12 fc ff ff       	callq  804a827 <parse_option_D>
 804ac15:	e9 77 06 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ac1a:	e9 09 00 00 00       	jmpq   804ac28 <parse_args+0x35c>
 804ac1f:	83 f9 03             	cmp    $0x3,%ecx
 804ac22:	0f 85 22 00 00 00    	jne    804ac4a <parse_args+0x37e>
 804ac28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ac2c:	48 89 c6             	mov    %rax,%rsi
 804ac2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ac33:	48 89 c7             	mov    %rax,%rdi
 804ac36:	b8 00 00 00 00       	mov    $0x0,%eax
 804ac3b:	e8 1a 3a 00 00       	callq  804e65a <tcc_undefine_symbol>
 804ac40:	e9 4c 06 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ac45:	e9 09 00 00 00       	jmpq   804ac53 <parse_args+0x387>
 804ac4a:	83 f9 04             	cmp    $0x4,%ecx
 804ac4d:	0f 85 22 00 00 00    	jne    804ac75 <parse_args+0x3a9>
 804ac53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ac57:	48 89 c6             	mov    %rax,%rsi
 804ac5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ac5e:	48 89 c7             	mov    %rax,%rdi
 804ac61:	b8 00 00 00 00       	mov    $0x0,%eax
 804ac66:	e8 81 4c 00 00       	callq  804f8ec <tcc_add_library_path>
 804ac6b:	e9 21 06 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ac70:	e9 09 00 00 00       	jmpq   804ac7e <parse_args+0x3b2>
 804ac75:	83 f9 05             	cmp    $0x5,%ecx
 804ac78:	0f 85 22 00 00 00    	jne    804aca0 <parse_args+0x3d4>
 804ac7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ac82:	48 89 c6             	mov    %rax,%rsi
 804ac85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ac89:	48 89 c7             	mov    %rax,%rdi
 804ac8c:	b8 00 00 00 00       	mov    $0x0,%eax
 804ac91:	e8 b0 5e 00 00       	callq  8050b46 <tcc_set_lib_path>
 804ac96:	e9 f6 05 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ac9b:	e9 09 00 00 00       	jmpq   804aca9 <parse_args+0x3dd>
 804aca0:	83 f9 06             	cmp    $0x6,%ecx
 804aca3:	0f 85 48 00 00 00    	jne    804acf1 <parse_args+0x425>
 804aca9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804acad:	49 89 c2             	mov    %rax,%r10
 804acb0:	48 8d 05 11 34 04 00 	lea    0x43411(%rip),%rax        # 808e0c8 <nb_files>
 804acb7:	48 89 c6             	mov    %rax,%rsi
 804acba:	48 8d 05 ff 33 04 00 	lea    0x433ff(%rip),%rax        # 808e0c0 <files>
 804acc1:	48 89 c7             	mov    %rax,%rdi
 804acc4:	4c 89 d2             	mov    %r10,%rdx
 804acc7:	b8 00 00 00 00       	mov    $0x0,%eax
 804accc:	e8 32 14 00 00       	callq  804c103 <dynarray_add>
 804acd1:	8b 05 f5 33 04 00    	mov    0x433f5(%rip),%eax        # 808e0cc <nb_libraries>
 804acd7:	48 89 c1             	mov    %rax,%rcx
 804acda:	83 c0 01             	add    $0x1,%eax
 804acdd:	4c 8b 1d 44 31 04 00 	mov    0x43144(%rip),%r11        # 808de28 <_GLOBAL_OFFSET_TABLE_+0x1a8>
 804ace4:	41 89 03             	mov    %eax,(%r11)
 804ace7:	e9 a5 05 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804acec:	e9 09 00 00 00       	jmpq   804acfa <parse_args+0x42e>
 804acf1:	83 f9 1d             	cmp    $0x1d,%ecx
 804acf4:	0f 85 2d 00 00 00    	jne    804ad27 <parse_args+0x45b>
 804acfa:	b8 01 00 00 00       	mov    $0x1,%eax
 804acff:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 804ad02:	48 8d 05 84 ea 03 00 	lea    0x3ea84(%rip),%rax        # 808978d <L.156>
 804ad09:	48 89 c6             	mov    %rax,%rsi
 804ad0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ad10:	48 89 c7             	mov    %rax,%rdi
 804ad13:	b8 00 00 00 00       	mov    $0x0,%eax
 804ad18:	e8 0a fb ff ff       	callq  804a827 <parse_option_D>
 804ad1d:	e9 6f 05 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ad22:	e9 09 00 00 00       	jmpq   804ad30 <parse_args+0x464>
 804ad27:	83 f9 07             	cmp    $0x7,%ecx
 804ad2a:	0f 85 19 00 00 00    	jne    804ad49 <parse_args+0x47d>
 804ad30:	b8 01 00 00 00       	mov    $0x1,%eax
 804ad35:	4c 8b 1d f4 30 04 00 	mov    0x430f4(%rip),%r11        # 808de30 <_GLOBAL_OFFSET_TABLE_+0x1b0>
 804ad3c:	41 89 03             	mov    %eax,(%r11)
 804ad3f:	e9 4d 05 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ad44:	e9 09 00 00 00       	jmpq   804ad52 <parse_args+0x486>
 804ad49:	83 f9 08             	cmp    $0x8,%ecx
 804ad4c:	0f 85 28 00 00 00    	jne    804ad7a <parse_args+0x4ae>
 804ad52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ad56:	48 89 c7             	mov    %rax,%rdi
 804ad59:	b8 00 00 00 00       	mov    $0x0,%eax
 804ad5e:	e8 6d cd 03 00       	callq  8087ad0 <__preinit_array_end+0x30>
 804ad63:	48 89 c7             	mov    %rax,%rdi
 804ad66:	b8 00 00 00 00       	mov    $0x0,%eax
 804ad6b:	e8 b9 1b 03 00       	callq  807c929 <tcc_set_num_callers>
 804ad70:	e9 1c 05 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ad75:	e9 09 00 00 00       	jmpq   804ad83 <parse_args+0x4b7>
 804ad7a:	83 f9 0a             	cmp    $0xa,%ecx
 804ad7d:	0f 85 22 00 00 00    	jne    804ada5 <parse_args+0x4d9>
 804ad83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ad87:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 804ad8e:	00 00 00 
 804ad91:	48 01 c8             	add    %rcx,%rax
 804ad94:	b9 01 00 00 00       	mov    $0x1,%ecx
 804ad99:	89 08                	mov    %ecx,(%rax)
 804ad9b:	e9 f1 04 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ada0:	e9 09 00 00 00       	jmpq   804adae <parse_args+0x4e2>
 804ada5:	83 f9 0b             	cmp    $0xb,%ecx
 804ada8:	0f 85 28 00 00 00    	jne    804add6 <parse_args+0x50a>
 804adae:	b8 01 00 00 00       	mov    $0x1,%eax
 804adb3:	4c 8b 1d 7e 30 04 00 	mov    0x4307e(%rip),%r11        # 808de38 <_GLOBAL_OFFSET_TABLE_+0x1b8>
 804adba:	41 89 03             	mov    %eax,(%r11)
 804adbd:	b8 03 00 00 00       	mov    $0x3,%eax
 804adc2:	4c 8b 1d 77 30 04 00 	mov    0x43077(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804adc9:	41 89 03             	mov    %eax,(%r11)
 804adcc:	e9 c0 04 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804add1:	e9 09 00 00 00       	jmpq   804addf <parse_args+0x513>
 804add6:	83 f9 0c             	cmp    $0xc,%ecx
 804add9:	0f 85 22 00 00 00    	jne    804ae01 <parse_args+0x535>
 804addf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ade3:	48 b9 e4 00 00 00 00 	movabs $0xe4,%rcx
 804adea:	00 00 00 
 804aded:	48 01 c8             	add    %rcx,%rax
 804adf0:	b9 01 00 00 00       	mov    $0x1,%ecx
 804adf5:	89 08                	mov    %ecx,(%rax)
 804adf7:	e9 95 04 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804adfc:	e9 09 00 00 00       	jmpq   804ae0a <parse_args+0x53e>
 804ae01:	83 f9 0d             	cmp    $0xd,%ecx
 804ae04:	0f 85 19 00 00 00    	jne    804ae23 <parse_args+0x557>
 804ae0a:	b8 02 00 00 00       	mov    $0x2,%eax
 804ae0f:	4c 8b 1d 2a 30 04 00 	mov    0x4302a(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804ae16:	41 89 03             	mov    %eax,(%r11)
 804ae19:	e9 73 04 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ae1e:	e9 09 00 00 00       	jmpq   804ae2c <parse_args+0x560>
 804ae23:	83 f9 0e             	cmp    $0xe,%ecx
 804ae26:	0f 85 22 00 00 00    	jne    804ae4e <parse_args+0x582>
 804ae2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ae30:	48 b9 e8 00 00 00 00 	movabs $0xe8,%rcx
 804ae37:	00 00 00 
 804ae3a:	48 01 c8             	add    %rcx,%rax
 804ae3d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 804ae41:	48 89 08             	mov    %rcx,(%rax)
 804ae44:	e9 48 04 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ae49:	e9 09 00 00 00       	jmpq   804ae57 <parse_args+0x58b>
 804ae4e:	83 f9 15             	cmp    $0x15,%ecx
 804ae51:	0f 85 18 00 00 00    	jne    804ae6f <parse_args+0x5a3>
 804ae57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ae5b:	4c 8b 1d e6 2f 04 00 	mov    0x42fe6(%rip),%r11        # 808de48 <_GLOBAL_OFFSET_TABLE_+0x1c8>
 804ae62:	49 89 03             	mov    %rax,(%r11)
 804ae65:	e9 27 04 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804ae6a:	e9 09 00 00 00       	jmpq   804ae78 <parse_args+0x5ac>
 804ae6f:	83 f9 0f             	cmp    $0xf,%ecx
 804ae72:	0f 85 34 00 00 00    	jne    804aeac <parse_args+0x5e0>
 804ae78:	b8 01 00 00 00       	mov    $0x1,%eax
 804ae7d:	4c 8b 1d b4 2f 04 00 	mov    0x42fb4(%rip),%r11        # 808de38 <_GLOBAL_OFFSET_TABLE_+0x1b8>
 804ae84:	41 89 03             	mov    %eax,(%r11)
 804ae87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804ae8b:	48 89 c7             	mov    %rax,%rdi
 804ae8e:	b8 00 00 00 00       	mov    $0x0,%eax
 804ae93:	e8 04 12 00 00       	callq  804c09c <tcc_strdup>
 804ae98:	4c 8b 1d b1 2f 04 00 	mov    0x42fb1(%rip),%r11        # 808de50 <_GLOBAL_OFFSET_TABLE_+0x1d0>
 804ae9f:	49 89 03             	mov    %rax,(%r11)
 804aea2:	e9 ea 03 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804aea7:	e9 09 00 00 00       	jmpq   804aeb5 <parse_args+0x5e9>
 804aeac:	83 f9 10             	cmp    $0x10,%ecx
 804aeaf:	0f 85 28 00 00 00    	jne    804aedd <parse_args+0x611>
 804aeb5:	b8 01 00 00 00       	mov    $0x1,%eax
 804aeba:	4c 8b 1d 97 2f 04 00 	mov    0x42f97(%rip),%r11        # 808de58 <_GLOBAL_OFFSET_TABLE_+0x1d8>
 804aec1:	41 89 03             	mov    %eax,(%r11)
 804aec4:	b8 03 00 00 00       	mov    $0x3,%eax
 804aec9:	4c 8b 1d 70 2f 04 00 	mov    0x42f70(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804aed0:	41 89 03             	mov    %eax,(%r11)
 804aed3:	e9 b9 03 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804aed8:	e9 09 00 00 00       	jmpq   804aee6 <parse_args+0x61a>
 804aedd:	83 f9 17             	cmp    $0x17,%ecx
 804aee0:	0f 85 22 00 00 00    	jne    804af08 <parse_args+0x63c>
 804aee6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804aeea:	48 89 c6             	mov    %rax,%rsi
 804aeed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804aef1:	48 89 c7             	mov    %rax,%rdi
 804aef4:	b8 00 00 00 00       	mov    $0x0,%eax
 804aef9:	e8 1c 44 00 00       	callq  804f31a <tcc_add_sysinclude_path>
 804aefe:	e9 8e 03 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804af03:	e9 09 00 00 00       	jmpq   804af11 <parse_args+0x645>
 804af08:	83 f9 18             	cmp    $0x18,%ecx
 804af0b:	0f 85 22 00 00 00    	jne    804af33 <parse_args+0x667>
 804af11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804af15:	48 b9 d8 00 00 00 00 	movabs $0xd8,%rcx
 804af1c:	00 00 00 
 804af1f:	48 01 c8             	add    %rcx,%rax
 804af22:	b9 01 00 00 00       	mov    $0x1,%ecx
 804af27:	89 08                	mov    %ecx,(%rax)
 804af29:	e9 63 03 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804af2e:	e9 09 00 00 00       	jmpq   804af3c <parse_args+0x670>
 804af33:	83 f9 19             	cmp    $0x19,%ecx
 804af36:	0f 85 22 00 00 00    	jne    804af5e <parse_args+0x692>
 804af3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804af40:	48 b9 dc 00 00 00 00 	movabs $0xdc,%rcx
 804af47:	00 00 00 
 804af4a:	48 01 c8             	add    %rcx,%rax
 804af4d:	b9 01 00 00 00       	mov    $0x1,%ecx
 804af52:	89 08                	mov    %ecx,(%rax)
 804af54:	e9 38 03 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804af59:	e9 09 00 00 00       	jmpq   804af67 <parse_args+0x69b>
 804af5e:	83 f9 1a             	cmp    $0x1a,%ecx
 804af61:	0f 85 19 00 00 00    	jne    804af80 <parse_args+0x6b4>
 804af67:	b8 01 00 00 00       	mov    $0x1,%eax
 804af6c:	4c 8b 1d ed 2e 04 00 	mov    0x42eed(%rip),%r11        # 808de60 <_GLOBAL_OFFSET_TABLE_+0x1e0>
 804af73:	41 89 03             	mov    %eax,(%r11)
 804af76:	e9 16 03 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804af7b:	e9 09 00 00 00       	jmpq   804af89 <parse_args+0x6bd>
 804af80:	83 f9 1e             	cmp    $0x1e,%ecx
 804af83:	0f 85 70 00 00 00    	jne    804aff9 <parse_args+0x72d>
 804af89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804af8d:	48 89 c6             	mov    %rax,%rsi
 804af90:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 804af94:	48 89 c7             	mov    %rax,%rdi
 804af97:	b8 00 00 00 00       	mov    $0x0,%eax
 804af9c:	e8 5f f5 ff ff       	callq  804a500 <expand_args>
 804afa1:	89 45 b0             	mov    %eax,-0x50(%rbp)
 804afa4:	8b 45 b0             	mov    -0x50(%rbp),%eax
 804afa7:	83 f8 00             	cmp    $0x0,%eax
 804afaa:	0f 8e 21 00 00 00    	jle    804afd1 <parse_args+0x705>
 804afb0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804afb4:	49 89 c2             	mov    %rax,%r10
 804afb7:	8b 45 b0             	mov    -0x50(%rbp),%eax
 804afba:	48 89 c6             	mov    %rax,%rsi
 804afbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804afc1:	48 89 c7             	mov    %rax,%rdi
 804afc4:	4c 89 d2             	mov    %r10,%rdx
 804afc7:	b8 00 00 00 00       	mov    $0x0,%eax
 804afcc:	e8 fb f8 ff ff       	callq  804a8cc <parse_args>
 804afd1:	b8 00 00 00 00       	mov    $0x0,%eax
 804afd6:	4c 8b 1d 5b 2e 04 00 	mov    0x42e5b(%rip),%r11        # 808de38 <_GLOBAL_OFFSET_TABLE_+0x1b8>
 804afdd:	41 89 03             	mov    %eax,(%r11)
 804afe0:	b8 00 00 00 00       	mov    $0x0,%eax
 804afe5:	4c 8b 1d 54 2e 04 00 	mov    0x42e54(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804afec:	41 89 03             	mov    %eax,(%r11)
 804afef:	e9 9d 02 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804aff4:	e9 09 00 00 00       	jmpq   804b002 <parse_args+0x736>
 804aff9:	83 f9 1f             	cmp    $0x1f,%ecx
 804affc:	0f 85 46 00 00 00    	jne    804b048 <parse_args+0x77c>
 804b002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b006:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804b00d:	00 00 00 
 804b010:	48 01 c8             	add    %rcx,%rax
 804b013:	8b 08                	mov    (%rax),%ecx
 804b015:	83 c1 01             	add    $0x1,%ecx
 804b018:	89 08                	mov    %ecx,(%rax)
 804b01a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804b01e:	48 89 c1             	mov    %rax,%rcx
 804b021:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804b028:	00 00 00 
 804b02b:	48 01 d0             	add    %rdx,%rax
 804b02e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804b032:	0f be 01             	movsbl (%rcx),%eax
 804b035:	83 f8 76             	cmp    $0x76,%eax
 804b038:	0f 84 c4 ff ff ff    	je     804b002 <parse_args+0x736>
 804b03e:	e9 4e 02 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b043:	e9 09 00 00 00       	jmpq   804b051 <parse_args+0x785>
 804b048:	83 f9 16             	cmp    $0x16,%ecx
 804b04b:	0f 85 56 00 00 00    	jne    804b0a7 <parse_args+0x7db>
 804b051:	b8 01 00 00 00       	mov    $0x1,%eax
 804b056:	49 89 c2             	mov    %rax,%r10
 804b059:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804b05d:	48 89 c6             	mov    %rax,%rsi
 804b060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b064:	48 89 c7             	mov    %rax,%rdi
 804b067:	4c 89 d2             	mov    %r10,%rdx
 804b06a:	b8 00 00 00 00       	mov    $0x0,%eax
 804b06f:	e8 ac 51 00 00       	callq  8050220 <tcc_set_flag>
 804b074:	83 f8 00             	cmp    $0x0,%eax
 804b077:	0f 8d 20 00 00 00    	jge    804b09d <parse_args+0x7d1>
 804b07d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b081:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 804b088:	00 00 00 
 804b08b:	48 01 c8             	add    %rcx,%rax
 804b08e:	8b 08                	mov    (%rax),%ecx
 804b090:	85 c9                	test   %ecx,%ecx
 804b092:	0f 84 05 00 00 00    	je     804b09d <parse_args+0x7d1>
 804b098:	e9 d4 01 00 00       	jmpq   804b271 <parse_args+0x9a5>
 804b09d:	e9 ef 01 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b0a2:	e9 09 00 00 00       	jmpq   804b0b0 <parse_args+0x7e4>
 804b0a7:	83 f9 13             	cmp    $0x13,%ecx
 804b0aa:	0f 85 56 00 00 00    	jne    804b106 <parse_args+0x83a>
 804b0b0:	b8 01 00 00 00       	mov    $0x1,%eax
 804b0b5:	49 89 c2             	mov    %rax,%r10
 804b0b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804b0bc:	48 89 c6             	mov    %rax,%rsi
 804b0bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b0c3:	48 89 c7             	mov    %rax,%rdi
 804b0c6:	4c 89 d2             	mov    %r10,%rdx
 804b0c9:	b8 00 00 00 00       	mov    $0x0,%eax
 804b0ce:	e8 3c 50 00 00       	callq  805010f <tcc_set_warning>
 804b0d3:	83 f8 00             	cmp    $0x0,%eax
 804b0d6:	0f 8d 20 00 00 00    	jge    804b0fc <parse_args+0x830>
 804b0dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b0e0:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 804b0e7:	00 00 00 
 804b0ea:	48 01 c8             	add    %rcx,%rax
 804b0ed:	8b 08                	mov    (%rax),%ecx
 804b0ef:	85 c9                	test   %ecx,%ecx
 804b0f1:	0f 84 05 00 00 00    	je     804b0fc <parse_args+0x830>
 804b0f7:	e9 75 01 00 00       	jmpq   804b271 <parse_args+0x9a5>
 804b0fc:	e9 90 01 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b101:	e9 09 00 00 00       	jmpq   804b10f <parse_args+0x843>
 804b106:	83 f9 20             	cmp    $0x20,%ecx
 804b109:	0f 85 22 00 00 00    	jne    804b131 <parse_args+0x865>
 804b10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b113:	48 b9 40 01 00 00 00 	movabs $0x140,%rcx
 804b11a:	00 00 00 
 804b11d:	48 01 c8             	add    %rcx,%rax
 804b120:	b9 01 00 00 00       	mov    $0x1,%ecx
 804b125:	89 08                	mov    %ecx,(%rax)
 804b127:	e9 65 01 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b12c:	e9 09 00 00 00       	jmpq   804b13a <parse_args+0x86e>
 804b131:	83 f9 1b             	cmp    $0x1b,%ecx
 804b134:	0f 85 22 00 00 00    	jne    804b15c <parse_args+0x890>
 804b13a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b13e:	48 b9 f8 00 00 00 00 	movabs $0xf8,%rcx
 804b145:	00 00 00 
 804b148:	48 01 c8             	add    %rcx,%rax
 804b14b:	b9 01 00 00 00       	mov    $0x1,%ecx
 804b150:	89 08                	mov    %ecx,(%rax)
 804b152:	e9 3a 01 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b157:	e9 09 00 00 00       	jmpq   804b165 <parse_args+0x899>
 804b15c:	83 f9 12             	cmp    $0x12,%ecx
 804b15f:	0f 85 7e 00 00 00    	jne    804b1e3 <parse_args+0x917>
 804b165:	8b 05 95 2f 04 00    	mov    0x42f95(%rip),%eax        # 808e100 <linker_arg>
 804b16b:	85 c0                	test   %eax,%eax
 804b16d:	0f 84 2f 00 00 00    	je     804b1a2 <parse_args+0x8d6>
 804b173:	8b 05 87 2f 04 00    	mov    0x42f87(%rip),%eax        # 808e100 <linker_arg>
 804b179:	83 c0 ff             	add    $0xffffffff,%eax
 804b17c:	4c 8b 1d e5 2c 04 00 	mov    0x42ce5(%rip),%r11        # 808de68 <_GLOBAL_OFFSET_TABLE_+0x1e8>
 804b183:	41 89 03             	mov    %eax,(%r11)
 804b186:	b8 2c 00 00 00       	mov    $0x2c,%eax
 804b18b:	48 89 c6             	mov    %rax,%rsi
 804b18e:	48 8d 05 6b 2f 04 00 	lea    0x42f6b(%rip),%rax        # 808e100 <linker_arg>
 804b195:	48 89 c7             	mov    %rax,%rdi
 804b198:	b8 00 00 00 00       	mov    $0x0,%eax
 804b19d:	e8 ab 60 00 00       	callq  805124d <cstr_ccat>
 804b1a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804b1a6:	48 89 c6             	mov    %rax,%rsi
 804b1a9:	48 8d 05 50 2f 04 00 	lea    0x42f50(%rip),%rax        # 808e100 <linker_arg>
 804b1b0:	48 89 c7             	mov    %rax,%rdi
 804b1b3:	b8 00 00 00 00       	mov    $0x0,%eax
 804b1b8:	e8 18 61 00 00       	callq  80512d5 <cstr_cat>
 804b1bd:	b8 00 00 00 00       	mov    $0x0,%eax
 804b1c2:	48 89 c6             	mov    %rax,%rsi
 804b1c5:	48 8d 05 34 2f 04 00 	lea    0x42f34(%rip),%rax        # 808e100 <linker_arg>
 804b1cc:	48 89 c7             	mov    %rax,%rdi
 804b1cf:	b8 00 00 00 00       	mov    $0x0,%eax
 804b1d4:	e8 74 60 00 00       	callq  805124d <cstr_ccat>
 804b1d9:	e9 b3 00 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b1de:	e9 09 00 00 00       	jmpq   804b1ec <parse_args+0x920>
 804b1e3:	83 f9 22             	cmp    $0x22,%ecx
 804b1e6:	0f 85 19 00 00 00    	jne    804b205 <parse_args+0x939>
 804b1ec:	b8 04 00 00 00       	mov    $0x4,%eax
 804b1f1:	4c 8b 1d 48 2c 04 00 	mov    0x42c48(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804b1f8:	41 89 03             	mov    %eax,(%r11)
 804b1fb:	e9 91 00 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b200:	e9 09 00 00 00       	jmpq   804b20e <parse_args+0x942>
 804b205:	83 f9 23             	cmp    $0x23,%ecx
 804b208:	0f 85 19 00 00 00    	jne    804b227 <parse_args+0x95b>
 804b20e:	b8 01 00 00 00       	mov    $0x1,%eax
 804b213:	4c 8b 1d 56 2c 04 00 	mov    0x42c56(%rip),%r11        # 808de70 <_GLOBAL_OFFSET_TABLE_+0x1f0>
 804b21a:	41 89 03             	mov    %eax,(%r11)
 804b21d:	e9 6f 00 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b222:	e9 09 00 00 00       	jmpq   804b230 <parse_args+0x964>
 804b227:	83 f9 24             	cmp    $0x24,%ecx
 804b22a:	0f 85 18 00 00 00    	jne    804b248 <parse_args+0x97c>
 804b230:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804b234:	4c 8b 1d 3d 2c 04 00 	mov    0x42c3d(%rip),%r11        # 808de78 <_GLOBAL_OFFSET_TABLE_+0x1f8>
 804b23b:	49 89 03             	mov    %rax,(%r11)
 804b23e:	e9 4e 00 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b243:	e9 09 00 00 00       	jmpq   804b251 <parse_args+0x985>
 804b248:	83 f9 25             	cmp    $0x25,%ecx
 804b24b:	0f 85 05 00 00 00    	jne    804b256 <parse_args+0x98a>
 804b251:	e9 3b 00 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b25a:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 804b261:	00 00 00 
 804b264:	48 01 c8             	add    %rcx,%rax
 804b267:	8b 08                	mov    (%rax),%ecx
 804b269:	85 c9                	test   %ecx,%ecx
 804b26b:	0f 84 1b 00 00 00    	je     804b28c <parse_args+0x9c0>
 804b271:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804b275:	48 89 c6             	mov    %rax,%rsi
 804b278:	48 8d 05 19 e5 03 00 	lea    0x3e519(%rip),%rax        # 8089798 <L.157>
 804b27f:	48 89 c7             	mov    %rax,%rdi
 804b282:	b8 00 00 00 00       	mov    $0x0,%eax
 804b287:	e8 73 26 00 00       	callq  804d8ff <tcc_warning>
 804b28c:	e9 00 00 00 00       	jmpq   804b291 <parse_args+0x9c5>
 804b291:	e9 71 f6 ff ff       	jmpq   804a907 <parse_args+0x3b>
 804b296:	b8 01 00 00 00       	mov    $0x1,%eax
 804b29b:	49 89 c2             	mov    %rax,%r10
 804b29e:	48 8b 05 63 2e 04 00 	mov    0x42e63(%rip),%rax        # 808e108 <linker_arg+0x8>
 804b2a5:	48 89 c6             	mov    %rax,%rsi
 804b2a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804b2ac:	48 89 c7             	mov    %rax,%rdi
 804b2af:	4c 89 d2             	mov    %r10,%rdx
 804b2b2:	b8 00 00 00 00       	mov    $0x0,%eax
 804b2b7:	e8 e0 51 00 00       	callq  805049c <tcc_set_linker>
 804b2bc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804b2c0:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804b2c7:	00 00 00 
 804b2ca:	48 89 c2             	mov    %rax,%rdx
 804b2cd:	48 39 d1             	cmp    %rdx,%rcx
 804b2d0:	0f 84 1b 00 00 00    	je     804b2f1 <parse_args+0xa25>
 804b2d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804b2da:	48 89 c6             	mov    %rax,%rsi
 804b2dd:	48 8d 05 cc e4 03 00 	lea    0x3e4cc(%rip),%rax        # 80897b0 <L.158>
 804b2e4:	48 89 c7             	mov    %rax,%rdi
 804b2e7:	b8 00 00 00 00       	mov    $0x0,%eax
 804b2ec:	e8 d6 23 00 00       	callq  804d6c7 <tcc_error>
 804b2f1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 804b2f4:	85 c0                	test   %eax,%eax
 804b2f6:	0f 84 50 00 00 00    	je     804b34c <parse_args+0xa80>
 804b2fc:	8b 05 d6 2d 04 00    	mov    0x42dd6(%rip),%eax        # 808e0d8 <output_type>
 804b302:	83 f8 03             	cmp    $0x3,%eax
 804b305:	0f 84 41 00 00 00    	je     804b34c <parse_args+0xa80>
 804b30b:	48 8d 05 bd e4 03 00 	lea    0x3e4bd(%rip),%rax        # 80897cf <L.159>
 804b312:	49 89 c2             	mov    %rax,%r10
 804b315:	48 8d 05 ac 2d 04 00 	lea    0x42dac(%rip),%rax        # 808e0c8 <nb_files>
 804b31c:	48 89 c6             	mov    %rax,%rsi
 804b31f:	48 8d 05 9a 2d 04 00 	lea    0x42d9a(%rip),%rax        # 808e0c0 <files>
 804b326:	48 89 c7             	mov    %rax,%rdi
 804b329:	4c 89 d2             	mov    %r10,%rdx
 804b32c:	b8 00 00 00 00       	mov    $0x0,%eax
 804b331:	e8 cd 0d 00 00       	callq  804c103 <dynarray_add>
 804b336:	8b 05 90 2d 04 00    	mov    0x42d90(%rip),%eax        # 808e0cc <nb_libraries>
 804b33c:	48 89 c1             	mov    %rax,%rcx
 804b33f:	83 c0 01             	add    $0x1,%eax
 804b342:	4c 8b 1d df 2a 04 00 	mov    0x42adf(%rip),%r11        # 808de28 <_GLOBAL_OFFSET_TABLE_+0x1a8>
 804b349:	41 89 03             	mov    %eax,(%r11)
 804b34c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804b34f:	e9 00 00 00 00       	jmpq   804b354 <parse_args+0xa88>
 804b354:	c9                   	leaveq 
 804b355:	c3                   	retq   

000000000804b356 <main>:
 804b356:	55                   	push   %rbp
 804b357:	48 89 e5             	mov    %rsp,%rbp
 804b35a:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 804b361:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804b365:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804b369:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804b370:	00 00 00 
 804b373:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 804b377:	b8 00 00 00 00       	mov    $0x0,%eax
 804b37c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804b380:	b8 00 00 00 00       	mov    $0x0,%eax
 804b385:	e8 73 34 00 00       	callq  804e7fd <tcc_new>
 804b38a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804b38e:	b8 01 00 00 00       	mov    $0x1,%eax
 804b393:	4c 8b 1d a6 2a 04 00 	mov    0x42aa6(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804b39a:	41 89 03             	mov    %eax,(%r11)
 804b39d:	b8 00 00 00 00       	mov    $0x0,%eax
 804b3a2:	4c 8b 1d a7 2a 04 00 	mov    0x42aa7(%rip),%r11        # 808de50 <_GLOBAL_OFFSET_TABLE_+0x1d0>
 804b3a9:	49 89 03             	mov    %rax,(%r11)
 804b3ac:	b8 01 00 00 00       	mov    $0x1,%eax
 804b3b1:	4c 8b 1d 80 2a 04 00 	mov    0x42a80(%rip),%r11        # 808de38 <_GLOBAL_OFFSET_TABLE_+0x1b8>
 804b3b8:	41 89 03             	mov    %eax,(%r11)
 804b3bb:	b8 00 00 00 00       	mov    $0x0,%eax
 804b3c0:	4c 8b 1d b9 2a 04 00 	mov    0x42ab9(%rip),%r11        # 808de80 <_GLOBAL_OFFSET_TABLE_+0x200>
 804b3c7:	49 89 03             	mov    %rax,(%r11)
 804b3ca:	b8 00 00 00 00       	mov    $0x0,%eax
 804b3cf:	4c 8b 1d b2 2a 04 00 	mov    0x42ab2(%rip),%r11        # 808de88 <_GLOBAL_OFFSET_TABLE_+0x208>
 804b3d6:	41 89 03             	mov    %eax,(%r11)
 804b3d9:	b8 00 00 00 00       	mov    $0x0,%eax
 804b3de:	4c 8b 1d 43 2a 04 00 	mov    0x42a43(%rip),%r11        # 808de28 <_GLOBAL_OFFSET_TABLE_+0x1a8>
 804b3e5:	41 89 03             	mov    %eax,(%r11)
 804b3e8:	b8 00 00 00 00       	mov    $0x0,%eax
 804b3ed:	4c 8b 1d 64 2a 04 00 	mov    0x42a64(%rip),%r11        # 808de58 <_GLOBAL_OFFSET_TABLE_+0x1d8>
 804b3f4:	41 89 03             	mov    %eax,(%r11)
 804b3f7:	b8 00 00 00 00       	mov    $0x0,%eax
 804b3fc:	4c 8b 1d 5d 2a 04 00 	mov    0x42a5d(%rip),%r11        # 808de60 <_GLOBAL_OFFSET_TABLE_+0x1e0>
 804b403:	41 89 03             	mov    %eax,(%r11)
 804b406:	b8 00 00 00 00       	mov    $0x0,%eax
 804b40b:	4c 8b 1d 36 2a 04 00 	mov    0x42a36(%rip),%r11        # 808de48 <_GLOBAL_OFFSET_TABLE_+0x1c8>
 804b412:	49 89 03             	mov    %rax,(%r11)
 804b415:	b8 00 00 00 00       	mov    $0x0,%eax
 804b41a:	89 45 d8             	mov    %eax,-0x28(%rbp)
 804b41d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804b420:	83 e8 01             	sub    $0x1,%eax
 804b423:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804b427:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804b42e:	00 00 00 
 804b431:	48 01 d1             	add    %rdx,%rcx
 804b434:	49 89 ca             	mov    %rcx,%r10
 804b437:	48 89 c6             	mov    %rax,%rsi
 804b43a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b43e:	48 89 c7             	mov    %rax,%rdi
 804b441:	4c 89 d2             	mov    %r10,%rdx
 804b444:	b8 00 00 00 00       	mov    $0x0,%eax
 804b449:	e8 7e f4 ff ff       	callq  804a8cc <parse_args>
 804b44e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 804b451:	48 8b 05 a0 2c 04 00 	mov    0x42ca0(%rip),%rax        # 808e0f8 <m_option>
 804b458:	85 c0                	test   %eax,%eax
 804b45a:	0f 84 25 00 00 00    	je     804b485 <main+0x12f>
 804b460:	48 8b 05 91 2c 04 00 	mov    0x42c91(%rip),%rax        # 808e0f8 <m_option>
 804b467:	49 89 c2             	mov    %rax,%r10
 804b46a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804b46e:	48 89 c6             	mov    %rax,%rsi
 804b471:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b475:	48 89 c7             	mov    %rax,%rdi
 804b478:	4c 89 d2             	mov    %r10,%rdx
 804b47b:	b8 00 00 00 00       	mov    $0x0,%eax
 804b480:	e8 df f1 ff ff       	callq  804a664 <exec_other_tcc>
 804b485:	8b 05 49 2c 04 00    	mov    0x42c49(%rip),%eax        # 808e0d4 <print_search_dirs>
 804b48b:	85 c0                	test   %eax,%eax
 804b48d:	0f 84 35 00 00 00    	je     804b4c8 <main+0x172>
 804b493:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b497:	48 b9 50 01 00 00 00 	movabs $0x150,%rcx
 804b49e:	00 00 00 
 804b4a1:	48 01 c8             	add    %rcx,%rax
 804b4a4:	48 8b 08             	mov    (%rax),%rcx
 804b4a7:	48 89 ce             	mov    %rcx,%rsi
 804b4aa:	48 8d 05 28 e3 03 00 	lea    0x3e328(%rip),%rax        # 80897d9 <L.160>
 804b4b1:	48 89 c7             	mov    %rax,%rdi
 804b4b4:	b8 00 00 00 00       	mov    $0x0,%eax
 804b4b9:	e8 02 c6 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 804b4be:	b8 00 00 00 00       	mov    $0x0,%eax
 804b4c3:	e9 c8 05 00 00       	jmpq   804ba90 <main+0x73a>
 804b4c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b4cc:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804b4d3:	00 00 00 
 804b4d6:	48 01 c8             	add    %rcx,%rax
 804b4d9:	8b 08                	mov    (%rax),%ecx
 804b4db:	85 c9                	test   %ecx,%ecx
 804b4dd:	0f 84 1e 00 00 00    	je     804b501 <main+0x1ab>
 804b4e3:	48 8d 05 0d e3 03 00 	lea    0x3e30d(%rip),%rax        # 80897f7 <L.162>
 804b4ea:	48 89 c6             	mov    %rax,%rsi
 804b4ed:	48 8d 05 f3 e2 03 00 	lea    0x3e2f3(%rip),%rax        # 80897e7 <L.161>
 804b4f4:	48 89 c7             	mov    %rax,%rdi
 804b4f7:	b8 00 00 00 00       	mov    $0x0,%eax
 804b4fc:	e8 bf c5 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 804b501:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804b504:	83 f8 00             	cmp    $0x0,%eax
 804b507:	0f 84 14 00 00 00    	je     804b521 <main+0x1cb>
 804b50d:	8b 05 b5 2b 04 00    	mov    0x42bb5(%rip),%eax        # 808e0c8 <nb_files>
 804b513:	83 f8 00             	cmp    $0x0,%eax
 804b516:	0f 84 05 00 00 00    	je     804b521 <main+0x1cb>
 804b51c:	e9 44 00 00 00       	jmpq   804b565 <main+0x20f>
 804b521:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804b524:	85 c0                	test   %eax,%eax
 804b526:	0f 84 25 00 00 00    	je     804b551 <main+0x1fb>
 804b52c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b530:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804b537:	00 00 00 
 804b53a:	48 01 c8             	add    %rcx,%rax
 804b53d:	8b 08                	mov    (%rax),%ecx
 804b53f:	85 c9                	test   %ecx,%ecx
 804b541:	0f 84 0a 00 00 00    	je     804b551 <main+0x1fb>
 804b547:	b8 00 00 00 00       	mov    $0x0,%eax
 804b54c:	e9 3f 05 00 00       	jmpq   804ba90 <main+0x73a>
 804b551:	b8 00 00 00 00       	mov    $0x0,%eax
 804b556:	e8 68 ef ff ff       	callq  804a4c3 <help>
 804b55b:	b8 01 00 00 00       	mov    $0x1,%eax
 804b560:	e9 2b 05 00 00       	jmpq   804ba90 <main+0x73a>
 804b565:	8b 05 5d 2b 04 00    	mov    0x42b5d(%rip),%eax        # 808e0c8 <nb_files>
 804b56b:	8b 0d 5b 2b 04 00    	mov    0x42b5b(%rip),%ecx        # 808e0cc <nb_libraries>
 804b571:	48 29 c8             	sub    %rcx,%rax
 804b574:	89 45 dc             	mov    %eax,-0x24(%rbp)
 804b577:	48 8b 05 62 2b 04 00 	mov    0x42b62(%rip),%rax        # 808e0e0 <outfile>
 804b57e:	85 c0                	test   %eax,%eax
 804b580:	0f 84 1e 00 00 00    	je     804b5a4 <main+0x24e>
 804b586:	8b 05 4c 2b 04 00    	mov    0x42b4c(%rip),%eax        # 808e0d8 <output_type>
 804b58c:	83 f8 00             	cmp    $0x0,%eax
 804b58f:	0f 85 0f 00 00 00    	jne    804b5a4 <main+0x24e>
 804b595:	b8 01 00 00 00       	mov    $0x1,%eax
 804b59a:	4c 8b 1d 9f 28 04 00 	mov    0x4289f(%rip),%r11        # 808de40 <_GLOBAL_OFFSET_TABLE_+0x1c0>
 804b5a1:	41 89 03             	mov    %eax,(%r11)
 804b5a4:	8b 05 2e 2b 04 00    	mov    0x42b2e(%rip),%eax        # 808e0d8 <output_type>
 804b5aa:	83 f8 03             	cmp    $0x3,%eax
 804b5ad:	0f 85 56 00 00 00    	jne    804b609 <main+0x2b3>
 804b5b3:	8b 05 23 2b 04 00    	mov    0x42b23(%rip),%eax        # 808e0dc <reloc_output>
 804b5b9:	85 c0                	test   %eax,%eax
 804b5bb:	0f 84 05 00 00 00    	je     804b5c6 <main+0x270>
 804b5c1:	e9 43 00 00 00       	jmpq   804b609 <main+0x2b3>
 804b5c6:	8b 45 dc             	mov    -0x24(%rbp),%eax
 804b5c9:	83 f8 01             	cmp    $0x1,%eax
 804b5cc:	0f 84 14 00 00 00    	je     804b5e6 <main+0x290>
 804b5d2:	48 8d 05 25 e2 03 00 	lea    0x3e225(%rip),%rax        # 80897fe <L.163>
 804b5d9:	48 89 c7             	mov    %rax,%rdi
 804b5dc:	b8 00 00 00 00       	mov    $0x0,%eax
 804b5e1:	e8 e1 20 00 00       	callq  804d6c7 <tcc_error>
 804b5e6:	8b 05 e0 2a 04 00    	mov    0x42ae0(%rip),%eax        # 808e0cc <nb_libraries>
 804b5ec:	83 f8 00             	cmp    $0x0,%eax
 804b5ef:	0f 84 14 00 00 00    	je     804b609 <main+0x2b3>
 804b5f5:	48 8d 05 28 e2 03 00 	lea    0x3e228(%rip),%rax        # 8089824 <L.164>
 804b5fc:	48 89 c7             	mov    %rax,%rdi
 804b5ff:	b8 00 00 00 00       	mov    $0x0,%eax
 804b604:	e8 be 20 00 00       	callq  804d6c7 <tcc_error>
 804b609:	8b 05 c9 2a 04 00    	mov    0x42ac9(%rip),%eax        # 808e0d8 <output_type>
 804b60f:	83 f8 04             	cmp    $0x4,%eax
 804b612:	0f 85 b0 00 00 00    	jne    804b6c8 <main+0x372>
 804b618:	48 8b 05 c1 2a 04 00 	mov    0x42ac1(%rip),%rax        # 808e0e0 <outfile>
 804b61f:	85 c0                	test   %eax,%eax
 804b621:	0f 84 05 00 00 00    	je     804b62c <main+0x2d6>
 804b627:	e9 23 00 00 00       	jmpq   804b64f <main+0x2f9>
 804b62c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b630:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 804b637:	00 00 00 
 804b63a:	48 01 c8             	add    %rcx,%rax
 804b63d:	48 8b 0d dc 27 04 00 	mov    0x427dc(%rip),%rcx        # 808de20 <_GLOBAL_OFFSET_TABLE_+0x1a0>
 804b644:	48 8b 09             	mov    (%rcx),%rcx
 804b647:	48 89 08             	mov    %rcx,(%rax)
 804b64a:	e9 79 00 00 00       	jmpq   804b6c8 <main+0x372>
 804b64f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b653:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 804b65a:	00 00 00 
 804b65d:	48 01 c8             	add    %rcx,%rax
 804b660:	48 8d 0d de e1 03 00 	lea    0x3e1de(%rip),%rcx        # 8089845 <L.165>
 804b667:	48 89 ce             	mov    %rcx,%rsi
 804b66a:	48 8b 0d 6f 2a 04 00 	mov    0x42a6f(%rip),%rcx        # 808e0e0 <outfile>
 804b671:	48 89 cf             	mov    %rcx,%rdi
 804b674:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 804b678:	b8 00 00 00 00       	mov    $0x0,%eax
 804b67d:	e8 7e c4 03 00       	callq  8087b00 <__preinit_array_end+0x60>
 804b682:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 804b686:	48 89 01             	mov    %rax,(%rcx)
 804b689:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b68d:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 804b694:	00 00 00 
 804b697:	48 01 c8             	add    %rcx,%rax
 804b69a:	48 8b 08             	mov    (%rax),%rcx
 804b69d:	85 c9                	test   %ecx,%ecx
 804b69f:	0f 84 05 00 00 00    	je     804b6aa <main+0x354>
 804b6a5:	e9 1e 00 00 00       	jmpq   804b6c8 <main+0x372>
 804b6aa:	48 8b 05 2f 2a 04 00 	mov    0x42a2f(%rip),%rax        # 808e0e0 <outfile>
 804b6b1:	48 89 c6             	mov    %rax,%rsi
 804b6b4:	48 8d 05 8c e1 03 00 	lea    0x3e18c(%rip),%rax        # 8089847 <L.166>
 804b6bb:	48 89 c7             	mov    %rax,%rdi
 804b6be:	b8 00 00 00 00       	mov    $0x0,%eax
 804b6c3:	e8 ff 1f 00 00       	callq  804d6c7 <tcc_error>
 804b6c8:	8b 05 56 d7 03 00    	mov    0x3d756(%rip),%eax        # 8088e24 <do_bench>
 804b6ce:	85 c0                	test   %eax,%eax
 804b6d0:	0f 84 0e 00 00 00    	je     804b6e4 <main+0x38e>
 804b6d6:	b8 00 00 00 00       	mov    $0x0,%eax
 804b6db:	e8 04 ee ff ff       	callq  804a4e4 <getclock_us>
 804b6e0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 804b6e4:	8b 05 ee 29 04 00    	mov    0x429ee(%rip),%eax        # 808e0d8 <output_type>
 804b6ea:	48 89 c6             	mov    %rax,%rsi
 804b6ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b6f1:	48 89 c7             	mov    %rax,%rdi
 804b6f4:	b8 00 00 00 00       	mov    $0x0,%eax
 804b6f9:	e8 ed 45 00 00       	callq  804fceb <tcc_set_output_type>
 804b6fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b702:	8b 0d d4 29 04 00    	mov    0x429d4(%rip),%ecx        # 808e0dc <reloc_output>
 804b708:	48 89 ca             	mov    %rcx,%rdx
 804b70b:	83 e2 01             	and    $0x1,%edx
 804b70e:	c1 e2 08             	shl    $0x8,%edx
 804b711:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 804b715:	8b 08                	mov    (%rax),%ecx
 804b717:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 804b71d:	48 09 ca             	or     %rcx,%rdx
 804b720:	89 10                	mov    %edx,(%rax)
 804b722:	b8 00 00 00 00       	mov    $0x0,%eax
 804b727:	89 45 ec             	mov    %eax,-0x14(%rbp)
 804b72a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804b72d:	8b 0d 95 29 04 00    	mov    0x42995(%rip),%ecx        # 808e0c8 <nb_files>
 804b733:	39 c8                	cmp    %ecx,%eax
 804b735:	0f 8d 45 01 00 00    	jge    804b880 <main+0x52a>
 804b73b:	8b 45 d8             	mov    -0x28(%rbp),%eax
 804b73e:	83 f8 00             	cmp    $0x0,%eax
 804b741:	0f 85 39 01 00 00    	jne    804b880 <main+0x52a>
 804b747:	e9 0e 00 00 00       	jmpq   804b75a <main+0x404>
 804b74c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804b74f:	48 89 c1             	mov    %rax,%rcx
 804b752:	83 c0 01             	add    $0x1,%eax
 804b755:	89 45 ec             	mov    %eax,-0x14(%rbp)
 804b758:	eb d0                	jmp    804b72a <main+0x3d4>
 804b75a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804b75d:	48 63 c0             	movslq %eax,%rax
 804b760:	48 89 c1             	mov    %rax,%rcx
 804b763:	48 c1 e1 03          	shl    $0x3,%rcx
 804b767:	48 8b 05 52 29 04 00 	mov    0x42952(%rip),%rax        # 808e0c0 <files>
 804b76e:	48 89 ca             	mov    %rcx,%rdx
 804b771:	48 01 d0             	add    %rdx,%rax
 804b774:	48 8b 08             	mov    (%rax),%rcx
 804b777:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
 804b77b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b77f:	0f be 08             	movsbl (%rax),%ecx
 804b782:	83 f9 2d             	cmp    $0x2d,%ecx
 804b785:	0f 85 73 00 00 00    	jne    804b7fe <main+0x4a8>
 804b78b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b78f:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804b796:	00 00 00 
 804b799:	48 01 c8             	add    %rcx,%rax
 804b79c:	0f be 08             	movsbl (%rax),%ecx
 804b79f:	83 f9 6c             	cmp    $0x6c,%ecx
 804b7a2:	0f 85 56 00 00 00    	jne    804b7fe <main+0x4a8>
 804b7a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b7ac:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 804b7b3:	00 00 00 
 804b7b6:	48 01 c8             	add    %rcx,%rax
 804b7b9:	48 89 c6             	mov    %rax,%rsi
 804b7bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b7c0:	48 89 c7             	mov    %rax,%rdi
 804b7c3:	b8 00 00 00 00       	mov    $0x0,%eax
 804b7c8:	e8 91 43 00 00       	callq  804fb5e <tcc_add_library>
 804b7cd:	83 f8 00             	cmp    $0x0,%eax
 804b7d0:	0f 8d 23 00 00 00    	jge    804b7f9 <main+0x4a3>
 804b7d6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b7da:	48 89 c6             	mov    %rax,%rsi
 804b7dd:	48 8d 05 77 e0 03 00 	lea    0x3e077(%rip),%rax        # 808985b <L.167>
 804b7e4:	48 89 c7             	mov    %rax,%rdi
 804b7e7:	b8 00 00 00 00       	mov    $0x0,%eax
 804b7ec:	e8 fc 1c 00 00       	callq  804d4ed <tcc_error_noabort>
 804b7f1:	b8 01 00 00 00       	mov    $0x1,%eax
 804b7f6:	89 45 d8             	mov    %eax,-0x28(%rbp)
 804b7f9:	e9 7d 00 00 00       	jmpq   804b87b <main+0x525>
 804b7fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b802:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804b809:	00 00 00 
 804b80c:	48 01 c8             	add    %rcx,%rax
 804b80f:	b9 01 00 00 00       	mov    $0x1,%ecx
 804b814:	8b 10                	mov    (%rax),%edx
 804b816:	39 d1                	cmp    %edx,%ecx
 804b818:	0f 85 1b 00 00 00    	jne    804b839 <main+0x4e3>
 804b81e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b822:	48 89 c6             	mov    %rax,%rsi
 804b825:	48 8d 05 3e e0 03 00 	lea    0x3e03e(%rip),%rax        # 808986a <L.168>
 804b82c:	48 89 c7             	mov    %rax,%rdi
 804b82f:	b8 00 00 00 00       	mov    $0x0,%eax
 804b834:	e8 87 c2 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 804b839:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b83d:	48 89 c6             	mov    %rax,%rsi
 804b840:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b844:	48 89 c7             	mov    %rax,%rdi
 804b847:	b8 00 00 00 00       	mov    $0x0,%eax
 804b84c:	e8 1c 40 00 00       	callq  804f86d <tcc_add_file>
 804b851:	83 f8 00             	cmp    $0x0,%eax
 804b854:	0f 8d 08 00 00 00    	jge    804b862 <main+0x50c>
 804b85a:	b8 01 00 00 00       	mov    $0x1,%eax
 804b85f:	89 45 d8             	mov    %eax,-0x28(%rbp)
 804b862:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804b866:	85 c0                	test   %eax,%eax
 804b868:	0f 84 05 00 00 00    	je     804b873 <main+0x51d>
 804b86e:	e9 08 00 00 00       	jmpq   804b87b <main+0x525>
 804b873:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 804b877:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804b87b:	e9 cc fe ff ff       	jmpq   804b74c <main+0x3f6>
 804b880:	48 8b 05 39 28 04 00 	mov    0x42839(%rip),%rax        # 808e0c0 <files>
 804b887:	48 89 c7             	mov    %rax,%rdi
 804b88a:	b8 00 00 00 00       	mov    $0x0,%eax
 804b88f:	e8 a2 06 00 00       	callq  804bf36 <tcc_free>
 804b894:	b8 00 00 00 00       	mov    $0x0,%eax
 804b899:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 804b89c:	39 c8                	cmp    %ecx,%eax
 804b89e:	0f 85 ab 01 00 00    	jne    804ba4f <main+0x6f9>
 804b8a4:	8b 05 7a d5 03 00    	mov    0x3d57a(%rip),%eax        # 8088e24 <do_bench>
 804b8aa:	85 c0                	test   %eax,%eax
 804b8ac:	0f 84 25 00 00 00    	je     804b8d7 <main+0x581>
 804b8b2:	b8 00 00 00 00       	mov    $0x0,%eax
 804b8b7:	e8 28 ec ff ff       	callq  804a4e4 <getclock_us>
 804b8bc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 804b8c0:	48 29 c8             	sub    %rcx,%rax
 804b8c3:	48 89 c6             	mov    %rax,%rsi
 804b8c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b8ca:	48 89 c7             	mov    %rax,%rdi
 804b8cd:	b8 00 00 00 00       	mov    $0x0,%eax
 804b8d2:	e8 5d 51 00 00       	callq  8050a34 <tcc_print_stats>
 804b8d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b8db:	8b 08                	mov    (%rax),%ecx
 804b8dd:	c1 e1 18             	shl    $0x18,%ecx
 804b8e0:	c1 e9 18             	shr    $0x18,%ecx
 804b8e3:	83 f9 00             	cmp    $0x0,%ecx
 804b8e6:	0f 85 59 00 00 00    	jne    804b945 <main+0x5ef>
 804b8ec:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804b8ef:	83 e8 01             	sub    $0x1,%eax
 804b8f2:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 804b8f5:	48 29 c8             	sub    %rcx,%rax
 804b8f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804b8fc:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804b903:	00 00 00 
 804b906:	48 01 d1             	add    %rdx,%rcx
 804b909:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 804b90c:	48 63 d2             	movslq %edx,%rdx
 804b90f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 804b913:	48 89 d0             	mov    %rdx,%rax
 804b916:	48 c1 e0 03          	shl    $0x3,%rax
 804b91a:	48 89 c2             	mov    %rax,%rdx
 804b91d:	48 01 d1             	add    %rdx,%rcx
 804b920:	49 89 ca             	mov    %rcx,%r10
 804b923:	8b 45 a0             	mov    -0x60(%rbp),%eax
 804b926:	48 89 c6             	mov    %rax,%rsi
 804b929:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b92d:	48 89 c7             	mov    %rax,%rdi
 804b930:	4c 89 d2             	mov    %r10,%rdx
 804b933:	b8 00 00 00 00       	mov    $0x0,%eax
 804b938:	e8 23 09 03 00       	callq  807c260 <tcc_run>
 804b93d:	89 45 d8             	mov    %eax,-0x28(%rbp)
 804b940:	e9 0a 01 00 00       	jmpq   804ba4f <main+0x6f9>
 804b945:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b949:	8b 08                	mov    (%rax),%ecx
 804b94b:	c1 e1 18             	shl    $0x18,%ecx
 804b94e:	c1 e9 18             	shr    $0x18,%ecx
 804b951:	83 f9 04             	cmp    $0x4,%ecx
 804b954:	0f 85 42 00 00 00    	jne    804b99c <main+0x646>
 804b95a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b95e:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 804b965:	00 00 00 
 804b968:	48 01 c8             	add    %rcx,%rax
 804b96b:	48 8b 08             	mov    (%rax),%rcx
 804b96e:	85 c9                	test   %ecx,%ecx
 804b970:	0f 84 21 00 00 00    	je     804b997 <main+0x641>
 804b976:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b97a:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 804b981:	00 00 00 
 804b984:	48 01 c8             	add    %rcx,%rax
 804b987:	48 8b 08             	mov    (%rax),%rcx
 804b98a:	48 89 cf             	mov    %rcx,%rdi
 804b98d:	b8 00 00 00 00       	mov    $0x0,%eax
 804b992:	e8 79 c1 03 00       	callq  8087b10 <__preinit_array_end+0x70>
 804b997:	e9 b3 00 00 00       	jmpq   804ba4f <main+0x6f9>
 804b99c:	48 8b 05 3d 27 04 00 	mov    0x4273d(%rip),%rax        # 808e0e0 <outfile>
 804b9a3:	85 c0                	test   %eax,%eax
 804b9a5:	0f 84 05 00 00 00    	je     804b9b0 <main+0x65a>
 804b9ab:	e9 22 00 00 00       	jmpq   804b9d2 <main+0x67c>
 804b9b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804b9b4:	48 89 c6             	mov    %rax,%rsi
 804b9b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b9bb:	48 89 c7             	mov    %rax,%rdi
 804b9be:	b8 00 00 00 00       	mov    $0x0,%eax
 804b9c3:	e8 e1 51 00 00       	callq  8050ba9 <tcc_default_target>
 804b9c8:	4c 8b 1d 81 24 04 00 	mov    0x42481(%rip),%r11        # 808de50 <_GLOBAL_OFFSET_TABLE_+0x1d0>
 804b9cf:	49 89 03             	mov    %rax,(%r11)
 804b9d2:	48 8b 05 07 27 04 00 	mov    0x42707(%rip),%rax        # 808e0e0 <outfile>
 804b9d9:	48 89 c6             	mov    %rax,%rsi
 804b9dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804b9e0:	48 89 c7             	mov    %rax,%rdi
 804b9e3:	b8 00 00 00 00       	mov    $0x0,%eax
 804b9e8:	e8 0c 9b 02 00       	callq  80754f9 <tcc_output_file>
 804b9ed:	85 c0                	test   %eax,%eax
 804b9ef:	0f 84 05 00 00 00    	je     804b9fa <main+0x6a4>
 804b9f5:	e9 07 00 00 00       	jmpq   804ba01 <main+0x6ab>
 804b9fa:	b8 00 00 00 00       	mov    $0x0,%eax
 804b9ff:	eb 05                	jmp    804ba06 <main+0x6b0>
 804ba01:	b8 01 00 00 00       	mov    $0x1,%eax
 804ba06:	89 45 d8             	mov    %eax,-0x28(%rbp)
 804ba09:	8b 05 d9 26 04 00    	mov    0x426d9(%rip),%eax        # 808e0e8 <gen_deps>
 804ba0f:	85 c0                	test   %eax,%eax
 804ba11:	0f 84 38 00 00 00    	je     804ba4f <main+0x6f9>
 804ba17:	8b 45 d8             	mov    -0x28(%rbp),%eax
 804ba1a:	85 c0                	test   %eax,%eax
 804ba1c:	0f 84 05 00 00 00    	je     804ba27 <main+0x6d1>
 804ba22:	e9 28 00 00 00       	jmpq   804ba4f <main+0x6f9>
 804ba27:	48 8b 05 c2 26 04 00 	mov    0x426c2(%rip),%rax        # 808e0f0 <deps_outfile>
 804ba2e:	49 89 c2             	mov    %rax,%r10
 804ba31:	48 8b 05 a8 26 04 00 	mov    0x426a8(%rip),%rax        # 808e0e0 <outfile>
 804ba38:	48 89 c6             	mov    %rax,%rsi
 804ba3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804ba3f:	48 89 c7             	mov    %rax,%rdi
 804ba42:	4c 89 d2             	mov    %r10,%rdx
 804ba45:	b8 00 00 00 00       	mov    $0x0,%eax
 804ba4a:	e8 cc 52 00 00       	callq  8050d1b <tcc_gen_makedeps>
 804ba4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804ba53:	48 89 c7             	mov    %rax,%rdi
 804ba56:	b8 00 00 00 00       	mov    $0x0,%eax
 804ba5b:	e8 9b 34 00 00       	callq  804eefb <tcc_delete>
 804ba60:	48 8d 05 99 26 04 00 	lea    0x42699(%rip),%rax        # 808e100 <linker_arg>
 804ba67:	48 89 c7             	mov    %rax,%rdi
 804ba6a:	b8 00 00 00 00       	mov    $0x0,%eax
 804ba6f:	e8 88 59 00 00       	callq  80513fc <cstr_free>
 804ba74:	48 8b 05 65 26 04 00 	mov    0x42665(%rip),%rax        # 808e0e0 <outfile>
 804ba7b:	48 89 c7             	mov    %rax,%rdi
 804ba7e:	b8 00 00 00 00       	mov    $0x0,%eax
 804ba83:	e8 ae 04 00 00       	callq  804bf36 <tcc_free>
 804ba88:	8b 45 d8             	mov    -0x28(%rbp),%eax
 804ba8b:	e9 00 00 00 00       	jmpq   804ba90 <main+0x73a>
 804ba90:	c9                   	leaveq 
 804ba91:	c3                   	retq   

000000000804ba92 <is_space>:
 804ba92:	55                   	push   %rbp
 804ba93:	48 89 e5             	mov    %rsp,%rbp
 804ba96:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804ba9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804baa1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804baa4:	83 f8 20             	cmp    $0x20,%eax
 804baa7:	0f 84 37 00 00 00    	je     804bae4 <is_space+0x52>
 804baad:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bab0:	83 f8 09             	cmp    $0x9,%eax
 804bab3:	0f 84 2b 00 00 00    	je     804bae4 <is_space+0x52>
 804bab9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804babc:	83 f8 0b             	cmp    $0xb,%eax
 804babf:	0f 84 1f 00 00 00    	je     804bae4 <is_space+0x52>
 804bac5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bac8:	83 f8 0c             	cmp    $0xc,%eax
 804bacb:	0f 84 13 00 00 00    	je     804bae4 <is_space+0x52>
 804bad1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bad4:	83 f8 0d             	cmp    $0xd,%eax
 804bad7:	0f 84 07 00 00 00    	je     804bae4 <is_space+0x52>
 804badd:	b8 00 00 00 00       	mov    $0x0,%eax
 804bae2:	eb 05                	jmp    804bae9 <is_space+0x57>
 804bae4:	b8 01 00 00 00       	mov    $0x1,%eax
 804bae9:	e9 00 00 00 00       	jmpq   804baee <is_space+0x5c>
 804baee:	c9                   	leaveq 
 804baef:	c3                   	retq   
	...

000000000804bb00 <__bswap_16>:
 804bb00:	55                   	push   %rbp
 804bb01:	48 89 e5             	mov    %rsp,%rbp
 804bb04:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804bb0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bb0f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bb12:	c1 f8 08             	sar    $0x8,%eax
 804bb15:	81 e0 ff 00 00 00    	and    $0xff,%eax
 804bb1b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804bb1e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 804bb24:	c1 e1 08             	shl    $0x8,%ecx
 804bb27:	48 09 c8             	or     %rcx,%rax
 804bb2a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 804bb30:	e9 00 00 00 00       	jmpq   804bb35 <__bswap_16+0x35>
 804bb35:	c9                   	leaveq 
 804bb36:	c3                   	retq   

000000000804bb37 <__bswap_32>:
 804bb37:	55                   	push   %rbp
 804bb38:	48 89 e5             	mov    %rsp,%rbp
 804bb3b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804bb42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bb46:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bb49:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 804bb4f:	c1 e8 18             	shr    $0x18,%eax
 804bb52:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804bb55:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 804bb5b:	c1 e9 08             	shr    $0x8,%ecx
 804bb5e:	48 09 c8             	or     %rcx,%rax
 804bb61:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804bb64:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 804bb6a:	c1 e1 08             	shl    $0x8,%ecx
 804bb6d:	48 09 c8             	or     %rcx,%rax
 804bb70:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804bb73:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 804bb79:	c1 e1 18             	shl    $0x18,%ecx
 804bb7c:	48 09 c8             	or     %rcx,%rax
 804bb7f:	e9 00 00 00 00       	jmpq   804bb84 <__bswap_32+0x4d>
 804bb84:	c9                   	leaveq 
 804bb85:	c3                   	retq   

000000000804bb86 <__bswap_64>:
 804bb86:	55                   	push   %rbp
 804bb87:	48 89 e5             	mov    %rsp,%rbp
 804bb8a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804bb91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bb95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bb99:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 804bba0:	00 00 ff 
 804bba3:	48 21 c8             	and    %rcx,%rax
 804bba6:	48 89 c1             	mov    %rax,%rcx
 804bba9:	48 c1 e9 38          	shr    $0x38,%rcx
 804bbad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bbb1:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 804bbb8:	00 ff 00 
 804bbbb:	48 21 d0             	and    %rdx,%rax
 804bbbe:	48 89 c2             	mov    %rax,%rdx
 804bbc1:	48 c1 ea 28          	shr    $0x28,%rdx
 804bbc5:	48 89 c8             	mov    %rcx,%rax
 804bbc8:	48 89 d1             	mov    %rdx,%rcx
 804bbcb:	48 09 c8             	or     %rcx,%rax
 804bbce:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804bbd2:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 804bbd9:	ff 00 00 
 804bbdc:	48 21 d1             	and    %rdx,%rcx
 804bbdf:	48 89 ca             	mov    %rcx,%rdx
 804bbe2:	48 c1 ea 18          	shr    $0x18,%rdx
 804bbe6:	48 89 c1             	mov    %rax,%rcx
 804bbe9:	48 89 d0             	mov    %rdx,%rax
 804bbec:	48 09 c1             	or     %rax,%rcx
 804bbef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bbf3:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 804bbfa:	00 00 00 
 804bbfd:	48 21 d0             	and    %rdx,%rax
 804bc00:	48 89 c2             	mov    %rax,%rdx
 804bc03:	48 c1 ea 08          	shr    $0x8,%rdx
 804bc07:	48 89 c8             	mov    %rcx,%rax
 804bc0a:	48 89 d1             	mov    %rdx,%rcx
 804bc0d:	48 09 c8             	or     %rcx,%rax
 804bc10:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804bc14:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 804bc1b:	00 00 00 
 804bc1e:	48 21 d1             	and    %rdx,%rcx
 804bc21:	48 89 ca             	mov    %rcx,%rdx
 804bc24:	48 c1 e2 08          	shl    $0x8,%rdx
 804bc28:	48 89 c1             	mov    %rax,%rcx
 804bc2b:	48 89 d0             	mov    %rdx,%rax
 804bc2e:	48 09 c1             	or     %rax,%rcx
 804bc31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bc35:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 804bc3c:	00 00 00 
 804bc3f:	48 21 d0             	and    %rdx,%rax
 804bc42:	48 89 c2             	mov    %rax,%rdx
 804bc45:	48 c1 e2 18          	shl    $0x18,%rdx
 804bc49:	48 89 c8             	mov    %rcx,%rax
 804bc4c:	48 89 d1             	mov    %rdx,%rcx
 804bc4f:	48 09 c8             	or     %rcx,%rax
 804bc52:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804bc56:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 804bc5d:	00 00 00 
 804bc60:	48 21 d1             	and    %rdx,%rcx
 804bc63:	48 89 ca             	mov    %rcx,%rdx
 804bc66:	48 c1 e2 28          	shl    $0x28,%rdx
 804bc6a:	48 89 c1             	mov    %rax,%rcx
 804bc6d:	48 89 d0             	mov    %rdx,%rax
 804bc70:	48 09 c1             	or     %rax,%rcx
 804bc73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bc77:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 804bc7e:	00 00 00 
 804bc81:	48 21 d0             	and    %rdx,%rax
 804bc84:	48 89 c2             	mov    %rax,%rdx
 804bc87:	48 c1 e2 38          	shl    $0x38,%rdx
 804bc8b:	48 89 c8             	mov    %rcx,%rax
 804bc8e:	48 89 d1             	mov    %rdx,%rcx
 804bc91:	48 09 c8             	or     %rcx,%rax
 804bc94:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804bc98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804bc9c:	e9 00 00 00 00       	jmpq   804bca1 <__bswap_64+0x11b>
 804bca1:	c9                   	leaveq 
 804bca2:	c3                   	retq   

000000000804bca3 <pstrcpy>:
 804bca3:	55                   	push   %rbp
 804bca4:	48 89 e5             	mov    %rsp,%rbp
 804bca7:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804bcae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bcb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804bcb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804bcba:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804bcbd:	83 f8 00             	cmp    $0x0,%eax
 804bcc0:	0f 8e 9a 00 00 00    	jle    804bd60 <pstrcpy+0xbd>
 804bcc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bcca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804bcce:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804bcd1:	48 63 c0             	movslq %eax,%rax
 804bcd4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804bcd8:	48 89 c2             	mov    %rax,%rdx
 804bcdb:	48 01 d1             	add    %rdx,%rcx
 804bcde:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 804bce5:	00 00 00 
 804bce8:	48 29 c1             	sub    %rax,%rcx
 804bceb:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 804bcef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804bcf3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 804bcf7:	48 89 c2             	mov    %rax,%rdx
 804bcfa:	48 89 c8             	mov    %rcx,%rax
 804bcfd:	48 39 c2             	cmp    %rax,%rdx
 804bd00:	0f 83 4f 00 00 00    	jae    804bd55 <pstrcpy+0xb2>
 804bd06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804bd0a:	48 89 c1             	mov    %rax,%rcx
 804bd0d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804bd14:	00 00 00 
 804bd17:	48 01 d0             	add    %rdx,%rax
 804bd1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804bd1e:	0f be 01             	movsbl (%rcx),%eax
 804bd21:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 804bd24:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804bd27:	83 f8 00             	cmp    $0x0,%eax
 804bd2a:	0f 85 05 00 00 00    	jne    804bd35 <pstrcpy+0x92>
 804bd30:	e9 20 00 00 00       	jmpq   804bd55 <pstrcpy+0xb2>
 804bd35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804bd39:	48 89 c1             	mov    %rax,%rcx
 804bd3c:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804bd43:	00 00 00 
 804bd46:	48 01 d0             	add    %rdx,%rax
 804bd49:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804bd4d:	0f be 45 d4          	movsbl -0x2c(%rbp),%eax
 804bd51:	88 01                	mov    %al,(%rcx)
 804bd53:	eb 9a                	jmp    804bcef <pstrcpy+0x4c>
 804bd55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804bd59:	b9 00 00 00 00       	mov    $0x0,%ecx
 804bd5e:	88 08                	mov    %cl,(%rax)
 804bd60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bd64:	e9 00 00 00 00       	jmpq   804bd69 <pstrcpy+0xc6>
 804bd69:	c9                   	leaveq 
 804bd6a:	c3                   	retq   

000000000804bd6b <pstrcat>:
 804bd6b:	55                   	push   %rbp
 804bd6c:	48 89 e5             	mov    %rsp,%rbp
 804bd6f:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804bd76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bd7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804bd7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804bd82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bd86:	48 89 c7             	mov    %rax,%rdi
 804bd89:	b8 00 00 00 00       	mov    $0x0,%eax
 804bd8e:	e8 4d b5 03 00       	callq  80872e0 <strlen>
 804bd93:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804bd96:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804bd99:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 804bd9c:	39 c8                	cmp    %ecx,%eax
 804bd9e:	0f 8d 33 00 00 00    	jge    804bdd7 <pstrcat+0x6c>
 804bda4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804bda7:	48 63 c0             	movslq %eax,%rax
 804bdaa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804bdae:	48 89 c2             	mov    %rax,%rdx
 804bdb1:	48 01 d1             	add    %rdx,%rcx
 804bdb4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804bdb7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 804bdba:	48 29 d0             	sub    %rdx,%rax
 804bdbd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 804bdc1:	49 89 d2             	mov    %rdx,%r10
 804bdc4:	48 89 c6             	mov    %rax,%rsi
 804bdc7:	48 89 cf             	mov    %rcx,%rdi
 804bdca:	4c 89 d2             	mov    %r10,%rdx
 804bdcd:	b8 00 00 00 00       	mov    $0x0,%eax
 804bdd2:	e8 cc fe ff ff       	callq  804bca3 <pstrcpy>
 804bdd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bddb:	e9 00 00 00 00       	jmpq   804bde0 <pstrcat+0x75>
 804bde0:	c9                   	leaveq 
 804bde1:	c3                   	retq   

000000000804bde2 <pstrncpy>:
 804bde2:	55                   	push   %rbp
 804bde3:	48 89 e5             	mov    %rsp,%rbp
 804bde6:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804bded:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bdf1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804bdf5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804bdf9:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804bdfc:	49 89 c2             	mov    %rax,%r10
 804bdff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804be03:	48 89 c6             	mov    %rax,%rsi
 804be06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804be0a:	48 89 c7             	mov    %rax,%rdi
 804be0d:	4c 89 d2             	mov    %r10,%rdx
 804be10:	b8 00 00 00 00       	mov    $0x0,%eax
 804be15:	e8 56 ae 03 00       	callq  8086c70 <memcpy>
 804be1a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804be1d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804be21:	48 89 c2             	mov    %rax,%rdx
 804be24:	48 01 d1             	add    %rdx,%rcx
 804be27:	b8 00 00 00 00       	mov    $0x0,%eax
 804be2c:	88 01                	mov    %al,(%rcx)
 804be2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804be32:	e9 00 00 00 00       	jmpq   804be37 <pstrncpy+0x55>
 804be37:	c9                   	leaveq 
 804be38:	c3                   	retq   

000000000804be39 <tcc_basename>:
 804be39:	55                   	push   %rbp
 804be3a:	48 89 e5             	mov    %rsp,%rbp
 804be3d:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804be44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804be48:	b8 00 00 00 00       	mov    $0x0,%eax
 804be4d:	48 89 c6             	mov    %rax,%rsi
 804be50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804be54:	48 89 c7             	mov    %rax,%rdi
 804be57:	b8 00 00 00 00       	mov    $0x0,%eax
 804be5c:	e8 df b1 03 00       	callq  8087040 <strchr>
 804be61:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804be65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804be69:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804be6d:	48 89 c2             	mov    %rax,%rdx
 804be70:	48 89 c8             	mov    %rcx,%rax
 804be73:	48 39 c2             	cmp    %rax,%rdx
 804be76:	0f 86 34 00 00 00    	jbe    804beb0 <tcc_basename+0x77>
 804be7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804be80:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rcx
 804be87:	ff ff ff 
 804be8a:	48 01 c8             	add    %rcx,%rax
 804be8d:	0f be 08             	movsbl (%rax),%ecx
 804be90:	83 f9 2f             	cmp    $0x2f,%ecx
 804be93:	0f 84 17 00 00 00    	je     804beb0 <tcc_basename+0x77>
 804be99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804be9d:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rcx
 804bea4:	ff ff ff 
 804bea7:	48 01 c8             	add    %rcx,%rax
 804beaa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804beae:	eb b5                	jmp    804be65 <tcc_basename+0x2c>
 804beb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804beb4:	e9 00 00 00 00       	jmpq   804beb9 <tcc_basename+0x80>
 804beb9:	c9                   	leaveq 
 804beba:	c3                   	retq   

000000000804bebb <tcc_fileextension>:
 804bebb:	55                   	push   %rbp
 804bebc:	48 89 e5             	mov    %rsp,%rbp
 804bebf:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804bec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804beca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bece:	48 89 c7             	mov    %rax,%rdi
 804bed1:	b8 00 00 00 00       	mov    $0x0,%eax
 804bed6:	e8 5e ff ff ff       	callq  804be39 <tcc_basename>
 804bedb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804bedf:	b8 2e 00 00 00       	mov    $0x2e,%eax
 804bee4:	48 89 c6             	mov    %rax,%rsi
 804bee7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804beeb:	48 89 c7             	mov    %rax,%rdi
 804beee:	b8 00 00 00 00       	mov    $0x0,%eax
 804bef3:	e8 78 b5 03 00       	callq  8087470 <strrchr>
 804bef8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804befc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804bf00:	85 c0                	test   %eax,%eax
 804bf02:	0f 84 05 00 00 00    	je     804bf0d <tcc_fileextension+0x52>
 804bf08:	e9 1e 00 00 00       	jmpq   804bf2b <tcc_fileextension+0x70>
 804bf0d:	b8 00 00 00 00       	mov    $0x0,%eax
 804bf12:	48 89 c6             	mov    %rax,%rsi
 804bf15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804bf19:	48 89 c7             	mov    %rax,%rdi
 804bf1c:	b8 00 00 00 00       	mov    $0x0,%eax
 804bf21:	e8 1a b1 03 00       	callq  8087040 <strchr>
 804bf26:	e9 04 00 00 00       	jmpq   804bf2f <tcc_fileextension+0x74>
 804bf2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804bf2f:	e9 00 00 00 00       	jmpq   804bf34 <tcc_fileextension+0x79>
 804bf34:	c9                   	leaveq 
 804bf35:	c3                   	retq   

000000000804bf36 <tcc_free>:
 804bf36:	55                   	push   %rbp
 804bf37:	48 89 e5             	mov    %rsp,%rbp
 804bf3a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804bf41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bf45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bf49:	48 89 c7             	mov    %rax,%rdi
 804bf4c:	b8 00 00 00 00       	mov    $0x0,%eax
 804bf51:	e8 ca bb 03 00       	callq  8087b20 <__preinit_array_end+0x80>
 804bf56:	c9                   	leaveq 
 804bf57:	c3                   	retq   

000000000804bf58 <tcc_malloc>:
 804bf58:	55                   	push   %rbp
 804bf59:	48 89 e5             	mov    %rsp,%rbp
 804bf5c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804bf63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bf67:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bf6a:	48 89 c7             	mov    %rax,%rdi
 804bf6d:	b8 00 00 00 00       	mov    $0x0,%eax
 804bf72:	e8 b9 bb 03 00       	callq  8087b30 <__preinit_array_end+0x90>
 804bf77:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804bf7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804bf7f:	85 c0                	test   %eax,%eax
 804bf81:	0f 84 05 00 00 00    	je     804bf8c <tcc_malloc+0x34>
 804bf87:	e9 35 00 00 00       	jmpq   804bfc1 <tcc_malloc+0x69>
 804bf8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bf90:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804bf97:	00 00 00 
 804bf9a:	48 39 c8             	cmp    %rcx,%rax
 804bf9d:	b8 00 00 00 00       	mov    $0x0,%eax
 804bfa2:	0f 95 c0             	setne  %al
 804bfa5:	85 c0                	test   %eax,%eax
 804bfa7:	0f 84 14 00 00 00    	je     804bfc1 <tcc_malloc+0x69>
 804bfad:	48 8d 05 f8 d8 03 00 	lea    0x3d8f8(%rip),%rax        # 80898ac <L.107>
 804bfb4:	48 89 c7             	mov    %rax,%rdi
 804bfb7:	b8 00 00 00 00       	mov    $0x0,%eax
 804bfbc:	e8 06 17 00 00       	callq  804d6c7 <tcc_error>
 804bfc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804bfc5:	e9 00 00 00 00       	jmpq   804bfca <tcc_malloc+0x72>
 804bfca:	c9                   	leaveq 
 804bfcb:	c3                   	retq   

000000000804bfcc <tcc_mallocz>:
 804bfcc:	55                   	push   %rbp
 804bfcd:	48 89 e5             	mov    %rsp,%rbp
 804bfd0:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804bfd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804bfdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804bfdf:	48 89 c7             	mov    %rax,%rdi
 804bfe2:	b8 00 00 00 00       	mov    $0x0,%eax
 804bfe7:	e8 6c ff ff ff       	callq  804bf58 <tcc_malloc>
 804bfec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804bff0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 804bff3:	49 89 c2             	mov    %rax,%r10
 804bff6:	b8 00 00 00 00       	mov    $0x0,%eax
 804bffb:	48 89 c6             	mov    %rax,%rsi
 804bffe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c002:	48 89 c7             	mov    %rax,%rdi
 804c005:	4c 89 d2             	mov    %r10,%rdx
 804c008:	b8 00 00 00 00       	mov    $0x0,%eax
 804c00d:	e8 9e ae 03 00       	callq  8086eb0 <memset>
 804c012:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c016:	e9 00 00 00 00       	jmpq   804c01b <tcc_mallocz+0x4f>
 804c01b:	c9                   	leaveq 
 804c01c:	c3                   	retq   

000000000804c01d <tcc_realloc>:
 804c01d:	55                   	push   %rbp
 804c01e:	48 89 e5             	mov    %rsp,%rbp
 804c021:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804c028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c02c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c030:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804c033:	48 89 c6             	mov    %rax,%rsi
 804c036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c03a:	48 89 c7             	mov    %rax,%rdi
 804c03d:	b8 00 00 00 00       	mov    $0x0,%eax
 804c042:	e8 f9 ba 03 00       	callq  8087b40 <__preinit_array_end+0xa0>
 804c047:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804c04b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c04f:	85 c0                	test   %eax,%eax
 804c051:	0f 84 05 00 00 00    	je     804c05c <tcc_realloc+0x3f>
 804c057:	e9 35 00 00 00       	jmpq   804c091 <tcc_realloc+0x74>
 804c05c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c060:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804c067:	00 00 00 
 804c06a:	48 39 c8             	cmp    %rcx,%rax
 804c06d:	b8 00 00 00 00       	mov    $0x0,%eax
 804c072:	0f 95 c0             	setne  %al
 804c075:	85 c0                	test   %eax,%eax
 804c077:	0f 84 14 00 00 00    	je     804c091 <tcc_realloc+0x74>
 804c07d:	48 8d 05 34 d8 03 00 	lea    0x3d834(%rip),%rax        # 80898b8 <L.108>
 804c084:	48 89 c7             	mov    %rax,%rdi
 804c087:	b8 00 00 00 00       	mov    $0x0,%eax
 804c08c:	e8 36 16 00 00       	callq  804d6c7 <tcc_error>
 804c091:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c095:	e9 00 00 00 00       	jmpq   804c09a <tcc_realloc+0x7d>
 804c09a:	c9                   	leaveq 
 804c09b:	c3                   	retq   

000000000804c09c <tcc_strdup>:
 804c09c:	55                   	push   %rbp
 804c09d:	48 89 e5             	mov    %rsp,%rbp
 804c0a0:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804c0a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c0af:	48 89 c7             	mov    %rax,%rdi
 804c0b2:	b8 00 00 00 00       	mov    $0x0,%eax
 804c0b7:	e8 24 b2 03 00       	callq  80872e0 <strlen>
 804c0bc:	83 c0 01             	add    $0x1,%eax
 804c0bf:	48 89 c1             	mov    %rax,%rcx
 804c0c2:	48 89 cf             	mov    %rcx,%rdi
 804c0c5:	b8 00 00 00 00       	mov    $0x0,%eax
 804c0ca:	e8 89 fe ff ff       	callq  804bf58 <tcc_malloc>
 804c0cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804c0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c0d7:	48 89 c6             	mov    %rax,%rsi
 804c0da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c0de:	48 89 c7             	mov    %rax,%rdi
 804c0e1:	b8 00 00 00 00       	mov    $0x0,%eax
 804c0e6:	e8 75 b1 03 00       	callq  8087260 <strcpy>
 804c0eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c0ef:	e9 00 00 00 00       	jmpq   804c0f4 <tcc_strdup+0x58>
 804c0f4:	c9                   	leaveq 
 804c0f5:	c3                   	retq   

000000000804c0f6 <tcc_memstats>:
 804c0f6:	55                   	push   %rbp
 804c0f7:	48 89 e5             	mov    %rsp,%rbp
 804c0fa:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 804c101:	c9                   	leaveq 
 804c102:	c3                   	retq   

000000000804c103 <dynarray_add>:
 804c103:	55                   	push   %rbp
 804c104:	48 89 e5             	mov    %rsp,%rbp
 804c107:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804c10e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c112:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c116:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804c11a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c11e:	8b 08                	mov    (%rax),%ecx
 804c120:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 804c123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c127:	48 8b 08             	mov    (%rax),%rcx
 804c12a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 804c12e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804c131:	83 e8 01             	sub    $0x1,%eax
 804c134:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804c137:	48 21 c1             	and    %rax,%rcx
 804c13a:	83 f9 00             	cmp    $0x0,%ecx
 804c13d:	0f 85 52 00 00 00    	jne    804c195 <dynarray_add+0x92>
 804c143:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804c146:	85 c0                	test   %eax,%eax
 804c148:	0f 84 05 00 00 00    	je     804c153 <dynarray_add+0x50>
 804c14e:	e9 0d 00 00 00       	jmpq   804c160 <dynarray_add+0x5d>
 804c153:	b8 01 00 00 00       	mov    $0x1,%eax
 804c158:	89 45 e0             	mov    %eax,-0x20(%rbp)
 804c15b:	e9 09 00 00 00       	jmpq   804c169 <dynarray_add+0x66>
 804c160:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804c163:	c1 e0 01             	shl    $0x1,%eax
 804c166:	89 45 e0             	mov    %eax,-0x20(%rbp)
 804c169:	8b 45 e0             	mov    -0x20(%rbp),%eax
 804c16c:	c1 e0 03             	shl    $0x3,%eax
 804c16f:	48 89 c1             	mov    %rax,%rcx
 804c172:	48 89 ce             	mov    %rcx,%rsi
 804c175:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c179:	48 89 c7             	mov    %rax,%rdi
 804c17c:	b8 00 00 00 00       	mov    $0x0,%eax
 804c181:	e8 97 fe ff ff       	callq  804c01d <tcc_realloc>
 804c186:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804c18a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c18e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 804c192:	48 89 08             	mov    %rcx,(%rax)
 804c195:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804c198:	48 89 c1             	mov    %rax,%rcx
 804c19b:	83 c0 01             	add    $0x1,%eax
 804c19e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804c1a1:	48 63 c9             	movslq %ecx,%rcx
 804c1a4:	48 89 c8             	mov    %rcx,%rax
 804c1a7:	48 c1 e0 03          	shl    $0x3,%rax
 804c1ab:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 804c1af:	48 89 c2             	mov    %rax,%rdx
 804c1b2:	48 01 d1             	add    %rdx,%rcx
 804c1b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c1b9:	48 89 01             	mov    %rax,(%rcx)
 804c1bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c1c0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804c1c3:	89 08                	mov    %ecx,(%rax)
 804c1c5:	c9                   	leaveq 
 804c1c6:	c3                   	retq   

000000000804c1c7 <dynarray_reset>:
 804c1c7:	55                   	push   %rbp
 804c1c8:	48 89 e5             	mov    %rsp,%rbp
 804c1cb:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804c1d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c1d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c1da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c1de:	48 8b 08             	mov    (%rax),%rcx
 804c1e1:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 804c1e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c1e9:	8b 08                	mov    (%rax),%ecx
 804c1eb:	85 c9                	test   %ecx,%ecx
 804c1ed:	0f 84 4c 00 00 00    	je     804c23f <dynarray_reset+0x78>
 804c1f3:	e9 22 00 00 00       	jmpq   804c21a <dynarray_reset+0x53>
 804c1f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c1fc:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804c203:	00 00 00 
 804c206:	48 01 c8             	add    %rcx,%rax
 804c209:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804c20d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c211:	8b 08                	mov    (%rax),%ecx
 804c213:	83 c1 ff             	add    $0xffffffff,%ecx
 804c216:	89 08                	mov    %ecx,(%rax)
 804c218:	eb cb                	jmp    804c1e5 <dynarray_reset+0x1e>
 804c21a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c21e:	48 8b 08             	mov    (%rax),%rcx
 804c221:	85 c9                	test   %ecx,%ecx
 804c223:	0f 84 14 00 00 00    	je     804c23d <dynarray_reset+0x76>
 804c229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c22d:	48 8b 08             	mov    (%rax),%rcx
 804c230:	48 89 cf             	mov    %rcx,%rdi
 804c233:	b8 00 00 00 00       	mov    $0x0,%eax
 804c238:	e8 f9 fc ff ff       	callq  804bf36 <tcc_free>
 804c23d:	eb b9                	jmp    804c1f8 <dynarray_reset+0x31>
 804c23f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c243:	48 8b 08             	mov    (%rax),%rcx
 804c246:	48 89 cf             	mov    %rcx,%rdi
 804c249:	b8 00 00 00 00       	mov    $0x0,%eax
 804c24e:	e8 e3 fc ff ff       	callq  804bf36 <tcc_free>
 804c253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c257:	b9 00 00 00 00       	mov    $0x0,%ecx
 804c25c:	48 89 08             	mov    %rcx,(%rax)
 804c25f:	c9                   	leaveq 
 804c260:	c3                   	retq   

000000000804c261 <tcc_split_path>:
 804c261:	55                   	push   %rbp
 804c262:	48 89 e5             	mov    %rsp,%rbp
 804c265:	48 81 ec 60 10 00 00 	sub    $0x1060,%rsp
 804c26c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c270:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c274:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804c278:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804c27c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 804c280:	48 89 c7             	mov    %rax,%rdi
 804c283:	b8 00 00 00 00       	mov    $0x0,%eax
 804c288:	e8 3a 51 00 00       	callq  80513c7 <cstr_new>
 804c28d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804c291:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804c295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c299:	0f be 08             	movsbl (%rax),%ecx
 804c29c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 804c29f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804c2a2:	83 f8 00             	cmp    $0x0,%eax
 804c2a5:	0f 84 ee 00 00 00    	je     804c399 <tcc_split_path+0x138>
 804c2ab:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804c2ae:	83 f8 3a             	cmp    $0x3a,%eax
 804c2b1:	0f 84 e2 00 00 00    	je     804c399 <tcc_split_path+0x138>
 804c2b7:	e9 17 00 00 00       	jmpq   804c2d3 <tcc_split_path+0x72>
 804c2bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c2c0:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804c2c7:	00 00 00 
 804c2ca:	48 01 c8             	add    %rcx,%rax
 804c2cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804c2d1:	eb c2                	jmp    804c295 <tcc_split_path+0x34>
 804c2d3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804c2d6:	83 f8 7b             	cmp    $0x7b,%eax
 804c2d9:	0f 85 9e 00 00 00    	jne    804c37d <tcc_split_path+0x11c>
 804c2df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c2e3:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804c2ea:	00 00 00 
 804c2ed:	48 01 c8             	add    %rcx,%rax
 804c2f0:	0f be 08             	movsbl (%rax),%ecx
 804c2f3:	85 c9                	test   %ecx,%ecx
 804c2f5:	0f 84 82 00 00 00    	je     804c37d <tcc_split_path+0x11c>
 804c2fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c2ff:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 804c306:	00 00 00 
 804c309:	48 01 c8             	add    %rcx,%rax
 804c30c:	0f be 08             	movsbl (%rax),%ecx
 804c30f:	83 f9 7d             	cmp    $0x7d,%ecx
 804c312:	0f 85 65 00 00 00    	jne    804c37d <tcc_split_path+0x11c>
 804c318:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c31c:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804c323:	00 00 00 
 804c326:	48 01 c8             	add    %rcx,%rax
 804c329:	0f be 08             	movsbl (%rax),%ecx
 804c32c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 804c32f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c333:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 804c33a:	00 00 00 
 804c33d:	48 01 c8             	add    %rcx,%rax
 804c340:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804c344:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804c347:	83 f8 42             	cmp    $0x42,%eax
 804c34a:	0f 85 28 00 00 00    	jne    804c378 <tcc_split_path+0x117>
 804c350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c354:	48 b9 50 01 00 00 00 	movabs $0x150,%rcx
 804c35b:	00 00 00 
 804c35e:	48 01 c8             	add    %rcx,%rax
 804c361:	48 8b 08             	mov    (%rax),%rcx
 804c364:	48 89 ce             	mov    %rcx,%rsi
 804c367:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 804c36b:	48 89 c7             	mov    %rax,%rdi
 804c36e:	b8 00 00 00 00       	mov    $0x0,%eax
 804c373:	e8 5d 4f 00 00       	callq  80512d5 <cstr_cat>
 804c378:	e9 17 00 00 00       	jmpq   804c394 <tcc_split_path+0x133>
 804c37d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 804c380:	48 89 c6             	mov    %rax,%rsi
 804c383:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 804c387:	48 89 c7             	mov    %rax,%rdi
 804c38a:	b8 00 00 00 00       	mov    $0x0,%eax
 804c38f:	e8 b9 4e 00 00       	callq  805124d <cstr_ccat>
 804c394:	e9 23 ff ff ff       	jmpq   804c2bc <tcc_split_path+0x5b>
 804c399:	b8 00 00 00 00       	mov    $0x0,%eax
 804c39e:	48 89 c6             	mov    %rax,%rsi
 804c3a1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 804c3a5:	48 89 c7             	mov    %rax,%rdi
 804c3a8:	b8 00 00 00 00       	mov    $0x0,%eax
 804c3ad:	e8 9b 4e 00 00       	callq  805124d <cstr_ccat>
 804c3b2:	48 8d 85 a8 ef ff ff 	lea    -0x1058(%rbp),%rax
 804c3b9:	48 89 c6             	mov    %rax,%rsi
 804c3bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804c3c0:	48 89 c7             	mov    %rax,%rdi
 804c3c3:	b8 00 00 00 00       	mov    $0x0,%eax
 804c3c8:	e8 83 b7 03 00       	callq  8087b50 <__preinit_array_end+0xb0>
 804c3cd:	85 c0                	test   %eax,%eax
 804c3cf:	0f 84 3c 00 00 00    	je     804c411 <tcc_split_path+0x1b0>
 804c3d5:	b8 00 00 00 00       	mov    $0x0,%eax
 804c3da:	89 45 b0             	mov    %eax,-0x50(%rbp)
 804c3dd:	48 8d 85 a8 ef ff ff 	lea    -0x1058(%rbp),%rax
 804c3e4:	48 89 c6             	mov    %rax,%rsi
 804c3e7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 804c3eb:	48 89 c7             	mov    %rax,%rdi
 804c3ee:	b8 00 00 00 00       	mov    $0x0,%eax
 804c3f3:	e8 dd 4e 00 00       	callq  80512d5 <cstr_cat>
 804c3f8:	b8 00 00 00 00       	mov    $0x0,%eax
 804c3fd:	48 89 c6             	mov    %rax,%rsi
 804c400:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 804c404:	48 89 c7             	mov    %rax,%rdi
 804c407:	b8 00 00 00 00       	mov    $0x0,%eax
 804c40c:	e8 3c 4e 00 00       	callq  805124d <cstr_ccat>
 804c411:	b8 01 00 00 00       	mov    $0x1,%eax
 804c416:	89 45 a8             	mov    %eax,-0x58(%rbp)
 804c419:	b8 00 00 00 00       	mov    $0x0,%eax
 804c41e:	89 45 ac             	mov    %eax,-0x54(%rbp)
 804c421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c425:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 804c428:	8b 10                	mov    (%rax),%edx
 804c42a:	39 d1                	cmp    %edx,%ecx
 804c42c:	0f 8d 73 00 00 00    	jge    804c4a5 <tcc_split_path+0x244>
 804c432:	8b 45 a8             	mov    -0x58(%rbp),%eax
 804c435:	85 c0                	test   %eax,%eax
 804c437:	0f 84 68 00 00 00    	je     804c4a5 <tcc_split_path+0x244>
 804c43d:	e9 0e 00 00 00       	jmpq   804c450 <tcc_split_path+0x1ef>
 804c442:	8b 45 ac             	mov    -0x54(%rbp),%eax
 804c445:	48 89 c1             	mov    %rax,%rcx
 804c448:	83 c0 01             	add    $0x1,%eax
 804c44b:	89 45 ac             	mov    %eax,-0x54(%rbp)
 804c44e:	eb d1                	jmp    804c421 <tcc_split_path+0x1c0>
 804c450:	8b 45 a8             	mov    -0x58(%rbp),%eax
 804c453:	85 c0                	test   %eax,%eax
 804c455:	0f 84 40 00 00 00    	je     804c49b <tcc_split_path+0x23a>
 804c45b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c45f:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 804c462:	48 63 c9             	movslq %ecx,%rcx
 804c465:	48 89 ca             	mov    %rcx,%rdx
 804c468:	48 c1 e2 03          	shl    $0x3,%rdx
 804c46c:	48 8b 08             	mov    (%rax),%rcx
 804c46f:	48 89 d0             	mov    %rdx,%rax
 804c472:	48 01 c1             	add    %rax,%rcx
 804c475:	48 8b 01             	mov    (%rcx),%rax
 804c478:	48 89 c6             	mov    %rax,%rsi
 804c47b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804c47f:	48 89 c7             	mov    %rax,%rdi
 804c482:	b8 00 00 00 00       	mov    $0x0,%eax
 804c487:	e8 54 ad 03 00       	callq  80871e0 <strcmp>
 804c48c:	85 c0                	test   %eax,%eax
 804c48e:	0f 84 07 00 00 00    	je     804c49b <tcc_split_path+0x23a>
 804c494:	b8 01 00 00 00       	mov    $0x1,%eax
 804c499:	eb 05                	jmp    804c4a0 <tcc_split_path+0x23f>
 804c49b:	b8 00 00 00 00       	mov    $0x0,%eax
 804c4a0:	89 45 a8             	mov    %eax,-0x58(%rbp)
 804c4a3:	eb 9d                	jmp    804c442 <tcc_split_path+0x1e1>
 804c4a5:	8b 45 a8             	mov    -0x58(%rbp),%eax
 804c4a8:	85 c0                	test   %eax,%eax
 804c4aa:	0f 84 22 00 00 00    	je     804c4d2 <tcc_split_path+0x271>
 804c4b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804c4b4:	49 89 c2             	mov    %rax,%r10
 804c4b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c4bb:	48 89 c6             	mov    %rax,%rsi
 804c4be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c4c2:	48 89 c7             	mov    %rax,%rdi
 804c4c5:	4c 89 d2             	mov    %r10,%rdx
 804c4c8:	b8 00 00 00 00       	mov    $0x0,%eax
 804c4cd:	e8 31 fc ff ff       	callq  804c103 <dynarray_add>
 804c4d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c4d6:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804c4dd:	00 00 00 
 804c4e0:	48 01 c8             	add    %rcx,%rax
 804c4e3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804c4e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c4eb:	0f be 08             	movsbl (%rax),%ecx
 804c4ee:	85 c9                	test   %ecx,%ecx
 804c4f0:	0f 85 86 fd ff ff    	jne    804c27c <tcc_split_path+0x1b>
 804c4f6:	c9                   	leaveq 
 804c4f7:	c3                   	retq   

000000000804c4f8 <new_section>:
 804c4f8:	55                   	push   %rbp
 804c4f9:	48 89 e5             	mov    %rsp,%rbp
 804c4fc:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804c503:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c507:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c50b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804c50f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804c513:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c517:	48 89 c7             	mov    %rax,%rdi
 804c51a:	b8 00 00 00 00       	mov    $0x0,%eax
 804c51f:	e8 bc ad 03 00       	callq  80872e0 <strlen>
 804c524:	81 c0 80 00 00 00    	add    $0x80,%eax
 804c52a:	48 89 c1             	mov    %rax,%rcx
 804c52d:	48 89 cf             	mov    %rcx,%rdi
 804c530:	b8 00 00 00 00       	mov    $0x0,%eax
 804c535:	e8 92 fa ff ff       	callq  804bfcc <tcc_mallocz>
 804c53a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804c53e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c542:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804c549:	00 00 00 
 804c54c:	48 01 c8             	add    %rcx,%rax
 804c54f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804c553:	48 89 ce             	mov    %rcx,%rsi
 804c556:	48 89 c7             	mov    %rax,%rdi
 804c559:	b8 00 00 00 00       	mov    $0x0,%eax
 804c55e:	e8 fd ac 03 00       	callq  8087260 <strcpy>
 804c563:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c567:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804c56e:	00 00 00 
 804c571:	48 01 c8             	add    %rcx,%rax
 804c574:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 804c577:	89 08                	mov    %ecx,(%rax)
 804c579:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c57d:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 804c584:	00 00 00 
 804c587:	48 01 c8             	add    %rcx,%rax
 804c58a:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 804c58d:	89 08                	mov    %ecx,(%rax)
 804c58f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804c592:	e9 05 00 00 00       	jmpq   804c59c <new_section+0xa4>
 804c597:	e9 09 00 00 00       	jmpq   804c5a5 <new_section+0xad>
 804c59c:	83 f8 05             	cmp    $0x5,%eax
 804c59f:	0f 85 05 00 00 00    	jne    804c5aa <new_section+0xb2>
 804c5a5:	e9 09 00 00 00       	jmpq   804c5b3 <new_section+0xbb>
 804c5aa:	83 f8 09             	cmp    $0x9,%eax
 804c5ad:	0f 85 05 00 00 00    	jne    804c5b8 <new_section+0xc0>
 804c5b3:	e9 09 00 00 00       	jmpq   804c5c1 <new_section+0xc9>
 804c5b8:	83 f8 04             	cmp    $0x4,%eax
 804c5bb:	0f 85 05 00 00 00    	jne    804c5c6 <new_section+0xce>
 804c5c1:	e9 09 00 00 00       	jmpq   804c5cf <new_section+0xd7>
 804c5c6:	83 f8 0b             	cmp    $0xb,%eax
 804c5c9:	0f 85 05 00 00 00    	jne    804c5d4 <new_section+0xdc>
 804c5cf:	e9 09 00 00 00       	jmpq   804c5dd <new_section+0xe5>
 804c5d4:	83 f8 02             	cmp    $0x2,%eax
 804c5d7:	0f 85 05 00 00 00    	jne    804c5e2 <new_section+0xea>
 804c5dd:	e9 09 00 00 00       	jmpq   804c5eb <new_section+0xf3>
 804c5e2:	83 f8 06             	cmp    $0x6,%eax
 804c5e5:	0f 85 22 00 00 00    	jne    804c60d <new_section+0x115>
 804c5eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c5ef:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 804c5f6:	00 00 00 
 804c5f9:	48 01 c8             	add    %rcx,%rax
 804c5fc:	b9 04 00 00 00       	mov    $0x4,%ecx
 804c601:	89 08                	mov    %ecx,(%rax)
 804c603:	e9 48 00 00 00       	jmpq   804c650 <new_section+0x158>
 804c608:	e9 09 00 00 00       	jmpq   804c616 <new_section+0x11e>
 804c60d:	83 f8 03             	cmp    $0x3,%eax
 804c610:	0f 85 1d 00 00 00    	jne    804c633 <new_section+0x13b>
 804c616:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c61a:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 804c621:	00 00 00 
 804c624:	48 01 c8             	add    %rcx,%rax
 804c627:	b9 01 00 00 00       	mov    $0x1,%ecx
 804c62c:	89 08                	mov    %ecx,(%rax)
 804c62e:	e9 1d 00 00 00       	jmpq   804c650 <new_section+0x158>
 804c633:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c637:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 804c63e:	00 00 00 
 804c641:	48 01 c8             	add    %rcx,%rax
 804c644:	b9 20 00 00 00       	mov    $0x20,%ecx
 804c649:	89 08                	mov    %ecx,(%rax)
 804c64b:	e9 00 00 00 00       	jmpq   804c650 <new_section+0x158>
 804c650:	8b 45 e0             	mov    -0x20(%rbp),%eax
 804c653:	81 e0 00 00 00 80    	and    $0x80000000,%eax
 804c659:	85 c0                	test   %eax,%eax
 804c65b:	0f 84 41 00 00 00    	je     804c6a2 <new_section+0x1aa>
 804c661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c665:	48 b9 88 00 00 00 00 	movabs $0x88,%rcx
 804c66c:	00 00 00 
 804c66f:	48 01 c8             	add    %rcx,%rax
 804c672:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804c676:	48 ba 90 00 00 00 00 	movabs $0x90,%rdx
 804c67d:	00 00 00 
 804c680:	48 01 d1             	add    %rdx,%rcx
 804c683:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 804c687:	49 89 d2             	mov    %rdx,%r10
 804c68a:	48 89 ce             	mov    %rcx,%rsi
 804c68d:	48 89 c7             	mov    %rax,%rdi
 804c690:	4c 89 d2             	mov    %r10,%rdx
 804c693:	b8 00 00 00 00       	mov    $0x0,%eax
 804c698:	e8 66 fa ff ff       	callq  804c103 <dynarray_add>
 804c69d:	e9 62 00 00 00       	jmpq   804c704 <new_section+0x20c>
 804c6a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c6a6:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 804c6ad:	00 00 00 
 804c6b0:	48 01 c8             	add    %rcx,%rax
 804c6b3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804c6b7:	48 ba 80 00 00 00 00 	movabs $0x80,%rdx
 804c6be:	00 00 00 
 804c6c1:	48 01 d1             	add    %rdx,%rcx
 804c6c4:	8b 11                	mov    (%rcx),%edx
 804c6c6:	89 10                	mov    %edx,(%rax)
 804c6c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c6cc:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804c6d3:	00 00 00 
 804c6d6:	48 01 c8             	add    %rcx,%rax
 804c6d9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804c6dd:	48 ba 80 00 00 00 00 	movabs $0x80,%rdx
 804c6e4:	00 00 00 
 804c6e7:	48 01 d1             	add    %rdx,%rcx
 804c6ea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 804c6ee:	49 89 d2             	mov    %rdx,%r10
 804c6f1:	48 89 ce             	mov    %rcx,%rsi
 804c6f4:	48 89 c7             	mov    %rax,%rdi
 804c6f7:	4c 89 d2             	mov    %r10,%rdx
 804c6fa:	b8 00 00 00 00       	mov    $0x0,%eax
 804c6ff:	e8 ff f9 ff ff       	callq  804c103 <dynarray_add>
 804c704:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c708:	e9 00 00 00 00       	jmpq   804c70d <new_section+0x215>
 804c70d:	c9                   	leaveq 
 804c70e:	c3                   	retq   

000000000804c70f <free_section>:
 804c70f:	55                   	push   %rbp
 804c710:	48 89 e5             	mov    %rsp,%rbp
 804c713:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804c71a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c71e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c722:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804c729:	00 00 00 
 804c72c:	48 01 c8             	add    %rcx,%rax
 804c72f:	48 8b 08             	mov    (%rax),%rcx
 804c732:	48 89 cf             	mov    %rcx,%rdi
 804c735:	b8 00 00 00 00       	mov    $0x0,%eax
 804c73a:	e8 f7 f7 ff ff       	callq  804bf36 <tcc_free>
 804c73f:	c9                   	leaveq 
 804c740:	c3                   	retq   

000000000804c741 <section_realloc>:
 804c741:	55                   	push   %rbp
 804c742:	48 89 e5             	mov    %rsp,%rbp
 804c745:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804c74c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c750:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c758:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804c75f:	00 00 00 
 804c762:	48 01 c8             	add    %rcx,%rax
 804c765:	48 8b 08             	mov    (%rax),%rcx
 804c768:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 804c76c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c770:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804c777:	00 00 00 
 804c77a:	48 39 c8             	cmp    %rcx,%rax
 804c77d:	0f 85 0e 00 00 00    	jne    804c791 <section_realloc+0x50>
 804c783:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 804c78a:	00 00 00 
 804c78d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804c791:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c795:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804c799:	48 39 c8             	cmp    %rcx,%rax
 804c79c:	0f 83 11 00 00 00    	jae    804c7b3 <section_realloc+0x72>
 804c7a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c7a6:	48 c1 e0 01          	shl    $0x1,%rax
 804c7aa:	48 89 c1             	mov    %rax,%rcx
 804c7ad:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 804c7b1:	eb de                	jmp    804c791 <section_realloc+0x50>
 804c7b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c7b7:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804c7be:	00 00 00 
 804c7c1:	48 01 c8             	add    %rcx,%rax
 804c7c4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804c7c8:	48 89 ce             	mov    %rcx,%rsi
 804c7cb:	48 8b 08             	mov    (%rax),%rcx
 804c7ce:	48 89 cf             	mov    %rcx,%rdi
 804c7d1:	b8 00 00 00 00       	mov    $0x0,%eax
 804c7d6:	e8 42 f8 ff ff       	callq  804c01d <tcc_realloc>
 804c7db:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804c7df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c7e3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804c7ea:	00 00 00 
 804c7ed:	48 01 c8             	add    %rcx,%rax
 804c7f0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804c7f4:	48 8b 10             	mov    (%rax),%rdx
 804c7f7:	48 01 d1             	add    %rdx,%rcx
 804c7fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c7fe:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 804c805:	00 00 00 
 804c808:	48 01 d0             	add    %rdx,%rax
 804c80b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 804c80f:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 804c813:	48 8b 08             	mov    (%rax),%rcx
 804c816:	48 29 ca             	sub    %rcx,%rdx
 804c819:	49 89 d2             	mov    %rdx,%r10
 804c81c:	b8 00 00 00 00       	mov    $0x0,%eax
 804c821:	48 89 c6             	mov    %rax,%rsi
 804c824:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804c828:	48 89 c7             	mov    %rax,%rdi
 804c82b:	4c 89 d2             	mov    %r10,%rdx
 804c82e:	b8 00 00 00 00       	mov    $0x0,%eax
 804c833:	e8 78 a6 03 00       	callq  8086eb0 <memset>
 804c838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c83c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804c843:	00 00 00 
 804c846:	48 01 c8             	add    %rcx,%rax
 804c849:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804c84d:	48 89 08             	mov    %rcx,(%rax)
 804c850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c854:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804c85b:	00 00 00 
 804c85e:	48 01 c8             	add    %rcx,%rax
 804c861:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804c865:	48 89 08             	mov    %rcx,(%rax)
 804c868:	c9                   	leaveq 
 804c869:	c3                   	retq   

000000000804c86a <section_ptr_add>:
 804c86a:	55                   	push   %rbp
 804c86b:	48 89 e5             	mov    %rsp,%rbp
 804c86e:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804c875:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c879:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c87d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c881:	48 8b 08             	mov    (%rax),%rcx
 804c884:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 804c888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c88c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804c890:	48 01 c8             	add    %rcx,%rax
 804c893:	48 89 c1             	mov    %rax,%rcx
 804c896:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804c89a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c89e:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804c8a5:	00 00 00 
 804c8a8:	48 01 c8             	add    %rcx,%rax
 804c8ab:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804c8af:	48 8b 10             	mov    (%rax),%rdx
 804c8b2:	48 39 d1             	cmp    %rdx,%rcx
 804c8b5:	0f 86 18 00 00 00    	jbe    804c8d3 <section_ptr_add+0x69>
 804c8bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804c8bf:	48 89 c6             	mov    %rax,%rsi
 804c8c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c8c6:	48 89 c7             	mov    %rax,%rdi
 804c8c9:	b8 00 00 00 00       	mov    $0x0,%eax
 804c8ce:	e8 6e fe ff ff       	callq  804c741 <section_realloc>
 804c8d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c8d7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804c8db:	48 89 08             	mov    %rcx,(%rax)
 804c8de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c8e2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804c8e9:	00 00 00 
 804c8ec:	48 01 c8             	add    %rcx,%rax
 804c8ef:	48 8b 08             	mov    (%rax),%rcx
 804c8f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c8f6:	48 01 c1             	add    %rax,%rcx
 804c8f9:	48 89 c8             	mov    %rcx,%rax
 804c8fc:	e9 00 00 00 00       	jmpq   804c901 <section_ptr_add+0x97>
 804c901:	c9                   	leaveq 
 804c902:	c3                   	retq   

000000000804c903 <section_reserve>:
 804c903:	55                   	push   %rbp
 804c904:	48 89 e5             	mov    %rsp,%rbp
 804c907:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804c90e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c912:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c91a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804c921:	00 00 00 
 804c924:	48 01 c8             	add    %rcx,%rax
 804c927:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804c92b:	48 8b 10             	mov    (%rax),%rdx
 804c92e:	48 39 d1             	cmp    %rdx,%rcx
 804c931:	0f 86 18 00 00 00    	jbe    804c94f <section_reserve+0x4c>
 804c937:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804c93b:	48 89 c6             	mov    %rax,%rsi
 804c93e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c942:	48 89 c7             	mov    %rax,%rdi
 804c945:	b8 00 00 00 00       	mov    $0x0,%eax
 804c94a:	e8 f2 fd ff ff       	callq  804c741 <section_realloc>
 804c94f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c953:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804c957:	48 8b 10             	mov    (%rax),%rdx
 804c95a:	48 39 d1             	cmp    %rdx,%rcx
 804c95d:	0f 86 0b 00 00 00    	jbe    804c96e <section_reserve+0x6b>
 804c963:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c967:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804c96b:	48 89 08             	mov    %rcx,(%rax)
 804c96e:	c9                   	leaveq 
 804c96f:	c3                   	retq   

000000000804c970 <find_section>:
 804c970:	55                   	push   %rbp
 804c971:	48 89 e5             	mov    %rsp,%rbp
 804c974:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804c97b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804c97f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804c983:	b8 01 00 00 00       	mov    $0x1,%eax
 804c988:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804c98b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c98f:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 804c996:	00 00 00 
 804c999:	48 01 c8             	add    %rcx,%rax
 804c99c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804c99f:	8b 10                	mov    (%rax),%edx
 804c9a1:	39 d1                	cmp    %edx,%ecx
 804c9a3:	0f 8d 7e 00 00 00    	jge    804ca27 <find_section+0xb7>
 804c9a9:	e9 0e 00 00 00       	jmpq   804c9bc <find_section+0x4c>
 804c9ae:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804c9b1:	48 89 c1             	mov    %rax,%rcx
 804c9b4:	83 c0 01             	add    $0x1,%eax
 804c9b7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804c9ba:	eb cf                	jmp    804c98b <find_section+0x1b>
 804c9bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804c9c0:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804c9c7:	00 00 00 
 804c9ca:	48 01 c8             	add    %rcx,%rax
 804c9cd:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804c9d0:	48 63 c9             	movslq %ecx,%rcx
 804c9d3:	48 89 ca             	mov    %rcx,%rdx
 804c9d6:	48 c1 e2 03          	shl    $0x3,%rdx
 804c9da:	48 8b 08             	mov    (%rax),%rcx
 804c9dd:	48 89 d0             	mov    %rdx,%rax
 804c9e0:	48 01 c1             	add    %rax,%rcx
 804c9e3:	48 8b 01             	mov    (%rcx),%rax
 804c9e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804c9ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804c9ee:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804c9f5:	00 00 00 
 804c9f8:	48 01 c8             	add    %rcx,%rax
 804c9fb:	48 89 c6             	mov    %rax,%rsi
 804c9fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ca02:	48 89 c7             	mov    %rax,%rdi
 804ca05:	b8 00 00 00 00       	mov    $0x0,%eax
 804ca0a:	e8 d1 a7 03 00       	callq  80871e0 <strcmp>
 804ca0f:	85 c0                	test   %eax,%eax
 804ca11:	0f 84 05 00 00 00    	je     804ca1c <find_section+0xac>
 804ca17:	e9 09 00 00 00       	jmpq   804ca25 <find_section+0xb5>
 804ca1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804ca20:	e9 35 00 00 00       	jmpq   804ca5a <find_section+0xea>
 804ca25:	eb 87                	jmp    804c9ae <find_section+0x3e>
 804ca27:	b8 02 00 00 00       	mov    $0x2,%eax
 804ca2c:	49 89 c3             	mov    %rax,%r11
 804ca2f:	b8 01 00 00 00       	mov    $0x1,%eax
 804ca34:	49 89 c2             	mov    %rax,%r10
 804ca37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ca3b:	48 89 c6             	mov    %rax,%rsi
 804ca3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ca42:	48 89 c7             	mov    %rax,%rdi
 804ca45:	4c 89 d2             	mov    %r10,%rdx
 804ca48:	4c 89 d9             	mov    %r11,%rcx
 804ca4b:	b8 00 00 00 00       	mov    $0x0,%eax
 804ca50:	e8 a3 fa ff ff       	callq  804c4f8 <new_section>
 804ca55:	e9 00 00 00 00       	jmpq   804ca5a <find_section+0xea>
 804ca5a:	c9                   	leaveq 
 804ca5b:	c3                   	retq   

000000000804ca5c <put_extern_sym2>:
 804ca5c:	55                   	push   %rbp
 804ca5d:	48 89 e5             	mov    %rsp,%rbp
 804ca60:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
 804ca67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804ca6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804ca6f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804ca73:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804ca77:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 804ca7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ca7f:	48 89 c1             	mov    %rax,%rcx
 804ca82:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804ca89:	00 00 00 
 804ca8c:	48 39 c1             	cmp    %rax,%rcx
 804ca8f:	0f 85 0d 00 00 00    	jne    804caa2 <put_extern_sym2+0x46>
 804ca95:	b8 00 00 00 00       	mov    $0x0,%eax
 804ca9a:	89 45 cc             	mov    %eax,-0x34(%rbp)
 804ca9d:	e9 3d 00 00 00       	jmpq   804cadf <put_extern_sym2+0x83>
 804caa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804caa6:	48 89 c1             	mov    %rax,%rcx
 804caa9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 804cab0:	00 00 00 
 804cab3:	48 39 c1             	cmp    %rax,%rcx
 804cab6:	0f 85 0d 00 00 00    	jne    804cac9 <put_extern_sym2+0x6d>
 804cabc:	b8 f1 ff 00 00       	mov    $0xfff1,%eax
 804cac1:	89 45 cc             	mov    %eax,-0x34(%rbp)
 804cac4:	e9 16 00 00 00       	jmpq   804cadf <put_extern_sym2+0x83>
 804cac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804cacd:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 804cad4:	00 00 00 
 804cad7:	48 01 c8             	add    %rcx,%rax
 804cada:	8b 08                	mov    (%rax),%ecx
 804cadc:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 804cadf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cae3:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804caea:	00 00 00 
 804caed:	48 01 c8             	add    %rcx,%rax
 804caf0:	8b 08                	mov    (%rax),%ecx
 804caf2:	83 e1 0f             	and    $0xf,%ecx
 804caf5:	83 f9 06             	cmp    $0x6,%ecx
 804caf8:	0f 85 0d 00 00 00    	jne    804cb0b <put_extern_sym2+0xaf>
 804cafe:	b8 02 00 00 00       	mov    $0x2,%eax
 804cb03:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 804cb06:	e9 34 00 00 00       	jmpq   804cb3f <put_extern_sym2+0xe3>
 804cb0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cb0f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804cb16:	00 00 00 
 804cb19:	48 01 c8             	add    %rcx,%rax
 804cb1c:	8b 08                	mov    (%rax),%ecx
 804cb1e:	83 e1 0f             	and    $0xf,%ecx
 804cb21:	83 f9 03             	cmp    $0x3,%ecx
 804cb24:	0f 85 0d 00 00 00    	jne    804cb37 <put_extern_sym2+0xdb>
 804cb2a:	b8 00 00 00 00       	mov    $0x0,%eax
 804cb2f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 804cb32:	e9 08 00 00 00       	jmpq   804cb3f <put_extern_sym2+0xe3>
 804cb37:	b8 01 00 00 00       	mov    $0x1,%eax
 804cb3c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 804cb3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cb43:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804cb4a:	00 00 00 
 804cb4d:	48 01 c8             	add    %rcx,%rax
 804cb50:	8b 08                	mov    (%rax),%ecx
 804cb52:	81 e1 00 01 00 00    	and    $0x100,%ecx
 804cb58:	85 c9                	test   %ecx,%ecx
 804cb5a:	0f 84 0d 00 00 00    	je     804cb6d <put_extern_sym2+0x111>
 804cb60:	b8 00 00 00 00       	mov    $0x0,%eax
 804cb65:	89 45 d0             	mov    %eax,-0x30(%rbp)
 804cb68:	e9 36 00 00 00       	jmpq   804cba3 <put_extern_sym2+0x147>
 804cb6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cb71:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804cb78:	00 00 00 
 804cb7b:	48 01 c8             	add    %rcx,%rax
 804cb7e:	8b 08                	mov    (%rax),%ecx
 804cb80:	81 e1 00 00 01 00    	and    $0x10000,%ecx
 804cb86:	85 c9                	test   %ecx,%ecx
 804cb88:	0f 84 0d 00 00 00    	je     804cb9b <put_extern_sym2+0x13f>
 804cb8e:	b8 02 00 00 00       	mov    $0x2,%eax
 804cb93:	89 45 d0             	mov    %eax,-0x30(%rbp)
 804cb96:	e9 08 00 00 00       	jmpq   804cba3 <put_extern_sym2+0x147>
 804cb9b:	b8 01 00 00 00       	mov    $0x1,%eax
 804cba0:	89 45 d0             	mov    %eax,-0x30(%rbp)
 804cba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cba7:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804cbae:	00 00 00 
 804cbb1:	48 01 c8             	add    %rcx,%rax
 804cbb4:	48 8b 08             	mov    (%rax),%rcx
 804cbb7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804cbbe:	00 00 00 
 804cbc1:	48 39 c1             	cmp    %rax,%rcx
 804cbc4:	b8 00 00 00 00       	mov    $0x0,%eax
 804cbc9:	0f 95 c0             	setne  %al
 804cbcc:	85 c0                	test   %eax,%eax
 804cbce:	0f 84 05 00 00 00    	je     804cbd9 <put_extern_sym2+0x17d>
 804cbd4:	e9 49 01 00 00       	jmpq   804cd22 <put_extern_sym2+0x2c6>
 804cbd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cbdd:	b9 00 00 00 00       	mov    $0x0,%ecx
 804cbe2:	48 89 ce             	mov    %rcx,%rsi
 804cbe5:	8b 08                	mov    (%rax),%ecx
 804cbe7:	48 89 cf             	mov    %rcx,%rdi
 804cbea:	b8 00 00 00 00       	mov    $0x0,%eax
 804cbef:	e8 c0 4c 00 00       	callq  80518b4 <get_tok_str>
 804cbf4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 804cbf8:	b8 00 00 00 00       	mov    $0x0,%eax
 804cbfd:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 804cc00:	48 8b 05 89 12 04 00 	mov    0x41289(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804cc07:	48 8b 00             	mov    (%rax),%rax
 804cc0a:	48 b9 30 01 00 00 00 	movabs $0x130,%rcx
 804cc11:	00 00 00 
 804cc14:	48 01 c8             	add    %rcx,%rax
 804cc17:	8b 08                	mov    (%rax),%ecx
 804cc19:	85 c9                	test   %ecx,%ecx
 804cc1b:	0f 84 47 00 00 00    	je     804cc68 <put_extern_sym2+0x20c>
 804cc21:	8b 45 d8             	mov    -0x28(%rbp),%eax
 804cc24:	85 c0                	test   %eax,%eax
 804cc26:	0f 84 3c 00 00 00    	je     804cc68 <put_extern_sym2+0x20c>
 804cc2c:	b8 5f 00 00 00       	mov    $0x5f,%eax
 804cc31:	88 85 b0 fe ff ff    	mov    %al,-0x150(%rbp)
 804cc37:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 804cc3b:	49 89 c2             	mov    %rax,%r10
 804cc3e:	b8 ff 00 00 00       	mov    $0xff,%eax
 804cc43:	48 89 c6             	mov    %rax,%rsi
 804cc46:	48 8d 85 b1 fe ff ff 	lea    -0x14f(%rbp),%rax
 804cc4d:	48 89 c7             	mov    %rax,%rdi
 804cc50:	4c 89 d2             	mov    %r10,%rdx
 804cc53:	b8 00 00 00 00       	mov    $0x0,%eax
 804cc58:	e8 46 f0 ff ff       	callq  804bca3 <pstrcpy>
 804cc5d:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
 804cc64:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 804cc68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cc6c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804cc73:	00 00 00 
 804cc76:	48 01 c8             	add    %rcx,%rax
 804cc79:	48 8b 08             	mov    (%rax),%rcx
 804cc7c:	85 c9                	test   %ecx,%ecx
 804cc7e:	0f 84 18 00 00 00    	je     804cc9c <put_extern_sym2+0x240>
 804cc84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cc88:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804cc8f:	00 00 00 
 804cc92:	48 01 c8             	add    %rcx,%rax
 804cc95:	48 8b 08             	mov    (%rax),%rcx
 804cc98:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 804cc9c:	8b 45 d0             	mov    -0x30(%rbp),%eax
 804cc9f:	c1 e0 04             	shl    $0x4,%eax
 804cca2:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 804cca5:	83 e1 0f             	and    $0xf,%ecx
 804cca8:	48 01 c8             	add    %rcx,%rax
 804ccab:	89 45 c8             	mov    %eax,-0x38(%rbp)
 804ccae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ccb2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804ccb9:	00 00 00 
 804ccbc:	48 01 c8             	add    %rcx,%rax
 804ccbf:	50                   	push   %rax
 804ccc0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 804ccc4:	51                   	push   %rcx
 804ccc5:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 804ccc8:	49 89 c9             	mov    %rcx,%r9
 804cccb:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 804ccce:	49 89 c8             	mov    %rcx,%r8
 804ccd1:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 804ccd4:	49 89 cb             	mov    %rcx,%r11
 804ccd7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804ccdb:	49 89 ca             	mov    %rcx,%r10
 804ccde:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804cce2:	48 89 ce             	mov    %rcx,%rsi
 804cce5:	48 8b 0d ac 11 04 00 	mov    0x411ac(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804ccec:	48 8b 09             	mov    (%rcx),%rcx
 804ccef:	48 89 cf             	mov    %rcx,%rdi
 804ccf2:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
 804ccf9:	4c 89 d2             	mov    %r10,%rdx
 804ccfc:	4c 89 d9             	mov    %r11,%rcx
 804ccff:	b8 00 00 00 00       	mov    $0x0,%eax
 804cd04:	e8 15 15 02 00       	callq  806e21e <add_elf_sym>
 804cd09:	48 83 c4 10          	add    $0x10,%rsp
 804cd0d:	48 63 c0             	movslq %eax,%rax
 804cd10:	48 89 c1             	mov    %rax,%rcx
 804cd13:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 804cd1a:	48 89 08             	mov    %rcx,(%rax)
 804cd1d:	e9 8e 00 00 00       	jmpq   804cdb0 <put_extern_sym2+0x354>
 804cd22:	48 8b 05 6f 11 04 00 	mov    0x4116f(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804cd29:	48 8b 00             	mov    (%rax),%rax
 804cd2c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804cd33:	00 00 00 
 804cd36:	48 01 c8             	add    %rcx,%rax
 804cd39:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804cd3d:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 804cd44:	00 00 00 
 804cd47:	48 01 d1             	add    %rdx,%rcx
 804cd4a:	48 8b 11             	mov    (%rcx),%rdx
 804cd4d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804cd54:	00 00 00 
 804cd57:	48 0f af d1          	imul   %rcx,%rdx
 804cd5b:	48 8b 08             	mov    (%rax),%rcx
 804cd5e:	48 89 d0             	mov    %rdx,%rax
 804cd61:	48 01 c1             	add    %rax,%rcx
 804cd64:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 804cd68:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804cd6c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804cd73:	00 00 00 
 804cd76:	48 01 c8             	add    %rcx,%rax
 804cd79:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804cd7d:	48 89 08             	mov    %rcx,(%rax)
 804cd80:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804cd84:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804cd8b:	00 00 00 
 804cd8e:	48 01 c8             	add    %rcx,%rax
 804cd91:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804cd95:	48 89 08             	mov    %rcx,(%rax)
 804cd98:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 804cd9c:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 804cda3:	00 00 00 
 804cda6:	48 01 c8             	add    %rcx,%rax
 804cda9:	0f b7 4d cc          	movzwl -0x34(%rbp),%ecx
 804cdad:	66 89 08             	mov    %cx,(%rax)
 804cdb0:	c9                   	leaveq 
 804cdb1:	c3                   	retq   

000000000804cdb2 <put_extern_sym>:
 804cdb2:	55                   	push   %rbp
 804cdb3:	48 89 e5             	mov    %rsp,%rbp
 804cdb6:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804cdbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804cdc1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804cdc5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804cdc9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804cdcd:	b8 01 00 00 00       	mov    $0x1,%eax
 804cdd2:	49 89 c0             	mov    %rax,%r8
 804cdd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804cdd9:	49 89 c3             	mov    %rax,%r11
 804cddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804cde0:	49 89 c2             	mov    %rax,%r10
 804cde3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804cde7:	48 89 c6             	mov    %rax,%rsi
 804cdea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cdee:	48 89 c7             	mov    %rax,%rdi
 804cdf1:	4c 89 d2             	mov    %r10,%rdx
 804cdf4:	4c 89 d9             	mov    %r11,%rcx
 804cdf7:	b8 00 00 00 00       	mov    $0x0,%eax
 804cdfc:	e8 5b fc ff ff       	callq  804ca5c <put_extern_sym2>
 804ce01:	c9                   	leaveq 
 804ce02:	c3                   	retq   

000000000804ce03 <greloc>:
 804ce03:	55                   	push   %rbp
 804ce04:	48 89 e5             	mov    %rsp,%rbp
 804ce07:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804ce0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804ce12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804ce16:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804ce1a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804ce1e:	b8 00 00 00 00       	mov    $0x0,%eax
 804ce23:	89 45 dc             	mov    %eax,-0x24(%rbp)
 804ce26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ce2a:	85 c0                	test   %eax,%eax
 804ce2c:	0f 84 77 00 00 00    	je     804cea9 <greloc+0xa6>
 804ce32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ce36:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804ce3d:	00 00 00 
 804ce40:	48 01 c8             	add    %rcx,%rax
 804ce43:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804ce4a:	00 00 00 
 804ce4d:	48 8b 10             	mov    (%rax),%rdx
 804ce50:	48 39 d1             	cmp    %rdx,%rcx
 804ce53:	0f 85 39 00 00 00    	jne    804ce92 <greloc+0x8f>
 804ce59:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804ce60:	00 00 00 
 804ce63:	49 89 c3             	mov    %rax,%r11
 804ce66:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804ce6d:	00 00 00 
 804ce70:	49 89 c2             	mov    %rax,%r10
 804ce73:	b8 00 00 00 00       	mov    $0x0,%eax
 804ce78:	48 89 c6             	mov    %rax,%rsi
 804ce7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ce7f:	48 89 c7             	mov    %rax,%rdi
 804ce82:	4c 89 d2             	mov    %r10,%rdx
 804ce85:	4c 89 d9             	mov    %r11,%rcx
 804ce88:	b8 00 00 00 00       	mov    $0x0,%eax
 804ce8d:	e8 20 ff ff ff       	callq  804cdb2 <put_extern_sym>
 804ce92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804ce96:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804ce9d:	00 00 00 
 804cea0:	48 01 c8             	add    %rcx,%rax
 804cea3:	48 8b 08             	mov    (%rax),%rcx
 804cea6:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 804cea9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 804ceac:	49 89 c0             	mov    %rax,%r8
 804ceaf:	8b 45 e0             	mov    -0x20(%rbp),%eax
 804ceb2:	49 89 c3             	mov    %rax,%r11
 804ceb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804ceb9:	49 89 c2             	mov    %rax,%r10
 804cebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cec0:	48 89 c6             	mov    %rax,%rsi
 804cec3:	48 8b 05 ce 0f 04 00 	mov    0x40fce(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804ceca:	48 8b 00             	mov    (%rax),%rax
 804cecd:	48 89 c7             	mov    %rax,%rdi
 804ced0:	4c 89 d2             	mov    %r10,%rdx
 804ced3:	4c 89 d9             	mov    %r11,%rcx
 804ced6:	b8 00 00 00 00       	mov    $0x0,%eax
 804cedb:	e8 60 17 02 00       	callq  806e640 <put_elf_reloc>
 804cee0:	c9                   	leaveq 
 804cee1:	c3                   	retq   

000000000804cee2 <strcat_vprintf>:
 804cee2:	55                   	push   %rbp
 804cee3:	48 89 e5             	mov    %rsp,%rbp
 804cee6:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804ceed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804cef1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804cef5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804cef9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804cefd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804cf01:	48 89 c7             	mov    %rax,%rdi
 804cf04:	b8 00 00 00 00       	mov    $0x0,%eax
 804cf09:	e8 d2 a3 03 00       	callq  80872e0 <strlen>
 804cf0e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 804cf11:	8b 45 dc             	mov    -0x24(%rbp),%eax
 804cf14:	48 63 c0             	movslq %eax,%rax
 804cf17:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804cf1b:	48 89 c2             	mov    %rax,%rdx
 804cf1e:	48 01 d1             	add    %rdx,%rcx
 804cf21:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804cf24:	8b 55 dc             	mov    -0x24(%rbp),%edx
 804cf27:	48 29 d0             	sub    %rdx,%rax
 804cf2a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 804cf2e:	49 89 d3             	mov    %rdx,%r11
 804cf31:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 804cf35:	49 89 d2             	mov    %rdx,%r10
 804cf38:	48 89 c6             	mov    %rax,%rsi
 804cf3b:	48 89 cf             	mov    %rcx,%rdi
 804cf3e:	4c 89 d2             	mov    %r10,%rdx
 804cf41:	4c 89 d9             	mov    %r11,%rcx
 804cf44:	b8 00 00 00 00       	mov    $0x0,%eax
 804cf49:	e8 12 ac 03 00       	callq  8087b60 <__preinit_array_end+0xc0>
 804cf4e:	c9                   	leaveq 
 804cf4f:	c3                   	retq   

000000000804cf50 <strcat_printf>:
 804cf50:	55                   	push   %rbp
 804cf51:	48 89 e5             	mov    %rsp,%rbp
 804cf54:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
 804cf5b:	c7 45 f0 18 00 00 00 	movl   $0x18,-0x10(%rbp)
 804cf62:	c7 45 f4 30 00 00 00 	movl   $0x30,-0xc(%rbp)
 804cf69:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
 804cf70:	66 0f d6 7d e0       	movq   %xmm7,-0x20(%rbp)
 804cf75:	48 c7 85 e8 ff ff ff 	movq   $0x0,-0x18(%rbp)
 804cf7c:	00 00 00 00 
 804cf80:	66 0f d6 75 d0       	movq   %xmm6,-0x30(%rbp)
 804cf85:	48 c7 85 d8 ff ff ff 	movq   $0x0,-0x28(%rbp)
 804cf8c:	00 00 00 00 
 804cf90:	66 0f d6 6d c0       	movq   %xmm5,-0x40(%rbp)
 804cf95:	48 c7 85 c8 ff ff ff 	movq   $0x0,-0x38(%rbp)
 804cf9c:	00 00 00 00 
 804cfa0:	66 0f d6 65 b0       	movq   %xmm4,-0x50(%rbp)
 804cfa5:	48 c7 85 b8 ff ff ff 	movq   $0x0,-0x48(%rbp)
 804cfac:	00 00 00 00 
 804cfb0:	66 0f d6 5d a0       	movq   %xmm3,-0x60(%rbp)
 804cfb5:	48 c7 85 a8 ff ff ff 	movq   $0x0,-0x58(%rbp)
 804cfbc:	00 00 00 00 
 804cfc0:	66 0f d6 55 90       	movq   %xmm2,-0x70(%rbp)
 804cfc5:	48 c7 85 98 ff ff ff 	movq   $0x0,-0x68(%rbp)
 804cfcc:	00 00 00 00 
 804cfd0:	66 0f d6 4d 80       	movq   %xmm1,-0x80(%rbp)
 804cfd5:	48 c7 85 88 ff ff ff 	movq   $0x0,-0x78(%rbp)
 804cfdc:	00 00 00 00 
 804cfe0:	66 0f d6 85 70 ff ff 	movq   %xmm0,-0x90(%rbp)
 804cfe7:	ff 
 804cfe8:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
 804cfef:	00 00 00 00 
 804cff3:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
 804cffa:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
 804d001:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 804d008:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
 804d00f:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
 804d016:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
 804d01d:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
 804d024:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
 804d02b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
 804d032:	b8 18 00 00 00       	mov    $0x18,%eax
 804d037:	48 89 c7             	mov    %rax,%rdi
 804d03a:	b8 00 00 00 00       	mov    $0x0,%eax
 804d03f:	e8 ec aa 03 00       	callq  8087b30 <__preinit_array_end+0x90>
 804d044:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 804d04b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 804d052:	b9 18 00 00 00       	mov    $0x18,%ecx
 804d057:	49 89 ca             	mov    %rcx,%r10
 804d05a:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 804d05e:	48 89 ce             	mov    %rcx,%rsi
 804d061:	48 89 c7             	mov    %rax,%rdi
 804d064:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 804d06b:	4c 89 d2             	mov    %r10,%rdx
 804d06e:	b8 00 00 00 00       	mov    $0x0,%eax
 804d073:	e8 f8 9b 03 00       	callq  8086c70 <memcpy>
 804d078:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 804d07f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804d086:	00 00 00 
 804d089:	48 01 c8             	add    %rcx,%rax
 804d08c:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
 804d093:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804d09a:	00 00 00 
 804d09d:	48 01 d1             	add    %rdx,%rcx
 804d0a0:	8b 11                	mov    (%rcx),%edx
 804d0a2:	48 8d 4d 00          	lea    0x0(%rbp),%rcx
 804d0a6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 804d0ad:	48 89 d0             	mov    %rdx,%rax
 804d0b0:	48 01 c1             	add    %rax,%rcx
 804d0b3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
 804d0ba:	48 89 08             	mov    %rcx,(%rax)
 804d0bd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 804d0c4:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804d0cb:	00 00 00 
 804d0ce:	48 01 c8             	add    %rcx,%rax
 804d0d1:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
 804d0d8:	48 89 08             	mov    %rcx,(%rax)
 804d0db:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 804d0e2:	49 89 c3             	mov    %rax,%r11
 804d0e5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d0ec:	49 89 c2             	mov    %rax,%r10
 804d0ef:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
 804d0f5:	48 89 c6             	mov    %rax,%rsi
 804d0f8:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 804d0ff:	48 89 c7             	mov    %rax,%rdi
 804d102:	4c 89 d2             	mov    %r10,%rdx
 804d105:	4c 89 d9             	mov    %r11,%rcx
 804d108:	b8 00 00 00 00       	mov    $0x0,%eax
 804d10d:	e8 d0 fd ff ff       	callq  804cee2 <strcat_vprintf>
 804d112:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 804d119:	48 89 c7             	mov    %rax,%rdi
 804d11c:	b8 00 00 00 00       	mov    $0x0,%eax
 804d121:	e8 fa a9 03 00       	callq  8087b20 <__preinit_array_end+0x80>
 804d126:	c9                   	leaveq 
 804d127:	c3                   	retq   

000000000804d128 <error1>:
 804d128:	55                   	push   %rbp
 804d129:	48 89 e5             	mov    %rsp,%rbp
 804d12c:	48 81 ec 30 08 00 00 	sub    $0x830,%rsp
 804d133:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804d137:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804d13b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804d13f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804d143:	b8 00 00 00 00       	mov    $0x0,%eax
 804d148:	88 85 e0 f7 ff ff    	mov    %al,-0x820(%rbp)
 804d14e:	48 8b 05 4b 0d 04 00 	mov    0x40d4b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804d155:	48 8b 00             	mov    (%rax),%rax
 804d158:	85 c0                	test   %eax,%eax
 804d15a:	0f 84 a2 01 00 00    	je     804d302 <error1+0x1da>
 804d160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d164:	48 b9 48 02 00 00 00 	movabs $0x248,%rcx
 804d16b:	00 00 00 
 804d16e:	48 01 c8             	add    %rcx,%rax
 804d171:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
 804d178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d17c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804d183:	00 00 00 
 804d186:	48 01 c8             	add    %rcx,%rax
 804d189:	48 8b 8d d8 f7 ff ff 	mov    -0x828(%rbp),%rcx
 804d190:	48 8b 10             	mov    (%rax),%rdx
 804d193:	48 89 c8             	mov    %rcx,%rax
 804d196:	48 89 d1             	mov    %rdx,%rcx
 804d199:	48 39 c8             	cmp    %rcx,%rax
 804d19c:	0f 83 8c 00 00 00    	jae    804d22e <error1+0x106>
 804d1a2:	e9 20 00 00 00       	jmpq   804d1c7 <error1+0x9f>
 804d1a7:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
 804d1ae:	48 89 c1             	mov    %rax,%rcx
 804d1b1:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804d1b8:	00 00 00 
 804d1bb:	48 01 d0             	add    %rdx,%rax
 804d1be:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
 804d1c5:	eb b1                	jmp    804d178 <error1+0x50>
 804d1c7:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
 804d1ce:	48 8b 08             	mov    (%rax),%rcx
 804d1d1:	48 b8 39 02 00 00 00 	movabs $0x239,%rax
 804d1d8:	00 00 00 
 804d1db:	48 01 c1             	add    %rax,%rcx
 804d1de:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
 804d1e5:	48 8b 10             	mov    (%rax),%rdx
 804d1e8:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 804d1ef:	00 00 00 
 804d1f2:	48 01 c2             	add    %rax,%rdx
 804d1f5:	8b 02                	mov    (%rdx),%eax
 804d1f7:	49 89 c0             	mov    %rax,%r8
 804d1fa:	49 89 cb             	mov    %rcx,%r11
 804d1fd:	48 8d 05 c0 c6 03 00 	lea    0x3c6c0(%rip),%rax        # 80898c4 <L.109>
 804d204:	49 89 c2             	mov    %rax,%r10
 804d207:	b8 00 08 00 00       	mov    $0x800,%eax
 804d20c:	48 89 c6             	mov    %rax,%rsi
 804d20f:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d216:	48 89 c7             	mov    %rax,%rdi
 804d219:	4c 89 d2             	mov    %r10,%rdx
 804d21c:	4c 89 d9             	mov    %r11,%rcx
 804d21f:	b8 00 00 00 00       	mov    $0x0,%eax
 804d224:	e8 27 fd ff ff       	callq  804cf50 <strcat_printf>
 804d229:	e9 79 ff ff ff       	jmpq   804d1a7 <error1+0x7f>
 804d22e:	48 8b 05 6b 0c 04 00 	mov    0x40c6b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804d235:	48 8b 00             	mov    (%rax),%rax
 804d238:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804d23f:	00 00 00 
 804d242:	48 01 c8             	add    %rcx,%rax
 804d245:	8b 08                	mov    (%rax),%ecx
 804d247:	83 f9 00             	cmp    $0x0,%ecx
 804d24a:	0f 8e 67 00 00 00    	jle    804d2b7 <error1+0x18f>
 804d250:	48 8b 05 49 0c 04 00 	mov    0x40c49(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804d257:	48 8b 00             	mov    (%rax),%rax
 804d25a:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 804d261:	00 00 00 
 804d264:	48 01 c8             	add    %rcx,%rax
 804d267:	48 8b 0d 32 0c 04 00 	mov    0x40c32(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804d26e:	48 8b 09             	mov    (%rcx),%rcx
 804d271:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 804d278:	00 00 00 
 804d27b:	48 01 d1             	add    %rdx,%rcx
 804d27e:	8b 11                	mov    (%rcx),%edx
 804d280:	49 89 d0             	mov    %rdx,%r8
 804d283:	49 89 c3             	mov    %rax,%r11
 804d286:	48 8d 05 55 c6 03 00 	lea    0x3c655(%rip),%rax        # 80898e2 <L.110>
 804d28d:	49 89 c2             	mov    %rax,%r10
 804d290:	b8 00 08 00 00       	mov    $0x800,%eax
 804d295:	48 89 c6             	mov    %rax,%rsi
 804d298:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d29f:	48 89 c7             	mov    %rax,%rdi
 804d2a2:	4c 89 d2             	mov    %r10,%rdx
 804d2a5:	4c 89 d9             	mov    %r11,%rcx
 804d2a8:	b8 00 00 00 00       	mov    $0x0,%eax
 804d2ad:	e8 9e fc ff ff       	callq  804cf50 <strcat_printf>
 804d2b2:	e9 46 00 00 00       	jmpq   804d2fd <error1+0x1d5>
 804d2b7:	48 8b 05 e2 0b 04 00 	mov    0x40be2(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804d2be:	48 8b 00             	mov    (%rax),%rax
 804d2c1:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 804d2c8:	00 00 00 
 804d2cb:	48 01 c8             	add    %rcx,%rax
 804d2ce:	49 89 c3             	mov    %rax,%r11
 804d2d1:	48 8d 05 12 c6 03 00 	lea    0x3c612(%rip),%rax        # 80898ea <L.111>
 804d2d8:	49 89 c2             	mov    %rax,%r10
 804d2db:	b8 00 08 00 00       	mov    $0x800,%eax
 804d2e0:	48 89 c6             	mov    %rax,%rsi
 804d2e3:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d2ea:	48 89 c7             	mov    %rax,%rdi
 804d2ed:	4c 89 d2             	mov    %r10,%rdx
 804d2f0:	4c 89 d9             	mov    %r11,%rcx
 804d2f3:	b8 00 00 00 00       	mov    $0x0,%eax
 804d2f8:	e8 53 fc ff ff       	callq  804cf50 <strcat_printf>
 804d2fd:	e9 29 00 00 00       	jmpq   804d32b <error1+0x203>
 804d302:	48 8d 05 e6 c5 03 00 	lea    0x3c5e6(%rip),%rax        # 80898ef <L.112>
 804d309:	49 89 c2             	mov    %rax,%r10
 804d30c:	b8 00 08 00 00       	mov    $0x800,%eax
 804d311:	48 89 c6             	mov    %rax,%rsi
 804d314:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d31b:	48 89 c7             	mov    %rax,%rdi
 804d31e:	4c 89 d2             	mov    %r10,%rdx
 804d321:	b8 00 00 00 00       	mov    $0x0,%eax
 804d326:	e8 25 fc ff ff       	callq  804cf50 <strcat_printf>
 804d32b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804d32e:	85 c0                	test   %eax,%eax
 804d330:	0f 84 2e 00 00 00    	je     804d364 <error1+0x23c>
 804d336:	48 8d 05 b8 c5 03 00 	lea    0x3c5b8(%rip),%rax        # 80898f5 <L.113>
 804d33d:	49 89 c2             	mov    %rax,%r10
 804d340:	b8 00 08 00 00       	mov    $0x800,%eax
 804d345:	48 89 c6             	mov    %rax,%rsi
 804d348:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d34f:	48 89 c7             	mov    %rax,%rdi
 804d352:	4c 89 d2             	mov    %r10,%rdx
 804d355:	b8 00 00 00 00       	mov    $0x0,%eax
 804d35a:	e8 f1 fb ff ff       	callq  804cf50 <strcat_printf>
 804d35f:	e9 29 00 00 00       	jmpq   804d38d <error1+0x265>
 804d364:	48 8d 05 94 c5 03 00 	lea    0x3c594(%rip),%rax        # 80898ff <L.114>
 804d36b:	49 89 c2             	mov    %rax,%r10
 804d36e:	b8 00 08 00 00       	mov    $0x800,%eax
 804d373:	48 89 c6             	mov    %rax,%rsi
 804d376:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d37d:	48 89 c7             	mov    %rax,%rdi
 804d380:	4c 89 d2             	mov    %r10,%rdx
 804d383:	b8 00 00 00 00       	mov    $0x0,%eax
 804d388:	e8 c3 fb ff ff       	callq  804cf50 <strcat_printf>
 804d38d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804d391:	49 89 c3             	mov    %rax,%r11
 804d394:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804d398:	49 89 c2             	mov    %rax,%r10
 804d39b:	b8 00 08 00 00       	mov    $0x800,%eax
 804d3a0:	48 89 c6             	mov    %rax,%rsi
 804d3a3:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d3aa:	48 89 c7             	mov    %rax,%rdi
 804d3ad:	4c 89 d2             	mov    %r10,%rdx
 804d3b0:	4c 89 d9             	mov    %r11,%rcx
 804d3b3:	b8 00 00 00 00       	mov    $0x0,%eax
 804d3b8:	e8 25 fb ff ff       	callq  804cee2 <strcat_vprintf>
 804d3bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d3c1:	48 b9 60 01 00 00 00 	movabs $0x160,%rcx
 804d3c8:	00 00 00 
 804d3cb:	48 01 c8             	add    %rcx,%rax
 804d3ce:	48 8b 08             	mov    (%rax),%rcx
 804d3d1:	85 c9                	test   %ecx,%ecx
 804d3d3:	0f 84 05 00 00 00    	je     804d3de <error1+0x2b6>
 804d3d9:	e9 33 00 00 00       	jmpq   804d411 <error1+0x2e9>
 804d3de:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 804d3e5:	49 89 c2             	mov    %rax,%r10
 804d3e8:	48 8d 05 18 c5 03 00 	lea    0x3c518(%rip),%rax        # 8089907 <L.115>
 804d3ef:	48 89 c6             	mov    %rax,%rsi
 804d3f2:	48 8b 05 af 0a 04 00 	mov    0x40aaf(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 804d3f9:	48 8b 00             	mov    (%rax),%rax
 804d3fc:	48 89 c7             	mov    %rax,%rdi
 804d3ff:	4c 89 d2             	mov    %r10,%rdx
 804d402:	b8 00 00 00 00       	mov    $0x0,%eax
 804d407:	e8 64 a7 03 00       	callq  8087b70 <__preinit_array_end+0xd0>
 804d40c:	e9 4b 00 00 00       	jmpq   804d45c <error1+0x334>
 804d411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d415:	48 b9 60 01 00 00 00 	movabs $0x160,%rcx
 804d41c:	00 00 00 
 804d41f:	48 01 c8             	add    %rcx,%rax
 804d422:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804d426:	48 ba 58 01 00 00 00 	movabs $0x158,%rdx
 804d42d:	00 00 00 
 804d430:	48 01 d1             	add    %rdx,%rcx
 804d433:	48 8d 95 e0 f7 ff ff 	lea    -0x820(%rbp),%rdx
 804d43a:	48 89 d6             	mov    %rdx,%rsi
 804d43d:	48 8b 11             	mov    (%rcx),%rdx
 804d440:	48 89 d7             	mov    %rdx,%rdi
 804d443:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
 804d44a:	b8 00 00 00 00       	mov    $0x0,%eax
 804d44f:	4c 8b 9d d0 f7 ff ff 	mov    -0x830(%rbp),%r11
 804d456:	4d 8b 1b             	mov    (%r11),%r11
 804d459:	41 ff d3             	callq  *%r11
 804d45c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804d45f:	85 c0                	test   %eax,%eax
 804d461:	0f 84 20 00 00 00    	je     804d487 <error1+0x35f>
 804d467:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d46b:	48 b9 3c 01 00 00 00 	movabs $0x13c,%rcx
 804d472:	00 00 00 
 804d475:	48 01 c8             	add    %rcx,%rax
 804d478:	8b 08                	mov    (%rax),%ecx
 804d47a:	85 c9                	test   %ecx,%ecx
 804d47c:	0f 85 05 00 00 00    	jne    804d487 <error1+0x35f>
 804d482:	e9 1b 00 00 00       	jmpq   804d4a2 <error1+0x37a>
 804d487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d48b:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 804d492:	00 00 00 
 804d495:	48 01 c8             	add    %rcx,%rax
 804d498:	8b 08                	mov    (%rax),%ecx
 804d49a:	48 89 ca             	mov    %rcx,%rdx
 804d49d:	83 c1 01             	add    $0x1,%ecx
 804d4a0:	89 08                	mov    %ecx,(%rax)
 804d4a2:	c9                   	leaveq 
 804d4a3:	c3                   	retq   

000000000804d4a4 <tcc_set_error_func>:
 804d4a4:	55                   	push   %rbp
 804d4a5:	48 89 e5             	mov    %rsp,%rbp
 804d4a8:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804d4af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804d4b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804d4b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804d4bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d4bf:	48 b9 58 01 00 00 00 	movabs $0x158,%rcx
 804d4c6:	00 00 00 
 804d4c9:	48 01 c8             	add    %rcx,%rax
 804d4cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804d4d0:	48 89 08             	mov    %rcx,(%rax)
 804d4d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804d4d7:	48 b9 60 01 00 00 00 	movabs $0x160,%rcx
 804d4de:	00 00 00 
 804d4e1:	48 01 c8             	add    %rcx,%rax
 804d4e4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804d4e8:	48 89 08             	mov    %rcx,(%rax)
 804d4eb:	c9                   	leaveq 
 804d4ec:	c3                   	retq   

000000000804d4ed <tcc_error_noabort>:
 804d4ed:	55                   	push   %rbp
 804d4ee:	48 89 e5             	mov    %rsp,%rbp
 804d4f1:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
 804d4f8:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
 804d4ff:	c7 45 f4 30 00 00 00 	movl   $0x30,-0xc(%rbp)
 804d506:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
 804d50d:	66 0f d6 7d e0       	movq   %xmm7,-0x20(%rbp)
 804d512:	48 c7 85 e8 ff ff ff 	movq   $0x0,-0x18(%rbp)
 804d519:	00 00 00 00 
 804d51d:	66 0f d6 75 d0       	movq   %xmm6,-0x30(%rbp)
 804d522:	48 c7 85 d8 ff ff ff 	movq   $0x0,-0x28(%rbp)
 804d529:	00 00 00 00 
 804d52d:	66 0f d6 6d c0       	movq   %xmm5,-0x40(%rbp)
 804d532:	48 c7 85 c8 ff ff ff 	movq   $0x0,-0x38(%rbp)
 804d539:	00 00 00 00 
 804d53d:	66 0f d6 65 b0       	movq   %xmm4,-0x50(%rbp)
 804d542:	48 c7 85 b8 ff ff ff 	movq   $0x0,-0x48(%rbp)
 804d549:	00 00 00 00 
 804d54d:	66 0f d6 5d a0       	movq   %xmm3,-0x60(%rbp)
 804d552:	48 c7 85 a8 ff ff ff 	movq   $0x0,-0x58(%rbp)
 804d559:	00 00 00 00 
 804d55d:	66 0f d6 55 90       	movq   %xmm2,-0x70(%rbp)
 804d562:	48 c7 85 98 ff ff ff 	movq   $0x0,-0x68(%rbp)
 804d569:	00 00 00 00 
 804d56d:	66 0f d6 4d 80       	movq   %xmm1,-0x80(%rbp)
 804d572:	48 c7 85 88 ff ff ff 	movq   $0x0,-0x78(%rbp)
 804d579:	00 00 00 00 
 804d57d:	66 0f d6 85 70 ff ff 	movq   %xmm0,-0x90(%rbp)
 804d584:	ff 
 804d585:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
 804d58c:	00 00 00 00 
 804d590:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
 804d597:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
 804d59e:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 804d5a5:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
 804d5ac:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
 804d5b3:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
 804d5ba:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
 804d5c1:	48 8b 05 c8 08 04 00 	mov    0x408c8(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804d5c8:	48 8b 00             	mov    (%rax),%rax
 804d5cb:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 804d5d2:	b8 18 00 00 00       	mov    $0x18,%eax
 804d5d7:	48 89 c7             	mov    %rax,%rdi
 804d5da:	b8 00 00 00 00       	mov    $0x0,%eax
 804d5df:	e8 4c a5 03 00       	callq  8087b30 <__preinit_array_end+0x90>
 804d5e4:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 804d5eb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d5f2:	b9 18 00 00 00       	mov    $0x18,%ecx
 804d5f7:	49 89 ca             	mov    %rcx,%r10
 804d5fa:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 804d5fe:	48 89 ce             	mov    %rcx,%rsi
 804d601:	48 89 c7             	mov    %rax,%rdi
 804d604:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 804d60b:	4c 89 d2             	mov    %r10,%rdx
 804d60e:	b8 00 00 00 00       	mov    $0x0,%eax
 804d613:	e8 58 96 03 00       	callq  8086c70 <memcpy>
 804d618:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d61f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804d626:	00 00 00 
 804d629:	48 01 c8             	add    %rcx,%rax
 804d62c:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
 804d633:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804d63a:	00 00 00 
 804d63d:	48 01 d1             	add    %rdx,%rcx
 804d640:	8b 11                	mov    (%rcx),%edx
 804d642:	48 8d 4d 00          	lea    0x0(%rbp),%rcx
 804d646:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 804d64d:	48 89 d0             	mov    %rdx,%rax
 804d650:	48 01 c1             	add    %rax,%rcx
 804d653:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 804d65a:	48 89 08             	mov    %rcx,(%rax)
 804d65d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d664:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804d66b:	00 00 00 
 804d66e:	48 01 c8             	add    %rcx,%rax
 804d671:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
 804d678:	48 89 08             	mov    %rcx,(%rax)
 804d67b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d682:	49 89 c3             	mov    %rax,%r11
 804d685:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 804d68c:	49 89 c2             	mov    %rax,%r10
 804d68f:	b8 00 00 00 00       	mov    $0x0,%eax
 804d694:	48 89 c6             	mov    %rax,%rsi
 804d697:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 804d69e:	48 89 c7             	mov    %rax,%rdi
 804d6a1:	4c 89 d2             	mov    %r10,%rdx
 804d6a4:	4c 89 d9             	mov    %r11,%rcx
 804d6a7:	b8 00 00 00 00       	mov    $0x0,%eax
 804d6ac:	e8 77 fa ff ff       	callq  804d128 <error1>
 804d6b1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d6b8:	48 89 c7             	mov    %rax,%rdi
 804d6bb:	b8 00 00 00 00       	mov    $0x0,%eax
 804d6c0:	e8 5b a4 03 00       	callq  8087b20 <__preinit_array_end+0x80>
 804d6c5:	c9                   	leaveq 
 804d6c6:	c3                   	retq   

000000000804d6c7 <tcc_error>:
 804d6c7:	55                   	push   %rbp
 804d6c8:	48 89 e5             	mov    %rsp,%rbp
 804d6cb:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
 804d6d2:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
 804d6d9:	c7 45 f4 30 00 00 00 	movl   $0x30,-0xc(%rbp)
 804d6e0:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
 804d6e7:	66 0f d6 7d e0       	movq   %xmm7,-0x20(%rbp)
 804d6ec:	48 c7 85 e8 ff ff ff 	movq   $0x0,-0x18(%rbp)
 804d6f3:	00 00 00 00 
 804d6f7:	66 0f d6 75 d0       	movq   %xmm6,-0x30(%rbp)
 804d6fc:	48 c7 85 d8 ff ff ff 	movq   $0x0,-0x28(%rbp)
 804d703:	00 00 00 00 
 804d707:	66 0f d6 6d c0       	movq   %xmm5,-0x40(%rbp)
 804d70c:	48 c7 85 c8 ff ff ff 	movq   $0x0,-0x38(%rbp)
 804d713:	00 00 00 00 
 804d717:	66 0f d6 65 b0       	movq   %xmm4,-0x50(%rbp)
 804d71c:	48 c7 85 b8 ff ff ff 	movq   $0x0,-0x48(%rbp)
 804d723:	00 00 00 00 
 804d727:	66 0f d6 5d a0       	movq   %xmm3,-0x60(%rbp)
 804d72c:	48 c7 85 a8 ff ff ff 	movq   $0x0,-0x58(%rbp)
 804d733:	00 00 00 00 
 804d737:	66 0f d6 55 90       	movq   %xmm2,-0x70(%rbp)
 804d73c:	48 c7 85 98 ff ff ff 	movq   $0x0,-0x68(%rbp)
 804d743:	00 00 00 00 
 804d747:	66 0f d6 4d 80       	movq   %xmm1,-0x80(%rbp)
 804d74c:	48 c7 85 88 ff ff ff 	movq   $0x0,-0x78(%rbp)
 804d753:	00 00 00 00 
 804d757:	66 0f d6 85 70 ff ff 	movq   %xmm0,-0x90(%rbp)
 804d75e:	ff 
 804d75f:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
 804d766:	00 00 00 00 
 804d76a:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
 804d771:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
 804d778:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 804d77f:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
 804d786:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
 804d78d:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
 804d794:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
 804d79b:	48 8b 05 ee 06 04 00 	mov    0x406ee(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804d7a2:	48 8b 00             	mov    (%rax),%rax
 804d7a5:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 804d7ac:	b8 18 00 00 00       	mov    $0x18,%eax
 804d7b1:	48 89 c7             	mov    %rax,%rdi
 804d7b4:	b8 00 00 00 00       	mov    $0x0,%eax
 804d7b9:	e8 72 a3 03 00       	callq  8087b30 <__preinit_array_end+0x90>
 804d7be:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 804d7c5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d7cc:	b9 18 00 00 00       	mov    $0x18,%ecx
 804d7d1:	49 89 ca             	mov    %rcx,%r10
 804d7d4:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 804d7d8:	48 89 ce             	mov    %rcx,%rsi
 804d7db:	48 89 c7             	mov    %rax,%rdi
 804d7de:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 804d7e5:	4c 89 d2             	mov    %r10,%rdx
 804d7e8:	b8 00 00 00 00       	mov    $0x0,%eax
 804d7ed:	e8 7e 94 03 00       	callq  8086c70 <memcpy>
 804d7f2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d7f9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804d800:	00 00 00 
 804d803:	48 01 c8             	add    %rcx,%rax
 804d806:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
 804d80d:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804d814:	00 00 00 
 804d817:	48 01 d1             	add    %rdx,%rcx
 804d81a:	8b 11                	mov    (%rcx),%edx
 804d81c:	48 8d 4d 00          	lea    0x0(%rbp),%rcx
 804d820:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 804d827:	48 89 d0             	mov    %rdx,%rax
 804d82a:	48 01 c1             	add    %rax,%rcx
 804d82d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 804d834:	48 89 08             	mov    %rcx,(%rax)
 804d837:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d83e:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804d845:	00 00 00 
 804d848:	48 01 c8             	add    %rcx,%rax
 804d84b:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
 804d852:	48 89 08             	mov    %rcx,(%rax)
 804d855:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d85c:	49 89 c3             	mov    %rax,%r11
 804d85f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 804d866:	49 89 c2             	mov    %rax,%r10
 804d869:	b8 00 00 00 00       	mov    $0x0,%eax
 804d86e:	48 89 c6             	mov    %rax,%rsi
 804d871:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 804d878:	48 89 c7             	mov    %rax,%rdi
 804d87b:	4c 89 d2             	mov    %r10,%rdx
 804d87e:	4c 89 d9             	mov    %r11,%rcx
 804d881:	b8 00 00 00 00       	mov    $0x0,%eax
 804d886:	e8 9d f8 ff ff       	callq  804d128 <error1>
 804d88b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804d892:	48 89 c7             	mov    %rax,%rdi
 804d895:	b8 00 00 00 00       	mov    $0x0,%eax
 804d89a:	e8 81 a2 03 00       	callq  8087b20 <__preinit_array_end+0x80>
 804d89f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 804d8a6:	48 b9 68 01 00 00 00 	movabs $0x168,%rcx
 804d8ad:	00 00 00 
 804d8b0:	48 01 c8             	add    %rcx,%rax
 804d8b3:	8b 08                	mov    (%rax),%ecx
 804d8b5:	85 c9                	test   %ecx,%ecx
 804d8b7:	0f 84 2e 00 00 00    	je     804d8eb <tcc_error+0x224>
 804d8bd:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 804d8c4:	48 b9 70 01 00 00 00 	movabs $0x170,%rcx
 804d8cb:	00 00 00 
 804d8ce:	48 01 c8             	add    %rcx,%rax
 804d8d1:	b9 01 00 00 00       	mov    $0x1,%ecx
 804d8d6:	48 89 ce             	mov    %rcx,%rsi
 804d8d9:	48 89 c7             	mov    %rax,%rdi
 804d8dc:	b8 00 00 00 00       	mov    $0x0,%eax
 804d8e1:	e8 9a a2 03 00       	callq  8087b80 <__preinit_array_end+0xe0>
 804d8e6:	e9 12 00 00 00       	jmpq   804d8fd <tcc_error+0x236>
 804d8eb:	b8 01 00 00 00       	mov    $0x1,%eax
 804d8f0:	48 89 c7             	mov    %rax,%rdi
 804d8f3:	b8 00 00 00 00       	mov    $0x0,%eax
 804d8f8:	e8 93 a2 03 00       	callq  8087b90 <__preinit_array_end+0xf0>
 804d8fd:	c9                   	leaveq 
 804d8fe:	c3                   	retq   

000000000804d8ff <tcc_warning>:
 804d8ff:	55                   	push   %rbp
 804d900:	48 89 e5             	mov    %rsp,%rbp
 804d903:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
 804d90a:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
 804d911:	c7 45 f4 30 00 00 00 	movl   $0x30,-0xc(%rbp)
 804d918:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
 804d91f:	66 0f d6 7d e0       	movq   %xmm7,-0x20(%rbp)
 804d924:	48 c7 85 e8 ff ff ff 	movq   $0x0,-0x18(%rbp)
 804d92b:	00 00 00 00 
 804d92f:	66 0f d6 75 d0       	movq   %xmm6,-0x30(%rbp)
 804d934:	48 c7 85 d8 ff ff ff 	movq   $0x0,-0x28(%rbp)
 804d93b:	00 00 00 00 
 804d93f:	66 0f d6 6d c0       	movq   %xmm5,-0x40(%rbp)
 804d944:	48 c7 85 c8 ff ff ff 	movq   $0x0,-0x38(%rbp)
 804d94b:	00 00 00 00 
 804d94f:	66 0f d6 65 b0       	movq   %xmm4,-0x50(%rbp)
 804d954:	48 c7 85 b8 ff ff ff 	movq   $0x0,-0x48(%rbp)
 804d95b:	00 00 00 00 
 804d95f:	66 0f d6 5d a0       	movq   %xmm3,-0x60(%rbp)
 804d964:	48 c7 85 a8 ff ff ff 	movq   $0x0,-0x58(%rbp)
 804d96b:	00 00 00 00 
 804d96f:	66 0f d6 55 90       	movq   %xmm2,-0x70(%rbp)
 804d974:	48 c7 85 98 ff ff ff 	movq   $0x0,-0x68(%rbp)
 804d97b:	00 00 00 00 
 804d97f:	66 0f d6 4d 80       	movq   %xmm1,-0x80(%rbp)
 804d984:	48 c7 85 88 ff ff ff 	movq   $0x0,-0x78(%rbp)
 804d98b:	00 00 00 00 
 804d98f:	66 0f d6 85 70 ff ff 	movq   %xmm0,-0x90(%rbp)
 804d996:	ff 
 804d997:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
 804d99e:	00 00 00 00 
 804d9a2:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
 804d9a9:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
 804d9b0:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 804d9b7:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
 804d9be:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
 804d9c5:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
 804d9cc:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
 804d9d3:	48 8b 05 b6 04 04 00 	mov    0x404b6(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804d9da:	48 8b 00             	mov    (%rax),%rax
 804d9dd:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 804d9e4:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 804d9eb:	48 b9 40 01 00 00 00 	movabs $0x140,%rcx
 804d9f2:	00 00 00 
 804d9f5:	48 01 c8             	add    %rcx,%rax
 804d9f8:	8b 08                	mov    (%rax),%ecx
 804d9fa:	85 c9                	test   %ecx,%ecx
 804d9fc:	0f 84 05 00 00 00    	je     804da07 <tcc_warning+0x108>
 804da02:	e9 f3 00 00 00       	jmpq   804dafa <tcc_warning+0x1fb>
 804da07:	b8 18 00 00 00       	mov    $0x18,%eax
 804da0c:	48 89 c7             	mov    %rax,%rdi
 804da0f:	b8 00 00 00 00       	mov    $0x0,%eax
 804da14:	e8 17 a1 03 00       	callq  8087b30 <__preinit_array_end+0x90>
 804da19:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 804da20:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804da27:	b9 18 00 00 00       	mov    $0x18,%ecx
 804da2c:	49 89 ca             	mov    %rcx,%r10
 804da2f:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 804da33:	48 89 ce             	mov    %rcx,%rsi
 804da36:	48 89 c7             	mov    %rax,%rdi
 804da39:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 804da40:	4c 89 d2             	mov    %r10,%rdx
 804da43:	b8 00 00 00 00       	mov    $0x0,%eax
 804da48:	e8 23 92 03 00       	callq  8086c70 <memcpy>
 804da4d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804da54:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804da5b:	00 00 00 
 804da5e:	48 01 c8             	add    %rcx,%rax
 804da61:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
 804da68:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804da6f:	00 00 00 
 804da72:	48 01 d1             	add    %rdx,%rcx
 804da75:	8b 11                	mov    (%rcx),%edx
 804da77:	48 8d 4d 00          	lea    0x0(%rbp),%rcx
 804da7b:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 804da82:	48 89 d0             	mov    %rdx,%rax
 804da85:	48 01 c1             	add    %rax,%rcx
 804da88:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 804da8f:	48 89 08             	mov    %rcx,(%rax)
 804da92:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804da99:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804daa0:	00 00 00 
 804daa3:	48 01 c8             	add    %rcx,%rax
 804daa6:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
 804daad:	48 89 08             	mov    %rcx,(%rax)
 804dab0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804dab7:	49 89 c3             	mov    %rax,%r11
 804daba:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 804dac1:	49 89 c2             	mov    %rax,%r10
 804dac4:	b8 01 00 00 00       	mov    $0x1,%eax
 804dac9:	48 89 c6             	mov    %rax,%rsi
 804dacc:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 804dad3:	48 89 c7             	mov    %rax,%rdi
 804dad6:	4c 89 d2             	mov    %r10,%rdx
 804dad9:	4c 89 d9             	mov    %r11,%rcx
 804dadc:	b8 00 00 00 00       	mov    $0x0,%eax
 804dae1:	e8 42 f6 ff ff       	callq  804d128 <error1>
 804dae6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 804daed:	48 89 c7             	mov    %rax,%rdi
 804daf0:	b8 00 00 00 00       	mov    $0x0,%eax
 804daf5:	e8 26 a0 03 00       	callq  8087b20 <__preinit_array_end+0x80>
 804dafa:	c9                   	leaveq 
 804dafb:	c3                   	retq   

000000000804dafc <tcc_open_bf>:
 804dafc:	55                   	push   %rbp
 804dafd:	48 89 e5             	mov    %rsp,%rbp
 804db00:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 804db07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804db0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804db0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804db13:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804db16:	85 c0                	test   %eax,%eax
 804db18:	0f 84 05 00 00 00    	je     804db23 <tcc_open_bf+0x27>
 804db1e:	e9 0a 00 00 00       	jmpq   804db2d <tcc_open_bf+0x31>
 804db23:	b8 00 20 00 00       	mov    $0x2000,%eax
 804db28:	e9 03 00 00 00       	jmpq   804db30 <tcc_open_bf+0x34>
 804db2d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804db30:	89 45 dc             	mov    %eax,-0x24(%rbp)
 804db33:	8b 45 dc             	mov    -0x24(%rbp),%eax
 804db36:	81 c0 40 26 00 00    	add    $0x2640,%eax
 804db3c:	48 89 c1             	mov    %rax,%rcx
 804db3f:	48 89 cf             	mov    %rcx,%rdi
 804db42:	b8 00 00 00 00       	mov    $0x0,%eax
 804db47:	e8 0c e4 ff ff       	callq  804bf58 <tcc_malloc>
 804db4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804db50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804db54:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804db58:	48 ba 39 06 00 00 00 	movabs $0x639,%rdx
 804db5f:	00 00 00 
 804db62:	48 01 d1             	add    %rdx,%rcx
 804db65:	48 89 08             	mov    %rcx,(%rax)
 804db68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804db6c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804db73:	00 00 00 
 804db76:	48 01 c8             	add    %rcx,%rax
 804db79:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 804db7d:	48 ba 39 06 00 00 00 	movabs $0x639,%rdx
 804db84:	00 00 00 
 804db87:	48 01 d1             	add    %rdx,%rcx
 804db8a:	8b 55 e8             	mov    -0x18(%rbp),%edx
 804db8d:	48 63 d2             	movslq %edx,%rdx
 804db90:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804db94:	48 89 d0             	mov    %rdx,%rax
 804db97:	48 01 c1             	add    %rax,%rcx
 804db9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804db9e:	48 89 08             	mov    %rcx,(%rax)
 804dba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dba5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804dbac:	00 00 00 
 804dbaf:	48 01 c8             	add    %rcx,%rax
 804dbb2:	48 8b 08             	mov    (%rax),%rcx
 804dbb5:	b8 5c 00 00 00       	mov    $0x5c,%eax
 804dbba:	88 01                	mov    %al,(%rcx)
 804dbbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dbc0:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 804dbc7:	00 00 00 
 804dbca:	48 01 c8             	add    %rcx,%rax
 804dbcd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804dbd1:	49 89 ca             	mov    %rcx,%r10
 804dbd4:	b9 00 04 00 00       	mov    $0x400,%ecx
 804dbd9:	48 89 ce             	mov    %rcx,%rsi
 804dbdc:	48 89 c7             	mov    %rax,%rdi
 804dbdf:	4c 89 d2             	mov    %r10,%rdx
 804dbe2:	b8 00 00 00 00       	mov    $0x0,%eax
 804dbe7:	e8 b7 e0 ff ff       	callq  804bca3 <pstrcpy>
 804dbec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dbf0:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804dbf7:	00 00 00 
 804dbfa:	48 01 c8             	add    %rcx,%rax
 804dbfd:	b9 01 00 00 00       	mov    $0x1,%ecx
 804dc02:	89 08                	mov    %ecx,(%rax)
 804dc04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dc08:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 804dc0f:	00 00 00 
 804dc12:	48 01 c8             	add    %rcx,%rax
 804dc15:	b9 00 00 00 00       	mov    $0x0,%ecx
 804dc1a:	89 08                	mov    %ecx,(%rax)
 804dc1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dc20:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 804dc27:	00 00 00 
 804dc2a:	48 01 c8             	add    %rcx,%rax
 804dc2d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804dc31:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 804dc38:	00 00 00 
 804dc3b:	48 01 d1             	add    %rdx,%rcx
 804dc3e:	48 8b 11             	mov    (%rcx),%rdx
 804dc41:	48 89 10             	mov    %rdx,(%rax)
 804dc44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dc48:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804dc4f:	00 00 00 
 804dc52:	48 01 c8             	add    %rcx,%rax
 804dc55:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804dc5a:	89 08                	mov    %ecx,(%rax)
 804dc5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dc60:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804dc67:	00 00 00 
 804dc6a:	48 01 c8             	add    %rcx,%rax
 804dc6d:	48 8b 0d 2c 02 04 00 	mov    0x4022c(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804dc74:	48 8b 09             	mov    (%rcx),%rcx
 804dc77:	48 89 08             	mov    %rcx,(%rax)
 804dc7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804dc7e:	4c 8b 1d 1b 02 04 00 	mov    0x4021b(%rip),%r11        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804dc85:	49 89 03             	mov    %rax,(%r11)
 804dc88:	c9                   	leaveq 
 804dc89:	c3                   	retq   

000000000804dc8a <tcc_close>:
 804dc8a:	55                   	push   %rbp
 804dc8b:	48 89 e5             	mov    %rsp,%rbp
 804dc8e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804dc95:	48 8b 05 04 02 04 00 	mov    0x40204(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804dc9c:	48 8b 00             	mov    (%rax),%rax
 804dc9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 804dca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804dca7:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804dcae:	00 00 00 
 804dcb1:	48 01 c8             	add    %rcx,%rax
 804dcb4:	8b 08                	mov    (%rax),%ecx
 804dcb6:	83 f9 00             	cmp    $0x0,%ecx
 804dcb9:	0f 8e 49 00 00 00    	jle    804dd08 <tcc_close+0x7e>
 804dcbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804dcc3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804dcca:	00 00 00 
 804dccd:	48 01 c8             	add    %rcx,%rax
 804dcd0:	8b 08                	mov    (%rax),%ecx
 804dcd2:	48 89 cf             	mov    %rcx,%rdi
 804dcd5:	b8 00 00 00 00       	mov    $0x0,%eax
 804dcda:	e8 c1 9e 03 00       	callq  8087ba0 <__preinit_array_end+0x100>
 804dcdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804dce3:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804dcea:	00 00 00 
 804dced:	48 01 c8             	add    %rcx,%rax
 804dcf0:	48 8b 0d b9 01 04 00 	mov    0x401b9(%rip),%rcx        # 808deb0 <_GLOBAL_OFFSET_TABLE_+0x230>
 804dcf7:	8b 09                	mov    (%rcx),%ecx
 804dcf9:	8b 10                	mov    (%rax),%edx
 804dcfb:	48 01 d1             	add    %rdx,%rcx
 804dcfe:	4c 8b 1d ab 01 04 00 	mov    0x401ab(%rip),%r11        # 808deb0 <_GLOBAL_OFFSET_TABLE_+0x230>
 804dd05:	41 89 0b             	mov    %ecx,(%r11)
 804dd08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804dd0c:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804dd13:	00 00 00 
 804dd16:	48 01 c8             	add    %rcx,%rax
 804dd19:	48 8b 08             	mov    (%rax),%rcx
 804dd1c:	4c 8b 1d 7d 01 04 00 	mov    0x4017d(%rip),%r11        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804dd23:	49 89 0b             	mov    %rcx,(%r11)
 804dd26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804dd2a:	48 89 c7             	mov    %rax,%rdi
 804dd2d:	b8 00 00 00 00       	mov    $0x0,%eax
 804dd32:	e8 ff e1 ff ff       	callq  804bf36 <tcc_free>
 804dd37:	c9                   	leaveq 
 804dd38:	c3                   	retq   

000000000804dd39 <tcc_open>:
 804dd39:	55                   	push   %rbp
 804dd3a:	48 89 e5             	mov    %rsp,%rbp
 804dd3d:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804dd44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804dd48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804dd4c:	48 8d 05 b8 bb 03 00 	lea    0x3bbb8(%rip),%rax        # 808990b <L.116>
 804dd53:	48 89 c6             	mov    %rax,%rsi
 804dd56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804dd5a:	48 89 c7             	mov    %rax,%rdi
 804dd5d:	b8 00 00 00 00       	mov    $0x0,%eax
 804dd62:	e8 79 94 03 00       	callq  80871e0 <strcmp>
 804dd67:	83 f8 00             	cmp    $0x0,%eax
 804dd6a:	0f 85 18 00 00 00    	jne    804dd88 <tcc_open+0x4f>
 804dd70:	b8 00 00 00 00       	mov    $0x0,%eax
 804dd75:	89 45 ec             	mov    %eax,-0x14(%rbp)
 804dd78:	48 8d 05 8e bb 03 00 	lea    0x3bb8e(%rip),%rax        # 808990d <L.117>
 804dd7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804dd83:	e9 1c 00 00 00       	jmpq   804dda4 <tcc_open+0x6b>
 804dd88:	b8 00 00 00 00       	mov    $0x0,%eax
 804dd8d:	48 89 c6             	mov    %rax,%rsi
 804dd90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804dd94:	48 89 c7             	mov    %rax,%rdi
 804dd97:	b8 00 00 00 00       	mov    $0x0,%eax
 804dd9c:	e8 0f 9e 03 00       	callq  8087bb0 <__preinit_array_end+0x110>
 804dda1:	89 45 ec             	mov    %eax,-0x14(%rbp)
 804dda4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804dda8:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804ddaf:	00 00 00 
 804ddb2:	48 01 c8             	add    %rcx,%rax
 804ddb5:	8b 08                	mov    (%rax),%ecx
 804ddb7:	83 f9 02             	cmp    $0x2,%ecx
 804ddba:	0f 85 11 00 00 00    	jne    804ddd1 <tcc_open+0x98>
 804ddc0:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804ddc3:	83 f8 00             	cmp    $0x0,%eax
 804ddc6:	0f 8c 05 00 00 00    	jl     804ddd1 <tcc_open+0x98>
 804ddcc:	e9 21 00 00 00       	jmpq   804ddf2 <tcc_open+0xb9>
 804ddd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ddd5:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 804dddc:	00 00 00 
 804dddf:	48 01 c8             	add    %rcx,%rax
 804dde2:	8b 08                	mov    (%rax),%ecx
 804dde4:	83 f9 03             	cmp    $0x3,%ecx
 804dde7:	0f 84 05 00 00 00    	je     804ddf2 <tcc_open+0xb9>
 804dded:	e9 99 00 00 00       	jmpq   804de8b <tcc_open+0x152>
 804ddf2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804ddf5:	83 f8 00             	cmp    $0x0,%eax
 804ddf8:	b8 00 00 00 00       	mov    $0x0,%eax
 804ddfd:	0f 9c c0             	setl   %al
 804de00:	85 c0                	test   %eax,%eax
 804de02:	0f 84 05 00 00 00    	je     804de0d <tcc_open+0xd4>
 804de08:	e9 0c 00 00 00       	jmpq   804de19 <tcc_open+0xe0>
 804de0d:	48 8d 05 0c bb 03 00 	lea    0x3bb0c(%rip),%rax        # 8089920 <L.120>
 804de14:	e9 07 00 00 00       	jmpq   804de20 <tcc_open+0xe7>
 804de19:	48 8d 05 fd ba 03 00 	lea    0x3bafd(%rip),%rax        # 808991d <L.119>
 804de20:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804de24:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 804de2b:	00 00 00 
 804de2e:	48 01 d1             	add    %rdx,%rcx
 804de31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 804de35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804de39:	48 b8 48 02 00 00 00 	movabs $0x248,%rax
 804de40:	00 00 00 
 804de43:	48 01 c2             	add    %rax,%rdx
 804de46:	48 8b 01             	mov    (%rcx),%rax
 804de49:	48 29 d0             	sub    %rdx,%rax
 804de4c:	48 89 c1             	mov    %rax,%rcx
 804de4f:	48 c1 f9 03          	sar    $0x3,%rcx
 804de53:	48 89 c8             	mov    %rcx,%rax
 804de56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804de5a:	49 89 c8             	mov    %rcx,%r8
 804de5d:	48 8d 0d bf ba 03 00 	lea    0x3babf(%rip),%rcx        # 8089923 <L.121>
 804de64:	49 89 cb             	mov    %rcx,%r11
 804de67:	49 89 c2             	mov    %rax,%r10
 804de6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804de6e:	48 89 c6             	mov    %rax,%rsi
 804de71:	48 8d 05 9b ba 03 00 	lea    0x3ba9b(%rip),%rax        # 8089913 <L.118>
 804de78:	48 89 c7             	mov    %rax,%rdi
 804de7b:	4c 89 d2             	mov    %r10,%rdx
 804de7e:	4c 89 d9             	mov    %r11,%rcx
 804de81:	b8 00 00 00 00       	mov    $0x0,%eax
 804de86:	e8 35 9c 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 804de8b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804de8e:	83 f8 00             	cmp    $0x0,%eax
 804de91:	0f 8d 0a 00 00 00    	jge    804dea1 <tcc_open+0x168>
 804de97:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804de9c:	e9 47 00 00 00       	jmpq   804dee8 <tcc_open+0x1af>
 804dea1:	b8 00 00 00 00       	mov    $0x0,%eax
 804dea6:	49 89 c2             	mov    %rax,%r10
 804dea9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804dead:	48 89 c6             	mov    %rax,%rsi
 804deb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804deb4:	48 89 c7             	mov    %rax,%rdi
 804deb7:	4c 89 d2             	mov    %r10,%rdx
 804deba:	b8 00 00 00 00       	mov    $0x0,%eax
 804debf:	e8 38 fc ff ff       	callq  804dafc <tcc_open_bf>
 804dec4:	48 8b 05 d5 ff 03 00 	mov    0x3ffd5(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804decb:	48 8b 00             	mov    (%rax),%rax
 804dece:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804ded5:	00 00 00 
 804ded8:	48 01 c8             	add    %rcx,%rax
 804dedb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 804dede:	89 08                	mov    %ecx,(%rax)
 804dee0:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804dee3:	e9 00 00 00 00       	jmpq   804dee8 <tcc_open+0x1af>
 804dee8:	c9                   	leaveq 
 804dee9:	c3                   	retq   

000000000804deea <tcc_compile>:
 804deea:	55                   	push   %rbp
 804deeb:	48 89 e5             	mov    %rsp,%rbp
 804deee:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
 804def5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804def9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804defd:	48 89 c7             	mov    %rax,%rdi
 804df00:	b8 00 00 00 00       	mov    $0x0,%eax
 804df05:	e8 02 ab 00 00       	callq  8058a0c <preprocess_init>
 804df0a:	b8 00 00 00 00       	mov    $0x0,%eax
 804df0f:	4c 8b 1d a2 ff 03 00 	mov    0x3ffa2(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 804df16:	49 89 03             	mov    %rax,(%r11)
 804df19:	48 8d 05 04 ba 03 00 	lea    0x3ba04(%rip),%rax        # 8089924 <L.122>
 804df20:	4c 8b 1d 99 ff 03 00 	mov    0x3ff99(%rip),%r11        # 808dec0 <_GLOBAL_OFFSET_TABLE_+0x240>
 804df27:	49 89 03             	mov    %rax,(%r11)
 804df2a:	b8 00 00 00 10       	mov    $0x10000000,%eax
 804df2f:	4c 8b 1d 92 ff 03 00 	mov    0x3ff92(%rip),%r11        # 808dec8 <_GLOBAL_OFFSET_TABLE_+0x248>
 804df36:	41 89 03             	mov    %eax,(%r11)
 804df39:	b8 00 00 00 00       	mov    $0x0,%eax
 804df3e:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%rbp)
 804df44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804df48:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 804df4f:	00 00 00 
 804df52:	48 01 c8             	add    %rcx,%rax
 804df55:	8b 08                	mov    (%rax),%ecx
 804df57:	85 c9                	test   %ecx,%ecx
 804df59:	0f 84 7f 01 00 00    	je     804e0de <tcc_compile+0x1f4>
 804df5f:	48 8b 05 6a ff 03 00 	mov    0x3ff6a(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804df66:	48 8b 00             	mov    (%rax),%rax
 804df69:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 804df70:	00 00 00 
 804df73:	48 01 c8             	add    %rcx,%rax
 804df76:	50                   	push   %rax
 804df77:	b9 00 00 00 00       	mov    $0x0,%ecx
 804df7c:	51                   	push   %rcx
 804df7d:	8b 08                	mov    (%rax),%ecx
 804df7f:	49 89 c9             	mov    %rcx,%r9
 804df82:	b8 00 00 00 00       	mov    $0x0,%eax
 804df87:	49 89 c0             	mov    %rax,%r8
 804df8a:	b8 03 00 00 00       	mov    $0x3,%eax
 804df8f:	49 89 c3             	mov    %rax,%r11
 804df92:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804df99:	00 00 00 
 804df9c:	49 89 c2             	mov    %rax,%r10
 804df9f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804dfa6:	00 00 00 
 804dfa9:	48 89 c6             	mov    %rax,%rsi
 804dfac:	48 8b 05 e5 fe 03 00 	mov    0x3fee5(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804dfb3:	48 8b 00             	mov    (%rax),%rax
 804dfb6:	48 89 c7             	mov    %rax,%rdi
 804dfb9:	4c 89 d2             	mov    %r10,%rdx
 804dfbc:	4c 89 d9             	mov    %r11,%rcx
 804dfbf:	b8 00 00 00 00       	mov    $0x0,%eax
 804dfc4:	e8 64 fc 01 00       	callq  806dc2d <put_elf_sym>
 804dfc9:	48 83 c4 10          	add    $0x10,%rsp
 804dfcd:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%rbp)
 804dfd3:	b8 00 02 00 00       	mov    $0x200,%eax
 804dfd8:	48 89 c6             	mov    %rax,%rsi
 804dfdb:	48 8d 85 e8 fd ff ff 	lea    -0x218(%rbp),%rax
 804dfe2:	48 89 c7             	mov    %rax,%rdi
 804dfe5:	b8 00 00 00 00       	mov    $0x0,%eax
 804dfea:	e8 d1 9b 03 00       	callq  8087bc0 <__preinit_array_end+0x120>
 804dfef:	48 8d 05 2f b9 03 00 	lea    0x3b92f(%rip),%rax        # 8089925 <L.123>
 804dff6:	49 89 c2             	mov    %rax,%r10
 804dff9:	b8 00 02 00 00       	mov    $0x200,%eax
 804dffe:	48 89 c6             	mov    %rax,%rsi
 804e001:	48 8d 85 e8 fd ff ff 	lea    -0x218(%rbp),%rax
 804e008:	48 89 c7             	mov    %rax,%rdi
 804e00b:	4c 89 d2             	mov    %r10,%rdx
 804e00e:	b8 00 00 00 00       	mov    $0x0,%eax
 804e013:	e8 53 dd ff ff       	callq  804bd6b <pstrcat>
 804e018:	48 8b 05 b1 fe 03 00 	mov    0x3feb1(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804e01f:	48 8b 00             	mov    (%rax),%rax
 804e022:	50                   	push   %rax
 804e023:	8b 8d e4 fd ff ff    	mov    -0x21c(%rbp),%ecx
 804e029:	51                   	push   %rcx
 804e02a:	48 8b 0d 9f fe 03 00 	mov    0x3fe9f(%rip),%rcx        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804e031:	48 8b 09             	mov    (%rcx),%rcx
 804e034:	49 89 c9             	mov    %rcx,%r9
 804e037:	48 8b 08             	mov    (%rax),%rcx
 804e03a:	49 89 c8             	mov    %rcx,%r8
 804e03d:	b8 00 00 00 00       	mov    $0x0,%eax
 804e042:	49 89 c3             	mov    %rax,%r11
 804e045:	b8 00 00 00 00       	mov    $0x0,%eax
 804e04a:	49 89 c2             	mov    %rax,%r10
 804e04d:	b8 64 00 00 00       	mov    $0x64,%eax
 804e052:	48 89 c6             	mov    %rax,%rsi
 804e055:	48 8d 85 e8 fd ff ff 	lea    -0x218(%rbp),%rax
 804e05c:	48 89 c7             	mov    %rax,%rdi
 804e05f:	4c 89 d2             	mov    %r10,%rdx
 804e062:	4c 89 d9             	mov    %r11,%rcx
 804e065:	b8 00 00 00 00       	mov    $0x0,%eax
 804e06a:	e8 af 08 02 00       	callq  806e91e <put_stabs_r>
 804e06f:	48 83 c4 10          	add    $0x10,%rsp
 804e073:	48 8b 05 26 fe 03 00 	mov    0x3fe26(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e07a:	48 8b 00             	mov    (%rax),%rax
 804e07d:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 804e084:	00 00 00 
 804e087:	48 01 c8             	add    %rcx,%rax
 804e08a:	48 8b 0d 3f fe 03 00 	mov    0x3fe3f(%rip),%rcx        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804e091:	48 8b 09             	mov    (%rcx),%rcx
 804e094:	50                   	push   %rax
 804e095:	8b 95 e4 fd ff ff    	mov    -0x21c(%rbp),%edx
 804e09b:	52                   	push   %rdx
 804e09c:	48 8b 15 2d fe 03 00 	mov    0x3fe2d(%rip),%rdx        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804e0a3:	48 8b 12             	mov    (%rdx),%rdx
 804e0a6:	49 89 d1             	mov    %rdx,%r9
 804e0a9:	48 8b 11             	mov    (%rcx),%rdx
 804e0ac:	49 89 d0             	mov    %rdx,%r8
 804e0af:	b9 00 00 00 00       	mov    $0x0,%ecx
 804e0b4:	49 89 cb             	mov    %rcx,%r11
 804e0b7:	b9 00 00 00 00       	mov    $0x0,%ecx
 804e0bc:	49 89 ca             	mov    %rcx,%r10
 804e0bf:	b9 64 00 00 00       	mov    $0x64,%ecx
 804e0c4:	48 89 ce             	mov    %rcx,%rsi
 804e0c7:	48 89 c7             	mov    %rax,%rdi
 804e0ca:	4c 89 d2             	mov    %r10,%rdx
 804e0cd:	4c 89 d9             	mov    %r11,%rcx
 804e0d0:	b8 00 00 00 00       	mov    $0x0,%eax
 804e0d5:	e8 44 08 02 00       	callq  806e91e <put_stabs_r>
 804e0da:	48 83 c4 10          	add    $0x10,%rsp
 804e0de:	48 8b 05 bb fd 03 00 	mov    0x3fdbb(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e0e5:	48 8b 00             	mov    (%rax),%rax
 804e0e8:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 804e0ef:	00 00 00 
 804e0f2:	48 01 c8             	add    %rcx,%rax
 804e0f5:	50                   	push   %rax
 804e0f6:	50                   	push   %rax
 804e0f7:	b8 f1 ff 00 00       	mov    $0xfff1,%eax
 804e0fc:	49 89 c1             	mov    %rax,%r9
 804e0ff:	b8 00 00 00 00       	mov    $0x0,%eax
 804e104:	49 89 c0             	mov    %rax,%r8
 804e107:	b8 04 00 00 00       	mov    $0x4,%eax
 804e10c:	49 89 c3             	mov    %rax,%r11
 804e10f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804e116:	00 00 00 
 804e119:	49 89 c2             	mov    %rax,%r10
 804e11c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804e123:	00 00 00 
 804e126:	48 89 c6             	mov    %rax,%rsi
 804e129:	48 8b 05 68 fd 03 00 	mov    0x3fd68(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804e130:	48 8b 00             	mov    (%rax),%rax
 804e133:	48 89 c7             	mov    %rax,%rdi
 804e136:	4c 89 d2             	mov    %r10,%rdx
 804e139:	4c 89 d9             	mov    %r11,%rcx
 804e13c:	b8 00 00 00 00       	mov    $0x0,%eax
 804e141:	e8 e7 fa 01 00       	callq  806dc2d <put_elf_sym>
 804e146:	48 83 c4 10          	add    $0x10,%rsp
 804e14a:	b8 00 00 00 00       	mov    $0x0,%eax
 804e14f:	4c 8b 1d 82 fd 03 00 	mov    0x3fd82(%rip),%r11        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 804e156:	41 89 03             	mov    %eax,(%r11)
 804e159:	b8 01 00 00 00       	mov    $0x1,%eax
 804e15e:	4c 8b 1d 7b fd 03 00 	mov    0x3fd7b(%rip),%r11        # 808dee0 <_GLOBAL_OFFSET_TABLE_+0x260>
 804e165:	41 89 03             	mov    %eax,(%r11)
 804e168:	48 8b 05 71 fd 03 00 	mov    0x3fd71(%rip),%rax        # 808dee0 <_GLOBAL_OFFSET_TABLE_+0x260>
 804e16f:	48 89 c7             	mov    %rax,%rdi
 804e172:	b8 00 00 00 00       	mov    $0x0,%eax
 804e177:	e8 72 2f 01 00       	callq  80610ee <mk_pointer>
 804e17c:	b8 0c 00 00 00       	mov    $0xc,%eax
 804e181:	4c 8b 1d 60 fd 03 00 	mov    0x3fd60(%rip),%r11        # 808dee8 <_GLOBAL_OFFSET_TABLE_+0x268>
 804e188:	41 89 03             	mov    %eax,(%r11)
 804e18b:	b8 06 00 00 00       	mov    $0x6,%eax
 804e190:	4c 8b 1d 59 fd 03 00 	mov    0x3fd59(%rip),%r11        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 804e197:	41 89 03             	mov    %eax,(%r11)
 804e19a:	b8 02 00 00 00       	mov    $0x2,%eax
 804e19f:	49 89 c3             	mov    %rax,%r11
 804e1a2:	b8 00 00 00 00       	mov    $0x0,%eax
 804e1a7:	49 89 c2             	mov    %rax,%r10
 804e1aa:	48 8b 05 27 fd 03 00 	mov    0x3fd27(%rip),%rax        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 804e1b1:	48 89 c6             	mov    %rax,%rsi
 804e1b4:	b8 00 00 00 20       	mov    $0x20000000,%eax
 804e1b9:	48 89 c7             	mov    %rax,%rdi
 804e1bc:	4c 89 d2             	mov    %r10,%rdx
 804e1bf:	4c 89 d9             	mov    %r11,%rcx
 804e1c2:	b8 00 00 00 00       	mov    $0x0,%eax
 804e1c7:	e8 8f df 00 00       	callq  805c15b <sym_push>
 804e1cc:	4c 8b 1d 1d fd 03 00 	mov    0x3fd1d(%rip),%r11        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 804e1d3:	49 81 c3 08 00 00 00 	add    $0x8,%r11
 804e1da:	49 89 03             	mov    %rax,(%r11)
 804e1dd:	48 8b 05 14 fd 03 00 	mov    0x3fd14(%rip),%rax        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 804e1e4:	48 8b 00             	mov    (%rax),%rax
 804e1e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 804e1eb:	b8 01 00 00 00       	mov    $0x1,%eax
 804e1f0:	4c 8b 1d 09 fd 03 00 	mov    0x3fd09(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 804e1f7:	41 89 03             	mov    %eax,(%r11)
 804e1fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e1fe:	48 b9 70 01 00 00 00 	movabs $0x170,%rcx
 804e205:	00 00 00 
 804e208:	48 01 c8             	add    %rcx,%rax
 804e20b:	48 89 c7             	mov    %rax,%rdi
 804e20e:	b8 00 00 00 00       	mov    $0x0,%eax
 804e213:	e8 b8 99 03 00       	callq  8087bd0 <__preinit_array_end+0x130>
 804e218:	83 f8 00             	cmp    $0x0,%eax
 804e21b:	0f 85 83 01 00 00    	jne    804e3a4 <tcc_compile+0x4ba>
 804e221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e225:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 804e22c:	00 00 00 
 804e22f:	48 01 c8             	add    %rcx,%rax
 804e232:	b9 00 00 00 00       	mov    $0x0,%ecx
 804e237:	89 08                	mov    %ecx,(%rax)
 804e239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e23d:	48 b9 68 01 00 00 00 	movabs $0x168,%rcx
 804e244:	00 00 00 
 804e247:	48 01 c8             	add    %rcx,%rax
 804e24a:	b9 01 00 00 00       	mov    $0x1,%ecx
 804e24f:	89 08                	mov    %ecx,(%rax)
 804e251:	48 8b 05 48 fc 03 00 	mov    0x3fc48(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e258:	48 8b 00             	mov    (%rax),%rax
 804e25b:	48 8b 08             	mov    (%rax),%rcx
 804e25e:	0f b6 01             	movzbl (%rcx),%eax
 804e261:	4c 8b 1d a0 fc 03 00 	mov    0x3fca0(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 804e268:	41 89 03             	mov    %eax,(%r11)
 804e26b:	b8 03 00 00 00       	mov    $0x3,%eax
 804e270:	4c 8b 1d 99 fc 03 00 	mov    0x3fc99(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 804e277:	41 89 03             	mov    %eax,(%r11)
 804e27a:	b8 03 00 00 00       	mov    $0x3,%eax
 804e27f:	4c 8b 1d 92 fc 03 00 	mov    0x3fc92(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 804e286:	41 89 03             	mov    %eax,(%r11)
 804e289:	48 8b 05 90 fc 03 00 	mov    0x3fc90(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 804e290:	48 8b 00             	mov    (%rax),%rax
 804e293:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804e297:	b8 00 00 00 00       	mov    $0x0,%eax
 804e29c:	e8 29 a4 00 00       	callq  80586ca <next>
 804e2a1:	b8 30 00 00 00       	mov    $0x30,%eax
 804e2a6:	48 89 c7             	mov    %rax,%rdi
 804e2a9:	b8 00 00 00 00       	mov    $0x0,%eax
 804e2ae:	e8 a2 f1 01 00       	callq  806d455 <decl>
 804e2b3:	48 8b 05 6e fc 03 00 	mov    0x3fc6e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 804e2ba:	8b 00                	mov    (%rax),%eax
 804e2bc:	83 f8 ff             	cmp    $0xffffffff,%eax
 804e2bf:	0f 84 14 00 00 00    	je     804e2d9 <tcc_compile+0x3ef>
 804e2c5:	48 8d 05 5b b6 03 00 	lea    0x3b65b(%rip),%rax        # 8089927 <L.124>
 804e2cc:	48 89 c7             	mov    %rax,%rdi
 804e2cf:	b8 00 00 00 00       	mov    $0x0,%eax
 804e2d4:	e8 79 2e 00 00       	callq  8051152 <expect>
 804e2d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804e2dd:	48 8b 0d 3c fc 03 00 	mov    0x3fc3c(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 804e2e4:	48 8b 09             	mov    (%rcx),%rcx
 804e2e7:	48 89 c2             	mov    %rax,%rdx
 804e2ea:	48 89 c8             	mov    %rcx,%rax
 804e2ed:	48 39 c2             	cmp    %rax,%rdx
 804e2f0:	0f 84 3a 00 00 00    	je     804e330 <tcc_compile+0x446>
 804e2f6:	48 8b 05 23 fc 03 00 	mov    0x3fc23(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 804e2fd:	48 8b 00             	mov    (%rax),%rax
 804e300:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804e304:	48 29 c8             	sub    %rcx,%rax
 804e307:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 804e30e:	00 00 00 
 804e311:	48 99                	cqto   
 804e313:	48 f7 f9             	idiv   %rcx
 804e316:	48 89 c1             	mov    %rax,%rcx
 804e319:	48 89 ce             	mov    %rcx,%rsi
 804e31c:	48 8d 05 10 b6 03 00 	lea    0x3b610(%rip),%rax        # 8089933 <L.125>
 804e323:	48 89 c7             	mov    %rax,%rdi
 804e326:	b8 00 00 00 00       	mov    $0x0,%eax
 804e32b:	e8 cf f5 ff ff       	callq  804d8ff <tcc_warning>
 804e330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e334:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 804e33b:	00 00 00 
 804e33e:	48 01 c8             	add    %rcx,%rax
 804e341:	8b 08                	mov    (%rax),%ecx
 804e343:	85 c9                	test   %ecx,%ecx
 804e345:	0f 84 59 00 00 00    	je     804e3a4 <tcc_compile+0x4ba>
 804e34b:	48 8b 05 7e fb 03 00 	mov    0x3fb7e(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804e352:	48 8b 00             	mov    (%rax),%rax
 804e355:	50                   	push   %rax
 804e356:	8b 8d e4 fd ff ff    	mov    -0x21c(%rbp),%ecx
 804e35c:	51                   	push   %rcx
 804e35d:	48 8b 0d 6c fb 03 00 	mov    0x3fb6c(%rip),%rcx        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804e364:	48 8b 09             	mov    (%rcx),%rcx
 804e367:	49 89 c9             	mov    %rcx,%r9
 804e36a:	48 8b 08             	mov    (%rax),%rcx
 804e36d:	49 89 c8             	mov    %rcx,%r8
 804e370:	b8 00 00 00 00       	mov    $0x0,%eax
 804e375:	49 89 c3             	mov    %rax,%r11
 804e378:	b8 00 00 00 00       	mov    $0x0,%eax
 804e37d:	49 89 c2             	mov    %rax,%r10
 804e380:	b8 64 00 00 00       	mov    $0x64,%eax
 804e385:	48 89 c6             	mov    %rax,%rsi
 804e388:	b8 00 00 00 00       	mov    $0x0,%eax
 804e38d:	48 89 c7             	mov    %rax,%rdi
 804e390:	4c 89 d2             	mov    %r10,%rdx
 804e393:	4c 89 d9             	mov    %r11,%rcx
 804e396:	b8 00 00 00 00       	mov    $0x0,%eax
 804e39b:	e8 7e 05 02 00       	callq  806e91e <put_stabs_r>
 804e3a0:	48 83 c4 10          	add    $0x10,%rsp
 804e3a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e3a8:	48 b9 68 01 00 00 00 	movabs $0x168,%rcx
 804e3af:	00 00 00 
 804e3b2:	48 01 c8             	add    %rcx,%rax
 804e3b5:	b9 00 00 00 00       	mov    $0x0,%ecx
 804e3ba:	89 08                	mov    %ecx,(%rax)
 804e3bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804e3c0:	48 89 c7             	mov    %rax,%rdi
 804e3c3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e3c8:	e8 b0 5a 00 00       	callq  8053e7d <free_defines>
 804e3cd:	b8 00 00 00 00       	mov    $0x0,%eax
 804e3d2:	e8 e6 e0 01 00       	callq  806c4bd <gen_inline_functions>
 804e3d7:	b8 00 00 00 00       	mov    $0x0,%eax
 804e3dc:	48 89 c6             	mov    %rax,%rsi
 804e3df:	48 8b 05 4a fb 03 00 	mov    0x3fb4a(%rip),%rax        # 808df30 <_GLOBAL_OFFSET_TABLE_+0x2b0>
 804e3e6:	48 89 c7             	mov    %rax,%rdi
 804e3e9:	b8 00 00 00 00       	mov    $0x0,%eax
 804e3ee:	e8 fd df 00 00       	callq  805c3f0 <sym_pop>
 804e3f3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e3f8:	48 89 c6             	mov    %rax,%rsi
 804e3fb:	48 8b 05 36 fb 03 00 	mov    0x3fb36(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 804e402:	48 89 c7             	mov    %rax,%rdi
 804e405:	b8 00 00 00 00       	mov    $0x0,%eax
 804e40a:	e8 e1 df 00 00       	callq  805c3f0 <sym_pop>
 804e40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e413:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 804e41a:	00 00 00 
 804e41d:	48 01 c8             	add    %rcx,%rax
 804e420:	8b 08                	mov    (%rax),%ecx
 804e422:	83 f9 00             	cmp    $0x0,%ecx
 804e425:	0f 84 05 00 00 00    	je     804e430 <tcc_compile+0x546>
 804e42b:	e9 0a 00 00 00       	jmpq   804e43a <tcc_compile+0x550>
 804e430:	b8 00 00 00 00       	mov    $0x0,%eax
 804e435:	e9 05 00 00 00       	jmpq   804e43f <tcc_compile+0x555>
 804e43a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804e43f:	e9 00 00 00 00       	jmpq   804e444 <tcc_compile+0x55a>
 804e444:	c9                   	leaveq 
 804e445:	c3                   	retq   

000000000804e446 <tcc_compile_string>:
 804e446:	55                   	push   %rbp
 804e447:	48 89 e5             	mov    %rsp,%rbp
 804e44a:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804e451:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804e455:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804e459:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804e45d:	48 89 c7             	mov    %rax,%rdi
 804e460:	b8 00 00 00 00       	mov    $0x0,%eax
 804e465:	e8 76 8e 03 00       	callq  80872e0 <strlen>
 804e46a:	89 45 ec             	mov    %eax,-0x14(%rbp)
 804e46d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 804e470:	49 89 c2             	mov    %rax,%r10
 804e473:	48 8d 05 e4 b4 03 00 	lea    0x3b4e4(%rip),%rax        # 808995e <L.126>
 804e47a:	48 89 c6             	mov    %rax,%rsi
 804e47d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e481:	48 89 c7             	mov    %rax,%rdi
 804e484:	4c 89 d2             	mov    %r10,%rdx
 804e487:	b8 00 00 00 00       	mov    $0x0,%eax
 804e48c:	e8 6b f6 ff ff       	callq  804dafc <tcc_open_bf>
 804e491:	48 8b 05 08 fa 03 00 	mov    0x3fa08(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e498:	48 8b 00             	mov    (%rax),%rax
 804e49b:	48 b9 39 06 00 00 00 	movabs $0x639,%rcx
 804e4a2:	00 00 00 
 804e4a5:	48 01 c8             	add    %rcx,%rax
 804e4a8:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 804e4ab:	49 89 ca             	mov    %rcx,%r10
 804e4ae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804e4b2:	48 89 ce             	mov    %rcx,%rsi
 804e4b5:	48 89 c7             	mov    %rax,%rdi
 804e4b8:	4c 89 d2             	mov    %r10,%rdx
 804e4bb:	b8 00 00 00 00       	mov    $0x0,%eax
 804e4c0:	e8 ab 87 03 00       	callq  8086c70 <memcpy>
 804e4c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e4c9:	48 89 c7             	mov    %rax,%rdi
 804e4cc:	b8 00 00 00 00       	mov    $0x0,%eax
 804e4d1:	e8 14 fa ff ff       	callq  804deea <tcc_compile>
 804e4d6:	89 45 e8             	mov    %eax,-0x18(%rbp)
 804e4d9:	b8 00 00 00 00       	mov    $0x0,%eax
 804e4de:	e8 a7 f7 ff ff       	callq  804dc8a <tcc_close>
 804e4e3:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804e4e6:	e9 00 00 00 00       	jmpq   804e4eb <tcc_compile_string+0xa5>
 804e4eb:	c9                   	leaveq 
 804e4ec:	c3                   	retq   

000000000804e4ed <tcc_define_symbol>:
 804e4ed:	55                   	push   %rbp
 804e4ee:	48 89 e5             	mov    %rsp,%rbp
 804e4f1:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804e4f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804e4fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804e500:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804e504:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804e508:	85 c0                	test   %eax,%eax
 804e50a:	0f 84 05 00 00 00    	je     804e515 <tcc_define_symbol+0x28>
 804e510:	e9 0b 00 00 00       	jmpq   804e520 <tcc_define_symbol+0x33>
 804e515:	48 8d 05 4b b4 03 00 	lea    0x3b44b(%rip),%rax        # 8089967 <L.127>
 804e51c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804e520:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804e524:	48 89 c7             	mov    %rax,%rdi
 804e527:	b8 00 00 00 00       	mov    $0x0,%eax
 804e52c:	e8 af 8d 03 00       	callq  80872e0 <strlen>
 804e531:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 804e534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804e538:	48 89 c7             	mov    %rax,%rdi
 804e53b:	b8 00 00 00 00       	mov    $0x0,%eax
 804e540:	e8 9b 8d 03 00       	callq  80872e0 <strlen>
 804e545:	89 45 e0             	mov    %eax,-0x20(%rbp)
 804e548:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 804e54b:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 804e54e:	48 01 c8             	add    %rcx,%rax
 804e551:	83 c0 01             	add    $0x1,%eax
 804e554:	49 89 c2             	mov    %rax,%r10
 804e557:	48 8d 05 0b b4 03 00 	lea    0x3b40b(%rip),%rax        # 8089969 <L.128>
 804e55e:	48 89 c6             	mov    %rax,%rsi
 804e561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e565:	48 89 c7             	mov    %rax,%rdi
 804e568:	4c 89 d2             	mov    %r10,%rdx
 804e56b:	b8 00 00 00 00       	mov    $0x0,%eax
 804e570:	e8 87 f5 ff ff       	callq  804dafc <tcc_open_bf>
 804e575:	48 8b 05 24 f9 03 00 	mov    0x3f924(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e57c:	48 8b 00             	mov    (%rax),%rax
 804e57f:	48 b9 39 06 00 00 00 	movabs $0x639,%rcx
 804e586:	00 00 00 
 804e589:	48 01 c8             	add    %rcx,%rax
 804e58c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804e58f:	49 89 ca             	mov    %rcx,%r10
 804e592:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804e596:	48 89 ce             	mov    %rcx,%rsi
 804e599:	48 89 c7             	mov    %rax,%rdi
 804e59c:	4c 89 d2             	mov    %r10,%rdx
 804e59f:	b8 00 00 00 00       	mov    $0x0,%eax
 804e5a4:	e8 c7 86 03 00       	callq  8086c70 <memcpy>
 804e5a9:	48 8b 05 f0 f8 03 00 	mov    0x3f8f0(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e5b0:	48 8b 00             	mov    (%rax),%rax
 804e5b3:	48 b9 39 06 00 00 00 	movabs $0x639,%rcx
 804e5ba:	00 00 00 
 804e5bd:	48 01 c8             	add    %rcx,%rax
 804e5c0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804e5c3:	48 63 c9             	movslq %ecx,%rcx
 804e5c6:	48 89 ca             	mov    %rcx,%rdx
 804e5c9:	48 01 d0             	add    %rdx,%rax
 804e5cc:	b9 20 00 00 00       	mov    $0x20,%ecx
 804e5d1:	88 08                	mov    %cl,(%rax)
 804e5d3:	48 8b 05 c6 f8 03 00 	mov    0x3f8c6(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e5da:	48 8b 00             	mov    (%rax),%rax
 804e5dd:	48 b9 39 06 00 00 00 	movabs $0x639,%rcx
 804e5e4:	00 00 00 
 804e5e7:	48 01 c8             	add    %rcx,%rax
 804e5ea:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 804e5ed:	48 63 c9             	movslq %ecx,%rcx
 804e5f0:	48 89 ca             	mov    %rcx,%rdx
 804e5f3:	48 01 d0             	add    %rdx,%rax
 804e5f6:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804e5fd:	00 00 00 
 804e600:	48 01 c8             	add    %rcx,%rax
 804e603:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 804e606:	49 89 ca             	mov    %rcx,%r10
 804e609:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804e60d:	48 89 ce             	mov    %rcx,%rsi
 804e610:	48 89 c7             	mov    %rax,%rdi
 804e613:	4c 89 d2             	mov    %r10,%rdx
 804e616:	b8 00 00 00 00       	mov    $0x0,%eax
 804e61b:	e8 50 86 03 00       	callq  8086c70 <memcpy>
 804e620:	48 8b 05 79 f8 03 00 	mov    0x3f879(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804e627:	48 8b 00             	mov    (%rax),%rax
 804e62a:	48 8b 08             	mov    (%rax),%rcx
 804e62d:	0f b6 01             	movzbl (%rcx),%eax
 804e630:	4c 8b 1d d1 f8 03 00 	mov    0x3f8d1(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 804e637:	41 89 03             	mov    %eax,(%r11)
 804e63a:	b8 00 00 00 00       	mov    $0x0,%eax
 804e63f:	e8 2b 8e 00 00       	callq  805746f <next_nomacro>
 804e644:	b8 00 00 00 00       	mov    $0x0,%eax
 804e649:	e8 b0 5e 00 00       	callq  80544fe <parse_define>
 804e64e:	b8 00 00 00 00       	mov    $0x0,%eax
 804e653:	e8 32 f6 ff ff       	callq  804dc8a <tcc_close>
 804e658:	c9                   	leaveq 
 804e659:	c3                   	retq   

000000000804e65a <tcc_undefine_symbol>:
 804e65a:	55                   	push   %rbp
 804e65b:	48 89 e5             	mov    %rsp,%rbp
 804e65e:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804e665:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804e669:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804e66d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804e671:	48 89 c7             	mov    %rax,%rdi
 804e674:	b8 00 00 00 00       	mov    $0x0,%eax
 804e679:	e8 62 8c 03 00       	callq  80872e0 <strlen>
 804e67e:	48 89 c6             	mov    %rax,%rsi
 804e681:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804e685:	48 89 c7             	mov    %rax,%rdi
 804e688:	b8 00 00 00 00       	mov    $0x0,%eax
 804e68d:	e8 d1 30 00 00       	callq  8051763 <tok_alloc>
 804e692:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804e696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804e69a:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 804e6a1:	00 00 00 
 804e6a4:	48 01 c8             	add    %rcx,%rax
 804e6a7:	8b 08                	mov    (%rax),%ecx
 804e6a9:	48 89 cf             	mov    %rcx,%rdi
 804e6ac:	b8 00 00 00 00       	mov    $0x0,%eax
 804e6b1:	e8 50 57 00 00       	callq  8053e06 <define_find>
 804e6b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804e6ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804e6be:	85 c0                	test   %eax,%eax
 804e6c0:	0f 84 11 00 00 00    	je     804e6d7 <tcc_undefine_symbol+0x7d>
 804e6c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804e6ca:	48 89 c7             	mov    %rax,%rdi
 804e6cd:	b8 00 00 00 00       	mov    $0x0,%eax
 804e6d2:	e8 ac 56 00 00       	callq  8053d83 <define_undef>
 804e6d7:	c9                   	leaveq 
 804e6d8:	c3                   	retq   

000000000804e6d9 <tcc_cleanup>:
 804e6d9:	55                   	push   %rbp
 804e6da:	48 89 e5             	mov    %rsp,%rbp
 804e6dd:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804e6e4:	48 8b 05 a5 f7 03 00 	mov    0x3f7a5(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804e6eb:	48 8b 00             	mov    (%rax),%rax
 804e6ee:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804e6f5:	00 00 00 
 804e6f8:	48 89 c2             	mov    %rax,%rdx
 804e6fb:	48 39 d1             	cmp    %rdx,%rcx
 804e6fe:	0f 85 05 00 00 00    	jne    804e709 <tcc_cleanup+0x30>
 804e704:	e9 f2 00 00 00       	jmpq   804e7fb <tcc_cleanup+0x122>
 804e709:	b8 00 00 00 00       	mov    $0x0,%eax
 804e70e:	4c 8b 1d 7b f7 03 00 	mov    0x3f77b(%rip),%r11        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804e715:	49 89 03             	mov    %rax,(%r11)
 804e718:	b8 00 00 00 00       	mov    $0x0,%eax
 804e71d:	48 89 c7             	mov    %rax,%rdi
 804e720:	b8 00 00 00 00       	mov    $0x0,%eax
 804e725:	e8 53 57 00 00       	callq  8053e7d <free_defines>
 804e72a:	48 8b 05 0f f8 03 00 	mov    0x3f80f(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 804e731:	8b 00                	mov    (%rax),%eax
 804e733:	81 e8 00 01 00 00    	sub    $0x100,%eax
 804e739:	89 45 f8             	mov    %eax,-0x8(%rbp)
 804e73c:	b8 00 00 00 00       	mov    $0x0,%eax
 804e741:	89 45 fc             	mov    %eax,-0x4(%rbp)
 804e744:	8b 45 fc             	mov    -0x4(%rbp),%eax
 804e747:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 804e74a:	39 c8                	cmp    %ecx,%eax
 804e74c:	0f 8d 42 00 00 00    	jge    804e794 <tcc_cleanup+0xbb>
 804e752:	e9 0e 00 00 00       	jmpq   804e765 <tcc_cleanup+0x8c>
 804e757:	8b 45 fc             	mov    -0x4(%rbp),%eax
 804e75a:	48 89 c1             	mov    %rax,%rcx
 804e75d:	83 c0 01             	add    $0x1,%eax
 804e760:	89 45 fc             	mov    %eax,-0x4(%rbp)
 804e763:	eb df                	jmp    804e744 <tcc_cleanup+0x6b>
 804e765:	8b 45 fc             	mov    -0x4(%rbp),%eax
 804e768:	48 63 c0             	movslq %eax,%rax
 804e76b:	48 89 c1             	mov    %rax,%rcx
 804e76e:	48 c1 e1 03          	shl    $0x3,%rcx
 804e772:	48 8b 05 cf f7 03 00 	mov    0x3f7cf(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 804e779:	48 8b 00             	mov    (%rax),%rax
 804e77c:	48 89 ca             	mov    %rcx,%rdx
 804e77f:	48 01 d0             	add    %rdx,%rax
 804e782:	48 8b 08             	mov    (%rax),%rcx
 804e785:	48 89 cf             	mov    %rcx,%rdi
 804e788:	b8 00 00 00 00       	mov    $0x0,%eax
 804e78d:	e8 a4 d7 ff ff       	callq  804bf36 <tcc_free>
 804e792:	eb c3                	jmp    804e757 <tcc_cleanup+0x7e>
 804e794:	48 8b 05 ad f7 03 00 	mov    0x3f7ad(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 804e79b:	48 8b 00             	mov    (%rax),%rax
 804e79e:	48 89 c7             	mov    %rax,%rdi
 804e7a1:	b8 00 00 00 00       	mov    $0x0,%eax
 804e7a6:	e8 8b d7 ff ff       	callq  804bf36 <tcc_free>
 804e7ab:	48 8b 05 9e f7 03 00 	mov    0x3f79e(%rip),%rax        # 808df50 <_GLOBAL_OFFSET_TABLE_+0x2d0>
 804e7b2:	48 89 c6             	mov    %rax,%rsi
 804e7b5:	48 8b 05 9c f7 03 00 	mov    0x3f79c(%rip),%rax        # 808df58 <_GLOBAL_OFFSET_TABLE_+0x2d8>
 804e7bc:	48 89 c7             	mov    %rax,%rdi
 804e7bf:	b8 00 00 00 00       	mov    $0x0,%eax
 804e7c4:	e8 fe d9 ff ff       	callq  804c1c7 <dynarray_reset>
 804e7c9:	48 8b 05 90 f7 03 00 	mov    0x3f790(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 804e7d0:	48 89 c7             	mov    %rax,%rdi
 804e7d3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e7d8:	e8 1f 2c 00 00       	callq  80513fc <cstr_free>
 804e7dd:	b8 00 00 00 00       	mov    $0x0,%eax
 804e7e2:	4c 8b 1d 7f f7 03 00 	mov    0x3f77f(%rip),%r11        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 804e7e9:	49 89 03             	mov    %rax,(%r11)
 804e7ec:	b8 00 00 00 00       	mov    $0x0,%eax
 804e7f1:	4c 8b 1d 78 f7 03 00 	mov    0x3f778(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 804e7f8:	49 89 03             	mov    %rax,(%r11)
 804e7fb:	c9                   	leaveq 
 804e7fc:	c3                   	retq   

000000000804e7fd <tcc_new>:
 804e7fd:	55                   	push   %rbp
 804e7fe:	48 89 e5             	mov    %rsp,%rbp
 804e801:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
 804e808:	b8 00 00 00 00       	mov    $0x0,%eax
 804e80d:	e8 c7 fe ff ff       	callq  804e6d9 <tcc_cleanup>
 804e812:	48 b8 b8 0c 00 00 00 	movabs $0xcb8,%rax
 804e819:	00 00 00 
 804e81c:	48 89 c7             	mov    %rax,%rdi
 804e81f:	b8 00 00 00 00       	mov    $0x0,%eax
 804e824:	e8 a3 d7 ff ff       	callq  804bfcc <tcc_mallocz>
 804e829:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 804e82d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e831:	85 c0                	test   %eax,%eax
 804e833:	0f 84 05 00 00 00    	je     804e83e <tcc_new+0x41>
 804e839:	e9 0a 00 00 00       	jmpq   804e848 <tcc_new+0x4b>
 804e83e:	b8 00 00 00 00       	mov    $0x0,%eax
 804e843:	e9 b1 06 00 00       	jmpq   804eef9 <tcc_new+0x6fc>
 804e848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e84c:	4c 8b 1d 3d f6 03 00 	mov    0x3f63d(%rip),%r11        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 804e853:	49 89 03             	mov    %rax,(%r11)
 804e856:	48 8d 05 15 b1 03 00 	lea    0x3b115(%rip),%rax        # 8089972 <L.129>
 804e85d:	48 89 c6             	mov    %rax,%rsi
 804e860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e864:	48 89 c7             	mov    %rax,%rdi
 804e867:	b8 00 00 00 00       	mov    $0x0,%eax
 804e86c:	e8 d5 22 00 00       	callq  8050b46 <tcc_set_lib_path>
 804e871:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e875:	b9 00 00 00 00       	mov    $0x0,%ecx
 804e87a:	48 89 ca             	mov    %rcx,%rdx
 804e87d:	81 e2 ff 00 00 00    	and    $0xff,%edx
 804e883:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
 804e887:	8b 08                	mov    (%rax),%ecx
 804e889:	81 e1 00 ff ff ff    	and    $0xffffff00,%ecx
 804e88f:	48 09 ca             	or     %rcx,%rdx
 804e892:	89 10                	mov    %edx,(%rax)
 804e894:	b8 00 00 00 00       	mov    $0x0,%eax
 804e899:	e8 45 a2 00 00       	callq  8058ae3 <preprocess_new>
 804e89e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e8a2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804e8a9:	00 00 00 
 804e8ac:	48 01 c8             	add    %rcx,%rax
 804e8af:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804e8b3:	48 ba 48 02 00 00 00 	movabs $0x248,%rdx
 804e8ba:	00 00 00 
 804e8bd:	48 01 d1             	add    %rdx,%rcx
 804e8c0:	48 89 08             	mov    %rcx,(%rax)
 804e8c3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e8c8:	49 89 c3             	mov    %rax,%r11
 804e8cb:	b8 00 00 00 00       	mov    $0x0,%eax
 804e8d0:	49 89 c2             	mov    %rax,%r10
 804e8d3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e8d8:	48 89 c6             	mov    %rax,%rsi
 804e8db:	b8 46 01 00 00       	mov    $0x146,%eax
 804e8e0:	48 89 c7             	mov    %rax,%rdi
 804e8e3:	4c 89 d2             	mov    %r10,%rdx
 804e8e6:	4c 89 d9             	mov    %r11,%rcx
 804e8e9:	b8 00 00 00 00       	mov    $0x0,%eax
 804e8ee:	e8 4e 53 00 00       	callq  8053c41 <define_push>
 804e8f3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e8f8:	49 89 c3             	mov    %rax,%r11
 804e8fb:	b8 00 00 00 00       	mov    $0x0,%eax
 804e900:	49 89 c2             	mov    %rax,%r10
 804e903:	b8 00 00 00 00       	mov    $0x0,%eax
 804e908:	48 89 c6             	mov    %rax,%rsi
 804e90b:	b8 47 01 00 00       	mov    $0x147,%eax
 804e910:	48 89 c7             	mov    %rax,%rdi
 804e913:	4c 89 d2             	mov    %r10,%rdx
 804e916:	4c 89 d9             	mov    %r11,%rcx
 804e919:	b8 00 00 00 00       	mov    $0x0,%eax
 804e91e:	e8 1e 53 00 00       	callq  8053c41 <define_push>
 804e923:	b8 00 00 00 00       	mov    $0x0,%eax
 804e928:	49 89 c3             	mov    %rax,%r11
 804e92b:	b8 00 00 00 00       	mov    $0x0,%eax
 804e930:	49 89 c2             	mov    %rax,%r10
 804e933:	b8 00 00 00 00       	mov    $0x0,%eax
 804e938:	48 89 c6             	mov    %rax,%rsi
 804e93b:	b8 48 01 00 00       	mov    $0x148,%eax
 804e940:	48 89 c7             	mov    %rax,%rdi
 804e943:	4c 89 d2             	mov    %r10,%rdx
 804e946:	4c 89 d9             	mov    %r11,%rcx
 804e949:	b8 00 00 00 00       	mov    $0x0,%eax
 804e94e:	e8 ee 52 00 00       	callq  8053c41 <define_push>
 804e953:	b8 00 00 00 00       	mov    $0x0,%eax
 804e958:	49 89 c3             	mov    %rax,%r11
 804e95b:	b8 00 00 00 00       	mov    $0x0,%eax
 804e960:	49 89 c2             	mov    %rax,%r10
 804e963:	b8 00 00 00 00       	mov    $0x0,%eax
 804e968:	48 89 c6             	mov    %rax,%rsi
 804e96b:	b8 49 01 00 00       	mov    $0x149,%eax
 804e970:	48 89 c7             	mov    %rax,%rdi
 804e973:	4c 89 d2             	mov    %r10,%rdx
 804e976:	4c 89 d9             	mov    %r11,%rcx
 804e979:	b8 00 00 00 00       	mov    $0x0,%eax
 804e97e:	e8 be 52 00 00       	callq  8053c41 <define_push>
 804e983:	b8 00 00 00 00       	mov    $0x0,%eax
 804e988:	49 89 c2             	mov    %rax,%r10
 804e98b:	48 8d 05 f3 af 03 00 	lea    0x3aff3(%rip),%rax        # 8089985 <L.130>
 804e992:	48 89 c6             	mov    %rax,%rsi
 804e995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e999:	48 89 c7             	mov    %rax,%rdi
 804e99c:	4c 89 d2             	mov    %r10,%rdx
 804e99f:	b8 00 00 00 00       	mov    $0x0,%eax
 804e9a4:	e8 44 fb ff ff       	callq  804e4ed <tcc_define_symbol>
 804e9a9:	48 8d 05 ef af 03 00 	lea    0x3afef(%rip),%rax        # 808999f <L.132>
 804e9b0:	49 89 c2             	mov    %rax,%r10
 804e9b3:	48 8d 05 d4 af 03 00 	lea    0x3afd4(%rip),%rax        # 808998e <L.131>
 804e9ba:	48 89 c6             	mov    %rax,%rsi
 804e9bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e9c1:	48 89 c7             	mov    %rax,%rdi
 804e9c4:	4c 89 d2             	mov    %r10,%rdx
 804e9c7:	b8 00 00 00 00       	mov    $0x0,%eax
 804e9cc:	e8 1c fb ff ff       	callq  804e4ed <tcc_define_symbol>
 804e9d1:	b8 00 00 00 00       	mov    $0x0,%eax
 804e9d6:	49 89 c2             	mov    %rax,%r10
 804e9d9:	48 8d 05 c7 af 03 00 	lea    0x3afc7(%rip),%rax        # 80899a7 <L.133>
 804e9e0:	48 89 c6             	mov    %rax,%rsi
 804e9e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804e9e7:	48 89 c7             	mov    %rax,%rdi
 804e9ea:	4c 89 d2             	mov    %r10,%rdx
 804e9ed:	b8 00 00 00 00       	mov    $0x0,%eax
 804e9f2:	e8 f6 fa ff ff       	callq  804e4ed <tcc_define_symbol>
 804e9f7:	b8 00 00 00 00       	mov    $0x0,%eax
 804e9fc:	49 89 c2             	mov    %rax,%r10
 804e9ff:	48 8d 05 ac af 03 00 	lea    0x3afac(%rip),%rax        # 80899b2 <L.134>
 804ea06:	48 89 c6             	mov    %rax,%rsi
 804ea09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ea0d:	48 89 c7             	mov    %rax,%rdi
 804ea10:	4c 89 d2             	mov    %r10,%rdx
 804ea13:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea18:	e8 d0 fa ff ff       	callq  804e4ed <tcc_define_symbol>
 804ea1d:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea22:	49 89 c2             	mov    %rax,%r10
 804ea25:	48 8d 05 8f af 03 00 	lea    0x3af8f(%rip),%rax        # 80899bb <L.135>
 804ea2c:	48 89 c6             	mov    %rax,%rsi
 804ea2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ea33:	48 89 c7             	mov    %rax,%rdi
 804ea36:	4c 89 d2             	mov    %r10,%rdx
 804ea39:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea3e:	e8 aa fa ff ff       	callq  804e4ed <tcc_define_symbol>
 804ea43:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea48:	49 89 c2             	mov    %rax,%r10
 804ea4b:	48 8d 05 70 af 03 00 	lea    0x3af70(%rip),%rax        # 80899c2 <L.136>
 804ea52:	48 89 c6             	mov    %rax,%rsi
 804ea55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ea59:	48 89 c7             	mov    %rax,%rdi
 804ea5c:	4c 89 d2             	mov    %r10,%rdx
 804ea5f:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea64:	e8 84 fa ff ff       	callq  804e4ed <tcc_define_symbol>
 804ea69:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea6e:	49 89 c2             	mov    %rax,%r10
 804ea71:	48 8d 05 4f af 03 00 	lea    0x3af4f(%rip),%rax        # 80899c7 <L.137>
 804ea78:	48 89 c6             	mov    %rax,%rsi
 804ea7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ea7f:	48 89 c7             	mov    %rax,%rdi
 804ea82:	4c 89 d2             	mov    %r10,%rdx
 804ea85:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea8a:	e8 5e fa ff ff       	callq  804e4ed <tcc_define_symbol>
 804ea8f:	b8 00 00 00 00       	mov    $0x0,%eax
 804ea94:	49 89 c2             	mov    %rax,%r10
 804ea97:	48 8d 05 33 af 03 00 	lea    0x3af33(%rip),%rax        # 80899d1 <L.138>
 804ea9e:	48 89 c6             	mov    %rax,%rsi
 804eaa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eaa5:	48 89 c7             	mov    %rax,%rdi
 804eaa8:	4c 89 d2             	mov    %r10,%rdx
 804eaab:	b8 00 00 00 00       	mov    $0x0,%eax
 804eab0:	e8 38 fa ff ff       	callq  804e4ed <tcc_define_symbol>
 804eab5:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 804eab9:	49 89 c0             	mov    %rax,%r8
 804eabc:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
 804eac0:	49 89 c3             	mov    %rax,%r11
 804eac3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 804eac7:	49 89 c2             	mov    %rax,%r10
 804eaca:	48 8d 05 0f af 03 00 	lea    0x3af0f(%rip),%rax        # 80899e0 <L.140>
 804ead1:	48 89 c6             	mov    %rax,%rsi
 804ead4:	48 8d 05 fe ae 03 00 	lea    0x3aefe(%rip),%rax        # 80899d9 <L.139>
 804eadb:	48 89 c7             	mov    %rax,%rdi
 804eade:	4c 89 d2             	mov    %r10,%rdx
 804eae1:	4c 89 d9             	mov    %r11,%rcx
 804eae4:	b8 00 00 00 00       	mov    $0x0,%eax
 804eae9:	e8 f2 90 03 00       	callq  8087be0 <__preinit_array_end+0x140>
 804eaee:	8b 45 90             	mov    -0x70(%rbp),%eax
 804eaf1:	b9 10 27 00 00       	mov    $0x2710,%ecx
 804eaf6:	0f af c1             	imul   %ecx,%eax
 804eaf9:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 804eafc:	ba 64 00 00 00       	mov    $0x64,%edx
 804eb01:	0f af ca             	imul   %edx,%ecx
 804eb04:	48 01 c8             	add    %rcx,%rax
 804eb07:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 804eb0a:	48 01 c8             	add    %rcx,%rax
 804eb0d:	49 89 c2             	mov    %rax,%r10
 804eb10:	48 8d 05 d2 ae 03 00 	lea    0x3aed2(%rip),%rax        # 80899e9 <L.141>
 804eb17:	48 89 c6             	mov    %rax,%rsi
 804eb1a:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
 804eb1e:	48 89 c7             	mov    %rax,%rdi
 804eb21:	4c 89 d2             	mov    %r10,%rdx
 804eb24:	b8 00 00 00 00       	mov    $0x0,%eax
 804eb29:	e8 c2 90 03 00       	callq  8087bf0 <__preinit_array_end+0x150>
 804eb2e:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
 804eb32:	49 89 c2             	mov    %rax,%r10
 804eb35:	48 8d 05 b0 ae 03 00 	lea    0x3aeb0(%rip),%rax        # 80899ec <L.142>
 804eb3c:	48 89 c6             	mov    %rax,%rsi
 804eb3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eb43:	48 89 c7             	mov    %rax,%rdi
 804eb46:	4c 89 d2             	mov    %r10,%rdx
 804eb49:	b8 00 00 00 00       	mov    $0x0,%eax
 804eb4e:	e8 9a f9 ff ff       	callq  804e4ed <tcc_define_symbol>
 804eb53:	48 8d 05 aa ae 03 00 	lea    0x3aeaa(%rip),%rax        # 8089a04 <L.144>
 804eb5a:	49 89 c2             	mov    %rax,%r10
 804eb5d:	48 8d 05 92 ae 03 00 	lea    0x3ae92(%rip),%rax        # 80899f6 <L.143>
 804eb64:	48 89 c6             	mov    %rax,%rsi
 804eb67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eb6b:	48 89 c7             	mov    %rax,%rdi
 804eb6e:	4c 89 d2             	mov    %r10,%rdx
 804eb71:	b8 00 00 00 00       	mov    $0x0,%eax
 804eb76:	e8 72 f9 ff ff       	callq  804e4ed <tcc_define_symbol>
 804eb7b:	48 8d 05 a1 ae 03 00 	lea    0x3aea1(%rip),%rax        # 8089a23 <L.146>
 804eb82:	49 89 c2             	mov    %rax,%r10
 804eb85:	48 8d 05 86 ae 03 00 	lea    0x3ae86(%rip),%rax        # 8089a12 <L.145>
 804eb8c:	48 89 c6             	mov    %rax,%rsi
 804eb8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eb93:	48 89 c7             	mov    %rax,%rdi
 804eb96:	4c 89 d2             	mov    %r10,%rdx
 804eb99:	b8 00 00 00 00       	mov    $0x0,%eax
 804eb9e:	e8 4a f9 ff ff       	callq  804e4ed <tcc_define_symbol>
 804eba3:	48 8d 05 8d ae 03 00 	lea    0x3ae8d(%rip),%rax        # 8089a37 <L.148>
 804ebaa:	49 89 c2             	mov    %rax,%r10
 804ebad:	48 8d 05 74 ae 03 00 	lea    0x3ae74(%rip),%rax        # 8089a28 <L.147>
 804ebb4:	48 89 c6             	mov    %rax,%rsi
 804ebb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ebbb:	48 89 c7             	mov    %rax,%rdi
 804ebbe:	4c 89 d2             	mov    %r10,%rdx
 804ebc1:	b8 00 00 00 00       	mov    $0x0,%eax
 804ebc6:	e8 22 f9 ff ff       	callq  804e4ed <tcc_define_symbol>
 804ebcb:	48 8d 05 88 ae 03 00 	lea    0x3ae88(%rip),%rax        # 8089a5a <L.150>
 804ebd2:	49 89 c2             	mov    %rax,%r10
 804ebd5:	48 8d 05 5f ae 03 00 	lea    0x3ae5f(%rip),%rax        # 8089a3b <L.149>
 804ebdc:	48 89 c6             	mov    %rax,%rsi
 804ebdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ebe3:	48 89 c7             	mov    %rax,%rdi
 804ebe6:	4c 89 d2             	mov    %r10,%rdx
 804ebe9:	b8 00 00 00 00       	mov    $0x0,%eax
 804ebee:	e8 fa f8 ff ff       	callq  804e4ed <tcc_define_symbol>
 804ebf3:	48 8d 05 9f ae 03 00 	lea    0x3ae9f(%rip),%rax        # 8089a99 <L.152>
 804ebfa:	49 89 c2             	mov    %rax,%r10
 804ebfd:	48 8d 05 72 ae 03 00 	lea    0x3ae72(%rip),%rax        # 8089a76 <L.151>
 804ec04:	48 89 c6             	mov    %rax,%rsi
 804ec07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ec0b:	48 89 c7             	mov    %rax,%rdi
 804ec0e:	4c 89 d2             	mov    %r10,%rdx
 804ec11:	b8 00 00 00 00       	mov    $0x0,%eax
 804ec16:	e8 d2 f8 ff ff       	callq  804e4ed <tcc_define_symbol>
 804ec1b:	48 8d 05 9b ae 03 00 	lea    0x3ae9b(%rip),%rax        # 8089abd <L.153>
 804ec22:	48 89 c6             	mov    %rax,%rsi
 804ec25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ec29:	48 89 c7             	mov    %rax,%rdi
 804ec2c:	b8 00 00 00 00       	mov    $0x0,%eax
 804ec31:	e8 b6 0c 00 00       	callq  804f8ec <tcc_add_library_path>
 804ec36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ec3a:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 804ec41:	00 00 00 
 804ec44:	48 01 c8             	add    %rcx,%rax
 804ec47:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804ec4b:	48 ba 60 00 00 00 00 	movabs $0x60,%rdx
 804ec52:	00 00 00 
 804ec55:	48 01 d1             	add    %rdx,%rcx
 804ec58:	48 8d 15 81 ae 03 00 	lea    0x3ae81(%rip),%rdx        # 8089ae0 <L.154>
 804ec5f:	49 89 d3             	mov    %rdx,%r11
 804ec62:	49 89 ca             	mov    %rcx,%r10
 804ec65:	48 89 c6             	mov    %rax,%rsi
 804ec68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ec6c:	48 89 c7             	mov    %rax,%rdi
 804ec6f:	4c 89 d2             	mov    %r10,%rdx
 804ec72:	4c 89 d9             	mov    %r11,%rcx
 804ec75:	b8 00 00 00 00       	mov    $0x0,%eax
 804ec7a:	e8 e2 d5 ff ff       	callq  804c261 <tcc_split_path>
 804ec7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ec83:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804ec8a:	00 00 00 
 804ec8d:	48 01 c8             	add    %rcx,%rax
 804ec90:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804ec94:	48 ba 80 00 00 00 00 	movabs $0x80,%rdx
 804ec9b:	00 00 00 
 804ec9e:	48 01 d1             	add    %rdx,%rcx
 804eca1:	ba 00 00 00 00       	mov    $0x0,%edx
 804eca6:	49 89 d2             	mov    %rdx,%r10
 804eca9:	48 89 ce             	mov    %rcx,%rsi
 804ecac:	48 89 c7             	mov    %rax,%rdi
 804ecaf:	4c 89 d2             	mov    %r10,%rdx
 804ecb2:	b8 00 00 00 00       	mov    $0x0,%eax
 804ecb7:	e8 47 d4 ff ff       	callq  804c103 <dynarray_add>
 804ecbc:	b8 06 00 00 00       	mov    $0x6,%eax
 804ecc1:	49 89 c3             	mov    %rax,%r11
 804ecc4:	b8 01 00 00 00       	mov    $0x1,%eax
 804ecc9:	49 89 c2             	mov    %rax,%r10
 804eccc:	48 8d 05 18 ae 03 00 	lea    0x3ae18(%rip),%rax        # 8089aeb <L.155>
 804ecd3:	48 89 c6             	mov    %rax,%rsi
 804ecd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ecda:	48 89 c7             	mov    %rax,%rdi
 804ecdd:	4c 89 d2             	mov    %r10,%rdx
 804ece0:	4c 89 d9             	mov    %r11,%rcx
 804ece3:	b8 00 00 00 00       	mov    $0x0,%eax
 804ece8:	e8 0b d8 ff ff       	callq  804c4f8 <new_section>
 804eced:	4c 8b 1d dc f1 03 00 	mov    0x3f1dc(%rip),%r11        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 804ecf4:	49 89 03             	mov    %rax,(%r11)
 804ecf7:	b8 03 00 00 00       	mov    $0x3,%eax
 804ecfc:	49 89 c3             	mov    %rax,%r11
 804ecff:	b8 01 00 00 00       	mov    $0x1,%eax
 804ed04:	49 89 c2             	mov    %rax,%r10
 804ed07:	48 8d 05 e3 ad 03 00 	lea    0x3ade3(%rip),%rax        # 8089af1 <L.156>
 804ed0e:	48 89 c6             	mov    %rax,%rsi
 804ed11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ed15:	48 89 c7             	mov    %rax,%rdi
 804ed18:	4c 89 d2             	mov    %r10,%rdx
 804ed1b:	4c 89 d9             	mov    %r11,%rcx
 804ed1e:	b8 00 00 00 00       	mov    $0x0,%eax
 804ed23:	e8 d0 d7 ff ff       	callq  804c4f8 <new_section>
 804ed28:	4c 8b 1d 49 f2 03 00 	mov    0x3f249(%rip),%r11        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 804ed2f:	49 89 03             	mov    %rax,(%r11)
 804ed32:	b8 03 00 00 00       	mov    $0x3,%eax
 804ed37:	49 89 c3             	mov    %rax,%r11
 804ed3a:	b8 08 00 00 00       	mov    $0x8,%eax
 804ed3f:	49 89 c2             	mov    %rax,%r10
 804ed42:	48 8d 05 ae ad 03 00 	lea    0x3adae(%rip),%rax        # 8089af7 <L.157>
 804ed49:	48 89 c6             	mov    %rax,%rsi
 804ed4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ed50:	48 89 c7             	mov    %rax,%rdi
 804ed53:	4c 89 d2             	mov    %r10,%rdx
 804ed56:	4c 89 d9             	mov    %r11,%rcx
 804ed59:	b8 00 00 00 00       	mov    $0x0,%eax
 804ed5e:	e8 95 d7 ff ff       	callq  804c4f8 <new_section>
 804ed63:	4c 8b 1d 16 f2 03 00 	mov    0x3f216(%rip),%r11        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 804ed6a:	49 89 03             	mov    %rax,(%r11)
 804ed6d:	50                   	push   %rax
 804ed6e:	b8 00 00 00 80       	mov    $0x80000000,%eax
 804ed73:	50                   	push   %rax
 804ed74:	48 8d 05 91 ad 03 00 	lea    0x3ad91(%rip),%rax        # 8089b0c <L.160>
 804ed7b:	49 89 c1             	mov    %rax,%r9
 804ed7e:	48 8d 05 7f ad 03 00 	lea    0x3ad7f(%rip),%rax        # 8089b04 <L.159>
 804ed85:	49 89 c0             	mov    %rax,%r8
 804ed88:	b8 00 00 00 00       	mov    $0x0,%eax
 804ed8d:	49 89 c3             	mov    %rax,%r11
 804ed90:	b8 02 00 00 00       	mov    $0x2,%eax
 804ed95:	49 89 c2             	mov    %rax,%r10
 804ed98:	48 8d 05 5d ad 03 00 	lea    0x3ad5d(%rip),%rax        # 8089afc <L.158>
 804ed9f:	48 89 c6             	mov    %rax,%rsi
 804eda2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eda6:	48 89 c7             	mov    %rax,%rdi
 804eda9:	4c 89 d2             	mov    %r10,%rdx
 804edac:	4c 89 d9             	mov    %r11,%rcx
 804edaf:	b8 00 00 00 00       	mov    $0x0,%eax
 804edb4:	e8 1f 1e 02 00       	callq  8070bd8 <new_symtab>
 804edb9:	48 83 c4 10          	add    $0x10,%rsp
 804edbd:	4c 8b 1d d4 f0 03 00 	mov    0x3f0d4(%rip),%r11        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804edc4:	49 89 03             	mov    %rax,(%r11)
 804edc7:	48 8b 05 ca f0 03 00 	mov    0x3f0ca(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804edce:	48 8b 00             	mov    (%rax),%rax
 804edd1:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 804edd8:	00 00 00 
 804eddb:	48 01 c8             	add    %rcx,%rax
 804edde:	48 8b 08             	mov    (%rax),%rcx
 804ede1:	4c 8b 1d a0 f1 03 00 	mov    0x3f1a0(%rip),%r11        # 808df88 <_GLOBAL_OFFSET_TABLE_+0x308>
 804ede8:	49 89 0b             	mov    %rcx,(%r11)
 804edeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804edef:	48 b9 d0 00 00 00 00 	movabs $0xd0,%rcx
 804edf6:	00 00 00 
 804edf9:	48 01 c8             	add    %rcx,%rax
 804edfc:	48 8b 0d 95 f0 03 00 	mov    0x3f095(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804ee03:	48 8b 09             	mov    (%rcx),%rcx
 804ee06:	48 89 08             	mov    %rcx,(%rax)
 804ee09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ee0d:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 804ee14:	00 00 00 
 804ee17:	48 01 c8             	add    %rcx,%rax
 804ee1a:	50                   	push   %rax
 804ee1b:	b9 00 00 00 80       	mov    $0x80000000,%ecx
 804ee20:	51                   	push   %rcx
 804ee21:	48 8d 0d 03 ad 03 00 	lea    0x3ad03(%rip),%rcx        # 8089b2b <L.163>
 804ee28:	49 89 c9             	mov    %rcx,%r9
 804ee2b:	48 8d 0d ee ac 03 00 	lea    0x3acee(%rip),%rcx        # 8089b20 <L.162>
 804ee32:	49 89 c8             	mov    %rcx,%r8
 804ee35:	b9 00 00 00 80       	mov    $0x80000000,%ecx
 804ee3a:	49 89 cb             	mov    %rcx,%r11
 804ee3d:	b9 02 00 00 00       	mov    $0x2,%ecx
 804ee42:	49 89 ca             	mov    %rcx,%r10
 804ee45:	48 8d 0d c9 ac 03 00 	lea    0x3acc9(%rip),%rcx        # 8089b15 <L.161>
 804ee4c:	48 89 ce             	mov    %rcx,%rsi
 804ee4f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804ee53:	48 89 cf             	mov    %rcx,%rdi
 804ee56:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 804ee5d:	4c 89 d2             	mov    %r10,%rdx
 804ee60:	4c 89 d9             	mov    %r11,%rcx
 804ee63:	b8 00 00 00 00       	mov    $0x0,%eax
 804ee68:	e8 6b 1d 02 00       	callq  8070bd8 <new_symtab>
 804ee6d:	48 83 c4 10          	add    $0x10,%rsp
 804ee71:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
 804ee78:	48 89 01             	mov    %rax,(%rcx)
 804ee7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ee7f:	48 b9 00 01 00 00 00 	movabs $0x100,%rcx
 804ee86:	00 00 00 
 804ee89:	48 01 c8             	add    %rcx,%rax
 804ee8c:	b9 01 00 00 00       	mov    $0x1,%ecx
 804ee91:	89 08                	mov    %ecx,(%rax)
 804ee93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ee97:	48 b9 e0 00 00 00 00 	movabs $0xe0,%rcx
 804ee9e:	00 00 00 
 804eea1:	48 01 c8             	add    %rcx,%rax
 804eea4:	b9 01 00 00 00       	mov    $0x1,%ecx
 804eea9:	89 08                	mov    %ecx,(%rax)
 804eeab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eeaf:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 804eeb6:	00 00 00 
 804eeb9:	48 01 c8             	add    %rcx,%rax
 804eebc:	48 8b 08             	mov    (%rax),%rcx
 804eebf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804eec6:	00 00 00 
 804eec9:	48 39 c1             	cmp    %rax,%rcx
 804eecc:	0f 85 1e 00 00 00    	jne    804eef0 <tcc_new+0x6f3>
 804eed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eed6:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 804eedd:	00 00 00 
 804eee0:	48 01 c8             	add    %rcx,%rax
 804eee3:	48 b9 00 10 00 00 00 	movabs $0x1000,%rcx
 804eeea:	00 00 00 
 804eeed:	48 89 08             	mov    %rcx,(%rax)
 804eef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eef4:	e9 00 00 00 00       	jmpq   804eef9 <tcc_new+0x6fc>
 804eef9:	c9                   	leaveq 
 804eefa:	c3                   	retq   

000000000804eefb <tcc_delete>:
 804eefb:	55                   	push   %rbp
 804eefc:	48 89 e5             	mov    %rsp,%rbp
 804eeff:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804ef06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804ef0a:	b8 00 00 00 00       	mov    $0x0,%eax
 804ef0f:	e8 c5 f7 ff ff       	callq  804e6d9 <tcc_cleanup>
 804ef14:	b8 01 00 00 00       	mov    $0x1,%eax
 804ef19:	89 45 f4             	mov    %eax,-0xc(%rbp)
 804ef1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ef20:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 804ef27:	00 00 00 
 804ef2a:	48 01 c8             	add    %rcx,%rax
 804ef2d:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 804ef30:	8b 10                	mov    (%rax),%edx
 804ef32:	39 d1                	cmp    %edx,%ecx
 804ef34:	0f 8d 4c 00 00 00    	jge    804ef86 <tcc_delete+0x8b>
 804ef3a:	e9 0e 00 00 00       	jmpq   804ef4d <tcc_delete+0x52>
 804ef3f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 804ef42:	48 89 c1             	mov    %rax,%rcx
 804ef45:	83 c0 01             	add    $0x1,%eax
 804ef48:	89 45 f4             	mov    %eax,-0xc(%rbp)
 804ef4b:	eb cf                	jmp    804ef1c <tcc_delete+0x21>
 804ef4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ef51:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804ef58:	00 00 00 
 804ef5b:	48 01 c8             	add    %rcx,%rax
 804ef5e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 804ef61:	48 63 c9             	movslq %ecx,%rcx
 804ef64:	48 89 ca             	mov    %rcx,%rdx
 804ef67:	48 c1 e2 03          	shl    $0x3,%rdx
 804ef6b:	48 8b 08             	mov    (%rax),%rcx
 804ef6e:	48 89 d0             	mov    %rdx,%rax
 804ef71:	48 01 c1             	add    %rax,%rcx
 804ef74:	48 8b 01             	mov    (%rcx),%rax
 804ef77:	48 89 c7             	mov    %rax,%rdi
 804ef7a:	b8 00 00 00 00       	mov    $0x0,%eax
 804ef7f:	e8 8b d7 ff ff       	callq  804c70f <free_section>
 804ef84:	eb b9                	jmp    804ef3f <tcc_delete+0x44>
 804ef86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ef8a:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 804ef91:	00 00 00 
 804ef94:	48 01 c8             	add    %rcx,%rax
 804ef97:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804ef9b:	48 ba 80 00 00 00 00 	movabs $0x80,%rdx
 804efa2:	00 00 00 
 804efa5:	48 01 d1             	add    %rdx,%rcx
 804efa8:	48 89 ce             	mov    %rcx,%rsi
 804efab:	48 89 c7             	mov    %rax,%rdi
 804efae:	b8 00 00 00 00       	mov    $0x0,%eax
 804efb3:	e8 0f d2 ff ff       	callq  804c1c7 <dynarray_reset>
 804efb8:	b8 00 00 00 00       	mov    $0x0,%eax
 804efbd:	89 45 f4             	mov    %eax,-0xc(%rbp)
 804efc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804efc4:	48 b9 90 00 00 00 00 	movabs $0x90,%rcx
 804efcb:	00 00 00 
 804efce:	48 01 c8             	add    %rcx,%rax
 804efd1:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 804efd4:	8b 10                	mov    (%rax),%edx
 804efd6:	39 d1                	cmp    %edx,%ecx
 804efd8:	0f 8d 4c 00 00 00    	jge    804f02a <tcc_delete+0x12f>
 804efde:	e9 0e 00 00 00       	jmpq   804eff1 <tcc_delete+0xf6>
 804efe3:	8b 45 f4             	mov    -0xc(%rbp),%eax
 804efe6:	48 89 c1             	mov    %rax,%rcx
 804efe9:	83 c0 01             	add    $0x1,%eax
 804efec:	89 45 f4             	mov    %eax,-0xc(%rbp)
 804efef:	eb cf                	jmp    804efc0 <tcc_delete+0xc5>
 804eff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804eff5:	48 b9 88 00 00 00 00 	movabs $0x88,%rcx
 804effc:	00 00 00 
 804efff:	48 01 c8             	add    %rcx,%rax
 804f002:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 804f005:	48 63 c9             	movslq %ecx,%rcx
 804f008:	48 89 ca             	mov    %rcx,%rdx
 804f00b:	48 c1 e2 03          	shl    $0x3,%rdx
 804f00f:	48 8b 08             	mov    (%rax),%rcx
 804f012:	48 89 d0             	mov    %rdx,%rax
 804f015:	48 01 c1             	add    %rax,%rcx
 804f018:	48 8b 01             	mov    (%rcx),%rax
 804f01b:	48 89 c7             	mov    %rax,%rdi
 804f01e:	b8 00 00 00 00       	mov    $0x0,%eax
 804f023:	e8 e7 d6 ff ff       	callq  804c70f <free_section>
 804f028:	eb b9                	jmp    804efe3 <tcc_delete+0xe8>
 804f02a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f02e:	48 b9 88 00 00 00 00 	movabs $0x88,%rcx
 804f035:	00 00 00 
 804f038:	48 01 c8             	add    %rcx,%rax
 804f03b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f03f:	48 ba 90 00 00 00 00 	movabs $0x90,%rdx
 804f046:	00 00 00 
 804f049:	48 01 d1             	add    %rdx,%rcx
 804f04c:	48 89 ce             	mov    %rcx,%rsi
 804f04f:	48 89 c7             	mov    %rax,%rdi
 804f052:	b8 00 00 00 00       	mov    $0x0,%eax
 804f057:	e8 6b d1 ff ff       	callq  804c1c7 <dynarray_reset>
 804f05c:	b8 00 00 00 00       	mov    $0x0,%eax
 804f061:	89 45 f4             	mov    %eax,-0xc(%rbp)
 804f064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f068:	48 b9 70 00 00 00 00 	movabs $0x70,%rcx
 804f06f:	00 00 00 
 804f072:	48 01 c8             	add    %rcx,%rax
 804f075:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 804f078:	8b 10                	mov    (%rax),%edx
 804f07a:	39 d1                	cmp    %edx,%ecx
 804f07c:	0f 8d 80 00 00 00    	jge    804f102 <tcc_delete+0x207>
 804f082:	e9 0e 00 00 00       	jmpq   804f095 <tcc_delete+0x19a>
 804f087:	8b 45 f4             	mov    -0xc(%rbp),%eax
 804f08a:	48 89 c1             	mov    %rax,%rcx
 804f08d:	83 c0 01             	add    $0x1,%eax
 804f090:	89 45 f4             	mov    %eax,-0xc(%rbp)
 804f093:	eb cf                	jmp    804f064 <tcc_delete+0x169>
 804f095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f099:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 804f0a0:	00 00 00 
 804f0a3:	48 01 c8             	add    %rcx,%rax
 804f0a6:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 804f0a9:	48 63 c9             	movslq %ecx,%rcx
 804f0ac:	48 89 ca             	mov    %rcx,%rdx
 804f0af:	48 c1 e2 03          	shl    $0x3,%rdx
 804f0b3:	48 8b 08             	mov    (%rax),%rcx
 804f0b6:	48 89 d0             	mov    %rdx,%rax
 804f0b9:	48 01 c1             	add    %rax,%rcx
 804f0bc:	48 8b 01             	mov    (%rcx),%rax
 804f0bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804f0c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804f0c7:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804f0ce:	00 00 00 
 804f0d1:	48 01 c8             	add    %rcx,%rax
 804f0d4:	48 8b 08             	mov    (%rax),%rcx
 804f0d7:	85 c9                	test   %ecx,%ecx
 804f0d9:	0f 84 21 00 00 00    	je     804f100 <tcc_delete+0x205>
 804f0df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804f0e3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804f0ea:	00 00 00 
 804f0ed:	48 01 c8             	add    %rcx,%rax
 804f0f0:	48 8b 08             	mov    (%rax),%rcx
 804f0f3:	48 89 cf             	mov    %rcx,%rdi
 804f0f6:	b8 00 00 00 00       	mov    $0x0,%eax
 804f0fb:	e8 00 8b 03 00       	callq  8087c00 <__preinit_array_end+0x160>
 804f100:	eb 85                	jmp    804f087 <tcc_delete+0x18c>
 804f102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f106:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 804f10d:	00 00 00 
 804f110:	48 01 c8             	add    %rcx,%rax
 804f113:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f117:	48 ba 70 00 00 00 00 	movabs $0x70,%rdx
 804f11e:	00 00 00 
 804f121:	48 01 d1             	add    %rdx,%rcx
 804f124:	48 89 ce             	mov    %rcx,%rsi
 804f127:	48 89 c7             	mov    %rax,%rdi
 804f12a:	b8 00 00 00 00       	mov    $0x0,%eax
 804f12f:	e8 93 d0 ff ff       	callq  804c1c7 <dynarray_reset>
 804f134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f138:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 804f13f:	00 00 00 
 804f142:	48 01 c8             	add    %rcx,%rax
 804f145:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f149:	48 ba 50 00 00 00 00 	movabs $0x50,%rdx
 804f150:	00 00 00 
 804f153:	48 01 d1             	add    %rdx,%rcx
 804f156:	48 89 ce             	mov    %rcx,%rsi
 804f159:	48 89 c7             	mov    %rax,%rdi
 804f15c:	b8 00 00 00 00       	mov    $0x0,%eax
 804f161:	e8 61 d0 ff ff       	callq  804c1c7 <dynarray_reset>
 804f166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f16a:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 804f171:	00 00 00 
 804f174:	48 01 c8             	add    %rcx,%rax
 804f177:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f17b:	48 ba 60 00 00 00 00 	movabs $0x60,%rdx
 804f182:	00 00 00 
 804f185:	48 01 d1             	add    %rdx,%rcx
 804f188:	48 89 ce             	mov    %rcx,%rsi
 804f18b:	48 89 c7             	mov    %rax,%rdi
 804f18e:	b8 00 00 00 00       	mov    $0x0,%eax
 804f193:	e8 2f d0 ff ff       	callq  804c1c7 <dynarray_reset>
 804f198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f19c:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 804f1a3:	00 00 00 
 804f1a6:	48 01 c8             	add    %rcx,%rax
 804f1a9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f1ad:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 804f1b4:	00 00 00 
 804f1b7:	48 01 d1             	add    %rdx,%rcx
 804f1ba:	48 89 ce             	mov    %rcx,%rsi
 804f1bd:	48 89 c7             	mov    %rax,%rdi
 804f1c0:	b8 00 00 00 00       	mov    $0x0,%eax
 804f1c5:	e8 fd cf ff ff       	callq  804c1c7 <dynarray_reset>
 804f1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f1ce:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804f1d5:	00 00 00 
 804f1d8:	48 01 c8             	add    %rcx,%rax
 804f1db:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f1df:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 804f1e6:	00 00 00 
 804f1e9:	48 01 d1             	add    %rdx,%rcx
 804f1ec:	48 89 ce             	mov    %rcx,%rsi
 804f1ef:	48 89 c7             	mov    %rax,%rdi
 804f1f2:	b8 00 00 00 00       	mov    $0x0,%eax
 804f1f7:	e8 cb cf ff ff       	callq  804c1c7 <dynarray_reset>
 804f1fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f200:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 804f207:	00 00 00 
 804f20a:	48 01 c8             	add    %rcx,%rax
 804f20d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f211:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 804f218:	00 00 00 
 804f21b:	48 01 d1             	add    %rdx,%rcx
 804f21e:	48 89 ce             	mov    %rcx,%rsi
 804f221:	48 89 c7             	mov    %rax,%rdi
 804f224:	b8 00 00 00 00       	mov    $0x0,%eax
 804f229:	e8 99 cf ff ff       	callq  804c1c7 <dynarray_reset>
 804f22e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f232:	48 b9 78 0c 00 00 00 	movabs $0xc78,%rcx
 804f239:	00 00 00 
 804f23c:	48 01 c8             	add    %rcx,%rax
 804f23f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f243:	48 ba 80 0c 00 00 00 	movabs $0xc80,%rdx
 804f24a:	00 00 00 
 804f24d:	48 01 d1             	add    %rdx,%rcx
 804f250:	48 89 ce             	mov    %rcx,%rsi
 804f253:	48 89 c7             	mov    %rax,%rdi
 804f256:	b8 00 00 00 00       	mov    $0x0,%eax
 804f25b:	e8 67 cf ff ff       	callq  804c1c7 <dynarray_reset>
 804f260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f264:	48 b9 50 01 00 00 00 	movabs $0x150,%rcx
 804f26b:	00 00 00 
 804f26e:	48 01 c8             	add    %rcx,%rax
 804f271:	48 8b 08             	mov    (%rax),%rcx
 804f274:	48 89 cf             	mov    %rcx,%rdi
 804f277:	b8 00 00 00 00       	mov    $0x0,%eax
 804f27c:	e8 b5 cc ff ff       	callq  804bf36 <tcc_free>
 804f281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f285:	48 b9 88 0c 00 00 00 	movabs $0xc88,%rcx
 804f28c:	00 00 00 
 804f28f:	48 01 c8             	add    %rcx,%rax
 804f292:	48 8b 08             	mov    (%rax),%rcx
 804f295:	48 89 cf             	mov    %rcx,%rdi
 804f298:	b8 00 00 00 00       	mov    $0x0,%eax
 804f29d:	e8 94 cc ff ff       	callq  804bf36 <tcc_free>
 804f2a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f2a6:	48 89 c7             	mov    %rax,%rdi
 804f2a9:	b8 00 00 00 00       	mov    $0x0,%eax
 804f2ae:	e8 83 cc ff ff       	callq  804bf36 <tcc_free>
 804f2b3:	c9                   	leaveq 
 804f2b4:	c3                   	retq   

000000000804f2b5 <tcc_add_include_path>:
 804f2b5:	55                   	push   %rbp
 804f2b6:	48 89 e5             	mov    %rsp,%rbp
 804f2b9:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804f2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804f2c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804f2c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f2cc:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 804f2d3:	00 00 00 
 804f2d6:	48 01 c8             	add    %rcx,%rax
 804f2d9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f2dd:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 804f2e4:	00 00 00 
 804f2e7:	48 01 d1             	add    %rdx,%rcx
 804f2ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 804f2ee:	49 89 d3             	mov    %rdx,%r11
 804f2f1:	49 89 ca             	mov    %rcx,%r10
 804f2f4:	48 89 c6             	mov    %rax,%rsi
 804f2f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f2fb:	48 89 c7             	mov    %rax,%rdi
 804f2fe:	4c 89 d2             	mov    %r10,%rdx
 804f301:	4c 89 d9             	mov    %r11,%rcx
 804f304:	b8 00 00 00 00       	mov    $0x0,%eax
 804f309:	e8 53 cf ff ff       	callq  804c261 <tcc_split_path>
 804f30e:	b8 00 00 00 00       	mov    $0x0,%eax
 804f313:	e9 00 00 00 00       	jmpq   804f318 <tcc_add_include_path+0x63>
 804f318:	c9                   	leaveq 
 804f319:	c3                   	retq   

000000000804f31a <tcc_add_sysinclude_path>:
 804f31a:	55                   	push   %rbp
 804f31b:	48 89 e5             	mov    %rsp,%rbp
 804f31e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804f325:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804f329:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804f32d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f331:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 804f338:	00 00 00 
 804f33b:	48 01 c8             	add    %rcx,%rax
 804f33e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f342:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 804f349:	00 00 00 
 804f34c:	48 01 d1             	add    %rdx,%rcx
 804f34f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 804f353:	49 89 d3             	mov    %rdx,%r11
 804f356:	49 89 ca             	mov    %rcx,%r10
 804f359:	48 89 c6             	mov    %rax,%rsi
 804f35c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f360:	48 89 c7             	mov    %rax,%rdi
 804f363:	4c 89 d2             	mov    %r10,%rdx
 804f366:	4c 89 d9             	mov    %r11,%rcx
 804f369:	b8 00 00 00 00       	mov    $0x0,%eax
 804f36e:	e8 ee ce ff ff       	callq  804c261 <tcc_split_path>
 804f373:	b8 00 00 00 00       	mov    $0x0,%eax
 804f378:	e9 00 00 00 00       	jmpq   804f37d <tcc_add_sysinclude_path+0x63>
 804f37d:	c9                   	leaveq 
 804f37e:	c3                   	retq   

000000000804f37f <tcc_add_file_internal>:
 804f37f:	55                   	push   %rbp
 804f380:	48 89 e5             	mov    %rsp,%rbp
 804f383:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
 804f38a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804f38e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804f392:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804f396:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f39a:	48 89 c7             	mov    %rax,%rdi
 804f39d:	b8 00 00 00 00       	mov    $0x0,%eax
 804f3a2:	e8 14 cb ff ff       	callq  804bebb <tcc_fileextension>
 804f3a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804f3ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f3af:	0f be 08             	movsbl (%rax),%ecx
 804f3b2:	85 c9                	test   %ecx,%ecx
 804f3b4:	0f 84 18 00 00 00    	je     804f3d2 <tcc_add_file_internal+0x53>
 804f3ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f3be:	48 89 c1             	mov    %rax,%rcx
 804f3c1:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 804f3c8:	00 00 00 
 804f3cb:	48 01 d0             	add    %rdx,%rax
 804f3ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804f3d2:	48 8d 05 5e a7 03 00 	lea    0x3a75e(%rip),%rax        # 8089b37 <L.164>
 804f3d9:	48 89 c6             	mov    %rax,%rsi
 804f3dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f3e0:	48 89 c7             	mov    %rax,%rdi
 804f3e3:	b8 00 00 00 00       	mov    $0x0,%eax
 804f3e8:	e8 f3 7d 03 00       	callq  80871e0 <strcmp>
 804f3ed:	85 c0                	test   %eax,%eax
 804f3ef:	0f 84 05 00 00 00    	je     804f3fa <tcc_add_file_internal+0x7b>
 804f3f5:	e9 26 00 00 00       	jmpq   804f420 <tcc_add_file_internal+0xa1>
 804f3fa:	b8 00 00 00 00       	mov    $0x0,%eax
 804f3ff:	49 89 c2             	mov    %rax,%r10
 804f402:	48 8d 05 30 a7 03 00 	lea    0x3a730(%rip),%rax        # 8089b39 <L.165>
 804f409:	48 89 c6             	mov    %rax,%rsi
 804f40c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f410:	48 89 c7             	mov    %rax,%rdi
 804f413:	4c 89 d2             	mov    %r10,%rdx
 804f416:	b8 00 00 00 00       	mov    $0x0,%eax
 804f41b:	e8 cd f0 ff ff       	callq  804e4ed <tcc_define_symbol>
 804f420:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f424:	48 89 c6             	mov    %rax,%rsi
 804f427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f42b:	48 89 c7             	mov    %rax,%rdi
 804f42e:	b8 00 00 00 00       	mov    $0x0,%eax
 804f433:	e8 01 e9 ff ff       	callq  804dd39 <tcc_open>
 804f438:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f43b:	8b 45 98             	mov    -0x68(%rbp),%eax
 804f43e:	83 f8 00             	cmp    $0x0,%eax
 804f441:	0f 8d 31 00 00 00    	jge    804f478 <tcc_add_file_internal+0xf9>
 804f447:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804f44a:	83 e0 01             	and    $0x1,%eax
 804f44d:	85 c0                	test   %eax,%eax
 804f44f:	0f 84 1b 00 00 00    	je     804f470 <tcc_add_file_internal+0xf1>
 804f455:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f459:	48 89 c6             	mov    %rax,%rsi
 804f45c:	48 8d 05 e4 a6 03 00 	lea    0x3a6e4(%rip),%rax        # 8089b47 <L.166>
 804f463:	48 89 c7             	mov    %rax,%rdi
 804f466:	b8 00 00 00 00       	mov    $0x0,%eax
 804f46b:	e8 7d e0 ff ff       	callq  804d4ed <tcc_error_noabort>
 804f470:	8b 45 98             	mov    -0x68(%rbp),%eax
 804f473:	e9 f3 03 00 00       	jmpq   804f86b <tcc_add_file_internal+0x4ec>
 804f478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f47c:	48 b9 78 0c 00 00 00 	movabs $0xc78,%rcx
 804f483:	00 00 00 
 804f486:	48 01 c8             	add    %rcx,%rax
 804f489:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f48d:	48 ba 80 0c 00 00 00 	movabs $0xc80,%rdx
 804f494:	00 00 00 
 804f497:	48 01 d1             	add    %rdx,%rcx
 804f49a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 804f49e:	48 89 d7             	mov    %rdx,%rdi
 804f4a1:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 804f4a5:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
 804f4a9:	b8 00 00 00 00       	mov    $0x0,%eax
 804f4ae:	e8 e9 cb ff ff       	callq  804c09c <tcc_strdup>
 804f4b3:	49 89 c2             	mov    %rax,%r10
 804f4b6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 804f4ba:	48 89 c6             	mov    %rax,%rsi
 804f4bd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 804f4c1:	48 89 c7             	mov    %rax,%rdi
 804f4c4:	4c 89 d2             	mov    %r10,%rdx
 804f4c7:	b8 00 00 00 00       	mov    $0x0,%eax
 804f4cc:	e8 32 cc ff ff       	callq  804c103 <dynarray_add>
 804f4d1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804f4d4:	83 e0 04             	and    $0x4,%eax
 804f4d7:	85 c0                	test   %eax,%eax
 804f4d9:	0f 84 19 00 00 00    	je     804f4f8 <tcc_add_file_internal+0x179>
 804f4df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f4e3:	48 89 c7             	mov    %rax,%rdi
 804f4e6:	b8 00 00 00 00       	mov    $0x0,%eax
 804f4eb:	e8 5f 97 00 00       	callq  8058c4f <tcc_preprocess>
 804f4f0:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f4f3:	e9 61 03 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f4f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f4fc:	0f be 08             	movsbl (%rax),%ecx
 804f4ff:	85 c9                	test   %ecx,%ecx
 804f501:	0f 84 28 00 00 00    	je     804f52f <tcc_add_file_internal+0x1b0>
 804f507:	48 8d 05 4d a6 03 00 	lea    0x3a64d(%rip),%rax        # 8089b5b <L.167>
 804f50e:	48 89 c6             	mov    %rax,%rsi
 804f511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f515:	48 89 c7             	mov    %rax,%rdi
 804f518:	b8 00 00 00 00       	mov    $0x0,%eax
 804f51d:	e8 be 7c 03 00       	callq  80871e0 <strcmp>
 804f522:	85 c0                	test   %eax,%eax
 804f524:	0f 84 05 00 00 00    	je     804f52f <tcc_add_file_internal+0x1b0>
 804f52a:	e9 19 00 00 00       	jmpq   804f548 <tcc_add_file_internal+0x1c9>
 804f52f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f533:	48 89 c7             	mov    %rax,%rdi
 804f536:	b8 00 00 00 00       	mov    $0x0,%eax
 804f53b:	e8 aa e9 ff ff       	callq  804deea <tcc_compile>
 804f540:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f543:	e9 11 03 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f548:	48 8d 05 0e a6 03 00 	lea    0x3a60e(%rip),%rax        # 8089b5d <L.168>
 804f54f:	48 89 c6             	mov    %rax,%rsi
 804f552:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f556:	48 89 c7             	mov    %rax,%rdi
 804f559:	b8 00 00 00 00       	mov    $0x0,%eax
 804f55e:	e8 7d 7c 03 00       	callq  80871e0 <strcmp>
 804f563:	85 c0                	test   %eax,%eax
 804f565:	0f 84 05 00 00 00    	je     804f570 <tcc_add_file_internal+0x1f1>
 804f56b:	e9 21 00 00 00       	jmpq   804f591 <tcc_add_file_internal+0x212>
 804f570:	b8 01 00 00 00       	mov    $0x1,%eax
 804f575:	48 89 c6             	mov    %rax,%rsi
 804f578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f57c:	48 89 c7             	mov    %rax,%rdi
 804f57f:	b8 00 00 00 00       	mov    $0x0,%eax
 804f584:	e8 a5 b7 02 00       	callq  807ad2e <tcc_assemble>
 804f589:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f58c:	e9 c8 02 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f591:	48 8d 05 c7 a5 03 00 	lea    0x3a5c7(%rip),%rax        # 8089b5f <L.169>
 804f598:	48 89 c6             	mov    %rax,%rsi
 804f59b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804f59f:	48 89 c7             	mov    %rax,%rdi
 804f5a2:	b8 00 00 00 00       	mov    $0x0,%eax
 804f5a7:	e8 34 7c 03 00       	callq  80871e0 <strcmp>
 804f5ac:	85 c0                	test   %eax,%eax
 804f5ae:	0f 84 05 00 00 00    	je     804f5b9 <tcc_add_file_internal+0x23a>
 804f5b4:	e9 21 00 00 00       	jmpq   804f5da <tcc_add_file_internal+0x25b>
 804f5b9:	b8 00 00 00 00       	mov    $0x0,%eax
 804f5be:	48 89 c6             	mov    %rax,%rsi
 804f5c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f5c5:	48 89 c7             	mov    %rax,%rdi
 804f5c8:	b8 00 00 00 00       	mov    $0x0,%eax
 804f5cd:	e8 5c b7 02 00       	callq  807ad2e <tcc_assemble>
 804f5d2:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f5d5:	e9 7f 02 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f5da:	48 8b 05 bf e8 03 00 	mov    0x3e8bf(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804f5e1:	48 8b 00             	mov    (%rax),%rax
 804f5e4:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 804f5eb:	00 00 00 
 804f5ee:	48 01 c8             	add    %rcx,%rax
 804f5f1:	8b 08                	mov    (%rax),%ecx
 804f5f3:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
 804f5f6:	b8 40 00 00 00       	mov    $0x40,%eax
 804f5fb:	49 89 c2             	mov    %rax,%r10
 804f5fe:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 804f602:	48 89 c6             	mov    %rax,%rsi
 804f605:	8b 45 9c             	mov    -0x64(%rbp),%eax
 804f608:	48 89 c7             	mov    %rax,%rdi
 804f60b:	4c 89 d2             	mov    %r10,%rdx
 804f60e:	b8 00 00 00 00       	mov    $0x0,%eax
 804f613:	e8 f8 85 03 00       	callq  8087c10 <__preinit_array_end+0x170>
 804f618:	89 45 94             	mov    %eax,-0x6c(%rbp)
 804f61b:	b8 00 00 00 00       	mov    $0x0,%eax
 804f620:	49 89 c2             	mov    %rax,%r10
 804f623:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804f62a:	00 00 00 
 804f62d:	48 89 c6             	mov    %rax,%rsi
 804f630:	8b 45 9c             	mov    -0x64(%rbp),%eax
 804f633:	48 89 c7             	mov    %rax,%rdi
 804f636:	4c 89 d2             	mov    %r10,%rdx
 804f639:	b8 00 00 00 00       	mov    $0x0,%eax
 804f63e:	e8 dd 85 03 00       	callq  8087c20 <__preinit_array_end+0x180>
 804f643:	8b 45 94             	mov    -0x6c(%rbp),%eax
 804f646:	83 f8 00             	cmp    $0x0,%eax
 804f649:	0f 8f 19 00 00 00    	jg     804f668 <tcc_add_file_internal+0x2e9>
 804f64f:	48 8d 05 0b a5 03 00 	lea    0x3a50b(%rip),%rax        # 8089b61 <L.170>
 804f656:	48 89 c7             	mov    %rax,%rdi
 804f659:	b8 00 00 00 00       	mov    $0x0,%eax
 804f65e:	e8 8a de ff ff       	callq  804d4ed <tcc_error_noabort>
 804f663:	e9 f1 01 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f668:	8b 45 94             	mov    -0x6c(%rbp),%eax
 804f66b:	83 f8 40             	cmp    $0x40,%eax
 804f66e:	0f 85 45 01 00 00    	jne    804f7b9 <tcc_add_file_internal+0x43a>
 804f674:	0f b6 45 a0          	movzbl -0x60(%rbp),%eax
 804f678:	83 f8 7f             	cmp    $0x7f,%eax
 804f67b:	0f 85 38 01 00 00    	jne    804f7b9 <tcc_add_file_internal+0x43a>
 804f681:	0f b6 45 a1          	movzbl -0x5f(%rbp),%eax
 804f685:	83 f8 45             	cmp    $0x45,%eax
 804f688:	0f 85 2b 01 00 00    	jne    804f7b9 <tcc_add_file_internal+0x43a>
 804f68e:	0f b6 45 a2          	movzbl -0x5e(%rbp),%eax
 804f692:	83 f8 4c             	cmp    $0x4c,%eax
 804f695:	0f 85 1e 01 00 00    	jne    804f7b9 <tcc_add_file_internal+0x43a>
 804f69b:	0f b6 45 a3          	movzbl -0x5d(%rbp),%eax
 804f69f:	83 f8 46             	cmp    $0x46,%eax
 804f6a2:	0f 85 11 01 00 00    	jne    804f7b9 <tcc_add_file_internal+0x43a>
 804f6a8:	48 8b 05 f1 e7 03 00 	mov    0x3e7f1(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804f6af:	48 8b 00             	mov    (%rax),%rax
 804f6b2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804f6b9:	00 00 00 
 804f6bc:	48 01 c8             	add    %rcx,%rax
 804f6bf:	b9 00 00 00 00       	mov    $0x0,%ecx
 804f6c4:	89 08                	mov    %ecx,(%rax)
 804f6c6:	0f b7 45 b0          	movzwl -0x50(%rbp),%eax
 804f6ca:	83 f8 01             	cmp    $0x1,%eax
 804f6cd:	0f 85 2f 00 00 00    	jne    804f702 <tcc_add_file_internal+0x383>
 804f6d3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804f6da:	00 00 00 
 804f6dd:	49 89 c2             	mov    %rax,%r10
 804f6e0:	8b 45 9c             	mov    -0x64(%rbp),%eax
 804f6e3:	48 89 c6             	mov    %rax,%rsi
 804f6e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f6ea:	48 89 c7             	mov    %rax,%rdi
 804f6ed:	4c 89 d2             	mov    %r10,%rdx
 804f6f0:	b8 00 00 00 00       	mov    $0x0,%eax
 804f6f5:	e8 b0 5e 02 00       	callq  80755aa <tcc_load_object_file>
 804f6fa:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f6fd:	e9 57 01 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f702:	0f b7 45 b0          	movzwl -0x50(%rbp),%eax
 804f706:	83 f8 03             	cmp    $0x3,%eax
 804f709:	0f 85 91 00 00 00    	jne    804f7a0 <tcc_add_file_internal+0x421>
 804f70f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f713:	8b 08                	mov    (%rax),%ecx
 804f715:	c1 e1 18             	shl    $0x18,%ecx
 804f718:	c1 e9 18             	shr    $0x18,%ecx
 804f71b:	83 f9 00             	cmp    $0x0,%ecx
 804f71e:	0f 85 3c 00 00 00    	jne    804f760 <tcc_add_file_internal+0x3e1>
 804f724:	b8 01 01 00 00       	mov    $0x101,%eax
 804f729:	48 89 c6             	mov    %rax,%rsi
 804f72c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f730:	48 89 c7             	mov    %rax,%rdi
 804f733:	b8 00 00 00 00       	mov    $0x0,%eax
 804f738:	e8 f3 84 03 00       	callq  8087c30 <__preinit_array_end+0x190>
 804f73d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 804f744:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 804f74b:	85 c0                	test   %eax,%eax
 804f74d:	0f 84 08 00 00 00    	je     804f75b <tcc_add_file_internal+0x3dc>
 804f753:	b8 00 00 00 00       	mov    $0x0,%eax
 804f758:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f75b:	e9 3b 00 00 00       	jmpq   804f79b <tcc_add_file_internal+0x41c>
 804f760:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804f763:	83 e0 02             	and    $0x2,%eax
 804f766:	83 f8 00             	cmp    $0x0,%eax
 804f769:	b8 00 00 00 00       	mov    $0x0,%eax
 804f76e:	0f 95 c0             	setne  %al
 804f771:	49 89 c3             	mov    %rax,%r11
 804f774:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f778:	49 89 c2             	mov    %rax,%r10
 804f77b:	8b 45 9c             	mov    -0x64(%rbp),%eax
 804f77e:	48 89 c6             	mov    %rax,%rsi
 804f781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f785:	48 89 c7             	mov    %rax,%rdi
 804f788:	4c 89 d2             	mov    %r10,%rdx
 804f78b:	4c 89 d9             	mov    %r11,%rcx
 804f78e:	b8 00 00 00 00       	mov    $0x0,%eax
 804f793:	e8 dc 78 02 00       	callq  8077074 <tcc_load_dll>
 804f798:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f79b:	e9 b9 00 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f7a0:	48 8d 05 d0 a3 03 00 	lea    0x3a3d0(%rip),%rax        # 8089b77 <L.171>
 804f7a7:	48 89 c7             	mov    %rax,%rdi
 804f7aa:	b8 00 00 00 00       	mov    $0x0,%eax
 804f7af:	e8 39 dd ff ff       	callq  804d4ed <tcc_error_noabort>
 804f7b4:	e9 a0 00 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f7b9:	b8 08 00 00 00       	mov    $0x8,%eax
 804f7be:	49 89 c2             	mov    %rax,%r10
 804f7c1:	48 8d 05 c5 a3 03 00 	lea    0x3a3c5(%rip),%rax        # 8089b8d <L.172>
 804f7c8:	48 89 c6             	mov    %rax,%rsi
 804f7cb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 804f7cf:	48 89 c7             	mov    %rax,%rdi
 804f7d2:	4c 89 d2             	mov    %r10,%rdx
 804f7d5:	b8 00 00 00 00       	mov    $0x0,%eax
 804f7da:	e8 11 74 03 00       	callq  8086bf0 <memcmp>
 804f7df:	83 f8 00             	cmp    $0x0,%eax
 804f7e2:	0f 85 3d 00 00 00    	jne    804f825 <tcc_add_file_internal+0x4a6>
 804f7e8:	48 8b 05 b1 e6 03 00 	mov    0x3e6b1(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 804f7ef:	48 8b 00             	mov    (%rax),%rax
 804f7f2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 804f7f9:	00 00 00 
 804f7fc:	48 01 c8             	add    %rcx,%rax
 804f7ff:	b9 00 00 00 00       	mov    $0x0,%ecx
 804f804:	89 08                	mov    %ecx,(%rax)
 804f806:	8b 45 9c             	mov    -0x64(%rbp),%eax
 804f809:	48 89 c6             	mov    %rax,%rsi
 804f80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f810:	48 89 c7             	mov    %rax,%rdi
 804f813:	b8 00 00 00 00       	mov    $0x0,%eax
 804f818:	e8 2f 75 02 00       	callq  8076d4c <tcc_load_archive>
 804f81d:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f820:	e9 34 00 00 00       	jmpq   804f859 <tcc_add_file_internal+0x4da>
 804f825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f829:	48 89 c7             	mov    %rax,%rdi
 804f82c:	b8 00 00 00 00       	mov    $0x0,%eax
 804f831:	e8 83 8c 02 00       	callq  80784b9 <tcc_load_ldscript>
 804f836:	89 45 98             	mov    %eax,-0x68(%rbp)
 804f839:	8b 45 98             	mov    -0x68(%rbp),%eax
 804f83c:	83 f8 00             	cmp    $0x0,%eax
 804f83f:	0f 8d 14 00 00 00    	jge    804f859 <tcc_add_file_internal+0x4da>
 804f845:	48 8d 05 4a a3 03 00 	lea    0x3a34a(%rip),%rax        # 8089b96 <L.173>
 804f84c:	48 89 c7             	mov    %rax,%rdi
 804f84f:	b8 00 00 00 00       	mov    $0x0,%eax
 804f854:	e8 94 dc ff ff       	callq  804d4ed <tcc_error_noabort>
 804f859:	b8 00 00 00 00       	mov    $0x0,%eax
 804f85e:	e8 27 e4 ff ff       	callq  804dc8a <tcc_close>
 804f863:	8b 45 98             	mov    -0x68(%rbp),%eax
 804f866:	e9 00 00 00 00       	jmpq   804f86b <tcc_add_file_internal+0x4ec>
 804f86b:	c9                   	leaveq 
 804f86c:	c3                   	retq   

000000000804f86d <tcc_add_file>:
 804f86d:	55                   	push   %rbp
 804f86e:	48 89 e5             	mov    %rsp,%rbp
 804f871:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804f878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804f87c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804f880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f884:	8b 08                	mov    (%rax),%ecx
 804f886:	c1 e1 18             	shl    $0x18,%ecx
 804f889:	c1 e9 18             	shr    $0x18,%ecx
 804f88c:	83 f9 04             	cmp    $0x4,%ecx
 804f88f:	0f 85 2d 00 00 00    	jne    804f8c2 <tcc_add_file+0x55>
 804f895:	b8 05 00 00 00       	mov    $0x5,%eax
 804f89a:	49 89 c2             	mov    %rax,%r10
 804f89d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f8a1:	48 89 c6             	mov    %rax,%rsi
 804f8a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f8a8:	48 89 c7             	mov    %rax,%rdi
 804f8ab:	4c 89 d2             	mov    %r10,%rdx
 804f8ae:	b8 00 00 00 00       	mov    $0x0,%eax
 804f8b3:	e8 c7 fa ff ff       	callq  804f37f <tcc_add_file_internal>
 804f8b8:	e9 2d 00 00 00       	jmpq   804f8ea <tcc_add_file+0x7d>
 804f8bd:	e9 28 00 00 00       	jmpq   804f8ea <tcc_add_file+0x7d>
 804f8c2:	b8 01 00 00 00       	mov    $0x1,%eax
 804f8c7:	49 89 c2             	mov    %rax,%r10
 804f8ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f8ce:	48 89 c6             	mov    %rax,%rsi
 804f8d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f8d5:	48 89 c7             	mov    %rax,%rdi
 804f8d8:	4c 89 d2             	mov    %r10,%rdx
 804f8db:	b8 00 00 00 00       	mov    $0x0,%eax
 804f8e0:	e8 9a fa ff ff       	callq  804f37f <tcc_add_file_internal>
 804f8e5:	e9 00 00 00 00       	jmpq   804f8ea <tcc_add_file+0x7d>
 804f8ea:	c9                   	leaveq 
 804f8eb:	c3                   	retq   

000000000804f8ec <tcc_add_library_path>:
 804f8ec:	55                   	push   %rbp
 804f8ed:	48 89 e5             	mov    %rsp,%rbp
 804f8f0:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804f8f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804f8fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804f8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f903:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 804f90a:	00 00 00 
 804f90d:	48 01 c8             	add    %rcx,%rax
 804f910:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804f914:	48 ba 50 00 00 00 00 	movabs $0x50,%rdx
 804f91b:	00 00 00 
 804f91e:	48 01 d1             	add    %rdx,%rcx
 804f921:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 804f925:	49 89 d3             	mov    %rdx,%r11
 804f928:	49 89 ca             	mov    %rcx,%r10
 804f92b:	48 89 c6             	mov    %rax,%rsi
 804f92e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804f932:	48 89 c7             	mov    %rax,%rdi
 804f935:	4c 89 d2             	mov    %r10,%rdx
 804f938:	4c 89 d9             	mov    %r11,%rcx
 804f93b:	b8 00 00 00 00       	mov    $0x0,%eax
 804f940:	e8 1c c9 ff ff       	callq  804c261 <tcc_split_path>
 804f945:	b8 00 00 00 00       	mov    $0x0,%eax
 804f94a:	e9 00 00 00 00       	jmpq   804f94f <tcc_add_library_path+0x63>
 804f94f:	c9                   	leaveq 
 804f950:	c3                   	retq   

000000000804f951 <tcc_add_library_internal>:
 804f951:	55                   	push   %rbp
 804f952:	48 89 e5             	mov    %rsp,%rbp
 804f955:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
 804f95c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804f960:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804f964:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804f968:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804f96c:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 804f970:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 804f974:	b8 00 00 00 00       	mov    $0x0,%eax
 804f979:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
 804f97f:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 804f985:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 804f988:	39 c8                	cmp    %ecx,%eax
 804f98a:	0f 8d a5 00 00 00    	jge    804fa35 <tcc_add_library_internal+0xe4>
 804f990:	e9 14 00 00 00       	jmpq   804f9a9 <tcc_add_library_internal+0x58>
 804f995:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 804f99b:	48 89 c1             	mov    %rax,%rcx
 804f99e:	83 c0 01             	add    $0x1,%eax
 804f9a1:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
 804f9a7:	eb d6                	jmp    804f97f <tcc_add_library_internal+0x2e>
 804f9a9:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 804f9af:	48 63 c0             	movslq %eax,%rax
 804f9b2:	48 89 c1             	mov    %rax,%rcx
 804f9b5:	48 c1 e1 03          	shl    $0x3,%rcx
 804f9b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 804f9bd:	48 89 ca             	mov    %rcx,%rdx
 804f9c0:	48 01 d0             	add    %rdx,%rax
 804f9c3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 804f9c7:	49 89 c8             	mov    %rcx,%r8
 804f9ca:	48 8b 08             	mov    (%rax),%rcx
 804f9cd:	49 89 cb             	mov    %rcx,%r11
 804f9d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804f9d4:	49 89 c2             	mov    %rax,%r10
 804f9d7:	b8 00 04 00 00       	mov    $0x400,%eax
 804f9dc:	48 89 c6             	mov    %rax,%rsi
 804f9df:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
 804f9e6:	48 89 c7             	mov    %rax,%rdi
 804f9e9:	4c 89 d2             	mov    %r10,%rdx
 804f9ec:	4c 89 d9             	mov    %r11,%rcx
 804f9ef:	b8 00 00 00 00       	mov    $0x0,%eax
 804f9f4:	e8 47 82 03 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 804f9f9:	8b 45 e0             	mov    -0x20(%rbp),%eax
 804f9fc:	49 89 c2             	mov    %rax,%r10
 804f9ff:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
 804fa06:	48 89 c6             	mov    %rax,%rsi
 804fa09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fa0d:	48 89 c7             	mov    %rax,%rdi
 804fa10:	4c 89 d2             	mov    %r10,%rdx
 804fa13:	b8 00 00 00 00       	mov    $0x0,%eax
 804fa18:	e8 62 f9 ff ff       	callq  804f37f <tcc_add_file_internal>
 804fa1d:	83 f8 00             	cmp    $0x0,%eax
 804fa20:	0f 85 0a 00 00 00    	jne    804fa30 <tcc_add_library_internal+0xdf>
 804fa26:	b8 00 00 00 00       	mov    $0x0,%eax
 804fa2b:	e9 0f 00 00 00       	jmpq   804fa3f <tcc_add_library_internal+0xee>
 804fa30:	e9 60 ff ff ff       	jmpq   804f995 <tcc_add_library_internal+0x44>
 804fa35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804fa3a:	e9 00 00 00 00       	jmpq   804fa3f <tcc_add_library_internal+0xee>
 804fa3f:	c9                   	leaveq 
 804fa40:	c3                   	retq   

000000000804fa41 <tcc_add_dll>:
 804fa41:	55                   	push   %rbp
 804fa42:	48 89 e5             	mov    %rsp,%rbp
 804fa45:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804fa4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804fa50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804fa54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804fa58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fa5c:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 804fa63:	00 00 00 
 804fa66:	48 01 c8             	add    %rcx,%rax
 804fa69:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804fa6d:	48 ba 50 00 00 00 00 	movabs $0x50,%rdx
 804fa74:	00 00 00 
 804fa77:	48 01 d1             	add    %rdx,%rcx
 804fa7a:	8b 11                	mov    (%rcx),%edx
 804fa7c:	49 89 d1             	mov    %rdx,%r9
 804fa7f:	48 8b 08             	mov    (%rax),%rcx
 804fa82:	49 89 c8             	mov    %rcx,%r8
 804fa85:	8b 45 e8             	mov    -0x18(%rbp),%eax
 804fa88:	49 89 c3             	mov    %rax,%r11
 804fa8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804fa8f:	49 89 c2             	mov    %rax,%r10
 804fa92:	48 8d 05 14 a1 03 00 	lea    0x3a114(%rip),%rax        # 8089bad <L.174>
 804fa99:	48 89 c6             	mov    %rax,%rsi
 804fa9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804faa0:	48 89 c7             	mov    %rax,%rdi
 804faa3:	4c 89 d2             	mov    %r10,%rdx
 804faa6:	4c 89 d9             	mov    %r11,%rcx
 804faa9:	b8 00 00 00 00       	mov    $0x0,%eax
 804faae:	e8 9e fe ff ff       	callq  804f951 <tcc_add_library_internal>
 804fab3:	e9 00 00 00 00       	jmpq   804fab8 <tcc_add_dll+0x77>
 804fab8:	c9                   	leaveq 
 804fab9:	c3                   	retq   

000000000804faba <tcc_add_crt>:
 804faba:	55                   	push   %rbp
 804fabb:	48 89 e5             	mov    %rsp,%rbp
 804fabe:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 804fac5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804fac9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804facd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fad1:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 804fad8:	00 00 00 
 804fadb:	48 01 c8             	add    %rcx,%rax
 804fade:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804fae2:	48 ba 60 00 00 00 00 	movabs $0x60,%rdx
 804fae9:	00 00 00 
 804faec:	48 01 d1             	add    %rdx,%rcx
 804faef:	8b 11                	mov    (%rcx),%edx
 804faf1:	49 89 d1             	mov    %rdx,%r9
 804faf4:	48 8b 08             	mov    (%rax),%rcx
 804faf7:	49 89 c8             	mov    %rcx,%r8
 804fafa:	b8 00 00 00 00       	mov    $0x0,%eax
 804faff:	49 89 c3             	mov    %rax,%r11
 804fb02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804fb06:	49 89 c2             	mov    %rax,%r10
 804fb09:	48 8d 05 a3 a0 03 00 	lea    0x3a0a3(%rip),%rax        # 8089bb3 <L.175>
 804fb10:	48 89 c6             	mov    %rax,%rsi
 804fb13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fb17:	48 89 c7             	mov    %rax,%rdi
 804fb1a:	4c 89 d2             	mov    %r10,%rdx
 804fb1d:	4c 89 d9             	mov    %r11,%rcx
 804fb20:	b8 00 00 00 00       	mov    $0x0,%eax
 804fb25:	e8 27 fe ff ff       	callq  804f951 <tcc_add_library_internal>
 804fb2a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804fb2f:	39 c1                	cmp    %eax,%ecx
 804fb31:	0f 85 1b 00 00 00    	jne    804fb52 <tcc_add_crt+0x98>
 804fb37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804fb3b:	48 89 c6             	mov    %rax,%rsi
 804fb3e:	48 8d 05 74 a0 03 00 	lea    0x3a074(%rip),%rax        # 8089bb9 <L.176>
 804fb45:	48 89 c7             	mov    %rax,%rdi
 804fb48:	b8 00 00 00 00       	mov    $0x0,%eax
 804fb4d:	e8 9b d9 ff ff       	callq  804d4ed <tcc_error_noabort>
 804fb52:	b8 00 00 00 00       	mov    $0x0,%eax
 804fb57:	e9 00 00 00 00       	jmpq   804fb5c <tcc_add_crt+0xa2>
 804fb5c:	c9                   	leaveq 
 804fb5d:	c3                   	retq   

000000000804fb5e <tcc_add_library>:
 804fb5e:	55                   	push   %rbp
 804fb5f:	48 89 e5             	mov    %rsp,%rbp
 804fb62:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 804fb69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804fb6d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804fb71:	48 8d 05 55 a0 03 00 	lea    0x3a055(%rip),%rax        # 8089bcd <L.177>
 804fb78:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 804fb7c:	48 8d 05 56 a0 03 00 	lea    0x3a056(%rip),%rax        # 8089bd9 <L.178>
 804fb83:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 804fb87:	b8 00 00 00 00       	mov    $0x0,%eax
 804fb8c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 804fb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fb94:	48 b9 e4 00 00 00 00 	movabs $0xe4,%rcx
 804fb9b:	00 00 00 
 804fb9e:	48 01 c8             	add    %rcx,%rax
 804fba1:	8b 08                	mov    (%rax),%ecx
 804fba3:	85 c9                	test   %ecx,%ecx
 804fba5:	0f 84 05 00 00 00    	je     804fbb0 <tcc_add_library+0x52>
 804fbab:	e9 09 00 00 00       	jmpq   804fbb9 <tcc_add_library+0x5b>
 804fbb0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 804fbb4:	e9 04 00 00 00       	jmpq   804fbbd <tcc_add_library+0x5f>
 804fbb9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 804fbbd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804fbc1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804fbc5:	48 8b 08             	mov    (%rax),%rcx
 804fbc8:	85 c9                	test   %ecx,%ecx
 804fbca:	0f 84 96 00 00 00    	je     804fc66 <tcc_add_library+0x108>
 804fbd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804fbd4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 804fbd8:	48 ba 48 00 00 00 00 	movabs $0x48,%rdx
 804fbdf:	00 00 00 
 804fbe2:	48 01 d1             	add    %rdx,%rcx
 804fbe5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 804fbe9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 804fbed:	48 b8 50 00 00 00 00 	movabs $0x50,%rax
 804fbf4:	00 00 00 
 804fbf7:	48 01 c2             	add    %rax,%rdx
 804fbfa:	8b 02                	mov    (%rdx),%eax
 804fbfc:	49 89 c1             	mov    %rax,%r9
 804fbff:	48 8b 01             	mov    (%rcx),%rax
 804fc02:	49 89 c0             	mov    %rax,%r8
 804fc05:	b8 00 00 00 00       	mov    $0x0,%eax
 804fc0a:	49 89 c3             	mov    %rax,%r11
 804fc0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 804fc11:	49 89 c2             	mov    %rax,%r10
 804fc14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 804fc18:	48 8b 00             	mov    (%rax),%rax
 804fc1b:	48 89 c6             	mov    %rax,%rsi
 804fc1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fc22:	48 89 c7             	mov    %rax,%rdi
 804fc25:	4c 89 d2             	mov    %r10,%rdx
 804fc28:	4c 89 d9             	mov    %r11,%rcx
 804fc2b:	b8 00 00 00 00       	mov    $0x0,%eax
 804fc30:	e8 1c fd ff ff       	callq  804f951 <tcc_add_library_internal>
 804fc35:	b9 00 00 00 00       	mov    $0x0,%ecx
 804fc3a:	39 c1                	cmp    %eax,%ecx
 804fc3c:	0f 85 0a 00 00 00    	jne    804fc4c <tcc_add_library+0xee>
 804fc42:	b8 00 00 00 00       	mov    $0x0,%eax
 804fc47:	e9 24 00 00 00       	jmpq   804fc70 <tcc_add_library+0x112>
 804fc4c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 804fc50:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 804fc57:	00 00 00 
 804fc5a:	48 01 c8             	add    %rcx,%rax
 804fc5d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 804fc61:	e9 5b ff ff ff       	jmpq   804fbc1 <tcc_add_library+0x63>
 804fc66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804fc6b:	e9 00 00 00 00       	jmpq   804fc70 <tcc_add_library+0x112>
 804fc70:	c9                   	leaveq 
 804fc71:	c3                   	retq   

000000000804fc72 <tcc_add_symbol>:
 804fc72:	55                   	push   %rbp
 804fc73:	48 89 e5             	mov    %rsp,%rbp
 804fc76:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804fc7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804fc81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804fc85:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804fc89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 804fc8d:	50                   	push   %rax
 804fc8e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 804fc92:	51                   	push   %rcx
 804fc93:	b9 f1 ff 00 00       	mov    $0xfff1,%ecx
 804fc98:	49 89 c9             	mov    %rcx,%r9
 804fc9b:	b9 00 00 00 00       	mov    $0x0,%ecx
 804fca0:	49 89 c8             	mov    %rcx,%r8
 804fca3:	b9 10 00 00 00       	mov    $0x10,%ecx
 804fca8:	49 89 cb             	mov    %rcx,%r11
 804fcab:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 804fcb2:	00 00 00 
 804fcb5:	49 89 ca             	mov    %rcx,%r10
 804fcb8:	48 89 c1             	mov    %rax,%rcx
 804fcbb:	48 89 ce             	mov    %rcx,%rsi
 804fcbe:	48 8b 05 d3 e1 03 00 	mov    0x3e1d3(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 804fcc5:	48 8b 00             	mov    (%rax),%rax
 804fcc8:	48 89 c7             	mov    %rax,%rdi
 804fccb:	4c 89 d2             	mov    %r10,%rdx
 804fcce:	4c 89 d9             	mov    %r11,%rcx
 804fcd1:	b8 00 00 00 00       	mov    $0x0,%eax
 804fcd6:	e8 43 e5 01 00       	callq  806e21e <add_elf_sym>
 804fcdb:	48 83 c4 10          	add    $0x10,%rsp
 804fcdf:	b8 00 00 00 00       	mov    $0x0,%eax
 804fce4:	e9 00 00 00 00       	jmpq   804fce9 <tcc_add_symbol+0x77>
 804fce9:	c9                   	leaveq 
 804fcea:	c3                   	retq   

000000000804fceb <tcc_set_output_type>:
 804fceb:	55                   	push   %rbp
 804fcec:	48 89 e5             	mov    %rsp,%rbp
 804fcef:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 804fcf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804fcfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804fcfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fd02:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 804fd05:	48 89 ca             	mov    %rcx,%rdx
 804fd08:	81 e2 ff 00 00 00    	and    $0xff,%edx
 804fd0e:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 804fd12:	8b 08                	mov    (%rax),%ecx
 804fd14:	81 e1 00 ff ff ff    	and    $0xffffff00,%ecx
 804fd1a:	48 09 ca             	or     %rcx,%rdx
 804fd1d:	89 10                	mov    %edx,(%rax)
 804fd1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fd23:	48 b9 d8 00 00 00 00 	movabs $0xd8,%rcx
 804fd2a:	00 00 00 
 804fd2d:	48 01 c8             	add    %rcx,%rax
 804fd30:	8b 08                	mov    (%rax),%ecx
 804fd32:	85 c9                	test   %ecx,%ecx
 804fd34:	0f 84 05 00 00 00    	je     804fd3f <tcc_set_output_type+0x54>
 804fd3a:	e9 1b 00 00 00       	jmpq   804fd5a <tcc_set_output_type+0x6f>
 804fd3f:	48 8d 05 9e 9e 03 00 	lea    0x39e9e(%rip),%rax        # 8089be4 <L.179>
 804fd46:	48 89 c6             	mov    %rax,%rsi
 804fd49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fd4d:	48 89 c7             	mov    %rax,%rdi
 804fd50:	b8 00 00 00 00       	mov    $0x0,%eax
 804fd55:	e8 c0 f5 ff ff       	callq  804f31a <tcc_add_sysinclude_path>
 804fd5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fd5e:	48 b9 2c 01 00 00 00 	movabs $0x12c,%rcx
 804fd65:	00 00 00 
 804fd68:	48 01 c8             	add    %rcx,%rax
 804fd6b:	8b 08                	mov    (%rax),%ecx
 804fd6d:	85 c9                	test   %ecx,%ecx
 804fd6f:	0f 84 26 00 00 00    	je     804fd9b <tcc_set_output_type+0xb0>
 804fd75:	b8 00 00 00 00       	mov    $0x0,%eax
 804fd7a:	49 89 c2             	mov    %rax,%r10
 804fd7d:	48 8d 05 8c 9e 03 00 	lea    0x39e8c(%rip),%rax        # 8089c10 <L.180>
 804fd84:	48 89 c6             	mov    %rax,%rsi
 804fd87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fd8b:	48 89 c7             	mov    %rax,%rdi
 804fd8e:	4c 89 d2             	mov    %r10,%rdx
 804fd91:	b8 00 00 00 00       	mov    $0x0,%eax
 804fd96:	e8 52 e7 ff ff       	callq  804e4ed <tcc_define_symbol>
 804fd9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fd9f:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 804fda6:	00 00 00 
 804fda9:	48 01 c8             	add    %rcx,%rax
 804fdac:	8b 08                	mov    (%rax),%ecx
 804fdae:	85 c9                	test   %ecx,%ecx
 804fdb0:	0f 84 18 01 00 00    	je     804fece <tcc_set_output_type+0x1e3>
 804fdb6:	b8 00 00 00 00       	mov    $0x0,%eax
 804fdbb:	49 89 c3             	mov    %rax,%r11
 804fdbe:	b8 01 00 00 00       	mov    $0x1,%eax
 804fdc3:	49 89 c2             	mov    %rax,%r10
 804fdc6:	48 8d 05 55 9e 03 00 	lea    0x39e55(%rip),%rax        # 8089c22 <L.181>
 804fdcd:	48 89 c6             	mov    %rax,%rsi
 804fdd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fdd4:	48 89 c7             	mov    %rax,%rdi
 804fdd7:	4c 89 d2             	mov    %r10,%rdx
 804fdda:	4c 89 d9             	mov    %r11,%rcx
 804fddd:	b8 00 00 00 00       	mov    $0x0,%eax
 804fde2:	e8 11 c7 ff ff       	callq  804c4f8 <new_section>
 804fde7:	4c 8b 1d a2 e1 03 00 	mov    0x3e1a2(%rip),%r11        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 804fdee:	49 89 03             	mov    %rax,(%r11)
 804fdf1:	48 8b 05 98 e1 03 00 	mov    0x3e198(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 804fdf8:	48 8b 00             	mov    (%rax),%rax
 804fdfb:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 804fe02:	00 00 00 
 804fe05:	48 01 c8             	add    %rcx,%rax
 804fe08:	b9 0c 00 00 00       	mov    $0xc,%ecx
 804fe0d:	89 08                	mov    %ecx,(%rax)
 804fe0f:	b8 00 00 00 00       	mov    $0x0,%eax
 804fe14:	49 89 c3             	mov    %rax,%r11
 804fe17:	b8 03 00 00 00       	mov    $0x3,%eax
 804fe1c:	49 89 c2             	mov    %rax,%r10
 804fe1f:	48 8d 05 02 9e 03 00 	lea    0x39e02(%rip),%rax        # 8089c28 <L.182>
 804fe26:	48 89 c6             	mov    %rax,%rsi
 804fe29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804fe2d:	48 89 c7             	mov    %rax,%rdi
 804fe30:	4c 89 d2             	mov    %r10,%rdx
 804fe33:	4c 89 d9             	mov    %r11,%rcx
 804fe36:	b8 00 00 00 00       	mov    $0x0,%eax
 804fe3b:	e8 b8 c6 ff ff       	callq  804c4f8 <new_section>
 804fe40:	4c 8b 1d 51 e1 03 00 	mov    0x3e151(%rip),%r11        # 808df98 <_GLOBAL_OFFSET_TABLE_+0x318>
 804fe47:	49 89 03             	mov    %rax,(%r11)
 804fe4a:	48 8d 05 e0 9d 03 00 	lea    0x39de0(%rip),%rax        # 8089c31 <L.183>
 804fe51:	48 89 c6             	mov    %rax,%rsi
 804fe54:	48 8b 05 3d e1 03 00 	mov    0x3e13d(%rip),%rax        # 808df98 <_GLOBAL_OFFSET_TABLE_+0x318>
 804fe5b:	48 8b 00             	mov    (%rax),%rax
 804fe5e:	48 89 c7             	mov    %rax,%rdi
 804fe61:	b8 00 00 00 00       	mov    $0x0,%eax
 804fe66:	e8 f8 d9 01 00       	callq  806d863 <put_elf_str>
 804fe6b:	48 8b 05 1e e1 03 00 	mov    0x3e11e(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 804fe72:	48 8b 00             	mov    (%rax),%rax
 804fe75:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 804fe7c:	00 00 00 
 804fe7f:	48 01 c8             	add    %rcx,%rax
 804fe82:	48 8b 0d 0f e1 03 00 	mov    0x3e10f(%rip),%rcx        # 808df98 <_GLOBAL_OFFSET_TABLE_+0x318>
 804fe89:	48 8b 09             	mov    (%rcx),%rcx
 804fe8c:	48 89 08             	mov    %rcx,(%rax)
 804fe8f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 804fe96:	00 00 00 
 804fe99:	49 89 c0             	mov    %rax,%r8
 804fe9c:	b8 00 00 00 00       	mov    $0x0,%eax
 804fea1:	49 89 c3             	mov    %rax,%r11
 804fea4:	b8 00 00 00 00       	mov    $0x0,%eax
 804fea9:	49 89 c2             	mov    %rax,%r10
 804feac:	b8 00 00 00 00       	mov    $0x0,%eax
 804feb1:	48 89 c6             	mov    %rax,%rsi
 804feb4:	48 8d 05 77 9d 03 00 	lea    0x39d77(%rip),%rax        # 8089c32 <L.184>
 804febb:	48 89 c7             	mov    %rax,%rdi
 804febe:	4c 89 d2             	mov    %r10,%rdx
 804fec1:	4c 89 d9             	mov    %r11,%rcx
 804fec4:	b8 00 00 00 00       	mov    $0x0,%eax
 804fec9:	e8 63 e9 01 00       	callq  806e831 <put_stabs>
 804fece:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804fed1:	83 f8 01             	cmp    $0x1,%eax
 804fed4:	0f 84 11 00 00 00    	je     804feeb <tcc_set_output_type+0x200>
 804feda:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804fedd:	83 f8 02             	cmp    $0x2,%eax
 804fee0:	0f 84 05 00 00 00    	je     804feeb <tcc_set_output_type+0x200>
 804fee6:	e9 62 00 00 00       	jmpq   804ff4d <tcc_set_output_type+0x262>
 804feeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804feef:	48 b9 dc 00 00 00 00 	movabs $0xdc,%rcx
 804fef6:	00 00 00 
 804fef9:	48 01 c8             	add    %rcx,%rax
 804fefc:	8b 08                	mov    (%rax),%ecx
 804fefe:	85 c9                	test   %ecx,%ecx
 804ff00:	0f 84 05 00 00 00    	je     804ff0b <tcc_set_output_type+0x220>
 804ff06:	e9 42 00 00 00       	jmpq   804ff4d <tcc_set_output_type+0x262>
 804ff0b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 804ff0e:	83 f8 02             	cmp    $0x2,%eax
 804ff11:	0f 84 1b 00 00 00    	je     804ff32 <tcc_set_output_type+0x247>
 804ff17:	48 8d 05 15 9d 03 00 	lea    0x39d15(%rip),%rax        # 8089c33 <L.185>
 804ff1e:	48 89 c6             	mov    %rax,%rsi
 804ff21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ff25:	48 89 c7             	mov    %rax,%rdi
 804ff28:	b8 00 00 00 00       	mov    $0x0,%eax
 804ff2d:	e8 88 fb ff ff       	callq  804faba <tcc_add_crt>
 804ff32:	48 8d 05 01 9d 03 00 	lea    0x39d01(%rip),%rax        # 8089c3a <L.186>
 804ff39:	48 89 c6             	mov    %rax,%rsi
 804ff3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 804ff40:	48 89 c7             	mov    %rax,%rdi
 804ff43:	b8 00 00 00 00       	mov    $0x0,%eax
 804ff48:	e8 6d fb ff ff       	callq  804faba <tcc_add_crt>
 804ff4d:	b8 00 00 00 00       	mov    $0x0,%eax
 804ff52:	e9 00 00 00 00       	jmpq   804ff57 <tcc_set_output_type+0x26c>
 804ff57:	c9                   	leaveq 
 804ff58:	c3                   	retq   

000000000804ff59 <set_flag>:
 804ff59:	55                   	push   %rbp
 804ff5a:	48 89 e5             	mov    %rsp,%rbp
 804ff5d:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 804ff64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 804ff68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 804ff6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 804ff70:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 804ff74:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 804ff78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 804ff7c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804ff80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804ff84:	0f be 08             	movsbl (%rax),%ecx
 804ff87:	83 f9 6e             	cmp    $0x6e,%ecx
 804ff8a:	0f 85 69 00 00 00    	jne    804fff9 <set_flag+0xa0>
 804ff90:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804ff94:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 804ff9b:	00 00 00 
 804ff9e:	48 01 c8             	add    %rcx,%rax
 804ffa1:	0f be 08             	movsbl (%rax),%ecx
 804ffa4:	83 f9 6f             	cmp    $0x6f,%ecx
 804ffa7:	0f 85 4c 00 00 00    	jne    804fff9 <set_flag+0xa0>
 804ffad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804ffb1:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 804ffb8:	00 00 00 
 804ffbb:	48 01 c8             	add    %rcx,%rax
 804ffbe:	0f be 08             	movsbl (%rax),%ecx
 804ffc1:	83 f9 2d             	cmp    $0x2d,%ecx
 804ffc4:	0f 85 2f 00 00 00    	jne    804fff9 <set_flag+0xa0>
 804ffca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 804ffce:	48 b9 03 00 00 00 00 	movabs $0x3,%rcx
 804ffd5:	00 00 00 
 804ffd8:	48 01 c8             	add    %rcx,%rax
 804ffdb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 804ffdf:	8b 45 d8             	mov    -0x28(%rbp),%eax
 804ffe2:	85 c0                	test   %eax,%eax
 804ffe4:	0f 84 07 00 00 00    	je     804fff1 <set_flag+0x98>
 804ffea:	b8 00 00 00 00       	mov    $0x0,%eax
 804ffef:	eb 05                	jmp    804fff6 <set_flag+0x9d>
 804fff1:	b8 01 00 00 00       	mov    $0x1,%eax
 804fff6:	89 45 d8             	mov    %eax,-0x28(%rbp)
 804fff9:	b8 00 00 00 00       	mov    $0x0,%eax
 804fffe:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8050001:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050005:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8050009:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 805000c:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805000f:	39 c8                	cmp    %ecx,%eax
 8050011:	0f 8d 67 00 00 00    	jge    805007e <set_flag+0x125>
 8050017:	e9 26 00 00 00       	jmpq   8050042 <set_flag+0xe9>
 805001c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 805001f:	48 89 c1             	mov    %rax,%rcx
 8050022:	83 c0 01             	add    $0x1,%eax
 8050025:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8050028:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805002c:	48 89 c1             	mov    %rax,%rcx
 805002f:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8050036:	00 00 00 
 8050039:	48 01 d0             	add    %rdx,%rax
 805003c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8050040:	eb c7                	jmp    8050009 <set_flag+0xb0>
 8050042:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8050046:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805004d:	00 00 00 
 8050050:	48 01 c8             	add    %rcx,%rax
 8050053:	48 8b 08             	mov    (%rax),%rcx
 8050056:	48 89 ce             	mov    %rcx,%rsi
 8050059:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805005d:	48 89 c7             	mov    %rax,%rdi
 8050060:	b8 00 00 00 00       	mov    $0x0,%eax
 8050065:	e8 76 71 03 00       	callq  80871e0 <strcmp>
 805006a:	85 c0                	test   %eax,%eax
 805006c:	0f 84 05 00 00 00    	je     8050077 <set_flag+0x11e>
 8050072:	e9 05 00 00 00       	jmpq   805007c <set_flag+0x123>
 8050077:	e9 0c 00 00 00       	jmpq   8050088 <set_flag+0x12f>
 805007c:	eb 9e                	jmp    805001c <set_flag+0xc3>
 805007e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8050083:	e9 5c 00 00 00       	jmpq   80500e4 <set_flag+0x18b>
 8050088:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805008c:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 8050093:	00 00 00 
 8050096:	48 01 c8             	add    %rcx,%rax
 8050099:	0f b7 08             	movzwl (%rax),%ecx
 805009c:	83 e1 02             	and    $0x2,%ecx
 805009f:	85 c9                	test   %ecx,%ecx
 80500a1:	0f 84 1a 00 00 00    	je     80500c1 <set_flag+0x168>
 80500a7:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80500aa:	85 c0                	test   %eax,%eax
 80500ac:	0f 84 07 00 00 00    	je     80500b9 <set_flag+0x160>
 80500b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80500b7:	eb 05                	jmp    80500be <set_flag+0x165>
 80500b9:	b8 01 00 00 00       	mov    $0x1,%eax
 80500be:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80500c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80500c5:	0f b7 08             	movzwl (%rax),%ecx
 80500c8:	48 63 c9             	movslq %ecx,%rcx
 80500cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80500cf:	48 89 ca             	mov    %rcx,%rdx
 80500d2:	48 01 d0             	add    %rdx,%rax
 80500d5:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 80500d8:	89 08                	mov    %ecx,(%rax)
 80500da:	b8 00 00 00 00       	mov    $0x0,%eax
 80500df:	e9 00 00 00 00       	jmpq   80500e4 <set_flag+0x18b>
 80500e4:	c9                   	leaveq 
 80500e5:	c3                   	retq   

00000000080500e6 <tcc_enable_debug>:
 80500e6:	55                   	push   %rbp
 80500e7:	48 89 e5             	mov    %rsp,%rbp
 80500ea:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80500f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80500f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80500f9:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 8050100:	00 00 00 
 8050103:	48 01 c8             	add    %rcx,%rax
 8050106:	b9 01 00 00 00       	mov    $0x1,%ecx
 805010b:	89 08                	mov    %ecx,(%rax)
 805010d:	c9                   	leaveq 
 805010e:	c3                   	retq   

000000000805010f <tcc_set_warning>:
 805010f:	55                   	push   %rbp
 8050110:	48 89 e5             	mov    %rsp,%rbp
 8050113:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805011a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805011e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050122:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8050126:	48 8d 05 99 9b 03 00 	lea    0x39b99(%rip),%rax        # 8089cc6 <L.191>
 805012d:	48 89 c6             	mov    %rax,%rsi
 8050130:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050134:	48 89 c7             	mov    %rax,%rdi
 8050137:	b8 00 00 00 00       	mov    $0x0,%eax
 805013c:	e8 9f 70 03 00       	callq  80871e0 <strcmp>
 8050141:	85 c0                	test   %eax,%eax
 8050143:	0f 84 05 00 00 00    	je     805014e <tcc_set_warning+0x3f>
 8050149:	e9 95 00 00 00       	jmpq   80501e3 <tcc_set_warning+0xd4>
 805014e:	b8 00 00 00 00       	mov    $0x0,%eax
 8050153:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8050156:	48 8d 05 eb 9a 03 00 	lea    0x39aeb(%rip),%rax        # 8089c48 <warning_defs>
 805015d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8050161:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8050164:	83 f8 04             	cmp    $0x4,%eax
 8050167:	0f 83 67 00 00 00    	jae    80501d4 <tcc_set_warning+0xc5>
 805016d:	e9 26 00 00 00       	jmpq   8050198 <tcc_set_warning+0x89>
 8050172:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8050175:	48 89 c1             	mov    %rax,%rcx
 8050178:	83 c0 01             	add    $0x1,%eax
 805017b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805017e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8050182:	48 89 c1             	mov    %rax,%rcx
 8050185:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 805018c:	00 00 00 
 805018f:	48 01 d0             	add    %rdx,%rax
 8050192:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8050196:	eb c9                	jmp    8050161 <tcc_set_warning+0x52>
 8050198:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805019c:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 80501a3:	00 00 00 
 80501a6:	48 01 c8             	add    %rcx,%rax
 80501a9:	0f b7 08             	movzwl (%rax),%ecx
 80501ac:	83 e1 01             	and    $0x1,%ecx
 80501af:	85 c9                	test   %ecx,%ecx
 80501b1:	0f 84 1b 00 00 00    	je     80501d2 <tcc_set_warning+0xc3>
 80501b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80501bb:	0f b7 08             	movzwl (%rax),%ecx
 80501be:	48 63 c9             	movslq %ecx,%rcx
 80501c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80501c5:	48 89 ca             	mov    %rcx,%rdx
 80501c8:	48 01 d0             	add    %rdx,%rax
 80501cb:	b9 01 00 00 00       	mov    $0x1,%ecx
 80501d0:	89 08                	mov    %ecx,(%rax)
 80501d2:	eb 9e                	jmp    8050172 <tcc_set_warning+0x63>
 80501d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80501d9:	e9 40 00 00 00       	jmpq   805021e <tcc_set_warning+0x10f>
 80501de:	e9 3b 00 00 00       	jmpq   805021e <tcc_set_warning+0x10f>
 80501e3:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80501e6:	49 89 c0             	mov    %rax,%r8
 80501e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80501ed:	49 89 c3             	mov    %rax,%r11
 80501f0:	b8 04 00 00 00       	mov    $0x4,%eax
 80501f5:	49 89 c2             	mov    %rax,%r10
 80501f8:	48 8d 05 49 9a 03 00 	lea    0x39a49(%rip),%rax        # 8089c48 <warning_defs>
 80501ff:	48 89 c6             	mov    %rax,%rsi
 8050202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050206:	48 89 c7             	mov    %rax,%rdi
 8050209:	4c 89 d2             	mov    %r10,%rdx
 805020c:	4c 89 d9             	mov    %r11,%rcx
 805020f:	b8 00 00 00 00       	mov    $0x0,%eax
 8050214:	e8 40 fd ff ff       	callq  804ff59 <set_flag>
 8050219:	e9 00 00 00 00       	jmpq   805021e <tcc_set_warning+0x10f>
 805021e:	c9                   	leaveq 
 805021f:	c3                   	retq   

0000000008050220 <tcc_set_flag>:
 8050220:	55                   	push   %rbp
 8050221:	48 89 e5             	mov    %rsp,%rbp
 8050224:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805022b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805022f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050233:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8050237:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805023a:	49 89 c0             	mov    %rax,%r8
 805023d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050241:	49 89 c3             	mov    %rax,%r11
 8050244:	b8 04 00 00 00       	mov    $0x4,%eax
 8050249:	49 89 c2             	mov    %rax,%r10
 805024c:	48 8d 05 7d 9a 03 00 	lea    0x39a7d(%rip),%rax        # 8089cd0 <flag_defs>
 8050253:	48 89 c6             	mov    %rax,%rsi
 8050256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805025a:	48 89 c7             	mov    %rax,%rdi
 805025d:	4c 89 d2             	mov    %r10,%rdx
 8050260:	4c 89 d9             	mov    %r11,%rcx
 8050263:	b8 00 00 00 00       	mov    $0x0,%eax
 8050268:	e8 ec fc ff ff       	callq  804ff59 <set_flag>
 805026d:	e9 00 00 00 00       	jmpq   8050272 <tcc_set_flag+0x52>
 8050272:	c9                   	leaveq 
 8050273:	c3                   	retq   

0000000008050274 <strstart>:
 8050274:	55                   	push   %rbp
 8050275:	48 89 e5             	mov    %rsp,%rbp
 8050278:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805027f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050283:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050287:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805028b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805028f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8050293:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050297:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805029b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805029f:	0f be 08             	movsbl (%rax),%ecx
 80502a2:	83 f9 00             	cmp    $0x0,%ecx
 80502a5:	0f 84 52 00 00 00    	je     80502fd <strstart+0x89>
 80502ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80502af:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80502b3:	0f be 10             	movsbl (%rax),%edx
 80502b6:	0f be 01             	movsbl (%rcx),%eax
 80502b9:	39 c2                	cmp    %eax,%edx
 80502bb:	0f 84 0a 00 00 00    	je     80502cb <strstart+0x57>
 80502c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80502c6:	e9 53 00 00 00       	jmpq   805031e <strstart+0xaa>
 80502cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80502cf:	48 89 c1             	mov    %rax,%rcx
 80502d2:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80502d9:	00 00 00 
 80502dc:	48 01 d0             	add    %rdx,%rax
 80502df:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80502e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80502e7:	48 89 c1             	mov    %rax,%rcx
 80502ea:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80502f1:	00 00 00 
 80502f4:	48 01 d0             	add    %rdx,%rax
 80502f7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80502fb:	eb 9e                	jmp    805029b <strstart+0x27>
 80502fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8050301:	85 c0                	test   %eax,%eax
 8050303:	0f 84 0b 00 00 00    	je     8050314 <strstart+0xa0>
 8050309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805030d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8050311:	48 89 08             	mov    %rcx,(%rax)
 8050314:	b8 01 00 00 00       	mov    $0x1,%eax
 8050319:	e9 00 00 00 00       	jmpq   805031e <strstart+0xaa>
 805031e:	c9                   	leaveq 
 805031f:	c3                   	retq   

0000000008050320 <link_option>:
 8050320:	55                   	push   %rbp
 8050321:	48 89 e5             	mov    %rsp,%rbp
 8050324:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805032b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805032f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050333:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8050337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805033b:	48 89 c1             	mov    %rax,%rcx
 805033e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8050345:	00 00 00 
 8050348:	48 01 d0             	add    %rdx,%rax
 805034b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805034f:	0f be 01             	movsbl (%rcx),%eax
 8050352:	83 f8 2d             	cmp    $0x2d,%eax
 8050355:	0f 84 0a 00 00 00    	je     8050365 <link_option+0x45>
 805035b:	b8 00 00 00 00       	mov    $0x0,%eax
 8050360:	e9 35 01 00 00       	jmpq   805049a <link_option+0x17a>
 8050365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050369:	0f be 08             	movsbl (%rax),%ecx
 805036c:	83 f9 2d             	cmp    $0x2d,%ecx
 805036f:	0f 85 18 00 00 00    	jne    805038d <link_option+0x6d>
 8050375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050379:	48 89 c1             	mov    %rax,%rcx
 805037c:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8050383:	00 00 00 
 8050386:	48 01 d0             	add    %rdx,%rax
 8050389:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805038d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050391:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8050395:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050399:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805039d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80503a1:	0f be 08             	movsbl (%rax),%ecx
 80503a4:	83 f9 00             	cmp    $0x0,%ecx
 80503a7:	0f 84 62 00 00 00    	je     805040f <link_option+0xef>
 80503ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80503b1:	0f be 08             	movsbl (%rax),%ecx
 80503b4:	83 f9 3d             	cmp    $0x3d,%ecx
 80503b7:	0f 84 52 00 00 00    	je     805040f <link_option+0xef>
 80503bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80503c1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80503c5:	0f be 10             	movsbl (%rax),%edx
 80503c8:	0f be 01             	movsbl (%rcx),%eax
 80503cb:	39 c2                	cmp    %eax,%edx
 80503cd:	0f 84 0a 00 00 00    	je     80503dd <link_option+0xbd>
 80503d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80503d8:	e9 bd 00 00 00       	jmpq   805049a <link_option+0x17a>
 80503dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80503e1:	48 89 c1             	mov    %rax,%rcx
 80503e4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80503eb:	00 00 00 
 80503ee:	48 01 d0             	add    %rdx,%rax
 80503f1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80503f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80503f9:	48 89 c1             	mov    %rax,%rcx
 80503fc:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8050403:	00 00 00 
 8050406:	48 01 d0             	add    %rdx,%rax
 8050409:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805040d:	eb 8e                	jmp    805039d <link_option+0x7d>
 805040f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8050413:	0f be 08             	movsbl (%rax),%ecx
 8050416:	83 f9 3d             	cmp    $0x3d,%ecx
 8050419:	0f 85 5a 00 00 00    	jne    8050479 <link_option+0x159>
 805041f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050423:	0f be 08             	movsbl (%rax),%ecx
 8050426:	83 f9 2c             	cmp    $0x2c,%ecx
 8050429:	0f 84 1a 00 00 00    	je     8050449 <link_option+0x129>
 805042f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050433:	0f be 08             	movsbl (%rax),%ecx
 8050436:	83 f9 3d             	cmp    $0x3d,%ecx
 8050439:	0f 84 0a 00 00 00    	je     8050449 <link_option+0x129>
 805043f:	b8 00 00 00 00       	mov    $0x0,%eax
 8050444:	e9 51 00 00 00       	jmpq   805049a <link_option+0x17a>
 8050449:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805044d:	48 89 c1             	mov    %rax,%rcx
 8050450:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8050457:	00 00 00 
 805045a:	48 01 d0             	add    %rdx,%rax
 805045d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8050461:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8050465:	48 89 c1             	mov    %rax,%rcx
 8050468:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805046f:	00 00 00 
 8050472:	48 01 d0             	add    %rdx,%rax
 8050475:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8050479:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805047d:	85 c0                	test   %eax,%eax
 805047f:	0f 84 0b 00 00 00    	je     8050490 <link_option+0x170>
 8050485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8050489:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805048d:	48 89 08             	mov    %rcx,(%rax)
 8050490:	b8 01 00 00 00       	mov    $0x1,%eax
 8050495:	e9 00 00 00 00       	jmpq   805049a <link_option+0x17a>
 805049a:	c9                   	leaveq 
 805049b:	c3                   	retq   

000000000805049c <tcc_set_linker>:
 805049c:	55                   	push   %rbp
 805049d:	48 89 e5             	mov    %rsp,%rbp
 80504a0:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 80504a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80504ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80504af:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80504b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80504b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80504bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80504bf:	85 c0                	test   %eax,%eax
 80504c1:	0f 84 61 05 00 00    	je     8050a28 <tcc_set_linker+0x58c>
 80504c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80504cb:	0f be 08             	movsbl (%rax),%ecx
 80504ce:	85 c9                	test   %ecx,%ecx
 80504d0:	0f 84 52 05 00 00    	je     8050a28 <tcc_set_linker+0x58c>
 80504d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80504db:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80504df:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80504e3:	49 89 c2             	mov    %rax,%r10
 80504e6:	48 8d 05 57 98 03 00 	lea    0x39857(%rip),%rax        # 8089d44 <L.196>
 80504ed:	48 89 c6             	mov    %rax,%rsi
 80504f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80504f4:	48 89 c7             	mov    %rax,%rdi
 80504f7:	4c 89 d2             	mov    %r10,%rdx
 80504fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80504ff:	e8 1c fe ff ff       	callq  8050320 <link_option>
 8050504:	85 c0                	test   %eax,%eax
 8050506:	0f 84 1d 00 00 00    	je     8050529 <tcc_set_linker+0x8d>
 805050c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050510:	48 b9 fc 00 00 00 00 	movabs $0xfc,%rcx
 8050517:	00 00 00 
 805051a:	48 01 c8             	add    %rcx,%rax
 805051d:	b9 01 00 00 00       	mov    $0x1,%ecx
 8050522:	89 08                	mov    %ecx,(%rax)
 8050524:	e9 71 04 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 8050529:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 805052d:	49 89 c2             	mov    %rax,%r10
 8050530:	48 8d 05 17 98 03 00 	lea    0x39817(%rip),%rax        # 8089d4e <L.197>
 8050537:	48 89 c6             	mov    %rax,%rsi
 805053a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805053e:	48 89 c7             	mov    %rax,%rdi
 8050541:	4c 89 d2             	mov    %r10,%rdx
 8050544:	b8 00 00 00 00       	mov    $0x0,%eax
 8050549:	e8 d2 fd ff ff       	callq  8050320 <link_option>
 805054e:	85 c0                	test   %eax,%eax
 8050550:	0f 84 1d 00 00 00    	je     8050573 <tcc_set_linker+0xd7>
 8050556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805055a:	48 b9 dc 00 00 00 00 	movabs $0xdc,%rcx
 8050561:	00 00 00 
 8050564:	48 01 c8             	add    %rcx,%rax
 8050567:	b9 01 00 00 00       	mov    $0x1,%ecx
 805056c:	89 08                	mov    %ecx,(%rax)
 805056e:	e9 27 04 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 8050573:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8050577:	49 89 c2             	mov    %rax,%r10
 805057a:	48 8d 05 d6 97 03 00 	lea    0x397d6(%rip),%rax        # 8089d57 <L.198>
 8050581:	48 89 c6             	mov    %rax,%rsi
 8050584:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050588:	48 89 c7             	mov    %rax,%rdi
 805058b:	4c 89 d2             	mov    %r10,%rdx
 805058e:	b8 00 00 00 00       	mov    $0x0,%eax
 8050593:	e8 88 fd ff ff       	callq  8050320 <link_option>
 8050598:	85 c0                	test   %eax,%eax
 805059a:	0f 84 53 00 00 00    	je     80505f3 <tcc_set_linker+0x157>
 80505a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80505a4:	48 b9 20 01 00 00 00 	movabs $0x120,%rcx
 80505ab:	00 00 00 
 80505ae:	48 01 c8             	add    %rcx,%rax
 80505b1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80505b5:	48 89 08             	mov    %rcx,(%rax)
 80505b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80505bc:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 80505c3:	00 00 00 
 80505c6:	48 01 c8             	add    %rcx,%rax
 80505c9:	8b 08                	mov    (%rax),%ecx
 80505cb:	85 c9                	test   %ecx,%ecx
 80505cd:	0f 84 1b 00 00 00    	je     80505ee <tcc_set_linker+0x152>
 80505d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80505d7:	48 89 c6             	mov    %rax,%rsi
 80505da:	48 8d 05 7c 97 03 00 	lea    0x3977c(%rip),%rax        # 8089d5d <L.199>
 80505e1:	48 89 c7             	mov    %rax,%rdi
 80505e4:	b8 00 00 00 00       	mov    $0x0,%eax
 80505e9:	e8 11 d3 ff ff       	callq  804d8ff <tcc_warning>
 80505ee:	e9 a7 03 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 80505f3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80505f7:	49 89 c2             	mov    %rax,%r10
 80505fa:	48 8d 05 6e 97 03 00 	lea    0x3976e(%rip),%rax        # 8089d6f <L.200>
 8050601:	48 89 c6             	mov    %rax,%rsi
 8050604:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050608:	48 89 c7             	mov    %rax,%rdi
 805060b:	4c 89 d2             	mov    %r10,%rdx
 805060e:	b8 00 00 00 00       	mov    $0x0,%eax
 8050613:	e8 08 fd ff ff       	callq  8050320 <link_option>
 8050618:	85 c0                	test   %eax,%eax
 805061a:	0f 84 5c 00 00 00    	je     805067c <tcc_set_linker+0x1e0>
 8050620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050624:	48 b9 08 01 00 00 00 	movabs $0x108,%rcx
 805062b:	00 00 00 
 805062e:	48 01 c8             	add    %rcx,%rax
 8050631:	b9 10 00 00 00       	mov    $0x10,%ecx
 8050636:	49 89 ca             	mov    %rcx,%r10
 8050639:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
 805063d:	48 89 ce             	mov    %rcx,%rsi
 8050640:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8050644:	48 89 cf             	mov    %rcx,%rdi
 8050647:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805064b:	4c 89 d2             	mov    %r10,%rdx
 805064e:	b8 00 00 00 00       	mov    $0x0,%eax
 8050653:	e8 f8 75 03 00       	callq  8087c50 <__preinit_array_end+0x1b0>
 8050658:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 805065c:	48 89 01             	mov    %rax,(%rcx)
 805065f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050663:	48 b9 10 01 00 00 00 	movabs $0x110,%rcx
 805066a:	00 00 00 
 805066d:	48 01 c8             	add    %rcx,%rax
 8050670:	b9 01 00 00 00       	mov    $0x1,%ecx
 8050675:	89 08                	mov    %ecx,(%rax)
 8050677:	e9 1e 03 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 805067c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8050680:	49 89 c2             	mov    %rax,%r10
 8050683:	48 8d 05 f1 96 03 00 	lea    0x396f1(%rip),%rax        # 8089d7b <L.201>
 805068a:	48 89 c6             	mov    %rax,%rsi
 805068d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050691:	48 89 c7             	mov    %rax,%rdi
 8050694:	4c 89 d2             	mov    %r10,%rdx
 8050697:	b8 00 00 00 00       	mov    $0x0,%eax
 805069c:	e8 7f fc ff ff       	callq  8050320 <link_option>
 80506a1:	85 c0                	test   %eax,%eax
 80506a3:	0f 84 53 00 00 00    	je     80506fc <tcc_set_linker+0x260>
 80506a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80506ad:	48 b9 18 01 00 00 00 	movabs $0x118,%rcx
 80506b4:	00 00 00 
 80506b7:	48 01 c8             	add    %rcx,%rax
 80506ba:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80506be:	48 89 08             	mov    %rcx,(%rax)
 80506c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80506c5:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 80506cc:	00 00 00 
 80506cf:	48 01 c8             	add    %rcx,%rax
 80506d2:	8b 08                	mov    (%rax),%ecx
 80506d4:	85 c9                	test   %ecx,%ecx
 80506d6:	0f 84 1b 00 00 00    	je     80506f7 <tcc_set_linker+0x25b>
 80506dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80506e0:	48 89 c6             	mov    %rax,%rsi
 80506e3:	48 8d 05 97 96 03 00 	lea    0x39697(%rip),%rax        # 8089d81 <L.202>
 80506ea:	48 89 c7             	mov    %rax,%rdi
 80506ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80506f2:	e8 08 d2 ff ff       	callq  804d8ff <tcc_warning>
 80506f7:	e9 9e 02 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 80506fc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8050700:	49 89 c2             	mov    %rax,%r10
 8050703:	48 8d 05 89 96 03 00 	lea    0x39689(%rip),%rax        # 8089d93 <L.203>
 805070a:	48 89 c6             	mov    %rax,%rsi
 805070d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050711:	48 89 c7             	mov    %rax,%rdi
 8050714:	4c 89 d2             	mov    %r10,%rdx
 8050717:	b8 00 00 00 00       	mov    $0x0,%eax
 805071c:	e8 ff fb ff ff       	callq  8050320 <link_option>
 8050721:	85 c0                	test   %eax,%eax
 8050723:	0f 84 9e 00 00 00    	je     80507c7 <tcc_set_linker+0x32b>
 8050729:	b8 00 00 00 00       	mov    $0x0,%eax
 805072e:	49 89 c2             	mov    %rax,%r10
 8050731:	48 8d 05 64 96 03 00 	lea    0x39664(%rip),%rax        # 8089d9c <L.204>
 8050738:	48 89 c6             	mov    %rax,%rsi
 805073b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805073f:	48 89 c7             	mov    %rax,%rdi
 8050742:	4c 89 d2             	mov    %r10,%rdx
 8050745:	b8 00 00 00 00       	mov    $0x0,%eax
 805074a:	e8 25 fb ff ff       	callq  8050274 <strstart>
 805074f:	85 c0                	test   %eax,%eax
 8050751:	0f 84 1d 00 00 00    	je     8050774 <tcc_set_linker+0x2d8>
 8050757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805075b:	48 b9 28 01 00 00 00 	movabs $0x128,%rcx
 8050762:	00 00 00 
 8050765:	48 01 c8             	add    %rcx,%rax
 8050768:	b9 00 00 00 00       	mov    $0x0,%ecx
 805076d:	89 08                	mov    %ecx,(%rax)
 805076f:	e9 4e 00 00 00       	jmpq   80507c2 <tcc_set_linker+0x326>
 8050774:	48 8d 05 28 96 03 00 	lea    0x39628(%rip),%rax        # 8089da3 <L.205>
 805077b:	48 89 c6             	mov    %rax,%rsi
 805077e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050782:	48 89 c7             	mov    %rax,%rdi
 8050785:	b8 00 00 00 00       	mov    $0x0,%eax
 805078a:	e8 51 6a 03 00       	callq  80871e0 <strcmp>
 805078f:	85 c0                	test   %eax,%eax
 8050791:	0f 84 05 00 00 00    	je     805079c <tcc_set_linker+0x300>
 8050797:	e9 1d 00 00 00       	jmpq   80507b9 <tcc_set_linker+0x31d>
 805079c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80507a0:	48 b9 28 01 00 00 00 	movabs $0x128,%rcx
 80507a7:	00 00 00 
 80507aa:	48 01 c8             	add    %rcx,%rax
 80507ad:	b9 01 00 00 00       	mov    $0x1,%ecx
 80507b2:	89 08                	mov    %ecx,(%rax)
 80507b4:	e9 09 00 00 00       	jmpq   80507c2 <tcc_set_linker+0x326>
 80507b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80507bd:	e9 70 02 00 00       	jmpq   8050a32 <tcc_set_linker+0x596>
 80507c2:	e9 d3 01 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 80507c7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80507cb:	49 89 c2             	mov    %rax,%r10
 80507ce:	48 8d 05 d5 95 03 00 	lea    0x395d5(%rip),%rax        # 8089daa <L.206>
 80507d5:	48 89 c6             	mov    %rax,%rsi
 80507d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80507dc:	48 89 c7             	mov    %rax,%rdi
 80507df:	4c 89 d2             	mov    %r10,%rdx
 80507e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80507e7:	e8 34 fb ff ff       	callq  8050320 <link_option>
 80507ec:	85 c0                	test   %eax,%eax
 80507ee:	0f 84 1d 00 00 00    	je     8050811 <tcc_set_linker+0x375>
 80507f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80507f8:	48 b9 f0 00 00 00 00 	movabs $0xf0,%rcx
 80507ff:	00 00 00 
 8050802:	48 01 c8             	add    %rcx,%rax
 8050805:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8050809:	48 89 08             	mov    %rcx,(%rax)
 805080c:	e9 89 01 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 8050811:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8050815:	49 89 c2             	mov    %rax,%r10
 8050818:	48 8d 05 92 95 03 00 	lea    0x39592(%rip),%rax        # 8089db1 <L.207>
 805081f:	48 89 c6             	mov    %rax,%rsi
 8050822:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050826:	48 89 c7             	mov    %rax,%rdi
 8050829:	4c 89 d2             	mov    %r10,%rdx
 805082c:	b8 00 00 00 00       	mov    $0x0,%eax
 8050831:	e8 ea fa ff ff       	callq  8050320 <link_option>
 8050836:	85 c0                	test   %eax,%eax
 8050838:	0f 84 44 00 00 00    	je     8050882 <tcc_set_linker+0x3e6>
 805083e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050842:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 8050849:	00 00 00 
 805084c:	48 01 c8             	add    %rcx,%rax
 805084f:	b9 10 00 00 00       	mov    $0x10,%ecx
 8050854:	49 89 ca             	mov    %rcx,%r10
 8050857:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
 805085b:	48 89 ce             	mov    %rcx,%rsi
 805085e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8050862:	48 89 cf             	mov    %rcx,%rdi
 8050865:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8050869:	4c 89 d2             	mov    %r10,%rdx
 805086c:	b8 00 00 00 00       	mov    $0x0,%eax
 8050871:	e8 ea 73 03 00       	callq  8087c60 <__preinit_array_end+0x1c0>
 8050876:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805087a:	48 89 01             	mov    %rax,(%rcx)
 805087d:	e9 18 01 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 8050882:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8050886:	49 89 c2             	mov    %rax,%r10
 8050889:	48 8d 05 34 95 03 00 	lea    0x39534(%rip),%rax        # 8089dc4 <L.208>
 8050890:	48 89 c6             	mov    %rax,%rsi
 8050893:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050897:	48 89 c7             	mov    %rax,%rdi
 805089a:	4c 89 d2             	mov    %r10,%rdx
 805089d:	b8 00 00 00 00       	mov    $0x0,%eax
 80508a2:	e8 79 fa ff ff       	callq  8050320 <link_option>
 80508a7:	85 c0                	test   %eax,%eax
 80508a9:	0f 84 25 00 00 00    	je     80508d4 <tcc_set_linker+0x438>
 80508af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80508b3:	48 b9 e8 00 00 00 00 	movabs $0xe8,%rcx
 80508ba:	00 00 00 
 80508bd:	48 01 c8             	add    %rcx,%rax
 80508c0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80508c4:	48 89 08             	mov    %rcx,(%rax)
 80508c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80508cc:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80508cf:	e9 c6 00 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 80508d4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80508d8:	49 89 c2             	mov    %rax,%r10
 80508db:	48 8d 05 ea 94 03 00 	lea    0x394ea(%rip),%rax        # 8089dcc <L.209>
 80508e2:	48 89 c6             	mov    %rax,%rsi
 80508e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80508e9:	48 89 c7             	mov    %rax,%rdi
 80508ec:	4c 89 d2             	mov    %r10,%rdx
 80508ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80508f4:	e8 27 fa ff ff       	callq  8050320 <link_option>
 80508f9:	85 c0                	test   %eax,%eax
 80508fb:	0f 84 5c 00 00 00    	je     805095d <tcc_set_linker+0x4c1>
 8050901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050905:	48 b9 08 01 00 00 00 	movabs $0x108,%rcx
 805090c:	00 00 00 
 805090f:	48 01 c8             	add    %rcx,%rax
 8050912:	b9 10 00 00 00       	mov    $0x10,%ecx
 8050917:	49 89 ca             	mov    %rcx,%r10
 805091a:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
 805091e:	48 89 ce             	mov    %rcx,%rsi
 8050921:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8050925:	48 89 cf             	mov    %rcx,%rdi
 8050928:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805092c:	4c 89 d2             	mov    %r10,%rdx
 805092f:	b8 00 00 00 00       	mov    $0x0,%eax
 8050934:	e8 17 73 03 00       	callq  8087c50 <__preinit_array_end+0x1b0>
 8050939:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805093d:	48 89 01             	mov    %rax,(%rcx)
 8050940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050944:	48 b9 10 01 00 00 00 	movabs $0x110,%rcx
 805094b:	00 00 00 
 805094e:	48 01 c8             	add    %rcx,%rax
 8050951:	b9 01 00 00 00       	mov    $0x1,%ecx
 8050956:	89 08                	mov    %ecx,(%rax)
 8050958:	e9 3d 00 00 00       	jmpq   805099a <tcc_set_linker+0x4fe>
 805095d:	b8 2c 00 00 00       	mov    $0x2c,%eax
 8050962:	48 89 c6             	mov    %rax,%rsi
 8050965:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050969:	48 89 c7             	mov    %rax,%rdi
 805096c:	b8 00 00 00 00       	mov    $0x0,%eax
 8050971:	e8 ca 66 03 00       	callq  8087040 <strchr>
 8050976:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 805097a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 805097e:	85 c0                	test   %eax,%eax
 8050980:	0f 84 0b 00 00 00    	je     8050991 <tcc_set_linker+0x4f5>
 8050986:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 805098a:	b9 00 00 00 00       	mov    $0x0,%ecx
 805098f:	88 08                	mov    %cl,(%rax)
 8050991:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050995:	e9 98 00 00 00       	jmpq   8050a32 <tcc_set_linker+0x596>
 805099a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805099d:	85 c0                	test   %eax,%eax
 805099f:	0f 84 75 00 00 00    	je     8050a1a <tcc_set_linker+0x57e>
 80509a5:	b8 00 00 00 00       	mov    $0x0,%eax
 80509aa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 80509ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80509b2:	85 c0                	test   %eax,%eax
 80509b4:	0f 84 05 00 00 00    	je     80509bf <tcc_set_linker+0x523>
 80509ba:	e9 09 00 00 00       	jmpq   80509c8 <tcc_set_linker+0x52c>
 80509bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80509c3:	e9 04 00 00 00       	jmpq   80509cc <tcc_set_linker+0x530>
 80509c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80509cc:	b9 2c 00 00 00       	mov    $0x2c,%ecx
 80509d1:	48 89 ce             	mov    %rcx,%rsi
 80509d4:	48 89 c7             	mov    %rax,%rdi
 80509d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80509dc:	e8 5f 66 03 00       	callq  8087040 <strchr>
 80509e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80509e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80509e9:	85 c0                	test   %eax,%eax
 80509eb:	0f 84 24 00 00 00    	je     8050a15 <tcc_set_linker+0x579>
 80509f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80509f5:	b9 00 00 00 00       	mov    $0x0,%ecx
 80509fa:	88 08                	mov    %cl,(%rax)
 80509fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050a00:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8050a07:	00 00 00 
 8050a0a:	48 01 c8             	add    %rcx,%rax
 8050a0d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8050a11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8050a15:	e9 09 00 00 00       	jmpq   8050a23 <tcc_set_linker+0x587>
 8050a1a:	b8 00 00 00 00       	mov    $0x0,%eax
 8050a1f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8050a23:	e9 93 fa ff ff       	jmpq   80504bb <tcc_set_linker+0x1f>
 8050a28:	b8 00 00 00 00       	mov    $0x0,%eax
 8050a2d:	e9 00 00 00 00       	jmpq   8050a32 <tcc_set_linker+0x596>
 8050a32:	c9                   	leaveq 
 8050a33:	c3                   	retq   

0000000008050a34 <tcc_print_stats>:
 8050a34:	55                   	push   %rbp
 8050a35:	48 89 e5             	mov    %rsp,%rbp
 8050a38:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8050a3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050a43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050a47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050a4b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 8050a50:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
 8050a55:	f3 0f 7e 05 7b 93 03 	movq   0x3937b(%rip),%xmm0        # 8089dd8 <L.210>
 8050a5c:	00 
 8050a5d:	f3 0f 7e c8          	movq   %xmm0,%xmm1
 8050a61:	f3 0f 7e 45 e0       	movq   -0x20(%rbp),%xmm0
 8050a66:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
 8050a6a:	66 0f d6 45 e8       	movq   %xmm0,-0x18(%rbp)
 8050a6f:	f3 0f 7e 05 69 93 03 	movq   0x39369(%rip),%xmm0        # 8089de0 <L.211>
 8050a76:	00 
 8050a77:	66 0f 2e 45 e8       	ucomisd -0x18(%rbp),%xmm0
 8050a7c:	0f 86 0d 00 00 00    	jbe    8050a8f <tcc_print_stats+0x5b>
 8050a82:	f3 0f 7e 05 5e 93 03 	movq   0x3935e(%rip),%xmm0        # 8089de8 <L.212>
 8050a89:	00 
 8050a8a:	66 0f d6 45 e8       	movq   %xmm0,-0x18(%rbp)
 8050a8f:	48 8b 05 0a d5 03 00 	mov    0x3d50a(%rip),%rax        # 808dfa0 <_GLOBAL_OFFSET_TABLE_+0x320>
 8050a96:	8b 00                	mov    (%rax),%eax
 8050a98:	83 f8 01             	cmp    $0x1,%eax
 8050a9b:	0f 8d 0f 00 00 00    	jge    8050ab0 <tcc_print_stats+0x7c>
 8050aa1:	b8 01 00 00 00       	mov    $0x1,%eax
 8050aa6:	4c 8b 1d f3 d4 03 00 	mov    0x3d4f3(%rip),%r11        # 808dfa0 <_GLOBAL_OFFSET_TABLE_+0x320>
 8050aad:	41 89 03             	mov    %eax,(%r11)
 8050ab0:	48 8b 05 89 d4 03 00 	mov    0x3d489(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8050ab7:	8b 00                	mov    (%rax),%eax
 8050ab9:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8050abf:	48 8b 0d ea d3 03 00 	mov    0x3d3ea(%rip),%rcx        # 808deb0 <_GLOBAL_OFFSET_TABLE_+0x230>
 8050ac6:	8b 09                	mov    (%rcx),%ecx
 8050ac8:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
 8050acc:	f2 0f 5e 45 e8       	divsd  -0x18(%rbp),%xmm0
 8050ad1:	f2 0f 2c c8          	cvttsd2si %xmm0,%ecx
 8050ad5:	48 8b 15 c4 d4 03 00 	mov    0x3d4c4(%rip),%rdx        # 808dfa0 <_GLOBAL_OFFSET_TABLE_+0x320>
 8050adc:	8b 12                	mov    (%rdx),%edx
 8050ade:	f2 0f 2a c2          	cvtsi2sd %edx,%xmm0
 8050ae2:	f2 0f 5e 45 e8       	divsd  -0x18(%rbp),%xmm0
 8050ae7:	66 0f d6 45 d8       	movq   %xmm0,-0x28(%rbp)
 8050aec:	f3 0f 7e 05 3c 93 03 	movq   0x3933c(%rip),%xmm0        # 8089e30 <L.214>
 8050af3:	00 
 8050af4:	f3 0f 7e c8          	movq   %xmm0,%xmm1
 8050af8:	f3 0f 7e 45 d8       	movq   -0x28(%rbp),%xmm0
 8050afd:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
 8050b01:	0f 28 c8             	movaps %xmm0,%xmm1
 8050b04:	49 89 c8             	mov    %rcx,%r8
 8050b07:	f3 0f 7e 45 e8       	movq   -0x18(%rbp),%xmm0
 8050b0c:	0f 28 c0             	movaps %xmm0,%xmm0
 8050b0f:	48 8b 0d 8a d4 03 00 	mov    0x3d48a(%rip),%rcx        # 808dfa0 <_GLOBAL_OFFSET_TABLE_+0x320>
 8050b16:	8b 09                	mov    (%rcx),%ecx
 8050b18:	49 89 cb             	mov    %rcx,%r11
 8050b1b:	48 8b 0d 8e d3 03 00 	mov    0x3d38e(%rip),%rcx        # 808deb0 <_GLOBAL_OFFSET_TABLE_+0x230>
 8050b22:	8b 09                	mov    (%rcx),%ecx
 8050b24:	49 89 ca             	mov    %rcx,%r10
 8050b27:	48 89 c6             	mov    %rax,%rsi
 8050b2a:	48 8d 05 bf 92 03 00 	lea    0x392bf(%rip),%rax        # 8089df0 <L.213>
 8050b31:	48 89 c7             	mov    %rax,%rdi
 8050b34:	4c 89 d2             	mov    %r10,%rdx
 8050b37:	4c 89 d9             	mov    %r11,%rcx
 8050b3a:	b8 02 00 00 00       	mov    $0x2,%eax
 8050b3f:	e8 7c 6f 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 8050b44:	c9                   	leaveq 
 8050b45:	c3                   	retq   

0000000008050b46 <tcc_set_lib_path>:
 8050b46:	55                   	push   %rbp
 8050b47:	48 89 e5             	mov    %rsp,%rbp
 8050b4a:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8050b51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050b55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050b5d:	48 b9 50 01 00 00 00 	movabs $0x150,%rcx
 8050b64:	00 00 00 
 8050b67:	48 01 c8             	add    %rcx,%rax
 8050b6a:	48 8b 08             	mov    (%rax),%rcx
 8050b6d:	48 89 cf             	mov    %rcx,%rdi
 8050b70:	b8 00 00 00 00       	mov    $0x0,%eax
 8050b75:	e8 bc b3 ff ff       	callq  804bf36 <tcc_free>
 8050b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050b7e:	48 b9 50 01 00 00 00 	movabs $0x150,%rcx
 8050b85:	00 00 00 
 8050b88:	48 01 c8             	add    %rcx,%rax
 8050b8b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8050b8f:	48 89 cf             	mov    %rcx,%rdi
 8050b92:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8050b96:	b8 00 00 00 00       	mov    $0x0,%eax
 8050b9b:	e8 fc b4 ff ff       	callq  804c09c <tcc_strdup>
 8050ba0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8050ba4:	48 89 01             	mov    %rax,(%rcx)
 8050ba7:	c9                   	leaveq 
 8050ba8:	c3                   	retq   

0000000008050ba9 <tcc_default_target>:
 8050ba9:	55                   	push   %rbp
 8050baa:	48 89 e5             	mov    %rsp,%rbp
 8050bad:	48 81 ec 20 04 00 00 	sub    $0x420,%rsp
 8050bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050bb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050bbc:	48 8d 05 75 92 03 00 	lea    0x39275(%rip),%rax        # 8089e38 <L.215>
 8050bc3:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
 8050bca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050bce:	85 c0                	test   %eax,%eax
 8050bd0:	0f 84 3b 00 00 00    	je     8050c11 <tcc_default_target+0x68>
 8050bd6:	48 8d 05 5d 92 03 00 	lea    0x3925d(%rip),%rax        # 8089e3a <L.216>
 8050bdd:	48 89 c6             	mov    %rax,%rsi
 8050be0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050be4:	48 89 c7             	mov    %rax,%rdi
 8050be7:	b8 00 00 00 00       	mov    $0x0,%eax
 8050bec:	e8 ef 65 03 00       	callq  80871e0 <strcmp>
 8050bf1:	85 c0                	test   %eax,%eax
 8050bf3:	0f 84 18 00 00 00    	je     8050c11 <tcc_default_target+0x68>
 8050bf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050bfd:	48 89 c7             	mov    %rax,%rdi
 8050c00:	b8 00 00 00 00       	mov    $0x0,%eax
 8050c05:	e8 2f b2 ff ff       	callq  804be39 <tcc_basename>
 8050c0a:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
 8050c11:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
 8050c18:	49 89 c2             	mov    %rax,%r10
 8050c1b:	b8 00 04 00 00       	mov    $0x400,%eax
 8050c20:	48 89 c6             	mov    %rax,%rsi
 8050c23:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 8050c2a:	48 89 c7             	mov    %rax,%rdi
 8050c2d:	4c 89 d2             	mov    %r10,%rdx
 8050c30:	b8 00 00 00 00       	mov    $0x0,%eax
 8050c35:	e8 69 b0 ff ff       	callq  804bca3 <pstrcpy>
 8050c3a:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 8050c41:	48 89 c7             	mov    %rax,%rdi
 8050c44:	b8 00 00 00 00       	mov    $0x0,%eax
 8050c49:	e8 6d b2 ff ff       	callq  804bebb <tcc_fileextension>
 8050c4e:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
 8050c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050c59:	8b 08                	mov    (%rax),%ecx
 8050c5b:	c1 e1 18             	shl    $0x18,%ecx
 8050c5e:	c1 e9 18             	shr    $0x18,%ecx
 8050c61:	83 f9 03             	cmp    $0x3,%ecx
 8050c64:	0f 85 1e 00 00 00    	jne    8050c88 <tcc_default_target+0xdf>
 8050c6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050c6e:	8b 08                	mov    (%rax),%ecx
 8050c70:	c1 e1 17             	shl    $0x17,%ecx
 8050c73:	c1 e9 1f             	shr    $0x1f,%ecx
 8050c76:	85 c9                	test   %ecx,%ecx
 8050c78:	0f 84 05 00 00 00    	je     8050c83 <tcc_default_target+0xda>
 8050c7e:	e9 05 00 00 00       	jmpq   8050c88 <tcc_default_target+0xdf>
 8050c83:	e9 1a 00 00 00       	jmpq   8050ca2 <tcc_default_target+0xf9>
 8050c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050c8c:	8b 08                	mov    (%rax),%ecx
 8050c8e:	c1 e1 18             	shl    $0x18,%ecx
 8050c91:	c1 e9 18             	shr    $0x18,%ecx
 8050c94:	83 f9 04             	cmp    $0x4,%ecx
 8050c97:	0f 84 05 00 00 00    	je     8050ca2 <tcc_default_target+0xf9>
 8050c9d:	e9 35 00 00 00       	jmpq   8050cd7 <tcc_default_target+0x12e>
 8050ca2:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 8050ca9:	0f be 08             	movsbl (%rax),%ecx
 8050cac:	85 c9                	test   %ecx,%ecx
 8050cae:	0f 84 23 00 00 00    	je     8050cd7 <tcc_default_target+0x12e>
 8050cb4:	48 8d 05 81 91 03 00 	lea    0x39181(%rip),%rax        # 8089e3c <L.217>
 8050cbb:	48 89 c6             	mov    %rax,%rsi
 8050cbe:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 8050cc5:	48 89 c7             	mov    %rax,%rdi
 8050cc8:	b8 00 00 00 00       	mov    $0x0,%eax
 8050ccd:	e8 8e 65 03 00       	callq  8087260 <strcpy>
 8050cd2:	e9 29 00 00 00       	jmpq   8050d00 <tcc_default_target+0x157>
 8050cd7:	48 8d 05 61 91 03 00 	lea    0x39161(%rip),%rax        # 8089e3f <L.218>
 8050cde:	49 89 c2             	mov    %rax,%r10
 8050ce1:	b8 00 04 00 00       	mov    $0x400,%eax
 8050ce6:	48 89 c6             	mov    %rax,%rsi
 8050ce9:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 8050cf0:	48 89 c7             	mov    %rax,%rdi
 8050cf3:	4c 89 d2             	mov    %r10,%rdx
 8050cf6:	b8 00 00 00 00       	mov    $0x0,%eax
 8050cfb:	e8 a3 af ff ff       	callq  804bca3 <pstrcpy>
 8050d00:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 8050d07:	48 89 c7             	mov    %rax,%rdi
 8050d0a:	b8 00 00 00 00       	mov    $0x0,%eax
 8050d0f:	e8 88 b3 ff ff       	callq  804c09c <tcc_strdup>
 8050d14:	e9 00 00 00 00       	jmpq   8050d19 <tcc_default_target+0x170>
 8050d19:	c9                   	leaveq 
 8050d1a:	c3                   	retq   

0000000008050d1b <tcc_gen_makedeps>:
 8050d1b:	55                   	push   %rbp
 8050d1c:	48 89 e5             	mov    %rsp,%rbp
 8050d1f:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
 8050d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050d2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8050d2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8050d32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8050d36:	85 c0                	test   %eax,%eax
 8050d38:	0f 84 05 00 00 00    	je     8050d43 <tcc_gen_makedeps+0x28>
 8050d3e:	e9 94 00 00 00       	jmpq   8050dd7 <tcc_gen_makedeps+0xbc>
 8050d43:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050d47:	49 89 c2             	mov    %rax,%r10
 8050d4a:	b8 00 04 00 00       	mov    $0x400,%eax
 8050d4f:	48 89 c6             	mov    %rax,%rsi
 8050d52:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8050d59:	48 89 c7             	mov    %rax,%rdi
 8050d5c:	4c 89 d2             	mov    %r10,%rdx
 8050d5f:	b8 00 00 00 00       	mov    $0x0,%eax
 8050d64:	e8 3a af ff ff       	callq  804bca3 <pstrcpy>
 8050d69:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8050d70:	48 89 c7             	mov    %rax,%rdi
 8050d73:	b8 00 00 00 00       	mov    $0x0,%eax
 8050d78:	e8 3e b1 ff ff       	callq  804bebb <tcc_fileextension>
 8050d7d:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8050d84:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8050d8b:	48 8d 8d e0 fb ff ff 	lea    -0x420(%rbp),%rcx
 8050d92:	48 29 c8             	sub    %rcx,%rax
 8050d95:	48 b9 00 04 00 00 00 	movabs $0x400,%rcx
 8050d9c:	00 00 00 
 8050d9f:	48 89 c2             	mov    %rax,%rdx
 8050da2:	48 29 d1             	sub    %rdx,%rcx
 8050da5:	48 89 c8             	mov    %rcx,%rax
 8050da8:	48 8d 0d 96 90 03 00 	lea    0x39096(%rip),%rcx        # 8089e45 <L.219>
 8050daf:	49 89 ca             	mov    %rcx,%r10
 8050db2:	48 89 c6             	mov    %rax,%rsi
 8050db5:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8050dbc:	48 89 c7             	mov    %rax,%rdi
 8050dbf:	4c 89 d2             	mov    %r10,%rdx
 8050dc2:	b8 00 00 00 00       	mov    $0x0,%eax
 8050dc7:	e8 d7 ae ff ff       	callq  804bca3 <pstrcpy>
 8050dcc:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8050dd3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8050dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050ddb:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 8050de2:	00 00 00 
 8050de5:	48 01 c8             	add    %rcx,%rax
 8050de8:	8b 08                	mov    (%rax),%ecx
 8050dea:	85 c9                	test   %ecx,%ecx
 8050dec:	0f 84 1b 00 00 00    	je     8050e0d <tcc_gen_makedeps+0xf2>
 8050df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8050df6:	48 89 c6             	mov    %rax,%rsi
 8050df9:	48 8d 05 48 90 03 00 	lea    0x39048(%rip),%rax        # 8089e48 <L.220>
 8050e00:	48 89 c7             	mov    %rax,%rdi
 8050e03:	b8 00 00 00 00       	mov    $0x0,%eax
 8050e08:	e8 b3 6c 03 00       	callq  8087ac0 <__preinit_array_end+0x20>
 8050e0d:	48 8d 05 3b 90 03 00 	lea    0x3903b(%rip),%rax        # 8089e4f <L.221>
 8050e14:	48 89 c6             	mov    %rax,%rsi
 8050e17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8050e1b:	48 89 c7             	mov    %rax,%rdi
 8050e1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8050e23:	e8 d8 6c 03 00       	callq  8087b00 <__preinit_array_end+0x60>
 8050e28:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8050e2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050e30:	85 c0                	test   %eax,%eax
 8050e32:	0f 84 05 00 00 00    	je     8050e3d <tcc_gen_makedeps+0x122>
 8050e38:	e9 1b 00 00 00       	jmpq   8050e58 <tcc_gen_makedeps+0x13d>
 8050e3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8050e41:	48 89 c6             	mov    %rax,%rsi
 8050e44:	48 8d 05 06 90 03 00 	lea    0x39006(%rip),%rax        # 8089e51 <L.222>
 8050e4b:	48 89 c7             	mov    %rax,%rdi
 8050e4e:	b8 00 00 00 00       	mov    $0x0,%eax
 8050e53:	e8 6f c8 ff ff       	callq  804d6c7 <tcc_error>
 8050e58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8050e5c:	49 89 c2             	mov    %rax,%r10
 8050e5f:	48 8d 05 ff 8f 03 00 	lea    0x38fff(%rip),%rax        # 8089e65 <L.223>
 8050e66:	48 89 c6             	mov    %rax,%rsi
 8050e69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050e6d:	48 89 c7             	mov    %rax,%rdi
 8050e70:	4c 89 d2             	mov    %r10,%rdx
 8050e73:	b8 00 00 00 00       	mov    $0x0,%eax
 8050e78:	e8 f3 6c 03 00       	callq  8087b70 <__preinit_array_end+0xd0>
 8050e7d:	b8 00 00 00 00       	mov    $0x0,%eax
 8050e82:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%rbp)
 8050e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050e8c:	48 b9 80 0c 00 00 00 	movabs $0xc80,%rcx
 8050e93:	00 00 00 
 8050e96:	48 01 c8             	add    %rcx,%rax
 8050e99:	8b 8d d4 fb ff ff    	mov    -0x42c(%rbp),%ecx
 8050e9f:	8b 10                	mov    (%rax),%edx
 8050ea1:	39 d1                	cmp    %edx,%ecx
 8050ea3:	0f 8d 66 00 00 00    	jge    8050f0f <tcc_gen_makedeps+0x1f4>
 8050ea9:	e9 11 00 00 00       	jmpq   8050ebf <tcc_gen_makedeps+0x1a4>
 8050eae:	8b 85 d4 fb ff ff    	mov    -0x42c(%rbp),%eax
 8050eb4:	83 c0 01             	add    $0x1,%eax
 8050eb7:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%rbp)
 8050ebd:	eb c9                	jmp    8050e88 <tcc_gen_makedeps+0x16d>
 8050ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050ec3:	48 b9 78 0c 00 00 00 	movabs $0xc78,%rcx
 8050eca:	00 00 00 
 8050ecd:	48 01 c8             	add    %rcx,%rax
 8050ed0:	8b 8d d4 fb ff ff    	mov    -0x42c(%rbp),%ecx
 8050ed6:	48 63 c9             	movslq %ecx,%rcx
 8050ed9:	48 89 ca             	mov    %rcx,%rdx
 8050edc:	48 c1 e2 03          	shl    $0x3,%rdx
 8050ee0:	48 8b 08             	mov    (%rax),%rcx
 8050ee3:	48 89 d0             	mov    %rdx,%rax
 8050ee6:	48 01 c1             	add    %rax,%rcx
 8050ee9:	48 8b 01             	mov    (%rcx),%rax
 8050eec:	49 89 c2             	mov    %rax,%r10
 8050eef:	48 8d 05 77 8f 03 00 	lea    0x38f77(%rip),%rax        # 8089e6d <L.224>
 8050ef6:	48 89 c6             	mov    %rax,%rsi
 8050ef9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050efd:	48 89 c7             	mov    %rax,%rdi
 8050f00:	4c 89 d2             	mov    %r10,%rdx
 8050f03:	b8 00 00 00 00       	mov    $0x0,%eax
 8050f08:	e8 63 6c 03 00       	callq  8087b70 <__preinit_array_end+0xd0>
 8050f0d:	eb 9f                	jmp    8050eae <tcc_gen_makedeps+0x193>
 8050f0f:	48 8d 05 5e 8f 03 00 	lea    0x38f5e(%rip),%rax        # 8089e74 <L.225>
 8050f16:	48 89 c6             	mov    %rax,%rsi
 8050f19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050f1d:	48 89 c7             	mov    %rax,%rdi
 8050f20:	b8 00 00 00 00       	mov    $0x0,%eax
 8050f25:	e8 46 6c 03 00       	callq  8087b70 <__preinit_array_end+0xd0>
 8050f2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8050f2e:	48 89 c7             	mov    %rax,%rdi
 8050f31:	b8 00 00 00 00       	mov    $0x0,%eax
 8050f36:	e8 d5 6b 03 00       	callq  8087b10 <__preinit_array_end+0x70>
 8050f3b:	c9                   	leaveq 
 8050f3c:	c3                   	retq   
 8050f3d:	00 00                	add    %al,(%rax)
	...

0000000008050f40 <__bswap_16>:
 8050f40:	55                   	push   %rbp
 8050f41:	48 89 e5             	mov    %rsp,%rbp
 8050f44:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8050f4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050f4f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8050f52:	c1 f8 08             	sar    $0x8,%eax
 8050f55:	81 e0 ff 00 00 00    	and    $0xff,%eax
 8050f5b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8050f5e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 8050f64:	c1 e1 08             	shl    $0x8,%ecx
 8050f67:	48 09 c8             	or     %rcx,%rax
 8050f6a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 8050f70:	e9 00 00 00 00       	jmpq   8050f75 <__bswap_16+0x35>
 8050f75:	c9                   	leaveq 
 8050f76:	c3                   	retq   

0000000008050f77 <__bswap_32>:
 8050f77:	55                   	push   %rbp
 8050f78:	48 89 e5             	mov    %rsp,%rbp
 8050f7b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8050f82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050f86:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8050f89:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 8050f8f:	c1 e8 18             	shr    $0x18,%eax
 8050f92:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8050f95:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 8050f9b:	c1 e9 08             	shr    $0x8,%ecx
 8050f9e:	48 09 c8             	or     %rcx,%rax
 8050fa1:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8050fa4:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 8050faa:	c1 e1 08             	shl    $0x8,%ecx
 8050fad:	48 09 c8             	or     %rcx,%rax
 8050fb0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8050fb3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 8050fb9:	c1 e1 18             	shl    $0x18,%ecx
 8050fbc:	48 09 c8             	or     %rcx,%rax
 8050fbf:	e9 00 00 00 00       	jmpq   8050fc4 <__bswap_32+0x4d>
 8050fc4:	c9                   	leaveq 
 8050fc5:	c3                   	retq   

0000000008050fc6 <__bswap_64>:
 8050fc6:	55                   	push   %rbp
 8050fc7:	48 89 e5             	mov    %rsp,%rbp
 8050fca:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8050fd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8050fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050fd9:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 8050fe0:	00 00 ff 
 8050fe3:	48 21 c8             	and    %rcx,%rax
 8050fe6:	48 89 c1             	mov    %rax,%rcx
 8050fe9:	48 c1 e9 38          	shr    $0x38,%rcx
 8050fed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8050ff1:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 8050ff8:	00 ff 00 
 8050ffb:	48 21 d0             	and    %rdx,%rax
 8050ffe:	48 89 c2             	mov    %rax,%rdx
 8051001:	48 c1 ea 28          	shr    $0x28,%rdx
 8051005:	48 89 c8             	mov    %rcx,%rax
 8051008:	48 89 d1             	mov    %rdx,%rcx
 805100b:	48 09 c8             	or     %rcx,%rax
 805100e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8051012:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 8051019:	ff 00 00 
 805101c:	48 21 d1             	and    %rdx,%rcx
 805101f:	48 89 ca             	mov    %rcx,%rdx
 8051022:	48 c1 ea 18          	shr    $0x18,%rdx
 8051026:	48 89 c1             	mov    %rax,%rcx
 8051029:	48 89 d0             	mov    %rdx,%rax
 805102c:	48 09 c1             	or     %rax,%rcx
 805102f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051033:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 805103a:	00 00 00 
 805103d:	48 21 d0             	and    %rdx,%rax
 8051040:	48 89 c2             	mov    %rax,%rdx
 8051043:	48 c1 ea 08          	shr    $0x8,%rdx
 8051047:	48 89 c8             	mov    %rcx,%rax
 805104a:	48 89 d1             	mov    %rdx,%rcx
 805104d:	48 09 c8             	or     %rcx,%rax
 8051050:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8051054:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 805105b:	00 00 00 
 805105e:	48 21 d1             	and    %rdx,%rcx
 8051061:	48 89 ca             	mov    %rcx,%rdx
 8051064:	48 c1 e2 08          	shl    $0x8,%rdx
 8051068:	48 89 c1             	mov    %rax,%rcx
 805106b:	48 89 d0             	mov    %rdx,%rax
 805106e:	48 09 c1             	or     %rax,%rcx
 8051071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051075:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 805107c:	00 00 00 
 805107f:	48 21 d0             	and    %rdx,%rax
 8051082:	48 89 c2             	mov    %rax,%rdx
 8051085:	48 c1 e2 18          	shl    $0x18,%rdx
 8051089:	48 89 c8             	mov    %rcx,%rax
 805108c:	48 89 d1             	mov    %rdx,%rcx
 805108f:	48 09 c8             	or     %rcx,%rax
 8051092:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8051096:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 805109d:	00 00 00 
 80510a0:	48 21 d1             	and    %rdx,%rcx
 80510a3:	48 89 ca             	mov    %rcx,%rdx
 80510a6:	48 c1 e2 28          	shl    $0x28,%rdx
 80510aa:	48 89 c1             	mov    %rax,%rcx
 80510ad:	48 89 d0             	mov    %rdx,%rax
 80510b0:	48 09 c1             	or     %rax,%rcx
 80510b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80510b7:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 80510be:	00 00 00 
 80510c1:	48 21 d0             	and    %rdx,%rax
 80510c4:	48 89 c2             	mov    %rax,%rdx
 80510c7:	48 c1 e2 38          	shl    $0x38,%rdx
 80510cb:	48 89 c8             	mov    %rcx,%rax
 80510ce:	48 89 d1             	mov    %rdx,%rcx
 80510d1:	48 09 c8             	or     %rcx,%rax
 80510d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 80510d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80510dc:	e9 00 00 00 00       	jmpq   80510e1 <__bswap_64+0x11b>
 80510e1:	c9                   	leaveq 
 80510e2:	c3                   	retq   

00000000080510e3 <skip>:
 80510e3:	55                   	push   %rbp
 80510e4:	48 89 e5             	mov    %rsp,%rbp
 80510e7:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80510ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80510f2:	48 8b 05 2f ce 03 00 	mov    0x3ce2f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80510f9:	8b 00                	mov    (%rax),%eax
 80510fb:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 80510fe:	39 c8                	cmp    %ecx,%eax
 8051100:	0f 84 40 00 00 00    	je     8051146 <skip+0x63>
 8051106:	48 8b 05 9b ce 03 00 	mov    0x3ce9b(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805110d:	48 89 c6             	mov    %rax,%rsi
 8051110:	48 8b 05 11 ce 03 00 	mov    0x3ce11(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8051117:	8b 00                	mov    (%rax),%eax
 8051119:	48 89 c7             	mov    %rax,%rdi
 805111c:	b8 00 00 00 00       	mov    $0x0,%eax
 8051121:	e8 8e 07 00 00       	callq  80518b4 <get_tok_str>
 8051126:	49 89 c2             	mov    %rax,%r10
 8051129:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805112c:	48 89 c6             	mov    %rax,%rsi
 805112f:	48 8d 05 ca a1 03 00 	lea    0x3a1ca(%rip),%rax        # 808b300 <L.107>
 8051136:	48 89 c7             	mov    %rax,%rdi
 8051139:	4c 89 d2             	mov    %r10,%rdx
 805113c:	b8 00 00 00 00       	mov    $0x0,%eax
 8051141:	e8 81 c5 ff ff       	callq  804d6c7 <tcc_error>
 8051146:	b8 00 00 00 00       	mov    $0x0,%eax
 805114b:	e8 7a 75 00 00       	callq  80586ca <next>
 8051150:	c9                   	leaveq 
 8051151:	c3                   	retq   

0000000008051152 <expect>:
 8051152:	55                   	push   %rbp
 8051153:	48 89 e5             	mov    %rsp,%rbp
 8051156:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805115d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8051161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051165:	48 89 c6             	mov    %rax,%rsi
 8051168:	48 8d 05 aa a1 03 00 	lea    0x3a1aa(%rip),%rax        # 808b319 <L.108>
 805116f:	48 89 c7             	mov    %rax,%rdi
 8051172:	b8 00 00 00 00       	mov    $0x0,%eax
 8051177:	e8 4b c5 ff ff       	callq  804d6c7 <tcc_error>
 805117c:	c9                   	leaveq 
 805117d:	c3                   	retq   

000000000805117e <cstr_realloc>:
 805117e:	55                   	push   %rbp
 805117f:	48 89 e5             	mov    %rsp,%rbp
 8051182:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8051189:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805118d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8051191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051195:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805119c:	00 00 00 
 805119f:	48 01 c8             	add    %rcx,%rax
 80511a2:	8b 08                	mov    (%rax),%ecx
 80511a4:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 80511a7:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80511aa:	83 f8 00             	cmp    $0x0,%eax
 80511ad:	0f 85 08 00 00 00    	jne    80511bb <cstr_realloc+0x3d>
 80511b3:	b8 08 00 00 00       	mov    $0x8,%eax
 80511b8:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80511bb:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80511be:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80511c1:	39 c8                	cmp    %ecx,%eax
 80511c3:	0f 8d 0b 00 00 00    	jge    80511d4 <cstr_realloc+0x56>
 80511c9:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80511cc:	c1 e0 01             	shl    $0x1,%eax
 80511cf:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80511d2:	eb e7                	jmp    80511bb <cstr_realloc+0x3d>
 80511d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80511d8:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80511df:	00 00 00 
 80511e2:	48 01 c8             	add    %rcx,%rax
 80511e5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80511e8:	48 63 c9             	movslq %ecx,%rcx
 80511eb:	48 89 ca             	mov    %rcx,%rdx
 80511ee:	48 89 d6             	mov    %rdx,%rsi
 80511f1:	48 8b 08             	mov    (%rax),%rcx
 80511f4:	48 89 cf             	mov    %rcx,%rdi
 80511f7:	b8 00 00 00 00       	mov    $0x0,%eax
 80511fc:	e8 1c ae ff ff       	callq  804c01d <tcc_realloc>
 8051201:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051209:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8051210:	00 00 00 
 8051213:	48 01 c8             	add    %rcx,%rax
 8051216:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805121a:	48 89 08             	mov    %rcx,(%rax)
 805121d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051221:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8051228:	00 00 00 
 805122b:	48 01 c8             	add    %rcx,%rax
 805122e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8051231:	89 08                	mov    %ecx,(%rax)
 8051233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051237:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805123e:	00 00 00 
 8051241:	48 01 c8             	add    %rcx,%rax
 8051244:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8051248:	48 89 08             	mov    %rcx,(%rax)
 805124b:	c9                   	leaveq 
 805124c:	c3                   	retq   

000000000805124d <cstr_ccat>:
 805124d:	55                   	push   %rbp
 805124e:	48 89 e5             	mov    %rsp,%rbp
 8051251:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8051258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805125c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8051260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051264:	8b 08                	mov    (%rax),%ecx
 8051266:	83 c1 01             	add    $0x1,%ecx
 8051269:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805126c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051270:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8051277:	00 00 00 
 805127a:	48 01 c8             	add    %rcx,%rax
 805127d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8051280:	8b 10                	mov    (%rax),%edx
 8051282:	39 d1                	cmp    %edx,%ecx
 8051284:	0f 8e 17 00 00 00    	jle    80512a1 <cstr_ccat+0x54>
 805128a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805128d:	48 89 c6             	mov    %rax,%rsi
 8051290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051294:	48 89 c7             	mov    %rax,%rdi
 8051297:	b8 00 00 00 00       	mov    $0x0,%eax
 805129c:	e8 dd fe ff ff       	callq  805117e <cstr_realloc>
 80512a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80512a5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80512ac:	00 00 00 
 80512af:	48 01 c8             	add    %rcx,%rax
 80512b2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80512b5:	83 e9 01             	sub    $0x1,%ecx
 80512b8:	48 63 c9             	movslq %ecx,%rcx
 80512bb:	48 8b 10             	mov    (%rax),%rdx
 80512be:	48 89 c8             	mov    %rcx,%rax
 80512c1:	48 01 c2             	add    %rax,%rdx
 80512c4:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
 80512c8:	88 02                	mov    %al,(%rdx)
 80512ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80512ce:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80512d1:	89 08                	mov    %ecx,(%rax)
 80512d3:	c9                   	leaveq 
 80512d4:	c3                   	retq   

00000000080512d5 <cstr_cat>:
 80512d5:	55                   	push   %rbp
 80512d6:	48 89 e5             	mov    %rsp,%rbp
 80512d9:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80512e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80512e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80512e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80512ec:	0f be 08             	movsbl (%rax),%ecx
 80512ef:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 80512f2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80512f5:	83 f8 00             	cmp    $0x0,%eax
 80512f8:	0f 85 05 00 00 00    	jne    8051303 <cstr_cat+0x2e>
 80512fe:	e9 31 00 00 00       	jmpq   8051334 <cstr_cat+0x5f>
 8051303:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8051306:	48 89 c6             	mov    %rax,%rsi
 8051309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805130d:	48 89 c7             	mov    %rax,%rdi
 8051310:	b8 00 00 00 00       	mov    $0x0,%eax
 8051315:	e8 33 ff ff ff       	callq  805124d <cstr_ccat>
 805131a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805131e:	48 89 c1             	mov    %rax,%rcx
 8051321:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8051328:	00 00 00 
 805132b:	48 01 d0             	add    %rdx,%rax
 805132e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8051332:	eb b4                	jmp    80512e8 <cstr_cat+0x13>
 8051334:	c9                   	leaveq 
 8051335:	c3                   	retq   

0000000008051336 <cstr_wccat>:
 8051336:	55                   	push   %rbp
 8051337:	48 89 e5             	mov    %rsp,%rbp
 805133a:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8051341:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8051345:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8051349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805134d:	8b 08                	mov    (%rax),%ecx
 805134f:	83 c1 04             	add    $0x4,%ecx
 8051352:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8051355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051359:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8051360:	00 00 00 
 8051363:	48 01 c8             	add    %rcx,%rax
 8051366:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8051369:	8b 10                	mov    (%rax),%edx
 805136b:	39 d1                	cmp    %edx,%ecx
 805136d:	0f 8e 17 00 00 00    	jle    805138a <cstr_wccat+0x54>
 8051373:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8051376:	48 89 c6             	mov    %rax,%rsi
 8051379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805137d:	48 89 c7             	mov    %rax,%rdi
 8051380:	b8 00 00 00 00       	mov    $0x0,%eax
 8051385:	e8 f4 fd ff ff       	callq  805117e <cstr_realloc>
 805138a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805138e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8051395:	00 00 00 
 8051398:	48 01 c8             	add    %rcx,%rax
 805139b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805139e:	48 63 c9             	movslq %ecx,%rcx
 80513a1:	48 8b 10             	mov    (%rax),%rdx
 80513a4:	48 89 c8             	mov    %rcx,%rax
 80513a7:	48 01 c2             	add    %rax,%rdx
 80513aa:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 80513b1:	00 00 00 
 80513b4:	48 29 c2             	sub    %rax,%rdx
 80513b7:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80513ba:	89 02                	mov    %eax,(%rdx)
 80513bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80513c0:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80513c3:	89 08                	mov    %ecx,(%rax)
 80513c5:	c9                   	leaveq 
 80513c6:	c3                   	retq   

00000000080513c7 <cstr_new>:
 80513c7:	55                   	push   %rbp
 80513c8:	48 89 e5             	mov    %rsp,%rbp
 80513cb:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80513d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80513d6:	b8 20 00 00 00       	mov    $0x20,%eax
 80513db:	49 89 c2             	mov    %rax,%r10
 80513de:	b8 00 00 00 00       	mov    $0x0,%eax
 80513e3:	48 89 c6             	mov    %rax,%rsi
 80513e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80513ea:	48 89 c7             	mov    %rax,%rdi
 80513ed:	4c 89 d2             	mov    %r10,%rdx
 80513f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80513f5:	e8 b6 5a 03 00       	callq  8086eb0 <memset>
 80513fa:	c9                   	leaveq 
 80513fb:	c3                   	retq   

00000000080513fc <cstr_free>:
 80513fc:	55                   	push   %rbp
 80513fd:	48 89 e5             	mov    %rsp,%rbp
 8051400:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8051407:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805140b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805140f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8051416:	00 00 00 
 8051419:	48 01 c8             	add    %rcx,%rax
 805141c:	48 8b 08             	mov    (%rax),%rcx
 805141f:	48 89 cf             	mov    %rcx,%rdi
 8051422:	b8 00 00 00 00       	mov    $0x0,%eax
 8051427:	e8 0a ab ff ff       	callq  804bf36 <tcc_free>
 805142c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051430:	48 89 c7             	mov    %rax,%rdi
 8051433:	b8 00 00 00 00       	mov    $0x0,%eax
 8051438:	e8 8a ff ff ff       	callq  80513c7 <cstr_new>
 805143d:	c9                   	leaveq 
 805143e:	c3                   	retq   

000000000805143f <add_char>:
 805143f:	55                   	push   %rbp
 8051440:	48 89 e5             	mov    %rsp,%rbp
 8051443:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805144a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805144e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8051452:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8051455:	83 f8 27             	cmp    $0x27,%eax
 8051458:	0f 84 1d 00 00 00    	je     805147b <add_char+0x3c>
 805145e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8051461:	83 f8 22             	cmp    $0x22,%eax
 8051464:	0f 84 11 00 00 00    	je     805147b <add_char+0x3c>
 805146a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805146d:	83 f8 5c             	cmp    $0x5c,%eax
 8051470:	0f 84 05 00 00 00    	je     805147b <add_char+0x3c>
 8051476:	e9 19 00 00 00       	jmpq   8051494 <add_char+0x55>
 805147b:	b8 5c 00 00 00       	mov    $0x5c,%eax
 8051480:	48 89 c6             	mov    %rax,%rsi
 8051483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051487:	48 89 c7             	mov    %rax,%rdi
 805148a:	b8 00 00 00 00       	mov    $0x0,%eax
 805148f:	e8 b9 fd ff ff       	callq  805124d <cstr_ccat>
 8051494:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8051497:	83 f8 20             	cmp    $0x20,%eax
 805149a:	0f 8c 28 00 00 00    	jl     80514c8 <add_char+0x89>
 80514a0:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80514a3:	83 f8 7e             	cmp    $0x7e,%eax
 80514a6:	0f 8f 1c 00 00 00    	jg     80514c8 <add_char+0x89>
 80514ac:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80514af:	48 89 c6             	mov    %rax,%rsi
 80514b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80514b6:	48 89 c7             	mov    %rax,%rdi
 80514b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80514be:	e8 8a fd ff ff       	callq  805124d <cstr_ccat>
 80514c3:	e9 a0 00 00 00       	jmpq   8051568 <add_char+0x129>
 80514c8:	b8 5c 00 00 00       	mov    $0x5c,%eax
 80514cd:	48 89 c6             	mov    %rax,%rsi
 80514d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80514d4:	48 89 c7             	mov    %rax,%rdi
 80514d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80514dc:	e8 6c fd ff ff       	callq  805124d <cstr_ccat>
 80514e1:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80514e4:	83 f8 0a             	cmp    $0xa,%eax
 80514e7:	0f 85 1e 00 00 00    	jne    805150b <add_char+0xcc>
 80514ed:	b8 6e 00 00 00       	mov    $0x6e,%eax
 80514f2:	48 89 c6             	mov    %rax,%rsi
 80514f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80514f9:	48 89 c7             	mov    %rax,%rdi
 80514fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8051501:	e8 47 fd ff ff       	callq  805124d <cstr_ccat>
 8051506:	e9 5d 00 00 00       	jmpq   8051568 <add_char+0x129>
 805150b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805150e:	c1 f8 06             	sar    $0x6,%eax
 8051511:	83 e0 07             	and    $0x7,%eax
 8051514:	83 c0 30             	add    $0x30,%eax
 8051517:	48 89 c6             	mov    %rax,%rsi
 805151a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805151e:	48 89 c7             	mov    %rax,%rdi
 8051521:	b8 00 00 00 00       	mov    $0x0,%eax
 8051526:	e8 22 fd ff ff       	callq  805124d <cstr_ccat>
 805152b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805152e:	c1 f8 03             	sar    $0x3,%eax
 8051531:	83 e0 07             	and    $0x7,%eax
 8051534:	83 c0 30             	add    $0x30,%eax
 8051537:	48 89 c6             	mov    %rax,%rsi
 805153a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805153e:	48 89 c7             	mov    %rax,%rdi
 8051541:	b8 00 00 00 00       	mov    $0x0,%eax
 8051546:	e8 02 fd ff ff       	callq  805124d <cstr_ccat>
 805154b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805154e:	83 e0 07             	and    $0x7,%eax
 8051551:	83 c0 30             	add    $0x30,%eax
 8051554:	48 89 c6             	mov    %rax,%rsi
 8051557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805155b:	48 89 c7             	mov    %rax,%rdi
 805155e:	b8 00 00 00 00       	mov    $0x0,%eax
 8051563:	e8 e5 fc ff ff       	callq  805124d <cstr_ccat>
 8051568:	c9                   	leaveq 
 8051569:	c3                   	retq   

000000000805156a <tok_alloc_new>:
 805156a:	55                   	push   %rbp
 805156b:	48 89 e5             	mov    %rsp,%rbp
 805156e:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8051575:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8051579:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805157d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8051581:	48 8b 05 b8 c9 03 00 	mov    0x3c9b8(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8051588:	8b 00                	mov    (%rax),%eax
 805158a:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 8051590:	0f 8c 14 00 00 00    	jl     80515aa <tok_alloc_new+0x40>
 8051596:	48 8d 05 88 9d 03 00 	lea    0x39d88(%rip),%rax        # 808b325 <L.109>
 805159d:	48 89 c7             	mov    %rax,%rdi
 80515a0:	b8 00 00 00 00       	mov    $0x0,%eax
 80515a5:	e8 1d c1 ff ff       	callq  804d6c7 <tcc_error>
 80515aa:	48 8b 05 8f c9 03 00 	mov    0x3c98f(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 80515b1:	8b 00                	mov    (%rax),%eax
 80515b3:	81 e8 00 01 00 00    	sub    $0x100,%eax
 80515b9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 80515bc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 80515bf:	b9 00 02 00 00       	mov    $0x200,%ecx
 80515c4:	99                   	cltd   
 80515c5:	f7 f9                	idiv   %ecx
 80515c7:	83 fa 00             	cmp    $0x0,%edx
 80515ca:	0f 85 3b 00 00 00    	jne    805160b <tok_alloc_new+0xa1>
 80515d0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 80515d3:	81 c0 00 02 00 00    	add    $0x200,%eax
 80515d9:	c1 e0 03             	shl    $0x3,%eax
 80515dc:	48 89 c1             	mov    %rax,%rcx
 80515df:	48 89 ce             	mov    %rcx,%rsi
 80515e2:	48 8b 05 5f c9 03 00 	mov    0x3c95f(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 80515e9:	48 8b 00             	mov    (%rax),%rax
 80515ec:	48 89 c7             	mov    %rax,%rdi
 80515ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80515f4:	e8 24 aa ff ff       	callq  804c01d <tcc_realloc>
 80515f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80515fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8051601:	4c 8b 1d 40 c9 03 00 	mov    0x3c940(%rip),%r11        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8051608:	49 89 03             	mov    %rax,(%r11)
 805160b:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805160e:	83 c0 38             	add    $0x38,%eax
 8051611:	48 89 c1             	mov    %rax,%rcx
 8051614:	48 89 cf             	mov    %rcx,%rdi
 8051617:	b8 00 00 00 00       	mov    $0x0,%eax
 805161c:	e8 37 a9 ff ff       	callq  804bf58 <tcc_malloc>
 8051621:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051625:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8051628:	48 63 c0             	movslq %eax,%rax
 805162b:	48 89 c1             	mov    %rax,%rcx
 805162e:	48 c1 e1 03          	shl    $0x3,%rcx
 8051632:	48 8b 05 0f c9 03 00 	mov    0x3c90f(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8051639:	48 8b 00             	mov    (%rax),%rax
 805163c:	48 89 ca             	mov    %rcx,%rdx
 805163f:	48 01 d0             	add    %rdx,%rax
 8051642:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8051646:	48 89 08             	mov    %rcx,(%rax)
 8051649:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805164d:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8051654:	00 00 00 
 8051657:	48 01 c8             	add    %rcx,%rax
 805165a:	48 8b 0d df c8 03 00 	mov    0x3c8df(%rip),%rcx        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8051661:	8b 09                	mov    (%rcx),%ecx
 8051663:	48 89 ca             	mov    %rcx,%rdx
 8051666:	83 c1 01             	add    $0x1,%ecx
 8051669:	4c 8b 1d d0 c8 03 00 	mov    0x3c8d0(%rip),%r11        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8051670:	41 89 0b             	mov    %ecx,(%r11)
 8051673:	89 10                	mov    %edx,(%rax)
 8051675:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051679:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8051680:	00 00 00 
 8051683:	48 01 c8             	add    %rcx,%rax
 8051686:	b9 00 00 00 00       	mov    $0x0,%ecx
 805168b:	48 89 08             	mov    %rcx,(%rax)
 805168e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051692:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8051699:	00 00 00 
 805169c:	48 01 c8             	add    %rcx,%rax
 805169f:	b9 00 00 00 00       	mov    $0x0,%ecx
 80516a4:	48 89 08             	mov    %rcx,(%rax)
 80516a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80516ab:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80516b2:	00 00 00 
 80516b5:	48 01 c8             	add    %rcx,%rax
 80516b8:	b9 00 00 00 00       	mov    $0x0,%ecx
 80516bd:	48 89 08             	mov    %rcx,(%rax)
 80516c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80516c4:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80516cb:	00 00 00 
 80516ce:	48 01 c8             	add    %rcx,%rax
 80516d1:	b9 00 00 00 00       	mov    $0x0,%ecx
 80516d6:	48 89 08             	mov    %rcx,(%rax)
 80516d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80516dd:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 80516e4:	00 00 00 
 80516e7:	48 01 c8             	add    %rcx,%rax
 80516ea:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 80516ed:	89 08                	mov    %ecx,(%rax)
 80516ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80516f3:	b9 00 00 00 00       	mov    $0x0,%ecx
 80516f8:	48 89 08             	mov    %rcx,(%rax)
 80516fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80516ff:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8051706:	00 00 00 
 8051709:	48 01 c8             	add    %rcx,%rax
 805170c:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805170f:	49 89 ca             	mov    %rcx,%r10
 8051712:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8051716:	48 89 ce             	mov    %rcx,%rsi
 8051719:	48 89 c7             	mov    %rax,%rdi
 805171c:	4c 89 d2             	mov    %r10,%rdx
 805171f:	b8 00 00 00 00       	mov    $0x0,%eax
 8051724:	e8 47 55 03 00       	callq  8086c70 <memcpy>
 8051729:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805172d:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8051734:	00 00 00 
 8051737:	48 01 c8             	add    %rcx,%rax
 805173a:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805173d:	48 63 c9             	movslq %ecx,%rcx
 8051740:	48 89 ca             	mov    %rcx,%rdx
 8051743:	48 01 d0             	add    %rdx,%rax
 8051746:	b9 00 00 00 00       	mov    $0x0,%ecx
 805174b:	88 08                	mov    %cl,(%rax)
 805174d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051751:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8051755:	48 89 08             	mov    %rcx,(%rax)
 8051758:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805175c:	e9 00 00 00 00       	jmpq   8051761 <tok_alloc_new+0x1f7>
 8051761:	c9                   	leaveq 
 8051762:	c3                   	retq   

0000000008051763 <tok_alloc>:
 8051763:	55                   	push   %rbp
 8051764:	48 89 e5             	mov    %rsp,%rbp
 8051767:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805176e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8051772:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8051776:	b8 01 00 00 00       	mov    $0x1,%eax
 805177b:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805177e:	b8 00 00 00 00       	mov    $0x0,%eax
 8051783:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051786:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051789:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805178c:	39 c8                	cmp    %ecx,%eax
 805178e:	0f 8d 41 00 00 00    	jge    80517d5 <tok_alloc+0x72>
 8051794:	e9 0e 00 00 00       	jmpq   80517a7 <tok_alloc+0x44>
 8051799:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805179c:	48 89 c1             	mov    %rax,%rcx
 805179f:	83 c0 01             	add    $0x1,%eax
 80517a2:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80517a5:	eb df                	jmp    8051786 <tok_alloc+0x23>
 80517a7:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80517aa:	b9 07 01 00 00       	mov    $0x107,%ecx
 80517af:	48 0f af c1          	imul   %rcx,%rax
 80517b3:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 80517b6:	48 63 c9             	movslq %ecx,%rcx
 80517b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 80517bd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80517c1:	48 89 c8             	mov    %rcx,%rax
 80517c4:	48 01 c2             	add    %rax,%rdx
 80517c7:	8b 45 d0             	mov    -0x30(%rbp),%eax
 80517ca:	0f b6 0a             	movzbl (%rdx),%ecx
 80517cd:	48 01 c8             	add    %rcx,%rax
 80517d0:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80517d3:	eb c4                	jmp    8051799 <tok_alloc+0x36>
 80517d5:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80517d8:	81 e0 ff 1f 00 00    	and    $0x1fff,%eax
 80517de:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80517e1:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80517e4:	48 89 c1             	mov    %rax,%rcx
 80517e7:	48 c1 e1 03          	shl    $0x3,%rcx
 80517eb:	48 8d 05 8e ca 03 00 	lea    0x3ca8e(%rip),%rax        # 808e280 <hash_ident>
 80517f2:	48 89 ca             	mov    %rcx,%rdx
 80517f5:	48 01 d0             	add    %rdx,%rax
 80517f8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80517fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051800:	48 8b 08             	mov    (%rax),%rcx
 8051803:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8051807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805180b:	85 c0                	test   %eax,%eax
 805180d:	0f 84 05 00 00 00    	je     8051818 <tok_alloc+0xb5>
 8051813:	e9 05 00 00 00       	jmpq   805181d <tok_alloc+0xba>
 8051818:	e9 6f 00 00 00       	jmpq   805188c <tok_alloc+0x129>
 805181d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051821:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8051828:	00 00 00 
 805182b:	48 01 c8             	add    %rcx,%rax
 805182e:	8b 08                	mov    (%rax),%ecx
 8051830:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8051833:	39 c1                	cmp    %eax,%ecx
 8051835:	0f 85 44 00 00 00    	jne    805187f <tok_alloc+0x11c>
 805183b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805183f:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8051846:	00 00 00 
 8051849:	48 01 c8             	add    %rcx,%rax
 805184c:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805184f:	49 89 ca             	mov    %rcx,%r10
 8051852:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8051856:	48 89 ce             	mov    %rcx,%rsi
 8051859:	48 89 c7             	mov    %rax,%rdi
 805185c:	4c 89 d2             	mov    %r10,%rdx
 805185f:	b8 00 00 00 00       	mov    $0x0,%eax
 8051864:	e8 87 53 03 00       	callq  8086bf0 <memcmp>
 8051869:	85 c0                	test   %eax,%eax
 805186b:	0f 84 05 00 00 00    	je     8051876 <tok_alloc+0x113>
 8051871:	e9 09 00 00 00       	jmpq   805187f <tok_alloc+0x11c>
 8051876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805187a:	e9 33 00 00 00       	jmpq   80518b2 <tok_alloc+0x14f>
 805187f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051883:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051887:	e9 70 ff ff ff       	jmpq   80517fc <tok_alloc+0x99>
 805188c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805188f:	49 89 c2             	mov    %rax,%r10
 8051892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051896:	48 89 c6             	mov    %rax,%rsi
 8051899:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805189d:	48 89 c7             	mov    %rax,%rdi
 80518a0:	4c 89 d2             	mov    %r10,%rdx
 80518a3:	b8 00 00 00 00       	mov    $0x0,%eax
 80518a8:	e8 bd fc ff ff       	callq  805156a <tok_alloc_new>
 80518ad:	e9 00 00 00 00       	jmpq   80518b2 <tok_alloc+0x14f>
 80518b2:	c9                   	leaveq 
 80518b3:	c3                   	retq   

00000000080518b4 <get_tok_str>:
 80518b4:	55                   	push   %rbp
 80518b5:	48 89 e5             	mov    %rsp,%rbp
 80518b8:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 80518bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80518c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80518c7:	48 8d 05 ba d2 04 00 	lea    0x4d2ba(%rip),%rax        # 809eb88 <cstr_buf>
 80518ce:	48 89 c7             	mov    %rax,%rdi
 80518d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80518d6:	e8 21 fb ff ff       	callq  80513fc <cstr_free>
 80518db:	48 8d 05 a0 ce 04 00 	lea    0x4cea0(%rip),%rax        # 809e782 <buf>
 80518e2:	4c 8b 1d c7 c6 03 00 	mov    0x3c6c7(%rip),%r11        # 808dfb0 <_GLOBAL_OFFSET_TABLE_+0x330>
 80518e9:	49 81 c3 08 00 00 00 	add    $0x8,%r11
 80518f0:	49 89 03             	mov    %rax,(%r11)
 80518f3:	b8 01 04 00 00       	mov    $0x401,%eax
 80518f8:	4c 8b 1d b1 c6 03 00 	mov    0x3c6b1(%rip),%r11        # 808dfb0 <_GLOBAL_OFFSET_TABLE_+0x330>
 80518ff:	49 81 c3 10 00 00 00 	add    $0x10,%r11
 8051906:	41 89 03             	mov    %eax,(%r11)
 8051909:	48 8d 05 72 ce 04 00 	lea    0x4ce72(%rip),%rax        # 809e782 <buf>
 8051910:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051914:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051917:	e9 05 00 00 00       	jmpq   8051921 <get_tok_str+0x6d>
 805191c:	e9 0c 00 00 00       	jmpq   805192d <get_tok_str+0x79>
 8051921:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 8051927:	0f 85 05 00 00 00    	jne    8051932 <get_tok_str+0x7e>
 805192d:	e9 0c 00 00 00       	jmpq   805193e <get_tok_str+0x8a>
 8051932:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 8051938:	0f 85 31 00 00 00    	jne    805196f <get_tok_str+0xbb>
 805193e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8051942:	8b 08                	mov    (%rax),%ecx
 8051944:	49 89 ca             	mov    %rcx,%r10
 8051947:	48 8d 05 e3 99 03 00 	lea    0x399e3(%rip),%rax        # 808b331 <L.110>
 805194e:	48 89 c6             	mov    %rax,%rsi
 8051951:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051955:	48 89 c7             	mov    %rax,%rdi
 8051958:	4c 89 d2             	mov    %r10,%rdx
 805195b:	b8 00 00 00 00       	mov    $0x0,%eax
 8051960:	e8 8b 62 03 00       	callq  8087bf0 <__preinit_array_end+0x150>
 8051965:	e9 c4 05 00 00       	jmpq   8051f2e <get_tok_str+0x67a>
 805196a:	e9 0c 00 00 00       	jmpq   805197b <get_tok_str+0xc7>
 805196f:	81 f8 c9 00 00 00    	cmp    $0xc9,%eax
 8051975:	0f 85 05 00 00 00    	jne    8051980 <get_tok_str+0xcc>
 805197b:	e9 0c 00 00 00       	jmpq   805198c <get_tok_str+0xd8>
 8051980:	81 f8 ca 00 00 00    	cmp    $0xca,%eax
 8051986:	0f 85 32 00 00 00    	jne    80519be <get_tok_str+0x10a>
 805198c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8051990:	48 8b 08             	mov    (%rax),%rcx
 8051993:	49 89 ca             	mov    %rcx,%r10
 8051996:	48 8d 05 97 99 03 00 	lea    0x39997(%rip),%rax        # 808b334 <L.111>
 805199d:	48 89 c6             	mov    %rax,%rsi
 80519a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80519a4:	48 89 c7             	mov    %rax,%rdi
 80519a7:	4c 89 d2             	mov    %r10,%rdx
 80519aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80519af:	e8 3c 62 03 00       	callq  8087bf0 <__preinit_array_end+0x150>
 80519b4:	e9 75 05 00 00       	jmpq   8051f2e <get_tok_str+0x67a>
 80519b9:	e9 0c 00 00 00       	jmpq   80519ca <get_tok_str+0x116>
 80519be:	81 f8 b7 00 00 00    	cmp    $0xb7,%eax
 80519c4:	0f 85 21 00 00 00    	jne    80519eb <get_tok_str+0x137>
 80519ca:	b8 4c 00 00 00       	mov    $0x4c,%eax
 80519cf:	48 89 c6             	mov    %rax,%rsi
 80519d2:	48 8d 05 af d1 04 00 	lea    0x4d1af(%rip),%rax        # 809eb88 <cstr_buf>
 80519d9:	48 89 c7             	mov    %rax,%rdi
 80519dc:	b8 00 00 00 00       	mov    $0x0,%eax
 80519e1:	e8 67 f8 ff ff       	callq  805124d <cstr_ccat>
 80519e6:	e9 0c 00 00 00       	jmpq   80519f7 <get_tok_str+0x143>
 80519eb:	81 f8 b4 00 00 00    	cmp    $0xb4,%eax
 80519f1:	0f 85 7b 00 00 00    	jne    8051a72 <get_tok_str+0x1be>
 80519f7:	b8 27 00 00 00       	mov    $0x27,%eax
 80519fc:	48 89 c6             	mov    %rax,%rsi
 80519ff:	48 8d 05 82 d1 04 00 	lea    0x4d182(%rip),%rax        # 809eb88 <cstr_buf>
 8051a06:	48 89 c7             	mov    %rax,%rdi
 8051a09:	b8 00 00 00 00       	mov    $0x0,%eax
 8051a0e:	e8 3a f8 ff ff       	callq  805124d <cstr_ccat>
 8051a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8051a17:	8b 08                	mov    (%rax),%ecx
 8051a19:	48 89 ce             	mov    %rcx,%rsi
 8051a1c:	48 8d 05 65 d1 04 00 	lea    0x4d165(%rip),%rax        # 809eb88 <cstr_buf>
 8051a23:	48 89 c7             	mov    %rax,%rdi
 8051a26:	b8 00 00 00 00       	mov    $0x0,%eax
 8051a2b:	e8 0f fa ff ff       	callq  805143f <add_char>
 8051a30:	b8 27 00 00 00       	mov    $0x27,%eax
 8051a35:	48 89 c6             	mov    %rax,%rsi
 8051a38:	48 8d 05 49 d1 04 00 	lea    0x4d149(%rip),%rax        # 809eb88 <cstr_buf>
 8051a3f:	48 89 c7             	mov    %rax,%rdi
 8051a42:	b8 00 00 00 00       	mov    $0x0,%eax
 8051a47:	e8 01 f8 ff ff       	callq  805124d <cstr_ccat>
 8051a4c:	b8 00 00 00 00       	mov    $0x0,%eax
 8051a51:	48 89 c6             	mov    %rax,%rsi
 8051a54:	48 8d 05 2d d1 04 00 	lea    0x4d12d(%rip),%rax        # 809eb88 <cstr_buf>
 8051a5b:	48 89 c7             	mov    %rax,%rdi
 8051a5e:	b8 00 00 00 00       	mov    $0x0,%eax
 8051a63:	e8 e5 f7 ff ff       	callq  805124d <cstr_ccat>
 8051a68:	e9 c1 04 00 00       	jmpq   8051f2e <get_tok_str+0x67a>
 8051a6d:	e9 0c 00 00 00       	jmpq   8051a7e <get_tok_str+0x1ca>
 8051a72:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 8051a78:	0f 85 a2 00 00 00    	jne    8051b20 <get_tok_str+0x26c>
 8051a7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8051a82:	48 8b 08             	mov    (%rax),%rcx
 8051a85:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8051a89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051a8d:	8b 08                	mov    (%rax),%ecx
 8051a8f:	83 e9 01             	sub    $0x1,%ecx
 8051a92:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 8051a95:	b8 00 00 00 00       	mov    $0x0,%eax
 8051a9a:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051a9d:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051aa0:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8051aa3:	39 c8                	cmp    %ecx,%eax
 8051aa5:	0f 8d 4f 00 00 00    	jge    8051afa <get_tok_str+0x246>
 8051aab:	e9 0e 00 00 00       	jmpq   8051abe <get_tok_str+0x20a>
 8051ab0:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051ab3:	48 89 c1             	mov    %rax,%rcx
 8051ab6:	83 c0 01             	add    $0x1,%eax
 8051ab9:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051abc:	eb df                	jmp    8051a9d <get_tok_str+0x1e9>
 8051abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051ac2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8051ac9:	00 00 00 
 8051acc:	48 01 c8             	add    %rcx,%rax
 8051acf:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8051ad2:	48 63 c9             	movslq %ecx,%rcx
 8051ad5:	48 8b 10             	mov    (%rax),%rdx
 8051ad8:	48 89 c8             	mov    %rcx,%rax
 8051adb:	48 01 c2             	add    %rax,%rdx
 8051ade:	0f b6 02             	movzbl (%rdx),%eax
 8051ae1:	48 89 c6             	mov    %rax,%rsi
 8051ae4:	48 8d 05 9d d0 04 00 	lea    0x4d09d(%rip),%rax        # 809eb88 <cstr_buf>
 8051aeb:	48 89 c7             	mov    %rax,%rdi
 8051aee:	b8 00 00 00 00       	mov    $0x0,%eax
 8051af3:	e8 47 f9 ff ff       	callq  805143f <add_char>
 8051af8:	eb b6                	jmp    8051ab0 <get_tok_str+0x1fc>
 8051afa:	b8 00 00 00 00       	mov    $0x0,%eax
 8051aff:	48 89 c6             	mov    %rax,%rsi
 8051b02:	48 8d 05 7f d0 04 00 	lea    0x4d07f(%rip),%rax        # 809eb88 <cstr_buf>
 8051b09:	48 89 c7             	mov    %rax,%rdi
 8051b0c:	b8 00 00 00 00       	mov    $0x0,%eax
 8051b11:	e8 37 f7 ff ff       	callq  805124d <cstr_ccat>
 8051b16:	e9 13 04 00 00       	jmpq   8051f2e <get_tok_str+0x67a>
 8051b1b:	e9 0c 00 00 00       	jmpq   8051b2c <get_tok_str+0x278>
 8051b20:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 8051b26:	0f 85 21 00 00 00    	jne    8051b4d <get_tok_str+0x299>
 8051b2c:	b8 4c 00 00 00       	mov    $0x4c,%eax
 8051b31:	48 89 c6             	mov    %rax,%rsi
 8051b34:	48 8d 05 4d d0 04 00 	lea    0x4d04d(%rip),%rax        # 809eb88 <cstr_buf>
 8051b3b:	48 89 c7             	mov    %rax,%rdi
 8051b3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8051b43:	e8 05 f7 ff ff       	callq  805124d <cstr_ccat>
 8051b48:	e9 0c 00 00 00       	jmpq   8051b59 <get_tok_str+0x2a5>
 8051b4d:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8051b53:	0f 85 68 01 00 00    	jne    8051cc1 <get_tok_str+0x40d>
 8051b59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8051b5d:	48 8b 08             	mov    (%rax),%rcx
 8051b60:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8051b64:	b8 22 00 00 00       	mov    $0x22,%eax
 8051b69:	48 89 c6             	mov    %rax,%rsi
 8051b6c:	48 8d 05 15 d0 04 00 	lea    0x4d015(%rip),%rax        # 809eb88 <cstr_buf>
 8051b73:	48 89 c7             	mov    %rax,%rdi
 8051b76:	b8 00 00 00 00       	mov    $0x0,%eax
 8051b7b:	e8 cd f6 ff ff       	callq  805124d <cstr_ccat>
 8051b80:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051b83:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8051b89:	0f 85 76 00 00 00    	jne    8051c05 <get_tok_str+0x351>
 8051b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051b93:	8b 08                	mov    (%rax),%ecx
 8051b95:	83 e9 01             	sub    $0x1,%ecx
 8051b98:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 8051b9b:	b8 00 00 00 00       	mov    $0x0,%eax
 8051ba0:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051ba3:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051ba6:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8051ba9:	39 c8                	cmp    %ecx,%eax
 8051bab:	0f 8d 4f 00 00 00    	jge    8051c00 <get_tok_str+0x34c>
 8051bb1:	e9 0e 00 00 00       	jmpq   8051bc4 <get_tok_str+0x310>
 8051bb6:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051bb9:	48 89 c1             	mov    %rax,%rcx
 8051bbc:	83 c0 01             	add    $0x1,%eax
 8051bbf:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051bc2:	eb df                	jmp    8051ba3 <get_tok_str+0x2ef>
 8051bc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051bc8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8051bcf:	00 00 00 
 8051bd2:	48 01 c8             	add    %rcx,%rax
 8051bd5:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8051bd8:	48 63 c9             	movslq %ecx,%rcx
 8051bdb:	48 8b 10             	mov    (%rax),%rdx
 8051bde:	48 89 c8             	mov    %rcx,%rax
 8051be1:	48 01 c2             	add    %rax,%rdx
 8051be4:	0f b6 02             	movzbl (%rdx),%eax
 8051be7:	48 89 c6             	mov    %rax,%rsi
 8051bea:	48 8d 05 97 cf 04 00 	lea    0x4cf97(%rip),%rax        # 809eb88 <cstr_buf>
 8051bf1:	48 89 c7             	mov    %rax,%rdi
 8051bf4:	b8 00 00 00 00       	mov    $0x0,%eax
 8051bf9:	e8 41 f8 ff ff       	callq  805143f <add_char>
 8051bfe:	eb b6                	jmp    8051bb6 <get_tok_str+0x302>
 8051c00:	e9 7a 00 00 00       	jmpq   8051c7f <get_tok_str+0x3cb>
 8051c05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051c09:	8b 08                	mov    (%rax),%ecx
 8051c0b:	c1 e9 02             	shr    $0x2,%ecx
 8051c0e:	83 e9 01             	sub    $0x1,%ecx
 8051c11:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 8051c14:	b8 00 00 00 00       	mov    $0x0,%eax
 8051c19:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051c1c:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051c1f:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8051c22:	39 c8                	cmp    %ecx,%eax
 8051c24:	0f 8d 55 00 00 00    	jge    8051c7f <get_tok_str+0x3cb>
 8051c2a:	e9 0e 00 00 00       	jmpq   8051c3d <get_tok_str+0x389>
 8051c2f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8051c32:	48 89 c1             	mov    %rax,%rcx
 8051c35:	83 c0 01             	add    $0x1,%eax
 8051c38:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8051c3b:	eb df                	jmp    8051c1c <get_tok_str+0x368>
 8051c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8051c41:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8051c48:	00 00 00 
 8051c4b:	48 01 c8             	add    %rcx,%rax
 8051c4e:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8051c51:	48 63 c9             	movslq %ecx,%rcx
 8051c54:	48 89 ca             	mov    %rcx,%rdx
 8051c57:	48 c1 e2 02          	shl    $0x2,%rdx
 8051c5b:	48 8b 08             	mov    (%rax),%rcx
 8051c5e:	48 89 d0             	mov    %rdx,%rax
 8051c61:	48 01 c1             	add    %rax,%rcx
 8051c64:	8b 01                	mov    (%rcx),%eax
 8051c66:	48 89 c6             	mov    %rax,%rsi
 8051c69:	48 8d 05 18 cf 04 00 	lea    0x4cf18(%rip),%rax        # 809eb88 <cstr_buf>
 8051c70:	48 89 c7             	mov    %rax,%rdi
 8051c73:	b8 00 00 00 00       	mov    $0x0,%eax
 8051c78:	e8 c2 f7 ff ff       	callq  805143f <add_char>
 8051c7d:	eb b0                	jmp    8051c2f <get_tok_str+0x37b>
 8051c7f:	b8 22 00 00 00       	mov    $0x22,%eax
 8051c84:	48 89 c6             	mov    %rax,%rsi
 8051c87:	48 8d 05 fa ce 04 00 	lea    0x4cefa(%rip),%rax        # 809eb88 <cstr_buf>
 8051c8e:	48 89 c7             	mov    %rax,%rdi
 8051c91:	b8 00 00 00 00       	mov    $0x0,%eax
 8051c96:	e8 b2 f5 ff ff       	callq  805124d <cstr_ccat>
 8051c9b:	b8 00 00 00 00       	mov    $0x0,%eax
 8051ca0:	48 89 c6             	mov    %rax,%rsi
 8051ca3:	48 8d 05 de ce 04 00 	lea    0x4cede(%rip),%rax        # 809eb88 <cstr_buf>
 8051caa:	48 89 c7             	mov    %rax,%rdi
 8051cad:	b8 00 00 00 00       	mov    $0x0,%eax
 8051cb2:	e8 96 f5 ff ff       	callq  805124d <cstr_ccat>
 8051cb7:	e9 72 02 00 00       	jmpq   8051f2e <get_tok_str+0x67a>
 8051cbc:	e9 0c 00 00 00       	jmpq   8051ccd <get_tok_str+0x419>
 8051cc1:	81 f8 9c 00 00 00    	cmp    $0x9c,%eax
 8051cc7:	0f 85 12 00 00 00    	jne    8051cdf <get_tok_str+0x42b>
 8051ccd:	b8 3c 00 00 00       	mov    $0x3c,%eax
 8051cd2:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8051cd5:	e9 85 01 00 00       	jmpq   8051e5f <get_tok_str+0x5ab>
 8051cda:	e9 0c 00 00 00       	jmpq   8051ceb <get_tok_str+0x437>
 8051cdf:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 8051ce5:	0f 85 12 00 00 00    	jne    8051cfd <get_tok_str+0x449>
 8051ceb:	b8 3e 00 00 00       	mov    $0x3e,%eax
 8051cf0:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8051cf3:	e9 67 01 00 00       	jmpq   8051e5f <get_tok_str+0x5ab>
 8051cf8:	e9 0c 00 00 00       	jmpq   8051d09 <get_tok_str+0x455>
 8051cfd:	81 f8 cc 00 00 00    	cmp    $0xcc,%eax
 8051d03:	0f 85 25 00 00 00    	jne    8051d2e <get_tok_str+0x47a>
 8051d09:	48 8d 05 28 96 03 00 	lea    0x39628(%rip),%rax        # 808b338 <L.112>
 8051d10:	48 89 c6             	mov    %rax,%rsi
 8051d13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051d17:	48 89 c7             	mov    %rax,%rdi
 8051d1a:	b8 00 00 00 00       	mov    $0x0,%eax
 8051d1f:	e8 3c 55 03 00       	callq  8087260 <strcpy>
 8051d24:	e9 11 02 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051d29:	e9 0c 00 00 00       	jmpq   8051d3a <get_tok_str+0x486>
 8051d2e:	81 f8 81 00 00 00    	cmp    $0x81,%eax
 8051d34:	0f 85 25 00 00 00    	jne    8051d5f <get_tok_str+0x4ab>
 8051d3a:	48 8d 05 fb 95 03 00 	lea    0x395fb(%rip),%rax        # 808b33c <L.113>
 8051d41:	48 89 c6             	mov    %rax,%rsi
 8051d44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051d48:	48 89 c7             	mov    %rax,%rdi
 8051d4b:	b8 00 00 00 00       	mov    $0x0,%eax
 8051d50:	e8 0b 55 03 00       	callq  8087260 <strcpy>
 8051d55:	e9 e0 01 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051d5a:	e9 0c 00 00 00       	jmpq   8051d6b <get_tok_str+0x4b7>
 8051d5f:	81 f8 82 00 00 00    	cmp    $0x82,%eax
 8051d65:	0f 85 20 00 00 00    	jne    8051d8b <get_tok_str+0x4d7>
 8051d6b:	48 8d 05 ce 95 03 00 	lea    0x395ce(%rip),%rax        # 808b340 <L.114>
 8051d72:	48 89 c6             	mov    %rax,%rsi
 8051d75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051d79:	48 89 c7             	mov    %rax,%rdi
 8051d7c:	b8 00 00 00 00       	mov    $0x0,%eax
 8051d81:	e8 da 54 03 00       	callq  8087260 <strcpy>
 8051d86:	e9 af 01 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051d8b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051d8e:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8051d94:	0f 8d f3 00 00 00    	jge    8051e8d <get_tok_str+0x5d9>
 8051d9a:	48 8d 05 1f 95 03 00 	lea    0x3951f(%rip),%rax        # 808b2c0 <tok_two_chars>
 8051da1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8051da5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8051da9:	0f b6 08             	movzbl (%rax),%ecx
 8051dac:	85 c9                	test   %ecx,%ecx
 8051dae:	0f 84 ab 00 00 00    	je     8051e5f <get_tok_str+0x5ab>
 8051db4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8051db8:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 8051dbf:	00 00 00 
 8051dc2:	48 01 c8             	add    %rcx,%rax
 8051dc5:	0f b6 08             	movzbl (%rax),%ecx
 8051dc8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051dcb:	39 c1                	cmp    %eax,%ecx
 8051dcd:	0f 85 72 00 00 00    	jne    8051e45 <get_tok_str+0x591>
 8051dd3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051dd7:	48 89 c1             	mov    %rax,%rcx
 8051dda:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8051de1:	00 00 00 
 8051de4:	48 01 d0             	add    %rdx,%rax
 8051de7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051deb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8051def:	0f b6 10             	movzbl (%rax),%edx
 8051df2:	c1 e2 18             	shl    $0x18,%edx
 8051df5:	c1 fa 18             	sar    $0x18,%edx
 8051df8:	88 11                	mov    %dl,(%rcx)
 8051dfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051dfe:	48 89 c1             	mov    %rax,%rcx
 8051e01:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8051e08:	00 00 00 
 8051e0b:	48 01 d0             	add    %rdx,%rax
 8051e0e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051e12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8051e16:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8051e1d:	00 00 00 
 8051e20:	48 01 d0             	add    %rdx,%rax
 8051e23:	0f b6 10             	movzbl (%rax),%edx
 8051e26:	c1 e2 18             	shl    $0x18,%edx
 8051e29:	c1 fa 18             	sar    $0x18,%edx
 8051e2c:	88 11                	mov    %dl,(%rcx)
 8051e2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051e32:	b9 00 00 00 00       	mov    $0x0,%ecx
 8051e37:	88 08                	mov    %cl,(%rax)
 8051e39:	48 8d 05 42 c9 04 00 	lea    0x4c942(%rip),%rax        # 809e782 <buf>
 8051e40:	e9 f5 00 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051e45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8051e49:	48 b9 03 00 00 00 00 	movabs $0x3,%rcx
 8051e50:	00 00 00 
 8051e53:	48 01 c8             	add    %rcx,%rax
 8051e56:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8051e5a:	e9 46 ff ff ff       	jmpq   8051da5 <get_tok_str+0x4f1>
 8051e5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051e63:	48 89 c1             	mov    %rax,%rcx
 8051e66:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8051e6d:	00 00 00 
 8051e70:	48 01 d0             	add    %rdx,%rax
 8051e73:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8051e77:	0f be 45 f8          	movsbl -0x8(%rbp),%eax
 8051e7b:	88 01                	mov    %al,(%rcx)
 8051e7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051e81:	b9 00 00 00 00       	mov    $0x0,%ecx
 8051e86:	88 08                	mov    %cl,(%rax)
 8051e88:	e9 9c 00 00 00       	jmpq   8051f29 <get_tok_str+0x675>
 8051e8d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051e90:	48 8b 0d a9 c0 03 00 	mov    0x3c0a9(%rip),%rcx        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8051e97:	8b 09                	mov    (%rcx),%ecx
 8051e99:	39 c8                	cmp    %ecx,%eax
 8051e9b:	0f 8d 40 00 00 00    	jge    8051ee1 <get_tok_str+0x62d>
 8051ea1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051ea4:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8051eaa:	48 63 c0             	movslq %eax,%rax
 8051ead:	48 89 c1             	mov    %rax,%rcx
 8051eb0:	48 c1 e1 03          	shl    $0x3,%rcx
 8051eb4:	48 8b 05 8d c0 03 00 	mov    0x3c08d(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8051ebb:	48 8b 00             	mov    (%rax),%rax
 8051ebe:	48 89 ca             	mov    %rcx,%rdx
 8051ec1:	48 01 d0             	add    %rdx,%rax
 8051ec4:	48 8b 08             	mov    (%rax),%rcx
 8051ec7:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 8051ece:	00 00 00 
 8051ed1:	48 01 c1             	add    %rax,%rcx
 8051ed4:	48 89 c8             	mov    %rcx,%rax
 8051ed7:	e9 5e 00 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051edc:	e9 48 00 00 00       	jmpq   8051f29 <get_tok_str+0x675>
 8051ee1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051ee4:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 8051eea:	0f 8c 2f 00 00 00    	jl     8051f1f <get_tok_str+0x66b>
 8051ef0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8051ef3:	81 e8 00 00 00 10    	sub    $0x10000000,%eax
 8051ef9:	49 89 c2             	mov    %rax,%r10
 8051efc:	48 8d 05 41 94 03 00 	lea    0x39441(%rip),%rax        # 808b344 <L.115>
 8051f03:	48 89 c6             	mov    %rax,%rsi
 8051f06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8051f0a:	48 89 c7             	mov    %rax,%rdi
 8051f0d:	4c 89 d2             	mov    %r10,%rdx
 8051f10:	b8 00 00 00 00       	mov    $0x0,%eax
 8051f15:	e8 d6 5c 03 00       	callq  8087bf0 <__preinit_array_end+0x150>
 8051f1a:	e9 0a 00 00 00       	jmpq   8051f29 <get_tok_str+0x675>
 8051f1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8051f24:	e9 11 00 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051f29:	e9 00 00 00 00       	jmpq   8051f2e <get_tok_str+0x67a>
 8051f2e:	48 8b 05 5b cc 04 00 	mov    0x4cc5b(%rip),%rax        # 809eb90 <cstr_buf+0x8>
 8051f35:	e9 00 00 00 00       	jmpq   8051f3a <get_tok_str+0x686>
 8051f3a:	c9                   	leaveq 
 8051f3b:	c3                   	retq   

0000000008051f3c <tcc_peekc_slow>:
 8051f3c:	55                   	push   %rbp
 8051f3d:	48 89 e5             	mov    %rsp,%rbp
 8051f40:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8051f47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8051f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051f4f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8051f53:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8051f5a:	00 00 00 
 8051f5d:	48 01 d1             	add    %rdx,%rcx
 8051f60:	48 8b 10             	mov    (%rax),%rdx
 8051f63:	48 8b 01             	mov    (%rcx),%rax
 8051f66:	48 89 d1             	mov    %rdx,%rcx
 8051f69:	48 89 c2             	mov    %rax,%rdx
 8051f6c:	48 39 d1             	cmp    %rdx,%rcx
 8051f6f:	0f 82 0a 01 00 00    	jb     805207f <tcc_peekc_slow+0x143>
 8051f75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051f79:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8051f80:	00 00 00 
 8051f83:	48 01 c8             	add    %rcx,%rax
 8051f86:	8b 08                	mov    (%rax),%ecx
 8051f88:	83 f9 ff             	cmp    $0xffffffff,%ecx
 8051f8b:	0f 84 61 00 00 00    	je     8051ff2 <tcc_peekc_slow+0xb6>
 8051f91:	b8 00 20 00 00       	mov    $0x2000,%eax
 8051f96:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8051f99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8051f9d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8051fa4:	00 00 00 
 8051fa7:	48 01 c8             	add    %rcx,%rax
 8051faa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8051fae:	48 ba 39 06 00 00 00 	movabs $0x639,%rdx
 8051fb5:	00 00 00 
 8051fb8:	48 01 d1             	add    %rdx,%rcx
 8051fbb:	8b 55 f4             	mov    -0xc(%rbp),%edx
 8051fbe:	49 89 d2             	mov    %rdx,%r10
 8051fc1:	48 89 ce             	mov    %rcx,%rsi
 8051fc4:	8b 08                	mov    (%rax),%ecx
 8051fc6:	48 89 cf             	mov    %rcx,%rdi
 8051fc9:	4c 89 d2             	mov    %r10,%rdx
 8051fcc:	b8 00 00 00 00       	mov    $0x0,%eax
 8051fd1:	e8 3a 5c 03 00       	callq  8087c10 <__preinit_array_end+0x170>
 8051fd6:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8051fd9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8051fdc:	83 f8 00             	cmp    $0x0,%eax
 8051fdf:	0f 8d 08 00 00 00    	jge    8051fed <tcc_peekc_slow+0xb1>
 8051fe5:	b8 00 00 00 00       	mov    $0x0,%eax
 8051fea:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8051fed:	e9 08 00 00 00       	jmpq   8051ffa <tcc_peekc_slow+0xbe>
 8051ff2:	b8 00 00 00 00       	mov    $0x0,%eax
 8051ff7:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8051ffa:	48 8b 05 9f bf 03 00 	mov    0x3bf9f(%rip),%rax        # 808dfa0 <_GLOBAL_OFFSET_TABLE_+0x320>
 8052001:	8b 00                	mov    (%rax),%eax
 8052003:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8052006:	48 01 c8             	add    %rcx,%rax
 8052009:	4c 8b 1d 90 bf 03 00 	mov    0x3bf90(%rip),%r11        # 808dfa0 <_GLOBAL_OFFSET_TABLE_+0x320>
 8052010:	41 89 03             	mov    %eax,(%r11)
 8052013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052017:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805201b:	48 ba 39 06 00 00 00 	movabs $0x639,%rdx
 8052022:	00 00 00 
 8052025:	48 01 d1             	add    %rdx,%rcx
 8052028:	48 89 08             	mov    %rcx,(%rax)
 805202b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805202f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8052036:	00 00 00 
 8052039:	48 01 c8             	add    %rcx,%rax
 805203c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052040:	48 ba 39 06 00 00 00 	movabs $0x639,%rdx
 8052047:	00 00 00 
 805204a:	48 01 d1             	add    %rdx,%rcx
 805204d:	8b 55 f4             	mov    -0xc(%rbp),%edx
 8052050:	48 63 d2             	movslq %edx,%rdx
 8052053:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8052057:	48 89 d0             	mov    %rdx,%rax
 805205a:	48 01 c1             	add    %rax,%rcx
 805205d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052061:	48 89 08             	mov    %rcx,(%rax)
 8052064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052068:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805206f:	00 00 00 
 8052072:	48 01 c8             	add    %rcx,%rax
 8052075:	48 8b 08             	mov    (%rax),%rcx
 8052078:	b8 5c 00 00 00       	mov    $0x5c,%eax
 805207d:	88 01                	mov    %al,(%rcx)
 805207f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052083:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052087:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 805208e:	00 00 00 
 8052091:	48 01 d1             	add    %rdx,%rcx
 8052094:	48 8b 10             	mov    (%rax),%rdx
 8052097:	48 8b 01             	mov    (%rcx),%rax
 805209a:	48 89 d1             	mov    %rdx,%rcx
 805209d:	48 89 c2             	mov    %rax,%rdx
 80520a0:	48 39 d1             	cmp    %rdx,%rcx
 80520a3:	0f 83 14 00 00 00    	jae    80520bd <tcc_peekc_slow+0x181>
 80520a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80520ad:	48 8b 08             	mov    (%rax),%rcx
 80520b0:	0f b6 01             	movzbl (%rcx),%eax
 80520b3:	e9 2a 00 00 00       	jmpq   80520e2 <tcc_peekc_slow+0x1a6>
 80520b8:	e9 25 00 00 00       	jmpq   80520e2 <tcc_peekc_slow+0x1a6>
 80520bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80520c1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80520c5:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80520cc:	00 00 00 
 80520cf:	48 01 d1             	add    %rdx,%rcx
 80520d2:	48 8b 11             	mov    (%rcx),%rdx
 80520d5:	48 89 10             	mov    %rdx,(%rax)
 80520d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80520dd:	e9 00 00 00 00       	jmpq   80520e2 <tcc_peekc_slow+0x1a6>
 80520e2:	c9                   	leaveq 
 80520e3:	c3                   	retq   

00000000080520e4 <handle_eob>:
 80520e4:	55                   	push   %rbp
 80520e5:	48 89 e5             	mov    %rsp,%rbp
 80520e8:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 80520ef:	48 8b 05 aa bd 03 00 	mov    0x3bdaa(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80520f6:	48 8b 00             	mov    (%rax),%rax
 80520f9:	48 89 c7             	mov    %rax,%rdi
 80520fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8052101:	e8 36 fe ff ff       	callq  8051f3c <tcc_peekc_slow>
 8052106:	e9 00 00 00 00       	jmpq   805210b <handle_eob+0x27>
 805210b:	c9                   	leaveq 
 805210c:	c3                   	retq   

000000000805210d <inp>:
 805210d:	55                   	push   %rbp
 805210e:	48 89 e5             	mov    %rsp,%rbp
 8052111:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8052118:	48 8b 05 81 bd 03 00 	mov    0x3bd81(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805211f:	48 8b 00             	mov    (%rax),%rax
 8052122:	48 8b 08             	mov    (%rax),%rcx
 8052125:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805212c:	00 00 00 
 805212f:	48 01 d1             	add    %rdx,%rcx
 8052132:	48 89 08             	mov    %rcx,(%rax)
 8052135:	0f b6 01             	movzbl (%rcx),%eax
 8052138:	4c 8b 1d c9 bd 03 00 	mov    0x3bdc9(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 805213f:	41 89 03             	mov    %eax,(%r11)
 8052142:	48 8b 05 bf bd 03 00 	mov    0x3bdbf(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8052149:	8b 00                	mov    (%rax),%eax
 805214b:	83 f8 5c             	cmp    $0x5c,%eax
 805214e:	0f 85 14 00 00 00    	jne    8052168 <inp+0x5b>
 8052154:	b8 00 00 00 00       	mov    $0x0,%eax
 8052159:	e8 86 ff ff ff       	callq  80520e4 <handle_eob>
 805215e:	4c 8b 1d a3 bd 03 00 	mov    0x3bda3(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8052165:	41 89 03             	mov    %eax,(%r11)
 8052168:	c9                   	leaveq 
 8052169:	c3                   	retq   

000000000805216a <handle_stray_noerror>:
 805216a:	55                   	push   %rbp
 805216b:	48 89 e5             	mov    %rsp,%rbp
 805216e:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8052175:	48 8b 05 8c bd 03 00 	mov    0x3bd8c(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 805217c:	8b 00                	mov    (%rax),%eax
 805217e:	83 f8 5c             	cmp    $0x5c,%eax
 8052181:	0f 85 be 00 00 00    	jne    8052245 <handle_stray_noerror+0xdb>
 8052187:	b8 00 00 00 00       	mov    $0x0,%eax
 805218c:	e8 7c ff ff ff       	callq  805210d <inp>
 8052191:	48 8b 05 70 bd 03 00 	mov    0x3bd70(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8052198:	8b 00                	mov    (%rax),%eax
 805219a:	83 f8 0a             	cmp    $0xa,%eax
 805219d:	0f 85 30 00 00 00    	jne    80521d3 <handle_stray_noerror+0x69>
 80521a3:	48 8b 05 f6 bc 03 00 	mov    0x3bcf6(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80521aa:	48 8b 00             	mov    (%rax),%rax
 80521ad:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80521b4:	00 00 00 
 80521b7:	48 01 c8             	add    %rcx,%rax
 80521ba:	8b 08                	mov    (%rax),%ecx
 80521bc:	48 89 ca             	mov    %rcx,%rdx
 80521bf:	83 c1 01             	add    $0x1,%ecx
 80521c2:	89 08                	mov    %ecx,(%rax)
 80521c4:	b8 00 00 00 00       	mov    $0x0,%eax
 80521c9:	e8 3f ff ff ff       	callq  805210d <inp>
 80521ce:	e9 6d 00 00 00       	jmpq   8052240 <handle_stray_noerror+0xd6>
 80521d3:	48 8b 05 2e bd 03 00 	mov    0x3bd2e(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80521da:	8b 00                	mov    (%rax),%eax
 80521dc:	83 f8 0d             	cmp    $0xd,%eax
 80521df:	0f 85 51 00 00 00    	jne    8052236 <handle_stray_noerror+0xcc>
 80521e5:	b8 00 00 00 00       	mov    $0x0,%eax
 80521ea:	e8 1e ff ff ff       	callq  805210d <inp>
 80521ef:	48 8b 05 12 bd 03 00 	mov    0x3bd12(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80521f6:	8b 00                	mov    (%rax),%eax
 80521f8:	83 f8 0a             	cmp    $0xa,%eax
 80521fb:	0f 84 05 00 00 00    	je     8052206 <handle_stray_noerror+0x9c>
 8052201:	e9 30 00 00 00       	jmpq   8052236 <handle_stray_noerror+0xcc>
 8052206:	48 8b 05 93 bc 03 00 	mov    0x3bc93(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805220d:	48 8b 00             	mov    (%rax),%rax
 8052210:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052217:	00 00 00 
 805221a:	48 01 c8             	add    %rcx,%rax
 805221d:	8b 08                	mov    (%rax),%ecx
 805221f:	48 89 ca             	mov    %rcx,%rdx
 8052222:	83 c1 01             	add    $0x1,%ecx
 8052225:	89 08                	mov    %ecx,(%rax)
 8052227:	b8 00 00 00 00       	mov    $0x0,%eax
 805222c:	e8 dc fe ff ff       	callq  805210d <inp>
 8052231:	e9 0a 00 00 00       	jmpq   8052240 <handle_stray_noerror+0xd6>
 8052236:	b8 01 00 00 00       	mov    $0x1,%eax
 805223b:	e9 0f 00 00 00       	jmpq   805224f <handle_stray_noerror+0xe5>
 8052240:	e9 30 ff ff ff       	jmpq   8052175 <handle_stray_noerror+0xb>
 8052245:	b8 00 00 00 00       	mov    $0x0,%eax
 805224a:	e9 00 00 00 00       	jmpq   805224f <handle_stray_noerror+0xe5>
 805224f:	c9                   	leaveq 
 8052250:	c3                   	retq   

0000000008052251 <handle_stray>:
 8052251:	55                   	push   %rbp
 8052252:	48 89 e5             	mov    %rsp,%rbp
 8052255:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 805225c:	b8 00 00 00 00       	mov    $0x0,%eax
 8052261:	e8 04 ff ff ff       	callq  805216a <handle_stray_noerror>
 8052266:	85 c0                	test   %eax,%eax
 8052268:	0f 84 14 00 00 00    	je     8052282 <handle_stray+0x31>
 805226e:	48 8d 05 d4 90 03 00 	lea    0x390d4(%rip),%rax        # 808b349 <L.116>
 8052275:	48 89 c7             	mov    %rax,%rdi
 8052278:	b8 00 00 00 00       	mov    $0x0,%eax
 805227d:	e8 45 b4 ff ff       	callq  804d6c7 <tcc_error>
 8052282:	c9                   	leaveq 
 8052283:	c3                   	retq   

0000000008052284 <handle_stray1>:
 8052284:	55                   	push   %rbp
 8052285:	48 89 e5             	mov    %rsp,%rbp
 8052288:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805228f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8052293:	48 8b 05 06 bc 03 00 	mov    0x3bc06(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805229a:	48 8b 00             	mov    (%rax),%rax
 805229d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80522a4:	00 00 00 
 80522a7:	48 01 c8             	add    %rcx,%rax
 80522aa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80522ae:	48 8b 10             	mov    (%rax),%rdx
 80522b1:	48 89 c8             	mov    %rcx,%rax
 80522b4:	48 89 d1             	mov    %rdx,%rcx
 80522b7:	48 39 c8             	cmp    %rcx,%rax
 80522ba:	0f 82 45 00 00 00    	jb     8052305 <handle_stray1+0x81>
 80522c0:	48 8b 05 d9 bb 03 00 	mov    0x3bbd9(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80522c7:	48 8b 00             	mov    (%rax),%rax
 80522ca:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80522ce:	48 89 08             	mov    %rcx,(%rax)
 80522d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80522d6:	e8 09 fe ff ff       	callq  80520e4 <handle_eob>
 80522db:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80522de:	48 8b 05 bb bb 03 00 	mov    0x3bbbb(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80522e5:	48 8b 00             	mov    (%rax),%rax
 80522e8:	48 8b 08             	mov    (%rax),%rcx
 80522eb:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 80522ef:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80522f2:	83 f8 5c             	cmp    $0x5c,%eax
 80522f5:	0f 85 05 00 00 00    	jne    8052300 <handle_stray1+0x7c>
 80522fb:	e9 05 00 00 00       	jmpq   8052305 <handle_stray1+0x81>
 8052300:	e9 47 00 00 00       	jmpq   805234c <handle_stray1+0xc8>
 8052305:	48 8b 05 94 bb 03 00 	mov    0x3bb94(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805230c:	48 8b 00             	mov    (%rax),%rax
 805230f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052313:	48 89 08             	mov    %rcx,(%rax)
 8052316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805231a:	0f b6 08             	movzbl (%rax),%ecx
 805231d:	4c 8b 1d e4 bb 03 00 	mov    0x3bbe4(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8052324:	41 89 0b             	mov    %ecx,(%r11)
 8052327:	b8 00 00 00 00       	mov    $0x0,%eax
 805232c:	e8 20 ff ff ff       	callq  8052251 <handle_stray>
 8052331:	48 8b 05 68 bb 03 00 	mov    0x3bb68(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052338:	48 8b 00             	mov    (%rax),%rax
 805233b:	48 8b 08             	mov    (%rax),%rcx
 805233e:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052346:	0f b6 08             	movzbl (%rax),%ecx
 8052349:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805234c:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805234f:	e9 00 00 00 00       	jmpq   8052354 <handle_stray1+0xd0>
 8052354:	c9                   	leaveq 
 8052355:	c3                   	retq   

0000000008052356 <minp>:
 8052356:	55                   	push   %rbp
 8052357:	48 89 e5             	mov    %rsp,%rbp
 805235a:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8052361:	b8 00 00 00 00       	mov    $0x0,%eax
 8052366:	e8 a2 fd ff ff       	callq  805210d <inp>
 805236b:	48 8b 05 96 bb 03 00 	mov    0x3bb96(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8052372:	8b 00                	mov    (%rax),%eax
 8052374:	83 f8 5c             	cmp    $0x5c,%eax
 8052377:	0f 85 0a 00 00 00    	jne    8052387 <minp+0x31>
 805237d:	b8 00 00 00 00       	mov    $0x0,%eax
 8052382:	e8 ca fe ff ff       	callq  8052251 <handle_stray>
 8052387:	c9                   	leaveq 
 8052388:	c3                   	retq   

0000000008052389 <parse_line_comment>:
 8052389:	55                   	push   %rbp
 805238a:	48 89 e5             	mov    %rsp,%rbp
 805238d:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8052394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8052398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805239c:	48 89 c1             	mov    %rax,%rcx
 805239f:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80523a6:	00 00 00 
 80523a9:	48 01 d0             	add    %rdx,%rax
 80523ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80523b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80523b4:	0f b6 08             	movzbl (%rax),%ecx
 80523b7:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80523ba:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80523bd:	83 f8 0a             	cmp    $0xa,%eax
 80523c0:	0f 84 11 00 00 00    	je     80523d7 <parse_line_comment+0x4e>
 80523c6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80523c9:	83 f8 ff             	cmp    $0xffffffff,%eax
 80523cc:	0f 84 05 00 00 00    	je     80523d7 <parse_line_comment+0x4e>
 80523d2:	e9 0a 00 00 00       	jmpq   80523e1 <parse_line_comment+0x58>
 80523d7:	e9 57 02 00 00       	jmpq   8052633 <parse_line_comment+0x2aa>
 80523dc:	e9 4d 02 00 00       	jmpq   805262e <parse_line_comment+0x2a5>
 80523e1:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80523e4:	83 f8 5c             	cmp    $0x5c,%eax
 80523e7:	0f 85 29 02 00 00    	jne    8052616 <parse_line_comment+0x28d>
 80523ed:	48 8b 05 ac ba 03 00 	mov    0x3baac(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80523f4:	48 8b 00             	mov    (%rax),%rax
 80523f7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80523fb:	48 89 08             	mov    %rcx,(%rax)
 80523fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8052403:	e8 dc fc ff ff       	callq  80520e4 <handle_eob>
 8052408:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805240b:	48 8b 05 8e ba 03 00 	mov    0x3ba8e(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052412:	48 8b 00             	mov    (%rax),%rax
 8052415:	48 8b 08             	mov    (%rax),%rcx
 8052418:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 805241c:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805241f:	83 f8 5c             	cmp    $0x5c,%eax
 8052422:	0f 85 e4 01 00 00    	jne    805260c <parse_line_comment+0x283>
 8052428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805242c:	48 89 c1             	mov    %rax,%rcx
 805242f:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052436:	00 00 00 
 8052439:	48 01 d0             	add    %rdx,%rax
 805243c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052444:	0f b6 08             	movzbl (%rax),%ecx
 8052447:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805244a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805244d:	83 f8 5c             	cmp    $0x5c,%eax
 8052450:	0f 85 2f 00 00 00    	jne    8052485 <parse_line_comment+0xfc>
 8052456:	48 8b 05 43 ba 03 00 	mov    0x3ba43(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805245d:	48 8b 00             	mov    (%rax),%rax
 8052460:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052464:	48 89 08             	mov    %rcx,(%rax)
 8052467:	b8 00 00 00 00       	mov    $0x0,%eax
 805246c:	e8 73 fc ff ff       	callq  80520e4 <handle_eob>
 8052471:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8052474:	48 8b 05 25 ba 03 00 	mov    0x3ba25(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805247b:	48 8b 00             	mov    (%rax),%rax
 805247e:	48 8b 08             	mov    (%rax),%rcx
 8052481:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052485:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052488:	83 f8 0a             	cmp    $0xa,%eax
 805248b:	0f 85 83 00 00 00    	jne    8052514 <parse_line_comment+0x18b>
 8052491:	48 8b 05 08 ba 03 00 	mov    0x3ba08(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052498:	48 8b 00             	mov    (%rax),%rax
 805249b:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80524a2:	00 00 00 
 80524a5:	48 01 c8             	add    %rcx,%rax
 80524a8:	8b 08                	mov    (%rax),%ecx
 80524aa:	48 89 ca             	mov    %rcx,%rdx
 80524ad:	83 c1 01             	add    $0x1,%ecx
 80524b0:	89 08                	mov    %ecx,(%rax)
 80524b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80524b6:	48 89 c1             	mov    %rax,%rcx
 80524b9:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80524c0:	00 00 00 
 80524c3:	48 01 d0             	add    %rdx,%rax
 80524c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80524ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80524ce:	0f b6 08             	movzbl (%rax),%ecx
 80524d1:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80524d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80524d7:	83 f8 5c             	cmp    $0x5c,%eax
 80524da:	0f 85 2f 00 00 00    	jne    805250f <parse_line_comment+0x186>
 80524e0:	48 8b 05 b9 b9 03 00 	mov    0x3b9b9(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80524e7:	48 8b 00             	mov    (%rax),%rax
 80524ea:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80524ee:	48 89 08             	mov    %rcx,(%rax)
 80524f1:	b8 00 00 00 00       	mov    $0x0,%eax
 80524f6:	e8 e9 fb ff ff       	callq  80520e4 <handle_eob>
 80524fb:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80524fe:	48 8b 05 9b b9 03 00 	mov    0x3b99b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052505:	48 8b 00             	mov    (%rax),%rax
 8052508:	48 8b 08             	mov    (%rax),%rcx
 805250b:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 805250f:	e9 f3 00 00 00       	jmpq   8052607 <parse_line_comment+0x27e>
 8052514:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052517:	83 f8 0d             	cmp    $0xd,%eax
 805251a:	0f 85 e7 00 00 00    	jne    8052607 <parse_line_comment+0x27e>
 8052520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052524:	48 89 c1             	mov    %rax,%rcx
 8052527:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805252e:	00 00 00 
 8052531:	48 01 d0             	add    %rdx,%rax
 8052534:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805253c:	0f b6 08             	movzbl (%rax),%ecx
 805253f:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8052542:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052545:	83 f8 5c             	cmp    $0x5c,%eax
 8052548:	0f 85 2f 00 00 00    	jne    805257d <parse_line_comment+0x1f4>
 805254e:	48 8b 05 4b b9 03 00 	mov    0x3b94b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052555:	48 8b 00             	mov    (%rax),%rax
 8052558:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805255c:	48 89 08             	mov    %rcx,(%rax)
 805255f:	b8 00 00 00 00       	mov    $0x0,%eax
 8052564:	e8 7b fb ff ff       	callq  80520e4 <handle_eob>
 8052569:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805256c:	48 8b 05 2d b9 03 00 	mov    0x3b92d(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052573:	48 8b 00             	mov    (%rax),%rax
 8052576:	48 8b 08             	mov    (%rax),%rcx
 8052579:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 805257d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052580:	83 f8 0a             	cmp    $0xa,%eax
 8052583:	0f 85 7e 00 00 00    	jne    8052607 <parse_line_comment+0x27e>
 8052589:	48 8b 05 10 b9 03 00 	mov    0x3b910(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052590:	48 8b 00             	mov    (%rax),%rax
 8052593:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805259a:	00 00 00 
 805259d:	48 01 c8             	add    %rcx,%rax
 80525a0:	8b 08                	mov    (%rax),%ecx
 80525a2:	48 89 ca             	mov    %rcx,%rdx
 80525a5:	83 c1 01             	add    $0x1,%ecx
 80525a8:	89 08                	mov    %ecx,(%rax)
 80525aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80525ae:	48 89 c1             	mov    %rax,%rcx
 80525b1:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80525b8:	00 00 00 
 80525bb:	48 01 d0             	add    %rdx,%rax
 80525be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80525c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80525c6:	0f b6 08             	movzbl (%rax),%ecx
 80525c9:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80525cc:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80525cf:	83 f8 5c             	cmp    $0x5c,%eax
 80525d2:	0f 85 2f 00 00 00    	jne    8052607 <parse_line_comment+0x27e>
 80525d8:	48 8b 05 c1 b8 03 00 	mov    0x3b8c1(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80525df:	48 8b 00             	mov    (%rax),%rax
 80525e2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80525e6:	48 89 08             	mov    %rcx,(%rax)
 80525e9:	b8 00 00 00 00       	mov    $0x0,%eax
 80525ee:	e8 f1 fa ff ff       	callq  80520e4 <handle_eob>
 80525f3:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80525f6:	48 8b 05 a3 b8 03 00 	mov    0x3b8a3(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80525fd:	48 8b 00             	mov    (%rax),%rax
 8052600:	48 8b 08             	mov    (%rax),%rcx
 8052603:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052607:	e9 05 00 00 00       	jmpq   8052611 <parse_line_comment+0x288>
 805260c:	e9 a9 fd ff ff       	jmpq   80523ba <parse_line_comment+0x31>
 8052611:	e9 18 00 00 00       	jmpq   805262e <parse_line_comment+0x2a5>
 8052616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805261a:	48 89 c1             	mov    %rax,%rcx
 805261d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052624:	00 00 00 
 8052627:	48 01 d0             	add    %rdx,%rax
 805262a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805262e:	e9 7d fd ff ff       	jmpq   80523b0 <parse_line_comment+0x27>
 8052633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052637:	e9 00 00 00 00       	jmpq   805263c <parse_line_comment+0x2b3>
 805263c:	c9                   	leaveq 
 805263d:	c3                   	retq   

000000000805263e <parse_comment>:
 805263e:	55                   	push   %rbp
 805263f:	48 89 e5             	mov    %rsp,%rbp
 8052642:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8052649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805264d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052651:	48 89 c1             	mov    %rax,%rcx
 8052654:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805265b:	00 00 00 
 805265e:	48 01 d0             	add    %rdx,%rax
 8052661:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052665:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052669:	0f b6 08             	movzbl (%rax),%ecx
 805266c:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805266f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052672:	83 f8 0a             	cmp    $0xa,%eax
 8052675:	0f 84 1d 00 00 00    	je     8052698 <parse_comment+0x5a>
 805267b:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805267e:	83 f8 2a             	cmp    $0x2a,%eax
 8052681:	0f 84 11 00 00 00    	je     8052698 <parse_comment+0x5a>
 8052687:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805268a:	83 f8 5c             	cmp    $0x5c,%eax
 805268d:	0f 84 05 00 00 00    	je     8052698 <parse_comment+0x5a>
 8052693:	e9 05 00 00 00       	jmpq   805269d <parse_comment+0x5f>
 8052698:	e9 6d 00 00 00       	jmpq   805270a <parse_comment+0xcc>
 805269d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80526a1:	48 89 c1             	mov    %rax,%rcx
 80526a4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80526ab:	00 00 00 
 80526ae:	48 01 d0             	add    %rdx,%rax
 80526b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80526b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80526b9:	0f b6 08             	movzbl (%rax),%ecx
 80526bc:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80526bf:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80526c2:	83 f8 0a             	cmp    $0xa,%eax
 80526c5:	0f 84 1d 00 00 00    	je     80526e8 <parse_comment+0xaa>
 80526cb:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80526ce:	83 f8 2a             	cmp    $0x2a,%eax
 80526d1:	0f 84 11 00 00 00    	je     80526e8 <parse_comment+0xaa>
 80526d7:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80526da:	83 f8 5c             	cmp    $0x5c,%eax
 80526dd:	0f 84 05 00 00 00    	je     80526e8 <parse_comment+0xaa>
 80526e3:	e9 05 00 00 00       	jmpq   80526ed <parse_comment+0xaf>
 80526e8:	e9 1d 00 00 00       	jmpq   805270a <parse_comment+0xcc>
 80526ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80526f1:	48 89 c1             	mov    %rax,%rcx
 80526f4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80526fb:	00 00 00 
 80526fe:	48 01 d0             	add    %rdx,%rax
 8052701:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052705:	e9 5b ff ff ff       	jmpq   8052665 <parse_comment+0x27>
 805270a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805270d:	83 f8 0a             	cmp    $0xa,%eax
 8052710:	0f 85 3e 00 00 00    	jne    8052754 <parse_comment+0x116>
 8052716:	48 8b 05 83 b7 03 00 	mov    0x3b783(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805271d:	48 8b 00             	mov    (%rax),%rax
 8052720:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052727:	00 00 00 
 805272a:	48 01 c8             	add    %rcx,%rax
 805272d:	8b 08                	mov    (%rax),%ecx
 805272f:	48 89 ca             	mov    %rcx,%rdx
 8052732:	83 c1 01             	add    $0x1,%ecx
 8052735:	89 08                	mov    %ecx,(%rax)
 8052737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805273b:	48 89 c1             	mov    %rax,%rcx
 805273e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052745:	00 00 00 
 8052748:	48 01 d0             	add    %rdx,%rax
 805274b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805274f:	e9 3a 03 00 00       	jmpq   8052a8e <parse_comment+0x450>
 8052754:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052757:	83 f8 2a             	cmp    $0x2a,%eax
 805275a:	0f 85 b6 02 00 00    	jne    8052a16 <parse_comment+0x3d8>
 8052760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052764:	48 89 c1             	mov    %rax,%rcx
 8052767:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805276e:	00 00 00 
 8052771:	48 01 d0             	add    %rdx,%rax
 8052774:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805277c:	0f b6 08             	movzbl (%rax),%ecx
 805277f:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8052782:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052785:	83 f8 2a             	cmp    $0x2a,%eax
 8052788:	0f 85 1d 00 00 00    	jne    80527ab <parse_comment+0x16d>
 805278e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052792:	48 89 c1             	mov    %rax,%rcx
 8052795:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805279c:	00 00 00 
 805279f:	48 01 d0             	add    %rdx,%rax
 80527a2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80527a6:	e9 61 02 00 00       	jmpq   8052a0c <parse_comment+0x3ce>
 80527ab:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80527ae:	83 f8 2f             	cmp    $0x2f,%eax
 80527b1:	0f 85 0a 00 00 00    	jne    80527c1 <parse_comment+0x183>
 80527b7:	e9 d7 02 00 00       	jmpq   8052a93 <parse_comment+0x455>
 80527bc:	e9 4b 02 00 00       	jmpq   8052a0c <parse_comment+0x3ce>
 80527c1:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80527c4:	83 f8 5c             	cmp    $0x5c,%eax
 80527c7:	0f 85 3a 02 00 00    	jne    8052a07 <parse_comment+0x3c9>
 80527cd:	48 8b 05 cc b6 03 00 	mov    0x3b6cc(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80527d4:	48 8b 00             	mov    (%rax),%rax
 80527d7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80527db:	48 89 08             	mov    %rcx,(%rax)
 80527de:	b8 00 00 00 00       	mov    $0x0,%eax
 80527e3:	e8 fc f8 ff ff       	callq  80520e4 <handle_eob>
 80527e8:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80527eb:	48 8b 05 ae b6 03 00 	mov    0x3b6ae(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80527f2:	48 8b 00             	mov    (%rax),%rax
 80527f5:	48 8b 08             	mov    (%rax),%rcx
 80527f8:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 80527fc:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80527ff:	83 f8 5c             	cmp    $0x5c,%eax
 8052802:	0f 85 fa 01 00 00    	jne    8052a02 <parse_comment+0x3c4>
 8052808:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805280b:	83 f8 5c             	cmp    $0x5c,%eax
 805280e:	0f 85 ee 01 00 00    	jne    8052a02 <parse_comment+0x3c4>
 8052814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052818:	48 89 c1             	mov    %rax,%rcx
 805281b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052822:	00 00 00 
 8052825:	48 01 d0             	add    %rdx,%rax
 8052828:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805282c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052830:	0f b6 08             	movzbl (%rax),%ecx
 8052833:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8052836:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052839:	83 f8 5c             	cmp    $0x5c,%eax
 805283c:	0f 85 2f 00 00 00    	jne    8052871 <parse_comment+0x233>
 8052842:	48 8b 05 57 b6 03 00 	mov    0x3b657(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052849:	48 8b 00             	mov    (%rax),%rax
 805284c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052850:	48 89 08             	mov    %rcx,(%rax)
 8052853:	b8 00 00 00 00       	mov    $0x0,%eax
 8052858:	e8 87 f8 ff ff       	callq  80520e4 <handle_eob>
 805285d:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8052860:	48 8b 05 39 b6 03 00 	mov    0x3b639(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052867:	48 8b 00             	mov    (%rax),%rax
 805286a:	48 8b 08             	mov    (%rax),%rcx
 805286d:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052871:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052874:	83 f8 0a             	cmp    $0xa,%eax
 8052877:	0f 85 83 00 00 00    	jne    8052900 <parse_comment+0x2c2>
 805287d:	48 8b 05 1c b6 03 00 	mov    0x3b61c(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052884:	48 8b 00             	mov    (%rax),%rax
 8052887:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805288e:	00 00 00 
 8052891:	48 01 c8             	add    %rcx,%rax
 8052894:	8b 08                	mov    (%rax),%ecx
 8052896:	48 89 ca             	mov    %rcx,%rdx
 8052899:	83 c1 01             	add    $0x1,%ecx
 805289c:	89 08                	mov    %ecx,(%rax)
 805289e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80528a2:	48 89 c1             	mov    %rax,%rcx
 80528a5:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80528ac:	00 00 00 
 80528af:	48 01 d0             	add    %rdx,%rax
 80528b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80528b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80528ba:	0f b6 08             	movzbl (%rax),%ecx
 80528bd:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80528c0:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80528c3:	83 f8 5c             	cmp    $0x5c,%eax
 80528c6:	0f 85 2f 00 00 00    	jne    80528fb <parse_comment+0x2bd>
 80528cc:	48 8b 05 cd b5 03 00 	mov    0x3b5cd(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80528d3:	48 8b 00             	mov    (%rax),%rax
 80528d6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80528da:	48 89 08             	mov    %rcx,(%rax)
 80528dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80528e2:	e8 fd f7 ff ff       	callq  80520e4 <handle_eob>
 80528e7:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80528ea:	48 8b 05 af b5 03 00 	mov    0x3b5af(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80528f1:	48 8b 00             	mov    (%rax),%rax
 80528f4:	48 8b 08             	mov    (%rax),%rcx
 80528f7:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 80528fb:	e9 fd 00 00 00       	jmpq   80529fd <parse_comment+0x3bf>
 8052900:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052903:	83 f8 0d             	cmp    $0xd,%eax
 8052906:	0f 85 ec 00 00 00    	jne    80529f8 <parse_comment+0x3ba>
 805290c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052910:	48 89 c1             	mov    %rax,%rcx
 8052913:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805291a:	00 00 00 
 805291d:	48 01 d0             	add    %rdx,%rax
 8052920:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052928:	0f b6 08             	movzbl (%rax),%ecx
 805292b:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805292e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052931:	83 f8 5c             	cmp    $0x5c,%eax
 8052934:	0f 85 2f 00 00 00    	jne    8052969 <parse_comment+0x32b>
 805293a:	48 8b 05 5f b5 03 00 	mov    0x3b55f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052941:	48 8b 00             	mov    (%rax),%rax
 8052944:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052948:	48 89 08             	mov    %rcx,(%rax)
 805294b:	b8 00 00 00 00       	mov    $0x0,%eax
 8052950:	e8 8f f7 ff ff       	callq  80520e4 <handle_eob>
 8052955:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8052958:	48 8b 05 41 b5 03 00 	mov    0x3b541(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805295f:	48 8b 00             	mov    (%rax),%rax
 8052962:	48 8b 08             	mov    (%rax),%rcx
 8052965:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052969:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805296c:	83 f8 0a             	cmp    $0xa,%eax
 805296f:	0f 85 7e 00 00 00    	jne    80529f3 <parse_comment+0x3b5>
 8052975:	48 8b 05 24 b5 03 00 	mov    0x3b524(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805297c:	48 8b 00             	mov    (%rax),%rax
 805297f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052986:	00 00 00 
 8052989:	48 01 c8             	add    %rcx,%rax
 805298c:	8b 08                	mov    (%rax),%ecx
 805298e:	48 89 ca             	mov    %rcx,%rdx
 8052991:	83 c1 01             	add    $0x1,%ecx
 8052994:	89 08                	mov    %ecx,(%rax)
 8052996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805299a:	48 89 c1             	mov    %rax,%rcx
 805299d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80529a4:	00 00 00 
 80529a7:	48 01 d0             	add    %rdx,%rax
 80529aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80529ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80529b2:	0f b6 08             	movzbl (%rax),%ecx
 80529b5:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80529b8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80529bb:	83 f8 5c             	cmp    $0x5c,%eax
 80529be:	0f 85 2f 00 00 00    	jne    80529f3 <parse_comment+0x3b5>
 80529c4:	48 8b 05 d5 b4 03 00 	mov    0x3b4d5(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80529cb:	48 8b 00             	mov    (%rax),%rax
 80529ce:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80529d2:	48 89 08             	mov    %rcx,(%rax)
 80529d5:	b8 00 00 00 00       	mov    $0x0,%eax
 80529da:	e8 05 f7 ff ff       	callq  80520e4 <handle_eob>
 80529df:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80529e2:	48 8b 05 b7 b4 03 00 	mov    0x3b4b7(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80529e9:	48 8b 00             	mov    (%rax),%rax
 80529ec:	48 8b 08             	mov    (%rax),%rcx
 80529ef:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 80529f3:	e9 05 00 00 00       	jmpq   80529fd <parse_comment+0x3bf>
 80529f8:	e9 14 00 00 00       	jmpq   8052a11 <parse_comment+0x3d3>
 80529fd:	e9 06 fe ff ff       	jmpq   8052808 <parse_comment+0x1ca>
 8052a02:	e9 05 00 00 00       	jmpq   8052a0c <parse_comment+0x3ce>
 8052a07:	e9 05 00 00 00       	jmpq   8052a11 <parse_comment+0x3d3>
 8052a0c:	e9 67 fd ff ff       	jmpq   8052778 <parse_comment+0x13a>
 8052a11:	e9 78 00 00 00       	jmpq   8052a8e <parse_comment+0x450>
 8052a16:	48 8b 05 83 b4 03 00 	mov    0x3b483(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052a1d:	48 8b 00             	mov    (%rax),%rax
 8052a20:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052a24:	48 89 08             	mov    %rcx,(%rax)
 8052a27:	b8 00 00 00 00       	mov    $0x0,%eax
 8052a2c:	e8 b3 f6 ff ff       	callq  80520e4 <handle_eob>
 8052a31:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8052a34:	48 8b 05 65 b4 03 00 	mov    0x3b465(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052a3b:	48 8b 00             	mov    (%rax),%rax
 8052a3e:	48 8b 08             	mov    (%rax),%rcx
 8052a41:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052a45:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052a48:	83 f8 ff             	cmp    $0xffffffff,%eax
 8052a4b:	0f 85 19 00 00 00    	jne    8052a6a <parse_comment+0x42c>
 8052a51:	48 8d 05 06 89 03 00 	lea    0x38906(%rip),%rax        # 808b35e <L.117>
 8052a58:	48 89 c7             	mov    %rax,%rdi
 8052a5b:	b8 00 00 00 00       	mov    $0x0,%eax
 8052a60:	e8 62 ac ff ff       	callq  804d6c7 <tcc_error>
 8052a65:	e9 24 00 00 00       	jmpq   8052a8e <parse_comment+0x450>
 8052a6a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052a6d:	83 f8 5c             	cmp    $0x5c,%eax
 8052a70:	0f 85 18 00 00 00    	jne    8052a8e <parse_comment+0x450>
 8052a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052a7a:	48 89 c1             	mov    %rax,%rcx
 8052a7d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052a84:	00 00 00 
 8052a87:	48 01 d0             	add    %rdx,%rax
 8052a8a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052a8e:	e9 d2 fb ff ff       	jmpq   8052665 <parse_comment+0x27>
 8052a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052a97:	48 89 c1             	mov    %rax,%rcx
 8052a9a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052aa1:	00 00 00 
 8052aa4:	48 01 d0             	add    %rdx,%rax
 8052aa7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052aaf:	e9 00 00 00 00       	jmpq   8052ab4 <parse_comment+0x476>
 8052ab4:	c9                   	leaveq 
 8052ab5:	c3                   	retq   

0000000008052ab6 <parse_pp_string>:
 8052ab6:	55                   	push   %rbp
 8052ab7:	48 89 e5             	mov    %rsp,%rbp
 8052aba:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8052ac1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8052ac5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8052ac9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8052acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052ad1:	48 89 c1             	mov    %rax,%rcx
 8052ad4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052adb:	00 00 00 
 8052ade:	48 01 d0             	add    %rdx,%rax
 8052ae1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052ae9:	0f b6 08             	movzbl (%rax),%ecx
 8052aec:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8052aef:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052af2:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8052af5:	39 c8                	cmp    %ecx,%eax
 8052af7:	0f 85 0a 00 00 00    	jne    8052b07 <parse_pp_string+0x51>
 8052afd:	e9 95 03 00 00       	jmpq   8052e97 <parse_pp_string+0x3e1>
 8052b02:	e9 8b 03 00 00       	jmpq   8052e92 <parse_pp_string+0x3dc>
 8052b07:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052b0a:	83 f8 5c             	cmp    $0x5c,%eax
 8052b0d:	0f 85 43 02 00 00    	jne    8052d56 <parse_pp_string+0x2a0>
 8052b13:	48 8b 05 86 b3 03 00 	mov    0x3b386(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052b1a:	48 8b 00             	mov    (%rax),%rax
 8052b1d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052b21:	48 89 08             	mov    %rcx,(%rax)
 8052b24:	b8 00 00 00 00       	mov    $0x0,%eax
 8052b29:	e8 b6 f5 ff ff       	callq  80520e4 <handle_eob>
 8052b2e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8052b31:	48 8b 05 68 b3 03 00 	mov    0x3b368(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052b38:	48 8b 00             	mov    (%rax),%rax
 8052b3b:	48 8b 08             	mov    (%rax),%rcx
 8052b3e:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052b42:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052b45:	83 f8 ff             	cmp    $0xffffffff,%eax
 8052b48:	0f 85 1f 00 00 00    	jne    8052b6d <parse_pp_string+0xb7>
 8052b4e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8052b51:	48 89 c6             	mov    %rax,%rsi
 8052b54:	48 8d 05 25 88 03 00 	lea    0x38825(%rip),%rax        # 808b380 <L.118>
 8052b5b:	48 89 c7             	mov    %rax,%rdi
 8052b5e:	b8 00 00 00 00       	mov    $0x0,%eax
 8052b63:	e8 5f ab ff ff       	callq  804d6c7 <tcc_error>
 8052b68:	e9 e4 01 00 00       	jmpq   8052d51 <parse_pp_string+0x29b>
 8052b6d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052b70:	83 f8 5c             	cmp    $0x5c,%eax
 8052b73:	0f 85 d8 01 00 00    	jne    8052d51 <parse_pp_string+0x29b>
 8052b79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052b7d:	48 89 c1             	mov    %rax,%rcx
 8052b80:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052b87:	00 00 00 
 8052b8a:	48 01 d0             	add    %rdx,%rax
 8052b8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052b95:	0f b6 08             	movzbl (%rax),%ecx
 8052b98:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8052b9b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052b9e:	83 f8 5c             	cmp    $0x5c,%eax
 8052ba1:	0f 85 2f 00 00 00    	jne    8052bd6 <parse_pp_string+0x120>
 8052ba7:	48 8b 05 f2 b2 03 00 	mov    0x3b2f2(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052bae:	48 8b 00             	mov    (%rax),%rax
 8052bb1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052bb5:	48 89 08             	mov    %rcx,(%rax)
 8052bb8:	b8 00 00 00 00       	mov    $0x0,%eax
 8052bbd:	e8 22 f5 ff ff       	callq  80520e4 <handle_eob>
 8052bc2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8052bc5:	48 8b 05 d4 b2 03 00 	mov    0x3b2d4(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052bcc:	48 8b 00             	mov    (%rax),%rax
 8052bcf:	48 8b 08             	mov    (%rax),%rcx
 8052bd2:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052bd6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052bd9:	83 f8 0a             	cmp    $0xa,%eax
 8052bdc:	0f 85 3e 00 00 00    	jne    8052c20 <parse_pp_string+0x16a>
 8052be2:	48 8b 05 b7 b2 03 00 	mov    0x3b2b7(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052be9:	48 8b 00             	mov    (%rax),%rax
 8052bec:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052bf3:	00 00 00 
 8052bf6:	48 01 c8             	add    %rcx,%rax
 8052bf9:	8b 08                	mov    (%rax),%ecx
 8052bfb:	48 89 ca             	mov    %rcx,%rdx
 8052bfe:	83 c1 01             	add    $0x1,%ecx
 8052c01:	89 08                	mov    %ecx,(%rax)
 8052c03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052c07:	48 89 c1             	mov    %rax,%rcx
 8052c0a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052c11:	00 00 00 
 8052c14:	48 01 d0             	add    %rdx,%rax
 8052c17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052c1b:	e9 31 01 00 00       	jmpq   8052d51 <parse_pp_string+0x29b>
 8052c20:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052c23:	83 f8 0d             	cmp    $0xd,%eax
 8052c26:	0f 85 bb 00 00 00    	jne    8052ce7 <parse_pp_string+0x231>
 8052c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052c30:	48 89 c1             	mov    %rax,%rcx
 8052c33:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052c3a:	00 00 00 
 8052c3d:	48 01 d0             	add    %rdx,%rax
 8052c40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052c48:	0f b6 08             	movzbl (%rax),%ecx
 8052c4b:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8052c4e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052c51:	83 f8 5c             	cmp    $0x5c,%eax
 8052c54:	0f 85 2f 00 00 00    	jne    8052c89 <parse_pp_string+0x1d3>
 8052c5a:	48 8b 05 3f b2 03 00 	mov    0x3b23f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052c61:	48 8b 00             	mov    (%rax),%rax
 8052c64:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052c68:	48 89 08             	mov    %rcx,(%rax)
 8052c6b:	b8 00 00 00 00       	mov    $0x0,%eax
 8052c70:	e8 6f f4 ff ff       	callq  80520e4 <handle_eob>
 8052c75:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8052c78:	48 8b 05 21 b2 03 00 	mov    0x3b221(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052c7f:	48 8b 00             	mov    (%rax),%rax
 8052c82:	48 8b 08             	mov    (%rax),%rcx
 8052c85:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052c89:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052c8c:	83 f8 0a             	cmp    $0xa,%eax
 8052c8f:	0f 84 14 00 00 00    	je     8052ca9 <parse_pp_string+0x1f3>
 8052c95:	48 8d 05 05 87 03 00 	lea    0x38705(%rip),%rax        # 808b3a1 <L.119>
 8052c9c:	48 89 c7             	mov    %rax,%rdi
 8052c9f:	b8 00 00 00 00       	mov    $0x0,%eax
 8052ca4:	e8 a9 e4 ff ff       	callq  8051152 <expect>
 8052ca9:	48 8b 05 f0 b1 03 00 	mov    0x3b1f0(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052cb0:	48 8b 00             	mov    (%rax),%rax
 8052cb3:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052cba:	00 00 00 
 8052cbd:	48 01 c8             	add    %rcx,%rax
 8052cc0:	8b 08                	mov    (%rax),%ecx
 8052cc2:	48 89 ca             	mov    %rcx,%rdx
 8052cc5:	83 c1 01             	add    $0x1,%ecx
 8052cc8:	89 08                	mov    %ecx,(%rax)
 8052cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052cce:	48 89 c1             	mov    %rax,%rcx
 8052cd1:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052cd8:	00 00 00 
 8052cdb:	48 01 d0             	add    %rdx,%rax
 8052cde:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052ce2:	e9 6a 00 00 00       	jmpq   8052d51 <parse_pp_string+0x29b>
 8052ce7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052cea:	83 f8 ff             	cmp    $0xffffffff,%eax
 8052ced:	0f 85 0a 00 00 00    	jne    8052cfd <parse_pp_string+0x247>
 8052cf3:	e9 56 fe ff ff       	jmpq   8052b4e <parse_pp_string+0x98>
 8052cf8:	e9 54 00 00 00       	jmpq   8052d51 <parse_pp_string+0x29b>
 8052cfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052d01:	85 c0                	test   %eax,%eax
 8052d03:	0f 84 30 00 00 00    	je     8052d39 <parse_pp_string+0x283>
 8052d09:	b8 5c 00 00 00       	mov    $0x5c,%eax
 8052d0e:	48 89 c6             	mov    %rax,%rsi
 8052d11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052d15:	48 89 c7             	mov    %rax,%rdi
 8052d18:	b8 00 00 00 00       	mov    $0x0,%eax
 8052d1d:	e8 2b e5 ff ff       	callq  805124d <cstr_ccat>
 8052d22:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052d25:	48 89 c6             	mov    %rax,%rsi
 8052d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052d2c:	48 89 c7             	mov    %rax,%rdi
 8052d2f:	b8 00 00 00 00       	mov    $0x0,%eax
 8052d34:	e8 14 e5 ff ff       	callq  805124d <cstr_ccat>
 8052d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052d3d:	48 89 c1             	mov    %rax,%rcx
 8052d40:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052d47:	00 00 00 
 8052d4a:	48 01 d0             	add    %rdx,%rax
 8052d4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052d51:	e9 3c 01 00 00       	jmpq   8052e92 <parse_pp_string+0x3dc>
 8052d56:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052d59:	83 f8 0a             	cmp    $0xa,%eax
 8052d5c:	0f 85 2b 00 00 00    	jne    8052d8d <parse_pp_string+0x2d7>
 8052d62:	48 8b 05 37 b1 03 00 	mov    0x3b137(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052d69:	48 8b 00             	mov    (%rax),%rax
 8052d6c:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052d73:	00 00 00 
 8052d76:	48 01 c8             	add    %rcx,%rax
 8052d79:	8b 08                	mov    (%rax),%ecx
 8052d7b:	48 89 ca             	mov    %rcx,%rdx
 8052d7e:	83 c1 01             	add    $0x1,%ecx
 8052d81:	89 08                	mov    %ecx,(%rax)
 8052d83:	e9 cf 00 00 00       	jmpq   8052e57 <parse_pp_string+0x3a1>
 8052d88:	e9 05 01 00 00       	jmpq   8052e92 <parse_pp_string+0x3dc>
 8052d8d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052d90:	83 f8 0d             	cmp    $0xd,%eax
 8052d93:	0f 85 be 00 00 00    	jne    8052e57 <parse_pp_string+0x3a1>
 8052d99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052d9d:	48 89 c1             	mov    %rax,%rcx
 8052da0:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052da7:	00 00 00 
 8052daa:	48 01 d0             	add    %rdx,%rax
 8052dad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052db1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052db5:	0f b6 08             	movzbl (%rax),%ecx
 8052db8:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8052dbb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052dbe:	83 f8 5c             	cmp    $0x5c,%eax
 8052dc1:	0f 85 2f 00 00 00    	jne    8052df6 <parse_pp_string+0x340>
 8052dc7:	48 8b 05 d2 b0 03 00 	mov    0x3b0d2(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052dce:	48 8b 00             	mov    (%rax),%rax
 8052dd1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8052dd5:	48 89 08             	mov    %rcx,(%rax)
 8052dd8:	b8 00 00 00 00       	mov    $0x0,%eax
 8052ddd:	e8 02 f3 ff ff       	callq  80520e4 <handle_eob>
 8052de2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8052de5:	48 8b 05 b4 b0 03 00 	mov    0x3b0b4(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052dec:	48 8b 00             	mov    (%rax),%rax
 8052def:	48 8b 08             	mov    (%rax),%rcx
 8052df2:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 8052df6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052df9:	83 f8 0a             	cmp    $0xa,%eax
 8052dfc:	0f 84 2a 00 00 00    	je     8052e2c <parse_pp_string+0x376>
 8052e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052e06:	85 c0                	test   %eax,%eax
 8052e08:	0f 84 19 00 00 00    	je     8052e27 <parse_pp_string+0x371>
 8052e0e:	b8 0d 00 00 00       	mov    $0xd,%eax
 8052e13:	48 89 c6             	mov    %rax,%rsi
 8052e16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052e1a:	48 89 c7             	mov    %rax,%rdi
 8052e1d:	b8 00 00 00 00       	mov    $0x0,%eax
 8052e22:	e8 26 e4 ff ff       	callq  805124d <cstr_ccat>
 8052e27:	e9 26 00 00 00       	jmpq   8052e52 <parse_pp_string+0x39c>
 8052e2c:	48 8b 05 6d b0 03 00 	mov    0x3b06d(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052e33:	48 8b 00             	mov    (%rax),%rax
 8052e36:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052e3d:	00 00 00 
 8052e40:	48 01 c8             	add    %rcx,%rax
 8052e43:	8b 08                	mov    (%rax),%ecx
 8052e45:	48 89 ca             	mov    %rcx,%rdx
 8052e48:	83 c1 01             	add    $0x1,%ecx
 8052e4b:	89 08                	mov    %ecx,(%rax)
 8052e4d:	e9 05 00 00 00       	jmpq   8052e57 <parse_pp_string+0x3a1>
 8052e52:	e9 3b 00 00 00       	jmpq   8052e92 <parse_pp_string+0x3dc>
 8052e57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052e5b:	85 c0                	test   %eax,%eax
 8052e5d:	0f 84 17 00 00 00    	je     8052e7a <parse_pp_string+0x3c4>
 8052e63:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8052e66:	48 89 c6             	mov    %rax,%rsi
 8052e69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052e6d:	48 89 c7             	mov    %rax,%rdi
 8052e70:	b8 00 00 00 00       	mov    $0x0,%eax
 8052e75:	e8 d3 e3 ff ff       	callq  805124d <cstr_ccat>
 8052e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052e7e:	48 89 c1             	mov    %rax,%rcx
 8052e81:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052e88:	00 00 00 
 8052e8b:	48 01 d0             	add    %rdx,%rax
 8052e8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052e92:	e9 4e fc ff ff       	jmpq   8052ae5 <parse_pp_string+0x2f>
 8052e97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052e9b:	48 89 c1             	mov    %rax,%rcx
 8052e9e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052ea5:	00 00 00 
 8052ea8:	48 01 d0             	add    %rdx,%rax
 8052eab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8052eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8052eb3:	e9 00 00 00 00       	jmpq   8052eb8 <parse_pp_string+0x402>
 8052eb8:	c9                   	leaveq 
 8052eb9:	c3                   	retq   

0000000008052eba <preprocess_skip>:
 8052eba:	55                   	push   %rbp
 8052ebb:	48 89 e5             	mov    %rsp,%rbp
 8052ebe:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8052ec5:	48 8b 05 d4 af 03 00 	mov    0x3afd4(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052ecc:	48 8b 00             	mov    (%rax),%rax
 8052ecf:	48 8b 08             	mov    (%rax),%rcx
 8052ed2:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8052ed6:	b8 00 00 00 00       	mov    $0x0,%eax
 8052edb:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8052ede:	b8 01 00 00 00       	mov    $0x1,%eax
 8052ee3:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8052ee6:	b8 00 00 00 00       	mov    $0x0,%eax
 8052eeb:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8052eee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052ef2:	0f b6 08             	movzbl (%rax),%ecx
 8052ef5:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8052ef8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052efb:	e9 05 00 00 00       	jmpq   8052f05 <preprocess_skip+0x4b>
 8052f00:	e9 09 00 00 00       	jmpq   8052f0e <preprocess_skip+0x54>
 8052f05:	83 f8 20             	cmp    $0x20,%eax
 8052f08:	0f 85 05 00 00 00    	jne    8052f13 <preprocess_skip+0x59>
 8052f0e:	e9 09 00 00 00       	jmpq   8052f1c <preprocess_skip+0x62>
 8052f13:	83 f8 09             	cmp    $0x9,%eax
 8052f16:	0f 85 05 00 00 00    	jne    8052f21 <preprocess_skip+0x67>
 8052f1c:	e9 09 00 00 00       	jmpq   8052f2a <preprocess_skip+0x70>
 8052f21:	83 f8 0c             	cmp    $0xc,%eax
 8052f24:	0f 85 05 00 00 00    	jne    8052f2f <preprocess_skip+0x75>
 8052f2a:	e9 09 00 00 00       	jmpq   8052f38 <preprocess_skip+0x7e>
 8052f2f:	83 f8 0b             	cmp    $0xb,%eax
 8052f32:	0f 85 05 00 00 00    	jne    8052f3d <preprocess_skip+0x83>
 8052f38:	e9 09 00 00 00       	jmpq   8052f46 <preprocess_skip+0x8c>
 8052f3d:	83 f8 0d             	cmp    $0xd,%eax
 8052f40:	0f 85 1f 00 00 00    	jne    8052f65 <preprocess_skip+0xab>
 8052f46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052f4a:	48 89 c1             	mov    %rax,%rcx
 8052f4d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052f54:	00 00 00 
 8052f57:	48 01 d0             	add    %rdx,%rax
 8052f5a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8052f5e:	eb 8e                	jmp    8052eee <preprocess_skip+0x34>
 8052f60:	e9 09 00 00 00       	jmpq   8052f6e <preprocess_skip+0xb4>
 8052f65:	83 f8 0a             	cmp    $0xa,%eax
 8052f68:	0f 85 43 00 00 00    	jne    8052fb1 <preprocess_skip+0xf7>
 8052f6e:	48 8b 05 2b af 03 00 	mov    0x3af2b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052f75:	48 8b 00             	mov    (%rax),%rax
 8052f78:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8052f7f:	00 00 00 
 8052f82:	48 01 c8             	add    %rcx,%rax
 8052f85:	8b 08                	mov    (%rax),%ecx
 8052f87:	48 89 ca             	mov    %rcx,%rdx
 8052f8a:	83 c1 01             	add    $0x1,%ecx
 8052f8d:	89 08                	mov    %ecx,(%rax)
 8052f8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8052f93:	48 89 c1             	mov    %rax,%rcx
 8052f96:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8052f9d:	00 00 00 
 8052fa0:	48 01 d0             	add    %rdx,%rax
 8052fa3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8052fa7:	e9 32 ff ff ff       	jmpq   8052ede <preprocess_skip+0x24>
 8052fac:	e9 09 00 00 00       	jmpq   8052fba <preprocess_skip+0x100>
 8052fb1:	83 f8 5c             	cmp    $0x5c,%eax
 8052fb4:	0f 85 8e 00 00 00    	jne    8053048 <preprocess_skip+0x18e>
 8052fba:	48 8b 05 df ae 03 00 	mov    0x3aedf(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8052fc1:	48 8b 00             	mov    (%rax),%rax
 8052fc4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8052fc8:	48 89 08             	mov    %rcx,(%rax)
 8052fcb:	b8 00 00 00 00       	mov    $0x0,%eax
 8052fd0:	e8 0f f1 ff ff       	callq  80520e4 <handle_eob>
 8052fd5:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8052fd8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8052fdb:	83 f8 ff             	cmp    $0xffffffff,%eax
 8052fde:	0f 85 19 00 00 00    	jne    8052ffd <preprocess_skip+0x143>
 8052fe4:	48 8d 05 c4 83 03 00 	lea    0x383c4(%rip),%rax        # 808b3af <L.120>
 8052feb:	48 89 c7             	mov    %rax,%rdi
 8052fee:	b8 00 00 00 00       	mov    $0x0,%eax
 8052ff3:	e8 5a e1 ff ff       	callq  8051152 <expect>
 8052ff8:	e9 30 00 00 00       	jmpq   805302d <preprocess_skip+0x173>
 8052ffd:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8053000:	83 f8 5c             	cmp    $0x5c,%eax
 8053003:	0f 85 24 00 00 00    	jne    805302d <preprocess_skip+0x173>
 8053009:	48 8b 05 90 ae 03 00 	mov    0x3ae90(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053010:	48 8b 00             	mov    (%rax),%rax
 8053013:	48 8b 08             	mov    (%rax),%rcx
 8053016:	0f b6 01             	movzbl (%rcx),%eax
 8053019:	4c 8b 1d e8 ae 03 00 	mov    0x3aee8(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8053020:	41 89 03             	mov    %eax,(%r11)
 8053023:	b8 00 00 00 00       	mov    $0x0,%eax
 8053028:	e8 3d f1 ff ff       	callq  805216a <handle_stray_noerror>
 805302d:	48 8b 05 6c ae 03 00 	mov    0x3ae6c(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053034:	48 8b 00             	mov    (%rax),%rax
 8053037:	48 8b 08             	mov    (%rax),%rcx
 805303a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 805303e:	e9 ab fe ff ff       	jmpq   8052eee <preprocess_skip+0x34>
 8053043:	e9 09 00 00 00       	jmpq   8053051 <preprocess_skip+0x197>
 8053048:	83 f8 22             	cmp    $0x22,%eax
 805304b:	0f 85 05 00 00 00    	jne    8053056 <preprocess_skip+0x19c>
 8053051:	e9 09 00 00 00       	jmpq   805305f <preprocess_skip+0x1a5>
 8053056:	83 f8 27             	cmp    $0x27,%eax
 8053059:	0f 85 40 00 00 00    	jne    805309f <preprocess_skip+0x1e5>
 805305f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8053062:	85 c0                	test   %eax,%eax
 8053064:	0f 84 05 00 00 00    	je     805306f <preprocess_skip+0x1b5>
 805306a:	e9 63 02 00 00       	jmpq   80532d2 <preprocess_skip+0x418>
 805306f:	b8 00 00 00 00       	mov    $0x0,%eax
 8053074:	49 89 c2             	mov    %rax,%r10
 8053077:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805307a:	48 89 c6             	mov    %rax,%rsi
 805307d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053081:	48 89 c7             	mov    %rax,%rdi
 8053084:	4c 89 d2             	mov    %r10,%rdx
 8053087:	b8 00 00 00 00       	mov    $0x0,%eax
 805308c:	e8 25 fa ff ff       	callq  8052ab6 <parse_pp_string>
 8053091:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8053095:	e9 55 02 00 00       	jmpq   80532ef <preprocess_skip+0x435>
 805309a:	e9 09 00 00 00       	jmpq   80530a8 <preprocess_skip+0x1ee>
 805309f:	83 f8 2f             	cmp    $0x2f,%eax
 80530a2:	0f 85 aa 00 00 00    	jne    8053152 <preprocess_skip+0x298>
 80530a8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80530ab:	85 c0                	test   %eax,%eax
 80530ad:	0f 84 05 00 00 00    	je     80530b8 <preprocess_skip+0x1fe>
 80530b3:	e9 1a 02 00 00       	jmpq   80532d2 <preprocess_skip+0x418>
 80530b8:	48 8b 05 e1 ad 03 00 	mov    0x3ade1(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80530bf:	48 8b 00             	mov    (%rax),%rax
 80530c2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 80530c6:	48 89 08             	mov    %rcx,(%rax)
 80530c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80530cd:	0f b6 08             	movzbl (%rax),%ecx
 80530d0:	4c 8b 1d 31 ae 03 00 	mov    0x3ae31(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80530d7:	41 89 0b             	mov    %ecx,(%r11)
 80530da:	b8 00 00 00 00       	mov    $0x0,%eax
 80530df:	e8 72 f2 ff ff       	callq  8052356 <minp>
 80530e4:	48 8b 05 b5 ad 03 00 	mov    0x3adb5(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80530eb:	48 8b 00             	mov    (%rax),%rax
 80530ee:	48 8b 08             	mov    (%rax),%rcx
 80530f1:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 80530f5:	48 8b 05 0c ae 03 00 	mov    0x3ae0c(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80530fc:	8b 00                	mov    (%rax),%eax
 80530fe:	83 f8 2a             	cmp    $0x2a,%eax
 8053101:	0f 85 1a 00 00 00    	jne    8053121 <preprocess_skip+0x267>
 8053107:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805310b:	48 89 c7             	mov    %rax,%rdi
 805310e:	b8 00 00 00 00       	mov    $0x0,%eax
 8053113:	e8 26 f5 ff ff       	callq  805263e <parse_comment>
 8053118:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805311c:	e9 27 00 00 00       	jmpq   8053148 <preprocess_skip+0x28e>
 8053121:	48 8b 05 e0 ad 03 00 	mov    0x3ade0(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8053128:	8b 00                	mov    (%rax),%eax
 805312a:	83 f8 2f             	cmp    $0x2f,%eax
 805312d:	0f 85 15 00 00 00    	jne    8053148 <preprocess_skip+0x28e>
 8053133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053137:	48 89 c7             	mov    %rax,%rdi
 805313a:	b8 00 00 00 00       	mov    $0x0,%eax
 805313f:	e8 45 f2 ff ff       	callq  8052389 <parse_line_comment>
 8053144:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8053148:	e9 a2 01 00 00       	jmpq   80532ef <preprocess_skip+0x435>
 805314d:	e9 09 00 00 00       	jmpq   805315b <preprocess_skip+0x2a1>
 8053152:	83 f8 23             	cmp    $0x23,%eax
 8053155:	0f 85 77 01 00 00    	jne    80532d2 <preprocess_skip+0x418>
 805315b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805315f:	48 89 c1             	mov    %rax,%rcx
 8053162:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8053169:	00 00 00 
 805316c:	48 01 d0             	add    %rdx,%rax
 805316f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8053173:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053176:	85 c0                	test   %eax,%eax
 8053178:	0f 84 4f 01 00 00    	je     80532cd <preprocess_skip+0x413>
 805317e:	48 8b 05 1b ad 03 00 	mov    0x3ad1b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053185:	48 8b 00             	mov    (%rax),%rax
 8053188:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805318c:	48 89 08             	mov    %rcx,(%rax)
 805318f:	b8 00 00 00 00       	mov    $0x0,%eax
 8053194:	e8 d6 42 00 00       	callq  805746f <next_nomacro>
 8053199:	48 8b 05 00 ad 03 00 	mov    0x3ad00(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80531a0:	48 8b 00             	mov    (%rax),%rax
 80531a3:	48 8b 08             	mov    (%rax),%rcx
 80531a6:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 80531aa:	8b 45 fc             	mov    -0x4(%rbp),%eax
 80531ad:	83 f8 00             	cmp    $0x0,%eax
 80531b0:	0f 85 49 00 00 00    	jne    80531ff <preprocess_skip+0x345>
 80531b6:	48 8b 05 6b ad 03 00 	mov    0x3ad6b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80531bd:	8b 00                	mov    (%rax),%eax
 80531bf:	81 f8 04 01 00 00    	cmp    $0x104,%eax
 80531c5:	0f 84 2f 00 00 00    	je     80531fa <preprocess_skip+0x340>
 80531cb:	48 8b 05 56 ad 03 00 	mov    0x3ad56(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80531d2:	8b 00                	mov    (%rax),%eax
 80531d4:	81 f8 3e 01 00 00    	cmp    $0x13e,%eax
 80531da:	0f 84 1a 00 00 00    	je     80531fa <preprocess_skip+0x340>
 80531e0:	48 8b 05 41 ad 03 00 	mov    0x3ad41(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80531e7:	8b 00                	mov    (%rax),%eax
 80531e9:	81 f8 3f 01 00 00    	cmp    $0x13f,%eax
 80531ef:	0f 84 05 00 00 00    	je     80531fa <preprocess_skip+0x340>
 80531f5:	e9 05 00 00 00       	jmpq   80531ff <preprocess_skip+0x345>
 80531fa:	e9 fd 00 00 00       	jmpq   80532fc <preprocess_skip+0x442>
 80531ff:	48 8b 05 22 ad 03 00 	mov    0x3ad22(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053206:	8b 00                	mov    (%rax),%eax
 8053208:	81 f8 03 01 00 00    	cmp    $0x103,%eax
 805320e:	0f 84 2f 00 00 00    	je     8053243 <preprocess_skip+0x389>
 8053214:	48 8b 05 0d ad 03 00 	mov    0x3ad0d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805321b:	8b 00                	mov    (%rax),%eax
 805321d:	81 f8 3c 01 00 00    	cmp    $0x13c,%eax
 8053223:	0f 84 1a 00 00 00    	je     8053243 <preprocess_skip+0x389>
 8053229:	48 8b 05 f8 ac 03 00 	mov    0x3acf8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053230:	8b 00                	mov    (%rax),%eax
 8053232:	81 f8 3d 01 00 00    	cmp    $0x13d,%eax
 8053238:	0f 84 05 00 00 00    	je     8053243 <preprocess_skip+0x389>
 805323e:	e9 11 00 00 00       	jmpq   8053254 <preprocess_skip+0x39a>
 8053243:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8053246:	48 89 c1             	mov    %rax,%rcx
 8053249:	83 c0 01             	add    $0x1,%eax
 805324c:	89 45 fc             	mov    %eax,-0x4(%rbp)
 805324f:	e9 79 00 00 00       	jmpq   80532cd <preprocess_skip+0x413>
 8053254:	48 8b 05 cd ac 03 00 	mov    0x3accd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805325b:	8b 00                	mov    (%rax),%eax
 805325d:	81 f8 3f 01 00 00    	cmp    $0x13f,%eax
 8053263:	0f 85 11 00 00 00    	jne    805327a <preprocess_skip+0x3c0>
 8053269:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805326c:	48 89 c1             	mov    %rax,%rcx
 805326f:	83 c0 ff             	add    $0xffffffff,%eax
 8053272:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8053275:	e9 53 00 00 00       	jmpq   80532cd <preprocess_skip+0x413>
 805327a:	48 8b 05 a7 ac 03 00 	mov    0x3aca7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053281:	8b 00                	mov    (%rax),%eax
 8053283:	81 f8 42 01 00 00    	cmp    $0x142,%eax
 8053289:	0f 84 1a 00 00 00    	je     80532a9 <preprocess_skip+0x3ef>
 805328f:	48 8b 05 92 ac 03 00 	mov    0x3ac92(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053296:	8b 00                	mov    (%rax),%eax
 8053298:	81 f8 43 01 00 00    	cmp    $0x143,%eax
 805329e:	0f 84 05 00 00 00    	je     80532a9 <preprocess_skip+0x3ef>
 80532a4:	e9 0d 00 00 00       	jmpq   80532b6 <preprocess_skip+0x3fc>
 80532a9:	b8 01 00 00 00       	mov    $0x1,%eax
 80532ae:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80532b1:	e9 17 00 00 00       	jmpq   80532cd <preprocess_skip+0x413>
 80532b6:	48 8b 05 6b ac 03 00 	mov    0x3ac6b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80532bd:	8b 00                	mov    (%rax),%eax
 80532bf:	83 f8 0a             	cmp    $0xa,%eax
 80532c2:	0f 85 05 00 00 00    	jne    80532cd <preprocess_skip+0x413>
 80532c8:	e9 11 fc ff ff       	jmpq   8052ede <preprocess_skip+0x24>
 80532cd:	e9 1d 00 00 00       	jmpq   80532ef <preprocess_skip+0x435>
 80532d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80532d6:	48 89 c1             	mov    %rax,%rcx
 80532d9:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80532e0:	00 00 00 
 80532e3:	48 01 d0             	add    %rdx,%rax
 80532e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 80532ea:	e9 00 00 00 00       	jmpq   80532ef <preprocess_skip+0x435>
 80532ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80532f4:	89 45 f8             	mov    %eax,-0x8(%rbp)
 80532f7:	e9 f2 fb ff ff       	jmpq   8052eee <preprocess_skip+0x34>
 80532fc:	48 8b 05 9d ab 03 00 	mov    0x3ab9d(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053303:	48 8b 00             	mov    (%rax),%rax
 8053306:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805330a:	48 89 08             	mov    %rcx,(%rax)
 805330d:	c9                   	leaveq 
 805330e:	c3                   	retq   

000000000805330f <save_parse_state>:
 805330f:	55                   	push   %rbp
 8053310:	48 89 e5             	mov    %rsp,%rbp
 8053313:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805331a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805331e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053322:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053329:	00 00 00 
 805332c:	48 01 c8             	add    %rcx,%rax
 805332f:	48 8b 0d 6a ab 03 00 	mov    0x3ab6a(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053336:	48 8b 09             	mov    (%rcx),%rcx
 8053339:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8053340:	00 00 00 
 8053343:	48 01 d1             	add    %rdx,%rcx
 8053346:	8b 11                	mov    (%rcx),%edx
 8053348:	89 10                	mov    %edx,(%rax)
 805334a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805334e:	48 8b 0d 1b ac 03 00 	mov    0x3ac1b(%rip),%rcx        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8053355:	48 8b 09             	mov    (%rcx),%rcx
 8053358:	48 89 08             	mov    %rcx,(%rax)
 805335b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805335f:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8053366:	00 00 00 
 8053369:	48 01 c8             	add    %rcx,%rax
 805336c:	48 8b 0d b5 ab 03 00 	mov    0x3abb5(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053373:	8b 09                	mov    (%rcx),%ecx
 8053375:	89 08                	mov    %ecx,(%rax)
 8053377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805337b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8053382:	00 00 00 
 8053385:	48 01 c8             	add    %rcx,%rax
 8053388:	b9 10 00 00 00       	mov    $0x10,%ecx
 805338d:	49 89 ca             	mov    %rcx,%r10
 8053390:	48 8b 0d 11 ac 03 00 	mov    0x3ac11(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8053397:	48 89 ce             	mov    %rcx,%rsi
 805339a:	48 89 c7             	mov    %rax,%rdi
 805339d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 80533a1:	4c 89 d2             	mov    %r10,%rdx
 80533a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80533a9:	e8 c2 38 03 00       	callq  8086c70 <memcpy>
 80533ae:	c9                   	leaveq 
 80533af:	c3                   	retq   

00000000080533b0 <restore_parse_state>:
 80533b0:	55                   	push   %rbp
 80533b1:	48 89 e5             	mov    %rsp,%rbp
 80533b4:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80533bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80533bf:	48 8b 05 da aa 03 00 	mov    0x3aada(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80533c6:	48 8b 00             	mov    (%rax),%rax
 80533c9:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80533d0:	00 00 00 
 80533d3:	48 01 c8             	add    %rcx,%rax
 80533d6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80533da:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80533e1:	00 00 00 
 80533e4:	48 01 d1             	add    %rdx,%rcx
 80533e7:	8b 11                	mov    (%rcx),%edx
 80533e9:	89 10                	mov    %edx,(%rax)
 80533eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80533ef:	48 8b 08             	mov    (%rax),%rcx
 80533f2:	4c 8b 1d 77 ab 03 00 	mov    0x3ab77(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80533f9:	49 89 0b             	mov    %rcx,(%r11)
 80533fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053400:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8053407:	00 00 00 
 805340a:	48 01 c8             	add    %rcx,%rax
 805340d:	8b 08                	mov    (%rax),%ecx
 805340f:	4c 8b 1d 12 ab 03 00 	mov    0x3ab12(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053416:	41 89 0b             	mov    %ecx,(%r11)
 8053419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805341d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8053424:	00 00 00 
 8053427:	48 01 c8             	add    %rcx,%rax
 805342a:	b9 10 00 00 00       	mov    $0x10,%ecx
 805342f:	49 89 ca             	mov    %rcx,%r10
 8053432:	48 89 c6             	mov    %rax,%rsi
 8053435:	48 8b 0d 6c ab 03 00 	mov    0x3ab6c(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805343c:	48 89 cf             	mov    %rcx,%rdi
 805343f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8053443:	4c 89 d2             	mov    %r10,%rdx
 8053446:	b8 00 00 00 00       	mov    $0x0,%eax
 805344b:	e8 20 38 03 00       	callq  8086c70 <memcpy>
 8053450:	c9                   	leaveq 
 8053451:	c3                   	retq   

0000000008053452 <tok_str_new>:
 8053452:	55                   	push   %rbp
 8053453:	48 89 e5             	mov    %rsp,%rbp
 8053456:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805345d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053465:	b9 00 00 00 00       	mov    $0x0,%ecx
 805346a:	48 89 08             	mov    %rcx,(%rax)
 805346d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053471:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053478:	00 00 00 
 805347b:	48 01 c8             	add    %rcx,%rax
 805347e:	b9 00 00 00 00       	mov    $0x0,%ecx
 8053483:	89 08                	mov    %ecx,(%rax)
 8053485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053489:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8053490:	00 00 00 
 8053493:	48 01 c8             	add    %rcx,%rax
 8053496:	b9 00 00 00 00       	mov    $0x0,%ecx
 805349b:	89 08                	mov    %ecx,(%rax)
 805349d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80534a1:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80534a8:	00 00 00 
 80534ab:	48 01 c8             	add    %rcx,%rax
 80534ae:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80534b3:	89 08                	mov    %ecx,(%rax)
 80534b5:	c9                   	leaveq 
 80534b6:	c3                   	retq   

00000000080534b7 <tok_str_free>:
 80534b7:	55                   	push   %rbp
 80534b8:	48 89 e5             	mov    %rsp,%rbp
 80534bb:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80534c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80534c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80534ca:	48 89 c7             	mov    %rax,%rdi
 80534cd:	b8 00 00 00 00       	mov    $0x0,%eax
 80534d2:	e8 5f 8a ff ff       	callq  804bf36 <tcc_free>
 80534d7:	c9                   	leaveq 
 80534d8:	c3                   	retq   

00000000080534d9 <tok_str_realloc>:
 80534d9:	55                   	push   %rbp
 80534da:	48 89 e5             	mov    %rsp,%rbp
 80534dd:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80534e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80534e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80534ec:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 80534f3:	00 00 00 
 80534f6:	48 01 c8             	add    %rcx,%rax
 80534f9:	8b 08                	mov    (%rax),%ecx
 80534fb:	83 f9 00             	cmp    $0x0,%ecx
 80534fe:	0f 85 0d 00 00 00    	jne    8053511 <tok_str_realloc+0x38>
 8053504:	b8 08 00 00 00       	mov    $0x8,%eax
 8053509:	89 45 ec             	mov    %eax,-0x14(%rbp)
 805350c:	e9 19 00 00 00       	jmpq   805352a <tok_str_realloc+0x51>
 8053511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053515:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 805351c:	00 00 00 
 805351f:	48 01 c8             	add    %rcx,%rax
 8053522:	8b 08                	mov    (%rax),%ecx
 8053524:	c1 e1 01             	shl    $0x1,%ecx
 8053527:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805352a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805352e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8053531:	c1 e1 02             	shl    $0x2,%ecx
 8053534:	48 89 ca             	mov    %rcx,%rdx
 8053537:	48 89 d6             	mov    %rdx,%rsi
 805353a:	48 8b 08             	mov    (%rax),%rcx
 805353d:	48 89 cf             	mov    %rcx,%rdi
 8053540:	b8 00 00 00 00       	mov    $0x0,%eax
 8053545:	e8 d3 8a ff ff       	callq  804c01d <tcc_realloc>
 805354a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805354e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053552:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8053559:	00 00 00 
 805355c:	48 01 c8             	add    %rcx,%rax
 805355f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8053562:	89 08                	mov    %ecx,(%rax)
 8053564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053568:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805356c:	48 89 08             	mov    %rcx,(%rax)
 805356f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053573:	e9 00 00 00 00       	jmpq   8053578 <tok_str_realloc+0x9f>
 8053578:	c9                   	leaveq 
 8053579:	c3                   	retq   

000000000805357a <tok_str_add>:
 805357a:	55                   	push   %rbp
 805357b:	48 89 e5             	mov    %rsp,%rbp
 805357e:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8053585:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053589:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805358d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053591:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053598:	00 00 00 
 805359b:	48 01 c8             	add    %rcx,%rax
 805359e:	8b 08                	mov    (%rax),%ecx
 80535a0:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 80535a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80535a7:	48 8b 08             	mov    (%rax),%rcx
 80535aa:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80535ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80535b2:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 80535b9:	00 00 00 
 80535bc:	48 01 c8             	add    %rcx,%rax
 80535bf:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80535c2:	8b 10                	mov    (%rax),%edx
 80535c4:	39 d1                	cmp    %edx,%ecx
 80535c6:	0f 8c 15 00 00 00    	jl     80535e1 <tok_str_add+0x67>
 80535cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80535d0:	48 89 c7             	mov    %rax,%rdi
 80535d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80535d8:	e8 fc fe ff ff       	callq  80534d9 <tok_str_realloc>
 80535dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80535e1:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80535e4:	48 89 c1             	mov    %rax,%rcx
 80535e7:	83 c0 01             	add    $0x1,%eax
 80535ea:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80535ed:	48 63 c9             	movslq %ecx,%rcx
 80535f0:	48 89 c8             	mov    %rcx,%rax
 80535f3:	48 c1 e0 02          	shl    $0x2,%rax
 80535f7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80535fb:	48 89 c2             	mov    %rax,%rdx
 80535fe:	48 01 d1             	add    %rdx,%rcx
 8053601:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8053604:	89 01                	mov    %eax,(%rcx)
 8053606:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805360a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053611:	00 00 00 
 8053614:	48 01 c8             	add    %rcx,%rax
 8053617:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805361a:	89 08                	mov    %ecx,(%rax)
 805361c:	c9                   	leaveq 
 805361d:	c3                   	retq   

000000000805361e <tok_str_add2>:
 805361e:	55                   	push   %rbp
 805361f:	48 89 e5             	mov    %rsp,%rbp
 8053622:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 8053629:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805362d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8053631:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8053635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053639:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053640:	00 00 00 
 8053643:	48 01 c8             	add    %rcx,%rax
 8053646:	8b 08                	mov    (%rax),%ecx
 8053648:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 805364b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805364f:	48 8b 08             	mov    (%rax),%rcx
 8053652:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8053656:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053659:	83 c0 04             	add    $0x4,%eax
 805365c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8053660:	48 ba 0c 00 00 00 00 	movabs $0xc,%rdx
 8053667:	00 00 00 
 805366a:	48 01 d1             	add    %rdx,%rcx
 805366d:	8b 11                	mov    (%rcx),%edx
 805366f:	39 d0                	cmp    %edx,%eax
 8053671:	0f 8e 15 00 00 00    	jle    805368c <tok_str_add2+0x6e>
 8053677:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805367b:	48 89 c7             	mov    %rax,%rdi
 805367e:	b8 00 00 00 00       	mov    $0x0,%eax
 8053683:	e8 51 fe ff ff       	callq  80534d9 <tok_str_realloc>
 8053688:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805368c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805368f:	48 89 c1             	mov    %rax,%rcx
 8053692:	83 c0 01             	add    $0x1,%eax
 8053695:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8053698:	48 63 c9             	movslq %ecx,%rcx
 805369b:	48 89 c8             	mov    %rcx,%rax
 805369e:	48 c1 e0 02          	shl    $0x2,%rax
 80536a2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80536a6:	48 89 c2             	mov    %rax,%rdx
 80536a9:	48 01 d1             	add    %rdx,%rcx
 80536ac:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80536af:	89 01                	mov    %eax,(%rcx)
 80536b1:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80536b4:	e9 05 00 00 00       	jmpq   80536be <tok_str_add2+0xa0>
 80536b9:	e9 0c 00 00 00       	jmpq   80536ca <tok_str_add2+0xac>
 80536be:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 80536c4:	0f 85 05 00 00 00    	jne    80536cf <tok_str_add2+0xb1>
 80536ca:	e9 0c 00 00 00       	jmpq   80536db <tok_str_add2+0xbd>
 80536cf:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 80536d5:	0f 85 05 00 00 00    	jne    80536e0 <tok_str_add2+0xc2>
 80536db:	e9 0c 00 00 00       	jmpq   80536ec <tok_str_add2+0xce>
 80536e0:	81 f8 b4 00 00 00    	cmp    $0xb4,%eax
 80536e6:	0f 85 05 00 00 00    	jne    80536f1 <tok_str_add2+0xd3>
 80536ec:	e9 0c 00 00 00       	jmpq   80536fd <tok_str_add2+0xdf>
 80536f1:	81 f8 b7 00 00 00    	cmp    $0xb7,%eax
 80536f7:	0f 85 05 00 00 00    	jne    8053702 <tok_str_add2+0xe4>
 80536fd:	e9 0c 00 00 00       	jmpq   805370e <tok_str_add2+0xf0>
 8053702:	81 f8 b9 00 00 00    	cmp    $0xb9,%eax
 8053708:	0f 85 05 00 00 00    	jne    8053713 <tok_str_add2+0xf5>
 805370e:	e9 0c 00 00 00       	jmpq   805371f <tok_str_add2+0x101>
 8053713:	81 f8 ba 00 00 00    	cmp    $0xba,%eax
 8053719:	0f 85 32 00 00 00    	jne    8053751 <tok_str_add2+0x133>
 805371f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053722:	48 89 c1             	mov    %rax,%rcx
 8053725:	83 c0 01             	add    $0x1,%eax
 8053728:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805372b:	48 63 c9             	movslq %ecx,%rcx
 805372e:	48 89 c8             	mov    %rcx,%rax
 8053731:	48 c1 e0 02          	shl    $0x2,%rax
 8053735:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8053739:	48 89 c2             	mov    %rax,%rdx
 805373c:	48 01 d1             	add    %rdx,%rcx
 805373f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053743:	8b 10                	mov    (%rax),%edx
 8053745:	89 11                	mov    %edx,(%rcx)
 8053747:	e9 cc 02 00 00       	jmpq   8053a18 <tok_str_add2+0x3fa>
 805374c:	e9 0c 00 00 00       	jmpq   805375d <tok_str_add2+0x13f>
 8053751:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 8053757:	0f 85 05 00 00 00    	jne    8053762 <tok_str_add2+0x144>
 805375d:	e9 0c 00 00 00       	jmpq   805376e <tok_str_add2+0x150>
 8053762:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8053768:	0f 85 05 00 00 00    	jne    8053773 <tok_str_add2+0x155>
 805376e:	e9 0c 00 00 00       	jmpq   805377f <tok_str_add2+0x161>
 8053773:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 8053779:	0f 85 27 01 00 00    	jne    80538a6 <tok_str_add2+0x288>
 805377f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053783:	48 8b 08             	mov    (%rax),%rcx
 8053786:	8b 01                	mov    (%rcx),%eax
 8053788:	83 c0 20             	add    $0x20,%eax
 805378b:	83 c0 03             	add    $0x3,%eax
 805378e:	c1 e8 02             	shr    $0x2,%eax
 8053791:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8053794:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053797:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 805379a:	48 01 c8             	add    %rcx,%rax
 805379d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80537a1:	48 ba 0c 00 00 00 00 	movabs $0xc,%rdx
 80537a8:	00 00 00 
 80537ab:	48 01 d1             	add    %rdx,%rcx
 80537ae:	8b 11                	mov    (%rcx),%edx
 80537b0:	39 d0                	cmp    %edx,%eax
 80537b2:	0f 8e 17 00 00 00    	jle    80537cf <tok_str_add2+0x1b1>
 80537b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80537bc:	48 89 c7             	mov    %rax,%rdi
 80537bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80537c4:	e8 10 fd ff ff       	callq  80534d9 <tok_str_realloc>
 80537c9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80537cd:	eb c5                	jmp    8053794 <tok_str_add2+0x176>
 80537cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80537d2:	48 63 c0             	movslq %eax,%rax
 80537d5:	48 89 c1             	mov    %rax,%rcx
 80537d8:	48 c1 e1 02          	shl    $0x2,%rcx
 80537dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80537e0:	48 89 ca             	mov    %rcx,%rdx
 80537e3:	48 01 d0             	add    %rdx,%rax
 80537e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80537ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80537ee:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80537f5:	00 00 00 
 80537f8:	48 01 c8             	add    %rcx,%rax
 80537fb:	b9 00 00 00 00       	mov    $0x0,%ecx
 8053800:	48 89 08             	mov    %rcx,(%rax)
 8053803:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8053807:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805380b:	48 8b 11             	mov    (%rcx),%rdx
 805380e:	8b 0a                	mov    (%rdx),%ecx
 8053810:	89 08                	mov    %ecx,(%rax)
 8053812:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8053816:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805381d:	00 00 00 
 8053820:	48 01 c8             	add    %rcx,%rax
 8053823:	b9 00 00 00 00       	mov    $0x0,%ecx
 8053828:	48 89 08             	mov    %rcx,(%rax)
 805382b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805382f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8053836:	00 00 00 
 8053839:	48 01 c8             	add    %rcx,%rax
 805383c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 8053840:	8b 11                	mov    (%rcx),%edx
 8053842:	89 10                	mov    %edx,(%rax)
 8053844:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8053848:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805384f:	00 00 00 
 8053852:	48 01 c8             	add    %rcx,%rax
 8053855:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8053859:	48 8b 11             	mov    (%rcx),%rdx
 805385c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053863:	00 00 00 
 8053866:	48 01 ca             	add    %rcx,%rdx
 8053869:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805386d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8053871:	8b 01                	mov    (%rcx),%eax
 8053873:	49 89 c2             	mov    %rax,%r10
 8053876:	48 8b 02             	mov    (%rdx),%rax
 8053879:	48 89 c6             	mov    %rax,%rsi
 805387c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8053880:	48 89 c7             	mov    %rax,%rdi
 8053883:	4c 89 d2             	mov    %r10,%rdx
 8053886:	b8 00 00 00 00       	mov    $0x0,%eax
 805388b:	e8 e0 33 03 00       	callq  8086c70 <memcpy>
 8053890:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053893:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 8053896:	48 01 c8             	add    %rcx,%rax
 8053899:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805389c:	e9 77 01 00 00       	jmpq   8053a18 <tok_str_add2+0x3fa>
 80538a1:	e9 0c 00 00 00       	jmpq   80538b2 <tok_str_add2+0x294>
 80538a6:	81 f8 c0 00 00 00    	cmp    $0xc0,%eax
 80538ac:	0f 85 05 00 00 00    	jne    80538b7 <tok_str_add2+0x299>
 80538b2:	e9 0c 00 00 00       	jmpq   80538c3 <tok_str_add2+0x2a5>
 80538b7:	81 f8 c9 00 00 00    	cmp    $0xc9,%eax
 80538bd:	0f 85 05 00 00 00    	jne    80538c8 <tok_str_add2+0x2aa>
 80538c3:	e9 0c 00 00 00       	jmpq   80538d4 <tok_str_add2+0x2b6>
 80538c8:	81 f8 ca 00 00 00    	cmp    $0xca,%eax
 80538ce:	0f 85 67 00 00 00    	jne    805393b <tok_str_add2+0x31d>
 80538d4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80538d7:	48 89 c1             	mov    %rax,%rcx
 80538da:	83 c0 01             	add    $0x1,%eax
 80538dd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80538e0:	48 63 c9             	movslq %ecx,%rcx
 80538e3:	48 89 c8             	mov    %rcx,%rax
 80538e6:	48 c1 e0 02          	shl    $0x2,%rax
 80538ea:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80538ee:	48 89 c2             	mov    %rax,%rdx
 80538f1:	48 01 d1             	add    %rdx,%rcx
 80538f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80538f8:	8b 10                	mov    (%rax),%edx
 80538fa:	89 11                	mov    %edx,(%rcx)
 80538fc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80538ff:	48 89 c1             	mov    %rax,%rcx
 8053902:	83 c0 01             	add    $0x1,%eax
 8053905:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8053908:	48 63 c9             	movslq %ecx,%rcx
 805390b:	48 89 c8             	mov    %rcx,%rax
 805390e:	48 c1 e0 02          	shl    $0x2,%rax
 8053912:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8053916:	48 89 c2             	mov    %rax,%rdx
 8053919:	48 01 d1             	add    %rdx,%rcx
 805391c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053920:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8053927:	00 00 00 
 805392a:	48 01 d0             	add    %rdx,%rax
 805392d:	8b 10                	mov    (%rax),%edx
 805392f:	89 11                	mov    %edx,(%rcx)
 8053931:	e9 e2 00 00 00       	jmpq   8053a18 <tok_str_add2+0x3fa>
 8053936:	e9 0c 00 00 00       	jmpq   8053947 <tok_str_add2+0x329>
 805393b:	81 f8 c1 00 00 00    	cmp    $0xc1,%eax
 8053941:	0f 85 cc 00 00 00    	jne    8053a13 <tok_str_add2+0x3f5>
 8053947:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805394a:	48 89 c1             	mov    %rax,%rcx
 805394d:	83 c0 01             	add    $0x1,%eax
 8053950:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8053953:	48 63 c9             	movslq %ecx,%rcx
 8053956:	48 89 c8             	mov    %rcx,%rax
 8053959:	48 c1 e0 02          	shl    $0x2,%rax
 805395d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8053961:	48 89 c2             	mov    %rax,%rdx
 8053964:	48 01 d1             	add    %rdx,%rcx
 8053967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805396b:	8b 10                	mov    (%rax),%edx
 805396d:	89 11                	mov    %edx,(%rcx)
 805396f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053972:	48 89 c1             	mov    %rax,%rcx
 8053975:	83 c0 01             	add    $0x1,%eax
 8053978:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805397b:	48 63 c9             	movslq %ecx,%rcx
 805397e:	48 89 c8             	mov    %rcx,%rax
 8053981:	48 c1 e0 02          	shl    $0x2,%rax
 8053985:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8053989:	48 89 c2             	mov    %rax,%rdx
 805398c:	48 01 d1             	add    %rdx,%rcx
 805398f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053993:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 805399a:	00 00 00 
 805399d:	48 01 d0             	add    %rdx,%rax
 80539a0:	8b 10                	mov    (%rax),%edx
 80539a2:	89 11                	mov    %edx,(%rcx)
 80539a4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80539a7:	48 89 c1             	mov    %rax,%rcx
 80539aa:	83 c0 01             	add    $0x1,%eax
 80539ad:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80539b0:	48 63 c9             	movslq %ecx,%rcx
 80539b3:	48 89 c8             	mov    %rcx,%rax
 80539b6:	48 c1 e0 02          	shl    $0x2,%rax
 80539ba:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80539be:	48 89 c2             	mov    %rax,%rdx
 80539c1:	48 01 d1             	add    %rdx,%rcx
 80539c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80539c8:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80539cf:	00 00 00 
 80539d2:	48 01 d0             	add    %rdx,%rax
 80539d5:	8b 10                	mov    (%rax),%edx
 80539d7:	89 11                	mov    %edx,(%rcx)
 80539d9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80539dc:	48 89 c1             	mov    %rax,%rcx
 80539df:	83 c0 01             	add    $0x1,%eax
 80539e2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80539e5:	48 63 c9             	movslq %ecx,%rcx
 80539e8:	48 89 c8             	mov    %rcx,%rax
 80539eb:	48 c1 e0 02          	shl    $0x2,%rax
 80539ef:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80539f3:	48 89 c2             	mov    %rax,%rdx
 80539f6:	48 01 d1             	add    %rdx,%rcx
 80539f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80539fd:	48 ba 0c 00 00 00 00 	movabs $0xc,%rdx
 8053a04:	00 00 00 
 8053a07:	48 01 d0             	add    %rdx,%rax
 8053a0a:	8b 10                	mov    (%rax),%edx
 8053a0c:	89 11                	mov    %edx,(%rcx)
 8053a0e:	e9 05 00 00 00       	jmpq   8053a18 <tok_str_add2+0x3fa>
 8053a13:	e9 00 00 00 00       	jmpq   8053a18 <tok_str_add2+0x3fa>
 8053a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053a1c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8053a23:	00 00 00 
 8053a26:	48 01 c8             	add    %rcx,%rax
 8053a29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 8053a2c:	89 08                	mov    %ecx,(%rax)
 8053a2e:	c9                   	leaveq 
 8053a2f:	c3                   	retq   

0000000008053a30 <tok_str_add_tok>:
 8053a30:	55                   	push   %rbp
 8053a31:	48 89 e5             	mov    %rsp,%rbp
 8053a34:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8053a3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053a3f:	48 8b 05 5a a4 03 00 	mov    0x3a45a(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053a46:	48 8b 00             	mov    (%rax),%rax
 8053a49:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8053a50:	00 00 00 
 8053a53:	48 01 c8             	add    %rcx,%rax
 8053a56:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8053a5a:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8053a61:	00 00 00 
 8053a64:	48 01 d1             	add    %rdx,%rcx
 8053a67:	8b 10                	mov    (%rax),%edx
 8053a69:	8b 01                	mov    (%rcx),%eax
 8053a6b:	39 c2                	cmp    %eax,%edx
 8053a6d:	0f 84 65 00 00 00    	je     8053ad8 <tok_str_add_tok+0xa8>
 8053a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053a77:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8053a7e:	00 00 00 
 8053a81:	48 01 c8             	add    %rcx,%rax
 8053a84:	48 8b 0d 15 a4 03 00 	mov    0x3a415(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8053a8b:	48 8b 09             	mov    (%rcx),%rcx
 8053a8e:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8053a95:	00 00 00 
 8053a98:	48 01 d1             	add    %rdx,%rcx
 8053a9b:	8b 11                	mov    (%rcx),%edx
 8053a9d:	89 10                	mov    %edx,(%rax)
 8053a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053aa3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8053aaa:	00 00 00 
 8053aad:	48 01 c8             	add    %rcx,%rax
 8053ab0:	8b 08                	mov    (%rax),%ecx
 8053ab2:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 8053ab5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 8053ab9:	49 89 c2             	mov    %rax,%r10
 8053abc:	b8 ba 00 00 00       	mov    $0xba,%eax
 8053ac1:	48 89 c6             	mov    %rax,%rsi
 8053ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053ac8:	48 89 c7             	mov    %rax,%rdi
 8053acb:	4c 89 d2             	mov    %r10,%rdx
 8053ace:	b8 00 00 00 00       	mov    $0x0,%eax
 8053ad3:	e8 46 fb ff ff       	callq  805361e <tok_str_add2>
 8053ad8:	48 8b 05 c9 a4 03 00 	mov    0x3a4c9(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8053adf:	49 89 c2             	mov    %rax,%r10
 8053ae2:	48 8b 05 3f a4 03 00 	mov    0x3a43f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8053ae9:	8b 00                	mov    (%rax),%eax
 8053aeb:	48 89 c6             	mov    %rax,%rsi
 8053aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053af2:	48 89 c7             	mov    %rax,%rdi
 8053af5:	4c 89 d2             	mov    %r10,%rdx
 8053af8:	b8 00 00 00 00       	mov    $0x0,%eax
 8053afd:	e8 1c fb ff ff       	callq  805361e <tok_str_add2>
 8053b02:	c9                   	leaveq 
 8053b03:	c3                   	retq   

0000000008053b04 <macro_is_equal>:
 8053b04:	55                   	push   %rbp
 8053b05:	48 89 e5             	mov    %rsp,%rbp
 8053b08:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
 8053b0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053b13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8053b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053b1b:	8b 08                	mov    (%rax),%ecx
 8053b1d:	85 c9                	test   %ecx,%ecx
 8053b1f:	0f 84 e8 00 00 00    	je     8053c0d <macro_is_equal+0x109>
 8053b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053b29:	8b 08                	mov    (%rax),%ecx
 8053b2b:	85 c9                	test   %ecx,%ecx
 8053b2d:	0f 84 da 00 00 00    	je     8053c0d <macro_is_equal+0x109>
 8053b33:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
 8053b3a:	49 89 c2             	mov    %rax,%r10
 8053b3d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
 8053b41:	48 89 c6             	mov    %rax,%rsi
 8053b44:	48 8d 85 d4 fb ff ff 	lea    -0x42c(%rbp),%rax
 8053b4b:	48 89 c7             	mov    %rax,%rdi
 8053b4e:	4c 89 d2             	mov    %r10,%rdx
 8053b51:	b8 00 00 00 00       	mov    $0x0,%eax
 8053b56:	e8 90 79 00 00       	callq  805b4eb <TOK_GET>
 8053b5b:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
 8053b62:	48 89 c6             	mov    %rax,%rsi
 8053b65:	8b 85 d4 fb ff ff    	mov    -0x42c(%rbp),%eax
 8053b6b:	48 89 c7             	mov    %rax,%rdi
 8053b6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8053b73:	e8 3c dd ff ff       	callq  80518b4 <get_tok_str>
 8053b78:	49 89 c2             	mov    %rax,%r10
 8053b7b:	b8 01 04 00 00       	mov    $0x401,%eax
 8053b80:	48 89 c6             	mov    %rax,%rsi
 8053b83:	48 8d 85 ef fb ff ff 	lea    -0x411(%rbp),%rax
 8053b8a:	48 89 c7             	mov    %rax,%rdi
 8053b8d:	4c 89 d2             	mov    %r10,%rdx
 8053b90:	b8 00 00 00 00       	mov    $0x0,%eax
 8053b95:	e8 09 81 ff ff       	callq  804bca3 <pstrcpy>
 8053b9a:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
 8053ba1:	49 89 c2             	mov    %rax,%r10
 8053ba4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 8053ba8:	48 89 c6             	mov    %rax,%rsi
 8053bab:	48 8d 85 d4 fb ff ff 	lea    -0x42c(%rbp),%rax
 8053bb2:	48 89 c7             	mov    %rax,%rdi
 8053bb5:	4c 89 d2             	mov    %r10,%rdx
 8053bb8:	b8 00 00 00 00       	mov    $0x0,%eax
 8053bbd:	e8 29 79 00 00       	callq  805b4eb <TOK_GET>
 8053bc2:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
 8053bc9:	48 89 c6             	mov    %rax,%rsi
 8053bcc:	8b 85 d4 fb ff ff    	mov    -0x42c(%rbp),%eax
 8053bd2:	48 89 c7             	mov    %rax,%rdi
 8053bd5:	b8 00 00 00 00       	mov    $0x0,%eax
 8053bda:	e8 d5 dc ff ff       	callq  80518b4 <get_tok_str>
 8053bdf:	48 89 c6             	mov    %rax,%rsi
 8053be2:	48 8d 85 ef fb ff ff 	lea    -0x411(%rbp),%rax
 8053be9:	48 89 c7             	mov    %rax,%rdi
 8053bec:	b8 00 00 00 00       	mov    $0x0,%eax
 8053bf1:	e8 ea 35 03 00       	callq  80871e0 <strcmp>
 8053bf6:	85 c0                	test   %eax,%eax
 8053bf8:	0f 84 0a 00 00 00    	je     8053c08 <macro_is_equal+0x104>
 8053bfe:	b8 00 00 00 00       	mov    $0x0,%eax
 8053c03:	e9 37 00 00 00       	jmpq   8053c3f <macro_is_equal+0x13b>
 8053c08:	e9 0a ff ff ff       	jmpq   8053b17 <macro_is_equal+0x13>
 8053c0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053c11:	8b 08                	mov    (%rax),%ecx
 8053c13:	85 c9                	test   %ecx,%ecx
 8053c15:	0f 85 13 00 00 00    	jne    8053c2e <macro_is_equal+0x12a>
 8053c1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053c1f:	8b 08                	mov    (%rax),%ecx
 8053c21:	85 c9                	test   %ecx,%ecx
 8053c23:	0f 85 05 00 00 00    	jne    8053c2e <macro_is_equal+0x12a>
 8053c29:	e9 07 00 00 00       	jmpq   8053c35 <macro_is_equal+0x131>
 8053c2e:	b8 00 00 00 00       	mov    $0x0,%eax
 8053c33:	eb 05                	jmp    8053c3a <macro_is_equal+0x136>
 8053c35:	b8 01 00 00 00       	mov    $0x1,%eax
 8053c3a:	e9 00 00 00 00       	jmpq   8053c3f <macro_is_equal+0x13b>
 8053c3f:	c9                   	leaveq 
 8053c40:	c3                   	retq   

0000000008053c41 <define_push>:
 8053c41:	55                   	push   %rbp
 8053c42:	48 89 e5             	mov    %rsp,%rbp
 8053c45:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8053c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053c50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8053c54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8053c58:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8053c5c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053c5f:	48 89 c7             	mov    %rax,%rdi
 8053c62:	b8 00 00 00 00       	mov    $0x0,%eax
 8053c67:	e8 9a 01 00 00       	callq  8053e06 <define_find>
 8053c6c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8053c70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8053c74:	85 c0                	test   %eax,%eax
 8053c76:	0f 84 64 00 00 00    	je     8053ce0 <define_push+0x9f>
 8053c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8053c80:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8053c87:	00 00 00 
 8053c8a:	48 01 c8             	add    %rcx,%rax
 8053c8d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8053c91:	48 89 ce             	mov    %rcx,%rsi
 8053c94:	48 8b 08             	mov    (%rax),%rcx
 8053c97:	48 89 cf             	mov    %rcx,%rdi
 8053c9a:	b8 00 00 00 00       	mov    $0x0,%eax
 8053c9f:	e8 60 fe ff ff       	callq  8053b04 <macro_is_equal>
 8053ca4:	85 c0                	test   %eax,%eax
 8053ca6:	0f 84 05 00 00 00    	je     8053cb1 <define_push+0x70>
 8053cac:	e9 2f 00 00 00       	jmpq   8053ce0 <define_push+0x9f>
 8053cb1:	b8 00 00 00 00       	mov    $0x0,%eax
 8053cb6:	48 89 c6             	mov    %rax,%rsi
 8053cb9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053cbc:	48 89 c7             	mov    %rax,%rdi
 8053cbf:	b8 00 00 00 00       	mov    $0x0,%eax
 8053cc4:	e8 eb db ff ff       	callq  80518b4 <get_tok_str>
 8053cc9:	48 89 c6             	mov    %rax,%rsi
 8053ccc:	48 8d 05 e3 76 03 00 	lea    0x376e3(%rip),%rax        # 808b3b6 <L.121>
 8053cd3:	48 89 c7             	mov    %rax,%rdi
 8053cd6:	b8 00 00 00 00       	mov    $0x0,%eax
 8053cdb:	e8 1f 9c ff ff       	callq  804d8ff <tcc_warning>
 8053ce0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8053ce7:	00 00 00 
 8053cea:	49 89 c3             	mov    %rax,%r11
 8053ced:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8053cf0:	49 89 c2             	mov    %rax,%r10
 8053cf3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053cf6:	48 89 c6             	mov    %rax,%rsi
 8053cf9:	48 8b 05 f8 a1 03 00 	mov    0x3a1f8(%rip),%rax        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 8053d00:	48 89 c7             	mov    %rax,%rdi
 8053d03:	4c 89 d2             	mov    %r10,%rdx
 8053d06:	4c 89 d9             	mov    %r11,%rcx
 8053d09:	b8 00 00 00 00       	mov    $0x0,%eax
 8053d0e:	e8 2a 81 00 00       	callq  805be3d <sym_push2>
 8053d13:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8053d17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8053d1b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8053d22:	00 00 00 
 8053d25:	48 01 c8             	add    %rcx,%rax
 8053d28:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8053d2c:	48 89 08             	mov    %rcx,(%rax)
 8053d2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8053d33:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8053d3a:	00 00 00 
 8053d3d:	48 01 c8             	add    %rcx,%rax
 8053d40:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8053d44:	48 89 08             	mov    %rcx,(%rax)
 8053d47:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053d4a:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053d50:	48 63 c0             	movslq %eax,%rax
 8053d53:	48 89 c1             	mov    %rax,%rcx
 8053d56:	48 c1 e1 03          	shl    $0x3,%rcx
 8053d5a:	48 8b 05 e7 a1 03 00 	mov    0x3a1e7(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8053d61:	48 8b 00             	mov    (%rax),%rax
 8053d64:	48 89 ca             	mov    %rcx,%rdx
 8053d67:	48 01 d0             	add    %rdx,%rax
 8053d6a:	48 8b 08             	mov    (%rax),%rcx
 8053d6d:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8053d74:	00 00 00 
 8053d77:	48 01 c1             	add    %rax,%rcx
 8053d7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8053d7e:	48 89 01             	mov    %rax,(%rcx)
 8053d81:	c9                   	leaveq 
 8053d82:	c3                   	retq   

0000000008053d83 <define_undef>:
 8053d83:	55                   	push   %rbp
 8053d84:	48 89 e5             	mov    %rsp,%rbp
 8053d87:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8053d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053d96:	8b 08                	mov    (%rax),%ecx
 8053d98:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8053d9b:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8053d9e:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8053da4:	0f 8c 4f 00 00 00    	jl     8053df9 <define_undef+0x76>
 8053daa:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8053dad:	48 8b 0d 8c a1 03 00 	mov    0x3a18c(%rip),%rcx        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8053db4:	8b 09                	mov    (%rcx),%ecx
 8053db6:	39 c8                	cmp    %ecx,%eax
 8053db8:	0f 8d 3b 00 00 00    	jge    8053df9 <define_undef+0x76>
 8053dbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8053dc1:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053dc7:	48 63 c0             	movslq %eax,%rax
 8053dca:	48 89 c1             	mov    %rax,%rcx
 8053dcd:	48 c1 e1 03          	shl    $0x3,%rcx
 8053dd1:	48 8b 05 70 a1 03 00 	mov    0x3a170(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8053dd8:	48 8b 00             	mov    (%rax),%rax
 8053ddb:	48 89 ca             	mov    %rcx,%rdx
 8053dde:	48 01 d0             	add    %rdx,%rax
 8053de1:	48 8b 08             	mov    (%rax),%rcx
 8053de4:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8053deb:	00 00 00 
 8053dee:	48 01 c1             	add    %rax,%rcx
 8053df1:	b8 00 00 00 00       	mov    $0x0,%eax
 8053df6:	48 89 01             	mov    %rax,(%rcx)
 8053df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053dfd:	b9 00 00 00 00       	mov    $0x0,%ecx
 8053e02:	89 08                	mov    %ecx,(%rax)
 8053e04:	c9                   	leaveq 
 8053e05:	c3                   	retq   

0000000008053e06 <define_find>:
 8053e06:	55                   	push   %rbp
 8053e07:	48 89 e5             	mov    %rsp,%rbp
 8053e0a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8053e11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053e15:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053e18:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053e1e:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8053e21:	48 8b 05 18 a1 03 00 	mov    0x3a118(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8053e28:	8b 00                	mov    (%rax),%eax
 8053e2a:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053e30:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8053e33:	48 39 c1             	cmp    %rax,%rcx
 8053e36:	0f 82 0a 00 00 00    	jb     8053e46 <define_find+0x40>
 8053e3c:	b8 00 00 00 00       	mov    $0x0,%eax
 8053e41:	e9 35 00 00 00       	jmpq   8053e7b <define_find+0x75>
 8053e46:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053e49:	48 63 c0             	movslq %eax,%rax
 8053e4c:	48 89 c1             	mov    %rax,%rcx
 8053e4f:	48 c1 e1 03          	shl    $0x3,%rcx
 8053e53:	48 8b 05 ee a0 03 00 	mov    0x3a0ee(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8053e5a:	48 8b 00             	mov    (%rax),%rax
 8053e5d:	48 89 ca             	mov    %rcx,%rdx
 8053e60:	48 01 d0             	add    %rdx,%rax
 8053e63:	48 8b 08             	mov    (%rax),%rcx
 8053e66:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8053e6d:	00 00 00 
 8053e70:	48 01 c1             	add    %rax,%rcx
 8053e73:	48 8b 01             	mov    (%rcx),%rax
 8053e76:	e9 00 00 00 00       	jmpq   8053e7b <define_find+0x75>
 8053e7b:	c9                   	leaveq 
 8053e7c:	c3                   	retq   

0000000008053e7d <free_defines>:
 8053e7d:	55                   	push   %rbp
 8053e7e:	48 89 e5             	mov    %rsp,%rbp
 8053e81:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8053e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053e8c:	48 8b 05 65 a0 03 00 	mov    0x3a065(%rip),%rax        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 8053e93:	48 8b 00             	mov    (%rax),%rax
 8053e96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8053e9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053e9e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8053ea2:	48 89 c2             	mov    %rax,%rdx
 8053ea5:	48 89 c8             	mov    %rcx,%rax
 8053ea8:	48 39 c2             	cmp    %rax,%rdx
 8053eab:	0f 84 da 00 00 00    	je     8053f8b <free_defines+0x10e>
 8053eb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053eb5:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8053ebc:	00 00 00 
 8053ebf:	48 01 c8             	add    %rcx,%rax
 8053ec2:	48 8b 08             	mov    (%rax),%rcx
 8053ec5:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8053ec9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053ecd:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8053ed4:	00 00 00 
 8053ed7:	48 01 c8             	add    %rcx,%rax
 8053eda:	48 8b 08             	mov    (%rax),%rcx
 8053edd:	85 c9                	test   %ecx,%ecx
 8053edf:	0f 84 21 00 00 00    	je     8053f06 <free_defines+0x89>
 8053ee5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053ee9:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8053ef0:	00 00 00 
 8053ef3:	48 01 c8             	add    %rcx,%rax
 8053ef6:	48 8b 08             	mov    (%rax),%rcx
 8053ef9:	48 89 cf             	mov    %rcx,%rdi
 8053efc:	b8 00 00 00 00       	mov    $0x0,%eax
 8053f01:	e8 b1 f5 ff ff       	callq  80534b7 <tok_str_free>
 8053f06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053f0a:	8b 08                	mov    (%rax),%ecx
 8053f0c:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8053f0f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053f12:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8053f18:	0f 8c 4f 00 00 00    	jl     8053f6d <free_defines+0xf0>
 8053f1e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053f21:	48 8b 0d 18 a0 03 00 	mov    0x3a018(%rip),%rcx        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8053f28:	8b 09                	mov    (%rcx),%ecx
 8053f2a:	39 c8                	cmp    %ecx,%eax
 8053f2c:	0f 8d 3b 00 00 00    	jge    8053f6d <free_defines+0xf0>
 8053f32:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8053f35:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053f3b:	48 63 c0             	movslq %eax,%rax
 8053f3e:	48 89 c1             	mov    %rax,%rcx
 8053f41:	48 c1 e1 03          	shl    $0x3,%rcx
 8053f45:	48 8b 05 fc 9f 03 00 	mov    0x39ffc(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8053f4c:	48 8b 00             	mov    (%rax),%rax
 8053f4f:	48 89 ca             	mov    %rcx,%rdx
 8053f52:	48 01 d0             	add    %rdx,%rax
 8053f55:	48 8b 08             	mov    (%rax),%rcx
 8053f58:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8053f5f:	00 00 00 
 8053f62:	48 01 c1             	add    %rax,%rcx
 8053f65:	b8 00 00 00 00       	mov    $0x0,%eax
 8053f6a:	48 89 01             	mov    %rax,(%rcx)
 8053f6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8053f71:	48 89 c7             	mov    %rax,%rdi
 8053f74:	b8 00 00 00 00       	mov    $0x0,%eax
 8053f79:	e8 61 7e 00 00       	callq  805bddf <sym_free>
 8053f7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8053f82:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8053f86:	e9 0f ff ff ff       	jmpq   8053e9a <free_defines+0x1d>
 8053f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8053f8f:	4c 8b 1d 62 9f 03 00 	mov    0x39f62(%rip),%r11        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 8053f96:	49 89 03             	mov    %rax,(%r11)
 8053f99:	c9                   	leaveq 
 8053f9a:	c3                   	retq   

0000000008053f9b <label_find>:
 8053f9b:	55                   	push   %rbp
 8053f9c:	48 89 e5             	mov    %rsp,%rbp
 8053f9f:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8053fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8053faa:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053fad:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053fb3:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8053fb6:	48 8b 05 83 9f 03 00 	mov    0x39f83(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8053fbd:	8b 00                	mov    (%rax),%eax
 8053fbf:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8053fc5:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8053fc8:	48 39 c1             	cmp    %rax,%rcx
 8053fcb:	0f 82 0a 00 00 00    	jb     8053fdb <label_find+0x40>
 8053fd1:	b8 00 00 00 00       	mov    $0x0,%eax
 8053fd6:	e9 35 00 00 00       	jmpq   8054010 <label_find+0x75>
 8053fdb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8053fde:	48 63 c0             	movslq %eax,%rax
 8053fe1:	48 89 c1             	mov    %rax,%rcx
 8053fe4:	48 c1 e1 03          	shl    $0x3,%rcx
 8053fe8:	48 8b 05 59 9f 03 00 	mov    0x39f59(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8053fef:	48 8b 00             	mov    (%rax),%rax
 8053ff2:	48 89 ca             	mov    %rcx,%rdx
 8053ff5:	48 01 d0             	add    %rdx,%rax
 8053ff8:	48 8b 08             	mov    (%rax),%rcx
 8053ffb:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 8054002:	00 00 00 
 8054005:	48 01 c1             	add    %rax,%rcx
 8054008:	48 8b 01             	mov    (%rcx),%rax
 805400b:	e9 00 00 00 00       	jmpq   8054010 <label_find+0x75>
 8054010:	c9                   	leaveq 
 8054011:	c3                   	retq   

0000000008054012 <label_push>:
 8054012:	55                   	push   %rbp
 8054013:	48 89 e5             	mov    %rsp,%rbp
 8054016:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805401d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8054021:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8054025:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8054029:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8054030:	00 00 00 
 8054033:	49 89 c3             	mov    %rax,%r11
 8054036:	b8 00 00 00 00       	mov    $0x0,%eax
 805403b:	49 89 c2             	mov    %rax,%r10
 805403e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8054041:	48 89 c6             	mov    %rax,%rsi
 8054044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8054048:	48 89 c7             	mov    %rax,%rdi
 805404b:	4c 89 d2             	mov    %r10,%rdx
 805404e:	4c 89 d9             	mov    %r11,%rcx
 8054051:	b8 00 00 00 00       	mov    $0x0,%eax
 8054056:	e8 e2 7d 00 00       	callq  805be3d <sym_push2>
 805405b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805405f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8054063:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805406a:	00 00 00 
 805406d:	48 01 c8             	add    %rcx,%rax
 8054070:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8054073:	48 63 c9             	movslq %ecx,%rcx
 8054076:	48 89 ca             	mov    %rcx,%rdx
 8054079:	48 89 10             	mov    %rdx,(%rax)
 805407c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805407f:	81 e8 00 01 00 00    	sub    $0x100,%eax
 8054085:	48 63 c0             	movslq %eax,%rax
 8054088:	48 89 c1             	mov    %rax,%rcx
 805408b:	48 c1 e1 03          	shl    $0x3,%rcx
 805408f:	48 8b 05 b2 9e 03 00 	mov    0x39eb2(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8054096:	48 8b 00             	mov    (%rax),%rax
 8054099:	48 89 ca             	mov    %rcx,%rdx
 805409c:	48 01 d0             	add    %rdx,%rax
 805409f:	48 8b 08             	mov    (%rax),%rcx
 80540a2:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80540a9:	00 00 00 
 80540ac:	48 01 c1             	add    %rax,%rcx
 80540af:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 80540b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80540b7:	48 8b 0d fa 9e 03 00 	mov    0x39efa(%rip),%rcx        # 808dfb8 <_GLOBAL_OFFSET_TABLE_+0x338>
 80540be:	48 89 c2             	mov    %rax,%rdx
 80540c1:	48 89 c8             	mov    %rcx,%rax
 80540c4:	48 39 c2             	cmp    %rax,%rdx
 80540c7:	0f 85 37 00 00 00    	jne    8054104 <label_push+0xf2>
 80540cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80540d1:	48 8b 08             	mov    (%rax),%rcx
 80540d4:	48 89 c8             	mov    %rcx,%rax
 80540d7:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80540de:	00 00 00 
 80540e1:	48 39 c8             	cmp    %rcx,%rax
 80540e4:	0f 84 1a 00 00 00    	je     8054104 <label_push+0xf2>
 80540ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80540ee:	48 8b 08             	mov    (%rax),%rcx
 80540f1:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 80540f8:	00 00 00 
 80540fb:	48 01 c1             	add    %rax,%rcx
 80540fe:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8054102:	eb c9                	jmp    80540cd <label_push+0xbb>
 8054104:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8054108:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 805410f:	00 00 00 
 8054112:	48 01 c8             	add    %rcx,%rax
 8054115:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8054119:	48 8b 11             	mov    (%rcx),%rdx
 805411c:	48 89 10             	mov    %rdx,(%rax)
 805411f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8054123:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8054127:	48 89 08             	mov    %rcx,(%rax)
 805412a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805412e:	e9 00 00 00 00       	jmpq   8054133 <label_push+0x121>
 8054133:	c9                   	leaveq 
 8054134:	c3                   	retq   

0000000008054135 <label_pop>:
 8054135:	55                   	push   %rbp
 8054136:	48 89 e5             	mov    %rsp,%rbp
 8054139:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8054140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8054144:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8054148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805414c:	48 8b 08             	mov    (%rax),%rcx
 805414f:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8054153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8054157:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805415b:	48 89 c2             	mov    %rax,%rdx
 805415e:	48 89 c8             	mov    %rcx,%rax
 8054161:	48 39 c2             	cmp    %rax,%rdx
 8054164:	0f 84 bf 01 00 00    	je     8054329 <label_pop+0x1f4>
 805416a:	e9 0a 00 00 00       	jmpq   8054179 <label_pop+0x44>
 805416f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8054173:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8054177:	eb da                	jmp    8054153 <label_pop+0x1e>
 8054179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805417d:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8054184:	00 00 00 
 8054187:	48 01 c8             	add    %rcx,%rax
 805418a:	48 8b 08             	mov    (%rax),%rcx
 805418d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8054191:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8054195:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805419c:	00 00 00 
 805419f:	48 01 c8             	add    %rcx,%rax
 80541a2:	48 8b 08             	mov    (%rax),%rcx
 80541a5:	48 b8 02 00 00 00 00 	movabs $0x2,%rax
 80541ac:	00 00 00 
 80541af:	48 39 c1             	cmp    %rax,%rcx
 80541b2:	0f 85 37 00 00 00    	jne    80541ef <label_pop+0xba>
 80541b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80541bc:	b9 00 00 00 00       	mov    $0x0,%ecx
 80541c1:	48 89 ce             	mov    %rcx,%rsi
 80541c4:	8b 08                	mov    (%rax),%ecx
 80541c6:	48 89 cf             	mov    %rcx,%rdi
 80541c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80541ce:	e8 e1 d6 ff ff       	callq  80518b4 <get_tok_str>
 80541d3:	48 89 c6             	mov    %rax,%rsi
 80541d6:	48 8d 05 e6 71 03 00 	lea    0x371e6(%rip),%rax        # 808b3c3 <L.122>
 80541dd:	48 89 c7             	mov    %rax,%rdi
 80541e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80541e5:	e8 15 97 ff ff       	callq  804d8ff <tcc_warning>
 80541ea:	e9 d7 00 00 00       	jmpq   80542c6 <label_pop+0x191>
 80541ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80541f3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80541fa:	00 00 00 
 80541fd:	48 01 c8             	add    %rcx,%rax
 8054200:	48 8b 08             	mov    (%rax),%rcx
 8054203:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 805420a:	00 00 00 
 805420d:	48 39 c1             	cmp    %rax,%rcx
 8054210:	0f 85 37 00 00 00    	jne    805424d <label_pop+0x118>
 8054216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805421a:	b9 00 00 00 00       	mov    $0x0,%ecx
 805421f:	48 89 ce             	mov    %rcx,%rsi
 8054222:	8b 08                	mov    (%rax),%ecx
 8054224:	48 89 cf             	mov    %rcx,%rdi
 8054227:	b8 00 00 00 00       	mov    $0x0,%eax
 805422c:	e8 83 d6 ff ff       	callq  80518b4 <get_tok_str>
 8054231:	48 89 c6             	mov    %rax,%rsi
 8054234:	48 8d 05 a9 71 03 00 	lea    0x371a9(%rip),%rax        # 808b3e4 <L.123>
 805423b:	48 89 c7             	mov    %rax,%rdi
 805423e:	b8 00 00 00 00       	mov    $0x0,%eax
 8054243:	e8 7f 94 ff ff       	callq  804d6c7 <tcc_error>
 8054248:	e9 79 00 00 00       	jmpq   80542c6 <label_pop+0x191>
 805424d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8054251:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8054258:	00 00 00 
 805425b:	48 01 c8             	add    %rcx,%rax
 805425e:	48 8b 08             	mov    (%rax),%rcx
 8054261:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8054268:	00 00 00 
 805426b:	48 39 c1             	cmp    %rax,%rcx
 805426e:	b8 00 00 00 00       	mov    $0x0,%eax
 8054273:	0f 95 c0             	setne  %al
 8054276:	85 c0                	test   %eax,%eax
 8054278:	0f 84 48 00 00 00    	je     80542c6 <label_pop+0x191>
 805427e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8054282:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8054289:	00 00 00 
 805428c:	48 01 c8             	add    %rcx,%rax
 805428f:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8054296:	00 00 00 
 8054299:	49 89 cb             	mov    %rcx,%r11
 805429c:	48 8b 08             	mov    (%rax),%rcx
 805429f:	49 89 ca             	mov    %rcx,%r10
 80542a2:	48 8b 05 0f 9c 03 00 	mov    0x39c0f(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 80542a9:	48 8b 00             	mov    (%rax),%rax
 80542ac:	48 89 c6             	mov    %rax,%rsi
 80542af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80542b3:	48 89 c7             	mov    %rax,%rdi
 80542b6:	4c 89 d2             	mov    %r10,%rdx
 80542b9:	4c 89 d9             	mov    %r11,%rcx
 80542bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80542c1:	e8 ec 8a ff ff       	callq  804cdb2 <put_extern_sym>
 80542c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80542ca:	8b 08                	mov    (%rax),%ecx
 80542cc:	81 e9 00 01 00 00    	sub    $0x100,%ecx
 80542d2:	48 63 c9             	movslq %ecx,%rcx
 80542d5:	48 89 c8             	mov    %rcx,%rax
 80542d8:	48 c1 e0 03          	shl    $0x3,%rax
 80542dc:	48 8b 0d 65 9c 03 00 	mov    0x39c65(%rip),%rcx        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 80542e3:	48 8b 09             	mov    (%rcx),%rcx
 80542e6:	48 89 c2             	mov    %rax,%rdx
 80542e9:	48 01 d1             	add    %rdx,%rcx
 80542ec:	48 8b 01             	mov    (%rcx),%rax
 80542ef:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80542f6:	00 00 00 
 80542f9:	48 01 c8             	add    %rcx,%rax
 80542fc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8054300:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 8054307:	00 00 00 
 805430a:	48 01 d1             	add    %rdx,%rcx
 805430d:	48 8b 11             	mov    (%rcx),%rdx
 8054310:	48 89 10             	mov    %rdx,(%rax)
 8054313:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8054317:	48 89 c7             	mov    %rax,%rdi
 805431a:	b8 00 00 00 00       	mov    $0x0,%eax
 805431f:	e8 bb 7a 00 00       	callq  805bddf <sym_free>
 8054324:	e9 46 fe ff ff       	jmpq   805416f <label_pop+0x3a>
 8054329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805432d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8054331:	48 89 08             	mov    %rcx,(%rax)
 8054334:	c9                   	leaveq 
 8054335:	c3                   	retq   

0000000008054336 <expr_preprocess>:
 8054336:	55                   	push   %rbp
 8054337:	48 89 e5             	mov    %rsp,%rbp
 805433a:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8054341:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8054345:	48 89 c7             	mov    %rax,%rdi
 8054348:	b8 00 00 00 00       	mov    $0x0,%eax
 805434d:	e8 00 f1 ff ff       	callq  8053452 <tok_str_new>
 8054352:	48 8b 05 cf 9b 03 00 	mov    0x39bcf(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054359:	8b 00                	mov    (%rax),%eax
 805435b:	83 f8 0a             	cmp    $0xa,%eax
 805435e:	0f 84 0e 01 00 00    	je     8054472 <expr_preprocess+0x13c>
 8054364:	48 8b 05 bd 9b 03 00 	mov    0x39bbd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805436b:	8b 00                	mov    (%rax),%eax
 805436d:	83 f8 ff             	cmp    $0xffffffff,%eax
 8054370:	0f 84 fc 00 00 00    	je     8054472 <expr_preprocess+0x13c>
 8054376:	b8 00 00 00 00       	mov    $0x0,%eax
 805437b:	e8 4a 43 00 00       	callq  80586ca <next>
 8054380:	48 8b 05 a1 9b 03 00 	mov    0x39ba1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054387:	8b 00                	mov    (%rax),%eax
 8054389:	81 f8 40 01 00 00    	cmp    $0x140,%eax
 805438f:	0f 85 94 00 00 00    	jne    8054429 <expr_preprocess+0xf3>
 8054395:	b8 00 00 00 00       	mov    $0x0,%eax
 805439a:	e8 d0 30 00 00       	callq  805746f <next_nomacro>
 805439f:	48 8b 05 82 9b 03 00 	mov    0x39b82(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80543a6:	8b 00                	mov    (%rax),%eax
 80543a8:	89 45 f8             	mov    %eax,-0x8(%rbp)
 80543ab:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80543ae:	83 f8 28             	cmp    $0x28,%eax
 80543b1:	0f 85 0a 00 00 00    	jne    80543c1 <expr_preprocess+0x8b>
 80543b7:	b8 00 00 00 00       	mov    $0x0,%eax
 80543bc:	e8 ae 30 00 00       	callq  805746f <next_nomacro>
 80543c1:	48 8b 05 60 9b 03 00 	mov    0x39b60(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80543c8:	8b 00                	mov    (%rax),%eax
 80543ca:	48 89 c7             	mov    %rax,%rdi
 80543cd:	b8 00 00 00 00       	mov    $0x0,%eax
 80543d2:	e8 2f fa ff ff       	callq  8053e06 <define_find>
 80543d7:	48 89 c1             	mov    %rax,%rcx
 80543da:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80543e1:	00 00 00 
 80543e4:	48 39 c1             	cmp    %rax,%rcx
 80543e7:	b8 00 00 00 00       	mov    $0x0,%eax
 80543ec:	0f 95 c0             	setne  %al
 80543ef:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80543f2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80543f5:	83 f8 28             	cmp    $0x28,%eax
 80543f8:	0f 85 0a 00 00 00    	jne    8054408 <expr_preprocess+0xd2>
 80543fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8054403:	e8 67 30 00 00       	callq  805746f <next_nomacro>
 8054408:	b8 b3 00 00 00       	mov    $0xb3,%eax
 805440d:	4c 8b 1d 14 9b 03 00 	mov    0x39b14(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054414:	41 89 03             	mov    %eax,(%r11)
 8054417:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805441a:	4c 8b 1d 87 9b 03 00 	mov    0x39b87(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8054421:	41 89 03             	mov    %eax,(%r11)
 8054424:	e9 33 00 00 00       	jmpq   805445c <expr_preprocess+0x126>
 8054429:	48 8b 05 f8 9a 03 00 	mov    0x39af8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054430:	8b 00                	mov    (%rax),%eax
 8054432:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8054438:	0f 8c 1e 00 00 00    	jl     805445c <expr_preprocess+0x126>
 805443e:	b8 b3 00 00 00       	mov    $0xb3,%eax
 8054443:	4c 8b 1d de 9a 03 00 	mov    0x39ade(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805444a:	41 89 03             	mov    %eax,(%r11)
 805444d:	b8 00 00 00 00       	mov    $0x0,%eax
 8054452:	4c 8b 1d 4f 9b 03 00 	mov    0x39b4f(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8054459:	41 89 03             	mov    %eax,(%r11)
 805445c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8054460:	48 89 c7             	mov    %rax,%rdi
 8054463:	b8 00 00 00 00       	mov    $0x0,%eax
 8054468:	e8 c3 f5 ff ff       	callq  8053a30 <tok_str_add_tok>
 805446d:	e9 e0 fe ff ff       	jmpq   8054352 <expr_preprocess+0x1c>
 8054472:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8054477:	48 89 c6             	mov    %rax,%rsi
 805447a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 805447e:	48 89 c7             	mov    %rax,%rdi
 8054481:	b8 00 00 00 00       	mov    $0x0,%eax
 8054486:	e8 ef f0 ff ff       	callq  805357a <tok_str_add>
 805448b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054490:	48 89 c6             	mov    %rax,%rsi
 8054493:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8054497:	48 89 c7             	mov    %rax,%rdi
 805449a:	b8 00 00 00 00       	mov    $0x0,%eax
 805449f:	e8 d6 f0 ff ff       	callq  805357a <tok_str_add>
 80544a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80544a8:	4c 8b 1d c1 9a 03 00 	mov    0x39ac1(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80544af:	49 89 03             	mov    %rax,(%r11)
 80544b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80544b7:	e8 0e 42 00 00       	callq  80586ca <next>
 80544bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80544c1:	e8 f1 38 01 00       	callq  8067db7 <expr_const>
 80544c6:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80544c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80544ce:	4c 8b 1d 9b 9a 03 00 	mov    0x39a9b(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80544d5:	49 89 03             	mov    %rax,(%r11)
 80544d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80544dc:	48 89 c7             	mov    %rax,%rdi
 80544df:	b8 00 00 00 00       	mov    $0x0,%eax
 80544e4:	e8 ce ef ff ff       	callq  80534b7 <tok_str_free>
 80544e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 80544ec:	83 f8 00             	cmp    $0x0,%eax
 80544ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80544f4:	0f 95 c0             	setne  %al
 80544f7:	e9 00 00 00 00       	jmpq   80544fc <expr_preprocess+0x1c6>
 80544fc:	c9                   	leaveq 
 80544fd:	c3                   	retq   

00000000080544fe <parse_define>:
 80544fe:	55                   	push   %rbp
 80544ff:	48 89 e5             	mov    %rsp,%rbp
 8054502:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 8054509:	48 8b 05 18 9a 03 00 	mov    0x39a18(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054510:	8b 00                	mov    (%rax),%eax
 8054512:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8054515:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8054518:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 805451e:	0f 8d 37 00 00 00    	jge    805455b <parse_define+0x5d>
 8054524:	48 8b 05 7d 9a 03 00 	mov    0x39a7d(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805452b:	48 89 c6             	mov    %rax,%rsi
 805452e:	48 8b 05 f3 99 03 00 	mov    0x399f3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054535:	8b 00                	mov    (%rax),%eax
 8054537:	48 89 c7             	mov    %rax,%rdi
 805453a:	b8 00 00 00 00       	mov    $0x0,%eax
 805453f:	e8 70 d3 ff ff       	callq  80518b4 <get_tok_str>
 8054544:	48 89 c6             	mov    %rax,%rsi
 8054547:	48 8d 05 b6 6e 03 00 	lea    0x36eb6(%rip),%rax        # 808b404 <L.124>
 805454e:	48 89 c7             	mov    %rax,%rdi
 8054551:	b8 00 00 00 00       	mov    $0x0,%eax
 8054556:	e8 6c 91 ff ff       	callq  804d6c7 <tcc_error>
 805455b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054560:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8054564:	b8 00 00 00 00       	mov    $0x0,%eax
 8054569:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805456c:	b8 00 00 00 00       	mov    $0x0,%eax
 8054571:	e8 3d 2e 00 00       	callq  80573b3 <next_nomacro_spc>
 8054576:	48 8b 05 ab 99 03 00 	mov    0x399ab(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805457d:	8b 00                	mov    (%rax),%eax
 805457f:	83 f8 28             	cmp    $0x28,%eax
 8054582:	0f 85 68 01 00 00    	jne    80546f0 <parse_define+0x1f2>
 8054588:	b8 00 00 00 00       	mov    $0x0,%eax
 805458d:	e8 dd 2e 00 00       	callq  805746f <next_nomacro>
 8054592:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 8054596:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805459a:	48 8b 05 87 99 03 00 	mov    0x39987(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80545a1:	8b 00                	mov    (%rax),%eax
 80545a3:	83 f8 29             	cmp    $0x29,%eax
 80545a6:	0f 84 20 01 00 00    	je     80546cc <parse_define+0x1ce>
 80545ac:	48 8b 05 75 99 03 00 	mov    0x39975(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80545b3:	8b 00                	mov    (%rax),%eax
 80545b5:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80545b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80545bd:	e8 ad 2e 00 00       	callq  805746f <next_nomacro>
 80545c2:	b8 00 00 00 00       	mov    $0x0,%eax
 80545c7:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80545ca:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80545cd:	81 f8 cc 00 00 00    	cmp    $0xcc,%eax
 80545d3:	0f 85 15 00 00 00    	jne    80545ee <parse_define+0xf0>
 80545d9:	b8 4b 01 00 00       	mov    $0x14b,%eax
 80545de:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80545e1:	b8 01 00 00 00       	mov    $0x1,%eax
 80545e6:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80545e9:	e9 38 00 00 00       	jmpq   8054626 <parse_define+0x128>
 80545ee:	48 8b 05 33 99 03 00 	mov    0x39933(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80545f5:	8b 00                	mov    (%rax),%eax
 80545f7:	81 f8 cc 00 00 00    	cmp    $0xcc,%eax
 80545fd:	0f 85 23 00 00 00    	jne    8054626 <parse_define+0x128>
 8054603:	48 8b 05 b6 99 03 00 	mov    0x399b6(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 805460a:	8b 00                	mov    (%rax),%eax
 805460c:	85 c0                	test   %eax,%eax
 805460e:	0f 84 12 00 00 00    	je     8054626 <parse_define+0x128>
 8054614:	b8 01 00 00 00       	mov    $0x1,%eax
 8054619:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805461c:	b8 00 00 00 00       	mov    $0x0,%eax
 8054621:	e8 49 2e 00 00       	callq  805746f <next_nomacro>
 8054626:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8054629:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 805462f:	0f 8d 14 00 00 00    	jge    8054649 <parse_define+0x14b>
 8054635:	48 8d 05 e0 6d 03 00 	lea    0x36de0(%rip),%rax        # 808b41c <L.125>
 805463c:	48 89 c7             	mov    %rax,%rdi
 805463f:	b8 00 00 00 00       	mov    $0x0,%eax
 8054644:	e8 7e 90 ff ff       	callq  804d6c7 <tcc_error>
 8054649:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805464c:	81 c8 00 00 00 20    	or     $0x20000000,%eax
 8054652:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8054659:	00 00 00 
 805465c:	49 89 cb             	mov    %rcx,%r11
 805465f:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8054662:	49 89 ca             	mov    %rcx,%r10
 8054665:	48 89 c6             	mov    %rax,%rsi
 8054668:	48 8b 05 89 98 03 00 	mov    0x39889(%rip),%rax        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 805466f:	48 89 c7             	mov    %rax,%rdi
 8054672:	4c 89 d2             	mov    %r10,%rdx
 8054675:	4c 89 d9             	mov    %r11,%rcx
 8054678:	b8 00 00 00 00       	mov    $0x0,%eax
 805467d:	e8 bb 77 00 00       	callq  805be3d <sym_push2>
 8054682:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8054686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805468a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805468e:	48 89 08             	mov    %rcx,(%rax)
 8054691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8054695:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805469c:	00 00 00 
 805469f:	48 01 c8             	add    %rcx,%rax
 80546a2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 80546a6:	48 8b 05 7b 98 03 00 	mov    0x3987b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80546ad:	8b 00                	mov    (%rax),%eax
 80546af:	83 f8 2c             	cmp    $0x2c,%eax
 80546b2:	0f 84 05 00 00 00    	je     80546bd <parse_define+0x1bf>
 80546b8:	e9 0f 00 00 00       	jmpq   80546cc <parse_define+0x1ce>
 80546bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80546c2:	e8 a8 2d 00 00       	callq  805746f <next_nomacro>
 80546c7:	e9 ce fe ff ff       	jmpq   805459a <parse_define+0x9c>
 80546cc:	48 8b 05 55 98 03 00 	mov    0x39855(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80546d3:	8b 00                	mov    (%rax),%eax
 80546d5:	83 f8 29             	cmp    $0x29,%eax
 80546d8:	0f 85 0a 00 00 00    	jne    80546e8 <parse_define+0x1ea>
 80546de:	b8 00 00 00 00       	mov    $0x0,%eax
 80546e3:	e8 cb 2c 00 00       	callq  80573b3 <next_nomacro_spc>
 80546e8:	b8 01 00 00 00       	mov    $0x1,%eax
 80546ed:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80546f0:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80546f4:	48 89 c7             	mov    %rax,%rdi
 80546f7:	b8 00 00 00 00       	mov    $0x0,%eax
 80546fc:	e8 51 ed ff ff       	callq  8053452 <tok_str_new>
 8054701:	b8 02 00 00 00       	mov    $0x2,%eax
 8054706:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8054709:	48 8b 05 18 98 03 00 	mov    0x39818(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054710:	8b 00                	mov    (%rax),%eax
 8054712:	83 f8 0a             	cmp    $0xa,%eax
 8054715:	0f 84 d4 00 00 00    	je     80547ef <parse_define+0x2f1>
 805471b:	48 8b 05 06 98 03 00 	mov    0x39806(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054722:	8b 00                	mov    (%rax),%eax
 8054724:	83 f8 ff             	cmp    $0xffffffff,%eax
 8054727:	0f 84 c2 00 00 00    	je     80547ef <parse_define+0x2f1>
 805472d:	b8 b6 00 00 00       	mov    $0xb6,%eax
 8054732:	48 8b 0d ef 97 03 00 	mov    0x397ef(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054739:	8b 09                	mov    (%rcx),%ecx
 805473b:	39 c8                	cmp    %ecx,%eax
 805473d:	0f 85 26 00 00 00    	jne    8054769 <parse_define+0x26b>
 8054743:	b8 01 00 00 00       	mov    $0x1,%eax
 8054748:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 805474b:	39 c8                	cmp    %ecx,%eax
 805474d:	0f 85 09 00 00 00    	jne    805475c <parse_define+0x25e>
 8054753:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8054756:	83 c0 ff             	add    $0xffffffff,%eax
 8054759:	89 45 c0             	mov    %eax,-0x40(%rbp)
 805475c:	b8 02 00 00 00       	mov    $0x2,%eax
 8054761:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8054764:	e9 4d 00 00 00       	jmpq   80547b6 <parse_define+0x2b8>
 8054769:	b8 23 00 00 00       	mov    $0x23,%eax
 805476e:	48 8b 0d b3 97 03 00 	mov    0x397b3(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054775:	8b 09                	mov    (%rcx),%ecx
 8054777:	39 c8                	cmp    %ecx,%eax
 8054779:	0f 85 0d 00 00 00    	jne    805478c <parse_define+0x28e>
 805477f:	b8 02 00 00 00       	mov    $0x2,%eax
 8054784:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8054787:	e9 2a 00 00 00       	jmpq   80547b6 <parse_define+0x2b8>
 805478c:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
 8054790:	48 89 c6             	mov    %rax,%rsi
 8054793:	48 8b 05 8e 97 03 00 	mov    0x3978e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805479a:	8b 00                	mov    (%rax),%eax
 805479c:	48 89 c7             	mov    %rax,%rdi
 805479f:	b8 00 00 00 00       	mov    $0x0,%eax
 80547a4:	e8 b7 70 00 00       	callq  805b860 <check_space>
 80547a9:	85 c0                	test   %eax,%eax
 80547ab:	0f 84 05 00 00 00    	je     80547b6 <parse_define+0x2b8>
 80547b1:	e9 2a 00 00 00       	jmpq   80547e0 <parse_define+0x2e2>
 80547b6:	48 8b 05 eb 97 03 00 	mov    0x397eb(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80547bd:	49 89 c2             	mov    %rax,%r10
 80547c0:	48 8b 05 61 97 03 00 	mov    0x39761(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80547c7:	8b 00                	mov    (%rax),%eax
 80547c9:	48 89 c6             	mov    %rax,%rsi
 80547cc:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80547d0:	48 89 c7             	mov    %rax,%rdi
 80547d3:	4c 89 d2             	mov    %r10,%rdx
 80547d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80547db:	e8 3e ee ff ff       	callq  805361e <tok_str_add2>
 80547e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80547e5:	e8 c9 2b 00 00       	callq  80573b3 <next_nomacro_spc>
 80547ea:	e9 1a ff ff ff       	jmpq   8054709 <parse_define+0x20b>
 80547ef:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 80547f2:	83 f8 01             	cmp    $0x1,%eax
 80547f5:	0f 85 09 00 00 00    	jne    8054804 <parse_define+0x306>
 80547fb:	8b 45 c0             	mov    -0x40(%rbp),%eax
 80547fe:	83 c0 ff             	add    $0xffffffff,%eax
 8054801:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8054804:	b8 00 00 00 00       	mov    $0x0,%eax
 8054809:	48 89 c6             	mov    %rax,%rsi
 805480c:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8054810:	48 89 c7             	mov    %rax,%rdi
 8054813:	b8 00 00 00 00       	mov    $0x0,%eax
 8054818:	e8 5d ed ff ff       	callq  805357a <tok_str_add>
 805481d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8054821:	49 89 c3             	mov    %rax,%r11
 8054824:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8054828:	49 89 c2             	mov    %rax,%r10
 805482b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805482e:	48 89 c6             	mov    %rax,%rsi
 8054831:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8054834:	48 89 c7             	mov    %rax,%rdi
 8054837:	4c 89 d2             	mov    %r10,%rdx
 805483a:	4c 89 d9             	mov    %r11,%rcx
 805483d:	b8 00 00 00 00       	mov    $0x0,%eax
 8054842:	e8 fa f3 ff ff       	callq  8053c41 <define_push>
 8054847:	c9                   	leaveq 
 8054848:	c3                   	retq   

0000000008054849 <search_cached_include>:
 8054849:	55                   	push   %rbp
 805484a:	48 89 e5             	mov    %rsp,%rbp
 805484d:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8054854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8054858:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805485c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8054860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8054864:	48 89 c6             	mov    %rax,%rsi
 8054867:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805486a:	48 89 c7             	mov    %rax,%rdi
 805486d:	b8 00 00 00 00       	mov    $0x0,%eax
 8054872:	e8 e4 6b 00 00       	callq  805b45b <hash_cached_include>
 8054877:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805487a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805487e:	48 b9 48 04 00 00 00 	movabs $0x448,%rcx
 8054885:	00 00 00 
 8054888:	48 01 c8             	add    %rcx,%rax
 805488b:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 805488e:	48 63 c9             	movslq %ecx,%rcx
 8054891:	48 89 ca             	mov    %rcx,%rdx
 8054894:	48 c1 e2 02          	shl    $0x2,%rdx
 8054898:	48 89 d1             	mov    %rdx,%rcx
 805489b:	48 01 c8             	add    %rcx,%rax
 805489e:	8b 08                	mov    (%rax),%ecx
 80548a0:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 80548a3:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80548a6:	83 f8 00             	cmp    $0x0,%eax
 80548a9:	0f 85 05 00 00 00    	jne    80548b4 <search_cached_include+0x6b>
 80548af:	e9 a6 00 00 00       	jmpq   805495a <search_cached_include+0x111>
 80548b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80548b8:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80548bf:	00 00 00 
 80548c2:	48 01 c8             	add    %rcx,%rax
 80548c5:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 80548c8:	83 e9 01             	sub    $0x1,%ecx
 80548cb:	48 63 c9             	movslq %ecx,%rcx
 80548ce:	48 89 ca             	mov    %rcx,%rdx
 80548d1:	48 c1 e2 03          	shl    $0x3,%rdx
 80548d5:	48 8b 08             	mov    (%rax),%rcx
 80548d8:	48 89 d0             	mov    %rdx,%rax
 80548db:	48 01 c1             	add    %rax,%rcx
 80548de:	48 8b 01             	mov    (%rcx),%rax
 80548e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80548e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80548e9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80548f0:	00 00 00 
 80548f3:	48 01 c8             	add    %rcx,%rax
 80548f6:	0f be 08             	movsbl (%rax),%ecx
 80548f9:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80548fc:	39 c1                	cmp    %eax,%ecx
 80548fe:	0f 85 3b 00 00 00    	jne    805493f <search_cached_include+0xf6>
 8054904:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8054908:	48 b9 09 00 00 00 00 	movabs $0x9,%rcx
 805490f:	00 00 00 
 8054912:	48 01 c8             	add    %rcx,%rax
 8054915:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8054919:	48 89 ce             	mov    %rcx,%rsi
 805491c:	48 89 c7             	mov    %rax,%rdi
 805491f:	b8 00 00 00 00       	mov    $0x0,%eax
 8054924:	e8 b7 28 03 00       	callq  80871e0 <strcmp>
 8054929:	85 c0                	test   %eax,%eax
 805492b:	0f 84 05 00 00 00    	je     8054936 <search_cached_include+0xed>
 8054931:	e9 09 00 00 00       	jmpq   805493f <search_cached_include+0xf6>
 8054936:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805493a:	e9 25 00 00 00       	jmpq   8054964 <search_cached_include+0x11b>
 805493f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8054943:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805494a:	00 00 00 
 805494d:	48 01 c8             	add    %rcx,%rax
 8054950:	8b 08                	mov    (%rax),%ecx
 8054952:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 8054955:	e9 49 ff ff ff       	jmpq   80548a3 <search_cached_include+0x5a>
 805495a:	b8 00 00 00 00       	mov    $0x0,%eax
 805495f:	e9 00 00 00 00       	jmpq   8054964 <search_cached_include+0x11b>
 8054964:	c9                   	leaveq 
 8054965:	c3                   	retq   

0000000008054966 <pragma_parse>:
 8054966:	55                   	push   %rbp
 8054967:	48 89 e5             	mov    %rsp,%rbp
 805496a:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8054971:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8054975:	b8 00 00 00 00       	mov    $0x0,%eax
 805497a:	e8 4b 3d 00 00       	callq  80586ca <next>
 805497f:	48 8b 05 a2 95 03 00 	mov    0x395a2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054986:	8b 00                	mov    (%rax),%eax
 8054988:	81 f8 73 01 00 00    	cmp    $0x173,%eax
 805498e:	0f 85 1a 02 00 00    	jne    8054bae <pragma_parse+0x248>
 8054994:	b8 00 00 00 00       	mov    $0x0,%eax
 8054999:	e8 2c 3d 00 00       	callq  80586ca <next>
 805499e:	b8 28 00 00 00       	mov    $0x28,%eax
 80549a3:	48 89 c7             	mov    %rax,%rdi
 80549a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80549ab:	e8 33 c7 ff ff       	callq  80510e3 <skip>
 80549b0:	48 8b 05 71 95 03 00 	mov    0x39571(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80549b7:	8b 00                	mov    (%rax),%eax
 80549b9:	81 f8 80 02 00 00    	cmp    $0x280,%eax
 80549bf:	0f 85 82 00 00 00    	jne    8054a47 <pragma_parse+0xe1>
 80549c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80549ca:	e8 fb 3c 00 00       	callq  80586ca <next>
 80549cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80549d3:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 80549da:	00 00 00 
 80549dd:	48 01 c8             	add    %rcx,%rax
 80549e0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80549e4:	48 ba 48 0c 00 00 00 	movabs $0xc48,%rdx
 80549eb:	00 00 00 
 80549ee:	48 01 d1             	add    %rdx,%rcx
 80549f1:	48 8b 10             	mov    (%rax),%rdx
 80549f4:	48 89 d0             	mov    %rdx,%rax
 80549f7:	48 89 ca             	mov    %rcx,%rdx
 80549fa:	48 39 d0             	cmp    %rdx,%rax
 80549fd:	0f 87 14 00 00 00    	ja     8054a17 <pragma_parse+0xb1>
 8054a03:	48 8d 05 32 6a 03 00 	lea    0x36a32(%rip),%rax        # 808b43c <L.126>
 8054a0a:	48 89 c7             	mov    %rax,%rdi
 8054a0d:	b8 00 00 00 00       	mov    $0x0,%eax
 8054a12:	e8 b0 8c ff ff       	callq  804d6c7 <tcc_error>
 8054a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8054a1b:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 8054a22:	00 00 00 
 8054a25:	48 01 c8             	add    %rcx,%rax
 8054a28:	48 8b 08             	mov    (%rax),%rcx
 8054a2b:	48 89 ca             	mov    %rcx,%rdx
 8054a2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8054a32:	48 ba fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rdx
 8054a39:	ff ff ff 
 8054a3c:	48 01 d1             	add    %rdx,%rcx
 8054a3f:	48 89 08             	mov    %rcx,(%rax)
 8054a42:	e9 67 01 00 00       	jmpq   8054bae <pragma_parse+0x248>
 8054a47:	b8 00 00 00 00       	mov    $0x0,%eax
 8054a4c:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8054a4f:	48 8b 05 d2 94 03 00 	mov    0x394d2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054a56:	8b 00                	mov    (%rax),%eax
 8054a58:	83 f8 29             	cmp    $0x29,%eax
 8054a5b:	0f 84 22 01 00 00    	je     8054b83 <pragma_parse+0x21d>
 8054a61:	48 8b 05 c0 94 03 00 	mov    0x394c0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054a68:	8b 00                	mov    (%rax),%eax
 8054a6a:	81 f8 7c 02 00 00    	cmp    $0x27c,%eax
 8054a70:	0f 85 9a 00 00 00    	jne    8054b10 <pragma_parse+0x1aa>
 8054a76:	b8 00 00 00 00       	mov    $0x0,%eax
 8054a7b:	e8 4a 3c 00 00       	callq  80586ca <next>
 8054a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8054a84:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 8054a8b:	00 00 00 
 8054a8e:	48 01 c8             	add    %rcx,%rax
 8054a91:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8054a95:	48 ba 48 0c 00 00 00 	movabs $0xc48,%rdx
 8054a9c:	00 00 00 
 8054a9f:	48 01 d1             	add    %rdx,%rcx
 8054aa2:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8054aa9:	00 00 00 
 8054aac:	48 01 d1             	add    %rdx,%rcx
 8054aaf:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8054ab6:	00 00 00 
 8054ab9:	48 29 d1             	sub    %rdx,%rcx
 8054abc:	48 8b 10             	mov    (%rax),%rdx
 8054abf:	48 89 d0             	mov    %rdx,%rax
 8054ac2:	48 89 ca             	mov    %rcx,%rdx
 8054ac5:	48 39 d0             	cmp    %rdx,%rax
 8054ac8:	0f 82 05 00 00 00    	jb     8054ad3 <pragma_parse+0x16d>
 8054ace:	e9 30 ff ff ff       	jmpq   8054a03 <pragma_parse+0x9d>
 8054ad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8054ad7:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 8054ade:	00 00 00 
 8054ae1:	48 01 c8             	add    %rcx,%rax
 8054ae4:	48 8b 08             	mov    (%rax),%rcx
 8054ae7:	48 89 ca             	mov    %rcx,%rdx
 8054aea:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 8054aee:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8054af5:	00 00 00 
 8054af8:	48 01 d1             	add    %rdx,%rcx
 8054afb:	48 89 08             	mov    %rcx,(%rax)
 8054afe:	b8 2c 00 00 00       	mov    $0x2c,%eax
 8054b03:	48 89 c7             	mov    %rax,%rdi
 8054b06:	b8 00 00 00 00       	mov    $0x0,%eax
 8054b0b:	e8 d3 c5 ff ff       	callq  80510e3 <skip>
 8054b10:	48 8b 05 11 94 03 00 	mov    0x39411(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054b17:	8b 00                	mov    (%rax),%eax
 8054b19:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 8054b1f:	0f 84 14 00 00 00    	je     8054b39 <pragma_parse+0x1d3>
 8054b25:	48 8d 05 22 69 03 00 	lea    0x36922(%rip),%rax        # 808b44e <L.127>
 8054b2c:	48 89 c7             	mov    %rax,%rdi
 8054b2f:	b8 00 00 00 00       	mov    $0x0,%eax
 8054b34:	e8 8e 8b ff ff       	callq  804d6c7 <tcc_error>
 8054b39:	48 8b 05 68 94 03 00 	mov    0x39468(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8054b40:	8b 00                	mov    (%rax),%eax
 8054b42:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8054b45:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8054b48:	83 f8 01             	cmp    $0x1,%eax
 8054b4b:	0f 8c 26 00 00 00    	jl     8054b77 <pragma_parse+0x211>
 8054b51:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8054b54:	83 f8 10             	cmp    $0x10,%eax
 8054b57:	0f 8f 1a 00 00 00    	jg     8054b77 <pragma_parse+0x211>
 8054b5d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8054b60:	83 e8 01             	sub    $0x1,%eax
 8054b63:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8054b66:	48 21 c1             	and    %rax,%rcx
 8054b69:	83 f9 00             	cmp    $0x0,%ecx
 8054b6c:	0f 85 05 00 00 00    	jne    8054b77 <pragma_parse+0x211>
 8054b72:	e9 02 00 00 00       	jmpq   8054b79 <pragma_parse+0x213>
 8054b77:	eb ac                	jmp    8054b25 <pragma_parse+0x1bf>
 8054b79:	b8 00 00 00 00       	mov    $0x0,%eax
 8054b7e:	e8 47 3b 00 00       	callq  80586ca <next>
 8054b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8054b87:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 8054b8e:	00 00 00 
 8054b91:	48 01 c8             	add    %rcx,%rax
 8054b94:	48 8b 08             	mov    (%rax),%rcx
 8054b97:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8054b9a:	89 01                	mov    %eax,(%rcx)
 8054b9c:	b8 29 00 00 00       	mov    $0x29,%eax
 8054ba1:	48 89 c7             	mov    %rax,%rdi
 8054ba4:	b8 00 00 00 00       	mov    $0x0,%eax
 8054ba9:	e8 35 c5 ff ff       	callq  80510e3 <skip>
 8054bae:	c9                   	leaveq 
 8054baf:	c3                   	retq   

0000000008054bb0 <preprocess>:
 8054bb0:	55                   	push   %rbp
 8054bb1:	48 89 e5             	mov    %rsp,%rbp
 8054bb4:	48 81 ec 90 08 00 00 	sub    $0x890,%rsp
 8054bbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8054bbf:	48 8b 05 ca 92 03 00 	mov    0x392ca(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8054bc6:	48 8b 00             	mov    (%rax),%rax
 8054bc9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8054bcd:	48 8b 05 44 93 03 00 	mov    0x39344(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8054bd4:	8b 00                	mov    (%rax),%eax
 8054bd6:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8054bd9:	b8 07 00 00 00       	mov    $0x7,%eax
 8054bde:	4c 8b 1d 33 93 03 00 	mov    0x39333(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8054be5:	41 89 03             	mov    %eax,(%r11)
 8054be8:	b8 00 00 00 00       	mov    $0x0,%eax
 8054bed:	e8 7d 28 00 00       	callq  805746f <next_nomacro>
 8054bf2:	48 8b 05 2f 93 03 00 	mov    0x3932f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054bf9:	8b 00                	mov    (%rax),%eax
 8054bfb:	e9 05 00 00 00       	jmpq   8054c05 <preprocess+0x55>
 8054c00:	e9 0c 00 00 00       	jmpq   8054c11 <preprocess+0x61>
 8054c05:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 8054c0b:	0f 85 1e 00 00 00    	jne    8054c2f <preprocess+0x7f>
 8054c11:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c16:	e8 54 28 00 00       	callq  805746f <next_nomacro>
 8054c1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c20:	e8 d9 f8 ff ff       	callq  80544fe <parse_define>
 8054c25:	e9 57 12 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8054c2a:	e9 0c 00 00 00       	jmpq   8054c3b <preprocess+0x8b>
 8054c2f:	81 f8 41 01 00 00    	cmp    $0x141,%eax
 8054c35:	0f 85 54 00 00 00    	jne    8054c8f <preprocess+0xdf>
 8054c3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c40:	e8 2a 28 00 00       	callq  805746f <next_nomacro>
 8054c45:	48 8b 05 dc 92 03 00 	mov    0x392dc(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054c4c:	8b 00                	mov    (%rax),%eax
 8054c4e:	48 89 c7             	mov    %rax,%rdi
 8054c51:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c56:	e8 ab f1 ff ff       	callq  8053e06 <define_find>
 8054c5b:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
 8054c62:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
 8054c69:	85 c0                	test   %eax,%eax
 8054c6b:	0f 84 14 00 00 00    	je     8054c85 <preprocess+0xd5>
 8054c71:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
 8054c78:	48 89 c7             	mov    %rax,%rdi
 8054c7b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c80:	e8 fe f0 ff ff       	callq  8053d83 <define_undef>
 8054c85:	e9 f7 11 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8054c8a:	e9 0c 00 00 00       	jmpq   8054c9b <preprocess+0xeb>
 8054c8f:	81 f8 3a 01 00 00    	cmp    $0x13a,%eax
 8054c95:	0f 85 05 00 00 00    	jne    8054ca0 <preprocess+0xf0>
 8054c9b:	e9 0c 00 00 00       	jmpq   8054cac <preprocess+0xfc>
 8054ca0:	81 f8 3b 01 00 00    	cmp    $0x13b,%eax
 8054ca6:	0f 85 e0 08 00 00    	jne    805558c <preprocess+0x9dc>
 8054cac:	48 8b 05 ed 91 03 00 	mov    0x391ed(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8054cb3:	48 8b 00             	mov    (%rax),%rax
 8054cb6:	48 8b 08             	mov    (%rax),%rcx
 8054cb9:	0f b6 01             	movzbl (%rcx),%eax
 8054cbc:	4c 8b 1d 45 92 03 00 	mov    0x39245(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054cc3:	41 89 03             	mov    %eax,(%r11)
 8054cc6:	b8 00 00 00 00       	mov    $0x0,%eax
 8054ccb:	e8 fa 6b 00 00       	callq  805b8ca <skip_spaces>
 8054cd0:	48 8b 05 31 92 03 00 	mov    0x39231(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054cd7:	8b 00                	mov    (%rax),%eax
 8054cd9:	83 f8 3c             	cmp    $0x3c,%eax
 8054cdc:	0f 85 12 00 00 00    	jne    8054cf4 <preprocess+0x144>
 8054ce2:	b8 3e 00 00 00       	mov    $0x3e,%eax
 8054ce7:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8054cea:	e9 23 00 00 00       	jmpq   8054d12 <preprocess+0x162>
 8054cef:	e9 0a 03 00 00       	jmpq   8054ffe <preprocess+0x44e>
 8054cf4:	48 8b 05 0d 92 03 00 	mov    0x3920d(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054cfb:	8b 00                	mov    (%rax),%eax
 8054cfd:	83 f8 22             	cmp    $0x22,%eax
 8054d00:	0f 85 1e 01 00 00    	jne    8054e24 <preprocess+0x274>
 8054d06:	48 8b 05 fb 91 03 00 	mov    0x391fb(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054d0d:	8b 00                	mov    (%rax),%eax
 8054d0f:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8054d12:	b8 00 00 00 00       	mov    $0x0,%eax
 8054d17:	e8 f1 d3 ff ff       	callq  805210d <inp>
 8054d1c:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8054d23:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8054d2a:	48 8b 05 d7 91 03 00 	mov    0x391d7(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054d31:	8b 00                	mov    (%rax),%eax
 8054d33:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8054d36:	39 c8                	cmp    %ecx,%eax
 8054d38:	0f 84 c9 00 00 00    	je     8054e07 <preprocess+0x257>
 8054d3e:	48 8b 05 c3 91 03 00 	mov    0x391c3(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054d45:	8b 00                	mov    (%rax),%eax
 8054d47:	83 f8 0a             	cmp    $0xa,%eax
 8054d4a:	0f 84 b7 00 00 00    	je     8054e07 <preprocess+0x257>
 8054d50:	48 8b 05 b1 91 03 00 	mov    0x391b1(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054d57:	8b 00                	mov    (%rax),%eax
 8054d59:	83 f8 ff             	cmp    $0xffffffff,%eax
 8054d5c:	0f 84 a5 00 00 00    	je     8054e07 <preprocess+0x257>
 8054d62:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8054d69:	48 8d 8d e0 fb ff ff 	lea    -0x420(%rbp),%rcx
 8054d70:	48 29 c8             	sub    %rcx,%rax
 8054d73:	48 89 c1             	mov    %rax,%rcx
 8054d76:	48 b8 ff 03 00 00 00 	movabs $0x3ff,%rax
 8054d7d:	00 00 00 
 8054d80:	48 39 c1             	cmp    %rax,%rcx
 8054d83:	0f 8d 2a 00 00 00    	jge    8054db3 <preprocess+0x203>
 8054d89:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8054d90:	48 89 c1             	mov    %rax,%rcx
 8054d93:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8054d9a:	00 00 00 
 8054d9d:	48 01 d0             	add    %rdx,%rax
 8054da0:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8054da7:	48 8b 05 5a 91 03 00 	mov    0x3915a(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054dae:	0f be 00             	movsbl (%rax),%eax
 8054db1:	88 01                	mov    %al,(%rcx)
 8054db3:	48 8b 05 4e 91 03 00 	mov    0x3914e(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8054dba:	8b 00                	mov    (%rax),%eax
 8054dbc:	83 f8 5c             	cmp    $0x5c,%eax
 8054dbf:	0f 85 33 00 00 00    	jne    8054df8 <preprocess+0x248>
 8054dc5:	b8 00 00 00 00       	mov    $0x0,%eax
 8054dca:	e8 9b d3 ff ff       	callq  805216a <handle_stray_noerror>
 8054dcf:	83 f8 00             	cmp    $0x0,%eax
 8054dd2:	0f 85 1b 00 00 00    	jne    8054df3 <preprocess+0x243>
 8054dd8:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8054ddf:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rcx
 8054de6:	ff ff ff 
 8054de9:	48 01 c8             	add    %rcx,%rax
 8054dec:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8054df3:	e9 0a 00 00 00       	jmpq   8054e02 <preprocess+0x252>
 8054df8:	b8 00 00 00 00       	mov    $0x0,%eax
 8054dfd:	e8 0b d3 ff ff       	callq  805210d <inp>
 8054e02:	e9 23 ff ff ff       	jmpq   8054d2a <preprocess+0x17a>
 8054e07:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8054e0e:	b9 00 00 00 00       	mov    $0x0,%ecx
 8054e13:	88 08                	mov    %cl,(%rax)
 8054e15:	b8 00 00 00 00       	mov    $0x0,%eax
 8054e1a:	e8 37 d5 ff ff       	callq  8052356 <minp>
 8054e1f:	e9 da 01 00 00       	jmpq   8054ffe <preprocess+0x44e>
 8054e24:	b8 00 00 00 00       	mov    $0x0,%eax
 8054e29:	e8 9c 38 00 00       	callq  80586ca <next>
 8054e2e:	b8 00 00 00 00       	mov    $0x0,%eax
 8054e33:	88 85 e0 fb ff ff    	mov    %al,-0x420(%rbp)
 8054e39:	48 8b 05 e8 90 03 00 	mov    0x390e8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054e40:	8b 00                	mov    (%rax),%eax
 8054e42:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8054e48:	0f 85 93 00 00 00    	jne    8054ee1 <preprocess+0x331>
 8054e4e:	48 8b 05 d3 90 03 00 	mov    0x390d3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054e55:	8b 00                	mov    (%rax),%eax
 8054e57:	83 f8 0a             	cmp    $0xa,%eax
 8054e5a:	0f 84 74 00 00 00    	je     8054ed4 <preprocess+0x324>
 8054e60:	48 8b 05 c1 90 03 00 	mov    0x390c1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054e67:	8b 00                	mov    (%rax),%eax
 8054e69:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8054e6f:	0f 84 14 00 00 00    	je     8054e89 <preprocess+0x2d9>
 8054e75:	48 8d 05 e6 65 03 00 	lea    0x365e6(%rip),%rax        # 808b462 <L.128>
 8054e7c:	48 89 c7             	mov    %rax,%rdi
 8054e7f:	b8 00 00 00 00       	mov    $0x0,%eax
 8054e84:	e8 3e 88 ff ff       	callq  804d6c7 <tcc_error>
 8054e89:	48 8b 05 18 91 03 00 	mov    0x39118(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8054e90:	48 8b 00             	mov    (%rax),%rax
 8054e93:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8054e9a:	00 00 00 
 8054e9d:	48 01 c8             	add    %rcx,%rax
 8054ea0:	48 8b 08             	mov    (%rax),%rcx
 8054ea3:	49 89 ca             	mov    %rcx,%r10
 8054ea6:	b8 00 04 00 00       	mov    $0x400,%eax
 8054eab:	48 89 c6             	mov    %rax,%rsi
 8054eae:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8054eb5:	48 89 c7             	mov    %rax,%rdi
 8054eb8:	4c 89 d2             	mov    %r10,%rdx
 8054ebb:	b8 00 00 00 00       	mov    $0x0,%eax
 8054ec0:	e8 a6 6e ff ff       	callq  804bd6b <pstrcat>
 8054ec5:	b8 00 00 00 00       	mov    $0x0,%eax
 8054eca:	e8 fb 37 00 00       	callq  80586ca <next>
 8054ecf:	e9 7a ff ff ff       	jmpq   8054e4e <preprocess+0x29e>
 8054ed4:	b8 22 00 00 00       	mov    $0x22,%eax
 8054ed9:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8054edc:	e9 1d 01 00 00       	jmpq   8054ffe <preprocess+0x44e>
 8054ee1:	48 8b 05 40 90 03 00 	mov    0x39040(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054ee8:	8b 00                	mov    (%rax),%eax
 8054eea:	83 f8 0a             	cmp    $0xa,%eax
 8054eed:	0f 84 4e 00 00 00    	je     8054f41 <preprocess+0x391>
 8054ef3:	48 8b 05 ae 90 03 00 	mov    0x390ae(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8054efa:	48 89 c6             	mov    %rax,%rsi
 8054efd:	48 8b 05 24 90 03 00 	mov    0x39024(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8054f04:	8b 00                	mov    (%rax),%eax
 8054f06:	48 89 c7             	mov    %rax,%rdi
 8054f09:	b8 00 00 00 00       	mov    $0x0,%eax
 8054f0e:	e8 a1 c9 ff ff       	callq  80518b4 <get_tok_str>
 8054f13:	49 89 c2             	mov    %rax,%r10
 8054f16:	b8 00 04 00 00       	mov    $0x400,%eax
 8054f1b:	48 89 c6             	mov    %rax,%rsi
 8054f1e:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8054f25:	48 89 c7             	mov    %rax,%rdi
 8054f28:	4c 89 d2             	mov    %r10,%rdx
 8054f2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054f30:	e8 36 6e ff ff       	callq  804bd6b <pstrcat>
 8054f35:	b8 00 00 00 00       	mov    $0x0,%eax
 8054f3a:	e8 8b 37 00 00       	callq  80586ca <next>
 8054f3f:	eb a0                	jmp    8054ee1 <preprocess+0x331>
 8054f41:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8054f48:	48 89 c7             	mov    %rax,%rdi
 8054f4b:	b8 00 00 00 00       	mov    $0x0,%eax
 8054f50:	e8 8b 23 03 00       	callq  80872e0 <strlen>
 8054f55:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
 8054f5b:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 8054f61:	83 f8 02             	cmp    $0x2,%eax
 8054f64:	0f 8c 3a 00 00 00    	jl     8054fa4 <preprocess+0x3f4>
 8054f6a:	0f be 85 e0 fb ff ff 	movsbl -0x420(%rbp),%eax
 8054f71:	83 f8 3c             	cmp    $0x3c,%eax
 8054f74:	0f 85 2a 00 00 00    	jne    8054fa4 <preprocess+0x3f4>
 8054f7a:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 8054f80:	83 e8 01             	sub    $0x1,%eax
 8054f83:	48 63 c0             	movslq %eax,%rax
 8054f86:	48 8d 8d e0 fb ff ff 	lea    -0x420(%rbp),%rcx
 8054f8d:	48 89 c2             	mov    %rax,%rdx
 8054f90:	48 01 d1             	add    %rdx,%rcx
 8054f93:	0f be 01             	movsbl (%rcx),%eax
 8054f96:	83 f8 3e             	cmp    $0x3e,%eax
 8054f99:	0f 85 05 00 00 00    	jne    8054fa4 <preprocess+0x3f4>
 8054f9f:	e9 05 00 00 00       	jmpq   8054fa9 <preprocess+0x3f9>
 8054fa4:	e9 cc fe ff ff       	jmpq   8054e75 <preprocess+0x2c5>
 8054fa9:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 8054faf:	83 e8 02             	sub    $0x2,%eax
 8054fb2:	49 89 c2             	mov    %rax,%r10
 8054fb5:	48 8d 85 e1 fb ff ff 	lea    -0x41f(%rbp),%rax
 8054fbc:	48 89 c6             	mov    %rax,%rsi
 8054fbf:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8054fc6:	48 89 c7             	mov    %rax,%rdi
 8054fc9:	4c 89 d2             	mov    %r10,%rdx
 8054fcc:	b8 00 00 00 00       	mov    $0x0,%eax
 8054fd1:	e8 9a 1d 03 00       	callq  8086d70 <memmove>
 8054fd6:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 8054fdc:	83 e8 02             	sub    $0x2,%eax
 8054fdf:	48 63 c0             	movslq %eax,%rax
 8054fe2:	48 8d 8d e0 fb ff ff 	lea    -0x420(%rbp),%rcx
 8054fe9:	48 89 c2             	mov    %rax,%rdx
 8054fec:	48 01 d1             	add    %rdx,%rcx
 8054fef:	b8 00 00 00 00       	mov    $0x0,%eax
 8054ff4:	88 01                	mov    %al,(%rcx)
 8054ff6:	b8 3e 00 00 00       	mov    $0x3e,%eax
 8054ffb:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8054ffe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055002:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8055009:	00 00 00 
 805500c:	48 01 c8             	add    %rcx,%rax
 805500f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8055013:	48 ba 48 02 00 00 00 	movabs $0x248,%rdx
 805501a:	00 00 00 
 805501d:	48 01 d1             	add    %rdx,%rcx
 8055020:	48 ba 00 01 00 00 00 	movabs $0x100,%rdx
 8055027:	00 00 00 
 805502a:	48 01 d1             	add    %rdx,%rcx
 805502d:	48 8b 10             	mov    (%rax),%rdx
 8055030:	48 89 d0             	mov    %rdx,%rax
 8055033:	48 89 ca             	mov    %rcx,%rdx
 8055036:	48 39 d0             	cmp    %rdx,%rax
 8055039:	0f 82 14 00 00 00    	jb     8055053 <preprocess+0x4a3>
 805503f:	48 8d 05 48 64 03 00 	lea    0x36448(%rip),%rax        # 808b48e <L.129>
 8055046:	48 89 c7             	mov    %rax,%rdi
 8055049:	b8 00 00 00 00       	mov    $0x0,%eax
 805504e:	e8 74 86 ff ff       	callq  804d6c7 <tcc_error>
 8055053:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055057:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805505e:	00 00 00 
 8055061:	48 01 c8             	add    %rcx,%rax
 8055064:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8055068:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805506f:	00 00 00 
 8055072:	48 01 d1             	add    %rdx,%rcx
 8055075:	8b 10                	mov    (%rax),%edx
 8055077:	8b 01                	mov    (%rcx),%eax
 8055079:	48 01 c2             	add    %rax,%rdx
 805507c:	89 55 e4             	mov    %edx,-0x1c(%rbp)
 805507f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
 8055084:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8055087:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805508a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 805508d:	39 c8                	cmp    %ecx,%eax
 805508f:	0f 8d cf 04 00 00    	jge    8055564 <preprocess+0x9b4>
 8055095:	e9 0b 00 00 00       	jmpq   80550a5 <preprocess+0x4f5>
 805509a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805509d:	83 c0 01             	add    $0x1,%eax
 80550a0:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80550a3:	eb e2                	jmp    8055087 <preprocess+0x4d7>
 80550a5:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80550a8:	83 f8 fe             	cmp    $0xfffffffe,%eax
 80550ab:	0f 85 25 00 00 00    	jne    80550d6 <preprocess+0x526>
 80550b1:	0f be 85 e0 fb ff ff 	movsbl -0x420(%rbp),%eax
 80550b8:	83 f8 2f             	cmp    $0x2f,%eax
 80550bb:	0f 84 05 00 00 00    	je     80550c6 <preprocess+0x516>
 80550c1:	e9 d4 ff ff ff       	jmpq   805509a <preprocess+0x4ea>
 80550c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80550cb:	88 85 cc f7 ff ff    	mov    %al,-0x834(%rbp)
 80550d1:	e9 bb 01 00 00       	jmpq   8055291 <preprocess+0x6e1>
 80550d6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80550d9:	83 f8 ff             	cmp    $0xffffffff,%eax
 80550dc:	0f 85 b4 00 00 00    	jne    8055196 <preprocess+0x5e6>
 80550e2:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80550e5:	83 f8 22             	cmp    $0x22,%eax
 80550e8:	0f 84 05 00 00 00    	je     80550f3 <preprocess+0x543>
 80550ee:	e9 a7 ff ff ff       	jmpq   805509a <preprocess+0x4ea>
 80550f3:	48 8b 05 a6 8d 03 00 	mov    0x38da6(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80550fa:	48 8b 00             	mov    (%rax),%rax
 80550fd:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 8055104:	00 00 00 
 8055107:	48 01 c8             	add    %rcx,%rax
 805510a:	48 89 c7             	mov    %rax,%rdi
 805510d:	b8 00 00 00 00       	mov    $0x0,%eax
 8055112:	e8 22 6d ff ff       	callq  804be39 <tcc_basename>
 8055117:	48 8b 0d 82 8d 03 00 	mov    0x38d82(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805511e:	48 8b 09             	mov    (%rcx),%rcx
 8055121:	48 ba 39 02 00 00 00 	movabs $0x239,%rdx
 8055128:	00 00 00 
 805512b:	48 01 d1             	add    %rdx,%rcx
 805512e:	48 29 c8             	sub    %rcx,%rax
 8055131:	48 89 c1             	mov    %rax,%rcx
 8055134:	89 8d b4 f7 ff ff    	mov    %ecx,-0x84c(%rbp)
 805513a:	48 8b 05 5f 8d 03 00 	mov    0x38d5f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055141:	48 8b 00             	mov    (%rax),%rax
 8055144:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 805514b:	00 00 00 
 805514e:	48 01 c8             	add    %rcx,%rax
 8055151:	8b 8d b4 f7 ff ff    	mov    -0x84c(%rbp),%ecx
 8055157:	49 89 ca             	mov    %rcx,%r10
 805515a:	48 89 c6             	mov    %rax,%rsi
 805515d:	48 8d 85 cc f7 ff ff 	lea    -0x834(%rbp),%rax
 8055164:	48 89 c7             	mov    %rax,%rdi
 8055167:	4c 89 d2             	mov    %r10,%rdx
 805516a:	b8 00 00 00 00       	mov    $0x0,%eax
 805516f:	e8 fc 1a 03 00       	callq  8086c70 <memcpy>
 8055174:	8b 85 b4 f7 ff ff    	mov    -0x84c(%rbp),%eax
 805517a:	48 63 c0             	movslq %eax,%rax
 805517d:	48 8d 8d cc f7 ff ff 	lea    -0x834(%rbp),%rcx
 8055184:	48 89 c2             	mov    %rax,%rdx
 8055187:	48 01 d1             	add    %rdx,%rcx
 805518a:	b8 00 00 00 00       	mov    $0x0,%eax
 805518f:	88 01                	mov    %al,(%rcx)
 8055191:	e9 fb 00 00 00       	jmpq   8055291 <preprocess+0x6e1>
 8055196:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805519a:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80551a1:	00 00 00 
 80551a4:	48 01 c8             	add    %rcx,%rax
 80551a7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80551aa:	8b 10                	mov    (%rax),%edx
 80551ac:	39 d1                	cmp    %edx,%ecx
 80551ae:	0f 8d 36 00 00 00    	jge    80551ea <preprocess+0x63a>
 80551b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80551b8:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80551bf:	00 00 00 
 80551c2:	48 01 c8             	add    %rcx,%rax
 80551c5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80551c8:	48 63 c9             	movslq %ecx,%rcx
 80551cb:	48 89 ca             	mov    %rcx,%rdx
 80551ce:	48 c1 e2 03          	shl    $0x3,%rdx
 80551d2:	48 8b 08             	mov    (%rax),%rcx
 80551d5:	48 89 d0             	mov    %rdx,%rax
 80551d8:	48 01 c1             	add    %rax,%rcx
 80551db:	48 8b 01             	mov    (%rcx),%rax
 80551de:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
 80551e5:	e9 55 00 00 00       	jmpq   805523f <preprocess+0x68f>
 80551ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80551ee:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 80551f5:	00 00 00 
 80551f8:	48 01 c8             	add    %rcx,%rax
 80551fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 80551ff:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8055206:	00 00 00 
 8055209:	48 01 d1             	add    %rdx,%rcx
 805520c:	8b 55 ec             	mov    -0x14(%rbp),%edx
 805520f:	48 89 85 a8 f7 ff ff 	mov    %rax,-0x858(%rbp)
 8055216:	8b 01                	mov    (%rcx),%eax
 8055218:	48 29 c2             	sub    %rax,%rdx
 805521b:	48 63 d2             	movslq %edx,%rdx
 805521e:	48 89 d0             	mov    %rdx,%rax
 8055221:	48 c1 e0 03          	shl    $0x3,%rax
 8055225:	48 8b 8d a8 f7 ff ff 	mov    -0x858(%rbp),%rcx
 805522c:	48 8b 09             	mov    (%rcx),%rcx
 805522f:	48 89 c2             	mov    %rax,%rdx
 8055232:	48 01 d1             	add    %rdx,%rcx
 8055235:	48 8b 01             	mov    (%rcx),%rax
 8055238:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
 805523f:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
 8055246:	49 89 c2             	mov    %rax,%r10
 8055249:	b8 00 04 00 00       	mov    $0x400,%eax
 805524e:	48 89 c6             	mov    %rax,%rsi
 8055251:	48 8d 85 cc f7 ff ff 	lea    -0x834(%rbp),%rax
 8055258:	48 89 c7             	mov    %rax,%rdi
 805525b:	4c 89 d2             	mov    %r10,%rdx
 805525e:	b8 00 00 00 00       	mov    $0x0,%eax
 8055263:	e8 3b 6a ff ff       	callq  804bca3 <pstrcpy>
 8055268:	48 8d 05 3b 62 03 00 	lea    0x3623b(%rip),%rax        # 808b4aa <L.130>
 805526f:	49 89 c2             	mov    %rax,%r10
 8055272:	b8 00 04 00 00       	mov    $0x400,%eax
 8055277:	48 89 c6             	mov    %rax,%rsi
 805527a:	48 8d 85 cc f7 ff ff 	lea    -0x834(%rbp),%rax
 8055281:	48 89 c7             	mov    %rax,%rdi
 8055284:	4c 89 d2             	mov    %r10,%rdx
 8055287:	b8 00 00 00 00       	mov    $0x0,%eax
 805528c:	e8 da 6a ff ff       	callq  804bd6b <pstrcat>
 8055291:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8055298:	49 89 c2             	mov    %rax,%r10
 805529b:	b8 00 04 00 00       	mov    $0x400,%eax
 80552a0:	48 89 c6             	mov    %rax,%rsi
 80552a3:	48 8d 85 cc f7 ff ff 	lea    -0x834(%rbp),%rax
 80552aa:	48 89 c7             	mov    %rax,%rdi
 80552ad:	4c 89 d2             	mov    %r10,%rdx
 80552b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80552b5:	e8 b1 6a ff ff       	callq  804bd6b <pstrcat>
 80552ba:	48 8d 85 cc f7 ff ff 	lea    -0x834(%rbp),%rax
 80552c1:	49 89 c2             	mov    %rax,%r10
 80552c4:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80552c7:	48 89 c6             	mov    %rax,%rsi
 80552ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80552ce:	48 89 c7             	mov    %rax,%rdi
 80552d1:	4c 89 d2             	mov    %r10,%rdx
 80552d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80552d9:	e8 6b f5 ff ff       	callq  8054849 <search_cached_include>
 80552de:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
 80552e5:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
 80552ec:	85 c0                	test   %eax,%eax
 80552ee:	0f 84 2e 00 00 00    	je     8055322 <preprocess+0x772>
 80552f4:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
 80552fb:	8b 08                	mov    (%rax),%ecx
 80552fd:	48 89 cf             	mov    %rcx,%rdi
 8055300:	b8 00 00 00 00       	mov    $0x0,%eax
 8055305:	e8 fc ea ff ff       	callq  8053e06 <define_find>
 805530a:	85 c0                	test   %eax,%eax
 805530c:	0f 84 10 00 00 00    	je     8055322 <preprocess+0x772>
 8055312:	b8 00 00 00 00       	mov    $0x0,%eax
 8055317:	89 85 b0 f7 ff ff    	mov    %eax,-0x850(%rbp)
 805531d:	e9 35 00 00 00       	jmpq   8055357 <preprocess+0x7a7>
 8055322:	48 8d 85 cc f7 ff ff 	lea    -0x834(%rbp),%rax
 8055329:	48 89 c6             	mov    %rax,%rsi
 805532c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055330:	48 89 c7             	mov    %rax,%rdi
 8055333:	b8 00 00 00 00       	mov    $0x0,%eax
 8055338:	e8 fc 89 ff ff       	callq  804dd39 <tcc_open>
 805533d:	89 85 b0 f7 ff ff    	mov    %eax,-0x850(%rbp)
 8055343:	8b 85 b0 f7 ff ff    	mov    -0x850(%rbp),%eax
 8055349:	83 f8 00             	cmp    $0x0,%eax
 805534c:	0f 8d 05 00 00 00    	jge    8055357 <preprocess+0x7a7>
 8055352:	e9 43 fd ff ff       	jmpq   805509a <preprocess+0x4ea>
 8055357:	48 8b 05 ca 8b 03 00 	mov    0x38bca(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805535e:	8b 00                	mov    (%rax),%eax
 8055360:	81 f8 3b 01 00 00    	cmp    $0x13b,%eax
 8055366:	0f 85 2c 00 00 00    	jne    8055398 <preprocess+0x7e8>
 805536c:	b8 3a 01 00 00       	mov    $0x13a,%eax
 8055371:	4c 8b 1d b0 8b 03 00 	mov    0x38bb0(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055378:	41 89 03             	mov    %eax,(%r11)
 805537b:	8b 85 b0 f7 ff ff    	mov    -0x850(%rbp),%eax
 8055381:	85 c0                	test   %eax,%eax
 8055383:	0f 84 0a 00 00 00    	je     8055393 <preprocess+0x7e3>
 8055389:	b8 00 00 00 00       	mov    $0x0,%eax
 805538e:	e8 f7 88 ff ff       	callq  804dc8a <tcc_close>
 8055393:	e9 02 fd ff ff       	jmpq   805509a <preprocess+0x4ea>
 8055398:	b8 00 00 00 00       	mov    $0x0,%eax
 805539d:	8b 8d b0 f7 ff ff    	mov    -0x850(%rbp),%ecx
 80553a3:	39 c8                	cmp    %ecx,%eax
 80553a5:	0f 85 05 00 00 00    	jne    80553b0 <preprocess+0x800>
 80553ab:	e9 d2 01 00 00       	jmpq   8055582 <preprocess+0x9d2>
 80553b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80553b4:	48 b9 78 0c 00 00 00 	movabs $0xc78,%rcx
 80553bb:	00 00 00 
 80553be:	48 01 c8             	add    %rcx,%rax
 80553c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 80553c5:	48 ba 80 0c 00 00 00 	movabs $0xc80,%rdx
 80553cc:	00 00 00 
 80553cf:	48 01 d1             	add    %rdx,%rcx
 80553d2:	48 8d 95 cc f7 ff ff 	lea    -0x834(%rbp),%rdx
 80553d9:	48 89 d7             	mov    %rdx,%rdi
 80553dc:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
 80553e3:	48 89 8d 98 f7 ff ff 	mov    %rcx,-0x868(%rbp)
 80553ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80553ef:	e8 a8 6c ff ff       	callq  804c09c <tcc_strdup>
 80553f4:	49 89 c2             	mov    %rax,%r10
 80553f7:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
 80553fe:	48 89 c6             	mov    %rax,%rsi
 8055401:	48 8b 85 a0 f7 ff ff 	mov    -0x860(%rbp),%rax
 8055408:	48 89 c7             	mov    %rax,%rdi
 805540b:	4c 89 d2             	mov    %r10,%rdx
 805540e:	b8 00 00 00 00       	mov    $0x0,%eax
 8055413:	e8 eb 6c ff ff       	callq  804c103 <dynarray_add>
 8055418:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805541c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8055423:	00 00 00 
 8055426:	48 01 c8             	add    %rcx,%rax
 8055429:	48 8b 08             	mov    (%rax),%rcx
 805542c:	48 89 ca             	mov    %rcx,%rdx
 805542f:	48 89 95 90 f7 ff ff 	mov    %rdx,-0x870(%rbp)
 8055436:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 805543d:	00 00 00 
 8055440:	48 01 d1             	add    %rdx,%rcx
 8055443:	48 89 08             	mov    %rcx,(%rax)
 8055446:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
 805544d:	48 8b 0d 4c 8a 03 00 	mov    0x38a4c(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055454:	48 8b 09             	mov    (%rcx),%rcx
 8055457:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 805545e:	00 00 00 
 8055461:	48 01 d1             	add    %rdx,%rcx
 8055464:	48 8b 11             	mov    (%rcx),%rdx
 8055467:	48 89 10             	mov    %rdx,(%rax)
 805546a:	48 8b 05 2f 8a 03 00 	mov    0x38a2f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055471:	48 8b 00             	mov    (%rax),%rax
 8055474:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 805547b:	00 00 00 
 805547e:	48 01 c8             	add    %rcx,%rax
 8055481:	0f be 4d e8          	movsbl -0x18(%rbp),%ecx
 8055485:	88 08                	mov    %cl,(%rax)
 8055487:	48 8b 05 12 8a 03 00 	mov    0x38a12(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805548e:	48 8b 00             	mov    (%rax),%rax
 8055491:	48 b9 39 00 00 00 00 	movabs $0x39,%rcx
 8055498:	00 00 00 
 805549b:	48 01 c8             	add    %rcx,%rax
 805549e:	48 8d 8d cc f7 ff ff 	lea    -0x834(%rbp),%rcx
 80554a5:	49 89 ca             	mov    %rcx,%r10
 80554a8:	b9 00 02 00 00       	mov    $0x200,%ecx
 80554ad:	48 89 ce             	mov    %rcx,%rsi
 80554b0:	48 89 c7             	mov    %rax,%rdi
 80554b3:	4c 89 d2             	mov    %r10,%rdx
 80554b6:	b8 00 00 00 00       	mov    $0x0,%eax
 80554bb:	e8 e3 67 ff ff       	callq  804bca3 <pstrcpy>
 80554c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80554c4:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 80554cb:	00 00 00 
 80554ce:	48 01 c8             	add    %rcx,%rax
 80554d1:	8b 08                	mov    (%rax),%ecx
 80554d3:	85 c9                	test   %ecx,%ecx
 80554d5:	0f 84 4f 00 00 00    	je     805552a <preprocess+0x97a>
 80554db:	48 8b 05 be 89 03 00 	mov    0x389be(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80554e2:	48 8b 00             	mov    (%rax),%rax
 80554e5:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 80554ec:	00 00 00 
 80554ef:	48 01 c8             	add    %rcx,%rax
 80554f2:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80554f9:	00 00 00 
 80554fc:	49 89 c8             	mov    %rcx,%r8
 80554ff:	b9 00 00 00 00       	mov    $0x0,%ecx
 8055504:	49 89 cb             	mov    %rcx,%r11
 8055507:	b9 00 00 00 00       	mov    $0x0,%ecx
 805550c:	49 89 ca             	mov    %rcx,%r10
 805550f:	b9 82 00 00 00       	mov    $0x82,%ecx
 8055514:	48 89 ce             	mov    %rcx,%rsi
 8055517:	48 89 c7             	mov    %rax,%rdi
 805551a:	4c 89 d2             	mov    %r10,%rdx
 805551d:	4c 89 d9             	mov    %r11,%rcx
 8055520:	b8 00 00 00 00       	mov    $0x0,%eax
 8055525:	e8 07 93 01 00       	callq  806e831 <put_stabs>
 805552a:	48 8b 05 df 89 03 00 	mov    0x389df(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8055531:	8b 00                	mov    (%rax),%eax
 8055533:	83 c8 03             	or     $0x3,%eax
 8055536:	4c 8b 1d d3 89 03 00 	mov    0x389d3(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 805553d:	41 89 03             	mov    %eax,(%r11)
 8055540:	48 8b 05 59 89 03 00 	mov    0x38959(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055547:	48 8b 00             	mov    (%rax),%rax
 805554a:	48 8b 08             	mov    (%rax),%rcx
 805554d:	0f b6 01             	movzbl (%rcx),%eax
 8055550:	4c 8b 1d b1 89 03 00 	mov    0x389b1(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8055557:	41 89 03             	mov    %eax,(%r11)
 805555a:	e9 40 09 00 00       	jmpq   8055e9f <preprocess+0x12ef>
 805555f:	e9 36 fb ff ff       	jmpq   805509a <preprocess+0x4ea>
 8055564:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 805556b:	48 89 c6             	mov    %rax,%rsi
 805556e:	48 8d 05 37 5f 03 00 	lea    0x35f37(%rip),%rax        # 808b4ac <L.131>
 8055575:	48 89 c7             	mov    %rax,%rdi
 8055578:	b8 00 00 00 00       	mov    $0x0,%eax
 805557d:	e8 45 81 ff ff       	callq  804d6c7 <tcc_error>
 8055582:	e9 fa 08 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055587:	e9 0c 00 00 00       	jmpq   8055598 <preprocess+0x9e8>
 805558c:	81 f8 3d 01 00 00    	cmp    $0x13d,%eax
 8055592:	0f 85 12 00 00 00    	jne    80555aa <preprocess+0x9fa>
 8055598:	b8 01 00 00 00       	mov    $0x1,%eax
 805559d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80555a0:	e9 3c 00 00 00       	jmpq   80555e1 <preprocess+0xa31>
 80555a5:	e9 0c 00 00 00       	jmpq   80555b6 <preprocess+0xa06>
 80555aa:	81 f8 03 01 00 00    	cmp    $0x103,%eax
 80555b0:	0f 85 17 00 00 00    	jne    80555cd <preprocess+0xa1d>
 80555b6:	b8 00 00 00 00       	mov    $0x0,%eax
 80555bb:	e8 76 ed ff ff       	callq  8054336 <expr_preprocess>
 80555c0:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80555c3:	e9 e1 00 00 00       	jmpq   80556a9 <preprocess+0xaf9>
 80555c8:	e9 0c 00 00 00       	jmpq   80555d9 <preprocess+0xa29>
 80555cd:	81 f8 3c 01 00 00    	cmp    $0x13c,%eax
 80555d3:	0f 85 69 01 00 00    	jne    8055742 <preprocess+0xb92>
 80555d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80555de:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80555e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80555e6:	e8 84 1e 00 00       	callq  805746f <next_nomacro>
 80555eb:	48 8b 05 36 89 03 00 	mov    0x38936(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80555f2:	8b 00                	mov    (%rax),%eax
 80555f4:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 80555fa:	0f 8d 3a 00 00 00    	jge    805563a <preprocess+0xa8a>
 8055600:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8055603:	85 c0                	test   %eax,%eax
 8055605:	0f 84 05 00 00 00    	je     8055610 <preprocess+0xa60>
 805560b:	e9 0c 00 00 00       	jmpq   805561c <preprocess+0xa6c>
 8055610:	48 8d 05 d3 5e 03 00 	lea    0x35ed3(%rip),%rax        # 808b4ea <L.134>
 8055617:	e9 07 00 00 00       	jmpq   8055623 <preprocess+0xa73>
 805561c:	48 8d 05 c5 5e 03 00 	lea    0x35ec5(%rip),%rax        # 808b4e8 <L.133>
 8055623:	48 89 c6             	mov    %rax,%rsi
 8055626:	48 8d 05 9b 5e 03 00 	lea    0x35e9b(%rip),%rax        # 808b4c8 <L.132>
 805562d:	48 89 c7             	mov    %rax,%rdi
 8055630:	b8 00 00 00 00       	mov    $0x0,%eax
 8055635:	e8 8d 80 ff ff       	callq  804d6c7 <tcc_error>
 805563a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805563d:	85 c0                	test   %eax,%eax
 805563f:	0f 84 2d 00 00 00    	je     8055672 <preprocess+0xac2>
 8055645:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8055648:	85 c0                	test   %eax,%eax
 805564a:	0f 84 22 00 00 00    	je     8055672 <preprocess+0xac2>
 8055650:	48 8b 05 49 88 03 00 	mov    0x38849(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055657:	48 8b 00             	mov    (%rax),%rax
 805565a:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8055661:	00 00 00 
 8055664:	48 01 c8             	add    %rcx,%rax
 8055667:	48 8b 0d ba 88 03 00 	mov    0x388ba(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805566e:	8b 09                	mov    (%rcx),%ecx
 8055670:	89 08                	mov    %ecx,(%rax)
 8055672:	48 8b 05 af 88 03 00 	mov    0x388af(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055679:	8b 00                	mov    (%rax),%eax
 805567b:	48 89 c7             	mov    %rax,%rdi
 805567e:	b8 00 00 00 00       	mov    $0x0,%eax
 8055683:	e8 7e e7 ff ff       	callq  8053e06 <define_find>
 8055688:	48 89 c1             	mov    %rax,%rcx
 805568b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8055692:	00 00 00 
 8055695:	48 39 c1             	cmp    %rax,%rcx
 8055698:	b8 00 00 00 00       	mov    $0x0,%eax
 805569d:	0f 95 c0             	setne  %al
 80556a0:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 80556a3:	48 31 c8             	xor    %rcx,%rax
 80556a6:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80556a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80556ad:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80556b4:	00 00 00 
 80556b7:	48 01 c8             	add    %rcx,%rax
 80556ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 80556be:	48 ba 48 03 00 00 00 	movabs $0x348,%rdx
 80556c5:	00 00 00 
 80556c8:	48 01 d1             	add    %rdx,%rcx
 80556cb:	48 ba 00 01 00 00 00 	movabs $0x100,%rdx
 80556d2:	00 00 00 
 80556d5:	48 01 d1             	add    %rdx,%rcx
 80556d8:	48 8b 10             	mov    (%rax),%rdx
 80556db:	48 89 d0             	mov    %rdx,%rax
 80556de:	48 89 ca             	mov    %rcx,%rdx
 80556e1:	48 39 d0             	cmp    %rdx,%rax
 80556e4:	0f 82 14 00 00 00    	jb     80556fe <preprocess+0xb4e>
 80556ea:	48 8d 05 fa 5d 03 00 	lea    0x35dfa(%rip),%rax        # 808b4eb <L.135>
 80556f1:	48 89 c7             	mov    %rax,%rdi
 80556f4:	b8 00 00 00 00       	mov    $0x0,%eax
 80556f9:	e8 c9 7f ff ff       	callq  804d6c7 <tcc_error>
 80556fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055702:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8055709:	00 00 00 
 805570c:	48 01 c8             	add    %rcx,%rax
 805570f:	48 8b 08             	mov    (%rax),%rcx
 8055712:	48 89 ca             	mov    %rcx,%rdx
 8055715:	48 89 95 88 f7 ff ff 	mov    %rdx,-0x878(%rbp)
 805571c:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8055723:	00 00 00 
 8055726:	48 01 d1             	add    %rdx,%rcx
 8055729:	48 89 08             	mov    %rcx,(%rax)
 805572c:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
 8055733:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8055736:	89 08                	mov    %ecx,(%rax)
 8055738:	e9 16 02 00 00       	jmpq   8055953 <preprocess+0xda3>
 805573d:	e9 0c 00 00 00       	jmpq   805574e <preprocess+0xb9e>
 8055742:	81 f8 04 01 00 00    	cmp    $0x104,%eax
 8055748:	0f 85 bf 00 00 00    	jne    805580d <preprocess+0xc5d>
 805574e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055752:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8055759:	00 00 00 
 805575c:	48 01 c8             	add    %rcx,%rax
 805575f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8055763:	48 ba 48 03 00 00 00 	movabs $0x348,%rdx
 805576a:	00 00 00 
 805576d:	48 01 d1             	add    %rdx,%rcx
 8055770:	48 8b 10             	mov    (%rax),%rdx
 8055773:	48 89 d0             	mov    %rdx,%rax
 8055776:	48 89 ca             	mov    %rcx,%rdx
 8055779:	48 39 d0             	cmp    %rdx,%rax
 805577c:	0f 85 14 00 00 00    	jne    8055796 <preprocess+0xbe6>
 8055782:	48 8d 05 6e 5d 03 00 	lea    0x35d6e(%rip),%rax        # 808b4f7 <L.136>
 8055789:	48 89 c7             	mov    %rax,%rdi
 805578c:	b8 00 00 00 00       	mov    $0x0,%eax
 8055791:	e8 31 7f ff ff       	callq  804d6c7 <tcc_error>
 8055796:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805579a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80557a1:	00 00 00 
 80557a4:	48 01 c8             	add    %rcx,%rax
 80557a7:	48 8b 08             	mov    (%rax),%rcx
 80557aa:	48 b8 fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rax
 80557b1:	ff ff ff 
 80557b4:	48 01 c1             	add    %rax,%rcx
 80557b7:	8b 01                	mov    (%rcx),%eax
 80557b9:	83 e0 02             	and    $0x2,%eax
 80557bc:	85 c0                	test   %eax,%eax
 80557be:	0f 84 14 00 00 00    	je     80557d8 <preprocess+0xc28>
 80557c4:	48 8d 05 47 5d 03 00 	lea    0x35d47(%rip),%rax        # 808b512 <L.137>
 80557cb:	48 89 c7             	mov    %rax,%rdi
 80557ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80557d3:	e8 ef 7e ff ff       	callq  804d6c7 <tcc_error>
 80557d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80557dc:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80557e3:	00 00 00 
 80557e6:	48 01 c8             	add    %rcx,%rax
 80557e9:	48 8b 08             	mov    (%rax),%rcx
 80557ec:	48 b8 fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rax
 80557f3:	ff ff ff 
 80557f6:	48 01 c1             	add    %rax,%rcx
 80557f9:	8b 01                	mov    (%rcx),%eax
 80557fb:	83 f0 03             	xor    $0x3,%eax
 80557fe:	89 01                	mov    %eax,(%rcx)
 8055800:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8055803:	e9 e3 00 00 00       	jmpq   80558eb <preprocess+0xd3b>
 8055808:	e9 0c 00 00 00       	jmpq   8055819 <preprocess+0xc69>
 805580d:	81 f8 3e 01 00 00    	cmp    $0x13e,%eax
 8055813:	0f 85 6e 01 00 00    	jne    8055987 <preprocess+0xdd7>
 8055819:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805581d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8055824:	00 00 00 
 8055827:	48 01 c8             	add    %rcx,%rax
 805582a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805582e:	48 ba 48 03 00 00 00 	movabs $0x348,%rdx
 8055835:	00 00 00 
 8055838:	48 01 d1             	add    %rdx,%rcx
 805583b:	48 8b 10             	mov    (%rax),%rdx
 805583e:	48 89 d0             	mov    %rdx,%rax
 8055841:	48 89 ca             	mov    %rcx,%rdx
 8055844:	48 39 d0             	cmp    %rdx,%rax
 8055847:	0f 85 14 00 00 00    	jne    8055861 <preprocess+0xcb1>
 805584d:	48 8d 05 d0 5c 03 00 	lea    0x35cd0(%rip),%rax        # 808b524 <L.138>
 8055854:	48 89 c7             	mov    %rax,%rdi
 8055857:	b8 00 00 00 00       	mov    $0x0,%eax
 805585c:	e8 66 7e ff ff       	callq  804d6c7 <tcc_error>
 8055861:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055865:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805586c:	00 00 00 
 805586f:	48 01 c8             	add    %rcx,%rax
 8055872:	48 8b 08             	mov    (%rax),%rcx
 8055875:	48 b8 fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rax
 805587c:	ff ff ff 
 805587f:	48 01 c1             	add    %rax,%rcx
 8055882:	8b 01                	mov    (%rcx),%eax
 8055884:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8055887:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805588a:	83 f8 01             	cmp    $0x1,%eax
 805588d:	0f 8e 14 00 00 00    	jle    80558a7 <preprocess+0xcf7>
 8055893:	48 8d 05 a5 5c 03 00 	lea    0x35ca5(%rip),%rax        # 808b53f <L.139>
 805589a:	48 89 c7             	mov    %rax,%rdi
 805589d:	b8 00 00 00 00       	mov    $0x0,%eax
 80558a2:	e8 20 7e ff ff       	callq  804d6c7 <tcc_error>
 80558a7:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80558aa:	83 f8 01             	cmp    $0x1,%eax
 80558ad:	0f 85 05 00 00 00    	jne    80558b8 <preprocess+0xd08>
 80558b3:	e9 ae 00 00 00       	jmpq   8055966 <preprocess+0xdb6>
 80558b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80558bd:	e8 74 ea ff ff       	callq  8054336 <expr_preprocess>
 80558c2:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80558c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80558c9:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80558d0:	00 00 00 
 80558d3:	48 01 c8             	add    %rcx,%rax
 80558d6:	48 8b 08             	mov    (%rax),%rcx
 80558d9:	48 b8 fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rax
 80558e0:	ff ff ff 
 80558e3:	48 01 c1             	add    %rax,%rcx
 80558e6:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80558e9:	89 01                	mov    %eax,(%rcx)
 80558eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80558ef:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80558f6:	00 00 00 
 80558f9:	48 01 c8             	add    %rcx,%rax
 80558fc:	48 8b 0d 9d 85 03 00 	mov    0x3859d(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055903:	48 8b 09             	mov    (%rcx),%rcx
 8055906:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805590d:	00 00 00 
 8055910:	48 01 d1             	add    %rdx,%rcx
 8055913:	48 8b 11             	mov    (%rcx),%rdx
 8055916:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805591d:	00 00 00 
 8055920:	48 01 ca             	add    %rcx,%rdx
 8055923:	48 8b 08             	mov    (%rax),%rcx
 8055926:	48 89 c8             	mov    %rcx,%rax
 8055929:	48 89 d1             	mov    %rdx,%rcx
 805592c:	48 39 c8             	cmp    %rcx,%rax
 805592f:	0f 85 1e 00 00 00    	jne    8055953 <preprocess+0xda3>
 8055935:	48 8b 05 64 85 03 00 	mov    0x38564(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805593c:	48 8b 00             	mov    (%rax),%rax
 805593f:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8055946:	00 00 00 
 8055949:	48 01 c8             	add    %rcx,%rax
 805594c:	b9 00 00 00 00       	mov    $0x0,%ecx
 8055951:	89 08                	mov    %ecx,(%rax)
 8055953:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8055956:	83 e0 01             	and    $0x1,%eax
 8055959:	85 c0                	test   %eax,%eax
 805595b:	0f 84 05 00 00 00    	je     8055966 <preprocess+0xdb6>
 8055961:	e9 17 00 00 00       	jmpq   805597d <preprocess+0xdcd>
 8055966:	b8 00 00 00 00       	mov    $0x0,%eax
 805596b:	e8 4a d5 ff ff       	callq  8052eba <preprocess_skip>
 8055970:	b8 00 00 00 00       	mov    $0x0,%eax
 8055975:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8055978:	e9 75 f2 ff ff       	jmpq   8054bf2 <preprocess+0x42>
 805597d:	e9 ff 04 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055982:	e9 0c 00 00 00       	jmpq   8055993 <preprocess+0xde3>
 8055987:	81 f8 3f 01 00 00    	cmp    $0x13f,%eax
 805598d:	0f 85 70 01 00 00    	jne    8055b03 <preprocess+0xf53>
 8055993:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055997:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805599e:	00 00 00 
 80559a1:	48 01 c8             	add    %rcx,%rax
 80559a4:	48 8b 0d f5 84 03 00 	mov    0x384f5(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80559ab:	48 8b 09             	mov    (%rcx),%rcx
 80559ae:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 80559b5:	00 00 00 
 80559b8:	48 01 d1             	add    %rdx,%rcx
 80559bb:	48 8b 10             	mov    (%rax),%rdx
 80559be:	48 8b 01             	mov    (%rcx),%rax
 80559c1:	48 89 d1             	mov    %rdx,%rcx
 80559c4:	48 89 c2             	mov    %rax,%rdx
 80559c7:	48 39 d1             	cmp    %rdx,%rcx
 80559ca:	0f 87 14 00 00 00    	ja     80559e4 <preprocess+0xe34>
 80559d0:	48 8d 05 7a 5b 03 00 	lea    0x35b7a(%rip),%rax        # 808b551 <L.140>
 80559d7:	48 89 c7             	mov    %rax,%rdi
 80559da:	b8 00 00 00 00       	mov    $0x0,%eax
 80559df:	e8 e3 7c ff ff       	callq  804d6c7 <tcc_error>
 80559e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80559e8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80559ef:	00 00 00 
 80559f2:	48 01 c8             	add    %rcx,%rax
 80559f5:	48 8b 08             	mov    (%rax),%rcx
 80559f8:	48 89 ca             	mov    %rcx,%rdx
 80559fb:	48 89 95 80 f7 ff ff 	mov    %rdx,-0x880(%rbp)
 8055a02:	48 ba fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rdx
 8055a09:	ff ff ff 
 8055a0c:	48 01 d1             	add    %rdx,%rcx
 8055a0f:	48 89 08             	mov    %rcx,(%rax)
 8055a12:	48 8b 05 87 84 03 00 	mov    0x38487(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055a19:	48 8b 00             	mov    (%rax),%rax
 8055a1c:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8055a23:	00 00 00 
 8055a26:	48 01 c8             	add    %rcx,%rax
 8055a29:	8b 08                	mov    (%rax),%ecx
 8055a2b:	85 c9                	test   %ecx,%ecx
 8055a2d:	0f 84 c6 00 00 00    	je     8055af9 <preprocess+0xf49>
 8055a33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055a37:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8055a3e:	00 00 00 
 8055a41:	48 01 c8             	add    %rcx,%rax
 8055a44:	48 8b 0d 55 84 03 00 	mov    0x38455(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055a4b:	48 8b 09             	mov    (%rcx),%rcx
 8055a4e:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 8055a55:	00 00 00 
 8055a58:	48 01 d1             	add    %rdx,%rcx
 8055a5b:	48 8b 10             	mov    (%rax),%rdx
 8055a5e:	48 8b 01             	mov    (%rcx),%rax
 8055a61:	48 89 d1             	mov    %rdx,%rcx
 8055a64:	48 89 c2             	mov    %rax,%rdx
 8055a67:	48 39 d1             	cmp    %rdx,%rcx
 8055a6a:	0f 85 89 00 00 00    	jne    8055af9 <preprocess+0xf49>
 8055a70:	48 8b 05 29 84 03 00 	mov    0x38429(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055a77:	48 8b 00             	mov    (%rax),%rax
 8055a7a:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8055a81:	00 00 00 
 8055a84:	48 01 c8             	add    %rcx,%rax
 8055a87:	48 8b 0d 12 84 03 00 	mov    0x38412(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055a8e:	48 8b 09             	mov    (%rcx),%rcx
 8055a91:	48 ba 24 00 00 00 00 	movabs $0x24,%rdx
 8055a98:	00 00 00 
 8055a9b:	48 01 d1             	add    %rdx,%rcx
 8055a9e:	8b 11                	mov    (%rcx),%edx
 8055aa0:	89 10                	mov    %edx,(%rax)
 8055aa2:	48 8b 05 f7 83 03 00 	mov    0x383f7(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055aa9:	48 8b 00             	mov    (%rax),%rax
 8055aac:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8055ab3:	00 00 00 
 8055ab6:	48 01 c8             	add    %rcx,%rax
 8055ab9:	b9 00 00 00 00       	mov    $0x0,%ecx
 8055abe:	89 08                	mov    %ecx,(%rax)
 8055ac0:	48 8b 05 61 84 03 00 	mov    0x38461(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055ac7:	8b 00                	mov    (%rax),%eax
 8055ac9:	83 f8 0a             	cmp    $0xa,%eax
 8055acc:	0f 84 0c 00 00 00    	je     8055ade <preprocess+0xf2e>
 8055ad2:	b8 00 00 00 00       	mov    $0x0,%eax
 8055ad7:	e8 93 19 00 00       	callq  805746f <next_nomacro>
 8055adc:	eb e2                	jmp    8055ac0 <preprocess+0xf10>
 8055ade:	48 8b 05 2b 84 03 00 	mov    0x3842b(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8055ae5:	8b 00                	mov    (%rax),%eax
 8055ae7:	83 c8 04             	or     $0x4,%eax
 8055aea:	4c 8b 1d 1f 84 03 00 	mov    0x3841f(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8055af1:	41 89 03             	mov    %eax,(%r11)
 8055af4:	e9 a6 03 00 00       	jmpq   8055e9f <preprocess+0x12ef>
 8055af9:	e9 83 03 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055afe:	e9 0c 00 00 00       	jmpq   8055b0f <preprocess+0xf5f>
 8055b03:	81 f8 44 01 00 00    	cmp    $0x144,%eax
 8055b09:	0f 85 f3 00 00 00    	jne    8055c02 <preprocess+0x1052>
 8055b0f:	b8 00 00 00 00       	mov    $0x0,%eax
 8055b14:	e8 b1 2b 00 00       	callq  80586ca <next>
 8055b19:	48 8b 05 08 84 03 00 	mov    0x38408(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055b20:	8b 00                	mov    (%rax),%eax
 8055b22:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 8055b28:	0f 84 14 00 00 00    	je     8055b42 <preprocess+0xf92>
 8055b2e:	48 8d 05 38 5a 03 00 	lea    0x35a38(%rip),%rax        # 808b56d <L.141>
 8055b35:	48 89 c7             	mov    %rax,%rdi
 8055b38:	b8 00 00 00 00       	mov    $0x0,%eax
 8055b3d:	e8 85 7b ff ff       	callq  804d6c7 <tcc_error>
 8055b42:	48 8b 05 57 83 03 00 	mov    0x38357(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055b49:	48 8b 00             	mov    (%rax),%rax
 8055b4c:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8055b53:	00 00 00 
 8055b56:	48 01 c8             	add    %rcx,%rax
 8055b59:	48 8b 0d 48 84 03 00 	mov    0x38448(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8055b60:	8b 09                	mov    (%rcx),%ecx
 8055b62:	83 e9 01             	sub    $0x1,%ecx
 8055b65:	89 08                	mov    %ecx,(%rax)
 8055b67:	b8 00 00 00 00       	mov    $0x0,%eax
 8055b6c:	e8 59 2b 00 00       	callq  80586ca <next>
 8055b71:	48 8b 05 b0 83 03 00 	mov    0x383b0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055b78:	8b 00                	mov    (%rax),%eax
 8055b7a:	83 f8 0a             	cmp    $0xa,%eax
 8055b7d:	0f 84 75 00 00 00    	je     8055bf8 <preprocess+0x1048>
 8055b83:	48 8b 05 9e 83 03 00 	mov    0x3839e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055b8a:	8b 00                	mov    (%rax),%eax
 8055b8c:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8055b92:	0f 84 14 00 00 00    	je     8055bac <preprocess+0xffc>
 8055b98:	48 8d 05 d4 59 03 00 	lea    0x359d4(%rip),%rax        # 808b573 <L.142>
 8055b9f:	48 89 c7             	mov    %rax,%rdi
 8055ba2:	b8 00 00 00 00       	mov    $0x0,%eax
 8055ba7:	e8 1b 7b ff ff       	callq  804d6c7 <tcc_error>
 8055bac:	48 8b 05 ed 82 03 00 	mov    0x382ed(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055bb3:	48 8b 00             	mov    (%rax),%rax
 8055bb6:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 8055bbd:	00 00 00 
 8055bc0:	48 01 c8             	add    %rcx,%rax
 8055bc3:	48 8b 0d de 83 03 00 	mov    0x383de(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8055bca:	48 8b 09             	mov    (%rcx),%rcx
 8055bcd:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8055bd4:	00 00 00 
 8055bd7:	48 01 d1             	add    %rdx,%rcx
 8055bda:	48 8b 11             	mov    (%rcx),%rdx
 8055bdd:	49 89 d2             	mov    %rdx,%r10
 8055be0:	b9 00 04 00 00       	mov    $0x400,%ecx
 8055be5:	48 89 ce             	mov    %rcx,%rsi
 8055be8:	48 89 c7             	mov    %rax,%rdi
 8055beb:	4c 89 d2             	mov    %r10,%rdx
 8055bee:	b8 00 00 00 00       	mov    $0x0,%eax
 8055bf3:	e8 ab 60 ff ff       	callq  804bca3 <pstrcpy>
 8055bf8:	e9 84 02 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055bfd:	e9 0c 00 00 00       	jmpq   8055c0e <preprocess+0x105e>
 8055c02:	81 f8 42 01 00 00    	cmp    $0x142,%eax
 8055c08:	0f 85 05 00 00 00    	jne    8055c13 <preprocess+0x1063>
 8055c0e:	e9 0c 00 00 00       	jmpq   8055c1f <preprocess+0x106f>
 8055c13:	81 f8 43 01 00 00    	cmp    $0x143,%eax
 8055c19:	0f 85 6f 01 00 00    	jne    8055d8e <preprocess+0x11de>
 8055c1f:	48 8b 05 02 83 03 00 	mov    0x38302(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055c26:	8b 00                	mov    (%rax),%eax
 8055c28:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8055c2b:	48 8b 05 6e 82 03 00 	mov    0x3826e(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055c32:	48 8b 00             	mov    (%rax),%rax
 8055c35:	48 8b 08             	mov    (%rax),%rcx
 8055c38:	0f b6 01             	movzbl (%rcx),%eax
 8055c3b:	4c 8b 1d c6 82 03 00 	mov    0x382c6(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8055c42:	41 89 03             	mov    %eax,(%r11)
 8055c45:	b8 00 00 00 00       	mov    $0x0,%eax
 8055c4a:	e8 7b 5c 00 00       	callq  805b8ca <skip_spaces>
 8055c4f:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8055c56:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8055c5d:	48 8b 05 a4 82 03 00 	mov    0x382a4(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8055c64:	8b 00                	mov    (%rax),%eax
 8055c66:	83 f8 0a             	cmp    $0xa,%eax
 8055c69:	0f 84 b7 00 00 00    	je     8055d26 <preprocess+0x1176>
 8055c6f:	48 8b 05 92 82 03 00 	mov    0x38292(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8055c76:	8b 00                	mov    (%rax),%eax
 8055c78:	83 f8 ff             	cmp    $0xffffffff,%eax
 8055c7b:	0f 84 a5 00 00 00    	je     8055d26 <preprocess+0x1176>
 8055c81:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8055c88:	48 8d 8d e0 fb ff ff 	lea    -0x420(%rbp),%rcx
 8055c8f:	48 29 c8             	sub    %rcx,%rax
 8055c92:	48 89 c1             	mov    %rax,%rcx
 8055c95:	48 b8 ff 03 00 00 00 	movabs $0x3ff,%rax
 8055c9c:	00 00 00 
 8055c9f:	48 39 c1             	cmp    %rax,%rcx
 8055ca2:	0f 8d 2a 00 00 00    	jge    8055cd2 <preprocess+0x1122>
 8055ca8:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8055caf:	48 89 c1             	mov    %rax,%rcx
 8055cb2:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8055cb9:	00 00 00 
 8055cbc:	48 01 d0             	add    %rdx,%rax
 8055cbf:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8055cc6:	48 8b 05 3b 82 03 00 	mov    0x3823b(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8055ccd:	0f be 00             	movsbl (%rax),%eax
 8055cd0:	88 01                	mov    %al,(%rcx)
 8055cd2:	48 8b 05 2f 82 03 00 	mov    0x3822f(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8055cd9:	8b 00                	mov    (%rax),%eax
 8055cdb:	83 f8 5c             	cmp    $0x5c,%eax
 8055cde:	0f 85 33 00 00 00    	jne    8055d17 <preprocess+0x1167>
 8055ce4:	b8 00 00 00 00       	mov    $0x0,%eax
 8055ce9:	e8 7c c4 ff ff       	callq  805216a <handle_stray_noerror>
 8055cee:	83 f8 00             	cmp    $0x0,%eax
 8055cf1:	0f 85 1b 00 00 00    	jne    8055d12 <preprocess+0x1162>
 8055cf7:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8055cfe:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rcx
 8055d05:	ff ff ff 
 8055d08:	48 01 c8             	add    %rcx,%rax
 8055d0b:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
 8055d12:	e9 0a 00 00 00       	jmpq   8055d21 <preprocess+0x1171>
 8055d17:	b8 00 00 00 00       	mov    $0x0,%eax
 8055d1c:	e8 ec c3 ff ff       	callq  805210d <inp>
 8055d21:	e9 37 ff ff ff       	jmpq   8055c5d <preprocess+0x10ad>
 8055d26:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 8055d2d:	b9 00 00 00 00       	mov    $0x0,%ecx
 8055d32:	88 08                	mov    %cl,(%rax)
 8055d34:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8055d37:	81 f8 42 01 00 00    	cmp    $0x142,%eax
 8055d3d:	0f 85 23 00 00 00    	jne    8055d66 <preprocess+0x11b6>
 8055d43:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8055d4a:	48 89 c6             	mov    %rax,%rsi
 8055d4d:	48 8d 05 25 58 03 00 	lea    0x35825(%rip),%rax        # 808b579 <L.143>
 8055d54:	48 89 c7             	mov    %rax,%rdi
 8055d57:	b8 00 00 00 00       	mov    $0x0,%eax
 8055d5c:	e8 66 79 ff ff       	callq  804d6c7 <tcc_error>
 8055d61:	e9 1e 00 00 00       	jmpq   8055d84 <preprocess+0x11d4>
 8055d66:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8055d6d:	48 89 c6             	mov    %rax,%rsi
 8055d70:	48 8d 05 0c 58 03 00 	lea    0x3580c(%rip),%rax        # 808b583 <L.144>
 8055d77:	48 89 c7             	mov    %rax,%rdi
 8055d7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8055d7f:	e8 7b 7b ff ff       	callq  804d8ff <tcc_warning>
 8055d84:	e9 f8 00 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055d89:	e9 0c 00 00 00       	jmpq   8055d9a <preprocess+0x11ea>
 8055d8e:	81 f8 45 01 00 00    	cmp    $0x145,%eax
 8055d94:	0f 85 16 00 00 00    	jne    8055db0 <preprocess+0x1200>
 8055d9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055d9e:	48 89 c7             	mov    %rax,%rdi
 8055da1:	b8 00 00 00 00       	mov    $0x0,%eax
 8055da6:	e8 bb eb ff ff       	callq  8054966 <pragma_parse>
 8055dab:	e9 d1 00 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055db0:	48 8b 05 71 81 03 00 	mov    0x38171(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055db7:	8b 00                	mov    (%rax),%eax
 8055db9:	83 f8 0a             	cmp    $0xa,%eax
 8055dbc:	0f 84 2c 00 00 00    	je     8055dee <preprocess+0x123e>
 8055dc2:	48 8b 05 5f 81 03 00 	mov    0x3815f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055dc9:	8b 00                	mov    (%rax),%eax
 8055dcb:	83 f8 21             	cmp    $0x21,%eax
 8055dce:	0f 84 1a 00 00 00    	je     8055dee <preprocess+0x123e>
 8055dd4:	48 8b 05 4d 81 03 00 	mov    0x3814d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055ddb:	8b 00                	mov    (%rax),%eax
 8055ddd:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 8055de3:	0f 84 05 00 00 00    	je     8055dee <preprocess+0x123e>
 8055de9:	e9 05 00 00 00       	jmpq   8055df3 <preprocess+0x1243>
 8055dee:	e9 89 00 00 00       	jmpq   8055e7c <preprocess+0x12cc>
 8055df3:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8055df6:	83 e0 08             	and    $0x8,%eax
 8055df9:	85 c0                	test   %eax,%eax
 8055dfb:	0f 84 05 00 00 00    	je     8055e06 <preprocess+0x1256>
 8055e01:	e9 3c 00 00 00       	jmpq   8055e42 <preprocess+0x1292>
 8055e06:	48 8b 05 9b 81 03 00 	mov    0x3819b(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8055e0d:	48 89 c6             	mov    %rax,%rsi
 8055e10:	48 8b 05 11 81 03 00 	mov    0x38111(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055e17:	8b 00                	mov    (%rax),%eax
 8055e19:	48 89 c7             	mov    %rax,%rdi
 8055e1c:	b8 00 00 00 00       	mov    $0x0,%eax
 8055e21:	e8 8e ba ff ff       	callq  80518b4 <get_tok_str>
 8055e26:	48 89 c6             	mov    %rax,%rsi
 8055e29:	48 8d 05 5f 57 03 00 	lea    0x3575f(%rip),%rax        # 808b58f <L.145>
 8055e30:	48 89 c7             	mov    %rax,%rdi
 8055e33:	b8 00 00 00 00       	mov    $0x0,%eax
 8055e38:	e8 c2 7a ff ff       	callq  804d8ff <tcc_warning>
 8055e3d:	e9 3a 00 00 00       	jmpq   8055e7c <preprocess+0x12cc>
 8055e42:	48 8b 05 57 80 03 00 	mov    0x38057(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055e49:	48 8b 00             	mov    (%rax),%rax
 8055e4c:	48 8b 0d 4d 80 03 00 	mov    0x3804d(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8055e53:	48 8b 09             	mov    (%rcx),%rcx
 8055e56:	48 8b 11             	mov    (%rcx),%rdx
 8055e59:	48 89 d7             	mov    %rdx,%rdi
 8055e5c:	48 89 85 78 f7 ff ff 	mov    %rax,-0x888(%rbp)
 8055e63:	b8 00 00 00 00       	mov    $0x0,%eax
 8055e68:	e8 1c c5 ff ff       	callq  8052389 <parse_line_comment>
 8055e6d:	48 8b 8d 78 f7 ff ff 	mov    -0x888(%rbp),%rcx
 8055e74:	48 89 01             	mov    %rax,(%rcx)
 8055e77:	e9 23 00 00 00       	jmpq   8055e9f <preprocess+0x12ef>
 8055e7c:	e9 00 00 00 00       	jmpq   8055e81 <preprocess+0x12d1>
 8055e81:	48 8b 05 a0 80 03 00 	mov    0x380a0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8055e88:	8b 00                	mov    (%rax),%eax
 8055e8a:	83 f8 0a             	cmp    $0xa,%eax
 8055e8d:	0f 84 0c 00 00 00    	je     8055e9f <preprocess+0x12ef>
 8055e93:	b8 00 00 00 00       	mov    $0x0,%eax
 8055e98:	e8 d2 15 00 00       	callq  805746f <next_nomacro>
 8055e9d:	eb e2                	jmp    8055e81 <preprocess+0x12d1>
 8055e9f:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8055ea2:	4c 8b 1d 6f 80 03 00 	mov    0x3806f(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8055ea9:	41 89 03             	mov    %eax,(%r11)
 8055eac:	c9                   	leaveq 
 8055ead:	c3                   	retq   

0000000008055eae <parse_escape_string>:
 8055eae:	55                   	push   %rbp
 8055eaf:	48 89 e5             	mov    %rsp,%rbp
 8055eb2:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8055eb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8055ebd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8055ec1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8055ec5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8055ec9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8055ecd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055ed1:	0f b6 08             	movzbl (%rax),%ecx
 8055ed4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8055ed7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8055eda:	83 f8 00             	cmp    $0x0,%eax
 8055edd:	0f 85 05 00 00 00    	jne    8055ee8 <parse_escape_string+0x3a>
 8055ee3:	e9 58 04 00 00       	jmpq   8056340 <parse_escape_string+0x492>
 8055ee8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8055eeb:	83 f8 5c             	cmp    $0x5c,%eax
 8055eee:	0f 85 ec 03 00 00    	jne    80562e0 <parse_escape_string+0x432>
 8055ef4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055ef8:	48 89 c1             	mov    %rax,%rcx
 8055efb:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8055f02:	00 00 00 
 8055f05:	48 01 d0             	add    %rdx,%rax
 8055f08:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8055f0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055f10:	0f b6 08             	movzbl (%rax),%ecx
 8055f13:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8055f16:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8055f19:	e9 05 00 00 00       	jmpq   8055f23 <parse_escape_string+0x75>
 8055f1e:	e9 09 00 00 00       	jmpq   8055f2c <parse_escape_string+0x7e>
 8055f23:	83 f8 30             	cmp    $0x30,%eax
 8055f26:	0f 85 05 00 00 00    	jne    8055f31 <parse_escape_string+0x83>
 8055f2c:	e9 09 00 00 00       	jmpq   8055f3a <parse_escape_string+0x8c>
 8055f31:	83 f8 31             	cmp    $0x31,%eax
 8055f34:	0f 85 05 00 00 00    	jne    8055f3f <parse_escape_string+0x91>
 8055f3a:	e9 09 00 00 00       	jmpq   8055f48 <parse_escape_string+0x9a>
 8055f3f:	83 f8 32             	cmp    $0x32,%eax
 8055f42:	0f 85 05 00 00 00    	jne    8055f4d <parse_escape_string+0x9f>
 8055f48:	e9 09 00 00 00       	jmpq   8055f56 <parse_escape_string+0xa8>
 8055f4d:	83 f8 33             	cmp    $0x33,%eax
 8055f50:	0f 85 05 00 00 00    	jne    8055f5b <parse_escape_string+0xad>
 8055f56:	e9 09 00 00 00       	jmpq   8055f64 <parse_escape_string+0xb6>
 8055f5b:	83 f8 34             	cmp    $0x34,%eax
 8055f5e:	0f 85 05 00 00 00    	jne    8055f69 <parse_escape_string+0xbb>
 8055f64:	e9 09 00 00 00       	jmpq   8055f72 <parse_escape_string+0xc4>
 8055f69:	83 f8 35             	cmp    $0x35,%eax
 8055f6c:	0f 85 05 00 00 00    	jne    8055f77 <parse_escape_string+0xc9>
 8055f72:	e9 09 00 00 00       	jmpq   8055f80 <parse_escape_string+0xd2>
 8055f77:	83 f8 36             	cmp    $0x36,%eax
 8055f7a:	0f 85 05 00 00 00    	jne    8055f85 <parse_escape_string+0xd7>
 8055f80:	e9 09 00 00 00       	jmpq   8055f8e <parse_escape_string+0xe0>
 8055f85:	83 f8 37             	cmp    $0x37,%eax
 8055f88:	0f 85 c9 00 00 00    	jne    8056057 <parse_escape_string+0x1a9>
 8055f8e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8055f91:	83 e8 30             	sub    $0x30,%eax
 8055f94:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8055f97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055f9b:	48 89 c1             	mov    %rax,%rcx
 8055f9e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8055fa5:	00 00 00 
 8055fa8:	48 01 d0             	add    %rdx,%rax
 8055fab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8055faf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055fb3:	0f b6 08             	movzbl (%rax),%ecx
 8055fb6:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8055fb9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8055fbc:	48 89 c7             	mov    %rax,%rdi
 8055fbf:	b8 00 00 00 00       	mov    $0x0,%eax
 8055fc4:	e8 7c 59 00 00       	callq  805b945 <isoct>
 8055fc9:	85 c0                	test   %eax,%eax
 8055fcb:	0f 84 76 00 00 00    	je     8056047 <parse_escape_string+0x199>
 8055fd1:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8055fd4:	c1 e0 03             	shl    $0x3,%eax
 8055fd7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 8055fda:	48 01 c8             	add    %rcx,%rax
 8055fdd:	83 e8 30             	sub    $0x30,%eax
 8055fe0:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8055fe3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055fe7:	48 89 c1             	mov    %rax,%rcx
 8055fea:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8055ff1:	00 00 00 
 8055ff4:	48 01 d0             	add    %rdx,%rax
 8055ff7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8055ffb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8055fff:	0f b6 08             	movzbl (%rax),%ecx
 8056002:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8056005:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8056008:	48 89 c7             	mov    %rax,%rdi
 805600b:	b8 00 00 00 00       	mov    $0x0,%eax
 8056010:	e8 30 59 00 00       	callq  805b945 <isoct>
 8056015:	85 c0                	test   %eax,%eax
 8056017:	0f 84 2a 00 00 00    	je     8056047 <parse_escape_string+0x199>
 805601d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8056020:	c1 e0 03             	shl    $0x3,%eax
 8056023:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 8056026:	48 01 c8             	add    %rcx,%rax
 8056029:	83 e8 30             	sub    $0x30,%eax
 805602c:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805602f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8056033:	48 89 c1             	mov    %rax,%rcx
 8056036:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805603d:	00 00 00 
 8056040:	48 01 d0             	add    %rdx,%rax
 8056043:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8056047:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805604a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805604d:	e9 a6 02 00 00       	jmpq   80562f8 <parse_escape_string+0x44a>
 8056052:	e9 09 00 00 00       	jmpq   8056060 <parse_escape_string+0x1b2>
 8056057:	83 f8 78             	cmp    $0x78,%eax
 805605a:	0f 85 05 00 00 00    	jne    8056065 <parse_escape_string+0x1b7>
 8056060:	e9 09 00 00 00       	jmpq   805606e <parse_escape_string+0x1c0>
 8056065:	83 f8 75             	cmp    $0x75,%eax
 8056068:	0f 85 05 00 00 00    	jne    8056073 <parse_escape_string+0x1c5>
 805606e:	e9 09 00 00 00       	jmpq   805607c <parse_escape_string+0x1ce>
 8056073:	83 f8 55             	cmp    $0x55,%eax
 8056076:	0f 85 e3 00 00 00    	jne    805615f <parse_escape_string+0x2b1>
 805607c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8056080:	48 89 c1             	mov    %rax,%rcx
 8056083:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805608a:	00 00 00 
 805608d:	48 01 d0             	add    %rdx,%rax
 8056090:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8056094:	b8 00 00 00 00       	mov    $0x0,%eax
 8056099:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805609c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80560a0:	0f b6 08             	movzbl (%rax),%ecx
 80560a3:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 80560a6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560a9:	83 f8 61             	cmp    $0x61,%eax
 80560ac:	0f 8c 1d 00 00 00    	jl     80560cf <parse_escape_string+0x221>
 80560b2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560b5:	83 f8 66             	cmp    $0x66,%eax
 80560b8:	0f 8f 11 00 00 00    	jg     80560cf <parse_escape_string+0x221>
 80560be:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560c1:	83 e8 61             	sub    $0x61,%eax
 80560c4:	83 c0 0a             	add    $0xa,%eax
 80560c7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80560ca:	e9 54 00 00 00       	jmpq   8056123 <parse_escape_string+0x275>
 80560cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560d2:	83 f8 41             	cmp    $0x41,%eax
 80560d5:	0f 8c 1d 00 00 00    	jl     80560f8 <parse_escape_string+0x24a>
 80560db:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560de:	83 f8 46             	cmp    $0x46,%eax
 80560e1:	0f 8f 11 00 00 00    	jg     80560f8 <parse_escape_string+0x24a>
 80560e7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560ea:	83 e8 41             	sub    $0x41,%eax
 80560ed:	83 c0 0a             	add    $0xa,%eax
 80560f0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80560f3:	e9 2b 00 00 00       	jmpq   8056123 <parse_escape_string+0x275>
 80560f8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80560fb:	48 89 c7             	mov    %rax,%rdi
 80560fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8056103:	e8 77 58 00 00       	callq  805b97f <isnum>
 8056108:	85 c0                	test   %eax,%eax
 805610a:	0f 84 0e 00 00 00    	je     805611e <parse_escape_string+0x270>
 8056110:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8056113:	83 e8 30             	sub    $0x30,%eax
 8056116:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8056119:	e9 05 00 00 00       	jmpq   8056123 <parse_escape_string+0x275>
 805611e:	e9 2c 00 00 00       	jmpq   805614f <parse_escape_string+0x2a1>
 8056123:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8056126:	c1 e0 04             	shl    $0x4,%eax
 8056129:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 805612c:	48 01 c8             	add    %rcx,%rax
 805612f:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8056132:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8056136:	48 89 c1             	mov    %rax,%rcx
 8056139:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056140:	00 00 00 
 8056143:	48 01 d0             	add    %rdx,%rax
 8056146:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805614a:	e9 4d ff ff ff       	jmpq   805609c <parse_escape_string+0x1ee>
 805614f:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8056152:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8056155:	e9 9e 01 00 00       	jmpq   80562f8 <parse_escape_string+0x44a>
 805615a:	e9 09 00 00 00       	jmpq   8056168 <parse_escape_string+0x2ba>
 805615f:	83 f8 61             	cmp    $0x61,%eax
 8056162:	0f 85 12 00 00 00    	jne    805617a <parse_escape_string+0x2cc>
 8056168:	b8 07 00 00 00       	mov    $0x7,%eax
 805616d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8056170:	e9 6b 01 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 8056175:	e9 09 00 00 00       	jmpq   8056183 <parse_escape_string+0x2d5>
 805617a:	83 f8 62             	cmp    $0x62,%eax
 805617d:	0f 85 12 00 00 00    	jne    8056195 <parse_escape_string+0x2e7>
 8056183:	b8 08 00 00 00       	mov    $0x8,%eax
 8056188:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805618b:	e9 50 01 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 8056190:	e9 09 00 00 00       	jmpq   805619e <parse_escape_string+0x2f0>
 8056195:	83 f8 66             	cmp    $0x66,%eax
 8056198:	0f 85 12 00 00 00    	jne    80561b0 <parse_escape_string+0x302>
 805619e:	b8 0c 00 00 00       	mov    $0xc,%eax
 80561a3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80561a6:	e9 35 01 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 80561ab:	e9 09 00 00 00       	jmpq   80561b9 <parse_escape_string+0x30b>
 80561b0:	83 f8 6e             	cmp    $0x6e,%eax
 80561b3:	0f 85 12 00 00 00    	jne    80561cb <parse_escape_string+0x31d>
 80561b9:	b8 0a 00 00 00       	mov    $0xa,%eax
 80561be:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80561c1:	e9 1a 01 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 80561c6:	e9 09 00 00 00       	jmpq   80561d4 <parse_escape_string+0x326>
 80561cb:	83 f8 72             	cmp    $0x72,%eax
 80561ce:	0f 85 12 00 00 00    	jne    80561e6 <parse_escape_string+0x338>
 80561d4:	b8 0d 00 00 00       	mov    $0xd,%eax
 80561d9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80561dc:	e9 ff 00 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 80561e1:	e9 09 00 00 00       	jmpq   80561ef <parse_escape_string+0x341>
 80561e6:	83 f8 74             	cmp    $0x74,%eax
 80561e9:	0f 85 12 00 00 00    	jne    8056201 <parse_escape_string+0x353>
 80561ef:	b8 09 00 00 00       	mov    $0x9,%eax
 80561f4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80561f7:	e9 e4 00 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 80561fc:	e9 09 00 00 00       	jmpq   805620a <parse_escape_string+0x35c>
 8056201:	83 f8 76             	cmp    $0x76,%eax
 8056204:	0f 85 12 00 00 00    	jne    805621c <parse_escape_string+0x36e>
 805620a:	b8 0b 00 00 00       	mov    $0xb,%eax
 805620f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8056212:	e9 c9 00 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 8056217:	e9 09 00 00 00       	jmpq   8056225 <parse_escape_string+0x377>
 805621c:	83 f8 65             	cmp    $0x65,%eax
 805621f:	0f 85 2d 00 00 00    	jne    8056252 <parse_escape_string+0x3a4>
 8056225:	48 8b 05 94 7d 03 00 	mov    0x37d94(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 805622c:	8b 00                	mov    (%rax),%eax
 805622e:	85 c0                	test   %eax,%eax
 8056230:	0f 84 05 00 00 00    	je     805623b <parse_escape_string+0x38d>
 8056236:	e9 05 00 00 00       	jmpq   8056240 <parse_escape_string+0x392>
 805623b:	e9 4a 00 00 00       	jmpq   805628a <parse_escape_string+0x3dc>
 8056240:	b8 1b 00 00 00       	mov    $0x1b,%eax
 8056245:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8056248:	e9 93 00 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 805624d:	e9 09 00 00 00       	jmpq   805625b <parse_escape_string+0x3ad>
 8056252:	83 f8 27             	cmp    $0x27,%eax
 8056255:	0f 85 05 00 00 00    	jne    8056260 <parse_escape_string+0x3b2>
 805625b:	e9 09 00 00 00       	jmpq   8056269 <parse_escape_string+0x3bb>
 8056260:	83 f8 22             	cmp    $0x22,%eax
 8056263:	0f 85 05 00 00 00    	jne    805626e <parse_escape_string+0x3c0>
 8056269:	e9 09 00 00 00       	jmpq   8056277 <parse_escape_string+0x3c9>
 805626e:	83 f8 5c             	cmp    $0x5c,%eax
 8056271:	0f 85 05 00 00 00    	jne    805627c <parse_escape_string+0x3ce>
 8056277:	e9 09 00 00 00       	jmpq   8056285 <parse_escape_string+0x3d7>
 805627c:	83 f8 3f             	cmp    $0x3f,%eax
 805627f:	0f 85 05 00 00 00    	jne    805628a <parse_escape_string+0x3dc>
 8056285:	e9 56 00 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 805628a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805628d:	83 f8 21             	cmp    $0x21,%eax
 8056290:	0f 8c 2b 00 00 00    	jl     80562c1 <parse_escape_string+0x413>
 8056296:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8056299:	83 f8 7e             	cmp    $0x7e,%eax
 805629c:	0f 8f 1f 00 00 00    	jg     80562c1 <parse_escape_string+0x413>
 80562a2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80562a5:	48 89 c6             	mov    %rax,%rsi
 80562a8:	48 8d 05 0d 53 03 00 	lea    0x3530d(%rip),%rax        # 808b5bc <L.146>
 80562af:	48 89 c7             	mov    %rax,%rdi
 80562b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80562b7:	e8 43 76 ff ff       	callq  804d8ff <tcc_warning>
 80562bc:	e9 1a 00 00 00       	jmpq   80562db <parse_escape_string+0x42d>
 80562c1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80562c4:	48 89 c6             	mov    %rax,%rsi
 80562c7:	48 8d 05 0d 53 03 00 	lea    0x3530d(%rip),%rax        # 808b5db <L.147>
 80562ce:	48 89 c7             	mov    %rax,%rdi
 80562d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80562d6:	e8 24 76 ff ff       	callq  804d8ff <tcc_warning>
 80562db:	e9 00 00 00 00       	jmpq   80562e0 <parse_escape_string+0x432>
 80562e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80562e4:	48 89 c1             	mov    %rax,%rcx
 80562e7:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80562ee:	00 00 00 
 80562f1:	48 01 d0             	add    %rdx,%rax
 80562f4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80562f8:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80562fb:	85 c0                	test   %eax,%eax
 80562fd:	0f 84 05 00 00 00    	je     8056308 <parse_escape_string+0x45a>
 8056303:	e9 1c 00 00 00       	jmpq   8056324 <parse_escape_string+0x476>
 8056308:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805630b:	48 89 c6             	mov    %rax,%rsi
 805630e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056312:	48 89 c7             	mov    %rax,%rdi
 8056315:	b8 00 00 00 00       	mov    $0x0,%eax
 805631a:	e8 2e af ff ff       	callq  805124d <cstr_ccat>
 805631f:	e9 17 00 00 00       	jmpq   805633b <parse_escape_string+0x48d>
 8056324:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8056327:	48 89 c6             	mov    %rax,%rsi
 805632a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805632e:	48 89 c7             	mov    %rax,%rdi
 8056331:	b8 00 00 00 00       	mov    $0x0,%eax
 8056336:	e8 fb af ff ff       	callq  8051336 <cstr_wccat>
 805633b:	e9 8d fb ff ff       	jmpq   8055ecd <parse_escape_string+0x1f>
 8056340:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8056343:	85 c0                	test   %eax,%eax
 8056345:	0f 84 05 00 00 00    	je     8056350 <parse_escape_string+0x4a2>
 805634b:	e9 1e 00 00 00       	jmpq   805636e <parse_escape_string+0x4c0>
 8056350:	b8 00 00 00 00       	mov    $0x0,%eax
 8056355:	48 89 c6             	mov    %rax,%rsi
 8056358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805635c:	48 89 c7             	mov    %rax,%rdi
 805635f:	b8 00 00 00 00       	mov    $0x0,%eax
 8056364:	e8 e4 ae ff ff       	callq  805124d <cstr_ccat>
 8056369:	e9 19 00 00 00       	jmpq   8056387 <parse_escape_string+0x4d9>
 805636e:	b8 00 00 00 00       	mov    $0x0,%eax
 8056373:	48 89 c6             	mov    %rax,%rsi
 8056376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805637a:	48 89 c7             	mov    %rax,%rdi
 805637d:	b8 00 00 00 00       	mov    $0x0,%eax
 8056382:	e8 af af ff ff       	callq  8051336 <cstr_wccat>
 8056387:	c9                   	leaveq 
 8056388:	c3                   	retq   

0000000008056389 <bn_lshift>:
 8056389:	55                   	push   %rbp
 805638a:	48 89 e5             	mov    %rsp,%rbp
 805638d:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8056394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8056398:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805639c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80563a0:	b8 00 00 00 00       	mov    $0x0,%eax
 80563a5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80563a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80563ab:	83 f8 02             	cmp    $0x2,%eax
 80563ae:	0f 8d 7c 00 00 00    	jge    8056430 <bn_lshift+0xa7>
 80563b4:	e9 0e 00 00 00       	jmpq   80563c7 <bn_lshift+0x3e>
 80563b9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80563bc:	48 89 c1             	mov    %rax,%rcx
 80563bf:	83 c0 01             	add    $0x1,%eax
 80563c2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80563c5:	eb e1                	jmp    80563a8 <bn_lshift+0x1f>
 80563c7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80563ca:	48 63 c0             	movslq %eax,%rax
 80563cd:	48 89 c1             	mov    %rax,%rcx
 80563d0:	48 c1 e1 02          	shl    $0x2,%rcx
 80563d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80563d8:	48 89 ca             	mov    %rcx,%rdx
 80563db:	48 01 d0             	add    %rdx,%rax
 80563de:	8b 08                	mov    (%rax),%ecx
 80563e0:	89 4d e0             	mov    %ecx,-0x20(%rbp)
 80563e3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80563e6:	48 63 c0             	movslq %eax,%rax
 80563e9:	48 89 c1             	mov    %rax,%rcx
 80563ec:	48 c1 e1 02          	shl    $0x2,%rcx
 80563f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80563f4:	48 89 ca             	mov    %rcx,%rdx
 80563f7:	48 01 d0             	add    %rdx,%rax
 80563fa:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80563fd:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8056401:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8056404:	8b 55 d8             	mov    -0x28(%rbp),%edx
 8056407:	d3 e2                	shl    %cl,%edx
 8056409:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805640c:	48 09 ca             	or     %rcx,%rdx
 805640f:	89 10                	mov    %edx,(%rax)
 8056411:	b8 20 00 00 00       	mov    $0x20,%eax
 8056416:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8056419:	48 29 c8             	sub    %rcx,%rax
 805641c:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 805641f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8056423:	48 89 c1             	mov    %rax,%rcx
 8056426:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8056429:	d3 e8                	shr    %cl,%eax
 805642b:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805642e:	eb 89                	jmp    80563b9 <bn_lshift+0x30>
 8056430:	c9                   	leaveq 
 8056431:	c3                   	retq   

0000000008056432 <bn_zero>:
 8056432:	55                   	push   %rbp
 8056433:	48 89 e5             	mov    %rsp,%rbp
 8056436:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805643d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8056441:	b8 00 00 00 00       	mov    $0x0,%eax
 8056446:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8056449:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805644c:	83 f8 02             	cmp    $0x2,%eax
 805644f:	0f 8d 33 00 00 00    	jge    8056488 <bn_zero+0x56>
 8056455:	e9 0e 00 00 00       	jmpq   8056468 <bn_zero+0x36>
 805645a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805645d:	48 89 c1             	mov    %rax,%rcx
 8056460:	83 c0 01             	add    $0x1,%eax
 8056463:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8056466:	eb e1                	jmp    8056449 <bn_zero+0x17>
 8056468:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805646b:	48 63 c0             	movslq %eax,%rax
 805646e:	48 89 c1             	mov    %rax,%rcx
 8056471:	48 c1 e1 02          	shl    $0x2,%rcx
 8056475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056479:	48 89 ca             	mov    %rcx,%rdx
 805647c:	48 01 d0             	add    %rdx,%rax
 805647f:	b9 00 00 00 00       	mov    $0x0,%ecx
 8056484:	89 08                	mov    %ecx,(%rax)
 8056486:	eb d2                	jmp    805645a <bn_zero+0x28>
 8056488:	c9                   	leaveq 
 8056489:	c3                   	retq   

000000000805648a <parse_number>:
 805648a:	55                   	push   %rbp
 805648b:	48 89 e5             	mov    %rsp,%rbp
 805648e:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 8056495:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8056499:	48 8d 05 e0 7d 04 00 	lea    0x47de0(%rip),%rax        # 809e280 <token_buf>
 80564a0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80564a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80564a8:	48 89 c1             	mov    %rax,%rcx
 80564ab:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80564b2:	00 00 00 
 80564b5:	48 01 d0             	add    %rdx,%rax
 80564b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80564bc:	0f be 01             	movsbl (%rcx),%eax
 80564bf:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80564c2:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80564c5:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80564c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80564cc:	48 89 c1             	mov    %rax,%rcx
 80564cf:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80564d6:	00 00 00 
 80564d9:	48 01 d0             	add    %rdx,%rax
 80564dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80564e0:	0f be 01             	movsbl (%rcx),%eax
 80564e3:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80564e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80564ea:	48 89 c1             	mov    %rax,%rcx
 80564ed:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80564f4:	00 00 00 
 80564f7:	48 01 d0             	add    %rdx,%rax
 80564fa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80564fe:	0f be 45 f0          	movsbl -0x10(%rbp),%eax
 8056502:	88 01                	mov    %al,(%rcx)
 8056504:	b8 0a 00 00 00       	mov    $0xa,%eax
 8056509:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805650c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805650f:	83 f8 2e             	cmp    $0x2e,%eax
 8056512:	0f 85 0a 00 00 00    	jne    8056522 <parse_number+0x98>
 8056518:	e9 6c 07 00 00       	jmpq   8056c89 <parse_number+0x7ff>
 805651d:	e9 d8 00 00 00       	jmpq   80565fa <parse_number+0x170>
 8056522:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056525:	83 f8 30             	cmp    $0x30,%eax
 8056528:	0f 85 cc 00 00 00    	jne    80565fa <parse_number+0x170>
 805652e:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056531:	83 f8 78             	cmp    $0x78,%eax
 8056534:	0f 84 11 00 00 00    	je     805654b <parse_number+0xc1>
 805653a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805653d:	83 f8 58             	cmp    $0x58,%eax
 8056540:	0f 84 05 00 00 00    	je     805654b <parse_number+0xc1>
 8056546:	e9 43 00 00 00       	jmpq   805658e <parse_number+0x104>
 805654b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805654f:	48 89 c1             	mov    %rax,%rcx
 8056552:	48 ba ff ff ff ff ff 	movabs $0xffffffffffffffff,%rdx
 8056559:	ff ff ff 
 805655c:	48 01 d0             	add    %rdx,%rax
 805655f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056567:	48 89 c1             	mov    %rax,%rcx
 805656a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056571:	00 00 00 
 8056574:	48 01 d0             	add    %rdx,%rax
 8056577:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805657b:	0f be 01             	movsbl (%rcx),%eax
 805657e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056581:	b8 10 00 00 00       	mov    $0x10,%eax
 8056586:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8056589:	e9 6c 00 00 00       	jmpq   80565fa <parse_number+0x170>
 805658e:	48 8b 05 33 7a 03 00 	mov    0x37a33(%rip),%rax        # 808dfc8 <_GLOBAL_OFFSET_TABLE_+0x348>
 8056595:	8b 00                	mov    (%rax),%eax
 8056597:	85 c0                	test   %eax,%eax
 8056599:	0f 84 5b 00 00 00    	je     80565fa <parse_number+0x170>
 805659f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80565a2:	83 f8 62             	cmp    $0x62,%eax
 80565a5:	0f 84 11 00 00 00    	je     80565bc <parse_number+0x132>
 80565ab:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80565ae:	83 f8 42             	cmp    $0x42,%eax
 80565b1:	0f 84 05 00 00 00    	je     80565bc <parse_number+0x132>
 80565b7:	e9 3e 00 00 00       	jmpq   80565fa <parse_number+0x170>
 80565bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80565c0:	48 89 c1             	mov    %rax,%rcx
 80565c3:	48 ba ff ff ff ff ff 	movabs $0xffffffffffffffff,%rdx
 80565ca:	ff ff ff 
 80565cd:	48 01 d0             	add    %rdx,%rax
 80565d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80565d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80565d8:	48 89 c1             	mov    %rax,%rcx
 80565db:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80565e2:	00 00 00 
 80565e5:	48 01 d0             	add    %rdx,%rax
 80565e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80565ec:	0f be 01             	movsbl (%rcx),%eax
 80565ef:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80565f2:	b8 02 00 00 00       	mov    $0x2,%eax
 80565f7:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80565fa:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80565fd:	83 f8 61             	cmp    $0x61,%eax
 8056600:	0f 8c 1d 00 00 00    	jl     8056623 <parse_number+0x199>
 8056606:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056609:	83 f8 66             	cmp    $0x66,%eax
 805660c:	0f 8f 11 00 00 00    	jg     8056623 <parse_number+0x199>
 8056612:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056615:	83 e8 61             	sub    $0x61,%eax
 8056618:	83 c0 0a             	add    $0xa,%eax
 805661b:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805661e:	e9 54 00 00 00       	jmpq   8056677 <parse_number+0x1ed>
 8056623:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056626:	83 f8 41             	cmp    $0x41,%eax
 8056629:	0f 8c 1d 00 00 00    	jl     805664c <parse_number+0x1c2>
 805662f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056632:	83 f8 46             	cmp    $0x46,%eax
 8056635:	0f 8f 11 00 00 00    	jg     805664c <parse_number+0x1c2>
 805663b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805663e:	83 e8 41             	sub    $0x41,%eax
 8056641:	83 c0 0a             	add    $0xa,%eax
 8056644:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056647:	e9 2b 00 00 00       	jmpq   8056677 <parse_number+0x1ed>
 805664c:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805664f:	48 89 c7             	mov    %rax,%rdi
 8056652:	b8 00 00 00 00       	mov    $0x0,%eax
 8056657:	e8 23 53 00 00       	callq  805b97f <isnum>
 805665c:	85 c0                	test   %eax,%eax
 805665e:	0f 84 0e 00 00 00    	je     8056672 <parse_number+0x1e8>
 8056664:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056667:	83 e8 30             	sub    $0x30,%eax
 805666a:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805666d:	e9 05 00 00 00       	jmpq   8056677 <parse_number+0x1ed>
 8056672:	e9 82 00 00 00       	jmpq   80566f9 <parse_number+0x26f>
 8056677:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805667a:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 805667d:	39 c8                	cmp    %ecx,%eax
 805667f:	0f 8c 05 00 00 00    	jl     805668a <parse_number+0x200>
 8056685:	e9 6f 00 00 00       	jmpq   80566f9 <parse_number+0x26f>
 805668a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805668e:	48 8d 0d eb 7f 04 00 	lea    0x47feb(%rip),%rcx        # 809e680 <token_buf+0x400>
 8056695:	48 89 c2             	mov    %rax,%rdx
 8056698:	48 89 c8             	mov    %rcx,%rax
 805669b:	48 39 c2             	cmp    %rax,%rdx
 805669e:	0f 82 14 00 00 00    	jb     80566b8 <parse_number+0x22e>
 80566a4:	48 8d 05 50 4f 03 00 	lea    0x34f50(%rip),%rax        # 808b5fb <L.148>
 80566ab:	48 89 c7             	mov    %rax,%rdi
 80566ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80566b3:	e8 0f 70 ff ff       	callq  804d6c7 <tcc_error>
 80566b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80566bc:	48 89 c1             	mov    %rax,%rcx
 80566bf:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80566c6:	00 00 00 
 80566c9:	48 01 d0             	add    %rdx,%rax
 80566cc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80566d0:	0f be 45 dc          	movsbl -0x24(%rbp),%eax
 80566d4:	88 01                	mov    %al,(%rcx)
 80566d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80566da:	48 89 c1             	mov    %rax,%rcx
 80566dd:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80566e4:	00 00 00 
 80566e7:	48 01 d0             	add    %rdx,%rax
 80566ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80566ee:	0f be 01             	movsbl (%rcx),%eax
 80566f1:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80566f4:	e9 01 ff ff ff       	jmpq   80565fa <parse_number+0x170>
 80566f9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80566fc:	83 f8 2e             	cmp    $0x2e,%eax
 80566ff:	0f 84 72 00 00 00    	je     8056777 <parse_number+0x2ed>
 8056705:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056708:	83 f8 65             	cmp    $0x65,%eax
 805670b:	0f 84 11 00 00 00    	je     8056722 <parse_number+0x298>
 8056711:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056714:	83 f8 45             	cmp    $0x45,%eax
 8056717:	0f 84 05 00 00 00    	je     8056722 <parse_number+0x298>
 805671d:	e9 11 00 00 00       	jmpq   8056733 <parse_number+0x2a9>
 8056722:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8056725:	83 f8 0a             	cmp    $0xa,%eax
 8056728:	0f 85 05 00 00 00    	jne    8056733 <parse_number+0x2a9>
 805672e:	e9 44 00 00 00       	jmpq   8056777 <parse_number+0x2ed>
 8056733:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056736:	83 f8 70             	cmp    $0x70,%eax
 8056739:	0f 84 11 00 00 00    	je     8056750 <parse_number+0x2c6>
 805673f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056742:	83 f8 50             	cmp    $0x50,%eax
 8056745:	0f 84 05 00 00 00    	je     8056750 <parse_number+0x2c6>
 805674b:	e9 22 00 00 00       	jmpq   8056772 <parse_number+0x2e8>
 8056750:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8056753:	83 f8 10             	cmp    $0x10,%eax
 8056756:	0f 84 11 00 00 00    	je     805676d <parse_number+0x2e3>
 805675c:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805675f:	83 f8 02             	cmp    $0x2,%eax
 8056762:	0f 84 05 00 00 00    	je     805676d <parse_number+0x2e3>
 8056768:	e9 05 00 00 00       	jmpq   8056772 <parse_number+0x2e8>
 805676d:	e9 05 00 00 00       	jmpq   8056777 <parse_number+0x2ed>
 8056772:	e9 56 08 00 00       	jmpq   8056fcd <parse_number+0xb43>
 8056777:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805677a:	83 f8 0a             	cmp    $0xa,%eax
 805677d:	0f 84 9f 04 00 00    	je     8056c22 <parse_number+0x798>
 8056783:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056787:	b9 00 00 00 00       	mov    $0x0,%ecx
 805678c:	88 08                	mov    %cl,(%rax)
 805678e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8056791:	83 f8 10             	cmp    $0x10,%eax
 8056794:	0f 85 0d 00 00 00    	jne    80567a7 <parse_number+0x31d>
 805679a:	b8 04 00 00 00       	mov    $0x4,%eax
 805679f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80567a2:	e9 08 00 00 00       	jmpq   80567af <parse_number+0x325>
 80567a7:	b8 02 00 00 00       	mov    $0x2,%eax
 80567ac:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80567af:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 80567b3:	48 89 c7             	mov    %rax,%rdi
 80567b6:	b8 00 00 00 00       	mov    $0x0,%eax
 80567bb:	e8 72 fc ff ff       	callq  8056432 <bn_zero>
 80567c0:	48 8d 05 b9 7a 04 00 	lea    0x47ab9(%rip),%rax        # 809e280 <token_buf>
 80567c7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80567cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80567cf:	48 89 c1             	mov    %rax,%rcx
 80567d2:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80567d9:	00 00 00 
 80567dc:	48 01 d0             	add    %rdx,%rax
 80567df:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80567e3:	0f be 01             	movsbl (%rcx),%eax
 80567e6:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80567e9:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80567ec:	83 f8 00             	cmp    $0x0,%eax
 80567ef:	0f 85 0a 00 00 00    	jne    80567ff <parse_number+0x375>
 80567f5:	e9 6d 00 00 00       	jmpq   8056867 <parse_number+0x3dd>
 80567fa:	e9 43 00 00 00       	jmpq   8056842 <parse_number+0x3b8>
 80567ff:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056802:	83 f8 61             	cmp    $0x61,%eax
 8056805:	0f 8c 11 00 00 00    	jl     805681c <parse_number+0x392>
 805680b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805680e:	83 e8 61             	sub    $0x61,%eax
 8056811:	83 c0 0a             	add    $0xa,%eax
 8056814:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056817:	e9 26 00 00 00       	jmpq   8056842 <parse_number+0x3b8>
 805681c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805681f:	83 f8 41             	cmp    $0x41,%eax
 8056822:	0f 8c 11 00 00 00    	jl     8056839 <parse_number+0x3af>
 8056828:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805682b:	83 e8 41             	sub    $0x41,%eax
 805682e:	83 c0 0a             	add    $0xa,%eax
 8056831:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056834:	e9 09 00 00 00       	jmpq   8056842 <parse_number+0x3b8>
 8056839:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805683c:	83 e8 30             	sub    $0x30,%eax
 805683f:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056842:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056845:	49 89 c2             	mov    %rax,%r10
 8056848:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805684b:	48 89 c6             	mov    %rax,%rsi
 805684e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8056852:	48 89 c7             	mov    %rax,%rdi
 8056855:	4c 89 d2             	mov    %r10,%rdx
 8056858:	b8 00 00 00 00       	mov    $0x0,%eax
 805685d:	e8 27 fb ff ff       	callq  8056389 <bn_lshift>
 8056862:	e9 64 ff ff ff       	jmpq   80567cb <parse_number+0x341>
 8056867:	b8 00 00 00 00       	mov    $0x0,%eax
 805686c:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805686f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056872:	83 f8 2e             	cmp    $0x2e,%eax
 8056875:	0f 85 12 01 00 00    	jne    805698d <parse_number+0x503>
 805687b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805687f:	48 89 c1             	mov    %rax,%rcx
 8056882:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056889:	00 00 00 
 805688c:	48 01 d0             	add    %rdx,%rax
 805688f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056893:	0f be 01             	movsbl (%rcx),%eax
 8056896:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056899:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805689c:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805689f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568a2:	83 f8 61             	cmp    $0x61,%eax
 80568a5:	0f 8c 1d 00 00 00    	jl     80568c8 <parse_number+0x43e>
 80568ab:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568ae:	83 f8 66             	cmp    $0x66,%eax
 80568b1:	0f 8f 11 00 00 00    	jg     80568c8 <parse_number+0x43e>
 80568b7:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568ba:	83 e8 61             	sub    $0x61,%eax
 80568bd:	83 c0 0a             	add    $0xa,%eax
 80568c0:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80568c3:	e9 54 00 00 00       	jmpq   805691c <parse_number+0x492>
 80568c8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568cb:	83 f8 41             	cmp    $0x41,%eax
 80568ce:	0f 8c 1d 00 00 00    	jl     80568f1 <parse_number+0x467>
 80568d4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568d7:	83 f8 46             	cmp    $0x46,%eax
 80568da:	0f 8f 11 00 00 00    	jg     80568f1 <parse_number+0x467>
 80568e0:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568e3:	83 e8 41             	sub    $0x41,%eax
 80568e6:	83 c0 0a             	add    $0xa,%eax
 80568e9:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80568ec:	e9 2b 00 00 00       	jmpq   805691c <parse_number+0x492>
 80568f1:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80568f4:	83 f8 30             	cmp    $0x30,%eax
 80568f7:	0f 8c 1a 00 00 00    	jl     8056917 <parse_number+0x48d>
 80568fd:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056900:	83 f8 39             	cmp    $0x39,%eax
 8056903:	0f 8f 0e 00 00 00    	jg     8056917 <parse_number+0x48d>
 8056909:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805690c:	83 e8 30             	sub    $0x30,%eax
 805690f:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056912:	e9 05 00 00 00       	jmpq   805691c <parse_number+0x492>
 8056917:	e9 71 00 00 00       	jmpq   805698d <parse_number+0x503>
 805691c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805691f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8056922:	39 c8                	cmp    %ecx,%eax
 8056924:	0f 8c 14 00 00 00    	jl     805693e <parse_number+0x4b4>
 805692a:	48 8d 05 da 4c 03 00 	lea    0x34cda(%rip),%rax        # 808b60b <L.149>
 8056931:	48 89 c7             	mov    %rax,%rdi
 8056934:	b8 00 00 00 00       	mov    $0x0,%eax
 8056939:	e8 89 6d ff ff       	callq  804d6c7 <tcc_error>
 805693e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056941:	49 89 c2             	mov    %rax,%r10
 8056944:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8056947:	48 89 c6             	mov    %rax,%rsi
 805694a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 805694e:	48 89 c7             	mov    %rax,%rdi
 8056951:	4c 89 d2             	mov    %r10,%rdx
 8056954:	b8 00 00 00 00       	mov    $0x0,%eax
 8056959:	e8 2b fa ff ff       	callq  8056389 <bn_lshift>
 805695e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8056961:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8056964:	48 01 c8             	add    %rcx,%rax
 8056967:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805696e:	48 89 c1             	mov    %rax,%rcx
 8056971:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056978:	00 00 00 
 805697b:	48 01 d0             	add    %rdx,%rax
 805697e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056982:	0f be 01             	movsbl (%rcx),%eax
 8056985:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056988:	e9 0c ff ff ff       	jmpq   8056899 <parse_number+0x40f>
 805698d:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056990:	83 f8 70             	cmp    $0x70,%eax
 8056993:	0f 84 20 00 00 00    	je     80569b9 <parse_number+0x52f>
 8056999:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805699c:	83 f8 50             	cmp    $0x50,%eax
 805699f:	0f 84 14 00 00 00    	je     80569b9 <parse_number+0x52f>
 80569a5:	48 8d 05 6d 4c 03 00 	lea    0x34c6d(%rip),%rax        # 808b619 <L.150>
 80569ac:	48 89 c7             	mov    %rax,%rdi
 80569af:	b8 00 00 00 00       	mov    $0x0,%eax
 80569b4:	e8 99 a7 ff ff       	callq  8051152 <expect>
 80569b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80569bd:	48 89 c1             	mov    %rax,%rcx
 80569c0:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80569c7:	00 00 00 
 80569ca:	48 01 d0             	add    %rdx,%rax
 80569cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80569d1:	0f be 01             	movsbl (%rcx),%eax
 80569d4:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80569d7:	b8 01 00 00 00       	mov    $0x1,%eax
 80569dc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80569df:	b8 00 00 00 00       	mov    $0x0,%eax
 80569e4:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80569e7:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80569ea:	83 f8 2b             	cmp    $0x2b,%eax
 80569ed:	0f 85 23 00 00 00    	jne    8056a16 <parse_number+0x58c>
 80569f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80569f7:	48 89 c1             	mov    %rax,%rcx
 80569fa:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056a01:	00 00 00 
 8056a04:	48 01 d0             	add    %rdx,%rax
 8056a07:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056a0b:	0f be 01             	movsbl (%rcx),%eax
 8056a0e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056a11:	e9 32 00 00 00       	jmpq   8056a48 <parse_number+0x5be>
 8056a16:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056a19:	83 f8 2d             	cmp    $0x2d,%eax
 8056a1c:	0f 85 26 00 00 00    	jne    8056a48 <parse_number+0x5be>
 8056a22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8056a27:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8056a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056a2e:	48 89 c1             	mov    %rax,%rcx
 8056a31:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056a38:	00 00 00 
 8056a3b:	48 01 d0             	add    %rdx,%rax
 8056a3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056a42:	0f be 01             	movsbl (%rcx),%eax
 8056a45:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056a48:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056a4b:	83 f8 30             	cmp    $0x30,%eax
 8056a4e:	0f 8c 11 00 00 00    	jl     8056a65 <parse_number+0x5db>
 8056a54:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056a57:	83 f8 39             	cmp    $0x39,%eax
 8056a5a:	0f 8f 05 00 00 00    	jg     8056a65 <parse_number+0x5db>
 8056a60:	e9 14 00 00 00       	jmpq   8056a79 <parse_number+0x5ef>
 8056a65:	48 8d 05 b6 4b 03 00 	lea    0x34bb6(%rip),%rax        # 808b622 <L.151>
 8056a6c:	48 89 c7             	mov    %rax,%rdi
 8056a6f:	b8 00 00 00 00       	mov    $0x0,%eax
 8056a74:	e8 d9 a6 ff ff       	callq  8051152 <expect>
 8056a79:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056a7c:	83 f8 30             	cmp    $0x30,%eax
 8056a7f:	0f 8c 43 00 00 00    	jl     8056ac8 <parse_number+0x63e>
 8056a85:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056a88:	83 f8 39             	cmp    $0x39,%eax
 8056a8b:	0f 8f 37 00 00 00    	jg     8056ac8 <parse_number+0x63e>
 8056a91:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8056a94:	b9 0a 00 00 00       	mov    $0xa,%ecx
 8056a99:	0f af c1             	imul   %ecx,%eax
 8056a9c:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8056a9f:	48 01 c8             	add    %rcx,%rax
 8056aa2:	83 e8 30             	sub    $0x30,%eax
 8056aa5:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8056aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056aac:	48 89 c1             	mov    %rax,%rcx
 8056aaf:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056ab6:	00 00 00 
 8056ab9:	48 01 d0             	add    %rdx,%rax
 8056abc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056ac0:	0f be 01             	movsbl (%rcx),%eax
 8056ac3:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056ac6:	eb b1                	jmp    8056a79 <parse_number+0x5ef>
 8056ac8:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8056acb:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 8056ace:	0f af c1             	imul   %ecx,%eax
 8056ad1:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8056ad4:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8056ad7:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 8056adc:	66 0f d6 45 b8       	movq   %xmm0,-0x48(%rbp)
 8056ae1:	f3 0f 7e 05 4f 4b 03 	movq   0x34b4f(%rip),%xmm0        # 808b638 <L.152>
 8056ae8:	00 
 8056ae9:	f3 0f 7e c8          	movq   %xmm0,%xmm1
 8056aed:	f3 0f 7e 45 b8       	movq   -0x48(%rbp),%xmm0
 8056af2:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
 8056af6:	66 0f d6 45 b0       	movq   %xmm0,-0x50(%rbp)
 8056afb:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8056afe:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 8056b03:	f3 0f 7e c8          	movq   %xmm0,%xmm1
 8056b07:	f3 0f 7e 45 b0       	movq   -0x50(%rbp),%xmm0
 8056b0c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
 8056b10:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
 8056b15:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8056b18:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8056b1b:	48 29 c8             	sub    %rcx,%rax
 8056b1e:	48 89 c7             	mov    %rax,%rdi
 8056b21:	f3 0f 7e 45 c0       	movq   -0x40(%rbp),%xmm0
 8056b26:	0f 28 c0             	movaps %xmm0,%xmm0
 8056b29:	b8 01 00 00 00       	mov    $0x1,%eax
 8056b2e:	e8 3d 11 03 00       	callq  8087c70 <__preinit_array_end+0x1d0>
 8056b33:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
 8056b38:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056b3b:	48 89 c7             	mov    %rax,%rdi
 8056b3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8056b43:	e8 b9 4d 00 00       	callq  805b901 <toup>
 8056b48:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056b4b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056b4e:	83 f8 46             	cmp    $0x46,%eax
 8056b51:	0f 85 4b 00 00 00    	jne    8056ba2 <parse_number+0x718>
 8056b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056b5b:	48 89 c1             	mov    %rax,%rcx
 8056b5e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056b65:	00 00 00 
 8056b68:	48 01 d0             	add    %rdx,%rax
 8056b6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056b6f:	0f be 01             	movsbl (%rcx),%eax
 8056b72:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056b75:	b8 b9 00 00 00       	mov    $0xb9,%eax
 8056b7a:	4c 8b 1d a7 73 03 00 	mov    0x373a7(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8056b81:	41 89 03             	mov    %eax,(%r11)
 8056b84:	f3 0f 7e 45 c0       	movq   -0x40(%rbp),%xmm0
 8056b89:	66 0f 14 c0          	unpcklpd %xmm0,%xmm0
 8056b8d:	66 0f 5a c0          	cvtpd2ps %xmm0,%xmm0
 8056b91:	4c 8b 1d 10 74 03 00 	mov    0x37410(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8056b98:	66 41 0f 7e 03       	movd   %xmm0,(%r11)
 8056b9d:	e9 7b 00 00 00       	jmpq   8056c1d <parse_number+0x793>
 8056ba2:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056ba5:	83 f8 4c             	cmp    $0x4c,%eax
 8056ba8:	0f 85 4f 00 00 00    	jne    8056bfd <parse_number+0x773>
 8056bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056bb2:	48 89 c1             	mov    %rax,%rcx
 8056bb5:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056bbc:	00 00 00 
 8056bbf:	48 01 d0             	add    %rdx,%rax
 8056bc2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056bc6:	0f be 01             	movsbl (%rcx),%eax
 8056bc9:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056bcc:	b8 c1 00 00 00       	mov    $0xc1,%eax
 8056bd1:	4c 8b 1d 50 73 03 00 	mov    0x37350(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8056bd8:	41 89 03             	mov    %eax,(%r11)
 8056bdb:	f3 0f 7e 45 c0       	movq   -0x40(%rbp),%xmm0
 8056be0:	f2 0f 11 44 24 f0    	movsd  %xmm0,-0x10(%rsp)
 8056be6:	dd 44 24 f0          	fldl   -0x10(%rsp)
 8056bea:	4c 8b 1d b7 73 03 00 	mov    0x373b7(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8056bf1:	d9 c0                	fld    %st(0)
 8056bf3:	41 db 3b             	fstpt  (%r11)
 8056bf6:	dd d9                	fstp   %st(1)
 8056bf8:	e9 20 00 00 00       	jmpq   8056c1d <parse_number+0x793>
 8056bfd:	b8 c0 00 00 00       	mov    $0xc0,%eax
 8056c02:	4c 8b 1d 1f 73 03 00 	mov    0x3731f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8056c09:	41 89 03             	mov    %eax,(%r11)
 8056c0c:	f3 0f 7e 45 c0       	movq   -0x40(%rbp),%xmm0
 8056c11:	4c 8b 1d 90 73 03 00 	mov    0x37390(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8056c18:	66 41 0f d6 03       	movq   %xmm0,(%r11)
 8056c1d:	e9 a6 03 00 00       	jmpq   8056fc8 <parse_number+0xb3e>
 8056c22:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056c25:	83 f8 2e             	cmp    $0x2e,%eax
 8056c28:	0f 85 d0 00 00 00    	jne    8056cfe <parse_number+0x874>
 8056c2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056c32:	48 8d 0d 47 7a 04 00 	lea    0x47a47(%rip),%rcx        # 809e680 <token_buf+0x400>
 8056c39:	48 89 c2             	mov    %rax,%rdx
 8056c3c:	48 89 c8             	mov    %rcx,%rax
 8056c3f:	48 39 c2             	cmp    %rax,%rdx
 8056c42:	0f 82 05 00 00 00    	jb     8056c4d <parse_number+0x7c3>
 8056c48:	e9 57 fa ff ff       	jmpq   80566a4 <parse_number+0x21a>
 8056c4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056c51:	48 89 c1             	mov    %rax,%rcx
 8056c54:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056c5b:	00 00 00 
 8056c5e:	48 01 d0             	add    %rdx,%rax
 8056c61:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056c65:	0f be 45 dc          	movsbl -0x24(%rbp),%eax
 8056c69:	88 01                	mov    %al,(%rcx)
 8056c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056c6f:	48 89 c1             	mov    %rax,%rcx
 8056c72:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056c79:	00 00 00 
 8056c7c:	48 01 d0             	add    %rdx,%rax
 8056c7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056c83:	0f be 01             	movsbl (%rcx),%eax
 8056c86:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056c89:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056c8c:	83 f8 30             	cmp    $0x30,%eax
 8056c8f:	0f 8c 69 00 00 00    	jl     8056cfe <parse_number+0x874>
 8056c95:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056c98:	83 f8 39             	cmp    $0x39,%eax
 8056c9b:	0f 8f 5d 00 00 00    	jg     8056cfe <parse_number+0x874>
 8056ca1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056ca5:	48 8d 0d d4 79 04 00 	lea    0x479d4(%rip),%rcx        # 809e680 <token_buf+0x400>
 8056cac:	48 89 c2             	mov    %rax,%rdx
 8056caf:	48 89 c8             	mov    %rcx,%rax
 8056cb2:	48 39 c2             	cmp    %rax,%rdx
 8056cb5:	0f 82 05 00 00 00    	jb     8056cc0 <parse_number+0x836>
 8056cbb:	e9 e4 f9 ff ff       	jmpq   80566a4 <parse_number+0x21a>
 8056cc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056cc4:	48 89 c1             	mov    %rax,%rcx
 8056cc7:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056cce:	00 00 00 
 8056cd1:	48 01 d0             	add    %rdx,%rax
 8056cd4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056cd8:	0f be 45 dc          	movsbl -0x24(%rbp),%eax
 8056cdc:	88 01                	mov    %al,(%rcx)
 8056cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056ce2:	48 89 c1             	mov    %rax,%rcx
 8056ce5:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056cec:	00 00 00 
 8056cef:	48 01 d0             	add    %rdx,%rax
 8056cf2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056cf6:	0f be 01             	movsbl (%rcx),%eax
 8056cf9:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056cfc:	eb 8b                	jmp    8056c89 <parse_number+0x7ff>
 8056cfe:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056d01:	83 f8 65             	cmp    $0x65,%eax
 8056d04:	0f 84 11 00 00 00    	je     8056d1b <parse_number+0x891>
 8056d0a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056d0d:	83 f8 45             	cmp    $0x45,%eax
 8056d10:	0f 84 05 00 00 00    	je     8056d1b <parse_number+0x891>
 8056d16:	e9 79 01 00 00       	jmpq   8056e94 <parse_number+0xa0a>
 8056d1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056d1f:	48 8d 0d 5a 79 04 00 	lea    0x4795a(%rip),%rcx        # 809e680 <token_buf+0x400>
 8056d26:	48 89 c2             	mov    %rax,%rdx
 8056d29:	48 89 c8             	mov    %rcx,%rax
 8056d2c:	48 39 c2             	cmp    %rax,%rdx
 8056d2f:	0f 82 05 00 00 00    	jb     8056d3a <parse_number+0x8b0>
 8056d35:	e9 6a f9 ff ff       	jmpq   80566a4 <parse_number+0x21a>
 8056d3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056d3e:	48 89 c1             	mov    %rax,%rcx
 8056d41:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056d48:	00 00 00 
 8056d4b:	48 01 d0             	add    %rdx,%rax
 8056d4e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056d52:	0f be 45 dc          	movsbl -0x24(%rbp),%eax
 8056d56:	88 01                	mov    %al,(%rcx)
 8056d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056d5c:	48 89 c1             	mov    %rax,%rcx
 8056d5f:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056d66:	00 00 00 
 8056d69:	48 01 d0             	add    %rdx,%rax
 8056d6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056d70:	0f be 01             	movsbl (%rcx),%eax
 8056d73:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056d76:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056d79:	83 f8 2d             	cmp    $0x2d,%eax
 8056d7c:	0f 84 11 00 00 00    	je     8056d93 <parse_number+0x909>
 8056d82:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056d85:	83 f8 2b             	cmp    $0x2b,%eax
 8056d88:	0f 84 05 00 00 00    	je     8056d93 <parse_number+0x909>
 8056d8e:	e9 5b 00 00 00       	jmpq   8056dee <parse_number+0x964>
 8056d93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056d97:	48 8d 0d e2 78 04 00 	lea    0x478e2(%rip),%rcx        # 809e680 <token_buf+0x400>
 8056d9e:	48 89 c2             	mov    %rax,%rdx
 8056da1:	48 89 c8             	mov    %rcx,%rax
 8056da4:	48 39 c2             	cmp    %rax,%rdx
 8056da7:	0f 82 05 00 00 00    	jb     8056db2 <parse_number+0x928>
 8056dad:	e9 f2 f8 ff ff       	jmpq   80566a4 <parse_number+0x21a>
 8056db2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056db6:	48 89 c1             	mov    %rax,%rcx
 8056db9:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056dc0:	00 00 00 
 8056dc3:	48 01 d0             	add    %rdx,%rax
 8056dc6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056dca:	0f be 45 dc          	movsbl -0x24(%rbp),%eax
 8056dce:	88 01                	mov    %al,(%rcx)
 8056dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056dd4:	48 89 c1             	mov    %rax,%rcx
 8056dd7:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056dde:	00 00 00 
 8056de1:	48 01 d0             	add    %rdx,%rax
 8056de4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056de8:	0f be 01             	movsbl (%rcx),%eax
 8056deb:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056dee:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056df1:	83 f8 30             	cmp    $0x30,%eax
 8056df4:	0f 8c 11 00 00 00    	jl     8056e0b <parse_number+0x981>
 8056dfa:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056dfd:	83 f8 39             	cmp    $0x39,%eax
 8056e00:	0f 8f 05 00 00 00    	jg     8056e0b <parse_number+0x981>
 8056e06:	e9 14 00 00 00       	jmpq   8056e1f <parse_number+0x995>
 8056e0b:	48 8d 05 2e 48 03 00 	lea    0x3482e(%rip),%rax        # 808b640 <L.153>
 8056e12:	48 89 c7             	mov    %rax,%rdi
 8056e15:	b8 00 00 00 00       	mov    $0x0,%eax
 8056e1a:	e8 33 a3 ff ff       	callq  8051152 <expect>
 8056e1f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056e22:	83 f8 30             	cmp    $0x30,%eax
 8056e25:	0f 8c 69 00 00 00    	jl     8056e94 <parse_number+0xa0a>
 8056e2b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056e2e:	83 f8 39             	cmp    $0x39,%eax
 8056e31:	0f 8f 5d 00 00 00    	jg     8056e94 <parse_number+0xa0a>
 8056e37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056e3b:	48 8d 0d 3e 78 04 00 	lea    0x4783e(%rip),%rcx        # 809e680 <token_buf+0x400>
 8056e42:	48 89 c2             	mov    %rax,%rdx
 8056e45:	48 89 c8             	mov    %rcx,%rax
 8056e48:	48 39 c2             	cmp    %rax,%rdx
 8056e4b:	0f 82 05 00 00 00    	jb     8056e56 <parse_number+0x9cc>
 8056e51:	e9 4e f8 ff ff       	jmpq   80566a4 <parse_number+0x21a>
 8056e56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056e5a:	48 89 c1             	mov    %rax,%rcx
 8056e5d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056e64:	00 00 00 
 8056e67:	48 01 d0             	add    %rdx,%rax
 8056e6a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056e6e:	0f be 45 dc          	movsbl -0x24(%rbp),%eax
 8056e72:	88 01                	mov    %al,(%rcx)
 8056e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056e78:	48 89 c1             	mov    %rax,%rcx
 8056e7b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056e82:	00 00 00 
 8056e85:	48 01 d0             	add    %rdx,%rax
 8056e88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056e8c:	0f be 01             	movsbl (%rcx),%eax
 8056e8f:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056e92:	eb 8b                	jmp    8056e1f <parse_number+0x995>
 8056e94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056e98:	b9 00 00 00 00       	mov    $0x0,%ecx
 8056e9d:	88 08                	mov    %cl,(%rax)
 8056e9f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8056ea2:	48 89 c7             	mov    %rax,%rdi
 8056ea5:	b8 00 00 00 00       	mov    $0x0,%eax
 8056eaa:	e8 52 4a 00 00       	callq  805b901 <toup>
 8056eaf:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8056eb2:	b8 00 00 00 00       	mov    $0x0,%eax
 8056eb7:	e8 c4 0d 03 00       	callq  8087c80 <__preinit_array_end+0x1e0>
 8056ebc:	b9 00 00 00 00       	mov    $0x0,%ecx
 8056ec1:	89 08                	mov    %ecx,(%rax)
 8056ec3:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056ec6:	83 f8 46             	cmp    $0x46,%eax
 8056ec9:	0f 85 5a 00 00 00    	jne    8056f29 <parse_number+0xa9f>
 8056ecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056ed3:	48 89 c1             	mov    %rax,%rcx
 8056ed6:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056edd:	00 00 00 
 8056ee0:	48 01 d0             	add    %rdx,%rax
 8056ee3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056ee7:	0f be 01             	movsbl (%rcx),%eax
 8056eea:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056eed:	b8 b9 00 00 00       	mov    $0xb9,%eax
 8056ef2:	4c 8b 1d 2f 70 03 00 	mov    0x3702f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8056ef9:	41 89 03             	mov    %eax,(%r11)
 8056efc:	b8 00 00 00 00       	mov    $0x0,%eax
 8056f01:	48 89 c6             	mov    %rax,%rsi
 8056f04:	48 8d 05 75 73 04 00 	lea    0x47375(%rip),%rax        # 809e280 <token_buf>
 8056f0b:	48 89 c7             	mov    %rax,%rdi
 8056f0e:	b8 00 00 00 00       	mov    $0x0,%eax
 8056f13:	e8 78 0d 03 00       	callq  8087c90 <__preinit_array_end+0x1f0>
 8056f18:	4c 8b 1d 89 70 03 00 	mov    0x37089(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8056f1f:	66 41 0f 7e 03       	movd   %xmm0,(%r11)
 8056f24:	e9 9f 00 00 00       	jmpq   8056fc8 <parse_number+0xb3e>
 8056f29:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8056f2c:	83 f8 4c             	cmp    $0x4c,%eax
 8056f2f:	0f 85 5c 00 00 00    	jne    8056f91 <parse_number+0xb07>
 8056f35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8056f39:	48 89 c1             	mov    %rax,%rcx
 8056f3c:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8056f43:	00 00 00 
 8056f46:	48 01 d0             	add    %rdx,%rax
 8056f49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8056f4d:	0f be 01             	movsbl (%rcx),%eax
 8056f50:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8056f53:	b8 c1 00 00 00       	mov    $0xc1,%eax
 8056f58:	4c 8b 1d c9 6f 03 00 	mov    0x36fc9(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8056f5f:	41 89 03             	mov    %eax,(%r11)
 8056f62:	b8 00 00 00 00       	mov    $0x0,%eax
 8056f67:	48 89 c6             	mov    %rax,%rsi
 8056f6a:	48 8d 05 0f 73 04 00 	lea    0x4730f(%rip),%rax        # 809e280 <token_buf>
 8056f71:	48 89 c7             	mov    %rax,%rdi
 8056f74:	b8 00 00 00 00       	mov    $0x0,%eax
 8056f79:	e8 22 0d 03 00       	callq  8087ca0 <__preinit_array_end+0x200>
 8056f7e:	4c 8b 1d 23 70 03 00 	mov    0x37023(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8056f85:	d9 c0                	fld    %st(0)
 8056f87:	41 db 3b             	fstpt  (%r11)
 8056f8a:	dd d9                	fstp   %st(1)
 8056f8c:	e9 37 00 00 00       	jmpq   8056fc8 <parse_number+0xb3e>
 8056f91:	b8 c0 00 00 00       	mov    $0xc0,%eax
 8056f96:	4c 8b 1d 8b 6f 03 00 	mov    0x36f8b(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8056f9d:	41 89 03             	mov    %eax,(%r11)
 8056fa0:	b8 00 00 00 00       	mov    $0x0,%eax
 8056fa5:	48 89 c6             	mov    %rax,%rsi
 8056fa8:	48 8d 05 d1 72 04 00 	lea    0x472d1(%rip),%rax        # 809e280 <token_buf>
 8056faf:	48 89 c7             	mov    %rax,%rdi
 8056fb2:	b8 00 00 00 00       	mov    $0x0,%eax
 8056fb7:	e8 f4 0c 03 00       	callq  8087cb0 <__preinit_array_end+0x210>
 8056fbc:	4c 8b 1d e5 6f 03 00 	mov    0x36fe5(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8056fc3:	66 41 0f d6 03       	movq   %xmm0,(%r11)
 8056fc8:	e9 c5 03 00 00       	jmpq   8057392 <parse_number+0xf08>
 8056fcd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056fd1:	b9 00 00 00 00       	mov    $0x0,%ecx
 8056fd6:	88 08                	mov    %cl,(%rax)
 8056fd8:	48 8d 05 a1 72 04 00 	lea    0x472a1(%rip),%rax        # 809e280 <token_buf>
 8056fdf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8056fe3:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8056fe6:	83 f8 0a             	cmp    $0xa,%eax
 8056fe9:	0f 85 30 00 00 00    	jne    805701f <parse_number+0xb95>
 8056fef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8056ff3:	0f be 08             	movsbl (%rax),%ecx
 8056ff6:	83 f9 30             	cmp    $0x30,%ecx
 8056ff9:	0f 85 20 00 00 00    	jne    805701f <parse_number+0xb95>
 8056fff:	b8 08 00 00 00       	mov    $0x8,%eax
 8057004:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8057007:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805700b:	48 89 c1             	mov    %rax,%rcx
 805700e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8057015:	00 00 00 
 8057018:	48 01 d0             	add    %rdx,%rax
 805701b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805701f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8057026:	00 00 00 
 8057029:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805702d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8057031:	48 89 c1             	mov    %rax,%rcx
 8057034:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805703b:	00 00 00 
 805703e:	48 01 d0             	add    %rdx,%rax
 8057041:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8057045:	0f be 01             	movsbl (%rcx),%eax
 8057048:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805704b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805704e:	83 f8 00             	cmp    $0x0,%eax
 8057051:	0f 85 0a 00 00 00    	jne    8057061 <parse_number+0xbd7>
 8057057:	e9 c3 00 00 00       	jmpq   805711f <parse_number+0xc95>
 805705c:	e9 65 00 00 00       	jmpq   80570c6 <parse_number+0xc3c>
 8057061:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8057064:	83 f8 61             	cmp    $0x61,%eax
 8057067:	0f 8c 11 00 00 00    	jl     805707e <parse_number+0xbf4>
 805706d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8057070:	83 e8 61             	sub    $0x61,%eax
 8057073:	83 c0 0a             	add    $0xa,%eax
 8057076:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8057079:	e9 48 00 00 00       	jmpq   80570c6 <parse_number+0xc3c>
 805707e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8057081:	83 f8 41             	cmp    $0x41,%eax
 8057084:	0f 8c 11 00 00 00    	jl     805709b <parse_number+0xc11>
 805708a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805708d:	83 e8 41             	sub    $0x41,%eax
 8057090:	83 c0 0a             	add    $0xa,%eax
 8057093:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8057096:	e9 2b 00 00 00       	jmpq   80570c6 <parse_number+0xc3c>
 805709b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805709e:	83 e8 30             	sub    $0x30,%eax
 80570a1:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80570a4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80570a7:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 80570aa:	39 c8                	cmp    %ecx,%eax
 80570ac:	0f 8c 14 00 00 00    	jl     80570c6 <parse_number+0xc3c>
 80570b2:	48 8d 05 97 45 03 00 	lea    0x34597(%rip),%rax        # 808b650 <L.154>
 80570b9:	48 89 c7             	mov    %rax,%rdi
 80570bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80570c1:	e8 01 66 ff ff       	callq  804d6c7 <tcc_error>
 80570c6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80570ca:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 80570ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80570d1:	48 63 c0             	movslq %eax,%rax
 80570d4:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 80570d8:	48 89 c2             	mov    %rax,%rdx
 80570db:	48 0f af ca          	imul   %rdx,%rcx
 80570df:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80570e2:	48 63 c0             	movslq %eax,%rax
 80570e5:	48 89 ca             	mov    %rcx,%rdx
 80570e8:	48 89 c1             	mov    %rax,%rcx
 80570eb:	48 01 ca             	add    %rcx,%rdx
 80570ee:	48 89 d0             	mov    %rdx,%rax
 80570f1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 80570f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80570f9:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 80570fd:	48 39 c8             	cmp    %rcx,%rax
 8057100:	0f 83 14 00 00 00    	jae    805711a <parse_number+0xc90>
 8057106:	48 8d 05 51 45 03 00 	lea    0x34551(%rip),%rax        # 808b65e <L.155>
 805710d:	48 89 c7             	mov    %rax,%rdi
 8057110:	b8 00 00 00 00       	mov    $0x0,%eax
 8057115:	e8 ad 65 ff ff       	callq  804d6c7 <tcc_error>
 805711a:	e9 0e ff ff ff       	jmpq   805702d <parse_number+0xba3>
 805711f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8057123:	48 b9 00 00 00 00 ff 	movabs $0xffffffff00000000,%rcx
 805712a:	ff ff ff 
 805712d:	48 21 c8             	and    %rcx,%rax
 8057130:	48 89 c1             	mov    %rax,%rcx
 8057133:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 805713a:	00 00 00 
 805713d:	48 39 c1             	cmp    %rax,%rcx
 8057140:	0f 84 46 00 00 00    	je     805718c <parse_number+0xd02>
 8057146:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805714a:	48 c1 e8 3f          	shr    $0x3f,%rax
 805714e:	48 89 c1             	mov    %rax,%rcx
 8057151:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8057158:	00 00 00 
 805715b:	48 39 c1             	cmp    %rax,%rcx
 805715e:	0f 84 14 00 00 00    	je     8057178 <parse_number+0xcee>
 8057164:	b8 ca 00 00 00       	mov    $0xca,%eax
 8057169:	4c 8b 1d b8 6d 03 00 	mov    0x36db8(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057170:	41 89 03             	mov    %eax,(%r11)
 8057173:	e9 0f 00 00 00       	jmpq   8057187 <parse_number+0xcfd>
 8057178:	b8 c9 00 00 00       	mov    $0xc9,%eax
 805717d:	4c 8b 1d a4 6d 03 00 	mov    0x36da4(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057184:	41 89 03             	mov    %eax,(%r11)
 8057187:	e9 3a 00 00 00       	jmpq   80571c6 <parse_number+0xd3c>
 805718c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8057190:	48 b9 ff ff ff 7f 00 	movabs $0x7fffffff,%rcx
 8057197:	00 00 00 
 805719a:	48 39 c8             	cmp    %rcx,%rax
 805719d:	0f 86 14 00 00 00    	jbe    80571b7 <parse_number+0xd2d>
 80571a3:	b8 c8 00 00 00       	mov    $0xc8,%eax
 80571a8:	4c 8b 1d 79 6d 03 00 	mov    0x36d79(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80571af:	41 89 03             	mov    %eax,(%r11)
 80571b2:	e9 0f 00 00 00       	jmpq   80571c6 <parse_number+0xd3c>
 80571b7:	b8 b3 00 00 00       	mov    $0xb3,%eax
 80571bc:	4c 8b 1d 65 6d 03 00 	mov    0x36d65(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80571c3:	41 89 03             	mov    %eax,(%r11)
 80571c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80571cb:	89 45 9c             	mov    %eax,-0x64(%rbp)
 80571ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80571d3:	89 45 98             	mov    %eax,-0x68(%rbp)
 80571d6:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80571d9:	48 89 c7             	mov    %rax,%rdi
 80571dc:	b8 00 00 00 00       	mov    $0x0,%eax
 80571e1:	e8 1b 47 00 00       	callq  805b901 <toup>
 80571e6:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80571e9:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80571ec:	83 f8 4c             	cmp    $0x4c,%eax
 80571ef:	0f 85 9c 00 00 00    	jne    8057291 <parse_number+0xe07>
 80571f5:	8b 45 9c             	mov    -0x64(%rbp),%eax
 80571f8:	83 f8 02             	cmp    $0x2,%eax
 80571fb:	0f 8c 14 00 00 00    	jl     8057215 <parse_number+0xd8b>
 8057201:	48 8d 05 70 44 03 00 	lea    0x34470(%rip),%rax        # 808b678 <L.156>
 8057208:	48 89 c7             	mov    %rax,%rdi
 805720b:	b8 00 00 00 00       	mov    $0x0,%eax
 8057210:	e8 b2 64 ff ff       	callq  804d6c7 <tcc_error>
 8057215:	8b 45 9c             	mov    -0x64(%rbp),%eax
 8057218:	48 89 c1             	mov    %rax,%rcx
 805721b:	83 c0 01             	add    $0x1,%eax
 805721e:	89 45 9c             	mov    %eax,-0x64(%rbp)
 8057221:	48 8b 05 00 6d 03 00 	mov    0x36d00(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057228:	8b 00                	mov    (%rax),%eax
 805722a:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 8057230:	0f 85 14 00 00 00    	jne    805724a <parse_number+0xdc0>
 8057236:	b8 c9 00 00 00       	mov    $0xc9,%eax
 805723b:	4c 8b 1d e6 6c 03 00 	mov    0x36ce6(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057242:	41 89 03             	mov    %eax,(%r11)
 8057245:	e9 24 00 00 00       	jmpq   805726e <parse_number+0xde4>
 805724a:	48 8b 05 d7 6c 03 00 	mov    0x36cd7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057251:	8b 00                	mov    (%rax),%eax
 8057253:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 8057259:	0f 85 0f 00 00 00    	jne    805726e <parse_number+0xde4>
 805725f:	b8 ca 00 00 00       	mov    $0xca,%eax
 8057264:	4c 8b 1d bd 6c 03 00 	mov    0x36cbd(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805726b:	41 89 03             	mov    %eax,(%r11)
 805726e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8057272:	48 89 c1             	mov    %rax,%rcx
 8057275:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805727c:	00 00 00 
 805727f:	48 01 d0             	add    %rdx,%rax
 8057282:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8057286:	0f be 01             	movsbl (%rcx),%eax
 8057289:	89 45 dc             	mov    %eax,-0x24(%rbp)
 805728c:	e9 ad 00 00 00       	jmpq   805733e <parse_number+0xeb4>
 8057291:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8057294:	83 f8 55             	cmp    $0x55,%eax
 8057297:	0f 85 9c 00 00 00    	jne    8057339 <parse_number+0xeaf>
 805729d:	8b 45 98             	mov    -0x68(%rbp),%eax
 80572a0:	83 f8 01             	cmp    $0x1,%eax
 80572a3:	0f 8c 14 00 00 00    	jl     80572bd <parse_number+0xe33>
 80572a9:	48 8d 05 e7 43 03 00 	lea    0x343e7(%rip),%rax        # 808b697 <L.157>
 80572b0:	48 89 c7             	mov    %rax,%rdi
 80572b3:	b8 00 00 00 00       	mov    $0x0,%eax
 80572b8:	e8 0a 64 ff ff       	callq  804d6c7 <tcc_error>
 80572bd:	8b 45 98             	mov    -0x68(%rbp),%eax
 80572c0:	48 89 c1             	mov    %rax,%rcx
 80572c3:	83 c0 01             	add    $0x1,%eax
 80572c6:	89 45 98             	mov    %eax,-0x68(%rbp)
 80572c9:	48 8b 05 58 6c 03 00 	mov    0x36c58(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80572d0:	8b 00                	mov    (%rax),%eax
 80572d2:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 80572d8:	0f 85 14 00 00 00    	jne    80572f2 <parse_number+0xe68>
 80572de:	b8 c8 00 00 00       	mov    $0xc8,%eax
 80572e3:	4c 8b 1d 3e 6c 03 00 	mov    0x36c3e(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80572ea:	41 89 03             	mov    %eax,(%r11)
 80572ed:	e9 24 00 00 00       	jmpq   8057316 <parse_number+0xe8c>
 80572f2:	48 8b 05 2f 6c 03 00 	mov    0x36c2f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80572f9:	8b 00                	mov    (%rax),%eax
 80572fb:	81 f8 c9 00 00 00    	cmp    $0xc9,%eax
 8057301:	0f 85 0f 00 00 00    	jne    8057316 <parse_number+0xe8c>
 8057307:	b8 ca 00 00 00       	mov    $0xca,%eax
 805730c:	4c 8b 1d 15 6c 03 00 	mov    0x36c15(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057313:	41 89 03             	mov    %eax,(%r11)
 8057316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805731a:	48 89 c1             	mov    %rax,%rcx
 805731d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8057324:	00 00 00 
 8057327:	48 01 d0             	add    %rdx,%rax
 805732a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805732e:	0f be 01             	movsbl (%rcx),%eax
 8057331:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8057334:	e9 05 00 00 00       	jmpq   805733e <parse_number+0xeb4>
 8057339:	e9 05 00 00 00       	jmpq   8057343 <parse_number+0xeb9>
 805733e:	e9 93 fe ff ff       	jmpq   80571d6 <parse_number+0xd4c>
 8057343:	48 8b 05 de 6b 03 00 	mov    0x36bde(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805734a:	8b 00                	mov    (%rax),%eax
 805734c:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 8057352:	0f 84 1a 00 00 00    	je     8057372 <parse_number+0xee8>
 8057358:	48 8b 05 c9 6b 03 00 	mov    0x36bc9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805735f:	8b 00                	mov    (%rax),%eax
 8057361:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 8057367:	0f 84 05 00 00 00    	je     8057372 <parse_number+0xee8>
 805736d:	e9 12 00 00 00       	jmpq   8057384 <parse_number+0xefa>
 8057372:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8057375:	4c 8b 1d 2c 6c 03 00 	mov    0x36c2c(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805737c:	41 89 03             	mov    %eax,(%r11)
 805737f:	e9 0e 00 00 00       	jmpq   8057392 <parse_number+0xf08>
 8057384:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8057388:	4c 8b 1d 19 6c 03 00 	mov    0x36c19(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805738f:	49 89 03             	mov    %rax,(%r11)
 8057392:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8057395:	85 c0                	test   %eax,%eax
 8057397:	0f 84 14 00 00 00    	je     80573b1 <parse_number+0xf27>
 805739d:	48 8d 05 10 43 03 00 	lea    0x34310(%rip),%rax        # 808b6b4 <L.158>
 80573a4:	48 89 c7             	mov    %rax,%rdi
 80573a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80573ac:	e8 16 63 ff ff       	callq  804d6c7 <tcc_error>
 80573b1:	c9                   	leaveq 
 80573b2:	c3                   	retq   

00000000080573b3 <next_nomacro_spc>:
 80573b3:	55                   	push   %rbp
 80573b4:	48 89 e5             	mov    %rsp,%rbp
 80573b7:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 80573be:	48 8b 05 ab 6b 03 00 	mov    0x36bab(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80573c5:	48 8b 00             	mov    (%rax),%rax
 80573c8:	85 c0                	test   %eax,%eax
 80573ca:	0f 84 93 00 00 00    	je     8057463 <next_nomacro_spc+0xb0>
 80573d0:	48 8b 05 99 6b 03 00 	mov    0x36b99(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80573d7:	48 8b 00             	mov    (%rax),%rax
 80573da:	8b 08                	mov    (%rax),%ecx
 80573dc:	4c 8b 1d 45 6b 03 00 	mov    0x36b45(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80573e3:	41 89 0b             	mov    %ecx,(%r11)
 80573e6:	48 8b 05 3b 6b 03 00 	mov    0x36b3b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80573ed:	8b 00                	mov    (%rax),%eax
 80573ef:	85 c0                	test   %eax,%eax
 80573f1:	0f 84 67 00 00 00    	je     805745e <next_nomacro_spc+0xab>
 80573f7:	48 8b 05 aa 6b 03 00 	mov    0x36baa(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80573fe:	49 89 c2             	mov    %rax,%r10
 8057401:	48 8b 05 68 6b 03 00 	mov    0x36b68(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8057408:	48 89 c6             	mov    %rax,%rsi
 805740b:	48 8b 05 16 6b 03 00 	mov    0x36b16(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057412:	48 89 c7             	mov    %rax,%rdi
 8057415:	4c 89 d2             	mov    %r10,%rdx
 8057418:	b8 00 00 00 00       	mov    $0x0,%eax
 805741d:	e8 c9 40 00 00       	callq  805b4eb <TOK_GET>
 8057422:	48 8b 05 ff 6a 03 00 	mov    0x36aff(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057429:	8b 00                	mov    (%rax),%eax
 805742b:	81 f8 ba 00 00 00    	cmp    $0xba,%eax
 8057431:	0f 85 27 00 00 00    	jne    805745e <next_nomacro_spc+0xab>
 8057437:	48 8b 05 62 6a 03 00 	mov    0x36a62(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805743e:	48 8b 00             	mov    (%rax),%rax
 8057441:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8057448:	00 00 00 
 805744b:	48 01 c8             	add    %rcx,%rax
 805744e:	48 8b 0d 53 6b 03 00 	mov    0x36b53(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8057455:	8b 09                	mov    (%rcx),%ecx
 8057457:	89 08                	mov    %ecx,(%rax)
 8057459:	e9 72 ff ff ff       	jmpq   80573d0 <next_nomacro_spc+0x1d>
 805745e:	e9 0a 00 00 00       	jmpq   805746d <next_nomacro_spc+0xba>
 8057463:	b8 00 00 00 00       	mov    $0x0,%eax
 8057468:	e8 68 1f 00 00       	callq  80593d5 <next_nomacro1>
 805746d:	c9                   	leaveq 
 805746e:	c3                   	retq   

000000000805746f <next_nomacro>:
 805746f:	55                   	push   %rbp
 8057470:	48 89 e5             	mov    %rsp,%rbp
 8057473:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 805747a:	b8 00 00 00 00       	mov    $0x0,%eax
 805747f:	e8 2f ff ff ff       	callq  80573b3 <next_nomacro_spc>
 8057484:	48 8b 05 9d 6a 03 00 	mov    0x36a9d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805748b:	8b 00                	mov    (%rax),%eax
 805748d:	48 89 c7             	mov    %rax,%rdi
 8057490:	b8 00 00 00 00       	mov    $0x0,%eax
 8057495:	e8 87 45 00 00       	callq  805ba21 <is_space>
 805749a:	85 c0                	test   %eax,%eax
 805749c:	0f 85 d8 ff ff ff    	jne    805747a <next_nomacro+0xb>
 80574a2:	c9                   	leaveq 
 80574a3:	c3                   	retq   

00000000080574a4 <macro_arg_subst>:
 80574a4:	55                   	push   %rbp
 80574a5:	48 89 e5             	mov    %rsp,%rbp
 80574a8:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
 80574af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80574b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80574b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80574bb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 80574bf:	48 89 c7             	mov    %rax,%rdi
 80574c2:	b8 00 00 00 00       	mov    $0x0,%eax
 80574c7:	e8 86 bf ff ff       	callq  8053452 <tok_str_new>
 80574cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80574d1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80574d4:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80574d8:	49 89 c2             	mov    %rax,%r10
 80574db:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 80574df:	48 89 c6             	mov    %rax,%rsi
 80574e2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80574e6:	48 89 c7             	mov    %rax,%rdi
 80574e9:	4c 89 d2             	mov    %r10,%rdx
 80574ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80574f1:	e8 f5 3f 00 00       	callq  805b4eb <TOK_GET>
 80574f6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80574f9:	85 c0                	test   %eax,%eax
 80574fb:	0f 84 05 00 00 00    	je     8057506 <macro_arg_subst+0x62>
 8057501:	e9 05 00 00 00       	jmpq   805750b <macro_arg_subst+0x67>
 8057506:	e9 a0 03 00 00       	jmpq   80578ab <macro_arg_subst+0x407>
 805750b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805750e:	83 f8 23             	cmp    $0x23,%eax
 8057511:	0f 85 9f 01 00 00    	jne    80576b6 <macro_arg_subst+0x212>
 8057517:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 805751b:	49 89 c2             	mov    %rax,%r10
 805751e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 8057522:	48 89 c6             	mov    %rax,%rsi
 8057525:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8057529:	48 89 c7             	mov    %rax,%rdi
 805752c:	4c 89 d2             	mov    %r10,%rdx
 805752f:	b8 00 00 00 00       	mov    $0x0,%eax
 8057534:	e8 b2 3f 00 00       	callq  805b4eb <TOK_GET>
 8057539:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805753c:	85 c0                	test   %eax,%eax
 805753e:	0f 84 05 00 00 00    	je     8057549 <macro_arg_subst+0xa5>
 8057544:	e9 05 00 00 00       	jmpq   805754e <macro_arg_subst+0xaa>
 8057549:	e9 5d 03 00 00       	jmpq   80578ab <macro_arg_subst+0x407>
 805754e:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8057551:	48 89 c6             	mov    %rax,%rsi
 8057554:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8057558:	48 89 c7             	mov    %rax,%rdi
 805755b:	b8 00 00 00 00       	mov    $0x0,%eax
 8057560:	e8 a9 4a 00 00       	callq  805c00e <sym_find2>
 8057565:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8057569:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805756d:	85 c0                	test   %eax,%eax
 805756f:	0f 84 1b 01 00 00    	je     8057690 <macro_arg_subst+0x1ec>
 8057575:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8057579:	48 89 c7             	mov    %rax,%rdi
 805757c:	b8 00 00 00 00       	mov    $0x0,%eax
 8057581:	e8 41 9e ff ff       	callq  80513c7 <cstr_new>
 8057586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805758a:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8057591:	00 00 00 
 8057594:	48 01 c8             	add    %rcx,%rax
 8057597:	48 8b 08             	mov    (%rax),%rcx
 805759a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 805759e:	b8 00 00 00 00       	mov    $0x0,%eax
 80575a3:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80575a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80575aa:	8b 08                	mov    (%rax),%ecx
 80575ac:	85 c9                	test   %ecx,%ecx
 80575ae:	0f 84 76 00 00 00    	je     805762a <macro_arg_subst+0x186>
 80575b4:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80575b8:	49 89 c2             	mov    %rax,%r10
 80575bb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 80575bf:	48 89 c6             	mov    %rax,%rsi
 80575c2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80575c6:	48 89 c7             	mov    %rax,%rdi
 80575c9:	4c 89 d2             	mov    %r10,%rdx
 80575cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80575d1:	e8 15 3f 00 00       	callq  805b4eb <TOK_GET>
 80575d6:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
 80575da:	48 89 c6             	mov    %rax,%rsi
 80575dd:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80575e0:	48 89 c7             	mov    %rax,%rdi
 80575e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80575e8:	e8 73 42 00 00       	callq  805b860 <check_space>
 80575ed:	85 c0                	test   %eax,%eax
 80575ef:	0f 84 05 00 00 00    	je     80575fa <macro_arg_subst+0x156>
 80575f5:	e9 2b 00 00 00       	jmpq   8057625 <macro_arg_subst+0x181>
 80575fa:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80575fe:	48 89 c6             	mov    %rax,%rsi
 8057601:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8057604:	48 89 c7             	mov    %rax,%rdi
 8057607:	b8 00 00 00 00       	mov    $0x0,%eax
 805760c:	e8 a3 a2 ff ff       	callq  80518b4 <get_tok_str>
 8057611:	48 89 c6             	mov    %rax,%rsi
 8057614:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8057618:	48 89 c7             	mov    %rax,%rdi
 805761b:	b8 00 00 00 00       	mov    $0x0,%eax
 8057620:	e8 b0 9c ff ff       	callq  80512d5 <cstr_cat>
 8057625:	e9 7c ff ff ff       	jmpq   80575a6 <macro_arg_subst+0x102>
 805762a:	8b 45 80             	mov    -0x80(%rbp),%eax
 805762d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8057630:	48 29 c8             	sub    %rcx,%rax
 8057633:	89 45 80             	mov    %eax,-0x80(%rbp)
 8057636:	b8 00 00 00 00       	mov    $0x0,%eax
 805763b:	48 89 c6             	mov    %rax,%rsi
 805763e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8057642:	48 89 c7             	mov    %rax,%rdi
 8057645:	b8 00 00 00 00       	mov    $0x0,%eax
 805764a:	e8 fe 9b ff ff       	callq  805124d <cstr_ccat>
 805764f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8057653:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8057657:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 805765b:	49 89 c2             	mov    %rax,%r10
 805765e:	b8 b5 00 00 00       	mov    $0xb5,%eax
 8057663:	48 89 c6             	mov    %rax,%rsi
 8057666:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 805766a:	48 89 c7             	mov    %rax,%rdi
 805766d:	4c 89 d2             	mov    %r10,%rdx
 8057670:	b8 00 00 00 00       	mov    $0x0,%eax
 8057675:	e8 a4 bf ff ff       	callq  805361e <tok_str_add2>
 805767a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 805767e:	48 89 c7             	mov    %rax,%rdi
 8057681:	b8 00 00 00 00       	mov    $0x0,%eax
 8057686:	e8 71 9d ff ff       	callq  80513fc <cstr_free>
 805768b:	e9 21 00 00 00       	jmpq   80576b1 <macro_arg_subst+0x20d>
 8057690:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8057694:	49 89 c2             	mov    %rax,%r10
 8057697:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805769a:	48 89 c6             	mov    %rax,%rsi
 805769d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 80576a1:	48 89 c7             	mov    %rax,%rdi
 80576a4:	4c 89 d2             	mov    %r10,%rdx
 80576a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80576ac:	e8 6d bf ff ff       	callq  805361e <tok_str_add2>
 80576b1:	e9 ea 01 00 00       	jmpq   80578a0 <macro_arg_subst+0x3fc>
 80576b6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80576b9:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 80576bf:	0f 8c ba 01 00 00    	jl     805787f <macro_arg_subst+0x3db>
 80576c5:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80576c8:	48 89 c6             	mov    %rax,%rsi
 80576cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80576cf:	48 89 c7             	mov    %rax,%rdi
 80576d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80576d7:	e8 32 49 00 00       	callq  805c00e <sym_find2>
 80576dc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80576e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80576e4:	85 c0                	test   %eax,%eax
 80576e6:	0f 84 77 01 00 00    	je     8057863 <macro_arg_subst+0x3bf>
 80576ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80576f0:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80576f7:	00 00 00 
 80576fa:	48 01 c8             	add    %rcx,%rax
 80576fd:	48 8b 08             	mov    (%rax),%rcx
 8057700:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8057704:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8057708:	8b 08                	mov    (%rax),%ecx
 805770a:	81 f9 b6 00 00 00    	cmp    $0xb6,%ecx
 8057710:	0f 84 14 00 00 00    	je     805772a <macro_arg_subst+0x286>
 8057716:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8057719:	81 f8 b6 00 00 00    	cmp    $0xb6,%eax
 805771f:	0f 84 05 00 00 00    	je     805772a <macro_arg_subst+0x286>
 8057725:	e9 07 01 00 00       	jmpq   8057831 <macro_arg_subst+0x38d>
 805772a:	48 8b 05 8f 68 03 00 	mov    0x3688f(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 8057731:	8b 00                	mov    (%rax),%eax
 8057733:	85 c0                	test   %eax,%eax
 8057735:	0f 84 8e 00 00 00    	je     80577c9 <macro_arg_subst+0x325>
 805773b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805773f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8057746:	00 00 00 
 8057749:	48 01 c8             	add    %rcx,%rax
 805774c:	8b 08                	mov    (%rax),%ecx
 805774e:	85 c9                	test   %ecx,%ecx
 8057750:	0f 84 73 00 00 00    	je     80577c9 <macro_arg_subst+0x325>
 8057756:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8057759:	81 f8 b6 00 00 00    	cmp    $0xb6,%eax
 805775f:	0f 85 64 00 00 00    	jne    80577c9 <macro_arg_subst+0x325>
 8057765:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8057768:	83 f8 02             	cmp    $0x2,%eax
 805776b:	0f 8c 58 00 00 00    	jl     80577c9 <macro_arg_subst+0x325>
 8057771:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8057774:	83 e8 02             	sub    $0x2,%eax
 8057777:	48 63 c0             	movslq %eax,%rax
 805777a:	48 89 c1             	mov    %rax,%rcx
 805777d:	48 c1 e1 02          	shl    $0x2,%rcx
 8057781:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8057785:	48 89 ca             	mov    %rcx,%rdx
 8057788:	48 01 d0             	add    %rdx,%rax
 805778b:	8b 08                	mov    (%rax),%ecx
 805778d:	83 f9 2c             	cmp    $0x2c,%ecx
 8057790:	0f 85 33 00 00 00    	jne    80577c9 <macro_arg_subst+0x325>
 8057796:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805779a:	8b 08                	mov    (%rax),%ecx
 805779c:	83 f9 00             	cmp    $0x0,%ecx
 805779f:	0f 85 0e 00 00 00    	jne    80577b3 <macro_arg_subst+0x30f>
 80577a5:	8b 45 a8             	mov    -0x58(%rbp),%eax
 80577a8:	83 e8 02             	sub    $0x2,%eax
 80577ab:	89 45 a8             	mov    %eax,-0x58(%rbp)
 80577ae:	e9 11 00 00 00       	jmpq   80577c4 <macro_arg_subst+0x320>
 80577b3:	8b 45 a8             	mov    -0x58(%rbp),%eax
 80577b6:	48 89 c1             	mov    %rax,%rcx
 80577b9:	83 c0 ff             	add    $0xffffffff,%eax
 80577bc:	89 45 a8             	mov    %eax,-0x58(%rbp)
 80577bf:	e9 05 00 00 00       	jmpq   80577c9 <macro_arg_subst+0x325>
 80577c4:	e9 63 00 00 00       	jmpq   805782c <macro_arg_subst+0x388>
 80577c9:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80577cd:	49 89 c2             	mov    %rax,%r10
 80577d0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 80577d4:	48 89 c6             	mov    %rax,%rsi
 80577d7:	48 8d 85 7c ff ff ff 	lea    -0x84(%rbp),%rax
 80577de:	48 89 c7             	mov    %rax,%rdi
 80577e1:	4c 89 d2             	mov    %r10,%rdx
 80577e4:	b8 00 00 00 00       	mov    $0x0,%eax
 80577e9:	e8 fd 3c 00 00       	callq  805b4eb <TOK_GET>
 80577ee:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 80577f4:	85 c0                	test   %eax,%eax
 80577f6:	0f 84 05 00 00 00    	je     8057801 <macro_arg_subst+0x35d>
 80577fc:	e9 05 00 00 00       	jmpq   8057806 <macro_arg_subst+0x362>
 8057801:	e9 26 00 00 00       	jmpq   805782c <macro_arg_subst+0x388>
 8057806:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 805780a:	49 89 c2             	mov    %rax,%r10
 805780d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 8057813:	48 89 c6             	mov    %rax,%rsi
 8057816:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 805781a:	48 89 c7             	mov    %rax,%rdi
 805781d:	4c 89 d2             	mov    %r10,%rdx
 8057820:	b8 00 00 00 00       	mov    $0x0,%eax
 8057825:	e8 f4 bd ff ff       	callq  805361e <tok_str_add2>
 805782a:	eb 9d                	jmp    80577c9 <macro_arg_subst+0x325>
 805782c:	e9 2d 00 00 00       	jmpq   805785e <macro_arg_subst+0x3ba>
 8057831:	b8 00 00 00 00       	mov    $0x0,%eax
 8057836:	49 89 c3             	mov    %rax,%r11
 8057839:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805783d:	49 89 c2             	mov    %rax,%r10
 8057840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8057844:	48 89 c6             	mov    %rax,%rsi
 8057847:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 805784b:	48 89 c7             	mov    %rax,%rdi
 805784e:	4c 89 d2             	mov    %r10,%rdx
 8057851:	4c 89 d9             	mov    %r11,%rcx
 8057854:	b8 00 00 00 00       	mov    $0x0,%eax
 8057859:	e8 55 0b 00 00       	callq  80583b3 <macro_subst>
 805785e:	e9 17 00 00 00       	jmpq   805787a <macro_arg_subst+0x3d6>
 8057863:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8057866:	48 89 c6             	mov    %rax,%rsi
 8057869:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 805786d:	48 89 c7             	mov    %rax,%rdi
 8057870:	b8 00 00 00 00       	mov    $0x0,%eax
 8057875:	e8 00 bd ff ff       	callq  805357a <tok_str_add>
 805787a:	e9 21 00 00 00       	jmpq   80578a0 <macro_arg_subst+0x3fc>
 805787f:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8057883:	49 89 c2             	mov    %rax,%r10
 8057886:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8057889:	48 89 c6             	mov    %rax,%rsi
 805788c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 8057890:	48 89 c7             	mov    %rax,%rdi
 8057893:	4c 89 d2             	mov    %r10,%rdx
 8057896:	b8 00 00 00 00       	mov    $0x0,%eax
 805789b:	e8 7e bd ff ff       	callq  805361e <tok_str_add2>
 80578a0:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80578a3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80578a6:	e9 29 fc ff ff       	jmpq   80574d4 <macro_arg_subst+0x30>
 80578ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80578b0:	48 89 c6             	mov    %rax,%rsi
 80578b3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 80578b7:	48 89 c7             	mov    %rax,%rdi
 80578ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80578bf:	e8 b6 bc ff ff       	callq  805357a <tok_str_add>
 80578c4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80578c8:	e9 00 00 00 00       	jmpq   80578cd <macro_arg_subst+0x429>
 80578cd:	c9                   	leaveq 
 80578ce:	c3                   	retq   

00000000080578cf <macro_subst_tok>:
 80578cf:	55                   	push   %rbp
 80578d0:	48 89 e5             	mov    %rsp,%rbp
 80578d3:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
 80578da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80578de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80578e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80578e6:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80578ea:	48 8b 05 37 66 03 00 	mov    0x36637(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80578f1:	8b 00                	mov    (%rax),%eax
 80578f3:	81 f8 46 01 00 00    	cmp    $0x146,%eax
 80578f9:	0f 85 65 00 00 00    	jne    8057964 <macro_subst_tok+0x95>
 80578ff:	48 8b 05 9a 65 03 00 	mov    0x3659a(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057906:	48 8b 00             	mov    (%rax),%rax
 8057909:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8057910:	00 00 00 
 8057913:	48 01 c8             	add    %rcx,%rax
 8057916:	8b 08                	mov    (%rax),%ecx
 8057918:	49 89 cb             	mov    %rcx,%r11
 805791b:	48 8d 05 d2 3d 03 00 	lea    0x33dd2(%rip),%rax        # 808b6f4 <L.159>
 8057922:	49 89 c2             	mov    %rax,%r10
 8057925:	b8 20 00 00 00       	mov    $0x20,%eax
 805792a:	48 89 c6             	mov    %rax,%rsi
 805792d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 8057934:	48 89 c7             	mov    %rax,%rdi
 8057937:	4c 89 d2             	mov    %r10,%rdx
 805793a:	4c 89 d9             	mov    %r11,%rcx
 805793d:	b8 00 00 00 00       	mov    $0x0,%eax
 8057942:	e8 f9 02 03 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8057947:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 805794e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8057952:	b8 ce 00 00 00       	mov    $0xce,%eax
 8057957:	89 45 b0             	mov    %eax,-0x50(%rbp)
 805795a:	e9 e4 01 00 00       	jmpq   8057b43 <macro_subst_tok+0x274>
 805795f:	e9 43 0a 00 00       	jmpq   80583a7 <macro_subst_tok+0xad8>
 8057964:	48 8b 05 bd 65 03 00 	mov    0x365bd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805796b:	8b 00                	mov    (%rax),%eax
 805796d:	81 f8 47 01 00 00    	cmp    $0x147,%eax
 8057973:	0f 85 25 00 00 00    	jne    805799e <macro_subst_tok+0xcf>
 8057979:	48 8b 05 20 65 03 00 	mov    0x36520(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057980:	48 8b 00             	mov    (%rax),%rax
 8057983:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 805798a:	00 00 00 
 805798d:	48 01 c8             	add    %rcx,%rax
 8057990:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8057994:	e9 a2 01 00 00       	jmpq   8057b3b <macro_subst_tok+0x26c>
 8057999:	e9 09 0a 00 00       	jmpq   80583a7 <macro_subst_tok+0xad8>
 805799e:	48 8b 05 83 65 03 00 	mov    0x36583(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80579a5:	8b 00                	mov    (%rax),%eax
 80579a7:	81 f8 48 01 00 00    	cmp    $0x148,%eax
 80579ad:	0f 84 1a 00 00 00    	je     80579cd <macro_subst_tok+0xfe>
 80579b3:	48 8b 05 6e 65 03 00 	mov    0x3656e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80579ba:	8b 00                	mov    (%rax),%eax
 80579bc:	81 f8 49 01 00 00    	cmp    $0x149,%eax
 80579c2:	0f 84 05 00 00 00    	je     80579cd <macro_subst_tok+0xfe>
 80579c8:	e9 0c 02 00 00       	jmpq   8057bd9 <macro_subst_tok+0x30a>
 80579cd:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
 80579d4:	48 89 c7             	mov    %rax,%rdi
 80579d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80579dc:	e8 c2 2a ff ff       	callq  804a4a3 <time>
 80579e1:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
 80579e8:	48 89 c7             	mov    %rax,%rdi
 80579eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80579f0:	e8 cb 02 03 00       	callq  8087cc0 <__preinit_array_end+0x220>
 80579f5:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 80579fc:	48 8b 05 25 65 03 00 	mov    0x36525(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057a03:	8b 00                	mov    (%rax),%eax
 8057a05:	81 f8 48 01 00 00    	cmp    $0x148,%eax
 8057a0b:	0f 85 a7 00 00 00    	jne    8057ab8 <macro_subst_tok+0x1e9>
 8057a11:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 8057a18:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8057a1f:	00 00 00 
 8057a22:	48 01 c8             	add    %rcx,%rax
 8057a25:	8b 08                	mov    (%rax),%ecx
 8057a27:	48 63 c9             	movslq %ecx,%rcx
 8057a2a:	48 89 c8             	mov    %rcx,%rax
 8057a2d:	48 c1 e0 02          	shl    $0x2,%rax
 8057a31:	48 8d 0d 8c 3c 03 00 	lea    0x33c8c(%rip),%rcx        # 808b6c4 <ab_month_name>
 8057a38:	48 89 c2             	mov    %rax,%rdx
 8057a3b:	48 01 d1             	add    %rdx,%rcx
 8057a3e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 8057a45:	48 ba 0c 00 00 00 00 	movabs $0xc,%rdx
 8057a4c:	00 00 00 
 8057a4f:	48 01 d0             	add    %rdx,%rax
 8057a52:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
 8057a59:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
 8057a60:	48 b9 14 00 00 00 00 	movabs $0x14,%rcx
 8057a67:	00 00 00 
 8057a6a:	48 01 ca             	add    %rcx,%rdx
 8057a6d:	8b 0a                	mov    (%rdx),%ecx
 8057a6f:	81 c1 6c 07 00 00    	add    $0x76c,%ecx
 8057a75:	49 89 c9             	mov    %rcx,%r9
 8057a78:	8b 08                	mov    (%rax),%ecx
 8057a7a:	49 89 c8             	mov    %rcx,%r8
 8057a7d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8057a84:	49 89 c3             	mov    %rax,%r11
 8057a87:	48 8d 05 69 3c 03 00 	lea    0x33c69(%rip),%rax        # 808b6f7 <L.160>
 8057a8e:	49 89 c2             	mov    %rax,%r10
 8057a91:	b8 20 00 00 00       	mov    $0x20,%eax
 8057a96:	48 89 c6             	mov    %rax,%rsi
 8057a99:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 8057aa0:	48 89 c7             	mov    %rax,%rdi
 8057aa3:	4c 89 d2             	mov    %r10,%rdx
 8057aa6:	4c 89 d9             	mov    %r11,%rcx
 8057aa9:	b8 00 00 00 00       	mov    $0x0,%eax
 8057aae:	e8 8d 01 03 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8057ab3:	e9 78 00 00 00       	jmpq   8057b30 <macro_subst_tok+0x261>
 8057ab8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 8057abf:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8057ac6:	00 00 00 
 8057ac9:	48 01 c8             	add    %rcx,%rax
 8057acc:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
 8057ad3:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8057ada:	00 00 00 
 8057add:	48 01 d1             	add    %rdx,%rcx
 8057ae0:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
 8057ae7:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 8057aee:	8b 02                	mov    (%rdx),%eax
 8057af0:	49 89 c1             	mov    %rax,%r9
 8057af3:	8b 01                	mov    (%rcx),%eax
 8057af5:	49 89 c0             	mov    %rax,%r8
 8057af8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
 8057aff:	8b 00                	mov    (%rax),%eax
 8057b01:	49 89 c3             	mov    %rax,%r11
 8057b04:	48 8d 05 f6 3b 03 00 	lea    0x33bf6(%rip),%rax        # 808b701 <L.161>
 8057b0b:	49 89 c2             	mov    %rax,%r10
 8057b0e:	b8 20 00 00 00       	mov    $0x20,%eax
 8057b13:	48 89 c6             	mov    %rax,%rsi
 8057b16:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 8057b1d:	48 89 c7             	mov    %rax,%rdi
 8057b20:	4c 89 d2             	mov    %r10,%rdx
 8057b23:	4c 89 d9             	mov    %r11,%rcx
 8057b26:	b8 00 00 00 00       	mov    $0x0,%eax
 8057b2b:	e8 10 01 03 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8057b30:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 8057b37:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8057b3b:	b8 b5 00 00 00       	mov    $0xb5,%eax
 8057b40:	89 45 b0             	mov    %eax,-0x50(%rbp)
 8057b43:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8057b4a:	48 89 c7             	mov    %rax,%rdi
 8057b4d:	b8 00 00 00 00       	mov    $0x0,%eax
 8057b52:	e8 70 98 ff ff       	callq  80513c7 <cstr_new>
 8057b57:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 8057b5b:	48 89 c6             	mov    %rax,%rsi
 8057b5e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8057b65:	48 89 c7             	mov    %rax,%rdi
 8057b68:	b8 00 00 00 00       	mov    $0x0,%eax
 8057b6d:	e8 63 97 ff ff       	callq  80512d5 <cstr_cat>
 8057b72:	b8 00 00 00 00       	mov    $0x0,%eax
 8057b77:	48 89 c6             	mov    %rax,%rsi
 8057b7a:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8057b81:	48 89 c7             	mov    %rax,%rdi
 8057b84:	b8 00 00 00 00       	mov    $0x0,%eax
 8057b89:	e8 bf 96 ff ff       	callq  805124d <cstr_ccat>
 8057b8e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8057b95:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 8057b9c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 8057ba3:	49 89 c2             	mov    %rax,%r10
 8057ba6:	8b 45 b0             	mov    -0x50(%rbp),%eax
 8057ba9:	48 89 c6             	mov    %rax,%rsi
 8057bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8057bb0:	48 89 c7             	mov    %rax,%rdi
 8057bb3:	4c 89 d2             	mov    %r10,%rdx
 8057bb6:	b8 00 00 00 00       	mov    $0x0,%eax
 8057bbb:	e8 5e ba ff ff       	callq  805361e <tok_str_add2>
 8057bc0:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8057bc7:	48 89 c7             	mov    %rax,%rdi
 8057bca:	b8 00 00 00 00       	mov    $0x0,%eax
 8057bcf:	e8 28 98 ff ff       	callq  80513fc <cstr_free>
 8057bd4:	e9 ce 07 00 00       	jmpq   80583a7 <macro_subst_tok+0xad8>
 8057bd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8057bdd:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8057be4:	00 00 00 
 8057be7:	48 01 c8             	add    %rcx,%rax
 8057bea:	48 8b 08             	mov    (%rax),%rcx
 8057bed:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 8057bf1:	b8 00 00 00 00       	mov    $0x0,%eax
 8057bf6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8057bf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8057bfd:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8057c04:	00 00 00 
 8057c07:	48 01 c8             	add    %rcx,%rax
 8057c0a:	8b 08                	mov    (%rax),%ecx
 8057c0c:	83 f9 01             	cmp    $0x1,%ecx
 8057c0f:	0f 85 de 06 00 00    	jne    80582f3 <macro_subst_tok+0xa24>
 8057c15:	48 8b 05 54 63 03 00 	mov    0x36354(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8057c1c:	48 8b 00             	mov    (%rax),%rax
 8057c1f:	85 c0                	test   %eax,%eax
 8057c21:	0f 84 02 01 00 00    	je     8057d29 <macro_subst_tok+0x45a>
 8057c27:	48 8b 05 42 63 03 00 	mov    0x36342(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8057c2e:	48 8b 00             	mov    (%rax),%rax
 8057c31:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8057c35:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8057c39:	8b 08                	mov    (%rax),%ecx
 8057c3b:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
 8057c3e:	48 89 cf             	mov    %rcx,%rdi
 8057c41:	b8 00 00 00 00       	mov    $0x0,%eax
 8057c46:	e8 d6 3d 00 00       	callq  805ba21 <is_space>
 8057c4b:	85 c0                	test   %eax,%eax
 8057c4d:	0f 85 15 00 00 00    	jne    8057c68 <macro_subst_tok+0x399>
 8057c53:	b8 0a 00 00 00       	mov    $0xa,%eax
 8057c58:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 8057c5b:	39 c8                	cmp    %ecx,%eax
 8057c5d:	0f 84 05 00 00 00    	je     8057c68 <macro_subst_tok+0x399>
 8057c63:	e9 17 00 00 00       	jmpq   8057c7f <macro_subst_tok+0x3b0>
 8057c68:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8057c6c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8057c73:	00 00 00 
 8057c76:	48 01 c8             	add    %rcx,%rax
 8057c79:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8057c7d:	eb b6                	jmp    8057c35 <macro_subst_tok+0x366>
 8057c7f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 8057c82:	83 f8 00             	cmp    $0x0,%eax
 8057c85:	0f 85 99 00 00 00    	jne    8057d24 <macro_subst_tok+0x455>
 8057c8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8057c8f:	85 c0                	test   %eax,%eax
 8057c91:	0f 84 8d 00 00 00    	je     8057d24 <macro_subst_tok+0x455>
 8057c97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8057c9b:	48 8b 08             	mov    (%rax),%rcx
 8057c9e:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
 8057ca5:	b8 00 00 00 00       	mov    $0x0,%eax
 8057caa:	4c 8b 1d bf 62 03 00 	mov    0x362bf(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8057cb1:	49 89 03             	mov    %rax,(%r11)
 8057cb4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 8057cbb:	85 c0                	test   %eax,%eax
 8057cbd:	0f 84 4e 00 00 00    	je     8057d11 <macro_subst_tok+0x442>
 8057cc3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 8057cca:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8057cd1:	00 00 00 
 8057cd4:	48 01 c8             	add    %rcx,%rax
 8057cd7:	48 8b 08             	mov    (%rax),%rcx
 8057cda:	4c 8b 1d 8f 62 03 00 	mov    0x3628f(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8057ce1:	49 89 0b             	mov    %rcx,(%r11)
 8057ce4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 8057ceb:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8057cf2:	00 00 00 
 8057cf5:	48 01 c8             	add    %rcx,%rax
 8057cf8:	b9 00 00 00 00       	mov    $0x0,%ecx
 8057cfd:	48 89 08             	mov    %rcx,(%rax)
 8057d00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8057d04:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
 8057d0b:	48 8b 11             	mov    (%rcx),%rdx
 8057d0e:	48 89 10             	mov    %rdx,(%rax)
 8057d11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8057d15:	48 8b 08             	mov    (%rax),%rcx
 8057d18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057d1d:	89 01                	mov    %eax,(%rcx)
 8057d1f:	e9 f1 fe ff ff       	jmpq   8057c15 <macro_subst_tok+0x346>
 8057d24:	e9 b2 01 00 00       	jmpq   8057edb <macro_subst_tok+0x60c>
 8057d29:	48 8b 05 70 61 03 00 	mov    0x36170(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057d30:	48 8b 00             	mov    (%rax),%rax
 8057d33:	48 8b 08             	mov    (%rax),%rcx
 8057d36:	0f b6 01             	movzbl (%rcx),%eax
 8057d39:	4c 8b 1d c8 61 03 00 	mov    0x361c8(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8057d40:	41 89 03             	mov    %eax,(%r11)
 8057d43:	48 8b 05 be 61 03 00 	mov    0x361be(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8057d4a:	8b 00                	mov    (%rax),%eax
 8057d4c:	48 89 c7             	mov    %rax,%rdi
 8057d4f:	b8 00 00 00 00       	mov    $0x0,%eax
 8057d54:	e8 c8 3c 00 00       	callq  805ba21 <is_space>
 8057d59:	85 c0                	test   %eax,%eax
 8057d5b:	0f 85 29 00 00 00    	jne    8057d8a <macro_subst_tok+0x4bb>
 8057d61:	48 8b 05 a0 61 03 00 	mov    0x361a0(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8057d68:	8b 00                	mov    (%rax),%eax
 8057d6a:	83 f8 0a             	cmp    $0xa,%eax
 8057d6d:	0f 84 17 00 00 00    	je     8057d8a <macro_subst_tok+0x4bb>
 8057d73:	48 8b 05 8e 61 03 00 	mov    0x3618e(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8057d7a:	8b 00                	mov    (%rax),%eax
 8057d7c:	83 f8 2f             	cmp    $0x2f,%eax
 8057d7f:	0f 84 05 00 00 00    	je     8057d8a <macro_subst_tok+0x4bb>
 8057d85:	e9 45 01 00 00       	jmpq   8057ecf <macro_subst_tok+0x600>
 8057d8a:	48 8b 05 77 61 03 00 	mov    0x36177(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8057d91:	8b 00                	mov    (%rax),%eax
 8057d93:	83 f8 2f             	cmp    $0x2f,%eax
 8057d96:	0f 85 24 01 00 00    	jne    8057ec0 <macro_subst_tok+0x5f1>
 8057d9c:	48 8b 05 fd 60 03 00 	mov    0x360fd(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057da3:	48 8b 00             	mov    (%rax),%rax
 8057da6:	48 8b 08             	mov    (%rax),%rcx
 8057da9:	48 89 8d f8 fe ff ff 	mov    %rcx,-0x108(%rbp)
 8057db0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8057db7:	48 89 c1             	mov    %rax,%rcx
 8057dba:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8057dc1:	00 00 00 
 8057dc4:	48 01 d0             	add    %rdx,%rax
 8057dc7:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 8057dce:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8057dd5:	0f b6 08             	movzbl (%rax),%ecx
 8057dd8:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
 8057dde:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 8057de4:	83 f8 5c             	cmp    $0x5c,%eax
 8057de7:	0f 85 2e 00 00 00    	jne    8057e1b <macro_subst_tok+0x54c>
 8057ded:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8057df4:	48 89 c7             	mov    %rax,%rdi
 8057df7:	b8 00 00 00 00       	mov    $0x0,%eax
 8057dfc:	e8 83 a4 ff ff       	callq  8052284 <handle_stray1>
 8057e01:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
 8057e07:	48 8b 05 92 60 03 00 	mov    0x36092(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057e0e:	48 8b 00             	mov    (%rax),%rax
 8057e11:	48 8b 08             	mov    (%rax),%rcx
 8057e14:	48 89 8d f8 fe ff ff 	mov    %rcx,-0x108(%rbp)
 8057e1b:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 8057e21:	83 f8 2a             	cmp    $0x2a,%eax
 8057e24:	0f 85 41 00 00 00    	jne    8057e6b <macro_subst_tok+0x59c>
 8057e2a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8057e31:	48 89 c7             	mov    %rax,%rdi
 8057e34:	b8 00 00 00 00       	mov    $0x0,%eax
 8057e39:	e8 00 a8 ff ff       	callq  805263e <parse_comment>
 8057e3e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 8057e45:	48 8b 05 54 60 03 00 	mov    0x36054(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057e4c:	48 8b 00             	mov    (%rax),%rax
 8057e4f:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
 8057e56:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8057e5d:	00 00 00 
 8057e60:	48 29 d1             	sub    %rdx,%rcx
 8057e63:	48 89 08             	mov    %rcx,(%rax)
 8057e66:	e9 55 00 00 00       	jmpq   8057ec0 <macro_subst_tok+0x5f1>
 8057e6b:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 8057e71:	83 f8 2f             	cmp    $0x2f,%eax
 8057e74:	0f 85 41 00 00 00    	jne    8057ebb <macro_subst_tok+0x5ec>
 8057e7a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8057e81:	48 89 c7             	mov    %rax,%rdi
 8057e84:	b8 00 00 00 00       	mov    $0x0,%eax
 8057e89:	e8 fb a4 ff ff       	callq  8052389 <parse_line_comment>
 8057e8e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 8057e95:	48 8b 05 04 60 03 00 	mov    0x36004(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8057e9c:	48 8b 00             	mov    (%rax),%rax
 8057e9f:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
 8057ea6:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8057ead:	00 00 00 
 8057eb0:	48 29 d1             	sub    %rdx,%rcx
 8057eb3:	48 89 08             	mov    %rcx,(%rax)
 8057eb6:	e9 05 00 00 00       	jmpq   8057ec0 <macro_subst_tok+0x5f1>
 8057ebb:	e9 0f 00 00 00       	jmpq   8057ecf <macro_subst_tok+0x600>
 8057ec0:	b8 00 00 00 00       	mov    $0x0,%eax
 8057ec5:	e8 8c a4 ff ff       	callq  8052356 <minp>
 8057eca:	e9 74 fe ff ff       	jmpq   8057d43 <macro_subst_tok+0x474>
 8057ecf:	48 8b 05 32 60 03 00 	mov    0x36032(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8057ed6:	8b 00                	mov    (%rax),%eax
 8057ed8:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 8057edb:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 8057ede:	83 f8 28             	cmp    $0x28,%eax
 8057ee1:	0f 84 0a 00 00 00    	je     8057ef1 <macro_subst_tok+0x622>
 8057ee7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057eec:	e9 c0 04 00 00       	jmpq   80583b1 <macro_subst_tok+0xae2>
 8057ef1:	b8 00 00 00 00       	mov    $0x0,%eax
 8057ef6:	e8 74 f5 ff ff       	callq  805746f <next_nomacro>
 8057efb:	b8 00 00 00 00       	mov    $0x0,%eax
 8057f00:	e8 6a f5 ff ff       	callq  805746f <next_nomacro>
 8057f05:	b8 00 00 00 00       	mov    $0x0,%eax
 8057f0a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8057f0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8057f12:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8057f19:	00 00 00 
 8057f1c:	48 01 c8             	add    %rcx,%rax
 8057f1f:	48 8b 08             	mov    (%rax),%rcx
 8057f22:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8057f26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8057f2a:	85 c0                	test   %eax,%eax
 8057f2c:	0f 84 05 00 00 00    	je     8057f37 <macro_subst_tok+0x668>
 8057f32:	e9 28 00 00 00       	jmpq   8057f5f <macro_subst_tok+0x690>
 8057f37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8057f3b:	85 c0                	test   %eax,%eax
 8057f3d:	0f 84 05 00 00 00    	je     8057f48 <macro_subst_tok+0x679>
 8057f43:	e9 17 00 00 00       	jmpq   8057f5f <macro_subst_tok+0x690>
 8057f48:	48 8b 05 d9 5f 03 00 	mov    0x35fd9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057f4f:	8b 00                	mov    (%rax),%eax
 8057f51:	83 f8 29             	cmp    $0x29,%eax
 8057f54:	0f 85 05 00 00 00    	jne    8057f5f <macro_subst_tok+0x690>
 8057f5a:	e9 c0 02 00 00       	jmpq   805821f <macro_subst_tok+0x950>
 8057f5f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8057f63:	85 c0                	test   %eax,%eax
 8057f65:	0f 84 05 00 00 00    	je     8057f70 <macro_subst_tok+0x6a1>
 8057f6b:	e9 32 00 00 00       	jmpq   8057fa2 <macro_subst_tok+0x6d3>
 8057f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8057f74:	b9 00 00 00 00       	mov    $0x0,%ecx
 8057f79:	48 89 ce             	mov    %rcx,%rsi
 8057f7c:	8b 08                	mov    (%rax),%ecx
 8057f7e:	48 89 cf             	mov    %rcx,%rdi
 8057f81:	b8 00 00 00 00       	mov    $0x0,%eax
 8057f86:	e8 29 99 ff ff       	callq  80518b4 <get_tok_str>
 8057f8b:	48 89 c6             	mov    %rax,%rsi
 8057f8e:	48 8d 05 7b 37 03 00 	lea    0x3377b(%rip),%rax        # 808b710 <L.162>
 8057f95:	48 89 c7             	mov    %rax,%rdi
 8057f98:	b8 00 00 00 00       	mov    $0x0,%eax
 8057f9d:	e8 25 57 ff ff       	callq  804d6c7 <tcc_error>
 8057fa2:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 8057fa6:	48 89 c7             	mov    %rax,%rdi
 8057fa9:	b8 00 00 00 00       	mov    $0x0,%eax
 8057fae:	e8 9f b4 ff ff       	callq  8053452 <tok_str_new>
 8057fb3:	b8 00 00 00 00       	mov    $0x0,%eax
 8057fb8:	89 45 ac             	mov    %eax,-0x54(%rbp)
 8057fbb:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8057fbe:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8057fc1:	83 f8 00             	cmp    $0x0,%eax
 8057fc4:	0f 8f 4e 00 00 00    	jg     8058018 <macro_subst_tok+0x749>
 8057fca:	48 8b 05 57 5f 03 00 	mov    0x35f57(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057fd1:	8b 00                	mov    (%rax),%eax
 8057fd3:	83 f8 29             	cmp    $0x29,%eax
 8057fd6:	0f 84 37 00 00 00    	je     8058013 <macro_subst_tok+0x744>
 8057fdc:	48 8b 05 45 5f 03 00 	mov    0x35f45(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8057fe3:	8b 00                	mov    (%rax),%eax
 8057fe5:	83 f8 2c             	cmp    $0x2c,%eax
 8057fe8:	0f 85 20 00 00 00    	jne    805800e <macro_subst_tok+0x73f>
 8057fee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8057ff2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8057ff9:	00 00 00 
 8057ffc:	48 01 c8             	add    %rcx,%rax
 8057fff:	8b 08                	mov    (%rax),%ecx
 8058001:	85 c9                	test   %ecx,%ecx
 8058003:	0f 85 05 00 00 00    	jne    805800e <macro_subst_tok+0x73f>
 8058009:	e9 05 00 00 00       	jmpq   8058013 <macro_subst_tok+0x744>
 805800e:	e9 05 00 00 00       	jmpq   8058018 <macro_subst_tok+0x749>
 8058013:	e9 d7 00 00 00       	jmpq   80580ef <macro_subst_tok+0x820>
 8058018:	48 8b 05 09 5f 03 00 	mov    0x35f09(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805801f:	8b 00                	mov    (%rax),%eax
 8058021:	83 f8 ff             	cmp    $0xffffffff,%eax
 8058024:	0f 84 c5 00 00 00    	je     80580ef <macro_subst_tok+0x820>
 805802a:	48 8b 05 f7 5e 03 00 	mov    0x35ef7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058031:	8b 00                	mov    (%rax),%eax
 8058033:	83 f8 28             	cmp    $0x28,%eax
 8058036:	0f 85 11 00 00 00    	jne    805804d <macro_subst_tok+0x77e>
 805803c:	8b 45 c0             	mov    -0x40(%rbp),%eax
 805803f:	48 89 c1             	mov    %rax,%rcx
 8058042:	83 c0 01             	add    $0x1,%eax
 8058045:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8058048:	e9 1e 00 00 00       	jmpq   805806b <macro_subst_tok+0x79c>
 805804d:	48 8b 05 d4 5e 03 00 	mov    0x35ed4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058054:	8b 00                	mov    (%rax),%eax
 8058056:	83 f8 29             	cmp    $0x29,%eax
 8058059:	0f 85 0c 00 00 00    	jne    805806b <macro_subst_tok+0x79c>
 805805f:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8058062:	48 89 c1             	mov    %rax,%rcx
 8058065:	83 c0 ff             	add    $0xffffffff,%eax
 8058068:	89 45 c0             	mov    %eax,-0x40(%rbp)
 805806b:	48 8b 05 b6 5e 03 00 	mov    0x35eb6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058072:	8b 00                	mov    (%rax),%eax
 8058074:	83 f8 0a             	cmp    $0xa,%eax
 8058077:	0f 85 0f 00 00 00    	jne    805808c <macro_subst_tok+0x7bd>
 805807d:	b8 20 00 00 00       	mov    $0x20,%eax
 8058082:	4c 8b 1d 9f 5e 03 00 	mov    0x35e9f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058089:	41 89 03             	mov    %eax,(%r11)
 805808c:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
 8058090:	48 89 c6             	mov    %rax,%rsi
 8058093:	48 8b 05 8e 5e 03 00 	mov    0x35e8e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805809a:	8b 00                	mov    (%rax),%eax
 805809c:	48 89 c7             	mov    %rax,%rdi
 805809f:	b8 00 00 00 00       	mov    $0x0,%eax
 80580a4:	e8 b7 37 00 00       	callq  805b860 <check_space>
 80580a9:	85 c0                	test   %eax,%eax
 80580ab:	0f 84 05 00 00 00    	je     80580b6 <macro_subst_tok+0x7e7>
 80580b1:	e9 2a 00 00 00       	jmpq   80580e0 <macro_subst_tok+0x811>
 80580b6:	48 8b 05 eb 5e 03 00 	mov    0x35eeb(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80580bd:	49 89 c2             	mov    %rax,%r10
 80580c0:	48 8b 05 61 5e 03 00 	mov    0x35e61(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80580c7:	8b 00                	mov    (%rax),%eax
 80580c9:	48 89 c6             	mov    %rax,%rsi
 80580cc:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 80580d0:	48 89 c7             	mov    %rax,%rdi
 80580d3:	4c 89 d2             	mov    %r10,%rdx
 80580d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80580db:	e8 3e b5 ff ff       	callq  805361e <tok_str_add2>
 80580e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80580e5:	e8 c9 f2 ff ff       	callq  80573b3 <next_nomacro_spc>
 80580ea:	e9 cf fe ff ff       	jmpq   8057fbe <macro_subst_tok+0x6ef>
 80580ef:	8b 45 90             	mov    -0x70(%rbp),%eax
 80580f2:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 80580f5:	48 29 c8             	sub    %rcx,%rax
 80580f8:	89 45 90             	mov    %eax,-0x70(%rbp)
 80580fb:	b8 00 00 00 00       	mov    $0x0,%eax
 8058100:	48 89 c6             	mov    %rax,%rsi
 8058103:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 8058107:	48 89 c7             	mov    %rax,%rdi
 805810a:	b8 00 00 00 00       	mov    $0x0,%eax
 805810f:	e8 66 b4 ff ff       	callq  805357a <tok_str_add>
 8058114:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8058118:	8b 08                	mov    (%rax),%ecx
 805811a:	81 e1 ff ff ff df    	and    $0xdfffffff,%ecx
 8058120:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8058124:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 805812b:	00 00 00 
 805812e:	48 01 d0             	add    %rdx,%rax
 8058131:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 8058138:	00 00 00 
 805813b:	49 89 d3             	mov    %rdx,%r11
 805813e:	8b 10                	mov    (%rax),%edx
 8058140:	49 89 d2             	mov    %rdx,%r10
 8058143:	48 89 ce             	mov    %rcx,%rsi
 8058146:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 805814a:	48 89 c7             	mov    %rax,%rdi
 805814d:	4c 89 d2             	mov    %r10,%rdx
 8058150:	4c 89 d9             	mov    %r11,%rcx
 8058153:	b8 00 00 00 00       	mov    $0x0,%eax
 8058158:	e8 e0 3c 00 00       	callq  805be3d <sym_push2>
 805815d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8058161:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8058165:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805816c:	00 00 00 
 805816f:	48 01 c8             	add    %rcx,%rax
 8058172:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 8058176:	48 89 08             	mov    %rcx,(%rax)
 8058179:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805817d:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8058184:	00 00 00 
 8058187:	48 01 c8             	add    %rcx,%rax
 805818a:	48 8b 08             	mov    (%rax),%rcx
 805818d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8058191:	48 8b 05 90 5d 03 00 	mov    0x35d90(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058198:	8b 00                	mov    (%rax),%eax
 805819a:	83 f8 29             	cmp    $0x29,%eax
 805819d:	0f 85 47 00 00 00    	jne    80581ea <macro_subst_tok+0x91b>
 80581a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80581a7:	85 c0                	test   %eax,%eax
 80581a9:	0f 84 36 00 00 00    	je     80581e5 <macro_subst_tok+0x916>
 80581af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80581b3:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80581ba:	00 00 00 
 80581bd:	48 01 c8             	add    %rcx,%rax
 80581c0:	8b 08                	mov    (%rax),%ecx
 80581c2:	85 c9                	test   %ecx,%ecx
 80581c4:	0f 84 1b 00 00 00    	je     80581e5 <macro_subst_tok+0x916>
 80581ca:	48 8b 05 ef 5d 03 00 	mov    0x35def(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 80581d1:	8b 00                	mov    (%rax),%eax
 80581d3:	85 c0                	test   %eax,%eax
 80581d5:	0f 84 0a 00 00 00    	je     80581e5 <macro_subst_tok+0x916>
 80581db:	e9 46 fd ff ff       	jmpq   8057f26 <macro_subst_tok+0x657>
 80581e0:	e9 05 00 00 00       	jmpq   80581ea <macro_subst_tok+0x91b>
 80581e5:	e9 35 00 00 00       	jmpq   805821f <macro_subst_tok+0x950>
 80581ea:	48 8b 05 37 5d 03 00 	mov    0x35d37(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80581f1:	8b 00                	mov    (%rax),%eax
 80581f3:	83 f8 2c             	cmp    $0x2c,%eax
 80581f6:	0f 84 14 00 00 00    	je     8058210 <macro_subst_tok+0x941>
 80581fc:	48 8d 05 30 35 03 00 	lea    0x33530(%rip),%rax        # 808b733 <L.163>
 8058203:	48 89 c7             	mov    %rax,%rdi
 8058206:	b8 00 00 00 00       	mov    $0x0,%eax
 805820b:	e8 42 8f ff ff       	callq  8051152 <expect>
 8058210:	b8 00 00 00 00       	mov    $0x0,%eax
 8058215:	e8 55 f2 ff ff       	callq  805746f <next_nomacro>
 805821a:	e9 07 fd ff ff       	jmpq   8057f26 <macro_subst_tok+0x657>
 805821f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8058223:	85 c0                	test   %eax,%eax
 8058225:	0f 84 32 00 00 00    	je     805825d <macro_subst_tok+0x98e>
 805822b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805822f:	b9 00 00 00 00       	mov    $0x0,%ecx
 8058234:	48 89 ce             	mov    %rcx,%rsi
 8058237:	8b 08                	mov    (%rax),%ecx
 8058239:	48 89 cf             	mov    %rcx,%rdi
 805823c:	b8 00 00 00 00       	mov    $0x0,%eax
 8058241:	e8 6e 96 ff ff       	callq  80518b4 <get_tok_str>
 8058246:	48 89 c6             	mov    %rax,%rsi
 8058249:	48 8d 05 e5 34 03 00 	lea    0x334e5(%rip),%rax        # 808b735 <L.164>
 8058250:	48 89 c7             	mov    %rax,%rdi
 8058253:	b8 00 00 00 00       	mov    $0x0,%eax
 8058258:	e8 6a 54 ff ff       	callq  804d6c7 <tcc_error>
 805825d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8058261:	49 89 c2             	mov    %rax,%r10
 8058264:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8058268:	48 89 c6             	mov    %rax,%rsi
 805826b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805826f:	48 89 c7             	mov    %rax,%rdi
 8058272:	4c 89 d2             	mov    %r10,%rdx
 8058275:	b8 00 00 00 00       	mov    $0x0,%eax
 805827a:	e8 25 f2 ff ff       	callq  80574a4 <macro_arg_subst>
 805827f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8058283:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8058287:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805828b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805828f:	85 c0                	test   %eax,%eax
 8058291:	0f 84 54 00 00 00    	je     80582eb <macro_subst_tok+0xa1c>
 8058297:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805829b:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80582a2:	00 00 00 
 80582a5:	48 01 c8             	add    %rcx,%rax
 80582a8:	48 8b 08             	mov    (%rax),%rcx
 80582ab:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 80582af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80582b3:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80582ba:	00 00 00 
 80582bd:	48 01 c8             	add    %rcx,%rax
 80582c0:	48 8b 08             	mov    (%rax),%rcx
 80582c3:	48 89 cf             	mov    %rcx,%rdi
 80582c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80582cb:	e8 e7 b1 ff ff       	callq  80534b7 <tok_str_free>
 80582d0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80582d4:	48 89 c7             	mov    %rax,%rdi
 80582d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80582dc:	e8 fe 3a 00 00       	callq  805bddf <sym_free>
 80582e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80582e5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80582e9:	eb a0                	jmp    805828b <macro_subst_tok+0x9bc>
 80582eb:	b8 01 00 00 00       	mov    $0x1,%eax
 80582f0:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 80582f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80582f7:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80582fe:	00 00 00 
 8058301:	49 89 cb             	mov    %rcx,%r11
 8058304:	b9 00 00 00 00       	mov    $0x0,%ecx
 8058309:	49 89 ca             	mov    %rcx,%r10
 805830c:	8b 08                	mov    (%rax),%ecx
 805830e:	48 89 ce             	mov    %rcx,%rsi
 8058311:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058315:	48 89 c7             	mov    %rax,%rdi
 8058318:	4c 89 d2             	mov    %r10,%rdx
 805831b:	4c 89 d9             	mov    %r11,%rcx
 805831e:	b8 00 00 00 00       	mov    $0x0,%eax
 8058323:	e8 15 3b 00 00       	callq  805be3d <sym_push2>
 8058328:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805832c:	49 89 c3             	mov    %rax,%r11
 805832f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8058333:	49 89 c2             	mov    %rax,%r10
 8058336:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805833a:	48 89 c6             	mov    %rax,%rsi
 805833d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058341:	48 89 c7             	mov    %rax,%rdi
 8058344:	4c 89 d2             	mov    %r10,%rdx
 8058347:	4c 89 d9             	mov    %r11,%rcx
 805834a:	b8 00 00 00 00       	mov    $0x0,%eax
 805834f:	e8 5f 00 00 00       	callq  80583b3 <macro_subst>
 8058354:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058358:	48 8b 08             	mov    (%rax),%rcx
 805835b:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805835f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058363:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 8058367:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 805836e:	00 00 00 
 8058371:	48 01 d1             	add    %rdx,%rcx
 8058374:	48 8b 11             	mov    (%rcx),%rdx
 8058377:	48 89 10             	mov    %rdx,(%rax)
 805837a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805837e:	48 89 c7             	mov    %rax,%rdi
 8058381:	b8 00 00 00 00       	mov    $0x0,%eax
 8058386:	e8 54 3a 00 00       	callq  805bddf <sym_free>
 805838b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 805838e:	85 c0                	test   %eax,%eax
 8058390:	0f 84 11 00 00 00    	je     80583a7 <macro_subst_tok+0xad8>
 8058396:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 805839a:	48 89 c7             	mov    %rax,%rdi
 805839d:	b8 00 00 00 00       	mov    $0x0,%eax
 80583a2:	e8 10 b1 ff ff       	callq  80534b7 <tok_str_free>
 80583a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80583ac:	e9 00 00 00 00       	jmpq   80583b1 <macro_subst_tok+0xae2>
 80583b1:	c9                   	leaveq 
 80583b2:	c3                   	retq   

00000000080583b3 <macro_subst>:
 80583b3:	55                   	push   %rbp
 80583b4:	48 89 e5             	mov    %rsp,%rbp
 80583b7:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 80583be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80583c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80583c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80583ca:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80583ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80583d2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80583d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80583da:	48 89 c7             	mov    %rax,%rdi
 80583dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80583e2:	e8 31 0c 00 00       	callq  8059018 <macro_twosharps>
 80583e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80583eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80583ef:	85 c0                	test   %eax,%eax
 80583f1:	0f 84 08 00 00 00    	je     80583ff <macro_subst+0x4c>
 80583f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80583fb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80583ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8058404:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8058407:	b8 00 00 00 00       	mov    $0x0,%eax
 805840c:	89 45 94             	mov    %eax,-0x6c(%rbp)
 805840f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8058413:	48 89 c1             	mov    %rax,%rcx
 8058416:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 805841d:	00 00 00 
 8058420:	48 39 c1             	cmp    %rax,%rcx
 8058423:	0f 85 05 00 00 00    	jne    805842e <macro_subst+0x7b>
 8058429:	e9 7d 02 00 00       	jmpq   80586ab <macro_subst+0x2f8>
 805842e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 8058432:	49 89 c2             	mov    %rax,%r10
 8058435:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8058439:	48 89 c6             	mov    %rax,%rsi
 805843c:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
 8058440:	48 89 c7             	mov    %rax,%rdi
 8058443:	4c 89 d2             	mov    %r10,%rdx
 8058446:	b8 00 00 00 00       	mov    $0x0,%eax
 805844b:	e8 9b 30 00 00       	callq  805b4eb <TOK_GET>
 8058450:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8058453:	83 f8 00             	cmp    $0x0,%eax
 8058456:	0f 85 05 00 00 00    	jne    8058461 <macro_subst+0xae>
 805845c:	e9 4a 02 00 00       	jmpq   80586ab <macro_subst+0x2f8>
 8058461:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8058464:	81 f8 cf 00 00 00    	cmp    $0xcf,%eax
 805846a:	0f 85 4b 00 00 00    	jne    80584bb <macro_subst+0x108>
 8058470:	b8 00 00 00 00       	mov    $0x0,%eax
 8058475:	49 89 c2             	mov    %rax,%r10
 8058478:	b8 cf 00 00 00       	mov    $0xcf,%eax
 805847d:	48 89 c6             	mov    %rax,%rsi
 8058480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058484:	48 89 c7             	mov    %rax,%rdi
 8058487:	4c 89 d2             	mov    %r10,%rdx
 805848a:	b8 00 00 00 00       	mov    $0x0,%eax
 805848f:	e8 8a b1 ff ff       	callq  805361e <tok_str_add2>
 8058494:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 8058498:	49 89 c2             	mov    %rax,%r10
 805849b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 805849f:	48 89 c6             	mov    %rax,%rsi
 80584a2:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
 80584a6:	48 89 c7             	mov    %rax,%rdi
 80584a9:	4c 89 d2             	mov    %r10,%rdx
 80584ac:	b8 00 00 00 00       	mov    $0x0,%eax
 80584b1:	e8 35 30 00 00       	callq  805b4eb <TOK_GET>
 80584b6:	e9 72 01 00 00       	jmpq   805862d <macro_subst+0x27a>
 80584bb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80584be:	48 89 c7             	mov    %rax,%rdi
 80584c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80584c6:	e8 3b b9 ff ff       	callq  8053e06 <define_find>
 80584cb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80584cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80584d3:	48 89 c1             	mov    %rax,%rcx
 80584d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80584dd:	00 00 00 
 80584e0:	48 39 c1             	cmp    %rax,%rcx
 80584e3:	0f 84 44 01 00 00    	je     805862d <macro_subst+0x27a>
 80584e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80584ed:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 80584f0:	48 89 ce             	mov    %rcx,%rsi
 80584f3:	48 8b 08             	mov    (%rax),%rcx
 80584f6:	48 89 cf             	mov    %rcx,%rdi
 80584f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80584fe:	e8 0b 3b 00 00       	callq  805c00e <sym_find2>
 8058503:	85 c0                	test   %eax,%eax
 8058505:	0f 84 29 00 00 00    	je     8058534 <macro_subst+0x181>
 805850b:	b8 00 00 00 00       	mov    $0x0,%eax
 8058510:	49 89 c2             	mov    %rax,%r10
 8058513:	b8 cf 00 00 00       	mov    $0xcf,%eax
 8058518:	48 89 c6             	mov    %rax,%rsi
 805851b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805851f:	48 89 c7             	mov    %rax,%rdi
 8058522:	4c 89 d2             	mov    %r10,%rdx
 8058525:	b8 00 00 00 00       	mov    $0x0,%eax
 805852a:	e8 ef b0 ff ff       	callq  805361e <tok_str_add2>
 805852f:	e9 f9 00 00 00       	jmpq   805862d <macro_subst+0x27a>
 8058534:	48 8b 05 35 5a 03 00 	mov    0x35a35(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 805853b:	48 8b 00             	mov    (%rax),%rax
 805853e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8058542:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8058546:	85 c0                	test   %eax,%eax
 8058548:	0f 84 16 00 00 00    	je     8058564 <macro_subst+0x1b1>
 805854e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8058552:	48 8b 08             	mov    (%rax),%rcx
 8058555:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 8058559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805855d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 8058561:	48 89 08             	mov    %rcx,(%rax)
 8058564:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8058568:	4c 8b 1d 01 5a 03 00 	mov    0x35a01(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 805856f:	49 89 03             	mov    %rax,(%r11)
 8058572:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8058575:	4c 8b 1d ac 59 03 00 	mov    0x359ac(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805857c:	41 89 03             	mov    %eax,(%r11)
 805857f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8058583:	49 89 c3             	mov    %rax,%r11
 8058586:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805858a:	49 89 c2             	mov    %rax,%r10
 805858d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058591:	48 89 c6             	mov    %rax,%rsi
 8058594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058598:	48 89 c7             	mov    %rax,%rdi
 805859b:	4c 89 d2             	mov    %r10,%rdx
 805859e:	4c 89 d9             	mov    %r11,%rcx
 80585a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80585a6:	e8 24 f3 ff ff       	callq  80578cf <macro_subst_tok>
 80585ab:	89 45 c0             	mov    %eax,-0x40(%rbp)
 80585ae:	48 8b 05 bb 59 03 00 	mov    0x359bb(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80585b5:	48 8b 00             	mov    (%rax),%rax
 80585b8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80585bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80585c0:	4c 8b 1d a9 59 03 00 	mov    0x359a9(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80585c7:	49 89 03             	mov    %rax,(%r11)
 80585ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80585ce:	85 c0                	test   %eax,%eax
 80585d0:	0f 84 25 00 00 00    	je     80585fb <macro_subst+0x248>
 80585d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80585da:	48 8b 08             	mov    (%rax),%rcx
 80585dd:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 80585e1:	48 89 ca             	mov    %rcx,%rdx
 80585e4:	48 89 c1             	mov    %rax,%rcx
 80585e7:	48 39 ca             	cmp    %rcx,%rdx
 80585ea:	0f 85 0b 00 00 00    	jne    80585fb <macro_subst+0x248>
 80585f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80585f4:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 80585f8:	48 89 08             	mov    %rcx,(%rax)
 80585fb:	8b 45 c0             	mov    -0x40(%rbp),%eax
 80585fe:	83 f8 00             	cmp    $0x0,%eax
 8058601:	0f 84 05 00 00 00    	je     805860c <macro_subst+0x259>
 8058607:	e9 21 00 00 00       	jmpq   805862d <macro_subst+0x27a>
 805860c:	48 8b 05 05 59 03 00 	mov    0x35905(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8058613:	8b 00                	mov    (%rax),%eax
 8058615:	83 e0 10             	and    $0x10,%eax
 8058618:	85 c0                	test   %eax,%eax
 805861a:	0f 84 08 00 00 00    	je     8058628 <macro_subst+0x275>
 8058620:	b8 01 00 00 00       	mov    $0x1,%eax
 8058625:	89 45 94             	mov    %eax,-0x6c(%rbp)
 8058628:	e9 79 00 00 00       	jmpq   80586a6 <macro_subst+0x2f3>
 805862d:	8b 45 94             	mov    -0x6c(%rbp),%eax
 8058630:	85 c0                	test   %eax,%eax
 8058632:	0f 84 29 00 00 00    	je     8058661 <macro_subst+0x2ae>
 8058638:	b8 20 00 00 00       	mov    $0x20,%eax
 805863d:	48 89 c6             	mov    %rax,%rsi
 8058640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058644:	48 89 c7             	mov    %rax,%rdi
 8058647:	b8 00 00 00 00       	mov    $0x0,%eax
 805864c:	e8 29 af ff ff       	callq  805357a <tok_str_add>
 8058651:	b8 01 00 00 00       	mov    $0x1,%eax
 8058656:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8058659:	b8 00 00 00 00       	mov    $0x0,%eax
 805865e:	89 45 94             	mov    %eax,-0x6c(%rbp)
 8058661:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
 8058665:	48 89 c6             	mov    %rax,%rsi
 8058668:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 805866b:	48 89 c7             	mov    %rax,%rdi
 805866e:	b8 00 00 00 00       	mov    $0x0,%eax
 8058673:	e8 e8 31 00 00       	callq  805b860 <check_space>
 8058678:	85 c0                	test   %eax,%eax
 805867a:	0f 84 05 00 00 00    	je     8058685 <macro_subst+0x2d2>
 8058680:	e9 21 00 00 00       	jmpq   80586a6 <macro_subst+0x2f3>
 8058685:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 8058689:	49 89 c2             	mov    %rax,%r10
 805868c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 805868f:	48 89 c6             	mov    %rax,%rsi
 8058692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058696:	48 89 c7             	mov    %rax,%rdi
 8058699:	4c 89 d2             	mov    %r10,%rdx
 805869c:	b8 00 00 00 00       	mov    $0x0,%eax
 80586a1:	e8 78 af ff ff       	callq  805361e <tok_str_add2>
 80586a6:	e9 64 fd ff ff       	jmpq   805840f <macro_subst+0x5c>
 80586ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80586af:	85 c0                	test   %eax,%eax
 80586b1:	0f 84 11 00 00 00    	je     80586c8 <macro_subst+0x315>
 80586b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80586bb:	48 89 c7             	mov    %rax,%rdi
 80586be:	b8 00 00 00 00       	mov    $0x0,%eax
 80586c3:	e8 ef ad ff ff       	callq  80534b7 <tok_str_free>
 80586c8:	c9                   	leaveq 
 80586c9:	c3                   	retq   

00000000080586ca <next>:
 80586ca:	55                   	push   %rbp
 80586cb:	48 89 e5             	mov    %rsp,%rbp
 80586ce:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 80586d5:	48 8b 05 3c 58 03 00 	mov    0x3583c(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 80586dc:	8b 00                	mov    (%rax),%eax
 80586de:	83 e0 10             	and    $0x10,%eax
 80586e1:	85 c0                	test   %eax,%eax
 80586e3:	0f 84 0f 00 00 00    	je     80586f8 <next+0x2e>
 80586e9:	b8 00 00 00 00       	mov    $0x0,%eax
 80586ee:	e8 c0 ec ff ff       	callq  80573b3 <next_nomacro_spc>
 80586f3:	e9 0a 00 00 00       	jmpq   8058702 <next+0x38>
 80586f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80586fd:	e8 6d ed ff ff       	callq  805746f <next_nomacro>
 8058702:	48 8b 05 67 58 03 00 	mov    0x35867(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8058709:	48 8b 00             	mov    (%rax),%rax
 805870c:	85 c0                	test   %eax,%eax
 805870e:	0f 84 05 00 00 00    	je     8058719 <next+0x4f>
 8058714:	e9 e6 00 00 00       	jmpq   80587ff <next+0x135>
 8058719:	48 8b 05 08 58 03 00 	mov    0x35808(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058720:	8b 00                	mov    (%rax),%eax
 8058722:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8058728:	0f 8c cc 00 00 00    	jl     80587fa <next+0x130>
 805872e:	48 8b 05 e3 57 03 00 	mov    0x357e3(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8058735:	8b 00                	mov    (%rax),%eax
 8058737:	83 e0 01             	and    $0x1,%eax
 805873a:	85 c0                	test   %eax,%eax
 805873c:	0f 84 b8 00 00 00    	je     80587fa <next+0x130>
 8058742:	48 8b 05 df 57 03 00 	mov    0x357df(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058749:	8b 00                	mov    (%rax),%eax
 805874b:	48 89 c7             	mov    %rax,%rdi
 805874e:	b8 00 00 00 00       	mov    $0x0,%eax
 8058753:	e8 ae b6 ff ff       	callq  8053e06 <define_find>
 8058758:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805875c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058760:	85 c0                	test   %eax,%eax
 8058762:	0f 84 92 00 00 00    	je     80587fa <next+0x130>
 8058768:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 805876c:	48 89 c7             	mov    %rax,%rdi
 805876f:	b8 00 00 00 00       	mov    $0x0,%eax
 8058774:	e8 d9 ac ff ff       	callq  8053452 <tok_str_new>
 8058779:	b8 00 00 00 00       	mov    $0x0,%eax
 805877e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8058782:	b8 00 00 00 00       	mov    $0x0,%eax
 8058787:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805878b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 805878f:	49 89 c3             	mov    %rax,%r11
 8058792:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058796:	49 89 c2             	mov    %rax,%r10
 8058799:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
 805879d:	48 89 c6             	mov    %rax,%rsi
 80587a0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80587a4:	48 89 c7             	mov    %rax,%rdi
 80587a7:	4c 89 d2             	mov    %r10,%rdx
 80587aa:	4c 89 d9             	mov    %r11,%rcx
 80587ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80587b2:	e8 18 f1 ff ff       	callq  80578cf <macro_subst_tok>
 80587b7:	83 f8 00             	cmp    $0x0,%eax
 80587ba:	0f 85 3a 00 00 00    	jne    80587fa <next+0x130>
 80587c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80587c5:	48 89 c6             	mov    %rax,%rsi
 80587c8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80587cc:	48 89 c7             	mov    %rax,%rdi
 80587cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80587d4:	e8 a1 ad ff ff       	callq  805357a <tok_str_add>
 80587d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80587dd:	4c 8b 1d 8c 57 03 00 	mov    0x3578c(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 80587e4:	49 89 03             	mov    %rax,(%r11)
 80587e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80587eb:	4c 8b 1d de 57 03 00 	mov    0x357de(%rip),%r11        # 808dfd0 <_GLOBAL_OFFSET_TABLE_+0x350>
 80587f2:	49 89 03             	mov    %rax,(%r11)
 80587f5:	e9 db fe ff ff       	jmpq   80586d5 <next+0xb>
 80587fa:	e9 9b 00 00 00       	jmpq   805889a <next+0x1d0>
 80587ff:	48 8b 05 22 57 03 00 	mov    0x35722(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058806:	8b 00                	mov    (%rax),%eax
 8058808:	83 f8 00             	cmp    $0x0,%eax
 805880b:	0f 85 6f 00 00 00    	jne    8058880 <next+0x1b6>
 8058811:	8b 05 65 5a 03 00    	mov    0x35a65(%rip),%eax        # 808e27c <unget_buffer_enabled>
 8058817:	85 c0                	test   %eax,%eax
 8058819:	0f 84 25 00 00 00    	je     8058844 <next+0x17a>
 805881f:	48 8b 05 3a 5a 03 00 	mov    0x35a3a(%rip),%rax        # 808e260 <unget_saved_macro_ptr>
 8058826:	4c 8b 1d 43 57 03 00 	mov    0x35743(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 805882d:	49 89 03             	mov    %rax,(%r11)
 8058830:	b8 00 00 00 00       	mov    $0x0,%eax
 8058835:	4c 8b 1d 9c 57 03 00 	mov    0x3579c(%rip),%r11        # 808dfd8 <_GLOBAL_OFFSET_TABLE_+0x358>
 805883c:	41 89 03             	mov    %eax,(%r11)
 805883f:	e9 32 00 00 00       	jmpq   8058876 <next+0x1ac>
 8058844:	48 8b 05 0d 5a 03 00 	mov    0x35a0d(%rip),%rax        # 808e258 <macro_ptr_allocated>
 805884b:	48 89 c7             	mov    %rax,%rdi
 805884e:	b8 00 00 00 00       	mov    $0x0,%eax
 8058853:	e8 5f ac ff ff       	callq  80534b7 <tok_str_free>
 8058858:	b8 00 00 00 00       	mov    $0x0,%eax
 805885d:	4c 8b 1d 6c 57 03 00 	mov    0x3576c(%rip),%r11        # 808dfd0 <_GLOBAL_OFFSET_TABLE_+0x350>
 8058864:	49 89 03             	mov    %rax,(%r11)
 8058867:	b8 00 00 00 00       	mov    $0x0,%eax
 805886c:	4c 8b 1d fd 56 03 00 	mov    0x356fd(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8058873:	49 89 03             	mov    %rax,(%r11)
 8058876:	e9 5a fe ff ff       	jmpq   80586d5 <next+0xb>
 805887b:	e9 1a 00 00 00       	jmpq   805889a <next+0x1d0>
 8058880:	48 8b 05 a1 56 03 00 	mov    0x356a1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058887:	8b 00                	mov    (%rax),%eax
 8058889:	81 f8 cf 00 00 00    	cmp    $0xcf,%eax
 805888f:	0f 85 05 00 00 00    	jne    805889a <next+0x1d0>
 8058895:	e9 3b fe ff ff       	jmpq   80586d5 <next+0xb>
 805889a:	48 8b 05 87 56 03 00 	mov    0x35687(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80588a1:	8b 00                	mov    (%rax),%eax
 80588a3:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 80588a9:	0f 85 3b 00 00 00    	jne    80588ea <next+0x220>
 80588af:	48 8b 05 62 56 03 00 	mov    0x35662(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 80588b6:	8b 00                	mov    (%rax),%eax
 80588b8:	83 e0 02             	and    $0x2,%eax
 80588bb:	85 c0                	test   %eax,%eax
 80588bd:	0f 84 27 00 00 00    	je     80588ea <next+0x220>
 80588c3:	48 8b 05 de 56 03 00 	mov    0x356de(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80588ca:	48 8b 00             	mov    (%rax),%rax
 80588cd:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80588d4:	00 00 00 
 80588d7:	48 01 c8             	add    %rcx,%rax
 80588da:	48 8b 08             	mov    (%rax),%rcx
 80588dd:	48 89 cf             	mov    %rcx,%rdi
 80588e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80588e5:	e8 a0 db ff ff       	callq  805648a <parse_number>
 80588ea:	c9                   	leaveq 
 80588eb:	c3                   	retq   

00000000080588ec <unget_tok>:
 80588ec:	55                   	push   %rbp
 80588ed:	48 89 e5             	mov    %rsp,%rbp
 80588f0:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80588f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80588fb:	8b 05 7b 59 03 00    	mov    0x3597b(%rip),%eax        # 808e27c <unget_buffer_enabled>
 8058901:	85 c0                	test   %eax,%eax
 8058903:	0f 84 05 00 00 00    	je     805890e <unget_tok+0x22>
 8058909:	e9 23 00 00 00       	jmpq   8058931 <unget_tok+0x45>
 805890e:	48 8b 05 5b 56 03 00 	mov    0x3565b(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8058915:	48 8b 00             	mov    (%rax),%rax
 8058918:	4c 8b 1d c1 56 03 00 	mov    0x356c1(%rip),%r11        # 808dfe0 <_GLOBAL_OFFSET_TABLE_+0x360>
 805891f:	49 89 03             	mov    %rax,(%r11)
 8058922:	b8 01 00 00 00       	mov    $0x1,%eax
 8058927:	4c 8b 1d aa 56 03 00 	mov    0x356aa(%rip),%r11        # 808dfd8 <_GLOBAL_OFFSET_TABLE_+0x358>
 805892e:	41 89 03             	mov    %eax,(%r11)
 8058931:	48 8d 05 30 59 03 00 	lea    0x35930(%rip),%rax        # 808e268 <unget_saved_buffer>
 8058938:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805893c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8058940:	4c 8b 1d 29 56 03 00 	mov    0x35629(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 8058947:	49 89 03             	mov    %rax,(%r11)
 805894a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805894e:	48 89 c1             	mov    %rax,%rcx
 8058951:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8058958:	00 00 00 
 805895b:	48 01 d0             	add    %rdx,%rax
 805895e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8058962:	48 8b 05 bf 55 03 00 	mov    0x355bf(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058969:	8b 00                	mov    (%rax),%eax
 805896b:	89 01                	mov    %eax,(%rcx)
 805896d:	48 8b 05 b4 55 03 00 	mov    0x355b4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058974:	8b 00                	mov    (%rax),%eax
 8058976:	48 89 c7             	mov    %rax,%rdi
 8058979:	b8 00 00 00 00       	mov    $0x0,%eax
 805897e:	e8 a1 2d 00 00       	callq  805b724 <tok_ext_size>
 8058983:	83 e8 01             	sub    $0x1,%eax
 8058986:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8058989:	b8 00 00 00 00       	mov    $0x0,%eax
 805898e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8058991:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8058994:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8058997:	39 c8                	cmp    %ecx,%eax
 8058999:	0f 8d 53 00 00 00    	jge    80589f2 <unget_tok+0x106>
 805899f:	e9 0e 00 00 00       	jmpq   80589b2 <unget_tok+0xc6>
 80589a4:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80589a7:	48 89 c1             	mov    %rax,%rcx
 80589aa:	83 c0 01             	add    $0x1,%eax
 80589ad:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80589b0:	eb df                	jmp    8058991 <unget_tok+0xa5>
 80589b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80589b6:	48 89 c1             	mov    %rax,%rcx
 80589b9:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 80589c0:	00 00 00 
 80589c3:	48 01 d0             	add    %rdx,%rax
 80589c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 80589ca:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80589cd:	48 63 c0             	movslq %eax,%rax
 80589d0:	48 89 c2             	mov    %rax,%rdx
 80589d3:	48 c1 e2 02          	shl    $0x2,%rdx
 80589d7:	48 8b 05 ca 55 03 00 	mov    0x355ca(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80589de:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80589e2:	48 89 d1             	mov    %rdx,%rcx
 80589e5:	48 01 c8             	add    %rcx,%rax
 80589e8:	8b 08                	mov    (%rax),%ecx
 80589ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80589ee:	89 08                	mov    %ecx,(%rax)
 80589f0:	eb b2                	jmp    80589a4 <unget_tok+0xb8>
 80589f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80589f6:	b9 00 00 00 00       	mov    $0x0,%ecx
 80589fb:	89 08                	mov    %ecx,(%rax)
 80589fd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8058a00:	4c 8b 1d 21 55 03 00 	mov    0x35521(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058a07:	41 89 03             	mov    %eax,(%r11)
 8058a0a:	c9                   	leaveq 
 8058a0b:	c3                   	retq   

0000000008058a0c <preprocess_init>:
 8058a0c:	55                   	push   %rbp
 8058a0d:	48 89 e5             	mov    %rsp,%rbp
 8058a10:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8058a17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8058a1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058a1f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8058a26:	00 00 00 
 8058a29:	48 01 c8             	add    %rcx,%rax
 8058a2c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8058a30:	48 ba 48 02 00 00 00 	movabs $0x248,%rdx
 8058a37:	00 00 00 
 8058a3a:	48 01 d1             	add    %rdx,%rcx
 8058a3d:	48 89 08             	mov    %rcx,(%rax)
 8058a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058a44:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8058a4b:	00 00 00 
 8058a4e:	48 01 c8             	add    %rcx,%rax
 8058a51:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8058a55:	48 ba 48 03 00 00 00 	movabs $0x348,%rdx
 8058a5c:	00 00 00 
 8058a5f:	48 01 d1             	add    %rdx,%rcx
 8058a62:	48 89 08             	mov    %rcx,(%rax)
 8058a65:	48 8b 05 34 54 03 00 	mov    0x35434(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058a6c:	48 8b 00             	mov    (%rax),%rax
 8058a6f:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8058a76:	00 00 00 
 8058a79:	48 01 c8             	add    %rcx,%rax
 8058a7c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8058a80:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8058a87:	00 00 00 
 8058a8a:	48 01 d1             	add    %rdx,%rcx
 8058a8d:	48 8b 11             	mov    (%rcx),%rdx
 8058a90:	48 89 10             	mov    %rdx,(%rax)
 8058a93:	48 8b 05 4e 55 03 00 	mov    0x3554e(%rip),%rax        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 8058a9a:	4c 8b 1d 7f 54 03 00 	mov    0x3547f(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8058aa1:	49 89 03             	mov    %rax,(%r11)
 8058aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058aa8:	48 b9 48 0c 00 00 00 	movabs $0xc48,%rcx
 8058aaf:	00 00 00 
 8058ab2:	48 01 c8             	add    %rcx,%rax
 8058ab5:	b9 00 00 00 00       	mov    $0x0,%ecx
 8058aba:	89 08                	mov    %ecx,(%rax)
 8058abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058ac0:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 8058ac7:	00 00 00 
 8058aca:	48 01 c8             	add    %rcx,%rax
 8058acd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8058ad1:	48 ba 48 0c 00 00 00 	movabs $0xc48,%rdx
 8058ad8:	00 00 00 
 8058adb:	48 01 d1             	add    %rdx,%rcx
 8058ade:	48 89 08             	mov    %rcx,(%rax)
 8058ae1:	c9                   	leaveq 
 8058ae2:	c3                   	retq   

0000000008058ae3 <preprocess_new>:
 8058ae3:	55                   	push   %rbp
 8058ae4:	48 89 e5             	mov    %rsp,%rbp
 8058ae7:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8058aee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8058af3:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8058af6:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8058af9:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8058aff:	0f 8d 71 00 00 00    	jge    8058b76 <preprocess_new+0x93>
 8058b05:	e9 0e 00 00 00       	jmpq   8058b18 <preprocess_new+0x35>
 8058b0a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8058b0d:	48 89 c1             	mov    %rax,%rcx
 8058b10:	83 c0 01             	add    $0x1,%eax
 8058b13:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8058b16:	eb de                	jmp    8058af6 <preprocess_new+0x13>
 8058b18:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8058b1b:	83 e8 ff             	sub    $0xffffffff,%eax
 8058b1e:	48 63 c0             	movslq %eax,%rax
 8058b21:	48 8d 0d 59 5b 04 00 	lea    0x45b59(%rip),%rcx        # 809e681 <isidnum_table>
 8058b28:	48 89 c2             	mov    %rax,%rdx
 8058b2b:	48 01 d1             	add    %rdx,%rcx
 8058b2e:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8058b31:	48 89 c7             	mov    %rax,%rdi
 8058b34:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8058b38:	b8 00 00 00 00       	mov    $0x0,%eax
 8058b3d:	e8 77 2e 00 00       	callq  805b9b9 <isid>
 8058b42:	85 c0                	test   %eax,%eax
 8058b44:	0f 85 1f 00 00 00    	jne    8058b69 <preprocess_new+0x86>
 8058b4a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8058b4d:	48 89 c7             	mov    %rax,%rdi
 8058b50:	b8 00 00 00 00       	mov    $0x0,%eax
 8058b55:	e8 25 2e 00 00       	callq  805b97f <isnum>
 8058b5a:	85 c0                	test   %eax,%eax
 8058b5c:	0f 85 07 00 00 00    	jne    8058b69 <preprocess_new+0x86>
 8058b62:	b8 00 00 00 00       	mov    $0x0,%eax
 8058b67:	eb 05                	jmp    8058b6e <preprocess_new+0x8b>
 8058b69:	b8 01 00 00 00       	mov    $0x1,%eax
 8058b6e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8058b72:	88 01                	mov    %al,(%rcx)
 8058b74:	eb 94                	jmp    8058b0a <preprocess_new+0x27>
 8058b76:	b8 00 00 00 00       	mov    $0x0,%eax
 8058b7b:	4c 8b 1d c6 53 03 00 	mov    0x353c6(%rip),%r11        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8058b82:	49 89 03             	mov    %rax,(%r11)
 8058b85:	b8 00 00 01 00       	mov    $0x10000,%eax
 8058b8a:	49 89 c2             	mov    %rax,%r10
 8058b8d:	b8 00 00 00 00       	mov    $0x0,%eax
 8058b92:	48 89 c6             	mov    %rax,%rsi
 8058b95:	48 8d 05 e4 56 03 00 	lea    0x356e4(%rip),%rax        # 808e280 <hash_ident>
 8058b9c:	48 89 c7             	mov    %rax,%rdi
 8058b9f:	4c 89 d2             	mov    %r10,%rdx
 8058ba2:	b8 00 00 00 00       	mov    $0x0,%eax
 8058ba7:	e8 04 e3 02 00       	callq  8086eb0 <memset>
 8058bac:	b8 00 01 00 00       	mov    $0x100,%eax
 8058bb1:	4c 8b 1d 88 53 03 00 	mov    0x35388(%rip),%r11        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 8058bb8:	41 89 03             	mov    %eax,(%r11)
 8058bbb:	48 8d 05 e2 12 03 00 	lea    0x312e2(%rip),%rax        # 8089ea4 <tcc_keywords>
 8058bc2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8058bc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058bca:	0f be 08             	movsbl (%rax),%ecx
 8058bcd:	85 c9                	test   %ecx,%ecx
 8058bcf:	0f 84 78 00 00 00    	je     8058c4d <preprocess_new+0x16a>
 8058bd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058bd9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8058bdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8058be1:	48 89 c1             	mov    %rax,%rcx
 8058be4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8058beb:	00 00 00 
 8058bee:	48 01 d0             	add    %rdx,%rax
 8058bf1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8058bf5:	0f be 01             	movsbl (%rcx),%eax
 8058bf8:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8058bfb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8058bfe:	83 f8 00             	cmp    $0x0,%eax
 8058c01:	0f 85 05 00 00 00    	jne    8058c0c <preprocess_new+0x129>
 8058c07:	e9 02 00 00 00       	jmpq   8058c0e <preprocess_new+0x12b>
 8058c0c:	eb cf                	jmp    8058bdd <preprocess_new+0xfa>
 8058c0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8058c12:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8058c16:	48 29 c8             	sub    %rcx,%rax
 8058c19:	48 89 c1             	mov    %rax,%rcx
 8058c1c:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8058c23:	00 00 00 
 8058c26:	48 29 c1             	sub    %rax,%rcx
 8058c29:	48 89 c8             	mov    %rcx,%rax
 8058c2c:	48 89 c6             	mov    %rax,%rsi
 8058c2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058c33:	48 89 c7             	mov    %rax,%rdi
 8058c36:	b8 00 00 00 00       	mov    $0x0,%eax
 8058c3b:	e8 23 8b ff ff       	callq  8051763 <tok_alloc>
 8058c40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8058c44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8058c48:	e9 79 ff ff ff       	jmpq   8058bc6 <preprocess_new+0xe3>
 8058c4d:	c9                   	leaveq 
 8058c4e:	c3                   	retq   

0000000008058c4f <tcc_preprocess>:
 8058c4f:	55                   	push   %rbp
 8058c50:	48 89 e5             	mov    %rsp,%rbp
 8058c53:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 8058c5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8058c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058c62:	48 89 c7             	mov    %rax,%rdi
 8058c65:	b8 00 00 00 00       	mov    $0x0,%eax
 8058c6a:	e8 9d fd ff ff       	callq  8058a0c <preprocess_init>
 8058c6f:	48 8b 05 82 52 03 00 	mov    0x35282(%rip),%rax        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 8058c76:	48 8b 00             	mov    (%rax),%rax
 8058c79:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8058c7d:	48 8b 05 1c 52 03 00 	mov    0x3521c(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058c84:	48 8b 00             	mov    (%rax),%rax
 8058c87:	48 8b 08             	mov    (%rax),%rcx
 8058c8a:	0f b6 01             	movzbl (%rcx),%eax
 8058c8d:	4c 8b 1d 74 52 03 00 	mov    0x35274(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8058c94:	41 89 03             	mov    %eax,(%r11)
 8058c97:	b8 03 00 00 00       	mov    $0x3,%eax
 8058c9c:	4c 8b 1d 6d 52 03 00 	mov    0x3526d(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8058ca3:	41 89 03             	mov    %eax,(%r11)
 8058ca6:	b8 1d 00 00 00       	mov    $0x1d,%eax
 8058cab:	4c 8b 1d 66 52 03 00 	mov    0x35266(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8058cb2:	41 89 03             	mov    %eax,(%r11)
 8058cb5:	b8 00 00 00 00       	mov    $0x0,%eax
 8058cba:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8058cbd:	b8 00 00 00 00       	mov    $0x0,%eax
 8058cc2:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8058cc5:	b8 00 00 00 00       	mov    $0x0,%eax
 8058cca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8058cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058cd2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8058cd9:	00 00 00 
 8058cdc:	48 01 c8             	add    %rcx,%rax
 8058cdf:	48 8b 08             	mov    (%rax),%rcx
 8058ce2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8058ce6:	b8 00 00 00 00       	mov    $0x0,%eax
 8058ceb:	e8 da f9 ff ff       	callq  80586ca <next>
 8058cf0:	48 8b 05 31 52 03 00 	mov    0x35231(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058cf7:	8b 00                	mov    (%rax),%eax
 8058cf9:	83 f8 ff             	cmp    $0xffffffff,%eax
 8058cfc:	0f 85 0a 00 00 00    	jne    8058d0c <tcc_preprocess+0xbd>
 8058d02:	e9 f4 02 00 00       	jmpq   8058ffb <tcc_preprocess+0x3ac>
 8058d07:	e9 a6 02 00 00       	jmpq   8058fb2 <tcc_preprocess+0x363>
 8058d0c:	48 8b 05 8d 51 03 00 	mov    0x3518d(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058d13:	48 8b 00             	mov    (%rax),%rax
 8058d16:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8058d1a:	48 89 c2             	mov    %rax,%rdx
 8058d1d:	48 89 c8             	mov    %rcx,%rax
 8058d20:	48 39 c2             	cmp    %rax,%rdx
 8058d23:	0f 84 0a 00 00 00    	je     8058d33 <tcc_preprocess+0xe4>
 8058d29:	e9 ae 00 00 00       	jmpq   8058ddc <tcc_preprocess+0x18d>
 8058d2e:	e9 7f 02 00 00       	jmpq   8058fb2 <tcc_preprocess+0x363>
 8058d33:	48 8b 05 ee 51 03 00 	mov    0x351ee(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058d3a:	8b 00                	mov    (%rax),%eax
 8058d3c:	83 f8 0a             	cmp    $0xa,%eax
 8058d3f:	0f 85 2b 00 00 00    	jne    8058d70 <tcc_preprocess+0x121>
 8058d45:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8058d48:	85 c0                	test   %eax,%eax
 8058d4a:	0f 84 05 00 00 00    	je     8058d55 <tcc_preprocess+0x106>
 8058d50:	e9 05 00 00 00       	jmpq   8058d5a <tcc_preprocess+0x10b>
 8058d55:	e9 8c ff ff ff       	jmpq   8058ce6 <tcc_preprocess+0x97>
 8058d5a:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8058d5d:	83 c0 01             	add    $0x1,%eax
 8058d60:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8058d63:	b8 00 00 00 00       	mov    $0x0,%eax
 8058d68:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8058d6b:	e9 42 02 00 00       	jmpq   8058fb2 <tcc_preprocess+0x363>
 8058d70:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8058d73:	85 c0                	test   %eax,%eax
 8058d75:	0f 84 05 00 00 00    	je     8058d80 <tcc_preprocess+0x131>
 8058d7b:	e9 32 02 00 00       	jmpq   8058fb2 <tcc_preprocess+0x363>
 8058d80:	48 8b 05 19 51 03 00 	mov    0x35119(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058d87:	48 8b 00             	mov    (%rax),%rax
 8058d8a:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8058d91:	00 00 00 
 8058d94:	48 01 c8             	add    %rcx,%rax
 8058d97:	8b 08                	mov    (%rax),%ecx
 8058d99:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8058d9c:	48 29 c1             	sub    %rax,%rcx
 8058d9f:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 8058da2:	48 8b 05 f7 50 03 00 	mov    0x350f7(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058da9:	48 8b 00             	mov    (%rax),%rax
 8058dac:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8058db0:	48 89 c2             	mov    %rax,%rdx
 8058db3:	48 89 c8             	mov    %rcx,%rax
 8058db6:	48 39 c2             	cmp    %rax,%rdx
 8058db9:	0f 85 1d 00 00 00    	jne    8058ddc <tcc_preprocess+0x18d>
 8058dbf:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8058dc2:	83 f8 00             	cmp    $0x0,%eax
 8058dc5:	0f 8c 11 00 00 00    	jl     8058ddc <tcc_preprocess+0x18d>
 8058dcb:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8058dce:	83 f8 08             	cmp    $0x8,%eax
 8058dd1:	0f 8d 05 00 00 00    	jge    8058ddc <tcc_preprocess+0x18d>
 8058dd7:	e9 49 01 00 00       	jmpq   8058f25 <tcc_preprocess+0x2d6>
 8058ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058de0:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8058de7:	00 00 00 
 8058dea:	48 01 c8             	add    %rcx,%rax
 8058ded:	48 8b 08             	mov    (%rax),%rcx
 8058df0:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8058df4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8058df8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8058dfc:	48 89 c2             	mov    %rax,%rdx
 8058dff:	48 89 c8             	mov    %rcx,%rax
 8058e02:	48 39 c2             	cmp    %rax,%rdx
 8058e05:	b8 00 00 00 00       	mov    $0x0,%eax
 8058e0a:	0f 97 c0             	seta   %al
 8058e0d:	85 c0                	test   %eax,%eax
 8058e0f:	0f 84 05 00 00 00    	je     8058e1a <tcc_preprocess+0x1cb>
 8058e15:	e9 7d 00 00 00       	jmpq   8058e97 <tcc_preprocess+0x248>
 8058e1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8058e1e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8058e22:	48 89 c2             	mov    %rax,%rdx
 8058e25:	48 89 c8             	mov    %rcx,%rax
 8058e28:	48 39 c2             	cmp    %rax,%rdx
 8058e2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8058e30:	0f 92 c0             	setb   %al
 8058e33:	85 c0                	test   %eax,%eax
 8058e35:	0f 84 05 00 00 00    	je     8058e40 <tcc_preprocess+0x1f1>
 8058e3b:	e9 4b 00 00 00       	jmpq   8058e8b <tcc_preprocess+0x23c>
 8058e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058e44:	48 b9 48 02 00 00 00 	movabs $0x248,%rcx
 8058e4b:	00 00 00 
 8058e4e:	48 01 c8             	add    %rcx,%rax
 8058e51:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8058e55:	48 89 ca             	mov    %rcx,%rdx
 8058e58:	48 89 c1             	mov    %rax,%rcx
 8058e5b:	48 39 ca             	cmp    %rcx,%rdx
 8058e5e:	b8 00 00 00 00       	mov    $0x0,%eax
 8058e63:	0f 97 c0             	seta   %al
 8058e66:	85 c0                	test   %eax,%eax
 8058e68:	0f 84 05 00 00 00    	je     8058e73 <tcc_preprocess+0x224>
 8058e6e:	e9 0c 00 00 00       	jmpq   8058e7f <tcc_preprocess+0x230>
 8058e73:	48 8d 05 e6 28 03 00 	lea    0x328e6(%rip),%rax        # 808b760 <L.168>
 8058e7a:	e9 07 00 00 00       	jmpq   8058e86 <tcc_preprocess+0x237>
 8058e7f:	48 8d 05 d7 28 03 00 	lea    0x328d7(%rip),%rax        # 808b75d <L.167>
 8058e86:	e9 07 00 00 00       	jmpq   8058e92 <tcc_preprocess+0x243>
 8058e8b:	48 8d 05 c8 28 03 00 	lea    0x328c8(%rip),%rax        # 808b75a <L.166>
 8058e92:	e9 07 00 00 00       	jmpq   8058e9e <tcc_preprocess+0x24f>
 8058e97:	48 8d 05 b9 28 03 00 	lea    0x328b9(%rip),%rax        # 808b757 <L.165>
 8058e9e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8058ea2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8058ea6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8058eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058eae:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 8058eb5:	00 00 00 
 8058eb8:	48 01 c8             	add    %rcx,%rax
 8058ebb:	48 8b 0d de 4f 03 00 	mov    0x34fde(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058ec2:	48 8b 09             	mov    (%rcx),%rcx
 8058ec5:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8058ecc:	00 00 00 
 8058ecf:	48 01 d1             	add    %rdx,%rcx
 8058ed2:	48 8b 15 c7 4f 03 00 	mov    0x34fc7(%rip),%rdx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058ed9:	48 8b 12             	mov    (%rdx),%rdx
 8058edc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8058ee0:	48 b8 39 02 00 00 00 	movabs $0x239,%rax
 8058ee7:	00 00 00 
 8058eea:	48 01 c2             	add    %rax,%rdx
 8058eed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8058ef1:	49 89 c0             	mov    %rax,%r8
 8058ef4:	49 89 d3             	mov    %rdx,%r11
 8058ef7:	8b 01                	mov    (%rcx),%eax
 8058ef9:	49 89 c2             	mov    %rax,%r10
 8058efc:	48 8d 05 5e 28 03 00 	lea    0x3285e(%rip),%rax        # 808b761 <L.169>
 8058f03:	48 89 c6             	mov    %rax,%rsi
 8058f06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8058f0a:	48 8b 00             	mov    (%rax),%rax
 8058f0d:	48 89 c7             	mov    %rax,%rdi
 8058f10:	4c 89 d2             	mov    %r10,%rdx
 8058f13:	4c 89 d9             	mov    %r11,%rcx
 8058f16:	b8 00 00 00 00       	mov    $0x0,%eax
 8058f1b:	e8 50 ec 02 00       	callq  8087b70 <__preinit_array_end+0xd0>
 8058f20:	e9 41 00 00 00       	jmpq   8058f66 <tcc_preprocess+0x317>
 8058f25:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8058f28:	85 c0                	test   %eax,%eax
 8058f2a:	0f 84 36 00 00 00    	je     8058f66 <tcc_preprocess+0x317>
 8058f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8058f34:	48 b9 70 0c 00 00 00 	movabs $0xc70,%rcx
 8058f3b:	00 00 00 
 8058f3e:	48 01 c8             	add    %rcx,%rax
 8058f41:	48 8b 08             	mov    (%rax),%rcx
 8058f44:	48 89 ce             	mov    %rcx,%rsi
 8058f47:	48 8d 05 20 28 03 00 	lea    0x32820(%rip),%rax        # 808b76e <L.170>
 8058f4e:	48 89 c7             	mov    %rax,%rdi
 8058f51:	b8 00 00 00 00       	mov    $0x0,%eax
 8058f56:	e8 75 ed 02 00       	callq  8087cd0 <__preinit_array_end+0x230>
 8058f5b:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8058f5e:	83 c0 ff             	add    $0xffffffff,%eax
 8058f61:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8058f64:	eb bf                	jmp    8058f25 <tcc_preprocess+0x2d6>
 8058f66:	48 8b 05 33 4f 03 00 	mov    0x34f33(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8058f6d:	48 8b 00             	mov    (%rax),%rax
 8058f70:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8058f74:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8058f7b:	00 00 00 
 8058f7e:	48 01 c8             	add    %rcx,%rax
 8058f81:	8b 08                	mov    (%rax),%ecx
 8058f83:	89 4d d0             	mov    %ecx,-0x30(%rbp)
 8058f86:	48 8b 05 9b 4f 03 00 	mov    0x34f9b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058f8d:	8b 00                	mov    (%rax),%eax
 8058f8f:	83 f8 0a             	cmp    $0xa,%eax
 8058f92:	b8 00 00 00 00       	mov    $0x0,%eax
 8058f97:	0f 95 c0             	setne  %al
 8058f9a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8058f9d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8058fa0:	85 c0                	test   %eax,%eax
 8058fa2:	0f 84 05 00 00 00    	je     8058fad <tcc_preprocess+0x35e>
 8058fa8:	e9 05 00 00 00       	jmpq   8058fb2 <tcc_preprocess+0x363>
 8058fad:	e9 34 fd ff ff       	jmpq   8058ce6 <tcc_preprocess+0x97>
 8058fb2:	48 8b 05 ef 4f 03 00 	mov    0x34fef(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8058fb9:	48 89 c6             	mov    %rax,%rsi
 8058fbc:	48 8b 05 65 4f 03 00 	mov    0x34f65(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8058fc3:	8b 00                	mov    (%rax),%eax
 8058fc5:	48 89 c7             	mov    %rax,%rdi
 8058fc8:	b8 00 00 00 00       	mov    $0x0,%eax
 8058fcd:	e8 e2 88 ff ff       	callq  80518b4 <get_tok_str>
 8058fd2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8058fd6:	48 ba 70 0c 00 00 00 	movabs $0xc70,%rdx
 8058fdd:	00 00 00 
 8058fe0:	48 01 d1             	add    %rdx,%rcx
 8058fe3:	48 8b 11             	mov    (%rcx),%rdx
 8058fe6:	48 89 d6             	mov    %rdx,%rsi
 8058fe9:	48 89 c7             	mov    %rax,%rdi
 8058fec:	b8 00 00 00 00       	mov    $0x0,%eax
 8058ff1:	e8 da ec 02 00       	callq  8087cd0 <__preinit_array_end+0x230>
 8058ff6:	e9 eb fc ff ff       	jmpq   8058ce6 <tcc_preprocess+0x97>
 8058ffb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8058fff:	48 89 c7             	mov    %rax,%rdi
 8059002:	b8 00 00 00 00       	mov    $0x0,%eax
 8059007:	e8 71 ae ff ff       	callq  8053e7d <free_defines>
 805900c:	b8 00 00 00 00       	mov    $0x0,%eax
 8059011:	e9 00 00 00 00       	jmpq   8059016 <tcc_preprocess+0x3c7>
 8059016:	c9                   	leaveq 
 8059017:	c3                   	retq   

0000000008059018 <macro_twosharps>:
 8059018:	55                   	push   %rbp
 8059019:	48 89 e5             	mov    %rsp,%rbp
 805901c:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 8059023:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8059027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805902b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805902f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8059033:	49 89 c2             	mov    %rax,%r10
 8059036:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 805903a:	48 89 c6             	mov    %rax,%rsi
 805903d:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 8059041:	48 89 c7             	mov    %rax,%rdi
 8059044:	4c 89 d2             	mov    %r10,%rdx
 8059047:	b8 00 00 00 00       	mov    $0x0,%eax
 805904c:	e8 9a 24 00 00       	callq  805b4eb <TOK_GET>
 8059051:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8059054:	81 f8 b6 00 00 00    	cmp    $0xb6,%eax
 805905a:	0f 85 05 00 00 00    	jne    8059065 <macro_twosharps+0x4d>
 8059060:	e9 18 00 00 00       	jmpq   805907d <macro_twosharps+0x65>
 8059065:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8059068:	83 f8 00             	cmp    $0x0,%eax
 805906b:	0f 85 0a 00 00 00    	jne    805907b <macro_twosharps+0x63>
 8059071:	b8 00 00 00 00       	mov    $0x0,%eax
 8059076:	e9 58 03 00 00       	jmpq   80593d3 <macro_twosharps+0x3bb>
 805907b:	eb b2                	jmp    805902f <macro_twosharps+0x17>
 805907d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8059082:	89 45 98             	mov    %eax,-0x68(%rbp)
 8059085:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8059089:	48 89 c7             	mov    %rax,%rdi
 805908c:	b8 00 00 00 00       	mov    $0x0,%eax
 8059091:	e8 bc a3 ff ff       	callq  8053452 <tok_str_new>
 8059096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805909a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805909e:	48 8b 05 03 4f 03 00 	mov    0x34f03(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80590a5:	49 89 c2             	mov    %rax,%r10
 80590a8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 80590ac:	48 89 c6             	mov    %rax,%rsi
 80590af:	48 8b 05 72 4e 03 00 	mov    0x34e72(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80590b6:	48 89 c7             	mov    %rax,%rdi
 80590b9:	4c 89 d2             	mov    %r10,%rdx
 80590bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80590c1:	e8 25 24 00 00       	callq  805b4eb <TOK_GET>
 80590c6:	48 8b 05 5b 4e 03 00 	mov    0x34e5b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80590cd:	8b 00                	mov    (%rax),%eax
 80590cf:	83 f8 00             	cmp    $0x0,%eax
 80590d2:	0f 85 05 00 00 00    	jne    80590dd <macro_twosharps+0xc5>
 80590d8:	e9 d4 02 00 00       	jmpq   80593b1 <macro_twosharps+0x399>
 80590dd:	48 8b 05 44 4e 03 00 	mov    0x34e44(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80590e4:	8b 00                	mov    (%rax),%eax
 80590e6:	81 f8 b6 00 00 00    	cmp    $0xb6,%eax
 80590ec:	0f 85 05 00 00 00    	jne    80590f7 <macro_twosharps+0xdf>
 80590f2:	e9 a7 ff ff ff       	jmpq   805909e <macro_twosharps+0x86>
 80590f7:	48 8b 05 2a 4e 03 00 	mov    0x34e2a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80590fe:	8b 00                	mov    (%rax),%eax
 8059100:	81 f8 cf 00 00 00    	cmp    $0xcf,%eax
 8059106:	0f 85 12 00 00 00    	jne    805911e <macro_twosharps+0x106>
 805910c:	8b 45 98             	mov    -0x68(%rbp),%eax
 805910f:	83 f8 00             	cmp    $0x0,%eax
 8059112:	0f 8d 06 00 00 00    	jge    805911e <macro_twosharps+0x106>
 8059118:	8b 45 c8             	mov    -0x38(%rbp),%eax
 805911b:	89 45 98             	mov    %eax,-0x68(%rbp)
 805911e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8059122:	8b 08                	mov    (%rax),%ecx
 8059124:	81 f9 b6 00 00 00    	cmp    $0xb6,%ecx
 805912a:	0f 85 35 02 00 00    	jne    8059365 <macro_twosharps+0x34d>
 8059130:	8b 45 98             	mov    -0x68(%rbp),%eax
 8059133:	83 f8 00             	cmp    $0x0,%eax
 8059136:	0f 8c 06 00 00 00    	jl     8059142 <macro_twosharps+0x12a>
 805913c:	8b 45 98             	mov    -0x68(%rbp),%eax
 805913f:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8059142:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8059146:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805914d:	00 00 00 
 8059150:	48 01 c8             	add    %rcx,%rax
 8059153:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8059157:	8b 08                	mov    (%rax),%ecx
 8059159:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805915c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805915f:	81 f8 cf 00 00 00    	cmp    $0xcf,%eax
 8059165:	0f 85 1c 00 00 00    	jne    8059187 <macro_twosharps+0x16f>
 805916b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805916f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8059176:	00 00 00 
 8059179:	48 01 c8             	add    %rcx,%rax
 805917c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8059180:	8b 08                	mov    (%rax),%ecx
 8059182:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8059185:	eb d5                	jmp    805915c <macro_twosharps+0x144>
 8059187:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805918a:	85 c0                	test   %eax,%eax
 805918c:	0f 84 ce 01 00 00    	je     8059360 <macro_twosharps+0x348>
 8059192:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8059195:	81 f8 b6 00 00 00    	cmp    $0xb6,%eax
 805919b:	0f 84 bf 01 00 00    	je     8059360 <macro_twosharps+0x348>
 80591a1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80591a5:	49 89 c2             	mov    %rax,%r10
 80591a8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 80591ac:	48 89 c6             	mov    %rax,%rsi
 80591af:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 80591b3:	48 89 c7             	mov    %rax,%rdi
 80591b6:	4c 89 d2             	mov    %r10,%rdx
 80591b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80591be:	e8 28 23 00 00       	callq  805b4eb <TOK_GET>
 80591c3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 80591c7:	48 89 c7             	mov    %rax,%rdi
 80591ca:	b8 00 00 00 00       	mov    $0x0,%eax
 80591cf:	e8 f3 81 ff ff       	callq  80513c7 <cstr_new>
 80591d4:	48 8b 05 cd 4d 03 00 	mov    0x34dcd(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80591db:	48 89 c6             	mov    %rax,%rsi
 80591de:	48 8b 05 43 4d 03 00 	mov    0x34d43(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80591e5:	8b 00                	mov    (%rax),%eax
 80591e7:	48 89 c7             	mov    %rax,%rdi
 80591ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80591ef:	e8 c0 86 ff ff       	callq  80518b4 <get_tok_str>
 80591f4:	48 89 c6             	mov    %rax,%rsi
 80591f7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 80591fb:	48 89 c7             	mov    %rax,%rdi
 80591fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8059203:	e8 cd 80 ff ff       	callq  80512d5 <cstr_cat>
 8059208:	8b 45 a0             	mov    -0x60(%rbp),%eax
 805920b:	89 45 9c             	mov    %eax,-0x64(%rbp)
 805920e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8059212:	48 89 c6             	mov    %rax,%rsi
 8059215:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8059218:	48 89 c7             	mov    %rax,%rdi
 805921b:	b8 00 00 00 00       	mov    $0x0,%eax
 8059220:	e8 8f 86 ff ff       	callq  80518b4 <get_tok_str>
 8059225:	48 89 c6             	mov    %rax,%rsi
 8059228:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 805922c:	48 89 c7             	mov    %rax,%rdi
 805922f:	b8 00 00 00 00       	mov    $0x0,%eax
 8059234:	e8 9c 80 ff ff       	callq  80512d5 <cstr_cat>
 8059239:	b8 00 00 00 00       	mov    $0x0,%eax
 805923e:	48 89 c6             	mov    %rax,%rsi
 8059241:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 8059245:	48 89 c7             	mov    %rax,%rdi
 8059248:	b8 00 00 00 00       	mov    $0x0,%eax
 805924d:	e8 fb 7f ff ff       	callq  805124d <cstr_ccat>
 8059252:	8b 45 a0             	mov    -0x60(%rbp),%eax
 8059255:	49 89 c2             	mov    %rax,%r10
 8059258:	48 8d 05 11 25 03 00 	lea    0x32511(%rip),%rax        # 808b770 <L.171>
 805925f:	48 89 c6             	mov    %rax,%rsi
 8059262:	48 8b 05 27 4c 03 00 	mov    0x34c27(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8059269:	48 8b 00             	mov    (%rax),%rax
 805926c:	48 89 c7             	mov    %rax,%rdi
 805926f:	4c 89 d2             	mov    %r10,%rdx
 8059272:	b8 00 00 00 00       	mov    $0x0,%eax
 8059277:	e8 80 48 ff ff       	callq  804dafc <tcc_open_bf>
 805927c:	48 8b 05 1d 4c 03 00 	mov    0x34c1d(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8059283:	48 8b 00             	mov    (%rax),%rax
 8059286:	48 b9 39 06 00 00 00 	movabs $0x639,%rcx
 805928d:	00 00 00 
 8059290:	48 01 c8             	add    %rcx,%rax
 8059293:	8b 4d a0             	mov    -0x60(%rbp),%ecx
 8059296:	49 89 ca             	mov    %rcx,%r10
 8059299:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 805929d:	48 89 ce             	mov    %rcx,%rsi
 80592a0:	48 89 c7             	mov    %rax,%rdi
 80592a3:	4c 89 d2             	mov    %r10,%rdx
 80592a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80592ab:	e8 c0 d9 02 00       	callq  8086c70 <memcpy>
 80592b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80592b5:	e8 1b 01 00 00       	callq  80593d5 <next_nomacro1>
 80592ba:	48 8b 05 df 4b 03 00 	mov    0x34bdf(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80592c1:	48 8b 00             	mov    (%rax),%rax
 80592c4:	48 8b 08             	mov    (%rax),%rcx
 80592c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80592cc:	0f b6 11             	movzbl (%rcx),%edx
 80592cf:	39 d0                	cmp    %edx,%eax
 80592d1:	0f 85 05 00 00 00    	jne    80592dc <macro_twosharps+0x2c4>
 80592d7:	e9 69 00 00 00       	jmpq   8059345 <macro_twosharps+0x32d>
 80592dc:	48 8b 05 c5 4c 03 00 	mov    0x34cc5(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80592e3:	49 89 c2             	mov    %rax,%r10
 80592e6:	48 8b 05 3b 4c 03 00 	mov    0x34c3b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80592ed:	8b 00                	mov    (%rax),%eax
 80592ef:	48 89 c6             	mov    %rax,%rsi
 80592f2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 80592f6:	48 89 c7             	mov    %rax,%rdi
 80592f9:	4c 89 d2             	mov    %r10,%rdx
 80592fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8059301:	e8 18 a3 ff ff       	callq  805361e <tok_str_add2>
 8059306:	8b 45 9c             	mov    -0x64(%rbp),%eax
 8059309:	48 63 c0             	movslq %eax,%rax
 805930c:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 8059310:	48 89 c2             	mov    %rax,%rdx
 8059313:	48 01 d1             	add    %rdx,%rcx
 8059316:	49 89 cb             	mov    %rcx,%r11
 8059319:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805931d:	49 89 c2             	mov    %rax,%r10
 8059320:	8b 45 9c             	mov    -0x64(%rbp),%eax
 8059323:	48 89 c6             	mov    %rax,%rsi
 8059326:	48 8d 05 4b 24 03 00 	lea    0x3244b(%rip),%rax        # 808b778 <L.172>
 805932d:	48 89 c7             	mov    %rax,%rdi
 8059330:	4c 89 d2             	mov    %r10,%rdx
 8059333:	4c 89 d9             	mov    %r11,%rcx
 8059336:	b8 00 00 00 00       	mov    $0x0,%eax
 805933b:	e8 bf 45 ff ff       	callq  804d8ff <tcc_warning>
 8059340:	e9 6b ff ff ff       	jmpq   80592b0 <macro_twosharps+0x298>
 8059345:	b8 00 00 00 00       	mov    $0x0,%eax
 805934a:	e8 3b 49 ff ff       	callq  804dc8a <tcc_close>
 805934f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 8059353:	48 89 c7             	mov    %rax,%rdi
 8059356:	b8 00 00 00 00       	mov    $0x0,%eax
 805935b:	e8 9c 80 ff ff       	callq  80513fc <cstr_free>
 8059360:	e9 b9 fd ff ff       	jmpq   805911e <macro_twosharps+0x106>
 8059365:	48 8b 05 bc 4b 03 00 	mov    0x34bbc(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805936c:	8b 00                	mov    (%rax),%eax
 805936e:	81 f8 cf 00 00 00    	cmp    $0xcf,%eax
 8059374:	0f 84 08 00 00 00    	je     8059382 <macro_twosharps+0x36a>
 805937a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805937f:	89 45 98             	mov    %eax,-0x68(%rbp)
 8059382:	48 8b 05 1f 4c 03 00 	mov    0x34c1f(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8059389:	49 89 c2             	mov    %rax,%r10
 805938c:	48 8b 05 95 4b 03 00 	mov    0x34b95(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8059393:	8b 00                	mov    (%rax),%eax
 8059395:	48 89 c6             	mov    %rax,%rsi
 8059398:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 805939c:	48 89 c7             	mov    %rax,%rdi
 805939f:	4c 89 d2             	mov    %r10,%rdx
 80593a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80593a7:	e8 72 a2 ff ff       	callq  805361e <tok_str_add2>
 80593ac:	e9 ed fc ff ff       	jmpq   805909e <macro_twosharps+0x86>
 80593b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80593b6:	48 89 c6             	mov    %rax,%rsi
 80593b9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 80593bd:	48 89 c7             	mov    %rax,%rdi
 80593c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80593c5:	e8 b0 a1 ff ff       	callq  805357a <tok_str_add>
 80593ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80593ce:	e9 00 00 00 00       	jmpq   80593d3 <macro_twosharps+0x3bb>
 80593d3:	c9                   	leaveq 
 80593d4:	c3                   	retq   

00000000080593d5 <next_nomacro1>:
 80593d5:	55                   	push   %rbp
 80593d6:	48 89 e5             	mov    %rsp,%rbp
 80593d9:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 80593e0:	48 8b 05 b9 4a 03 00 	mov    0x34ab9(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80593e7:	48 8b 00             	mov    (%rax),%rax
 80593ea:	48 8b 08             	mov    (%rax),%rcx
 80593ed:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80593f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80593f5:	0f b6 08             	movzbl (%rax),%ecx
 80593f8:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 80593fb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80593fe:	e9 05 00 00 00       	jmpq   8059408 <next_nomacro1+0x33>
 8059403:	e9 09 00 00 00       	jmpq   8059411 <next_nomacro1+0x3c>
 8059408:	83 f8 20             	cmp    $0x20,%eax
 805940b:	0f 85 05 00 00 00    	jne    8059416 <next_nomacro1+0x41>
 8059411:	e9 09 00 00 00       	jmpq   805941f <next_nomacro1+0x4a>
 8059416:	83 f8 09             	cmp    $0x9,%eax
 8059419:	0f 85 2f 00 00 00    	jne    805944e <next_nomacro1+0x79>
 805941f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059422:	4c 8b 1d ff 4a 03 00 	mov    0x34aff(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8059429:	41 89 03             	mov    %eax,(%r11)
 805942c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059430:	48 89 c1             	mov    %rax,%rcx
 8059433:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805943a:	00 00 00 
 805943d:	48 01 d0             	add    %rdx,%rax
 8059440:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059444:	e9 61 1e 00 00       	jmpq   805b2aa <next_nomacro1+0x1ed5>
 8059449:	e9 09 00 00 00       	jmpq   8059457 <next_nomacro1+0x82>
 805944e:	83 f8 0c             	cmp    $0xc,%eax
 8059451:	0f 85 05 00 00 00    	jne    805945c <next_nomacro1+0x87>
 8059457:	e9 09 00 00 00       	jmpq   8059465 <next_nomacro1+0x90>
 805945c:	83 f8 0b             	cmp    $0xb,%eax
 805945f:	0f 85 05 00 00 00    	jne    805946a <next_nomacro1+0x95>
 8059465:	e9 09 00 00 00       	jmpq   8059473 <next_nomacro1+0x9e>
 805946a:	83 f8 0d             	cmp    $0xd,%eax
 805946d:	0f 85 22 00 00 00    	jne    8059495 <next_nomacro1+0xc0>
 8059473:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059477:	48 89 c1             	mov    %rax,%rcx
 805947a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059481:	00 00 00 
 8059484:	48 01 d0             	add    %rdx,%rax
 8059487:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805948b:	e9 61 ff ff ff       	jmpq   80593f1 <next_nomacro1+0x1c>
 8059490:	e9 09 00 00 00       	jmpq   805949e <next_nomacro1+0xc9>
 8059495:	83 f8 5c             	cmp    $0x5c,%eax
 8059498:	0f 85 48 03 00 00    	jne    80597e6 <next_nomacro1+0x411>
 805949e:	48 8b 05 fb 49 03 00 	mov    0x349fb(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80594a5:	48 8b 00             	mov    (%rax),%rax
 80594a8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80594af:	00 00 00 
 80594b2:	48 01 c8             	add    %rcx,%rax
 80594b5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80594b9:	48 8b 10             	mov    (%rax),%rdx
 80594bc:	48 89 c8             	mov    %rcx,%rax
 80594bf:	48 89 d1             	mov    %rdx,%rcx
 80594c2:	48 39 c8             	cmp    %rcx,%rax
 80594c5:	0f 82 6d 00 00 00    	jb     8059538 <next_nomacro1+0x163>
 80594cb:	48 8b 05 ce 49 03 00 	mov    0x349ce(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80594d2:	48 8b 00             	mov    (%rax),%rax
 80594d5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80594d9:	48 89 08             	mov    %rcx,(%rax)
 80594dc:	b8 00 00 00 00       	mov    $0x0,%eax
 80594e1:	e8 fe 8b ff ff       	callq  80520e4 <handle_eob>
 80594e6:	48 8b 05 b3 49 03 00 	mov    0x349b3(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80594ed:	48 8b 00             	mov    (%rax),%rax
 80594f0:	48 8b 08             	mov    (%rax),%rcx
 80594f3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80594f7:	48 8b 05 a2 49 03 00 	mov    0x349a2(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80594fe:	48 8b 00             	mov    (%rax),%rax
 8059501:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8059508:	00 00 00 
 805950b:	48 01 c8             	add    %rcx,%rax
 805950e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8059512:	48 8b 10             	mov    (%rax),%rdx
 8059515:	48 89 c8             	mov    %rcx,%rax
 8059518:	48 89 d1             	mov    %rdx,%rcx
 805951b:	48 39 c8             	cmp    %rcx,%rax
 805951e:	0f 82 0a 00 00 00    	jb     805952e <next_nomacro1+0x159>
 8059524:	e9 51 00 00 00       	jmpq   805957a <next_nomacro1+0x1a5>
 8059529:	e9 05 00 00 00       	jmpq   8059533 <next_nomacro1+0x15e>
 805952e:	e9 be fe ff ff       	jmpq   80593f1 <next_nomacro1+0x1c>
 8059533:	e9 42 00 00 00       	jmpq   805957a <next_nomacro1+0x1a5>
 8059538:	48 8b 05 61 49 03 00 	mov    0x34961(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805953f:	48 8b 00             	mov    (%rax),%rax
 8059542:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8059546:	48 89 08             	mov    %rcx,(%rax)
 8059549:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805954d:	0f b6 08             	movzbl (%rax),%ecx
 8059550:	4c 8b 1d b1 49 03 00 	mov    0x349b1(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8059557:	41 89 0b             	mov    %ecx,(%r11)
 805955a:	b8 00 00 00 00       	mov    $0x0,%eax
 805955f:	e8 ed 8c ff ff       	callq  8052251 <handle_stray>
 8059564:	48 8b 05 35 49 03 00 	mov    0x34935(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805956b:	48 8b 00             	mov    (%rax),%rax
 805956e:	48 8b 08             	mov    (%rax),%rcx
 8059571:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8059575:	e9 77 fe ff ff       	jmpq   80593f1 <next_nomacro1+0x1c>
 805957a:	48 8b 05 0f 49 03 00 	mov    0x3490f(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8059581:	48 8b 00             	mov    (%rax),%rax
 8059584:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8059588:	48 8b 05 89 49 03 00 	mov    0x34989(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 805958f:	8b 00                	mov    (%rax),%eax
 8059591:	83 e0 04             	and    $0x4,%eax
 8059594:	85 c0                	test   %eax,%eax
 8059596:	0f 84 48 00 00 00    	je     80595e4 <next_nomacro1+0x20f>
 805959c:	48 8b 05 6d 49 03 00 	mov    0x3496d(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80595a3:	8b 00                	mov    (%rax),%eax
 80595a5:	83 e0 08             	and    $0x8,%eax
 80595a8:	85 c0                	test   %eax,%eax
 80595aa:	0f 84 05 00 00 00    	je     80595b5 <next_nomacro1+0x1e0>
 80595b0:	e9 2f 00 00 00       	jmpq   80595e4 <next_nomacro1+0x20f>
 80595b5:	48 8b 05 54 49 03 00 	mov    0x34954(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80595bc:	8b 00                	mov    (%rax),%eax
 80595be:	83 c8 08             	or     $0x8,%eax
 80595c1:	4c 8b 1d 48 49 03 00 	mov    0x34948(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80595c8:	41 89 03             	mov    %eax,(%r11)
 80595cb:	b8 0a 00 00 00       	mov    $0xa,%eax
 80595d0:	4c 8b 1d 51 49 03 00 	mov    0x34951(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80595d7:	41 89 03             	mov    %eax,(%r11)
 80595da:	e9 cb 1c 00 00       	jmpq   805b2aa <next_nomacro1+0x1ed5>
 80595df:	e9 f8 01 00 00       	jmpq   80597dc <next_nomacro1+0x407>
 80595e4:	48 8b 05 2d 49 03 00 	mov    0x3492d(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 80595eb:	8b 00                	mov    (%rax),%eax
 80595ed:	83 e0 01             	and    $0x1,%eax
 80595f0:	85 c0                	test   %eax,%eax
 80595f2:	0f 84 05 00 00 00    	je     80595fd <next_nomacro1+0x228>
 80595f8:	e9 14 00 00 00       	jmpq   8059611 <next_nomacro1+0x23c>
 80595fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8059602:	4c 8b 1d 1f 49 03 00 	mov    0x3491f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8059609:	41 89 03             	mov    %eax,(%r11)
 805960c:	e9 cb 01 00 00       	jmpq   80597dc <next_nomacro1+0x407>
 8059611:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8059615:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805961c:	00 00 00 
 805961f:	48 01 c8             	add    %rcx,%rax
 8059622:	48 8b 0d 77 48 03 00 	mov    0x34877(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8059629:	48 8b 09             	mov    (%rcx),%rcx
 805962c:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 8059633:	00 00 00 
 8059636:	48 01 d1             	add    %rdx,%rcx
 8059639:	48 8b 10             	mov    (%rax),%rdx
 805963c:	48 8b 01             	mov    (%rcx),%rax
 805963f:	48 89 d1             	mov    %rdx,%rcx
 8059642:	48 89 c2             	mov    %rax,%rdx
 8059645:	48 39 d1             	cmp    %rdx,%rcx
 8059648:	0f 84 19 00 00 00    	je     8059667 <next_nomacro1+0x292>
 805964e:	48 8d 05 65 21 03 00 	lea    0x32165(%rip),%rax        # 808b7ba <L.173>
 8059655:	48 89 c7             	mov    %rax,%rdi
 8059658:	b8 00 00 00 00       	mov    $0x0,%eax
 805965d:	e8 65 40 ff ff       	callq  804d6c7 <tcc_error>
 8059662:	e9 75 01 00 00       	jmpq   80597dc <next_nomacro1+0x407>
 8059667:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805966b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8059672:	00 00 00 
 8059675:	48 01 c8             	add    %rcx,%rax
 8059678:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805967c:	48 ba 48 02 00 00 00 	movabs $0x248,%rdx
 8059683:	00 00 00 
 8059686:	48 01 d1             	add    %rdx,%rcx
 8059689:	48 8b 10             	mov    (%rax),%rdx
 805968c:	48 89 d0             	mov    %rdx,%rax
 805968f:	48 89 ca             	mov    %rcx,%rdx
 8059692:	48 39 d0             	cmp    %rdx,%rax
 8059695:	0f 85 14 00 00 00    	jne    80596af <next_nomacro1+0x2da>
 805969b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80596a0:	4c 8b 1d 81 48 03 00 	mov    0x34881(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80596a7:	41 89 03             	mov    %eax,(%r11)
 80596aa:	e9 2d 01 00 00       	jmpq   80597dc <next_nomacro1+0x407>
 80596af:	48 8b 05 5a 48 03 00 	mov    0x3485a(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80596b6:	8b 00                	mov    (%rax),%eax
 80596b8:	83 e0 f7             	and    $0xfffffff7,%eax
 80596bb:	4c 8b 1d 4e 48 03 00 	mov    0x3484e(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80596c2:	41 89 03             	mov    %eax,(%r11)
 80596c5:	48 8b 05 44 48 03 00 	mov    0x34844(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80596cc:	8b 00                	mov    (%rax),%eax
 80596ce:	83 e0 04             	and    $0x4,%eax
 80596d1:	85 c0                	test   %eax,%eax
 80596d3:	0f 84 72 00 00 00    	je     805974b <next_nomacro1+0x376>
 80596d9:	48 8b 05 c0 47 03 00 	mov    0x347c0(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80596e0:	48 8b 00             	mov    (%rax),%rax
 80596e3:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80596ea:	00 00 00 
 80596ed:	48 01 c8             	add    %rcx,%rax
 80596f0:	48 8b 0d a9 47 03 00 	mov    0x347a9(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80596f7:	48 8b 09             	mov    (%rcx),%rcx
 80596fa:	48 ba 39 00 00 00 00 	movabs $0x39,%rdx
 8059701:	00 00 00 
 8059704:	48 01 d1             	add    %rdx,%rcx
 8059707:	48 8b 15 92 47 03 00 	mov    0x34792(%rip),%rdx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805970e:	48 8b 12             	mov    (%rdx),%rdx
 8059711:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8059715:	48 b8 28 00 00 00 00 	movabs $0x28,%rax
 805971c:	00 00 00 
 805971f:	48 01 c2             	add    %rax,%rdx
 8059722:	8b 02                	mov    (%rdx),%eax
 8059724:	49 89 c3             	mov    %rax,%r11
 8059727:	49 89 ca             	mov    %rcx,%r10
 805972a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805972e:	0f be 00             	movsbl (%rax),%eax
 8059731:	48 89 c6             	mov    %rax,%rsi
 8059734:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8059738:	48 89 c7             	mov    %rax,%rdi
 805973b:	4c 89 d2             	mov    %r10,%rdx
 805973e:	4c 89 d9             	mov    %r11,%rcx
 8059741:	b8 00 00 00 00       	mov    $0x0,%eax
 8059746:	e8 72 1b 00 00       	callq  805b2bd <add_cached_include>
 805974b:	48 8b 05 3e 47 03 00 	mov    0x3473e(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8059752:	48 8b 00             	mov    (%rax),%rax
 8059755:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 805975c:	00 00 00 
 805975f:	48 01 c8             	add    %rcx,%rax
 8059762:	8b 08                	mov    (%rax),%ecx
 8059764:	85 c9                	test   %ecx,%ecx
 8059766:	0f 84 25 00 00 00    	je     8059791 <next_nomacro1+0x3bc>
 805976c:	b8 00 00 00 00       	mov    $0x0,%eax
 8059771:	49 89 c2             	mov    %rax,%r10
 8059774:	b8 00 00 00 00       	mov    $0x0,%eax
 8059779:	48 89 c6             	mov    %rax,%rsi
 805977c:	b8 a2 00 00 00       	mov    $0xa2,%eax
 8059781:	48 89 c7             	mov    %rax,%rdi
 8059784:	4c 89 d2             	mov    %r10,%rdx
 8059787:	b8 00 00 00 00       	mov    $0x0,%eax
 805978c:	e8 8d 52 01 00       	callq  806ea1e <put_stabd>
 8059791:	b8 00 00 00 00       	mov    $0x0,%eax
 8059796:	e8 ef 44 ff ff       	callq  804dc8a <tcc_close>
 805979b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805979f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80597a6:	00 00 00 
 80597a9:	48 01 c8             	add    %rcx,%rax
 80597ac:	48 8b 08             	mov    (%rax),%rcx
 80597af:	48 89 ca             	mov    %rcx,%rdx
 80597b2:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 80597b6:	48 ba f8 ff ff ff ff 	movabs $0xfffffffffffffff8,%rdx
 80597bd:	ff ff ff 
 80597c0:	48 01 d1             	add    %rdx,%rcx
 80597c3:	48 89 08             	mov    %rcx,(%rax)
 80597c6:	48 8b 05 d3 46 03 00 	mov    0x346d3(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80597cd:	48 8b 00             	mov    (%rax),%rax
 80597d0:	48 8b 08             	mov    (%rax),%rcx
 80597d3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80597d7:	e9 15 fc ff ff       	jmpq   80593f1 <next_nomacro1+0x1c>
 80597dc:	e9 ba 1a 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 80597e1:	e9 09 00 00 00       	jmpq   80597ef <next_nomacro1+0x41a>
 80597e6:	83 f8 0a             	cmp    $0xa,%eax
 80597e9:	0f 85 86 00 00 00    	jne    8059875 <next_nomacro1+0x4a0>
 80597ef:	48 8b 05 aa 46 03 00 	mov    0x346aa(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80597f6:	48 8b 00             	mov    (%rax),%rax
 80597f9:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8059800:	00 00 00 
 8059803:	48 01 c8             	add    %rcx,%rax
 8059806:	8b 08                	mov    (%rax),%ecx
 8059808:	48 89 ca             	mov    %rcx,%rdx
 805980b:	83 c1 01             	add    $0x1,%ecx
 805980e:	89 08                	mov    %ecx,(%rax)
 8059810:	48 8b 05 f9 46 03 00 	mov    0x346f9(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8059817:	8b 00                	mov    (%rax),%eax
 8059819:	83 c8 01             	or     $0x1,%eax
 805981c:	4c 8b 1d ed 46 03 00 	mov    0x346ed(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8059823:	41 89 03             	mov    %eax,(%r11)
 8059826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805982a:	48 89 c1             	mov    %rax,%rcx
 805982d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059834:	00 00 00 
 8059837:	48 01 d0             	add    %rdx,%rax
 805983a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805983e:	48 8b 05 d3 46 03 00 	mov    0x346d3(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 8059845:	8b 00                	mov    (%rax),%eax
 8059847:	83 e0 04             	and    $0x4,%eax
 805984a:	b9 00 00 00 00       	mov    $0x0,%ecx
 805984f:	39 c1                	cmp    %eax,%ecx
 8059851:	0f 85 05 00 00 00    	jne    805985c <next_nomacro1+0x487>
 8059857:	e9 95 fb ff ff       	jmpq   80593f1 <next_nomacro1+0x1c>
 805985c:	b8 0a 00 00 00       	mov    $0xa,%eax
 8059861:	4c 8b 1d c0 46 03 00 	mov    0x346c0(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8059868:	41 89 03             	mov    %eax,(%r11)
 805986b:	e9 3a 1a 00 00       	jmpq   805b2aa <next_nomacro1+0x1ed5>
 8059870:	e9 09 00 00 00       	jmpq   805987e <next_nomacro1+0x4a9>
 8059875:	83 f8 23             	cmp    $0x23,%eax
 8059878:	0f 85 51 01 00 00    	jne    80599cf <next_nomacro1+0x5fa>
 805987e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059882:	48 89 c1             	mov    %rax,%rcx
 8059885:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805988c:	00 00 00 
 805988f:	48 01 d0             	add    %rdx,%rax
 8059892:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059896:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805989a:	0f b6 08             	movzbl (%rax),%ecx
 805989d:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 80598a0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80598a3:	83 f8 5c             	cmp    $0x5c,%eax
 80598a6:	0f 85 25 00 00 00    	jne    80598d1 <next_nomacro1+0x4fc>
 80598ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80598b0:	48 89 c7             	mov    %rax,%rdi
 80598b3:	b8 00 00 00 00       	mov    $0x0,%eax
 80598b8:	e8 c7 89 ff ff       	callq  8052284 <handle_stray1>
 80598bd:	89 45 f8             	mov    %eax,-0x8(%rbp)
 80598c0:	48 8b 05 d9 45 03 00 	mov    0x345d9(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80598c7:	48 8b 00             	mov    (%rax),%rax
 80598ca:	48 8b 08             	mov    (%rax),%rcx
 80598cd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80598d1:	48 8b 05 38 46 03 00 	mov    0x34638(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 80598d8:	8b 00                	mov    (%rax),%eax
 80598da:	83 e0 01             	and    $0x1,%eax
 80598dd:	85 c0                	test   %eax,%eax
 80598df:	0f 84 59 00 00 00    	je     805993e <next_nomacro1+0x569>
 80598e5:	48 8b 05 2c 46 03 00 	mov    0x3462c(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 80598ec:	8b 00                	mov    (%rax),%eax
 80598ee:	83 e0 01             	and    $0x1,%eax
 80598f1:	85 c0                	test   %eax,%eax
 80598f3:	0f 84 45 00 00 00    	je     805993e <next_nomacro1+0x569>
 80598f9:	48 8b 05 a0 45 03 00 	mov    0x345a0(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8059900:	48 8b 00             	mov    (%rax),%rax
 8059903:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8059907:	48 89 08             	mov    %rcx,(%rax)
 805990a:	48 8b 05 ff 45 03 00 	mov    0x345ff(%rip),%rax        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 8059911:	8b 00                	mov    (%rax),%eax
 8059913:	83 e0 02             	and    $0x2,%eax
 8059916:	48 89 c7             	mov    %rax,%rdi
 8059919:	b8 00 00 00 00       	mov    $0x0,%eax
 805991e:	e8 8d b2 ff ff       	callq  8054bb0 <preprocess>
 8059923:	48 8b 05 76 45 03 00 	mov    0x34576(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805992a:	48 8b 00             	mov    (%rax),%rax
 805992d:	48 8b 08             	mov    (%rax),%rcx
 8059930:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8059934:	e9 05 ff ff ff       	jmpq   805983e <next_nomacro1+0x469>
 8059939:	e9 87 00 00 00       	jmpq   80599c5 <next_nomacro1+0x5f0>
 805993e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059941:	83 f8 23             	cmp    $0x23,%eax
 8059944:	0f 85 2c 00 00 00    	jne    8059976 <next_nomacro1+0x5a1>
 805994a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805994e:	48 89 c1             	mov    %rax,%rcx
 8059951:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059958:	00 00 00 
 805995b:	48 01 d0             	add    %rdx,%rax
 805995e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059962:	b8 b6 00 00 00       	mov    $0xb6,%eax
 8059967:	4c 8b 1d ba 45 03 00 	mov    0x345ba(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805996e:	41 89 03             	mov    %eax,(%r11)
 8059971:	e9 4f 00 00 00       	jmpq   80599c5 <next_nomacro1+0x5f0>
 8059976:	48 8b 05 9b 45 03 00 	mov    0x3459b(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 805997d:	8b 00                	mov    (%rax),%eax
 805997f:	83 e0 08             	and    $0x8,%eax
 8059982:	85 c0                	test   %eax,%eax
 8059984:	0f 84 2c 00 00 00    	je     80599b6 <next_nomacro1+0x5e1>
 805998a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805998e:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8059995:	00 00 00 
 8059998:	48 29 c8             	sub    %rcx,%rax
 805999b:	48 89 c7             	mov    %rax,%rdi
 805999e:	b8 00 00 00 00       	mov    $0x0,%eax
 80599a3:	e8 e1 89 ff ff       	callq  8052389 <parse_line_comment>
 80599a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80599ac:	e9 40 fa ff ff       	jmpq   80593f1 <next_nomacro1+0x1c>
 80599b1:	e9 0f 00 00 00       	jmpq   80599c5 <next_nomacro1+0x5f0>
 80599b6:	b8 23 00 00 00       	mov    $0x23,%eax
 80599bb:	4c 8b 1d 66 45 03 00 	mov    0x34566(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80599c2:	41 89 03             	mov    %eax,(%r11)
 80599c5:	e9 d1 18 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 80599ca:	e9 09 00 00 00       	jmpq   80599d8 <next_nomacro1+0x603>
 80599cf:	83 f8 61             	cmp    $0x61,%eax
 80599d2:	0f 85 05 00 00 00    	jne    80599dd <next_nomacro1+0x608>
 80599d8:	e9 09 00 00 00       	jmpq   80599e6 <next_nomacro1+0x611>
 80599dd:	83 f8 62             	cmp    $0x62,%eax
 80599e0:	0f 85 05 00 00 00    	jne    80599eb <next_nomacro1+0x616>
 80599e6:	e9 09 00 00 00       	jmpq   80599f4 <next_nomacro1+0x61f>
 80599eb:	83 f8 63             	cmp    $0x63,%eax
 80599ee:	0f 85 05 00 00 00    	jne    80599f9 <next_nomacro1+0x624>
 80599f4:	e9 09 00 00 00       	jmpq   8059a02 <next_nomacro1+0x62d>
 80599f9:	83 f8 64             	cmp    $0x64,%eax
 80599fc:	0f 85 05 00 00 00    	jne    8059a07 <next_nomacro1+0x632>
 8059a02:	e9 09 00 00 00       	jmpq   8059a10 <next_nomacro1+0x63b>
 8059a07:	83 f8 65             	cmp    $0x65,%eax
 8059a0a:	0f 85 05 00 00 00    	jne    8059a15 <next_nomacro1+0x640>
 8059a10:	e9 09 00 00 00       	jmpq   8059a1e <next_nomacro1+0x649>
 8059a15:	83 f8 66             	cmp    $0x66,%eax
 8059a18:	0f 85 05 00 00 00    	jne    8059a23 <next_nomacro1+0x64e>
 8059a1e:	e9 09 00 00 00       	jmpq   8059a2c <next_nomacro1+0x657>
 8059a23:	83 f8 67             	cmp    $0x67,%eax
 8059a26:	0f 85 05 00 00 00    	jne    8059a31 <next_nomacro1+0x65c>
 8059a2c:	e9 09 00 00 00       	jmpq   8059a3a <next_nomacro1+0x665>
 8059a31:	83 f8 68             	cmp    $0x68,%eax
 8059a34:	0f 85 05 00 00 00    	jne    8059a3f <next_nomacro1+0x66a>
 8059a3a:	e9 09 00 00 00       	jmpq   8059a48 <next_nomacro1+0x673>
 8059a3f:	83 f8 69             	cmp    $0x69,%eax
 8059a42:	0f 85 05 00 00 00    	jne    8059a4d <next_nomacro1+0x678>
 8059a48:	e9 09 00 00 00       	jmpq   8059a56 <next_nomacro1+0x681>
 8059a4d:	83 f8 6a             	cmp    $0x6a,%eax
 8059a50:	0f 85 05 00 00 00    	jne    8059a5b <next_nomacro1+0x686>
 8059a56:	e9 09 00 00 00       	jmpq   8059a64 <next_nomacro1+0x68f>
 8059a5b:	83 f8 6b             	cmp    $0x6b,%eax
 8059a5e:	0f 85 05 00 00 00    	jne    8059a69 <next_nomacro1+0x694>
 8059a64:	e9 09 00 00 00       	jmpq   8059a72 <next_nomacro1+0x69d>
 8059a69:	83 f8 6c             	cmp    $0x6c,%eax
 8059a6c:	0f 85 05 00 00 00    	jne    8059a77 <next_nomacro1+0x6a2>
 8059a72:	e9 09 00 00 00       	jmpq   8059a80 <next_nomacro1+0x6ab>
 8059a77:	83 f8 6d             	cmp    $0x6d,%eax
 8059a7a:	0f 85 05 00 00 00    	jne    8059a85 <next_nomacro1+0x6b0>
 8059a80:	e9 09 00 00 00       	jmpq   8059a8e <next_nomacro1+0x6b9>
 8059a85:	83 f8 6e             	cmp    $0x6e,%eax
 8059a88:	0f 85 05 00 00 00    	jne    8059a93 <next_nomacro1+0x6be>
 8059a8e:	e9 09 00 00 00       	jmpq   8059a9c <next_nomacro1+0x6c7>
 8059a93:	83 f8 6f             	cmp    $0x6f,%eax
 8059a96:	0f 85 05 00 00 00    	jne    8059aa1 <next_nomacro1+0x6cc>
 8059a9c:	e9 09 00 00 00       	jmpq   8059aaa <next_nomacro1+0x6d5>
 8059aa1:	83 f8 70             	cmp    $0x70,%eax
 8059aa4:	0f 85 05 00 00 00    	jne    8059aaf <next_nomacro1+0x6da>
 8059aaa:	e9 09 00 00 00       	jmpq   8059ab8 <next_nomacro1+0x6e3>
 8059aaf:	83 f8 71             	cmp    $0x71,%eax
 8059ab2:	0f 85 05 00 00 00    	jne    8059abd <next_nomacro1+0x6e8>
 8059ab8:	e9 09 00 00 00       	jmpq   8059ac6 <next_nomacro1+0x6f1>
 8059abd:	83 f8 72             	cmp    $0x72,%eax
 8059ac0:	0f 85 05 00 00 00    	jne    8059acb <next_nomacro1+0x6f6>
 8059ac6:	e9 09 00 00 00       	jmpq   8059ad4 <next_nomacro1+0x6ff>
 8059acb:	83 f8 73             	cmp    $0x73,%eax
 8059ace:	0f 85 05 00 00 00    	jne    8059ad9 <next_nomacro1+0x704>
 8059ad4:	e9 09 00 00 00       	jmpq   8059ae2 <next_nomacro1+0x70d>
 8059ad9:	83 f8 74             	cmp    $0x74,%eax
 8059adc:	0f 85 05 00 00 00    	jne    8059ae7 <next_nomacro1+0x712>
 8059ae2:	e9 09 00 00 00       	jmpq   8059af0 <next_nomacro1+0x71b>
 8059ae7:	83 f8 75             	cmp    $0x75,%eax
 8059aea:	0f 85 05 00 00 00    	jne    8059af5 <next_nomacro1+0x720>
 8059af0:	e9 09 00 00 00       	jmpq   8059afe <next_nomacro1+0x729>
 8059af5:	83 f8 76             	cmp    $0x76,%eax
 8059af8:	0f 85 05 00 00 00    	jne    8059b03 <next_nomacro1+0x72e>
 8059afe:	e9 09 00 00 00       	jmpq   8059b0c <next_nomacro1+0x737>
 8059b03:	83 f8 77             	cmp    $0x77,%eax
 8059b06:	0f 85 05 00 00 00    	jne    8059b11 <next_nomacro1+0x73c>
 8059b0c:	e9 09 00 00 00       	jmpq   8059b1a <next_nomacro1+0x745>
 8059b11:	83 f8 78             	cmp    $0x78,%eax
 8059b14:	0f 85 05 00 00 00    	jne    8059b1f <next_nomacro1+0x74a>
 8059b1a:	e9 09 00 00 00       	jmpq   8059b28 <next_nomacro1+0x753>
 8059b1f:	83 f8 79             	cmp    $0x79,%eax
 8059b22:	0f 85 05 00 00 00    	jne    8059b2d <next_nomacro1+0x758>
 8059b28:	e9 09 00 00 00       	jmpq   8059b36 <next_nomacro1+0x761>
 8059b2d:	83 f8 7a             	cmp    $0x7a,%eax
 8059b30:	0f 85 05 00 00 00    	jne    8059b3b <next_nomacro1+0x766>
 8059b36:	e9 09 00 00 00       	jmpq   8059b44 <next_nomacro1+0x76f>
 8059b3b:	83 f8 41             	cmp    $0x41,%eax
 8059b3e:	0f 85 05 00 00 00    	jne    8059b49 <next_nomacro1+0x774>
 8059b44:	e9 09 00 00 00       	jmpq   8059b52 <next_nomacro1+0x77d>
 8059b49:	83 f8 42             	cmp    $0x42,%eax
 8059b4c:	0f 85 05 00 00 00    	jne    8059b57 <next_nomacro1+0x782>
 8059b52:	e9 09 00 00 00       	jmpq   8059b60 <next_nomacro1+0x78b>
 8059b57:	83 f8 43             	cmp    $0x43,%eax
 8059b5a:	0f 85 05 00 00 00    	jne    8059b65 <next_nomacro1+0x790>
 8059b60:	e9 09 00 00 00       	jmpq   8059b6e <next_nomacro1+0x799>
 8059b65:	83 f8 44             	cmp    $0x44,%eax
 8059b68:	0f 85 05 00 00 00    	jne    8059b73 <next_nomacro1+0x79e>
 8059b6e:	e9 09 00 00 00       	jmpq   8059b7c <next_nomacro1+0x7a7>
 8059b73:	83 f8 45             	cmp    $0x45,%eax
 8059b76:	0f 85 05 00 00 00    	jne    8059b81 <next_nomacro1+0x7ac>
 8059b7c:	e9 09 00 00 00       	jmpq   8059b8a <next_nomacro1+0x7b5>
 8059b81:	83 f8 46             	cmp    $0x46,%eax
 8059b84:	0f 85 05 00 00 00    	jne    8059b8f <next_nomacro1+0x7ba>
 8059b8a:	e9 09 00 00 00       	jmpq   8059b98 <next_nomacro1+0x7c3>
 8059b8f:	83 f8 47             	cmp    $0x47,%eax
 8059b92:	0f 85 05 00 00 00    	jne    8059b9d <next_nomacro1+0x7c8>
 8059b98:	e9 09 00 00 00       	jmpq   8059ba6 <next_nomacro1+0x7d1>
 8059b9d:	83 f8 48             	cmp    $0x48,%eax
 8059ba0:	0f 85 05 00 00 00    	jne    8059bab <next_nomacro1+0x7d6>
 8059ba6:	e9 09 00 00 00       	jmpq   8059bb4 <next_nomacro1+0x7df>
 8059bab:	83 f8 49             	cmp    $0x49,%eax
 8059bae:	0f 85 05 00 00 00    	jne    8059bb9 <next_nomacro1+0x7e4>
 8059bb4:	e9 09 00 00 00       	jmpq   8059bc2 <next_nomacro1+0x7ed>
 8059bb9:	83 f8 4a             	cmp    $0x4a,%eax
 8059bbc:	0f 85 05 00 00 00    	jne    8059bc7 <next_nomacro1+0x7f2>
 8059bc2:	e9 09 00 00 00       	jmpq   8059bd0 <next_nomacro1+0x7fb>
 8059bc7:	83 f8 4b             	cmp    $0x4b,%eax
 8059bca:	0f 85 05 00 00 00    	jne    8059bd5 <next_nomacro1+0x800>
 8059bd0:	e9 09 00 00 00       	jmpq   8059bde <next_nomacro1+0x809>
 8059bd5:	83 f8 4d             	cmp    $0x4d,%eax
 8059bd8:	0f 85 05 00 00 00    	jne    8059be3 <next_nomacro1+0x80e>
 8059bde:	e9 09 00 00 00       	jmpq   8059bec <next_nomacro1+0x817>
 8059be3:	83 f8 4e             	cmp    $0x4e,%eax
 8059be6:	0f 85 05 00 00 00    	jne    8059bf1 <next_nomacro1+0x81c>
 8059bec:	e9 09 00 00 00       	jmpq   8059bfa <next_nomacro1+0x825>
 8059bf1:	83 f8 4f             	cmp    $0x4f,%eax
 8059bf4:	0f 85 05 00 00 00    	jne    8059bff <next_nomacro1+0x82a>
 8059bfa:	e9 09 00 00 00       	jmpq   8059c08 <next_nomacro1+0x833>
 8059bff:	83 f8 50             	cmp    $0x50,%eax
 8059c02:	0f 85 05 00 00 00    	jne    8059c0d <next_nomacro1+0x838>
 8059c08:	e9 09 00 00 00       	jmpq   8059c16 <next_nomacro1+0x841>
 8059c0d:	83 f8 51             	cmp    $0x51,%eax
 8059c10:	0f 85 05 00 00 00    	jne    8059c1b <next_nomacro1+0x846>
 8059c16:	e9 09 00 00 00       	jmpq   8059c24 <next_nomacro1+0x84f>
 8059c1b:	83 f8 52             	cmp    $0x52,%eax
 8059c1e:	0f 85 05 00 00 00    	jne    8059c29 <next_nomacro1+0x854>
 8059c24:	e9 09 00 00 00       	jmpq   8059c32 <next_nomacro1+0x85d>
 8059c29:	83 f8 53             	cmp    $0x53,%eax
 8059c2c:	0f 85 05 00 00 00    	jne    8059c37 <next_nomacro1+0x862>
 8059c32:	e9 09 00 00 00       	jmpq   8059c40 <next_nomacro1+0x86b>
 8059c37:	83 f8 54             	cmp    $0x54,%eax
 8059c3a:	0f 85 05 00 00 00    	jne    8059c45 <next_nomacro1+0x870>
 8059c40:	e9 09 00 00 00       	jmpq   8059c4e <next_nomacro1+0x879>
 8059c45:	83 f8 55             	cmp    $0x55,%eax
 8059c48:	0f 85 05 00 00 00    	jne    8059c53 <next_nomacro1+0x87e>
 8059c4e:	e9 09 00 00 00       	jmpq   8059c5c <next_nomacro1+0x887>
 8059c53:	83 f8 56             	cmp    $0x56,%eax
 8059c56:	0f 85 05 00 00 00    	jne    8059c61 <next_nomacro1+0x88c>
 8059c5c:	e9 09 00 00 00       	jmpq   8059c6a <next_nomacro1+0x895>
 8059c61:	83 f8 57             	cmp    $0x57,%eax
 8059c64:	0f 85 05 00 00 00    	jne    8059c6f <next_nomacro1+0x89a>
 8059c6a:	e9 09 00 00 00       	jmpq   8059c78 <next_nomacro1+0x8a3>
 8059c6f:	83 f8 58             	cmp    $0x58,%eax
 8059c72:	0f 85 05 00 00 00    	jne    8059c7d <next_nomacro1+0x8a8>
 8059c78:	e9 09 00 00 00       	jmpq   8059c86 <next_nomacro1+0x8b1>
 8059c7d:	83 f8 59             	cmp    $0x59,%eax
 8059c80:	0f 85 05 00 00 00    	jne    8059c8b <next_nomacro1+0x8b6>
 8059c86:	e9 09 00 00 00       	jmpq   8059c94 <next_nomacro1+0x8bf>
 8059c8b:	83 f8 5a             	cmp    $0x5a,%eax
 8059c8e:	0f 85 05 00 00 00    	jne    8059c99 <next_nomacro1+0x8c4>
 8059c94:	e9 09 00 00 00       	jmpq   8059ca2 <next_nomacro1+0x8cd>
 8059c99:	83 f8 5f             	cmp    $0x5f,%eax
 8059c9c:	0f 85 4e 03 00 00    	jne    8059ff0 <next_nomacro1+0xc1b>
 8059ca2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ca6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8059caa:	b8 01 00 00 00       	mov    $0x1,%eax
 8059caf:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8059cb2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8059cb5:	b9 07 01 00 00       	mov    $0x107,%ecx
 8059cba:	48 0f af c1          	imul   %rcx,%rax
 8059cbe:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8059cc1:	48 01 c8             	add    %rcx,%rax
 8059cc4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8059cc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ccb:	48 89 c1             	mov    %rax,%rcx
 8059cce:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059cd5:	00 00 00 
 8059cd8:	48 01 d0             	add    %rdx,%rax
 8059cdb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059cdf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ce3:	0f b6 08             	movzbl (%rax),%ecx
 8059ce6:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 8059ce9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059cec:	83 e8 ff             	sub    $0xffffffff,%eax
 8059cef:	48 63 c0             	movslq %eax,%rax
 8059cf2:	48 8d 0d 88 49 04 00 	lea    0x44988(%rip),%rcx        # 809e681 <isidnum_table>
 8059cf9:	48 89 c2             	mov    %rax,%rdx
 8059cfc:	48 01 d1             	add    %rdx,%rcx
 8059cff:	0f b6 01             	movzbl (%rcx),%eax
 8059d02:	85 c0                	test   %eax,%eax
 8059d04:	0f 84 05 00 00 00    	je     8059d0f <next_nomacro1+0x93a>
 8059d0a:	e9 05 00 00 00       	jmpq   8059d14 <next_nomacro1+0x93f>
 8059d0f:	e9 2f 00 00 00       	jmpq   8059d43 <next_nomacro1+0x96e>
 8059d14:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8059d17:	b9 07 01 00 00       	mov    $0x107,%ecx
 8059d1c:	48 0f af c1          	imul   %rcx,%rax
 8059d20:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8059d23:	48 01 c8             	add    %rcx,%rax
 8059d26:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8059d29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059d2d:	48 89 c1             	mov    %rax,%rcx
 8059d30:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059d37:	00 00 00 
 8059d3a:	48 01 d0             	add    %rdx,%rax
 8059d3d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059d41:	eb 9c                	jmp    8059cdf <next_nomacro1+0x90a>
 8059d43:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059d46:	83 f8 5c             	cmp    $0x5c,%eax
 8059d49:	0f 84 ee 00 00 00    	je     8059e3d <next_nomacro1+0xa68>
 8059d4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059d53:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8059d57:	48 29 c8             	sub    %rcx,%rax
 8059d5a:	48 89 c1             	mov    %rax,%rcx
 8059d5d:	89 4d ac             	mov    %ecx,-0x54(%rbp)
 8059d60:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8059d63:	81 e0 ff 1f 00 00    	and    $0x1fff,%eax
 8059d69:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8059d6c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8059d6f:	48 89 c1             	mov    %rax,%rcx
 8059d72:	48 c1 e1 03          	shl    $0x3,%rcx
 8059d76:	48 8d 05 03 45 03 00 	lea    0x34503(%rip),%rax        # 808e280 <hash_ident>
 8059d7d:	48 89 ca             	mov    %rcx,%rdx
 8059d80:	48 01 d0             	add    %rdx,%rax
 8059d83:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8059d87:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8059d8b:	48 8b 08             	mov    (%rax),%rcx
 8059d8e:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8059d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8059d96:	85 c0                	test   %eax,%eax
 8059d98:	0f 84 05 00 00 00    	je     8059da3 <next_nomacro1+0x9ce>
 8059d9e:	e9 05 00 00 00       	jmpq   8059da8 <next_nomacro1+0x9d3>
 8059da3:	e9 6b 00 00 00       	jmpq   8059e13 <next_nomacro1+0xa3e>
 8059da8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8059dac:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8059db3:	00 00 00 
 8059db6:	48 01 c8             	add    %rcx,%rax
 8059db9:	8b 08                	mov    (%rax),%ecx
 8059dbb:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8059dbe:	39 c1                	cmp    %eax,%ecx
 8059dc0:	0f 85 40 00 00 00    	jne    8059e06 <next_nomacro1+0xa31>
 8059dc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8059dca:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8059dd1:	00 00 00 
 8059dd4:	48 01 c8             	add    %rcx,%rax
 8059dd7:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 8059dda:	49 89 ca             	mov    %rcx,%r10
 8059ddd:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8059de1:	48 89 ce             	mov    %rcx,%rsi
 8059de4:	48 89 c7             	mov    %rax,%rdi
 8059de7:	4c 89 d2             	mov    %r10,%rdx
 8059dea:	b8 00 00 00 00       	mov    $0x0,%eax
 8059def:	e8 fc cd 02 00       	callq  8086bf0 <memcmp>
 8059df4:	85 c0                	test   %eax,%eax
 8059df6:	0f 84 05 00 00 00    	je     8059e01 <next_nomacro1+0xa2c>
 8059dfc:	e9 05 00 00 00       	jmpq   8059e06 <next_nomacro1+0xa31>
 8059e01:	e9 32 00 00 00       	jmpq   8059e38 <next_nomacro1+0xa63>
 8059e06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8059e0a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8059e0e:	e9 74 ff ff ff       	jmpq   8059d87 <next_nomacro1+0x9b2>
 8059e13:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8059e16:	49 89 c2             	mov    %rax,%r10
 8059e19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8059e1d:	48 89 c6             	mov    %rax,%rsi
 8059e20:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8059e24:	48 89 c7             	mov    %rax,%rdi
 8059e27:	4c 89 d2             	mov    %r10,%rdx
 8059e2a:	b8 00 00 00 00       	mov    $0x0,%eax
 8059e2f:	e8 36 77 ff ff       	callq  805156a <tok_alloc_new>
 8059e34:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8059e38:	e9 8c 01 00 00       	jmpq   8059fc9 <next_nomacro1+0xbf4>
 8059e3d:	48 8b 05 1c 41 03 00 	mov    0x3411c(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 8059e44:	48 89 c7             	mov    %rax,%rdi
 8059e47:	b8 00 00 00 00       	mov    $0x0,%eax
 8059e4c:	e8 ab 75 ff ff       	callq  80513fc <cstr_free>
 8059e51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8059e55:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8059e59:	48 89 c2             	mov    %rax,%rdx
 8059e5c:	48 89 c8             	mov    %rcx,%rax
 8059e5f:	48 39 c2             	cmp    %rax,%rdx
 8059e62:	0f 83 38 00 00 00    	jae    8059ea0 <next_nomacro1+0xacb>
 8059e68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8059e6c:	0f b6 08             	movzbl (%rax),%ecx
 8059e6f:	48 89 ce             	mov    %rcx,%rsi
 8059e72:	48 8b 05 e7 40 03 00 	mov    0x340e7(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 8059e79:	48 89 c7             	mov    %rax,%rdi
 8059e7c:	b8 00 00 00 00       	mov    $0x0,%eax
 8059e81:	e8 c7 73 ff ff       	callq  805124d <cstr_ccat>
 8059e86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8059e8a:	48 89 c1             	mov    %rax,%rcx
 8059e8d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059e94:	00 00 00 
 8059e97:	48 01 d0             	add    %rdx,%rax
 8059e9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8059e9e:	eb b1                	jmp    8059e51 <next_nomacro1+0xa7c>
 8059ea0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ea4:	48 89 c1             	mov    %rax,%rcx
 8059ea7:	48 ba ff ff ff ff ff 	movabs $0xffffffffffffffff,%rdx
 8059eae:	ff ff ff 
 8059eb1:	48 01 d0             	add    %rdx,%rax
 8059eb4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059eb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ebc:	48 89 c1             	mov    %rax,%rcx
 8059ebf:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059ec6:	00 00 00 
 8059ec9:	48 01 d0             	add    %rdx,%rax
 8059ecc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059ed0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ed4:	0f b6 08             	movzbl (%rax),%ecx
 8059ed7:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 8059eda:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059edd:	83 f8 5c             	cmp    $0x5c,%eax
 8059ee0:	0f 85 25 00 00 00    	jne    8059f0b <next_nomacro1+0xb36>
 8059ee6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059eea:	48 89 c7             	mov    %rax,%rdi
 8059eed:	b8 00 00 00 00       	mov    $0x0,%eax
 8059ef2:	e8 8d 83 ff ff       	callq  8052284 <handle_stray1>
 8059ef7:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8059efa:	48 8b 05 9f 3f 03 00 	mov    0x33f9f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8059f01:	48 8b 00             	mov    (%rax),%rax
 8059f04:	48 8b 08             	mov    (%rax),%rcx
 8059f07:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8059f0b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059f0e:	83 e8 ff             	sub    $0xffffffff,%eax
 8059f11:	48 63 c0             	movslq %eax,%rax
 8059f14:	48 8d 0d 66 47 04 00 	lea    0x44766(%rip),%rcx        # 809e681 <isidnum_table>
 8059f1b:	48 89 c2             	mov    %rax,%rdx
 8059f1e:	48 01 d1             	add    %rdx,%rcx
 8059f21:	0f b6 01             	movzbl (%rcx),%eax
 8059f24:	85 c0                	test   %eax,%eax
 8059f26:	0f 84 72 00 00 00    	je     8059f9e <next_nomacro1+0xbc9>
 8059f2c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059f2f:	48 89 c6             	mov    %rax,%rsi
 8059f32:	48 8b 05 27 40 03 00 	mov    0x34027(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 8059f39:	48 89 c7             	mov    %rax,%rdi
 8059f3c:	b8 00 00 00 00       	mov    $0x0,%eax
 8059f41:	e8 07 73 ff ff       	callq  805124d <cstr_ccat>
 8059f46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059f4a:	48 89 c1             	mov    %rax,%rcx
 8059f4d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8059f54:	00 00 00 
 8059f57:	48 01 d0             	add    %rdx,%rax
 8059f5a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8059f5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059f62:	0f b6 08             	movzbl (%rax),%ecx
 8059f65:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 8059f68:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8059f6b:	83 f8 5c             	cmp    $0x5c,%eax
 8059f6e:	0f 85 25 00 00 00    	jne    8059f99 <next_nomacro1+0xbc4>
 8059f74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059f78:	48 89 c7             	mov    %rax,%rdi
 8059f7b:	b8 00 00 00 00       	mov    $0x0,%eax
 8059f80:	e8 ff 82 ff ff       	callq  8052284 <handle_stray1>
 8059f85:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8059f88:	48 8b 05 11 3f 03 00 	mov    0x33f11(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8059f8f:	48 8b 00             	mov    (%rax),%rax
 8059f92:	48 8b 08             	mov    (%rax),%rcx
 8059f95:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8059f99:	e9 6d ff ff ff       	jmpq   8059f0b <next_nomacro1+0xb36>
 8059f9e:	48 8b 05 bb 3f 03 00 	mov    0x33fbb(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 8059fa5:	8b 00                	mov    (%rax),%eax
 8059fa7:	48 89 c6             	mov    %rax,%rsi
 8059faa:	48 8b 05 af 3f 03 00 	mov    0x33faf(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 8059fb1:	48 8b 80 08 00 00 00 	mov    0x8(%rax),%rax
 8059fb8:	48 89 c7             	mov    %rax,%rdi
 8059fbb:	b8 00 00 00 00       	mov    $0x0,%eax
 8059fc0:	e8 9e 77 ff ff       	callq  8051763 <tok_alloc>
 8059fc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8059fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8059fcd:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8059fd4:	00 00 00 
 8059fd7:	48 01 c8             	add    %rcx,%rax
 8059fda:	8b 08                	mov    (%rax),%ecx
 8059fdc:	4c 8b 1d 45 3f 03 00 	mov    0x33f45(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8059fe3:	41 89 0b             	mov    %ecx,(%r11)
 8059fe6:	e9 b0 12 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 8059feb:	e9 09 00 00 00       	jmpq   8059ff9 <next_nomacro1+0xc24>
 8059ff0:	83 f8 4c             	cmp    $0x4c,%eax
 8059ff3:	0f 85 06 01 00 00    	jne    805a0ff <next_nomacro1+0xd2a>
 8059ff9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8059ffd:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 805a004:	00 00 00 
 805a007:	48 01 c8             	add    %rcx,%rax
 805a00a:	0f b6 08             	movzbl (%rax),%ecx
 805a00d:	89 4d fc             	mov    %ecx,-0x4(%rbp)
 805a010:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a013:	83 f8 5c             	cmp    $0x5c,%eax
 805a016:	0f 84 22 00 00 00    	je     805a03e <next_nomacro1+0xc69>
 805a01c:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a01f:	83 f8 27             	cmp    $0x27,%eax
 805a022:	0f 84 16 00 00 00    	je     805a03e <next_nomacro1+0xc69>
 805a028:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a02b:	83 f8 22             	cmp    $0x22,%eax
 805a02e:	0f 84 0a 00 00 00    	je     805a03e <next_nomacro1+0xc69>
 805a034:	e9 69 fc ff ff       	jmpq   8059ca2 <next_nomacro1+0x8cd>
 805a039:	e9 b7 00 00 00       	jmpq   805a0f5 <next_nomacro1+0xd20>
 805a03e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a042:	48 89 c1             	mov    %rax,%rcx
 805a045:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a04c:	00 00 00 
 805a04f:	48 01 d0             	add    %rdx,%rax
 805a052:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a056:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a05a:	0f b6 08             	movzbl (%rax),%ecx
 805a05d:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a060:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a063:	83 f8 5c             	cmp    $0x5c,%eax
 805a066:	0f 85 25 00 00 00    	jne    805a091 <next_nomacro1+0xcbc>
 805a06c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a070:	48 89 c7             	mov    %rax,%rdi
 805a073:	b8 00 00 00 00       	mov    $0x0,%eax
 805a078:	e8 07 82 ff ff       	callq  8052284 <handle_stray1>
 805a07d:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a080:	48 8b 05 19 3e 03 00 	mov    0x33e19(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a087:	48 8b 00             	mov    (%rax),%rax
 805a08a:	48 8b 08             	mov    (%rax),%rcx
 805a08d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a091:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a094:	83 f8 27             	cmp    $0x27,%eax
 805a097:	0f 84 11 00 00 00    	je     805a0ae <next_nomacro1+0xcd9>
 805a09d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a0a0:	83 f8 22             	cmp    $0x22,%eax
 805a0a3:	0f 84 05 00 00 00    	je     805a0ae <next_nomacro1+0xcd9>
 805a0a9:	e9 12 00 00 00       	jmpq   805a0c0 <next_nomacro1+0xceb>
 805a0ae:	b8 01 00 00 00       	mov    $0x1,%eax
 805a0b3:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805a0b6:	e9 0b 04 00 00       	jmpq   805a4c6 <next_nomacro1+0x10f1>
 805a0bb:	e9 35 00 00 00       	jmpq   805a0f5 <next_nomacro1+0xd20>
 805a0c0:	48 8b 05 99 3e 03 00 	mov    0x33e99(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a0c7:	48 89 c7             	mov    %rax,%rdi
 805a0ca:	b8 00 00 00 00       	mov    $0x0,%eax
 805a0cf:	e8 28 73 ff ff       	callq  80513fc <cstr_free>
 805a0d4:	b8 4c 00 00 00       	mov    $0x4c,%eax
 805a0d9:	48 89 c6             	mov    %rax,%rsi
 805a0dc:	48 8b 05 7d 3e 03 00 	mov    0x33e7d(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a0e3:	48 89 c7             	mov    %rax,%rdi
 805a0e6:	b8 00 00 00 00       	mov    $0x0,%eax
 805a0eb:	e8 5d 71 ff ff       	callq  805124d <cstr_ccat>
 805a0f0:	e9 16 fe ff ff       	jmpq   8059f0b <next_nomacro1+0xb36>
 805a0f5:	e9 a1 11 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805a0fa:	e9 09 00 00 00       	jmpq   805a108 <next_nomacro1+0xd33>
 805a0ff:	83 f8 30             	cmp    $0x30,%eax
 805a102:	0f 85 05 00 00 00    	jne    805a10d <next_nomacro1+0xd38>
 805a108:	e9 09 00 00 00       	jmpq   805a116 <next_nomacro1+0xd41>
 805a10d:	83 f8 31             	cmp    $0x31,%eax
 805a110:	0f 85 05 00 00 00    	jne    805a11b <next_nomacro1+0xd46>
 805a116:	e9 09 00 00 00       	jmpq   805a124 <next_nomacro1+0xd4f>
 805a11b:	83 f8 32             	cmp    $0x32,%eax
 805a11e:	0f 85 05 00 00 00    	jne    805a129 <next_nomacro1+0xd54>
 805a124:	e9 09 00 00 00       	jmpq   805a132 <next_nomacro1+0xd5d>
 805a129:	83 f8 33             	cmp    $0x33,%eax
 805a12c:	0f 85 05 00 00 00    	jne    805a137 <next_nomacro1+0xd62>
 805a132:	e9 09 00 00 00       	jmpq   805a140 <next_nomacro1+0xd6b>
 805a137:	83 f8 34             	cmp    $0x34,%eax
 805a13a:	0f 85 05 00 00 00    	jne    805a145 <next_nomacro1+0xd70>
 805a140:	e9 09 00 00 00       	jmpq   805a14e <next_nomacro1+0xd79>
 805a145:	83 f8 35             	cmp    $0x35,%eax
 805a148:	0f 85 05 00 00 00    	jne    805a153 <next_nomacro1+0xd7e>
 805a14e:	e9 09 00 00 00       	jmpq   805a15c <next_nomacro1+0xd87>
 805a153:	83 f8 36             	cmp    $0x36,%eax
 805a156:	0f 85 05 00 00 00    	jne    805a161 <next_nomacro1+0xd8c>
 805a15c:	e9 09 00 00 00       	jmpq   805a16a <next_nomacro1+0xd95>
 805a161:	83 f8 37             	cmp    $0x37,%eax
 805a164:	0f 85 05 00 00 00    	jne    805a16f <next_nomacro1+0xd9a>
 805a16a:	e9 09 00 00 00       	jmpq   805a178 <next_nomacro1+0xda3>
 805a16f:	83 f8 38             	cmp    $0x38,%eax
 805a172:	0f 85 05 00 00 00    	jne    805a17d <next_nomacro1+0xda8>
 805a178:	e9 09 00 00 00       	jmpq   805a186 <next_nomacro1+0xdb1>
 805a17d:	83 f8 39             	cmp    $0x39,%eax
 805a180:	0f 85 74 01 00 00    	jne    805a2fa <next_nomacro1+0xf25>
 805a186:	48 8b 05 d3 3d 03 00 	mov    0x33dd3(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a18d:	48 89 c7             	mov    %rax,%rdi
 805a190:	b8 00 00 00 00       	mov    $0x0,%eax
 805a195:	e8 62 72 ff ff       	callq  80513fc <cstr_free>
 805a19a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a19d:	89 45 fc             	mov    %eax,-0x4(%rbp)
 805a1a0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a1a3:	48 89 c6             	mov    %rax,%rsi
 805a1a6:	48 8b 05 b3 3d 03 00 	mov    0x33db3(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a1ad:	48 89 c7             	mov    %rax,%rdi
 805a1b0:	b8 00 00 00 00       	mov    $0x0,%eax
 805a1b5:	e8 93 70 ff ff       	callq  805124d <cstr_ccat>
 805a1ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a1be:	48 89 c1             	mov    %rax,%rcx
 805a1c1:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a1c8:	00 00 00 
 805a1cb:	48 01 d0             	add    %rdx,%rax
 805a1ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a1d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a1d6:	0f b6 08             	movzbl (%rax),%ecx
 805a1d9:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a1dc:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a1df:	83 f8 5c             	cmp    $0x5c,%eax
 805a1e2:	0f 85 25 00 00 00    	jne    805a20d <next_nomacro1+0xe38>
 805a1e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a1ec:	48 89 c7             	mov    %rax,%rdi
 805a1ef:	b8 00 00 00 00       	mov    $0x0,%eax
 805a1f4:	e8 8b 80 ff ff       	callq  8052284 <handle_stray1>
 805a1f9:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a1fc:	48 8b 05 9d 3c 03 00 	mov    0x33c9d(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a203:	48 8b 00             	mov    (%rax),%rax
 805a206:	48 8b 08             	mov    (%rax),%rcx
 805a209:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a20d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a210:	48 89 c7             	mov    %rax,%rdi
 805a213:	b8 00 00 00 00       	mov    $0x0,%eax
 805a218:	e8 62 17 00 00       	callq  805b97f <isnum>
 805a21d:	85 c0                	test   %eax,%eax
 805a21f:	0f 85 80 00 00 00    	jne    805a2a5 <next_nomacro1+0xed0>
 805a225:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a228:	48 89 c7             	mov    %rax,%rdi
 805a22b:	b8 00 00 00 00       	mov    $0x0,%eax
 805a230:	e8 84 17 00 00       	callq  805b9b9 <isid>
 805a235:	85 c0                	test   %eax,%eax
 805a237:	0f 85 68 00 00 00    	jne    805a2a5 <next_nomacro1+0xed0>
 805a23d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a240:	83 f8 2e             	cmp    $0x2e,%eax
 805a243:	0f 84 5c 00 00 00    	je     805a2a5 <next_nomacro1+0xed0>
 805a249:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a24c:	83 f8 2b             	cmp    $0x2b,%eax
 805a24f:	0f 84 11 00 00 00    	je     805a266 <next_nomacro1+0xe91>
 805a255:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a258:	83 f8 2d             	cmp    $0x2d,%eax
 805a25b:	0f 84 05 00 00 00    	je     805a266 <next_nomacro1+0xe91>
 805a261:	e9 3a 00 00 00       	jmpq   805a2a0 <next_nomacro1+0xecb>
 805a266:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a269:	83 f8 65             	cmp    $0x65,%eax
 805a26c:	0f 84 29 00 00 00    	je     805a29b <next_nomacro1+0xec6>
 805a272:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a275:	83 f8 45             	cmp    $0x45,%eax
 805a278:	0f 84 1d 00 00 00    	je     805a29b <next_nomacro1+0xec6>
 805a27e:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a281:	83 f8 70             	cmp    $0x70,%eax
 805a284:	0f 84 11 00 00 00    	je     805a29b <next_nomacro1+0xec6>
 805a28a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805a28d:	83 f8 50             	cmp    $0x50,%eax
 805a290:	0f 84 05 00 00 00    	je     805a29b <next_nomacro1+0xec6>
 805a296:	e9 05 00 00 00       	jmpq   805a2a0 <next_nomacro1+0xecb>
 805a29b:	e9 05 00 00 00       	jmpq   805a2a5 <next_nomacro1+0xed0>
 805a2a0:	e9 05 00 00 00       	jmpq   805a2aa <next_nomacro1+0xed5>
 805a2a5:	e9 05 00 00 00       	jmpq   805a2af <next_nomacro1+0xeda>
 805a2aa:	e9 05 00 00 00       	jmpq   805a2b4 <next_nomacro1+0xedf>
 805a2af:	e9 e6 fe ff ff       	jmpq   805a19a <next_nomacro1+0xdc5>
 805a2b4:	b8 00 00 00 00       	mov    $0x0,%eax
 805a2b9:	48 89 c6             	mov    %rax,%rsi
 805a2bc:	48 8b 05 9d 3c 03 00 	mov    0x33c9d(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a2c3:	48 89 c7             	mov    %rax,%rdi
 805a2c6:	b8 00 00 00 00       	mov    $0x0,%eax
 805a2cb:	e8 7d 6f ff ff       	callq  805124d <cstr_ccat>
 805a2d0:	48 8b 05 89 3c 03 00 	mov    0x33c89(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a2d7:	4c 8b 1d ca 3c 03 00 	mov    0x33cca(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805a2de:	49 89 03             	mov    %rax,(%r11)
 805a2e1:	b8 ce 00 00 00       	mov    $0xce,%eax
 805a2e6:	4c 8b 1d 3b 3c 03 00 	mov    0x33c3b(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a2ed:	41 89 03             	mov    %eax,(%r11)
 805a2f0:	e9 a6 0f 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805a2f5:	e9 09 00 00 00       	jmpq   805a303 <next_nomacro1+0xf2e>
 805a2fa:	83 f8 2e             	cmp    $0x2e,%eax
 805a2fd:	0f 85 a4 01 00 00    	jne    805a4a7 <next_nomacro1+0x10d2>
 805a303:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a307:	48 89 c1             	mov    %rax,%rcx
 805a30a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a311:	00 00 00 
 805a314:	48 01 d0             	add    %rdx,%rax
 805a317:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a31b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a31f:	0f b6 08             	movzbl (%rax),%ecx
 805a322:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a325:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a328:	83 f8 5c             	cmp    $0x5c,%eax
 805a32b:	0f 85 25 00 00 00    	jne    805a356 <next_nomacro1+0xf81>
 805a331:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a335:	48 89 c7             	mov    %rax,%rdi
 805a338:	b8 00 00 00 00       	mov    $0x0,%eax
 805a33d:	e8 42 7f ff ff       	callq  8052284 <handle_stray1>
 805a342:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a345:	48 8b 05 54 3b 03 00 	mov    0x33b54(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a34c:	48 8b 00             	mov    (%rax),%rax
 805a34f:	48 8b 08             	mov    (%rax),%rcx
 805a352:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a356:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a359:	48 89 c7             	mov    %rax,%rdi
 805a35c:	b8 00 00 00 00       	mov    $0x0,%eax
 805a361:	e8 19 16 00 00       	callq  805b97f <isnum>
 805a366:	85 c0                	test   %eax,%eax
 805a368:	0f 84 3a 00 00 00    	je     805a3a8 <next_nomacro1+0xfd3>
 805a36e:	48 8b 05 eb 3b 03 00 	mov    0x33beb(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a375:	48 89 c7             	mov    %rax,%rdi
 805a378:	b8 00 00 00 00       	mov    $0x0,%eax
 805a37d:	e8 7a 70 ff ff       	callq  80513fc <cstr_free>
 805a382:	b8 2e 00 00 00       	mov    $0x2e,%eax
 805a387:	48 89 c6             	mov    %rax,%rsi
 805a38a:	48 8b 05 cf 3b 03 00 	mov    0x33bcf(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a391:	48 89 c7             	mov    %rax,%rdi
 805a394:	b8 00 00 00 00       	mov    $0x0,%eax
 805a399:	e8 af 6e ff ff       	callq  805124d <cstr_ccat>
 805a39e:	e9 f7 fd ff ff       	jmpq   805a19a <next_nomacro1+0xdc5>
 805a3a3:	e9 f5 00 00 00       	jmpq   805a49d <next_nomacro1+0x10c8>
 805a3a8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a3ab:	83 f8 2e             	cmp    $0x2e,%eax
 805a3ae:	0f 85 da 00 00 00    	jne    805a48e <next_nomacro1+0x10b9>
 805a3b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a3b8:	48 89 c1             	mov    %rax,%rcx
 805a3bb:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a3c2:	00 00 00 
 805a3c5:	48 01 d0             	add    %rdx,%rax
 805a3c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a3cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a3d0:	0f b6 08             	movzbl (%rax),%ecx
 805a3d3:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a3d6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a3d9:	83 f8 5c             	cmp    $0x5c,%eax
 805a3dc:	0f 85 25 00 00 00    	jne    805a407 <next_nomacro1+0x1032>
 805a3e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a3e6:	48 89 c7             	mov    %rax,%rdi
 805a3e9:	b8 00 00 00 00       	mov    $0x0,%eax
 805a3ee:	e8 91 7e ff ff       	callq  8052284 <handle_stray1>
 805a3f3:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a3f6:	48 8b 05 a3 3a 03 00 	mov    0x33aa3(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a3fd:	48 8b 00             	mov    (%rax),%rax
 805a400:	48 8b 08             	mov    (%rax),%rcx
 805a403:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a407:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a40a:	83 f8 2e             	cmp    $0x2e,%eax
 805a40d:	0f 84 14 00 00 00    	je     805a427 <next_nomacro1+0x1052>
 805a413:	48 8d 05 af 13 03 00 	lea    0x313af(%rip),%rax        # 808b7c9 <L.174>
 805a41a:	48 89 c7             	mov    %rax,%rdi
 805a41d:	b8 00 00 00 00       	mov    $0x0,%eax
 805a422:	e8 2b 6d ff ff       	callq  8051152 <expect>
 805a427:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a42b:	48 89 c1             	mov    %rax,%rcx
 805a42e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a435:	00 00 00 
 805a438:	48 01 d0             	add    %rdx,%rax
 805a43b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a43f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a443:	0f b6 08             	movzbl (%rax),%ecx
 805a446:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a449:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a44c:	83 f8 5c             	cmp    $0x5c,%eax
 805a44f:	0f 85 25 00 00 00    	jne    805a47a <next_nomacro1+0x10a5>
 805a455:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a459:	48 89 c7             	mov    %rax,%rdi
 805a45c:	b8 00 00 00 00       	mov    $0x0,%eax
 805a461:	e8 1e 7e ff ff       	callq  8052284 <handle_stray1>
 805a466:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a469:	48 8b 05 30 3a 03 00 	mov    0x33a30(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a470:	48 8b 00             	mov    (%rax),%rax
 805a473:	48 8b 08             	mov    (%rax),%rcx
 805a476:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a47a:	b8 cc 00 00 00       	mov    $0xcc,%eax
 805a47f:	4c 8b 1d a2 3a 03 00 	mov    0x33aa2(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a486:	41 89 03             	mov    %eax,(%r11)
 805a489:	e9 0f 00 00 00       	jmpq   805a49d <next_nomacro1+0x10c8>
 805a48e:	b8 2e 00 00 00       	mov    $0x2e,%eax
 805a493:	4c 8b 1d 8e 3a 03 00 	mov    0x33a8e(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a49a:	41 89 03             	mov    %eax,(%r11)
 805a49d:	e9 f9 0d 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805a4a2:	e9 09 00 00 00       	jmpq   805a4b0 <next_nomacro1+0x10db>
 805a4a7:	83 f8 27             	cmp    $0x27,%eax
 805a4aa:	0f 85 05 00 00 00    	jne    805a4b5 <next_nomacro1+0x10e0>
 805a4b0:	e9 09 00 00 00       	jmpq   805a4be <next_nomacro1+0x10e9>
 805a4b5:	83 f8 22             	cmp    $0x22,%eax
 805a4b8:	0f 85 e5 01 00 00    	jne    805a6a3 <next_nomacro1+0x12ce>
 805a4be:	b8 00 00 00 00       	mov    $0x0,%eax
 805a4c3:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805a4c6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a4c9:	89 45 84             	mov    %eax,-0x7c(%rbp)
 805a4cc:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 805a4d0:	48 89 c7             	mov    %rax,%rdi
 805a4d3:	b8 00 00 00 00       	mov    $0x0,%eax
 805a4d8:	e8 ea 6e ff ff       	callq  80513c7 <cstr_new>
 805a4dd:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 805a4e1:	49 89 c2             	mov    %rax,%r10
 805a4e4:	8b 45 84             	mov    -0x7c(%rbp),%eax
 805a4e7:	48 89 c6             	mov    %rax,%rsi
 805a4ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a4ee:	48 89 c7             	mov    %rax,%rdi
 805a4f1:	4c 89 d2             	mov    %r10,%rdx
 805a4f4:	b8 00 00 00 00       	mov    $0x0,%eax
 805a4f9:	e8 b8 85 ff ff       	callq  8052ab6 <parse_pp_string>
 805a4fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a502:	b8 00 00 00 00       	mov    $0x0,%eax
 805a507:	48 89 c6             	mov    %rax,%rsi
 805a50a:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 805a50e:	48 89 c7             	mov    %rax,%rdi
 805a511:	b8 00 00 00 00       	mov    $0x0,%eax
 805a516:	e8 32 6d ff ff       	callq  805124d <cstr_ccat>
 805a51b:	48 8b 05 3e 3a 03 00 	mov    0x33a3e(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a522:	48 89 c7             	mov    %rax,%rdi
 805a525:	b8 00 00 00 00       	mov    $0x0,%eax
 805a52a:	e8 cd 6e ff ff       	callq  80513fc <cstr_free>
 805a52f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805a532:	49 89 c2             	mov    %rax,%r10
 805a535:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 805a539:	48 89 c6             	mov    %rax,%rsi
 805a53c:	48 8b 05 1d 3a 03 00 	mov    0x33a1d(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a543:	48 89 c7             	mov    %rax,%rdi
 805a546:	4c 89 d2             	mov    %r10,%rdx
 805a549:	b8 00 00 00 00       	mov    $0x0,%eax
 805a54e:	e8 5b b9 ff ff       	callq  8055eae <parse_escape_string>
 805a553:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 805a557:	48 89 c7             	mov    %rax,%rdi
 805a55a:	b8 00 00 00 00       	mov    $0x0,%eax
 805a55f:	e8 98 6e ff ff       	callq  80513fc <cstr_free>
 805a564:	8b 45 84             	mov    -0x7c(%rbp),%eax
 805a567:	83 f8 27             	cmp    $0x27,%eax
 805a56a:	0f 85 e5 00 00 00    	jne    805a655 <next_nomacro1+0x1280>
 805a570:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805a573:	85 c0                	test   %eax,%eax
 805a575:	0f 84 05 00 00 00    	je     805a580 <next_nomacro1+0x11ab>
 805a57b:	e9 0d 00 00 00       	jmpq   805a58d <next_nomacro1+0x11b8>
 805a580:	b8 01 00 00 00       	mov    $0x1,%eax
 805a585:	89 45 80             	mov    %eax,-0x80(%rbp)
 805a588:	e9 08 00 00 00       	jmpq   805a595 <next_nomacro1+0x11c0>
 805a58d:	b8 04 00 00 00       	mov    $0x4,%eax
 805a592:	89 45 80             	mov    %eax,-0x80(%rbp)
 805a595:	48 8b 05 c4 39 03 00 	mov    0x339c4(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a59c:	8b 00                	mov    (%rax),%eax
 805a59e:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 805a5a1:	39 c8                	cmp    %ecx,%eax
 805a5a3:	0f 8f 14 00 00 00    	jg     805a5bd <next_nomacro1+0x11e8>
 805a5a9:	48 8d 05 1d 12 03 00 	lea    0x3121d(%rip),%rax        # 808b7cd <L.175>
 805a5b0:	48 89 c7             	mov    %rax,%rdi
 805a5b3:	b8 00 00 00 00       	mov    $0x0,%eax
 805a5b8:	e8 0a 31 ff ff       	callq  804d6c7 <tcc_error>
 805a5bd:	8b 45 80             	mov    -0x80(%rbp),%eax
 805a5c0:	c1 e0 01             	shl    $0x1,%eax
 805a5c3:	48 8b 0d 96 39 03 00 	mov    0x33996(%rip),%rcx        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a5ca:	8b 09                	mov    (%rcx),%ecx
 805a5cc:	39 c1                	cmp    %eax,%ecx
 805a5ce:	0f 8e 14 00 00 00    	jle    805a5e8 <next_nomacro1+0x1213>
 805a5d4:	48 8d 05 0b 12 03 00 	lea    0x3120b(%rip),%rax        # 808b7e6 <L.176>
 805a5db:	48 89 c7             	mov    %rax,%rdi
 805a5de:	b8 00 00 00 00       	mov    $0x0,%eax
 805a5e3:	e8 17 33 ff ff       	callq  804d8ff <tcc_warning>
 805a5e8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805a5eb:	85 c0                	test   %eax,%eax
 805a5ed:	0f 84 05 00 00 00    	je     805a5f8 <next_nomacro1+0x1223>
 805a5f3:	e9 2f 00 00 00       	jmpq   805a627 <next_nomacro1+0x1252>
 805a5f8:	48 8b 05 61 39 03 00 	mov    0x33961(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a5ff:	48 8b 80 08 00 00 00 	mov    0x8(%rax),%rax
 805a606:	0f be 08             	movsbl (%rax),%ecx
 805a609:	4c 8b 1d 98 39 03 00 	mov    0x33998(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805a610:	41 89 0b             	mov    %ecx,(%r11)
 805a613:	b8 b4 00 00 00       	mov    $0xb4,%eax
 805a618:	4c 8b 1d 09 39 03 00 	mov    0x33909(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a61f:	41 89 03             	mov    %eax,(%r11)
 805a622:	e9 29 00 00 00       	jmpq   805a650 <next_nomacro1+0x127b>
 805a627:	48 8b 05 32 39 03 00 	mov    0x33932(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a62e:	48 8b 80 08 00 00 00 	mov    0x8(%rax),%rax
 805a635:	8b 08                	mov    (%rax),%ecx
 805a637:	4c 8b 1d 6a 39 03 00 	mov    0x3396a(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805a63e:	41 89 0b             	mov    %ecx,(%r11)
 805a641:	b8 b7 00 00 00       	mov    $0xb7,%eax
 805a646:	4c 8b 1d db 38 03 00 	mov    0x338db(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a64d:	41 89 03             	mov    %eax,(%r11)
 805a650:	e9 44 00 00 00       	jmpq   805a699 <next_nomacro1+0x12c4>
 805a655:	48 8b 05 04 39 03 00 	mov    0x33904(%rip),%rax        # 808df60 <_GLOBAL_OFFSET_TABLE_+0x2e0>
 805a65c:	4c 8b 1d 45 39 03 00 	mov    0x33945(%rip),%r11        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 805a663:	49 89 03             	mov    %rax,(%r11)
 805a666:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805a669:	85 c0                	test   %eax,%eax
 805a66b:	0f 84 05 00 00 00    	je     805a676 <next_nomacro1+0x12a1>
 805a671:	e9 14 00 00 00       	jmpq   805a68a <next_nomacro1+0x12b5>
 805a676:	b8 b5 00 00 00       	mov    $0xb5,%eax
 805a67b:	4c 8b 1d a6 38 03 00 	mov    0x338a6(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a682:	41 89 03             	mov    %eax,(%r11)
 805a685:	e9 0f 00 00 00       	jmpq   805a699 <next_nomacro1+0x12c4>
 805a68a:	b8 b8 00 00 00       	mov    $0xb8,%eax
 805a68f:	4c 8b 1d 92 38 03 00 	mov    0x33892(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a696:	41 89 03             	mov    %eax,(%r11)
 805a699:	e9 fd 0b 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805a69e:	e9 09 00 00 00       	jmpq   805a6ac <next_nomacro1+0x12d7>
 805a6a3:	83 f8 3c             	cmp    $0x3c,%eax
 805a6a6:	0f 85 4f 01 00 00    	jne    805a7fb <next_nomacro1+0x1426>
 805a6ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a6b0:	48 89 c1             	mov    %rax,%rcx
 805a6b3:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a6ba:	00 00 00 
 805a6bd:	48 01 d0             	add    %rdx,%rax
 805a6c0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a6c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a6c8:	0f b6 08             	movzbl (%rax),%ecx
 805a6cb:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a6ce:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a6d1:	83 f8 5c             	cmp    $0x5c,%eax
 805a6d4:	0f 85 25 00 00 00    	jne    805a6ff <next_nomacro1+0x132a>
 805a6da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a6de:	48 89 c7             	mov    %rax,%rdi
 805a6e1:	b8 00 00 00 00       	mov    $0x0,%eax
 805a6e6:	e8 99 7b ff ff       	callq  8052284 <handle_stray1>
 805a6eb:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a6ee:	48 8b 05 ab 37 03 00 	mov    0x337ab(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a6f5:	48 8b 00             	mov    (%rax),%rax
 805a6f8:	48 8b 08             	mov    (%rax),%rcx
 805a6fb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a6ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a702:	83 f8 3d             	cmp    $0x3d,%eax
 805a705:	0f 85 2c 00 00 00    	jne    805a737 <next_nomacro1+0x1362>
 805a70b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a70f:	48 89 c1             	mov    %rax,%rcx
 805a712:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a719:	00 00 00 
 805a71c:	48 01 d0             	add    %rdx,%rax
 805a71f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a723:	b8 9e 00 00 00       	mov    $0x9e,%eax
 805a728:	4c 8b 1d f9 37 03 00 	mov    0x337f9(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a72f:	41 89 03             	mov    %eax,(%r11)
 805a732:	e9 ba 00 00 00       	jmpq   805a7f1 <next_nomacro1+0x141c>
 805a737:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a73a:	83 f8 3c             	cmp    $0x3c,%eax
 805a73d:	0f 85 9f 00 00 00    	jne    805a7e2 <next_nomacro1+0x140d>
 805a743:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a747:	48 89 c1             	mov    %rax,%rcx
 805a74a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a751:	00 00 00 
 805a754:	48 01 d0             	add    %rdx,%rax
 805a757:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a75b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a75f:	0f b6 08             	movzbl (%rax),%ecx
 805a762:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a765:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a768:	83 f8 5c             	cmp    $0x5c,%eax
 805a76b:	0f 85 25 00 00 00    	jne    805a796 <next_nomacro1+0x13c1>
 805a771:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a775:	48 89 c7             	mov    %rax,%rdi
 805a778:	b8 00 00 00 00       	mov    $0x0,%eax
 805a77d:	e8 02 7b ff ff       	callq  8052284 <handle_stray1>
 805a782:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a785:	48 8b 05 14 37 03 00 	mov    0x33714(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a78c:	48 8b 00             	mov    (%rax),%rax
 805a78f:	48 8b 08             	mov    (%rax),%rcx
 805a792:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a796:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a799:	83 f8 3d             	cmp    $0x3d,%eax
 805a79c:	0f 85 2c 00 00 00    	jne    805a7ce <next_nomacro1+0x13f9>
 805a7a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a7a6:	48 89 c1             	mov    %rax,%rcx
 805a7a9:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a7b0:	00 00 00 
 805a7b3:	48 01 d0             	add    %rdx,%rax
 805a7b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a7ba:	b8 81 00 00 00       	mov    $0x81,%eax
 805a7bf:	4c 8b 1d 62 37 03 00 	mov    0x33762(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a7c6:	41 89 03             	mov    %eax,(%r11)
 805a7c9:	e9 0f 00 00 00       	jmpq   805a7dd <next_nomacro1+0x1408>
 805a7ce:	b8 01 00 00 00       	mov    $0x1,%eax
 805a7d3:	4c 8b 1d 4e 37 03 00 	mov    0x3374e(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a7da:	41 89 03             	mov    %eax,(%r11)
 805a7dd:	e9 0f 00 00 00       	jmpq   805a7f1 <next_nomacro1+0x141c>
 805a7e2:	b8 9c 00 00 00       	mov    $0x9c,%eax
 805a7e7:	4c 8b 1d 3a 37 03 00 	mov    0x3373a(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a7ee:	41 89 03             	mov    %eax,(%r11)
 805a7f1:	e9 a5 0a 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805a7f6:	e9 09 00 00 00       	jmpq   805a804 <next_nomacro1+0x142f>
 805a7fb:	83 f8 3e             	cmp    $0x3e,%eax
 805a7fe:	0f 85 4f 01 00 00    	jne    805a953 <next_nomacro1+0x157e>
 805a804:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a808:	48 89 c1             	mov    %rax,%rcx
 805a80b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a812:	00 00 00 
 805a815:	48 01 d0             	add    %rdx,%rax
 805a818:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a81c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a820:	0f b6 08             	movzbl (%rax),%ecx
 805a823:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a826:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a829:	83 f8 5c             	cmp    $0x5c,%eax
 805a82c:	0f 85 25 00 00 00    	jne    805a857 <next_nomacro1+0x1482>
 805a832:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a836:	48 89 c7             	mov    %rax,%rdi
 805a839:	b8 00 00 00 00       	mov    $0x0,%eax
 805a83e:	e8 41 7a ff ff       	callq  8052284 <handle_stray1>
 805a843:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a846:	48 8b 05 53 36 03 00 	mov    0x33653(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a84d:	48 8b 00             	mov    (%rax),%rax
 805a850:	48 8b 08             	mov    (%rax),%rcx
 805a853:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a857:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a85a:	83 f8 3d             	cmp    $0x3d,%eax
 805a85d:	0f 85 2c 00 00 00    	jne    805a88f <next_nomacro1+0x14ba>
 805a863:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a867:	48 89 c1             	mov    %rax,%rcx
 805a86a:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a871:	00 00 00 
 805a874:	48 01 d0             	add    %rdx,%rax
 805a877:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a87b:	b8 9d 00 00 00       	mov    $0x9d,%eax
 805a880:	4c 8b 1d a1 36 03 00 	mov    0x336a1(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a887:	41 89 03             	mov    %eax,(%r11)
 805a88a:	e9 ba 00 00 00       	jmpq   805a949 <next_nomacro1+0x1574>
 805a88f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a892:	83 f8 3e             	cmp    $0x3e,%eax
 805a895:	0f 85 9f 00 00 00    	jne    805a93a <next_nomacro1+0x1565>
 805a89b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a89f:	48 89 c1             	mov    %rax,%rcx
 805a8a2:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a8a9:	00 00 00 
 805a8ac:	48 01 d0             	add    %rdx,%rax
 805a8af:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a8b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a8b7:	0f b6 08             	movzbl (%rax),%ecx
 805a8ba:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a8bd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a8c0:	83 f8 5c             	cmp    $0x5c,%eax
 805a8c3:	0f 85 25 00 00 00    	jne    805a8ee <next_nomacro1+0x1519>
 805a8c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a8cd:	48 89 c7             	mov    %rax,%rdi
 805a8d0:	b8 00 00 00 00       	mov    $0x0,%eax
 805a8d5:	e8 aa 79 ff ff       	callq  8052284 <handle_stray1>
 805a8da:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a8dd:	48 8b 05 bc 35 03 00 	mov    0x335bc(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a8e4:	48 8b 00             	mov    (%rax),%rax
 805a8e7:	48 8b 08             	mov    (%rax),%rcx
 805a8ea:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a8ee:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a8f1:	83 f8 3d             	cmp    $0x3d,%eax
 805a8f4:	0f 85 2c 00 00 00    	jne    805a926 <next_nomacro1+0x1551>
 805a8fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a8fe:	48 89 c1             	mov    %rax,%rcx
 805a901:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a908:	00 00 00 
 805a90b:	48 01 d0             	add    %rdx,%rax
 805a90e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a912:	b8 82 00 00 00       	mov    $0x82,%eax
 805a917:	4c 8b 1d 0a 36 03 00 	mov    0x3360a(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a91e:	41 89 03             	mov    %eax,(%r11)
 805a921:	e9 0f 00 00 00       	jmpq   805a935 <next_nomacro1+0x1560>
 805a926:	b8 02 00 00 00       	mov    $0x2,%eax
 805a92b:	4c 8b 1d f6 35 03 00 	mov    0x335f6(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a932:	41 89 03             	mov    %eax,(%r11)
 805a935:	e9 0f 00 00 00       	jmpq   805a949 <next_nomacro1+0x1574>
 805a93a:	b8 9f 00 00 00       	mov    $0x9f,%eax
 805a93f:	4c 8b 1d e2 35 03 00 	mov    0x335e2(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a946:	41 89 03             	mov    %eax,(%r11)
 805a949:	e9 4d 09 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805a94e:	e9 09 00 00 00       	jmpq   805a95c <next_nomacro1+0x1587>
 805a953:	83 f8 26             	cmp    $0x26,%eax
 805a956:	0f 85 dc 00 00 00    	jne    805aa38 <next_nomacro1+0x1663>
 805a95c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a960:	48 89 c1             	mov    %rax,%rcx
 805a963:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a96a:	00 00 00 
 805a96d:	48 01 d0             	add    %rdx,%rax
 805a970:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a974:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a978:	0f b6 08             	movzbl (%rax),%ecx
 805a97b:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805a97e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a981:	83 f8 5c             	cmp    $0x5c,%eax
 805a984:	0f 85 25 00 00 00    	jne    805a9af <next_nomacro1+0x15da>
 805a98a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a98e:	48 89 c7             	mov    %rax,%rdi
 805a991:	b8 00 00 00 00       	mov    $0x0,%eax
 805a996:	e8 e9 78 ff ff       	callq  8052284 <handle_stray1>
 805a99b:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805a99e:	48 8b 05 fb 34 03 00 	mov    0x334fb(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805a9a5:	48 8b 00             	mov    (%rax),%rax
 805a9a8:	48 8b 08             	mov    (%rax),%rcx
 805a9ab:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805a9af:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a9b2:	83 f8 26             	cmp    $0x26,%eax
 805a9b5:	0f 85 2c 00 00 00    	jne    805a9e7 <next_nomacro1+0x1612>
 805a9bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a9bf:	48 89 c1             	mov    %rax,%rcx
 805a9c2:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805a9c9:	00 00 00 
 805a9cc:	48 01 d0             	add    %rdx,%rax
 805a9cf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805a9d3:	b8 a0 00 00 00       	mov    $0xa0,%eax
 805a9d8:	4c 8b 1d 49 35 03 00 	mov    0x33549(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805a9df:	41 89 03             	mov    %eax,(%r11)
 805a9e2:	e9 47 00 00 00       	jmpq   805aa2e <next_nomacro1+0x1659>
 805a9e7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805a9ea:	83 f8 3d             	cmp    $0x3d,%eax
 805a9ed:	0f 85 2c 00 00 00    	jne    805aa1f <next_nomacro1+0x164a>
 805a9f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805a9f7:	48 89 c1             	mov    %rax,%rcx
 805a9fa:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805aa01:	00 00 00 
 805aa04:	48 01 d0             	add    %rdx,%rax
 805aa07:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aa0b:	b8 a6 00 00 00       	mov    $0xa6,%eax
 805aa10:	4c 8b 1d 11 35 03 00 	mov    0x33511(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805aa17:	41 89 03             	mov    %eax,(%r11)
 805aa1a:	e9 0f 00 00 00       	jmpq   805aa2e <next_nomacro1+0x1659>
 805aa1f:	b8 26 00 00 00       	mov    $0x26,%eax
 805aa24:	4c 8b 1d fd 34 03 00 	mov    0x334fd(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805aa2b:	41 89 03             	mov    %eax,(%r11)
 805aa2e:	e9 68 08 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805aa33:	e9 09 00 00 00       	jmpq   805aa41 <next_nomacro1+0x166c>
 805aa38:	83 f8 7c             	cmp    $0x7c,%eax
 805aa3b:	0f 85 dc 00 00 00    	jne    805ab1d <next_nomacro1+0x1748>
 805aa41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aa45:	48 89 c1             	mov    %rax,%rcx
 805aa48:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805aa4f:	00 00 00 
 805aa52:	48 01 d0             	add    %rdx,%rax
 805aa55:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aa59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aa5d:	0f b6 08             	movzbl (%rax),%ecx
 805aa60:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805aa63:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805aa66:	83 f8 5c             	cmp    $0x5c,%eax
 805aa69:	0f 85 25 00 00 00    	jne    805aa94 <next_nomacro1+0x16bf>
 805aa6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aa73:	48 89 c7             	mov    %rax,%rdi
 805aa76:	b8 00 00 00 00       	mov    $0x0,%eax
 805aa7b:	e8 04 78 ff ff       	callq  8052284 <handle_stray1>
 805aa80:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805aa83:	48 8b 05 16 34 03 00 	mov    0x33416(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805aa8a:	48 8b 00             	mov    (%rax),%rax
 805aa8d:	48 8b 08             	mov    (%rax),%rcx
 805aa90:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805aa94:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805aa97:	83 f8 7c             	cmp    $0x7c,%eax
 805aa9a:	0f 85 2c 00 00 00    	jne    805aacc <next_nomacro1+0x16f7>
 805aaa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aaa4:	48 89 c1             	mov    %rax,%rcx
 805aaa7:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805aaae:	00 00 00 
 805aab1:	48 01 d0             	add    %rdx,%rax
 805aab4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aab8:	b8 a1 00 00 00       	mov    $0xa1,%eax
 805aabd:	4c 8b 1d 64 34 03 00 	mov    0x33464(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805aac4:	41 89 03             	mov    %eax,(%r11)
 805aac7:	e9 47 00 00 00       	jmpq   805ab13 <next_nomacro1+0x173e>
 805aacc:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805aacf:	83 f8 3d             	cmp    $0x3d,%eax
 805aad2:	0f 85 2c 00 00 00    	jne    805ab04 <next_nomacro1+0x172f>
 805aad8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aadc:	48 89 c1             	mov    %rax,%rcx
 805aadf:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805aae6:	00 00 00 
 805aae9:	48 01 d0             	add    %rdx,%rax
 805aaec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aaf0:	b8 fc 00 00 00       	mov    $0xfc,%eax
 805aaf5:	4c 8b 1d 2c 34 03 00 	mov    0x3342c(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805aafc:	41 89 03             	mov    %eax,(%r11)
 805aaff:	e9 0f 00 00 00       	jmpq   805ab13 <next_nomacro1+0x173e>
 805ab04:	b8 7c 00 00 00       	mov    $0x7c,%eax
 805ab09:	4c 8b 1d 18 34 03 00 	mov    0x33418(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805ab10:	41 89 03             	mov    %eax,(%r11)
 805ab13:	e9 83 07 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805ab18:	e9 09 00 00 00       	jmpq   805ab26 <next_nomacro1+0x1751>
 805ab1d:	83 f8 2b             	cmp    $0x2b,%eax
 805ab20:	0f 85 dc 00 00 00    	jne    805ac02 <next_nomacro1+0x182d>
 805ab26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ab2a:	48 89 c1             	mov    %rax,%rcx
 805ab2d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ab34:	00 00 00 
 805ab37:	48 01 d0             	add    %rdx,%rax
 805ab3a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ab3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ab42:	0f b6 08             	movzbl (%rax),%ecx
 805ab45:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805ab48:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ab4b:	83 f8 5c             	cmp    $0x5c,%eax
 805ab4e:	0f 85 25 00 00 00    	jne    805ab79 <next_nomacro1+0x17a4>
 805ab54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ab58:	48 89 c7             	mov    %rax,%rdi
 805ab5b:	b8 00 00 00 00       	mov    $0x0,%eax
 805ab60:	e8 1f 77 ff ff       	callq  8052284 <handle_stray1>
 805ab65:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ab68:	48 8b 05 31 33 03 00 	mov    0x33331(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805ab6f:	48 8b 00             	mov    (%rax),%rax
 805ab72:	48 8b 08             	mov    (%rax),%rcx
 805ab75:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805ab79:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ab7c:	83 f8 2b             	cmp    $0x2b,%eax
 805ab7f:	0f 85 2c 00 00 00    	jne    805abb1 <next_nomacro1+0x17dc>
 805ab85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ab89:	48 89 c1             	mov    %rax,%rcx
 805ab8c:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ab93:	00 00 00 
 805ab96:	48 01 d0             	add    %rdx,%rax
 805ab99:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ab9d:	b8 a4 00 00 00       	mov    $0xa4,%eax
 805aba2:	4c 8b 1d 7f 33 03 00 	mov    0x3337f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805aba9:	41 89 03             	mov    %eax,(%r11)
 805abac:	e9 47 00 00 00       	jmpq   805abf8 <next_nomacro1+0x1823>
 805abb1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805abb4:	83 f8 3d             	cmp    $0x3d,%eax
 805abb7:	0f 85 2c 00 00 00    	jne    805abe9 <next_nomacro1+0x1814>
 805abbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805abc1:	48 89 c1             	mov    %rax,%rcx
 805abc4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805abcb:	00 00 00 
 805abce:	48 01 d0             	add    %rdx,%rax
 805abd1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805abd5:	b8 ab 00 00 00       	mov    $0xab,%eax
 805abda:	4c 8b 1d 47 33 03 00 	mov    0x33347(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805abe1:	41 89 03             	mov    %eax,(%r11)
 805abe4:	e9 0f 00 00 00       	jmpq   805abf8 <next_nomacro1+0x1823>
 805abe9:	b8 2b 00 00 00       	mov    $0x2b,%eax
 805abee:	4c 8b 1d 33 33 03 00 	mov    0x33333(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805abf5:	41 89 03             	mov    %eax,(%r11)
 805abf8:	e9 9e 06 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805abfd:	e9 09 00 00 00       	jmpq   805ac0b <next_nomacro1+0x1836>
 805ac02:	83 f8 2d             	cmp    $0x2d,%eax
 805ac05:	0f 85 14 01 00 00    	jne    805ad1f <next_nomacro1+0x194a>
 805ac0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ac0f:	48 89 c1             	mov    %rax,%rcx
 805ac12:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ac19:	00 00 00 
 805ac1c:	48 01 d0             	add    %rdx,%rax
 805ac1f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ac23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ac27:	0f b6 08             	movzbl (%rax),%ecx
 805ac2a:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805ac2d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ac30:	83 f8 5c             	cmp    $0x5c,%eax
 805ac33:	0f 85 25 00 00 00    	jne    805ac5e <next_nomacro1+0x1889>
 805ac39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ac3d:	48 89 c7             	mov    %rax,%rdi
 805ac40:	b8 00 00 00 00       	mov    $0x0,%eax
 805ac45:	e8 3a 76 ff ff       	callq  8052284 <handle_stray1>
 805ac4a:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ac4d:	48 8b 05 4c 32 03 00 	mov    0x3324c(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805ac54:	48 8b 00             	mov    (%rax),%rax
 805ac57:	48 8b 08             	mov    (%rax),%rcx
 805ac5a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805ac5e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ac61:	83 f8 2d             	cmp    $0x2d,%eax
 805ac64:	0f 85 2c 00 00 00    	jne    805ac96 <next_nomacro1+0x18c1>
 805ac6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ac6e:	48 89 c1             	mov    %rax,%rcx
 805ac71:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ac78:	00 00 00 
 805ac7b:	48 01 d0             	add    %rdx,%rax
 805ac7e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ac82:	b8 a2 00 00 00       	mov    $0xa2,%eax
 805ac87:	4c 8b 1d 9a 32 03 00 	mov    0x3329a(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805ac8e:	41 89 03             	mov    %eax,(%r11)
 805ac91:	e9 7f 00 00 00       	jmpq   805ad15 <next_nomacro1+0x1940>
 805ac96:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ac99:	83 f8 3d             	cmp    $0x3d,%eax
 805ac9c:	0f 85 2c 00 00 00    	jne    805acce <next_nomacro1+0x18f9>
 805aca2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aca6:	48 89 c1             	mov    %rax,%rcx
 805aca9:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805acb0:	00 00 00 
 805acb3:	48 01 d0             	add    %rdx,%rax
 805acb6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805acba:	b8 ad 00 00 00       	mov    $0xad,%eax
 805acbf:	4c 8b 1d 62 32 03 00 	mov    0x33262(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805acc6:	41 89 03             	mov    %eax,(%r11)
 805acc9:	e9 47 00 00 00       	jmpq   805ad15 <next_nomacro1+0x1940>
 805acce:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805acd1:	83 f8 3e             	cmp    $0x3e,%eax
 805acd4:	0f 85 2c 00 00 00    	jne    805ad06 <next_nomacro1+0x1931>
 805acda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805acde:	48 89 c1             	mov    %rax,%rcx
 805ace1:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ace8:	00 00 00 
 805aceb:	48 01 d0             	add    %rdx,%rax
 805acee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805acf2:	b8 cb 00 00 00       	mov    $0xcb,%eax
 805acf7:	4c 8b 1d 2a 32 03 00 	mov    0x3322a(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805acfe:	41 89 03             	mov    %eax,(%r11)
 805ad01:	e9 0f 00 00 00       	jmpq   805ad15 <next_nomacro1+0x1940>
 805ad06:	b8 2d 00 00 00       	mov    $0x2d,%eax
 805ad0b:	4c 8b 1d 16 32 03 00 	mov    0x33216(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805ad12:	41 89 03             	mov    %eax,(%r11)
 805ad15:	e9 81 05 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805ad1a:	e9 09 00 00 00       	jmpq   805ad28 <next_nomacro1+0x1953>
 805ad1f:	83 f8 21             	cmp    $0x21,%eax
 805ad22:	0f 85 a4 00 00 00    	jne    805adcc <next_nomacro1+0x19f7>
 805ad28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ad2c:	48 89 c1             	mov    %rax,%rcx
 805ad2f:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ad36:	00 00 00 
 805ad39:	48 01 d0             	add    %rdx,%rax
 805ad3c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ad40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ad44:	0f b6 08             	movzbl (%rax),%ecx
 805ad47:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805ad4a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ad4d:	83 f8 5c             	cmp    $0x5c,%eax
 805ad50:	0f 85 25 00 00 00    	jne    805ad7b <next_nomacro1+0x19a6>
 805ad56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ad5a:	48 89 c7             	mov    %rax,%rdi
 805ad5d:	b8 00 00 00 00       	mov    $0x0,%eax
 805ad62:	e8 1d 75 ff ff       	callq  8052284 <handle_stray1>
 805ad67:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ad6a:	48 8b 05 2f 31 03 00 	mov    0x3312f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805ad71:	48 8b 00             	mov    (%rax),%rax
 805ad74:	48 8b 08             	mov    (%rax),%rcx
 805ad77:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805ad7b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ad7e:	83 f8 3d             	cmp    $0x3d,%eax
 805ad81:	0f 85 2c 00 00 00    	jne    805adb3 <next_nomacro1+0x19de>
 805ad87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ad8b:	48 89 c1             	mov    %rax,%rcx
 805ad8e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ad95:	00 00 00 
 805ad98:	48 01 d0             	add    %rdx,%rax
 805ad9b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ad9f:	b8 95 00 00 00       	mov    $0x95,%eax
 805ada4:	4c 8b 1d 7d 31 03 00 	mov    0x3317d(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805adab:	41 89 03             	mov    %eax,(%r11)
 805adae:	e9 0f 00 00 00       	jmpq   805adc2 <next_nomacro1+0x19ed>
 805adb3:	b8 21 00 00 00       	mov    $0x21,%eax
 805adb8:	4c 8b 1d 69 31 03 00 	mov    0x33169(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805adbf:	41 89 03             	mov    %eax,(%r11)
 805adc2:	e9 d4 04 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805adc7:	e9 09 00 00 00       	jmpq   805add5 <next_nomacro1+0x1a00>
 805adcc:	83 f8 3d             	cmp    $0x3d,%eax
 805adcf:	0f 85 a4 00 00 00    	jne    805ae79 <next_nomacro1+0x1aa4>
 805add5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805add9:	48 89 c1             	mov    %rax,%rcx
 805addc:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ade3:	00 00 00 
 805ade6:	48 01 d0             	add    %rdx,%rax
 805ade9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aded:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805adf1:	0f b6 08             	movzbl (%rax),%ecx
 805adf4:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805adf7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805adfa:	83 f8 5c             	cmp    $0x5c,%eax
 805adfd:	0f 85 25 00 00 00    	jne    805ae28 <next_nomacro1+0x1a53>
 805ae03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ae07:	48 89 c7             	mov    %rax,%rdi
 805ae0a:	b8 00 00 00 00       	mov    $0x0,%eax
 805ae0f:	e8 70 74 ff ff       	callq  8052284 <handle_stray1>
 805ae14:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ae17:	48 8b 05 82 30 03 00 	mov    0x33082(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805ae1e:	48 8b 00             	mov    (%rax),%rax
 805ae21:	48 8b 08             	mov    (%rax),%rcx
 805ae24:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805ae28:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ae2b:	83 f8 3d             	cmp    $0x3d,%eax
 805ae2e:	0f 85 2c 00 00 00    	jne    805ae60 <next_nomacro1+0x1a8b>
 805ae34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ae38:	48 89 c1             	mov    %rax,%rcx
 805ae3b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ae42:	00 00 00 
 805ae45:	48 01 d0             	add    %rdx,%rax
 805ae48:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ae4c:	b8 94 00 00 00       	mov    $0x94,%eax
 805ae51:	4c 8b 1d d0 30 03 00 	mov    0x330d0(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805ae58:	41 89 03             	mov    %eax,(%r11)
 805ae5b:	e9 0f 00 00 00       	jmpq   805ae6f <next_nomacro1+0x1a9a>
 805ae60:	b8 3d 00 00 00       	mov    $0x3d,%eax
 805ae65:	4c 8b 1d bc 30 03 00 	mov    0x330bc(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805ae6c:	41 89 03             	mov    %eax,(%r11)
 805ae6f:	e9 27 04 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805ae74:	e9 09 00 00 00       	jmpq   805ae82 <next_nomacro1+0x1aad>
 805ae79:	83 f8 2a             	cmp    $0x2a,%eax
 805ae7c:	0f 85 a4 00 00 00    	jne    805af26 <next_nomacro1+0x1b51>
 805ae82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ae86:	48 89 c1             	mov    %rax,%rcx
 805ae89:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805ae90:	00 00 00 
 805ae93:	48 01 d0             	add    %rdx,%rax
 805ae96:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805ae9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805ae9e:	0f b6 08             	movzbl (%rax),%ecx
 805aea1:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805aea4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805aea7:	83 f8 5c             	cmp    $0x5c,%eax
 805aeaa:	0f 85 25 00 00 00    	jne    805aed5 <next_nomacro1+0x1b00>
 805aeb0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aeb4:	48 89 c7             	mov    %rax,%rdi
 805aeb7:	b8 00 00 00 00       	mov    $0x0,%eax
 805aebc:	e8 c3 73 ff ff       	callq  8052284 <handle_stray1>
 805aec1:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805aec4:	48 8b 05 d5 2f 03 00 	mov    0x32fd5(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805aecb:	48 8b 00             	mov    (%rax),%rax
 805aece:	48 8b 08             	mov    (%rax),%rcx
 805aed1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805aed5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805aed8:	83 f8 3d             	cmp    $0x3d,%eax
 805aedb:	0f 85 2c 00 00 00    	jne    805af0d <next_nomacro1+0x1b38>
 805aee1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aee5:	48 89 c1             	mov    %rax,%rcx
 805aee8:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805aeef:	00 00 00 
 805aef2:	48 01 d0             	add    %rdx,%rax
 805aef5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aef9:	b8 aa 00 00 00       	mov    $0xaa,%eax
 805aefe:	4c 8b 1d 23 30 03 00 	mov    0x33023(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805af05:	41 89 03             	mov    %eax,(%r11)
 805af08:	e9 0f 00 00 00       	jmpq   805af1c <next_nomacro1+0x1b47>
 805af0d:	b8 2a 00 00 00       	mov    $0x2a,%eax
 805af12:	4c 8b 1d 0f 30 03 00 	mov    0x3300f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805af19:	41 89 03             	mov    %eax,(%r11)
 805af1c:	e9 7a 03 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805af21:	e9 09 00 00 00       	jmpq   805af2f <next_nomacro1+0x1b5a>
 805af26:	83 f8 25             	cmp    $0x25,%eax
 805af29:	0f 85 a4 00 00 00    	jne    805afd3 <next_nomacro1+0x1bfe>
 805af2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805af33:	48 89 c1             	mov    %rax,%rcx
 805af36:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805af3d:	00 00 00 
 805af40:	48 01 d0             	add    %rdx,%rax
 805af43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805af47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805af4b:	0f b6 08             	movzbl (%rax),%ecx
 805af4e:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805af51:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805af54:	83 f8 5c             	cmp    $0x5c,%eax
 805af57:	0f 85 25 00 00 00    	jne    805af82 <next_nomacro1+0x1bad>
 805af5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805af61:	48 89 c7             	mov    %rax,%rdi
 805af64:	b8 00 00 00 00       	mov    $0x0,%eax
 805af69:	e8 16 73 ff ff       	callq  8052284 <handle_stray1>
 805af6e:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805af71:	48 8b 05 28 2f 03 00 	mov    0x32f28(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805af78:	48 8b 00             	mov    (%rax),%rax
 805af7b:	48 8b 08             	mov    (%rax),%rcx
 805af7e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805af82:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805af85:	83 f8 3d             	cmp    $0x3d,%eax
 805af88:	0f 85 2c 00 00 00    	jne    805afba <next_nomacro1+0x1be5>
 805af8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805af92:	48 89 c1             	mov    %rax,%rcx
 805af95:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805af9c:	00 00 00 
 805af9f:	48 01 d0             	add    %rdx,%rax
 805afa2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805afa6:	b8 a5 00 00 00       	mov    $0xa5,%eax
 805afab:	4c 8b 1d 76 2f 03 00 	mov    0x32f76(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805afb2:	41 89 03             	mov    %eax,(%r11)
 805afb5:	e9 0f 00 00 00       	jmpq   805afc9 <next_nomacro1+0x1bf4>
 805afba:	b8 25 00 00 00       	mov    $0x25,%eax
 805afbf:	4c 8b 1d 62 2f 03 00 	mov    0x32f62(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805afc6:	41 89 03             	mov    %eax,(%r11)
 805afc9:	e9 cd 02 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805afce:	e9 09 00 00 00       	jmpq   805afdc <next_nomacro1+0x1c07>
 805afd3:	83 f8 5e             	cmp    $0x5e,%eax
 805afd6:	0f 85 a4 00 00 00    	jne    805b080 <next_nomacro1+0x1cab>
 805afdc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805afe0:	48 89 c1             	mov    %rax,%rcx
 805afe3:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805afea:	00 00 00 
 805afed:	48 01 d0             	add    %rdx,%rax
 805aff0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805aff4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805aff8:	0f b6 08             	movzbl (%rax),%ecx
 805affb:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805affe:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b001:	83 f8 5c             	cmp    $0x5c,%eax
 805b004:	0f 85 25 00 00 00    	jne    805b02f <next_nomacro1+0x1c5a>
 805b00a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b00e:	48 89 c7             	mov    %rax,%rdi
 805b011:	b8 00 00 00 00       	mov    $0x0,%eax
 805b016:	e8 69 72 ff ff       	callq  8052284 <handle_stray1>
 805b01b:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805b01e:	48 8b 05 7b 2e 03 00 	mov    0x32e7b(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805b025:	48 8b 00             	mov    (%rax),%rax
 805b028:	48 8b 08             	mov    (%rax),%rcx
 805b02b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805b02f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b032:	83 f8 3d             	cmp    $0x3d,%eax
 805b035:	0f 85 2c 00 00 00    	jne    805b067 <next_nomacro1+0x1c92>
 805b03b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b03f:	48 89 c1             	mov    %rax,%rcx
 805b042:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805b049:	00 00 00 
 805b04c:	48 01 d0             	add    %rdx,%rax
 805b04f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b053:	b8 de 00 00 00       	mov    $0xde,%eax
 805b058:	4c 8b 1d c9 2e 03 00 	mov    0x32ec9(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b05f:	41 89 03             	mov    %eax,(%r11)
 805b062:	e9 0f 00 00 00       	jmpq   805b076 <next_nomacro1+0x1ca1>
 805b067:	b8 5e 00 00 00       	mov    $0x5e,%eax
 805b06c:	4c 8b 1d b5 2e 03 00 	mov    0x32eb5(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b073:	41 89 03             	mov    %eax,(%r11)
 805b076:	e9 20 02 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805b07b:	e9 09 00 00 00       	jmpq   805b089 <next_nomacro1+0x1cb4>
 805b080:	83 f8 2f             	cmp    $0x2f,%eax
 805b083:	0f 85 18 01 00 00    	jne    805b1a1 <next_nomacro1+0x1dcc>
 805b089:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b08d:	48 89 c1             	mov    %rax,%rcx
 805b090:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805b097:	00 00 00 
 805b09a:	48 01 d0             	add    %rdx,%rax
 805b09d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b0a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b0a5:	0f b6 08             	movzbl (%rax),%ecx
 805b0a8:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805b0ab:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b0ae:	83 f8 5c             	cmp    $0x5c,%eax
 805b0b1:	0f 85 25 00 00 00    	jne    805b0dc <next_nomacro1+0x1d07>
 805b0b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b0bb:	48 89 c7             	mov    %rax,%rdi
 805b0be:	b8 00 00 00 00       	mov    $0x0,%eax
 805b0c3:	e8 bc 71 ff ff       	callq  8052284 <handle_stray1>
 805b0c8:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805b0cb:	48 8b 05 ce 2d 03 00 	mov    0x32dce(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805b0d2:	48 8b 00             	mov    (%rax),%rax
 805b0d5:	48 8b 08             	mov    (%rax),%rcx
 805b0d8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805b0dc:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b0df:	83 f8 2a             	cmp    $0x2a,%eax
 805b0e2:	0f 85 2e 00 00 00    	jne    805b116 <next_nomacro1+0x1d41>
 805b0e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b0ec:	48 89 c7             	mov    %rax,%rdi
 805b0ef:	b8 00 00 00 00       	mov    $0x0,%eax
 805b0f4:	e8 45 75 ff ff       	callq  805263e <parse_comment>
 805b0f9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b0fd:	b8 20 00 00 00       	mov    $0x20,%eax
 805b102:	4c 8b 1d 1f 2e 03 00 	mov    0x32e1f(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b109:	41 89 03             	mov    %eax,(%r11)
 805b10c:	e9 99 01 00 00       	jmpq   805b2aa <next_nomacro1+0x1ed5>
 805b111:	e9 81 00 00 00       	jmpq   805b197 <next_nomacro1+0x1dc2>
 805b116:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b119:	83 f8 2f             	cmp    $0x2f,%eax
 805b11c:	0f 85 2e 00 00 00    	jne    805b150 <next_nomacro1+0x1d7b>
 805b122:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b126:	48 89 c7             	mov    %rax,%rdi
 805b129:	b8 00 00 00 00       	mov    $0x0,%eax
 805b12e:	e8 56 72 ff ff       	callq  8052389 <parse_line_comment>
 805b133:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b137:	b8 20 00 00 00       	mov    $0x20,%eax
 805b13c:	4c 8b 1d e5 2d 03 00 	mov    0x32de5(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b143:	41 89 03             	mov    %eax,(%r11)
 805b146:	e9 5f 01 00 00       	jmpq   805b2aa <next_nomacro1+0x1ed5>
 805b14b:	e9 47 00 00 00       	jmpq   805b197 <next_nomacro1+0x1dc2>
 805b150:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b153:	83 f8 3d             	cmp    $0x3d,%eax
 805b156:	0f 85 2c 00 00 00    	jne    805b188 <next_nomacro1+0x1db3>
 805b15c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b160:	48 89 c1             	mov    %rax,%rcx
 805b163:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805b16a:	00 00 00 
 805b16d:	48 01 d0             	add    %rdx,%rax
 805b170:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b174:	b8 af 00 00 00       	mov    $0xaf,%eax
 805b179:	4c 8b 1d a8 2d 03 00 	mov    0x32da8(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b180:	41 89 03             	mov    %eax,(%r11)
 805b183:	e9 0f 00 00 00       	jmpq   805b197 <next_nomacro1+0x1dc2>
 805b188:	b8 2f 00 00 00       	mov    $0x2f,%eax
 805b18d:	4c 8b 1d 94 2d 03 00 	mov    0x32d94(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b194:	41 89 03             	mov    %eax,(%r11)
 805b197:	e9 ff 00 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805b19c:	e9 09 00 00 00       	jmpq   805b1aa <next_nomacro1+0x1dd5>
 805b1a1:	83 f8 28             	cmp    $0x28,%eax
 805b1a4:	0f 85 05 00 00 00    	jne    805b1af <next_nomacro1+0x1dda>
 805b1aa:	e9 09 00 00 00       	jmpq   805b1b8 <next_nomacro1+0x1de3>
 805b1af:	83 f8 29             	cmp    $0x29,%eax
 805b1b2:	0f 85 05 00 00 00    	jne    805b1bd <next_nomacro1+0x1de8>
 805b1b8:	e9 09 00 00 00       	jmpq   805b1c6 <next_nomacro1+0x1df1>
 805b1bd:	83 f8 5b             	cmp    $0x5b,%eax
 805b1c0:	0f 85 05 00 00 00    	jne    805b1cb <next_nomacro1+0x1df6>
 805b1c6:	e9 09 00 00 00       	jmpq   805b1d4 <next_nomacro1+0x1dff>
 805b1cb:	83 f8 5d             	cmp    $0x5d,%eax
 805b1ce:	0f 85 05 00 00 00    	jne    805b1d9 <next_nomacro1+0x1e04>
 805b1d4:	e9 09 00 00 00       	jmpq   805b1e2 <next_nomacro1+0x1e0d>
 805b1d9:	83 f8 7b             	cmp    $0x7b,%eax
 805b1dc:	0f 85 05 00 00 00    	jne    805b1e7 <next_nomacro1+0x1e12>
 805b1e2:	e9 09 00 00 00       	jmpq   805b1f0 <next_nomacro1+0x1e1b>
 805b1e7:	83 f8 7d             	cmp    $0x7d,%eax
 805b1ea:	0f 85 05 00 00 00    	jne    805b1f5 <next_nomacro1+0x1e20>
 805b1f0:	e9 09 00 00 00       	jmpq   805b1fe <next_nomacro1+0x1e29>
 805b1f5:	83 f8 2c             	cmp    $0x2c,%eax
 805b1f8:	0f 85 05 00 00 00    	jne    805b203 <next_nomacro1+0x1e2e>
 805b1fe:	e9 09 00 00 00       	jmpq   805b20c <next_nomacro1+0x1e37>
 805b203:	83 f8 3b             	cmp    $0x3b,%eax
 805b206:	0f 85 05 00 00 00    	jne    805b211 <next_nomacro1+0x1e3c>
 805b20c:	e9 09 00 00 00       	jmpq   805b21a <next_nomacro1+0x1e45>
 805b211:	83 f8 3a             	cmp    $0x3a,%eax
 805b214:	0f 85 05 00 00 00    	jne    805b21f <next_nomacro1+0x1e4a>
 805b21a:	e9 09 00 00 00       	jmpq   805b228 <next_nomacro1+0x1e53>
 805b21f:	83 f8 3f             	cmp    $0x3f,%eax
 805b222:	0f 85 05 00 00 00    	jne    805b22d <next_nomacro1+0x1e58>
 805b228:	e9 09 00 00 00       	jmpq   805b236 <next_nomacro1+0x1e61>
 805b22d:	83 f8 7e             	cmp    $0x7e,%eax
 805b230:	0f 85 05 00 00 00    	jne    805b23b <next_nomacro1+0x1e66>
 805b236:	e9 09 00 00 00       	jmpq   805b244 <next_nomacro1+0x1e6f>
 805b23b:	83 f8 24             	cmp    $0x24,%eax
 805b23e:	0f 85 05 00 00 00    	jne    805b249 <next_nomacro1+0x1e74>
 805b244:	e9 09 00 00 00       	jmpq   805b252 <next_nomacro1+0x1e7d>
 805b249:	83 f8 40             	cmp    $0x40,%eax
 805b24c:	0f 85 2a 00 00 00    	jne    805b27c <next_nomacro1+0x1ea7>
 805b252:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b255:	4c 8b 1d cc 2c 03 00 	mov    0x32ccc(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 805b25c:	41 89 03             	mov    %eax,(%r11)
 805b25f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b263:	48 89 c1             	mov    %rax,%rcx
 805b266:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805b26d:	00 00 00 
 805b270:	48 01 d0             	add    %rdx,%rax
 805b273:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b277:	e9 1f 00 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805b27c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b27f:	48 89 c6             	mov    %rax,%rsi
 805b282:	48 8d 05 80 05 03 00 	lea    0x30580(%rip),%rax        # 808b809 <L.177>
 805b289:	48 89 c7             	mov    %rax,%rdi
 805b28c:	b8 00 00 00 00       	mov    $0x0,%eax
 805b291:	e8 31 24 ff ff       	callq  804d6c7 <tcc_error>
 805b296:	e9 00 00 00 00       	jmpq   805b29b <next_nomacro1+0x1ec6>
 805b29b:	b8 00 00 00 00       	mov    $0x0,%eax
 805b2a0:	4c 8b 1d 69 2c 03 00 	mov    0x32c69(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 805b2a7:	41 89 03             	mov    %eax,(%r11)
 805b2aa:	48 8b 05 ef 2b 03 00 	mov    0x32bef(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 805b2b1:	48 8b 00             	mov    (%rax),%rax
 805b2b4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805b2b8:	48 89 08             	mov    %rcx,(%rax)
 805b2bb:	c9                   	leaveq 
 805b2bc:	c3                   	retq   

000000000805b2bd <add_cached_include>:
 805b2bd:	55                   	push   %rbp
 805b2be:	48 89 e5             	mov    %rsp,%rbp
 805b2c1:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805b2c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b2cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805b2d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805b2d4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805b2d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b2dc:	49 89 c2             	mov    %rax,%r10
 805b2df:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805b2e2:	48 89 c6             	mov    %rax,%rsi
 805b2e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805b2e9:	48 89 c7             	mov    %rax,%rdi
 805b2ec:	4c 89 d2             	mov    %r10,%rdx
 805b2ef:	b8 00 00 00 00       	mov    $0x0,%eax
 805b2f4:	e8 50 95 ff ff       	callq  8054849 <search_cached_include>
 805b2f9:	85 c0                	test   %eax,%eax
 805b2fb:	0f 84 05 00 00 00    	je     805b306 <add_cached_include+0x49>
 805b301:	e9 53 01 00 00       	jmpq   805b459 <add_cached_include+0x19c>
 805b306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b30a:	48 89 c7             	mov    %rax,%rdi
 805b30d:	b8 00 00 00 00       	mov    $0x0,%eax
 805b312:	e8 c9 bf 02 00       	callq  80872e0 <strlen>
 805b317:	83 c0 0c             	add    $0xc,%eax
 805b31a:	48 89 c1             	mov    %rax,%rcx
 805b31d:	48 89 cf             	mov    %rcx,%rdi
 805b320:	b8 00 00 00 00       	mov    $0x0,%eax
 805b325:	e8 2e 0c ff ff       	callq  804bf58 <tcc_malloc>
 805b32a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805b32e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805b332:	85 c0                	test   %eax,%eax
 805b334:	0f 84 05 00 00 00    	je     805b33f <add_cached_include+0x82>
 805b33a:	e9 05 00 00 00       	jmpq   805b344 <add_cached_include+0x87>
 805b33f:	e9 15 01 00 00       	jmpq   805b459 <add_cached_include+0x19c>
 805b344:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805b348:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805b34f:	00 00 00 
 805b352:	48 01 c8             	add    %rcx,%rax
 805b355:	0f be 4d f0          	movsbl -0x10(%rbp),%ecx
 805b359:	88 08                	mov    %cl,(%rax)
 805b35b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805b35f:	48 b9 09 00 00 00 00 	movabs $0x9,%rcx
 805b366:	00 00 00 
 805b369:	48 01 c8             	add    %rcx,%rax
 805b36c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805b370:	48 89 ce             	mov    %rcx,%rsi
 805b373:	48 89 c7             	mov    %rax,%rdi
 805b376:	b8 00 00 00 00       	mov    $0x0,%eax
 805b37b:	e8 e0 be 02 00       	callq  8087260 <strcpy>
 805b380:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805b384:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 805b387:	89 08                	mov    %ecx,(%rax)
 805b389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805b38d:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 805b394:	00 00 00 
 805b397:	48 01 c8             	add    %rcx,%rax
 805b39a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805b39e:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 805b3a5:	00 00 00 
 805b3a8:	48 01 d1             	add    %rdx,%rcx
 805b3ab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 805b3af:	49 89 d2             	mov    %rdx,%r10
 805b3b2:	48 89 ce             	mov    %rcx,%rsi
 805b3b5:	48 89 c7             	mov    %rax,%rdi
 805b3b8:	4c 89 d2             	mov    %r10,%rdx
 805b3bb:	b8 00 00 00 00       	mov    $0x0,%eax
 805b3c0:	e8 3e 0d ff ff       	callq  804c103 <dynarray_add>
 805b3c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b3c9:	48 89 c6             	mov    %rax,%rsi
 805b3cc:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805b3cf:	48 89 c7             	mov    %rax,%rdi
 805b3d2:	b8 00 00 00 00       	mov    $0x0,%eax
 805b3d7:	e8 7f 00 00 00       	callq  805b45b <hash_cached_include>
 805b3dc:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 805b3df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805b3e3:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805b3ea:	00 00 00 
 805b3ed:	48 01 c8             	add    %rcx,%rax
 805b3f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805b3f4:	48 ba 48 04 00 00 00 	movabs $0x448,%rdx
 805b3fb:	00 00 00 
 805b3fe:	48 01 d1             	add    %rdx,%rcx
 805b401:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 805b404:	48 63 d2             	movslq %edx,%rdx
 805b407:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805b40b:	48 89 d0             	mov    %rdx,%rax
 805b40e:	48 c1 e0 02          	shl    $0x2,%rax
 805b412:	48 89 c2             	mov    %rax,%rdx
 805b415:	48 01 d1             	add    %rdx,%rcx
 805b418:	8b 01                	mov    (%rcx),%eax
 805b41a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805b41e:	89 01                	mov    %eax,(%rcx)
 805b420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805b424:	48 b9 48 04 00 00 00 	movabs $0x448,%rcx
 805b42b:	00 00 00 
 805b42e:	48 01 c8             	add    %rcx,%rax
 805b431:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 805b434:	48 63 c9             	movslq %ecx,%rcx
 805b437:	48 89 ca             	mov    %rcx,%rdx
 805b43a:	48 c1 e2 02          	shl    $0x2,%rdx
 805b43e:	48 89 d1             	mov    %rdx,%rcx
 805b441:	48 01 c8             	add    %rcx,%rax
 805b444:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805b448:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 805b44f:	00 00 00 
 805b452:	48 01 d1             	add    %rdx,%rcx
 805b455:	8b 11                	mov    (%rcx),%edx
 805b457:	89 10                	mov    %edx,(%rax)
 805b459:	c9                   	leaveq 
 805b45a:	c3                   	retq   

000000000805b45b <hash_cached_include>:
 805b45b:	55                   	push   %rbp
 805b45c:	48 89 e5             	mov    %rsp,%rbp
 805b45f:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805b466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b46a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805b46e:	b8 01 00 00 00       	mov    $0x1,%eax
 805b473:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805b476:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805b479:	b9 07 01 00 00       	mov    $0x107,%ecx
 805b47e:	48 0f af c1          	imul   %rcx,%rax
 805b482:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805b485:	48 01 c8             	add    %rcx,%rax
 805b488:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805b48b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805b48f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805b493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b497:	0f b6 08             	movzbl (%rax),%ecx
 805b49a:	85 c9                	test   %ecx,%ecx
 805b49c:	0f 84 33 00 00 00    	je     805b4d5 <hash_cached_include+0x7a>
 805b4a2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805b4a5:	b9 07 01 00 00       	mov    $0x107,%ecx
 805b4aa:	48 0f af c1          	imul   %rcx,%rax
 805b4ae:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805b4b2:	0f b6 11             	movzbl (%rcx),%edx
 805b4b5:	48 01 d0             	add    %rdx,%rax
 805b4b8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805b4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b4bf:	48 89 c1             	mov    %rax,%rcx
 805b4c2:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 805b4c9:	00 00 00 
 805b4cc:	48 01 d0             	add    %rdx,%rax
 805b4cf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805b4d3:	eb be                	jmp    805b493 <hash_cached_include+0x38>
 805b4d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805b4d8:	81 e0 ff 01 00 00    	and    $0x1ff,%eax
 805b4de:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805b4e1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805b4e4:	e9 00 00 00 00       	jmpq   805b4e9 <hash_cached_include+0x8e>
 805b4e9:	c9                   	leaveq 
 805b4ea:	c3                   	retq   

000000000805b4eb <TOK_GET>:
 805b4eb:	55                   	push   %rbp
 805b4ec:	48 89 e5             	mov    %rsp,%rbp
 805b4ef:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 805b4f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b4fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805b4fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805b502:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805b506:	48 8b 08             	mov    (%rax),%rcx
 805b509:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805b50d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b511:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805b515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805b519:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805b51d:	48 89 ca             	mov    %rcx,%rdx
 805b520:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805b524:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 805b52b:	00 00 00 
 805b52e:	48 01 c1             	add    %rax,%rcx
 805b531:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805b535:	8b 02                	mov    (%rdx),%eax
 805b537:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805b53b:	89 01                	mov    %eax,(%rcx)
 805b53d:	e9 05 00 00 00       	jmpq   805b547 <TOK_GET+0x5c>
 805b542:	e9 0c 00 00 00       	jmpq   805b553 <TOK_GET+0x68>
 805b547:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 805b54d:	0f 85 05 00 00 00    	jne    805b558 <TOK_GET+0x6d>
 805b553:	e9 0c 00 00 00       	jmpq   805b564 <TOK_GET+0x79>
 805b558:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 805b55e:	0f 85 05 00 00 00    	jne    805b569 <TOK_GET+0x7e>
 805b564:	e9 0c 00 00 00       	jmpq   805b575 <TOK_GET+0x8a>
 805b569:	81 f8 b4 00 00 00    	cmp    $0xb4,%eax
 805b56f:	0f 85 05 00 00 00    	jne    805b57a <TOK_GET+0x8f>
 805b575:	e9 0c 00 00 00       	jmpq   805b586 <TOK_GET+0x9b>
 805b57a:	81 f8 b7 00 00 00    	cmp    $0xb7,%eax
 805b580:	0f 85 05 00 00 00    	jne    805b58b <TOK_GET+0xa0>
 805b586:	e9 0c 00 00 00       	jmpq   805b597 <TOK_GET+0xac>
 805b58b:	81 f8 b9 00 00 00    	cmp    $0xb9,%eax
 805b591:	0f 85 05 00 00 00    	jne    805b59c <TOK_GET+0xb1>
 805b597:	e9 0c 00 00 00       	jmpq   805b5a8 <TOK_GET+0xbd>
 805b59c:	81 f8 ba 00 00 00    	cmp    $0xba,%eax
 805b5a2:	0f 85 32 00 00 00    	jne    805b5da <TOK_GET+0xef>
 805b5a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805b5ac:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805b5b0:	48 89 ca             	mov    %rcx,%rdx
 805b5b3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805b5b7:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 805b5be:	00 00 00 
 805b5c1:	48 01 c1             	add    %rax,%rcx
 805b5c4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805b5c8:	8b 02                	mov    (%rdx),%eax
 805b5ca:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805b5ce:	89 01                	mov    %eax,(%rcx)
 805b5d0:	e9 42 01 00 00       	jmpq   805b717 <TOK_GET+0x22c>
 805b5d5:	e9 0c 00 00 00       	jmpq   805b5e6 <TOK_GET+0xfb>
 805b5da:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 805b5e0:	0f 85 05 00 00 00    	jne    805b5eb <TOK_GET+0x100>
 805b5e6:	e9 0c 00 00 00       	jmpq   805b5f7 <TOK_GET+0x10c>
 805b5eb:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 805b5f1:	0f 85 05 00 00 00    	jne    805b5fc <TOK_GET+0x111>
 805b5f7:	e9 0c 00 00 00       	jmpq   805b608 <TOK_GET+0x11d>
 805b5fc:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 805b602:	0f 85 64 00 00 00    	jne    805b66c <TOK_GET+0x181>
 805b608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b60c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805b610:	48 89 08             	mov    %rcx,(%rax)
 805b613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b617:	48 8b 08             	mov    (%rax),%rcx
 805b61a:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 805b621:	00 00 00 
 805b624:	48 01 c1             	add    %rax,%rcx
 805b627:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b62b:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 805b632:	00 00 00 
 805b635:	48 01 d0             	add    %rdx,%rax
 805b638:	48 89 01             	mov    %rax,(%rcx)
 805b63b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805b63f:	48 8b 08             	mov    (%rax),%rcx
 805b642:	8b 01                	mov    (%rcx),%eax
 805b644:	83 c0 20             	add    $0x20,%eax
 805b647:	83 c0 03             	add    $0x3,%eax
 805b64a:	c1 e8 02             	shr    $0x2,%eax
 805b64d:	48 89 c1             	mov    %rax,%rcx
 805b650:	48 c1 e1 02          	shl    $0x2,%rcx
 805b654:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b658:	48 89 ca             	mov    %rcx,%rdx
 805b65b:	48 01 d0             	add    %rdx,%rax
 805b65e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b662:	e9 b0 00 00 00       	jmpq   805b717 <TOK_GET+0x22c>
 805b667:	e9 0c 00 00 00       	jmpq   805b678 <TOK_GET+0x18d>
 805b66c:	81 f8 c0 00 00 00    	cmp    $0xc0,%eax
 805b672:	0f 85 05 00 00 00    	jne    805b67d <TOK_GET+0x192>
 805b678:	e9 0c 00 00 00       	jmpq   805b689 <TOK_GET+0x19e>
 805b67d:	81 f8 c9 00 00 00    	cmp    $0xc9,%eax
 805b683:	0f 85 05 00 00 00    	jne    805b68e <TOK_GET+0x1a3>
 805b689:	e9 0c 00 00 00       	jmpq   805b69a <TOK_GET+0x1af>
 805b68e:	81 f8 ca 00 00 00    	cmp    $0xca,%eax
 805b694:	0f 85 12 00 00 00    	jne    805b6ac <TOK_GET+0x1c1>
 805b69a:	b8 02 00 00 00       	mov    $0x2,%eax
 805b69f:	89 45 dc             	mov    %eax,-0x24(%rbp)
 805b6a2:	e9 19 00 00 00       	jmpq   805b6c0 <TOK_GET+0x1d5>
 805b6a7:	e9 0c 00 00 00       	jmpq   805b6b8 <TOK_GET+0x1cd>
 805b6ac:	81 f8 c1 00 00 00    	cmp    $0xc1,%eax
 805b6b2:	0f 85 5a 00 00 00    	jne    805b712 <TOK_GET+0x227>
 805b6b8:	b8 04 00 00 00       	mov    $0x4,%eax
 805b6bd:	89 45 dc             	mov    %eax,-0x24(%rbp)
 805b6c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805b6c4:	48 89 c1             	mov    %rax,%rcx
 805b6c7:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 805b6ce:	00 00 00 
 805b6d1:	48 01 d0             	add    %rdx,%rax
 805b6d4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805b6d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805b6dc:	48 89 c2             	mov    %rax,%rdx
 805b6df:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 805b6e3:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805b6ea:	00 00 00 
 805b6ed:	48 01 c8             	add    %rcx,%rax
 805b6f0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805b6f4:	8b 02                	mov    (%rdx),%eax
 805b6f6:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 805b6fa:	89 01                	mov    %eax,(%rcx)
 805b6fc:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805b6ff:	83 c0 ff             	add    $0xffffffff,%eax
 805b702:	89 45 dc             	mov    %eax,-0x24(%rbp)
 805b705:	85 c0                	test   %eax,%eax
 805b707:	0f 85 b3 ff ff ff    	jne    805b6c0 <TOK_GET+0x1d5>
 805b70d:	e9 05 00 00 00       	jmpq   805b717 <TOK_GET+0x22c>
 805b712:	e9 00 00 00 00       	jmpq   805b717 <TOK_GET+0x22c>
 805b717:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805b71b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805b71f:	48 89 08             	mov    %rcx,(%rax)
 805b722:	c9                   	leaveq 
 805b723:	c3                   	retq   

000000000805b724 <tok_ext_size>:
 805b724:	55                   	push   %rbp
 805b725:	48 89 e5             	mov    %rsp,%rbp
 805b728:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805b72f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b733:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b736:	e9 05 00 00 00       	jmpq   805b740 <tok_ext_size+0x1c>
 805b73b:	e9 0c 00 00 00       	jmpq   805b74c <tok_ext_size+0x28>
 805b740:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 805b746:	0f 85 05 00 00 00    	jne    805b751 <tok_ext_size+0x2d>
 805b74c:	e9 0c 00 00 00       	jmpq   805b75d <tok_ext_size+0x39>
 805b751:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 805b757:	0f 85 05 00 00 00    	jne    805b762 <tok_ext_size+0x3e>
 805b75d:	e9 0c 00 00 00       	jmpq   805b76e <tok_ext_size+0x4a>
 805b762:	81 f8 b4 00 00 00    	cmp    $0xb4,%eax
 805b768:	0f 85 05 00 00 00    	jne    805b773 <tok_ext_size+0x4f>
 805b76e:	e9 0c 00 00 00       	jmpq   805b77f <tok_ext_size+0x5b>
 805b773:	81 f8 b7 00 00 00    	cmp    $0xb7,%eax
 805b779:	0f 85 05 00 00 00    	jne    805b784 <tok_ext_size+0x60>
 805b77f:	e9 0c 00 00 00       	jmpq   805b790 <tok_ext_size+0x6c>
 805b784:	81 f8 b9 00 00 00    	cmp    $0xb9,%eax
 805b78a:	0f 85 05 00 00 00    	jne    805b795 <tok_ext_size+0x71>
 805b790:	e9 0c 00 00 00       	jmpq   805b7a1 <tok_ext_size+0x7d>
 805b795:	81 f8 ba 00 00 00    	cmp    $0xba,%eax
 805b79b:	0f 85 0f 00 00 00    	jne    805b7b0 <tok_ext_size+0x8c>
 805b7a1:	b8 01 00 00 00       	mov    $0x1,%eax
 805b7a6:	e9 b3 00 00 00       	jmpq   805b85e <tok_ext_size+0x13a>
 805b7ab:	e9 0c 00 00 00       	jmpq   805b7bc <tok_ext_size+0x98>
 805b7b0:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 805b7b6:	0f 85 05 00 00 00    	jne    805b7c1 <tok_ext_size+0x9d>
 805b7bc:	e9 0c 00 00 00       	jmpq   805b7cd <tok_ext_size+0xa9>
 805b7c1:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 805b7c7:	0f 85 05 00 00 00    	jne    805b7d2 <tok_ext_size+0xae>
 805b7cd:	e9 0c 00 00 00       	jmpq   805b7de <tok_ext_size+0xba>
 805b7d2:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 805b7d8:	0f 85 23 00 00 00    	jne    805b801 <tok_ext_size+0xdd>
 805b7de:	48 8d 05 42 00 03 00 	lea    0x30042(%rip),%rax        # 808b827 <L.178>
 805b7e5:	48 89 c7             	mov    %rax,%rdi
 805b7e8:	b8 00 00 00 00       	mov    $0x0,%eax
 805b7ed:	e8 d5 1e ff ff       	callq  804d6c7 <tcc_error>
 805b7f2:	b8 01 00 00 00       	mov    $0x1,%eax
 805b7f7:	e9 62 00 00 00       	jmpq   805b85e <tok_ext_size+0x13a>
 805b7fc:	e9 0c 00 00 00       	jmpq   805b80d <tok_ext_size+0xe9>
 805b801:	81 f8 c0 00 00 00    	cmp    $0xc0,%eax
 805b807:	0f 85 05 00 00 00    	jne    805b812 <tok_ext_size+0xee>
 805b80d:	e9 0c 00 00 00       	jmpq   805b81e <tok_ext_size+0xfa>
 805b812:	81 f8 c9 00 00 00    	cmp    $0xc9,%eax
 805b818:	0f 85 05 00 00 00    	jne    805b823 <tok_ext_size+0xff>
 805b81e:	e9 0c 00 00 00       	jmpq   805b82f <tok_ext_size+0x10b>
 805b823:	81 f8 ca 00 00 00    	cmp    $0xca,%eax
 805b829:	0f 85 0f 00 00 00    	jne    805b83e <tok_ext_size+0x11a>
 805b82f:	b8 02 00 00 00       	mov    $0x2,%eax
 805b834:	e9 25 00 00 00       	jmpq   805b85e <tok_ext_size+0x13a>
 805b839:	e9 0c 00 00 00       	jmpq   805b84a <tok_ext_size+0x126>
 805b83e:	81 f8 c1 00 00 00    	cmp    $0xc1,%eax
 805b844:	0f 85 0a 00 00 00    	jne    805b854 <tok_ext_size+0x130>
 805b84a:	b8 04 00 00 00       	mov    $0x4,%eax
 805b84f:	e9 0a 00 00 00       	jmpq   805b85e <tok_ext_size+0x13a>
 805b854:	b8 00 00 00 00       	mov    $0x0,%eax
 805b859:	e9 00 00 00 00       	jmpq   805b85e <tok_ext_size+0x13a>
 805b85e:	c9                   	leaveq 
 805b85f:	c3                   	retq   

000000000805b860 <check_space>:
 805b860:	55                   	push   %rbp
 805b861:	48 89 e5             	mov    %rsp,%rbp
 805b864:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805b86b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b86f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805b873:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b876:	48 89 c7             	mov    %rax,%rdi
 805b879:	b8 00 00 00 00       	mov    $0x0,%eax
 805b87e:	e8 9e 01 00 00       	callq  805ba21 <is_space>
 805b883:	85 c0                	test   %eax,%eax
 805b885:	0f 84 28 00 00 00    	je     805b8b3 <check_space+0x53>
 805b88b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805b88f:	8b 08                	mov    (%rax),%ecx
 805b891:	85 c9                	test   %ecx,%ecx
 805b893:	0f 84 0a 00 00 00    	je     805b8a3 <check_space+0x43>
 805b899:	b8 01 00 00 00       	mov    $0x1,%eax
 805b89e:	e9 25 00 00 00       	jmpq   805b8c8 <check_space+0x68>
 805b8a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805b8a7:	b9 01 00 00 00       	mov    $0x1,%ecx
 805b8ac:	89 08                	mov    %ecx,(%rax)
 805b8ae:	e9 0b 00 00 00       	jmpq   805b8be <check_space+0x5e>
 805b8b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805b8b7:	b9 00 00 00 00       	mov    $0x0,%ecx
 805b8bc:	89 08                	mov    %ecx,(%rax)
 805b8be:	b8 00 00 00 00       	mov    $0x0,%eax
 805b8c3:	e9 00 00 00 00       	jmpq   805b8c8 <check_space+0x68>
 805b8c8:	c9                   	leaveq 
 805b8c9:	c3                   	retq   

000000000805b8ca <skip_spaces>:
 805b8ca:	55                   	push   %rbp
 805b8cb:	48 89 e5             	mov    %rsp,%rbp
 805b8ce:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 805b8d5:	48 8b 05 2c 26 03 00 	mov    0x3262c(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 805b8dc:	8b 00                	mov    (%rax),%eax
 805b8de:	48 89 c7             	mov    %rax,%rdi
 805b8e1:	b8 00 00 00 00       	mov    $0x0,%eax
 805b8e6:	e8 36 01 00 00       	callq  805ba21 <is_space>
 805b8eb:	85 c0                	test   %eax,%eax
 805b8ed:	0f 84 0c 00 00 00    	je     805b8ff <skip_spaces+0x35>
 805b8f3:	b8 00 00 00 00       	mov    $0x0,%eax
 805b8f8:	e8 59 6a ff ff       	callq  8052356 <minp>
 805b8fd:	eb d6                	jmp    805b8d5 <skip_spaces+0xb>
 805b8ff:	c9                   	leaveq 
 805b900:	c3                   	retq   

000000000805b901 <toup>:
 805b901:	55                   	push   %rbp
 805b902:	48 89 e5             	mov    %rsp,%rbp
 805b905:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805b90c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b910:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b913:	83 f8 61             	cmp    $0x61,%eax
 805b916:	0f 8c 1a 00 00 00    	jl     805b936 <toup+0x35>
 805b91c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b91f:	83 f8 7a             	cmp    $0x7a,%eax
 805b922:	0f 8f 0e 00 00 00    	jg     805b936 <toup+0x35>
 805b928:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b92b:	83 e8 61             	sub    $0x61,%eax
 805b92e:	83 c0 41             	add    $0x41,%eax
 805b931:	e9 08 00 00 00       	jmpq   805b93e <toup+0x3d>
 805b936:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b939:	e9 00 00 00 00       	jmpq   805b93e <toup+0x3d>
 805b93e:	e9 00 00 00 00       	jmpq   805b943 <toup+0x42>
 805b943:	c9                   	leaveq 
 805b944:	c3                   	retq   

000000000805b945 <isoct>:
 805b945:	55                   	push   %rbp
 805b946:	48 89 e5             	mov    %rsp,%rbp
 805b949:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805b950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b954:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b957:	83 f8 30             	cmp    $0x30,%eax
 805b95a:	0f 8c 13 00 00 00    	jl     805b973 <isoct+0x2e>
 805b960:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b963:	83 f8 37             	cmp    $0x37,%eax
 805b966:	0f 8f 07 00 00 00    	jg     805b973 <isoct+0x2e>
 805b96c:	b8 01 00 00 00       	mov    $0x1,%eax
 805b971:	eb 05                	jmp    805b978 <isoct+0x33>
 805b973:	b8 00 00 00 00       	mov    $0x0,%eax
 805b978:	e9 00 00 00 00       	jmpq   805b97d <isoct+0x38>
 805b97d:	c9                   	leaveq 
 805b97e:	c3                   	retq   

000000000805b97f <isnum>:
 805b97f:	55                   	push   %rbp
 805b980:	48 89 e5             	mov    %rsp,%rbp
 805b983:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805b98a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b98e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b991:	83 f8 30             	cmp    $0x30,%eax
 805b994:	0f 8c 13 00 00 00    	jl     805b9ad <isnum+0x2e>
 805b99a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b99d:	83 f8 39             	cmp    $0x39,%eax
 805b9a0:	0f 8f 07 00 00 00    	jg     805b9ad <isnum+0x2e>
 805b9a6:	b8 01 00 00 00       	mov    $0x1,%eax
 805b9ab:	eb 05                	jmp    805b9b2 <isnum+0x33>
 805b9ad:	b8 00 00 00 00       	mov    $0x0,%eax
 805b9b2:	e9 00 00 00 00       	jmpq   805b9b7 <isnum+0x38>
 805b9b7:	c9                   	leaveq 
 805b9b8:	c3                   	retq   

000000000805b9b9 <isid>:
 805b9b9:	55                   	push   %rbp
 805b9ba:	48 89 e5             	mov    %rsp,%rbp
 805b9bd:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805b9c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805b9c8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b9cb:	83 f8 61             	cmp    $0x61,%eax
 805b9ce:	0f 8c 11 00 00 00    	jl     805b9e5 <isid+0x2c>
 805b9d4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b9d7:	83 f8 7a             	cmp    $0x7a,%eax
 805b9da:	0f 8f 05 00 00 00    	jg     805b9e5 <isid+0x2c>
 805b9e0:	e9 30 00 00 00       	jmpq   805ba15 <isid+0x5c>
 805b9e5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b9e8:	83 f8 41             	cmp    $0x41,%eax
 805b9eb:	0f 8c 11 00 00 00    	jl     805ba02 <isid+0x49>
 805b9f1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805b9f4:	83 f8 5a             	cmp    $0x5a,%eax
 805b9f7:	0f 8f 05 00 00 00    	jg     805ba02 <isid+0x49>
 805b9fd:	e9 13 00 00 00       	jmpq   805ba15 <isid+0x5c>
 805ba02:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba05:	83 f8 5f             	cmp    $0x5f,%eax
 805ba08:	0f 84 07 00 00 00    	je     805ba15 <isid+0x5c>
 805ba0e:	b8 00 00 00 00       	mov    $0x0,%eax
 805ba13:	eb 05                	jmp    805ba1a <isid+0x61>
 805ba15:	b8 01 00 00 00       	mov    $0x1,%eax
 805ba1a:	e9 00 00 00 00       	jmpq   805ba1f <isid+0x66>
 805ba1f:	c9                   	leaveq 
 805ba20:	c3                   	retq   

000000000805ba21 <is_space>:
 805ba21:	55                   	push   %rbp
 805ba22:	48 89 e5             	mov    %rsp,%rbp
 805ba25:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805ba2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805ba30:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba33:	83 f8 20             	cmp    $0x20,%eax
 805ba36:	0f 84 37 00 00 00    	je     805ba73 <is_space+0x52>
 805ba3c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba3f:	83 f8 09             	cmp    $0x9,%eax
 805ba42:	0f 84 2b 00 00 00    	je     805ba73 <is_space+0x52>
 805ba48:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba4b:	83 f8 0b             	cmp    $0xb,%eax
 805ba4e:	0f 84 1f 00 00 00    	je     805ba73 <is_space+0x52>
 805ba54:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba57:	83 f8 0c             	cmp    $0xc,%eax
 805ba5a:	0f 84 13 00 00 00    	je     805ba73 <is_space+0x52>
 805ba60:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba63:	83 f8 0d             	cmp    $0xd,%eax
 805ba66:	0f 84 07 00 00 00    	je     805ba73 <is_space+0x52>
 805ba6c:	b8 00 00 00 00       	mov    $0x0,%eax
 805ba71:	eb 05                	jmp    805ba78 <is_space+0x57>
 805ba73:	b8 01 00 00 00       	mov    $0x1,%eax
 805ba78:	e9 00 00 00 00       	jmpq   805ba7d <is_space+0x5c>
 805ba7d:	c9                   	leaveq 
 805ba7e:	c3                   	retq   
	...

000000000805ba80 <__bswap_16>:
 805ba80:	55                   	push   %rbp
 805ba81:	48 89 e5             	mov    %rsp,%rbp
 805ba84:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805ba8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805ba8f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ba92:	c1 f8 08             	sar    $0x8,%eax
 805ba95:	81 e0 ff 00 00 00    	and    $0xff,%eax
 805ba9b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805ba9e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 805baa4:	c1 e1 08             	shl    $0x8,%ecx
 805baa7:	48 09 c8             	or     %rcx,%rax
 805baaa:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 805bab0:	e9 00 00 00 00       	jmpq   805bab5 <__bswap_16+0x35>
 805bab5:	c9                   	leaveq 
 805bab6:	c3                   	retq   

000000000805bab7 <__bswap_32>:
 805bab7:	55                   	push   %rbp
 805bab8:	48 89 e5             	mov    %rsp,%rbp
 805babb:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805bac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805bac6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805bac9:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 805bacf:	c1 e8 18             	shr    $0x18,%eax
 805bad2:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805bad5:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 805badb:	c1 e9 08             	shr    $0x8,%ecx
 805bade:	48 09 c8             	or     %rcx,%rax
 805bae1:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805bae4:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 805baea:	c1 e1 08             	shl    $0x8,%ecx
 805baed:	48 09 c8             	or     %rcx,%rax
 805baf0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805baf3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 805baf9:	c1 e1 18             	shl    $0x18,%ecx
 805bafc:	48 09 c8             	or     %rcx,%rax
 805baff:	e9 00 00 00 00       	jmpq   805bb04 <__bswap_32+0x4d>
 805bb04:	c9                   	leaveq 
 805bb05:	c3                   	retq   

000000000805bb06 <__bswap_64>:
 805bb06:	55                   	push   %rbp
 805bb07:	48 89 e5             	mov    %rsp,%rbp
 805bb0a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805bb11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805bb15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bb19:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 805bb20:	00 00 ff 
 805bb23:	48 21 c8             	and    %rcx,%rax
 805bb26:	48 89 c1             	mov    %rax,%rcx
 805bb29:	48 c1 e9 38          	shr    $0x38,%rcx
 805bb2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bb31:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 805bb38:	00 ff 00 
 805bb3b:	48 21 d0             	and    %rdx,%rax
 805bb3e:	48 89 c2             	mov    %rax,%rdx
 805bb41:	48 c1 ea 28          	shr    $0x28,%rdx
 805bb45:	48 89 c8             	mov    %rcx,%rax
 805bb48:	48 89 d1             	mov    %rdx,%rcx
 805bb4b:	48 09 c8             	or     %rcx,%rax
 805bb4e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805bb52:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 805bb59:	ff 00 00 
 805bb5c:	48 21 d1             	and    %rdx,%rcx
 805bb5f:	48 89 ca             	mov    %rcx,%rdx
 805bb62:	48 c1 ea 18          	shr    $0x18,%rdx
 805bb66:	48 89 c1             	mov    %rax,%rcx
 805bb69:	48 89 d0             	mov    %rdx,%rax
 805bb6c:	48 09 c1             	or     %rax,%rcx
 805bb6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bb73:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 805bb7a:	00 00 00 
 805bb7d:	48 21 d0             	and    %rdx,%rax
 805bb80:	48 89 c2             	mov    %rax,%rdx
 805bb83:	48 c1 ea 08          	shr    $0x8,%rdx
 805bb87:	48 89 c8             	mov    %rcx,%rax
 805bb8a:	48 89 d1             	mov    %rdx,%rcx
 805bb8d:	48 09 c8             	or     %rcx,%rax
 805bb90:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805bb94:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 805bb9b:	00 00 00 
 805bb9e:	48 21 d1             	and    %rdx,%rcx
 805bba1:	48 89 ca             	mov    %rcx,%rdx
 805bba4:	48 c1 e2 08          	shl    $0x8,%rdx
 805bba8:	48 89 c1             	mov    %rax,%rcx
 805bbab:	48 89 d0             	mov    %rdx,%rax
 805bbae:	48 09 c1             	or     %rax,%rcx
 805bbb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bbb5:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 805bbbc:	00 00 00 
 805bbbf:	48 21 d0             	and    %rdx,%rax
 805bbc2:	48 89 c2             	mov    %rax,%rdx
 805bbc5:	48 c1 e2 18          	shl    $0x18,%rdx
 805bbc9:	48 89 c8             	mov    %rcx,%rax
 805bbcc:	48 89 d1             	mov    %rdx,%rcx
 805bbcf:	48 09 c8             	or     %rcx,%rax
 805bbd2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805bbd6:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 805bbdd:	00 00 00 
 805bbe0:	48 21 d1             	and    %rdx,%rcx
 805bbe3:	48 89 ca             	mov    %rcx,%rdx
 805bbe6:	48 c1 e2 28          	shl    $0x28,%rdx
 805bbea:	48 89 c1             	mov    %rax,%rcx
 805bbed:	48 89 d0             	mov    %rdx,%rax
 805bbf0:	48 09 c1             	or     %rax,%rcx
 805bbf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bbf7:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 805bbfe:	00 00 00 
 805bc01:	48 21 d0             	and    %rdx,%rax
 805bc04:	48 89 c2             	mov    %rax,%rdx
 805bc07:	48 c1 e2 38          	shl    $0x38,%rdx
 805bc0b:	48 89 c8             	mov    %rcx,%rax
 805bc0e:	48 89 d1             	mov    %rdx,%rcx
 805bc11:	48 09 c8             	or     %rcx,%rax
 805bc14:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805bc18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805bc1c:	e9 00 00 00 00       	jmpq   805bc21 <__bswap_64+0x11b>
 805bc21:	c9                   	leaveq 
 805bc22:	c3                   	retq   

000000000805bc23 <is_float>:
 805bc23:	55                   	push   %rbp
 805bc24:	48 89 e5             	mov    %rsp,%rbp
 805bc27:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805bc2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805bc32:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805bc35:	83 e0 0f             	and    $0xf,%eax
 805bc38:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805bc3b:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805bc3e:	83 f8 0a             	cmp    $0xa,%eax
 805bc41:	0f 84 1f 00 00 00    	je     805bc66 <is_float+0x43>
 805bc47:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805bc4a:	83 f8 09             	cmp    $0x9,%eax
 805bc4d:	0f 84 13 00 00 00    	je     805bc66 <is_float+0x43>
 805bc53:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805bc56:	83 f8 08             	cmp    $0x8,%eax
 805bc59:	0f 84 07 00 00 00    	je     805bc66 <is_float+0x43>
 805bc5f:	b8 00 00 00 00       	mov    $0x0,%eax
 805bc64:	eb 05                	jmp    805bc6b <is_float+0x48>
 805bc66:	b8 01 00 00 00       	mov    $0x1,%eax
 805bc6b:	e9 00 00 00 00       	jmpq   805bc70 <is_float+0x4d>
 805bc70:	c9                   	leaveq 
 805bc71:	c3                   	retq   

000000000805bc72 <ieee_finite>:
 805bc72:	55                   	push   %rbp
 805bc73:	48 89 e5             	mov    %rsp,%rbp
 805bc76:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805bc7d:	66 0f d6 45 f8       	movq   %xmm0,-0x8(%rbp)
 805bc82:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
 805bc86:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805bc8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805bc8e:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805bc95:	00 00 00 
 805bc98:	48 01 c8             	add    %rcx,%rax
 805bc9b:	8b 08                	mov    (%rax),%ecx
 805bc9d:	81 c9 ff ff 0f 80    	or     $0x800fffff,%ecx
 805bca3:	83 c1 01             	add    $0x1,%ecx
 805bca6:	c1 e9 1f             	shr    $0x1f,%ecx
 805bca9:	48 89 c8             	mov    %rcx,%rax
 805bcac:	e9 00 00 00 00       	jmpq   805bcb1 <ieee_finite+0x3f>
 805bcb1:	c9                   	leaveq 
 805bcb2:	c3                   	retq   

000000000805bcb3 <test_lvalue>:
 805bcb3:	55                   	push   %rbp
 805bcb4:	48 89 e5             	mov    %rsp,%rbp
 805bcb7:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 805bcbe:	48 8b 05 5b 22 03 00 	mov    0x3225b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805bcc5:	48 8b 00             	mov    (%rax),%rax
 805bcc8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805bccf:	00 00 00 
 805bcd2:	48 01 c8             	add    %rcx,%rax
 805bcd5:	0f b7 08             	movzwl (%rax),%ecx
 805bcd8:	81 e1 00 01 00 00    	and    $0x100,%ecx
 805bcde:	85 c9                	test   %ecx,%ecx
 805bce0:	0f 84 05 00 00 00    	je     805bceb <test_lvalue+0x38>
 805bce6:	e9 14 00 00 00       	jmpq   805bcff <test_lvalue+0x4c>
 805bceb:	48 8d 05 72 fb 02 00 	lea    0x2fb72(%rip),%rax        # 808b864 <L.107>
 805bcf2:	48 89 c7             	mov    %rax,%rdi
 805bcf5:	b8 00 00 00 00       	mov    $0x0,%eax
 805bcfa:	e8 53 54 ff ff       	callq  8051152 <expect>
 805bcff:	c9                   	leaveq 
 805bd00:	c3                   	retq   

000000000805bd01 <__sym_malloc>:
 805bd01:	55                   	push   %rbp
 805bd02:	48 89 e5             	mov    %rsp,%rbp
 805bd05:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805bd0c:	48 b8 c8 1f 00 00 00 	movabs $0x1fc8,%rax
 805bd13:	00 00 00 
 805bd16:	48 89 c7             	mov    %rax,%rdi
 805bd19:	b8 00 00 00 00       	mov    $0x0,%eax
 805bd1e:	e8 35 02 ff ff       	callq  804bf58 <tcc_malloc>
 805bd23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 805bd27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bd2b:	49 89 c2             	mov    %rax,%r10
 805bd2e:	48 8b 05 1b 22 03 00 	mov    0x3221b(%rip),%rax        # 808df50 <_GLOBAL_OFFSET_TABLE_+0x2d0>
 805bd35:	48 89 c6             	mov    %rax,%rsi
 805bd38:	48 8b 05 19 22 03 00 	mov    0x32219(%rip),%rax        # 808df58 <_GLOBAL_OFFSET_TABLE_+0x2d8>
 805bd3f:	48 89 c7             	mov    %rax,%rdi
 805bd42:	4c 89 d2             	mov    %r10,%rdx
 805bd45:	b8 00 00 00 00       	mov    $0x0,%eax
 805bd4a:	e8 b4 03 ff ff       	callq  804c103 <dynarray_add>
 805bd4f:	48 8b 05 12 22 03 00 	mov    0x32212(%rip),%rax        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 805bd56:	48 8b 00             	mov    (%rax),%rax
 805bd59:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805bd5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bd61:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805bd65:	b8 00 00 00 00       	mov    $0x0,%eax
 805bd6a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805bd6d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805bd70:	83 f8 71             	cmp    $0x71,%eax
 805bd73:	0f 83 4d 00 00 00    	jae    805bdc6 <__sym_malloc+0xc5>
 805bd79:	e9 0e 00 00 00       	jmpq   805bd8c <__sym_malloc+0x8b>
 805bd7e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805bd81:	48 89 c1             	mov    %rax,%rcx
 805bd84:	83 c0 01             	add    $0x1,%eax
 805bd87:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805bd8a:	eb e1                	jmp    805bd6d <__sym_malloc+0x6c>
 805bd8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805bd90:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805bd97:	00 00 00 
 805bd9a:	48 01 c8             	add    %rcx,%rax
 805bd9d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805bda1:	48 89 08             	mov    %rcx,(%rax)
 805bda4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805bda8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805bdac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805bdb0:	48 89 c1             	mov    %rax,%rcx
 805bdb3:	48 ba 48 00 00 00 00 	movabs $0x48,%rdx
 805bdba:	00 00 00 
 805bdbd:	48 01 d0             	add    %rdx,%rax
 805bdc0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805bdc4:	eb b8                	jmp    805bd7e <__sym_malloc+0x7d>
 805bdc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805bdca:	4c 8b 1d 97 21 03 00 	mov    0x32197(%rip),%r11        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 805bdd1:	49 89 03             	mov    %rax,(%r11)
 805bdd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805bdd8:	e9 00 00 00 00       	jmpq   805bddd <__sym_malloc+0xdc>
 805bddd:	c9                   	leaveq 
 805bdde:	c3                   	retq   

000000000805bddf <sym_free>:
 805bddf:	55                   	push   %rbp
 805bde0:	48 89 e5             	mov    %rsp,%rbp
 805bde3:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805bdea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805bdee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bdf2:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805bdf9:	00 00 00 
 805bdfc:	48 01 c8             	add    %rcx,%rax
 805bdff:	48 8b 0d 62 21 03 00 	mov    0x32162(%rip),%rcx        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 805be06:	48 8b 09             	mov    (%rcx),%rcx
 805be09:	48 89 08             	mov    %rcx,(%rax)
 805be0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805be10:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805be17:	00 00 00 
 805be1a:	48 01 c8             	add    %rcx,%rax
 805be1d:	48 8b 08             	mov    (%rax),%rcx
 805be20:	48 89 cf             	mov    %rcx,%rdi
 805be23:	b8 00 00 00 00       	mov    $0x0,%eax
 805be28:	e8 09 01 ff ff       	callq  804bf36 <tcc_free>
 805be2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805be31:	4c 8b 1d 30 21 03 00 	mov    0x32130(%rip),%r11        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 805be38:	49 89 03             	mov    %rax,(%r11)
 805be3b:	c9                   	leaveq 
 805be3c:	c3                   	retq   

000000000805be3d <sym_push2>:
 805be3d:	55                   	push   %rbp
 805be3e:	48 89 e5             	mov    %rsp,%rbp
 805be41:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805be48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805be4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805be50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805be54:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805be58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805be5c:	48 8b 0d d5 20 03 00 	mov    0x320d5(%rip),%rcx        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 805be63:	48 89 c2             	mov    %rax,%rdx
 805be66:	48 89 c8             	mov    %rcx,%rax
 805be69:	48 39 c2             	cmp    %rax,%rdx
 805be6c:	0f 85 c3 00 00 00    	jne    805bf35 <sym_push2+0xf8>
 805be72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805be76:	48 8b 08             	mov    (%rax),%rcx
 805be79:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 805be7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805be81:	85 c0                	test   %eax,%eax
 805be83:	0f 84 ac 00 00 00    	je     805bf35 <sym_push2+0xf8>
 805be89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805be8d:	48 8b 0d 5c 21 03 00 	mov    0x3215c(%rip),%rcx        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 805be94:	48 8b 09             	mov    (%rcx),%rcx
 805be97:	48 89 c2             	mov    %rax,%rdx
 805be9a:	48 89 c8             	mov    %rcx,%rax
 805be9d:	48 39 c2             	cmp    %rax,%rdx
 805bea0:	0f 84 8f 00 00 00    	je     805bf35 <sym_push2+0xf8>
 805bea6:	e9 1a 00 00 00       	jmpq   805bec5 <sym_push2+0x88>
 805beab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805beaf:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 805beb6:	00 00 00 
 805beb9:	48 01 c8             	add    %rcx,%rax
 805bebc:	48 8b 08             	mov    (%rax),%rcx
 805bebf:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 805bec3:	eb b8                	jmp    805be7d <sym_push2+0x40>
 805bec5:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805bec8:	81 e0 00 00 00 20    	and    $0x20000000,%eax
 805bece:	85 c0                	test   %eax,%eax
 805bed0:	0f 84 05 00 00 00    	je     805bedb <sym_push2+0x9e>
 805bed6:	e9 55 00 00 00       	jmpq   805bf30 <sym_push2+0xf3>
 805bedb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805bede:	81 e0 ff ff ff bf    	and    $0xbfffffff,%eax
 805bee4:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 805beea:	0f 8d 40 00 00 00    	jge    805bf30 <sym_push2+0xf3>
 805bef0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bef4:	8b 08                	mov    (%rax),%ecx
 805bef6:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805bef9:	39 c1                	cmp    %eax,%ecx
 805befb:	0f 85 2f 00 00 00    	jne    805bf30 <sym_push2+0xf3>
 805bf01:	b8 00 00 00 00       	mov    $0x0,%eax
 805bf06:	48 89 c6             	mov    %rax,%rsi
 805bf09:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805bf0c:	48 89 c7             	mov    %rax,%rdi
 805bf0f:	b8 00 00 00 00       	mov    $0x0,%eax
 805bf14:	e8 9b 59 ff ff       	callq  80518b4 <get_tok_str>
 805bf19:	48 89 c6             	mov    %rax,%rsi
 805bf1c:	48 8d 05 48 f9 02 00 	lea    0x2f948(%rip),%rax        # 808b86b <L.108>
 805bf23:	48 89 c7             	mov    %rax,%rdi
 805bf26:	b8 00 00 00 00       	mov    $0x0,%eax
 805bf2b:	e8 97 17 ff ff       	callq  804d6c7 <tcc_error>
 805bf30:	e9 76 ff ff ff       	jmpq   805beab <sym_push2+0x6e>
 805bf35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bf39:	48 8b 08             	mov    (%rax),%rcx
 805bf3c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 805bf40:	b8 00 00 00 00       	mov    $0x0,%eax
 805bf45:	e8 d4 16 01 00       	callq  806d61e <sym_malloc>
 805bf4a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805bf4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bf52:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805bf59:	00 00 00 
 805bf5c:	48 01 c8             	add    %rcx,%rax
 805bf5f:	b9 00 00 00 00       	mov    $0x0,%ecx
 805bf64:	48 89 08             	mov    %rcx,(%rax)
 805bf67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bf6b:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805bf6e:	89 08                	mov    %ecx,(%rax)
 805bf70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bf74:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805bf7b:	00 00 00 
 805bf7e:	48 01 c8             	add    %rcx,%rax
 805bf81:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805bf84:	89 08                	mov    %ecx,(%rax)
 805bf86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bf8a:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805bf91:	00 00 00 
 805bf94:	48 01 c8             	add    %rcx,%rax
 805bf97:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805bf9e:	00 00 00 
 805bfa1:	48 01 c8             	add    %rcx,%rax
 805bfa4:	b9 00 00 00 00       	mov    $0x0,%ecx
 805bfa9:	48 89 08             	mov    %rcx,(%rax)
 805bfac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bfb0:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805bfb7:	00 00 00 
 805bfba:	48 01 c8             	add    %rcx,%rax
 805bfbd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805bfc1:	48 89 08             	mov    %rcx,(%rax)
 805bfc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bfc8:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805bfcf:	00 00 00 
 805bfd2:	48 01 c8             	add    %rcx,%rax
 805bfd5:	b9 00 00 00 00       	mov    $0x0,%ecx
 805bfda:	48 89 08             	mov    %rcx,(%rax)
 805bfdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805bfe1:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 805bfe8:	00 00 00 
 805bfeb:	48 01 c8             	add    %rcx,%rax
 805bfee:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805bff2:	48 8b 11             	mov    (%rcx),%rdx
 805bff5:	48 89 10             	mov    %rdx,(%rax)
 805bff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805bffc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 805c000:	48 89 08             	mov    %rcx,(%rax)
 805c003:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c007:	e9 00 00 00 00       	jmpq   805c00c <sym_push2+0x1cf>
 805c00c:	c9                   	leaveq 
 805c00d:	c3                   	retq   

000000000805c00e <sym_find2>:
 805c00e:	55                   	push   %rbp
 805c00f:	48 89 e5             	mov    %rsp,%rbp
 805c012:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805c019:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c01d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c025:	85 c0                	test   %eax,%eax
 805c027:	0f 84 34 00 00 00    	je     805c061 <sym_find2+0x53>
 805c02d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c031:	8b 08                	mov    (%rax),%ecx
 805c033:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805c036:	39 c1                	cmp    %eax,%ecx
 805c038:	0f 85 09 00 00 00    	jne    805c047 <sym_find2+0x39>
 805c03e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c042:	e9 24 00 00 00       	jmpq   805c06b <sym_find2+0x5d>
 805c047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c04b:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 805c052:	00 00 00 
 805c055:	48 01 c8             	add    %rcx,%rax
 805c058:	48 8b 08             	mov    (%rax),%rcx
 805c05b:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 805c05f:	eb c0                	jmp    805c021 <sym_find2+0x13>
 805c061:	b8 00 00 00 00       	mov    $0x0,%eax
 805c066:	e9 00 00 00 00       	jmpq   805c06b <sym_find2+0x5d>
 805c06b:	c9                   	leaveq 
 805c06c:	c3                   	retq   

000000000805c06d <struct_find>:
 805c06d:	55                   	push   %rbp
 805c06e:	48 89 e5             	mov    %rsp,%rbp
 805c071:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805c078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c07c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c07f:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c085:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805c088:	48 8b 05 b1 1e 03 00 	mov    0x31eb1(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 805c08f:	8b 00                	mov    (%rax),%eax
 805c091:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c097:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805c09a:	48 39 c1             	cmp    %rax,%rcx
 805c09d:	0f 82 0a 00 00 00    	jb     805c0ad <struct_find+0x40>
 805c0a3:	b8 00 00 00 00       	mov    $0x0,%eax
 805c0a8:	e9 35 00 00 00       	jmpq   805c0e2 <struct_find+0x75>
 805c0ad:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c0b0:	48 63 c0             	movslq %eax,%rax
 805c0b3:	48 89 c1             	mov    %rax,%rcx
 805c0b6:	48 c1 e1 03          	shl    $0x3,%rcx
 805c0ba:	48 8b 05 87 1e 03 00 	mov    0x31e87(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 805c0c1:	48 8b 00             	mov    (%rax),%rax
 805c0c4:	48 89 ca             	mov    %rcx,%rdx
 805c0c7:	48 01 d0             	add    %rdx,%rax
 805c0ca:	48 8b 08             	mov    (%rax),%rcx
 805c0cd:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 805c0d4:	00 00 00 
 805c0d7:	48 01 c1             	add    %rax,%rcx
 805c0da:	48 8b 01             	mov    (%rcx),%rax
 805c0dd:	e9 00 00 00 00       	jmpq   805c0e2 <struct_find+0x75>
 805c0e2:	c9                   	leaveq 
 805c0e3:	c3                   	retq   

000000000805c0e4 <sym_find>:
 805c0e4:	55                   	push   %rbp
 805c0e5:	48 89 e5             	mov    %rsp,%rbp
 805c0e8:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805c0ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c0f3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c0f6:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c0fc:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805c0ff:	48 8b 05 3a 1e 03 00 	mov    0x31e3a(%rip),%rax        # 808df40 <_GLOBAL_OFFSET_TABLE_+0x2c0>
 805c106:	8b 00                	mov    (%rax),%eax
 805c108:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c10e:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805c111:	48 39 c1             	cmp    %rax,%rcx
 805c114:	0f 82 0a 00 00 00    	jb     805c124 <sym_find+0x40>
 805c11a:	b8 00 00 00 00       	mov    $0x0,%eax
 805c11f:	e9 35 00 00 00       	jmpq   805c159 <sym_find+0x75>
 805c124:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c127:	48 63 c0             	movslq %eax,%rax
 805c12a:	48 89 c1             	mov    %rax,%rcx
 805c12d:	48 c1 e1 03          	shl    $0x3,%rcx
 805c131:	48 8b 05 10 1e 03 00 	mov    0x31e10(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 805c138:	48 8b 00             	mov    (%rax),%rax
 805c13b:	48 89 ca             	mov    %rcx,%rdx
 805c13e:	48 01 d0             	add    %rdx,%rax
 805c141:	48 8b 08             	mov    (%rax),%rcx
 805c144:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 805c14b:	00 00 00 
 805c14e:	48 01 c1             	add    %rax,%rcx
 805c151:	48 8b 01             	mov    (%rcx),%rax
 805c154:	e9 00 00 00 00       	jmpq   805c159 <sym_find+0x75>
 805c159:	c9                   	leaveq 
 805c15a:	c3                   	retq   

000000000805c15b <sym_push>:
 805c15b:	55                   	push   %rbp
 805c15c:	48 89 e5             	mov    %rsp,%rbp
 805c15f:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805c166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c16a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c16e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805c172:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805c176:	48 8b 05 bb 1d 03 00 	mov    0x31dbb(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 805c17d:	48 8b 00             	mov    (%rax),%rax
 805c180:	85 c0                	test   %eax,%eax
 805c182:	0f 84 10 00 00 00    	je     805c198 <sym_push+0x3d>
 805c188:	48 8b 05 a9 1d 03 00 	mov    0x31da9(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 805c18f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805c193:	e9 0b 00 00 00       	jmpq   805c1a3 <sym_push+0x48>
 805c198:	48 8b 05 91 1d 03 00 	mov    0x31d91(%rip),%rax        # 808df30 <_GLOBAL_OFFSET_TABLE_+0x2b0>
 805c19f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805c1a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805c1a7:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 805c1aa:	48 63 c9             	movslq %ecx,%rcx
 805c1ad:	48 89 ca             	mov    %rcx,%rdx
 805c1b0:	49 89 d3             	mov    %rdx,%r11
 805c1b3:	8b 08                	mov    (%rax),%ecx
 805c1b5:	49 89 ca             	mov    %rcx,%r10
 805c1b8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c1bb:	48 89 c6             	mov    %rax,%rsi
 805c1be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c1c2:	48 89 c7             	mov    %rax,%rdi
 805c1c5:	4c 89 d2             	mov    %r10,%rdx
 805c1c8:	4c 89 d9             	mov    %r11,%rcx
 805c1cb:	b8 00 00 00 00       	mov    $0x0,%eax
 805c1d0:	e8 68 fc ff ff       	callq  805be3d <sym_push2>
 805c1d5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805c1d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c1dd:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805c1e4:	00 00 00 
 805c1e7:	48 01 c8             	add    %rcx,%rax
 805c1ea:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805c1f1:	00 00 00 
 805c1f4:	48 01 c8             	add    %rcx,%rax
 805c1f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805c1fb:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 805c202:	00 00 00 
 805c205:	48 01 d1             	add    %rdx,%rcx
 805c208:	48 8b 11             	mov    (%rcx),%rdx
 805c20b:	48 89 10             	mov    %rdx,(%rax)
 805c20e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c212:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805c219:	00 00 00 
 805c21c:	48 01 c8             	add    %rcx,%rax
 805c21f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805c222:	48 63 c9             	movslq %ecx,%rcx
 805c225:	48 89 ca             	mov    %rcx,%rdx
 805c228:	48 89 10             	mov    %rdx,(%rax)
 805c22b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c22e:	81 e0 00 00 00 20    	and    $0x20000000,%eax
 805c234:	85 c0                	test   %eax,%eax
 805c236:	0f 84 05 00 00 00    	je     805c241 <sym_push+0xe6>
 805c23c:	e9 ab 00 00 00       	jmpq   805c2ec <sym_push+0x191>
 805c241:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c244:	81 e0 ff ff ff bf    	and    $0xbfffffff,%eax
 805c24a:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 805c250:	0f 8d 96 00 00 00    	jge    805c2ec <sym_push+0x191>
 805c256:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c259:	81 e0 ff ff ff bf    	and    $0xbfffffff,%eax
 805c25f:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c265:	48 63 c0             	movslq %eax,%rax
 805c268:	48 89 c1             	mov    %rax,%rcx
 805c26b:	48 c1 e1 03          	shl    $0x3,%rcx
 805c26f:	48 8b 05 d2 1c 03 00 	mov    0x31cd2(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 805c276:	48 8b 00             	mov    (%rax),%rax
 805c279:	48 89 ca             	mov    %rcx,%rdx
 805c27c:	48 01 d0             	add    %rdx,%rax
 805c27f:	48 8b 08             	mov    (%rax),%rcx
 805c282:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805c286:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c289:	81 e0 00 00 00 40    	and    $0x40000000,%eax
 805c28f:	85 c0                	test   %eax,%eax
 805c291:	0f 84 1a 00 00 00    	je     805c2b1 <sym_push+0x156>
 805c297:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805c29b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805c2a2:	00 00 00 
 805c2a5:	48 01 c8             	add    %rcx,%rax
 805c2a8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805c2ac:	e9 15 00 00 00       	jmpq   805c2c6 <sym_push+0x16b>
 805c2b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805c2b5:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805c2bc:	00 00 00 
 805c2bf:	48 01 c8             	add    %rcx,%rax
 805c2c2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805c2c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c2ca:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 805c2d1:	00 00 00 
 805c2d4:	48 01 c8             	add    %rcx,%rax
 805c2d7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 805c2db:	48 8b 11             	mov    (%rcx),%rdx
 805c2de:	48 89 10             	mov    %rdx,(%rax)
 805c2e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c2e5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 805c2e9:	48 89 08             	mov    %rcx,(%rax)
 805c2ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c2f0:	e9 00 00 00 00       	jmpq   805c2f5 <sym_push+0x19a>
 805c2f5:	c9                   	leaveq 
 805c2f6:	c3                   	retq   

000000000805c2f7 <global_identifier_push>:
 805c2f7:	55                   	push   %rbp
 805c2f8:	48 89 e5             	mov    %rsp,%rbp
 805c2fb:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805c302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c306:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c30a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805c30e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805c311:	48 63 c0             	movslq %eax,%rax
 805c314:	48 89 c1             	mov    %rax,%rcx
 805c317:	49 89 cb             	mov    %rcx,%r11
 805c31a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805c31d:	49 89 c2             	mov    %rax,%r10
 805c320:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c323:	48 89 c6             	mov    %rax,%rsi
 805c326:	48 8b 05 03 1c 03 00 	mov    0x31c03(%rip),%rax        # 808df30 <_GLOBAL_OFFSET_TABLE_+0x2b0>
 805c32d:	48 89 c7             	mov    %rax,%rdi
 805c330:	4c 89 d2             	mov    %r10,%rdx
 805c333:	4c 89 d9             	mov    %r11,%rcx
 805c336:	b8 00 00 00 00       	mov    $0x0,%eax
 805c33b:	e8 fd fa ff ff       	callq  805be3d <sym_push2>
 805c340:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805c344:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c347:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 805c34d:	0f 8d 92 00 00 00    	jge    805c3e5 <global_identifier_push+0xee>
 805c353:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c356:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c35c:	48 63 c0             	movslq %eax,%rax
 805c35f:	48 89 c1             	mov    %rax,%rcx
 805c362:	48 c1 e1 03          	shl    $0x3,%rcx
 805c366:	48 8b 05 db 1b 03 00 	mov    0x31bdb(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 805c36d:	48 8b 00             	mov    (%rax),%rax
 805c370:	48 89 ca             	mov    %rcx,%rdx
 805c373:	48 01 d0             	add    %rdx,%rax
 805c376:	48 8b 08             	mov    (%rax),%rcx
 805c379:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 805c380:	00 00 00 
 805c383:	48 01 c1             	add    %rax,%rcx
 805c386:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 805c38a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c38e:	48 8b 08             	mov    (%rax),%rcx
 805c391:	48 89 c8             	mov    %rcx,%rax
 805c394:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805c39b:	00 00 00 
 805c39e:	48 39 c8             	cmp    %rcx,%rax
 805c3a1:	0f 84 1a 00 00 00    	je     805c3c1 <global_identifier_push+0xca>
 805c3a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c3ab:	48 8b 08             	mov    (%rax),%rcx
 805c3ae:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 805c3b5:	00 00 00 
 805c3b8:	48 01 c1             	add    %rax,%rcx
 805c3bb:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 805c3bf:	eb c9                	jmp    805c38a <global_identifier_push+0x93>
 805c3c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805c3c5:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 805c3cc:	00 00 00 
 805c3cf:	48 01 c8             	add    %rcx,%rax
 805c3d2:	b9 00 00 00 00       	mov    $0x0,%ecx
 805c3d7:	48 89 08             	mov    %rcx,(%rax)
 805c3da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c3de:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805c3e2:	48 89 08             	mov    %rcx,(%rax)
 805c3e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805c3e9:	e9 00 00 00 00       	jmpq   805c3ee <global_identifier_push+0xf7>
 805c3ee:	c9                   	leaveq 
 805c3ef:	c3                   	retq   

000000000805c3f0 <sym_pop>:
 805c3f0:	55                   	push   %rbp
 805c3f1:	48 89 e5             	mov    %rsp,%rbp
 805c3f4:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805c3fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c3ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c407:	48 8b 08             	mov    (%rax),%rcx
 805c40a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 805c40e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c412:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805c416:	48 89 c2             	mov    %rax,%rdx
 805c419:	48 89 c8             	mov    %rcx,%rax
 805c41c:	48 39 c2             	cmp    %rax,%rdx
 805c41f:	0f 84 f5 00 00 00    	je     805c51a <sym_pop+0x12a>
 805c425:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c429:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 805c430:	00 00 00 
 805c433:	48 01 c8             	add    %rcx,%rax
 805c436:	48 8b 08             	mov    (%rax),%rcx
 805c439:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805c43d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c441:	8b 08                	mov    (%rax),%ecx
 805c443:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 805c446:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805c449:	81 e0 00 00 00 20    	and    $0x20000000,%eax
 805c44f:	85 c0                	test   %eax,%eax
 805c451:	0f 84 05 00 00 00    	je     805c45c <sym_pop+0x6c>
 805c457:	e9 a0 00 00 00       	jmpq   805c4fc <sym_pop+0x10c>
 805c45c:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805c45f:	81 e0 ff ff ff bf    	and    $0xbfffffff,%eax
 805c465:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 805c46b:	0f 8d 8b 00 00 00    	jge    805c4fc <sym_pop+0x10c>
 805c471:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805c474:	81 e0 ff ff ff bf    	and    $0xbfffffff,%eax
 805c47a:	81 e8 00 01 00 00    	sub    $0x100,%eax
 805c480:	48 63 c0             	movslq %eax,%rax
 805c483:	48 89 c1             	mov    %rax,%rcx
 805c486:	48 c1 e1 03          	shl    $0x3,%rcx
 805c48a:	48 8b 05 b7 1a 03 00 	mov    0x31ab7(%rip),%rax        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 805c491:	48 8b 00             	mov    (%rax),%rax
 805c494:	48 89 ca             	mov    %rcx,%rdx
 805c497:	48 01 d0             	add    %rdx,%rax
 805c49a:	48 8b 08             	mov    (%rax),%rcx
 805c49d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 805c4a1:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805c4a4:	81 e0 00 00 00 40    	and    $0x40000000,%eax
 805c4aa:	85 c0                	test   %eax,%eax
 805c4ac:	0f 84 1a 00 00 00    	je     805c4cc <sym_pop+0xdc>
 805c4b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c4b6:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805c4bd:	00 00 00 
 805c4c0:	48 01 c8             	add    %rcx,%rax
 805c4c3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805c4c7:	e9 15 00 00 00       	jmpq   805c4e1 <sym_pop+0xf1>
 805c4cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c4d0:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805c4d7:	00 00 00 
 805c4da:	48 01 c8             	add    %rcx,%rax
 805c4dd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805c4e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805c4e5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805c4e9:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 805c4f0:	00 00 00 
 805c4f3:	48 01 d1             	add    %rdx,%rcx
 805c4f6:	48 8b 11             	mov    (%rcx),%rdx
 805c4f9:	48 89 10             	mov    %rdx,(%rax)
 805c4fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c500:	48 89 c7             	mov    %rax,%rdi
 805c503:	b8 00 00 00 00       	mov    $0x0,%eax
 805c508:	e8 d2 f8 ff ff       	callq  805bddf <sym_free>
 805c50d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805c511:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805c515:	e9 f4 fe ff ff       	jmpq   805c40e <sym_pop+0x1e>
 805c51a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c51e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805c522:	48 89 08             	mov    %rcx,(%rax)
 805c525:	c9                   	leaveq 
 805c526:	c3                   	retq   

000000000805c527 <weaken_symbol>:
 805c527:	55                   	push   %rbp
 805c528:	48 89 e5             	mov    %rsp,%rbp
 805c52b:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805c532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c53a:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805c541:	00 00 00 
 805c544:	48 01 c8             	add    %rcx,%rax
 805c547:	8b 08                	mov    (%rax),%ecx
 805c549:	81 c9 00 00 01 00    	or     $0x10000,%ecx
 805c54f:	89 08                	mov    %ecx,(%rax)
 805c551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c555:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805c55c:	00 00 00 
 805c55f:	48 01 c8             	add    %rcx,%rax
 805c562:	48 8b 08             	mov    (%rax),%rcx
 805c565:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 805c56c:	00 00 00 
 805c56f:	48 39 c1             	cmp    %rax,%rcx
 805c572:	0f 8e 7c 00 00 00    	jle    805c5f4 <weaken_symbol+0xcd>
 805c578:	48 8b 05 19 19 03 00 	mov    0x31919(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 805c57f:	48 8b 00             	mov    (%rax),%rax
 805c582:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805c589:	00 00 00 
 805c58c:	48 01 c8             	add    %rcx,%rax
 805c58f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805c593:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 805c59a:	00 00 00 
 805c59d:	48 01 d1             	add    %rdx,%rcx
 805c5a0:	48 8b 11             	mov    (%rcx),%rdx
 805c5a3:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805c5aa:	00 00 00 
 805c5ad:	48 0f af d1          	imul   %rcx,%rdx
 805c5b1:	48 8b 08             	mov    (%rax),%rcx
 805c5b4:	48 89 d0             	mov    %rdx,%rax
 805c5b7:	48 01 c1             	add    %rax,%rcx
 805c5ba:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 805c5be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c5c2:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805c5c9:	00 00 00 
 805c5cc:	48 01 c8             	add    %rcx,%rax
 805c5cf:	0f b6 08             	movzbl (%rax),%ecx
 805c5d2:	83 e1 0f             	and    $0xf,%ecx
 805c5d5:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805c5d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c5dc:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 805c5e3:	00 00 00 
 805c5e6:	48 01 c8             	add    %rcx,%rax
 805c5e9:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 805c5ec:	83 e1 0f             	and    $0xf,%ecx
 805c5ef:	83 c1 20             	add    $0x20,%ecx
 805c5f2:	88 08                	mov    %cl,(%rax)
 805c5f4:	c9                   	leaveq 
 805c5f5:	c3                   	retq   

000000000805c5f6 <swap>:
 805c5f6:	55                   	push   %rbp
 805c5f7:	48 89 e5             	mov    %rsp,%rbp
 805c5fa:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805c601:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c605:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c60d:	8b 08                	mov    (%rax),%ecx
 805c60f:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805c612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c616:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805c61a:	8b 11                	mov    (%rcx),%edx
 805c61c:	89 10                	mov    %edx,(%rax)
 805c61e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805c622:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805c625:	89 08                	mov    %ecx,(%rax)
 805c627:	c9                   	leaveq 
 805c628:	c3                   	retq   

000000000805c629 <vsetc>:
 805c629:	55                   	push   %rbp
 805c62a:	48 89 e5             	mov    %rsp,%rbp
 805c62d:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805c634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c638:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c63c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805c640:	48 8b 05 d9 18 03 00 	mov    0x318d9(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c647:	48 8b 00             	mov    (%rax),%rax
 805c64a:	48 8b 0d 97 19 03 00 	mov    0x31997(%rip),%rcx        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805c651:	48 81 c1 00 30 00 00 	add    $0x3000,%rcx
 805c658:	48 89 c2             	mov    %rax,%rdx
 805c65b:	48 89 c8             	mov    %rcx,%rax
 805c65e:	48 39 c2             	cmp    %rax,%rdx
 805c661:	0f 82 14 00 00 00    	jb     805c67b <vsetc+0x52>
 805c667:	48 8d 05 29 f2 02 00 	lea    0x2f229(%rip),%rax        # 808b897 <L.109>
 805c66e:	48 89 c7             	mov    %rax,%rdi
 805c671:	b8 00 00 00 00       	mov    $0x0,%eax
 805c676:	e8 4c 10 ff ff       	callq  804d6c7 <tcc_error>
 805c67b:	48 8b 05 9e 18 03 00 	mov    0x3189e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c682:	48 8b 00             	mov    (%rax),%rax
 805c685:	48 8b 0d 5c 19 03 00 	mov    0x3195c(%rip),%rcx        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805c68c:	48 81 c1 30 00 00 00 	add    $0x30,%rcx
 805c693:	48 89 c2             	mov    %rax,%rdx
 805c696:	48 89 c8             	mov    %rcx,%rax
 805c699:	48 39 c2             	cmp    %rax,%rdx
 805c69c:	0f 82 52 00 00 00    	jb     805c6f4 <vsetc+0xcb>
 805c6a2:	48 8b 05 77 18 03 00 	mov    0x31877(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c6a9:	48 8b 00             	mov    (%rax),%rax
 805c6ac:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805c6b3:	00 00 00 
 805c6b6:	48 01 c8             	add    %rcx,%rax
 805c6b9:	0f b7 08             	movzwl (%rax),%ecx
 805c6bc:	83 e1 3f             	and    $0x3f,%ecx
 805c6bf:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 805c6c2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805c6c5:	83 f8 33             	cmp    $0x33,%eax
 805c6c8:	0f 84 14 00 00 00    	je     805c6e2 <vsetc+0xb9>
 805c6ce:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805c6d1:	83 e0 fe             	and    $0xfffffffe,%eax
 805c6d4:	83 f8 34             	cmp    $0x34,%eax
 805c6d7:	0f 84 05 00 00 00    	je     805c6e2 <vsetc+0xb9>
 805c6dd:	e9 12 00 00 00       	jmpq   805c6f4 <vsetc+0xcb>
 805c6e2:	b8 01 00 00 00       	mov    $0x1,%eax
 805c6e7:	48 89 c7             	mov    %rax,%rdi
 805c6ea:	b8 00 00 00 00       	mov    $0x0,%eax
 805c6ef:	e8 36 10 00 00       	callq  805d72a <gv>
 805c6f4:	48 8b 05 25 18 03 00 	mov    0x31825(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c6fb:	48 8b 00             	mov    (%rax),%rax
 805c6fe:	48 89 c1             	mov    %rax,%rcx
 805c701:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805c708:	00 00 00 
 805c70b:	48 01 d0             	add    %rdx,%rax
 805c70e:	4c 8b 1d 0b 18 03 00 	mov    0x3180b(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c715:	49 89 03             	mov    %rax,(%r11)
 805c718:	48 8b 05 01 18 03 00 	mov    0x31801(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c71f:	48 8b 00             	mov    (%rax),%rax
 805c722:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805c726:	ba 10 00 00 00       	mov    $0x10,%edx
 805c72b:	49 89 d2             	mov    %rdx,%r10
 805c72e:	48 89 ce             	mov    %rcx,%rsi
 805c731:	48 89 c7             	mov    %rax,%rdi
 805c734:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805c738:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 805c73c:	4c 89 d2             	mov    %r10,%rdx
 805c73f:	b8 00 00 00 00       	mov    $0x0,%eax
 805c744:	e8 27 a5 02 00       	callq  8086c70 <memcpy>
 805c749:	48 8b 05 d0 17 03 00 	mov    0x317d0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c750:	48 8b 00             	mov    (%rax),%rax
 805c753:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805c75a:	00 00 00 
 805c75d:	48 01 c8             	add    %rcx,%rax
 805c760:	0f b7 4d f0          	movzwl -0x10(%rbp),%ecx
 805c764:	66 89 08             	mov    %cx,(%rax)
 805c767:	48 8b 05 b2 17 03 00 	mov    0x317b2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c76e:	48 8b 00             	mov    (%rax),%rax
 805c771:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805c778:	00 00 00 
 805c77b:	48 01 c8             	add    %rcx,%rax
 805c77e:	b9 30 00 00 00       	mov    $0x30,%ecx
 805c783:	66 89 08             	mov    %cx,(%rax)
 805c786:	48 8b 05 93 17 03 00 	mov    0x31793(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805c78d:	48 8b 00             	mov    (%rax),%rax
 805c790:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805c797:	00 00 00 
 805c79a:	48 01 c8             	add    %rcx,%rax
 805c79d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805c7a1:	ba 10 00 00 00       	mov    $0x10,%edx
 805c7a6:	49 89 d2             	mov    %rdx,%r10
 805c7a9:	48 89 ce             	mov    %rcx,%rsi
 805c7ac:	48 89 c7             	mov    %rax,%rdi
 805c7af:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805c7b3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 805c7b7:	4c 89 d2             	mov    %r10,%rdx
 805c7ba:	b8 00 00 00 00       	mov    $0x0,%eax
 805c7bf:	e8 ac a4 02 00       	callq  8086c70 <memcpy>
 805c7c4:	c9                   	leaveq 
 805c7c5:	c3                   	retq   

000000000805c7c6 <vpush>:
 805c7c6:	55                   	push   %rbp
 805c7c7:	48 89 e5             	mov    %rsp,%rbp
 805c7ca:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805c7d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c7d5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 805c7d9:	49 89 c2             	mov    %rax,%r10
 805c7dc:	b8 30 00 00 00       	mov    $0x30,%eax
 805c7e1:	48 89 c6             	mov    %rax,%rsi
 805c7e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c7e8:	48 89 c7             	mov    %rax,%rdi
 805c7eb:	4c 89 d2             	mov    %r10,%rdx
 805c7ee:	b8 00 00 00 00       	mov    $0x0,%eax
 805c7f3:	e8 31 fe ff ff       	callq  805c629 <vsetc>
 805c7f8:	c9                   	leaveq 
 805c7f9:	c3                   	retq   

000000000805c7fa <vpushi>:
 805c7fa:	55                   	push   %rbp
 805c7fb:	48 89 e5             	mov    %rsp,%rbp
 805c7fe:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805c805:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c809:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c80c:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805c80f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 805c813:	49 89 c2             	mov    %rax,%r10
 805c816:	b8 30 00 00 00       	mov    $0x30,%eax
 805c81b:	48 89 c6             	mov    %rax,%rsi
 805c81e:	48 8b 05 b3 16 03 00 	mov    0x316b3(%rip),%rax        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 805c825:	48 89 c7             	mov    %rax,%rdi
 805c828:	4c 89 d2             	mov    %r10,%rdx
 805c82b:	b8 00 00 00 00       	mov    $0x0,%eax
 805c830:	e8 f4 fd ff ff       	callq  805c629 <vsetc>
 805c835:	c9                   	leaveq 
 805c836:	c3                   	retq   

000000000805c837 <vpushs>:
 805c837:	55                   	push   %rbp
 805c838:	48 89 e5             	mov    %rsp,%rbp
 805c83b:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805c842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c846:	e9 0c 00 00 00       	jmpq   805c857 <vpushs+0x20>
 805c84b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c84f:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805c852:	e9 08 00 00 00       	jmpq   805c85f <vpushs+0x28>
 805c857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c85b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805c85f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 805c863:	49 89 c2             	mov    %rax,%r10
 805c866:	b8 30 00 00 00       	mov    $0x30,%eax
 805c86b:	48 89 c6             	mov    %rax,%rsi
 805c86e:	48 8b 05 73 16 03 00 	mov    0x31673(%rip),%rax        # 808dee8 <_GLOBAL_OFFSET_TABLE_+0x268>
 805c875:	48 89 c7             	mov    %rax,%rdi
 805c878:	4c 89 d2             	mov    %r10,%rdx
 805c87b:	b8 00 00 00 00       	mov    $0x0,%eax
 805c880:	e8 a4 fd ff ff       	callq  805c629 <vsetc>
 805c885:	c9                   	leaveq 
 805c886:	c3                   	retq   

000000000805c887 <vpushll>:
 805c887:	55                   	push   %rbp
 805c888:	48 89 e5             	mov    %rsp,%rbp
 805c88b:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805c892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c896:	b8 0c 00 00 00       	mov    $0xc,%eax
 805c89b:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805c89e:	b8 00 00 00 00       	mov    $0x0,%eax
 805c8a3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805c8a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c8ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805c8af:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 805c8b3:	49 89 c2             	mov    %rax,%r10
 805c8b6:	b8 30 00 00 00       	mov    $0x30,%eax
 805c8bb:	48 89 c6             	mov    %rax,%rsi
 805c8be:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 805c8c2:	48 89 c7             	mov    %rax,%rdi
 805c8c5:	4c 89 d2             	mov    %r10,%rdx
 805c8c8:	b8 00 00 00 00       	mov    $0x0,%eax
 805c8cd:	e8 57 fd ff ff       	callq  805c629 <vsetc>
 805c8d2:	c9                   	leaveq 
 805c8d3:	c3                   	retq   

000000000805c8d4 <vpush64>:
 805c8d4:	55                   	push   %rbp
 805c8d5:	48 89 e5             	mov    %rsp,%rbp
 805c8d8:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805c8df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c8e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c8e7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805c8ea:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805c8ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805c8f1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805c8f5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 805c8f9:	49 89 c2             	mov    %rax,%r10
 805c8fc:	b8 30 00 00 00       	mov    $0x30,%eax
 805c901:	48 89 c6             	mov    %rax,%rsi
 805c904:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 805c908:	48 89 c7             	mov    %rax,%rdi
 805c90b:	4c 89 d2             	mov    %r10,%rdx
 805c90e:	b8 00 00 00 00       	mov    $0x0,%eax
 805c913:	e8 11 fd ff ff       	callq  805c629 <vsetc>
 805c918:	c9                   	leaveq 
 805c919:	c3                   	retq   

000000000805c91a <get_sym_ref>:
 805c91a:	55                   	push   %rbp
 805c91b:	48 89 e5             	mov    %rsp,%rbp
 805c91e:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805c925:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805c929:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805c92d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805c931:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805c935:	48 8b 05 8c 15 03 00 	mov    0x3158c(%rip),%rax        # 808dec8 <_GLOBAL_OFFSET_TABLE_+0x248>
 805c93c:	8b 00                	mov    (%rax),%eax
 805c93e:	48 89 c1             	mov    %rax,%rcx
 805c941:	83 c0 01             	add    $0x1,%eax
 805c944:	4c 8b 1d 7d 15 03 00 	mov    0x3157d(%rip),%r11        # 808dec8 <_GLOBAL_OFFSET_TABLE_+0x248>
 805c94b:	41 89 03             	mov    %eax,(%r11)
 805c94e:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 805c951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805c955:	8b 08                	mov    (%rax),%ecx
 805c957:	81 c9 00 01 00 00    	or     $0x100,%ecx
 805c95d:	b8 00 00 00 00       	mov    $0x0,%eax
 805c962:	49 89 c2             	mov    %rax,%r10
 805c965:	48 89 ce             	mov    %rcx,%rsi
 805c968:	8b 45 dc             	mov    -0x24(%rbp),%eax
 805c96b:	48 89 c7             	mov    %rax,%rdi
 805c96e:	4c 89 d2             	mov    %r10,%rdx
 805c971:	b8 00 00 00 00       	mov    $0x0,%eax
 805c976:	e8 7c f9 ff ff       	callq  805c2f7 <global_identifier_push>
 805c97b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805c97f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c983:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805c98a:	00 00 00 
 805c98d:	48 01 c8             	add    %rcx,%rax
 805c990:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805c997:	00 00 00 
 805c99a:	48 01 c8             	add    %rcx,%rax
 805c99d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805c9a1:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 805c9a8:	00 00 00 
 805c9ab:	48 01 d1             	add    %rdx,%rcx
 805c9ae:	48 8b 11             	mov    (%rcx),%rdx
 805c9b1:	48 89 10             	mov    %rdx,(%rax)
 805c9b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c9b8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805c9bf:	00 00 00 
 805c9c2:	48 01 c8             	add    %rcx,%rax
 805c9c5:	48 b9 30 02 00 00 00 	movabs $0x230,%rcx
 805c9cc:	00 00 00 
 805c9cf:	48 89 08             	mov    %rcx,(%rax)
 805c9d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805c9d6:	49 89 c3             	mov    %rax,%r11
 805c9d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805c9dd:	49 89 c2             	mov    %rax,%r10
 805c9e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805c9e4:	48 89 c6             	mov    %rax,%rsi
 805c9e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805c9eb:	48 89 c7             	mov    %rax,%rdi
 805c9ee:	4c 89 d2             	mov    %r10,%rdx
 805c9f1:	4c 89 d9             	mov    %r11,%rcx
 805c9f4:	b8 00 00 00 00       	mov    $0x0,%eax
 805c9f9:	e8 b4 03 ff ff       	callq  804cdb2 <put_extern_sym>
 805c9fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805ca02:	e9 00 00 00 00       	jmpq   805ca07 <get_sym_ref+0xed>
 805ca07:	c9                   	leaveq 
 805ca08:	c3                   	retq   

000000000805ca09 <vpush_ref>:
 805ca09:	55                   	push   %rbp
 805ca0a:	48 89 e5             	mov    %rsp,%rbp
 805ca0d:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805ca14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805ca18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805ca1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805ca20:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805ca24:	b8 00 00 00 00       	mov    $0x0,%eax
 805ca29:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805ca2c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 805ca30:	49 89 c2             	mov    %rax,%r10
 805ca33:	b8 30 02 00 00       	mov    $0x230,%eax
 805ca38:	48 89 c6             	mov    %rax,%rsi
 805ca3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805ca3f:	48 89 c7             	mov    %rax,%rdi
 805ca42:	4c 89 d2             	mov    %r10,%rdx
 805ca45:	b8 00 00 00 00       	mov    $0x0,%eax
 805ca4a:	e8 da fb ff ff       	callq  805c629 <vsetc>
 805ca4f:	48 8b 05 ca 14 03 00 	mov    0x314ca(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ca56:	48 8b 00             	mov    (%rax),%rax
 805ca59:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 805ca60:	00 00 00 
 805ca63:	48 01 c8             	add    %rcx,%rax
 805ca66:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805ca6a:	49 89 cb             	mov    %rcx,%r11
 805ca6d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805ca71:	49 89 ca             	mov    %rcx,%r10
 805ca74:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805ca78:	48 89 ce             	mov    %rcx,%rsi
 805ca7b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805ca7f:	48 89 cf             	mov    %rcx,%rdi
 805ca82:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805ca86:	4c 89 d2             	mov    %r10,%rdx
 805ca89:	4c 89 d9             	mov    %r11,%rcx
 805ca8c:	b8 00 00 00 00       	mov    $0x0,%eax
 805ca91:	e8 84 fe ff ff       	callq  805c91a <get_sym_ref>
 805ca96:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805ca9a:	48 89 01             	mov    %rax,(%rcx)
 805ca9d:	c9                   	leaveq 
 805ca9e:	c3                   	retq   

000000000805ca9f <external_global_sym>:
 805ca9f:	55                   	push   %rbp
 805caa0:	48 89 e5             	mov    %rsp,%rbp
 805caa3:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805caaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805caae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805cab2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805cab6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805cab9:	48 89 c7             	mov    %rax,%rdi
 805cabc:	b8 00 00 00 00       	mov    $0x0,%eax
 805cac1:	e8 1e f6 ff ff       	callq  805c0e4 <sym_find>
 805cac6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805caca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805cace:	85 c0                	test   %eax,%eax
 805cad0:	0f 84 05 00 00 00    	je     805cadb <external_global_sym+0x3c>
 805cad6:	e9 89 00 00 00       	jmpq   805cb64 <external_global_sym+0xc5>
 805cadb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805cadf:	8b 08                	mov    (%rax),%ecx
 805cae1:	81 c9 80 00 00 00    	or     $0x80,%ecx
 805cae7:	b8 00 00 00 00       	mov    $0x0,%eax
 805caec:	49 89 c2             	mov    %rax,%r10
 805caef:	48 89 ce             	mov    %rcx,%rsi
 805caf2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805caf5:	48 89 c7             	mov    %rax,%rdi
 805caf8:	4c 89 d2             	mov    %r10,%rdx
 805cafb:	b8 00 00 00 00       	mov    $0x0,%eax
 805cb00:	e8 f2 f7 ff ff       	callq  805c2f7 <global_identifier_push>
 805cb05:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805cb09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805cb0d:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805cb14:	00 00 00 
 805cb17:	48 01 c8             	add    %rcx,%rax
 805cb1a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805cb21:	00 00 00 
 805cb24:	48 01 c8             	add    %rcx,%rax
 805cb27:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805cb2b:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 805cb32:	00 00 00 
 805cb35:	48 01 d1             	add    %rdx,%rcx
 805cb38:	48 8b 11             	mov    (%rcx),%rdx
 805cb3b:	48 89 10             	mov    %rdx,(%rax)
 805cb3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805cb42:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805cb49:	00 00 00 
 805cb4c:	48 01 c8             	add    %rcx,%rax
 805cb4f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805cb52:	83 c9 30             	or     $0x30,%ecx
 805cb55:	81 c9 00 02 00 00    	or     $0x200,%ecx
 805cb5b:	48 63 c9             	movslq %ecx,%rcx
 805cb5e:	48 89 ca             	mov    %rcx,%rdx
 805cb61:	48 89 10             	mov    %rdx,(%rax)
 805cb64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805cb68:	e9 00 00 00 00       	jmpq   805cb6d <external_global_sym+0xce>
 805cb6d:	c9                   	leaveq 
 805cb6e:	c3                   	retq   

000000000805cb6f <external_sym>:
 805cb6f:	55                   	push   %rbp
 805cb70:	48 89 e5             	mov    %rsp,%rbp
 805cb73:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805cb7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805cb7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805cb82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805cb86:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 805cb8a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805cb8d:	48 89 c7             	mov    %rax,%rdi
 805cb90:	b8 00 00 00 00       	mov    $0x0,%eax
 805cb95:	e8 4a f5 ff ff       	callq  805c0e4 <sym_find>
 805cb9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805cb9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cba2:	85 c0                	test   %eax,%eax
 805cba4:	0f 84 05 00 00 00    	je     805cbaf <external_sym+0x40>
 805cbaa:	e9 70 00 00 00       	jmpq   805cc1f <external_sym+0xb0>
 805cbaf:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805cbb2:	83 c8 30             	or     $0x30,%eax
 805cbb5:	81 c8 00 02 00 00    	or     $0x200,%eax
 805cbbb:	b9 00 00 00 00       	mov    $0x0,%ecx
 805cbc0:	49 89 cb             	mov    %rcx,%r11
 805cbc3:	49 89 c2             	mov    %rax,%r10
 805cbc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805cbca:	48 89 c6             	mov    %rax,%rsi
 805cbcd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805cbd0:	48 89 c7             	mov    %rax,%rdi
 805cbd3:	4c 89 d2             	mov    %r10,%rdx
 805cbd6:	4c 89 d9             	mov    %r11,%rcx
 805cbd9:	b8 00 00 00 00       	mov    $0x0,%eax
 805cbde:	e8 78 f5 ff ff       	callq  805c15b <sym_push>
 805cbe3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805cbe7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cbeb:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805cbf2:	00 00 00 
 805cbf5:	48 01 c8             	add    %rcx,%rax
 805cbf8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805cbfc:	48 89 08             	mov    %rcx,(%rax)
 805cbff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cc03:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805cc0a:	00 00 00 
 805cc0d:	48 01 c8             	add    %rcx,%rax
 805cc10:	8b 08                	mov    (%rax),%ecx
 805cc12:	81 c9 80 00 00 00    	or     $0x80,%ecx
 805cc18:	89 08                	mov    %ecx,(%rax)
 805cc1a:	e9 1a 01 00 00       	jmpq   805cd39 <external_sym+0x1ca>
 805cc1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cc23:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805cc2a:	00 00 00 
 805cc2d:	48 01 c8             	add    %rcx,%rax
 805cc30:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805cc37:	00 00 00 
 805cc3a:	48 01 c8             	add    %rcx,%rax
 805cc3d:	48 8b 08             	mov    (%rax),%rcx
 805cc40:	48 8b 05 a9 12 03 00 	mov    0x312a9(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 805cc47:	48 8b 80 08 00 00 00 	mov    0x8(%rax),%rax
 805cc4e:	48 89 ca             	mov    %rcx,%rdx
 805cc51:	48 89 c1             	mov    %rax,%rcx
 805cc54:	48 39 ca             	cmp    %rcx,%rdx
 805cc57:	0f 85 7b 00 00 00    	jne    805ccd8 <external_sym+0x169>
 805cc5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cc61:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805cc68:	00 00 00 
 805cc6b:	48 01 c8             	add    %rcx,%rax
 805cc6e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805cc75:	00 00 00 
 805cc78:	48 01 c8             	add    %rcx,%rax
 805cc7b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805cc7f:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 805cc86:	00 00 00 
 805cc89:	48 01 d1             	add    %rdx,%rcx
 805cc8c:	48 8b 11             	mov    (%rcx),%rdx
 805cc8f:	48 89 10             	mov    %rdx,(%rax)
 805cc92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cc96:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805cc9d:	00 00 00 
 805cca0:	48 01 c8             	add    %rcx,%rax
 805cca3:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805cca6:	83 c9 30             	or     $0x30,%ecx
 805cca9:	81 c9 00 02 00 00    	or     $0x200,%ecx
 805ccaf:	48 63 c9             	movslq %ecx,%rcx
 805ccb2:	48 89 ca             	mov    %rcx,%rdx
 805ccb5:	48 89 10             	mov    %rdx,(%rax)
 805ccb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805ccbc:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805ccc3:	00 00 00 
 805ccc6:	48 01 c8             	add    %rcx,%rax
 805ccc9:	8b 08                	mov    (%rax),%ecx
 805cccb:	81 c9 80 00 00 00    	or     $0x80,%ecx
 805ccd1:	89 08                	mov    %ecx,(%rax)
 805ccd3:	e9 61 00 00 00       	jmpq   805cd39 <external_sym+0x1ca>
 805ccd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805ccdc:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 805cce3:	00 00 00 
 805cce6:	48 01 c8             	add    %rcx,%rax
 805cce9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 805cced:	48 89 ce             	mov    %rcx,%rsi
 805ccf0:	48 89 c7             	mov    %rax,%rdi
 805ccf3:	b8 00 00 00 00       	mov    $0x0,%eax
 805ccf8:	e8 03 48 00 00       	callq  8061500 <is_compatible_types>
 805ccfd:	85 c0                	test   %eax,%eax
 805ccff:	0f 84 05 00 00 00    	je     805cd0a <external_sym+0x19b>
 805cd05:	e9 2f 00 00 00       	jmpq   805cd39 <external_sym+0x1ca>
 805cd0a:	b8 00 00 00 00       	mov    $0x0,%eax
 805cd0f:	48 89 c6             	mov    %rax,%rsi
 805cd12:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805cd15:	48 89 c7             	mov    %rax,%rdi
 805cd18:	b8 00 00 00 00       	mov    $0x0,%eax
 805cd1d:	e8 92 4b ff ff       	callq  80518b4 <get_tok_str>
 805cd22:	48 89 c6             	mov    %rax,%rsi
 805cd25:	48 8d 05 77 eb 02 00 	lea    0x2eb77(%rip),%rax        # 808b8a3 <L.110>
 805cd2c:	48 89 c7             	mov    %rax,%rdi
 805cd2f:	b8 00 00 00 00       	mov    $0x0,%eax
 805cd34:	e8 8e 09 ff ff       	callq  804d6c7 <tcc_error>
 805cd39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805cd3d:	e9 00 00 00 00       	jmpq   805cd42 <external_sym+0x1d3>
 805cd42:	c9                   	leaveq 
 805cd43:	c3                   	retq   

000000000805cd44 <vpush_global_sym>:
 805cd44:	55                   	push   %rbp
 805cd45:	48 89 e5             	mov    %rsp,%rbp
 805cd48:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805cd4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805cd53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805cd57:	b8 00 00 00 00       	mov    $0x0,%eax
 805cd5c:	49 89 c2             	mov    %rax,%r10
 805cd5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805cd63:	48 89 c6             	mov    %rax,%rsi
 805cd66:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805cd69:	48 89 c7             	mov    %rax,%rdi
 805cd6c:	4c 89 d2             	mov    %r10,%rdx
 805cd6f:	b8 00 00 00 00       	mov    $0x0,%eax
 805cd74:	e8 26 fd ff ff       	callq  805ca9f <external_global_sym>
 805cd79:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805cd7d:	b8 00 00 00 00       	mov    $0x0,%eax
 805cd82:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805cd85:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 805cd89:	49 89 c2             	mov    %rax,%r10
 805cd8c:	b8 30 02 00 00       	mov    $0x230,%eax
 805cd91:	48 89 c6             	mov    %rax,%rsi
 805cd94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805cd98:	48 89 c7             	mov    %rax,%rdi
 805cd9b:	4c 89 d2             	mov    %r10,%rdx
 805cd9e:	b8 00 00 00 00       	mov    $0x0,%eax
 805cda3:	e8 81 f8 ff ff       	callq  805c629 <vsetc>
 805cda8:	48 8b 05 71 11 03 00 	mov    0x31171(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cdaf:	48 8b 00             	mov    (%rax),%rax
 805cdb2:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 805cdb9:	00 00 00 
 805cdbc:	48 01 c8             	add    %rcx,%rax
 805cdbf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 805cdc3:	48 89 08             	mov    %rcx,(%rax)
 805cdc6:	c9                   	leaveq 
 805cdc7:	c3                   	retq   

000000000805cdc8 <vset>:
 805cdc8:	55                   	push   %rbp
 805cdc9:	48 89 e5             	mov    %rsp,%rbp
 805cdcc:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 805cdd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805cdd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805cddb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805cddf:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805cde2:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805cde5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 805cde9:	49 89 c2             	mov    %rax,%r10
 805cdec:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805cdef:	48 89 c6             	mov    %rax,%rsi
 805cdf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805cdf6:	48 89 c7             	mov    %rax,%rdi
 805cdf9:	4c 89 d2             	mov    %r10,%rdx
 805cdfc:	b8 00 00 00 00       	mov    $0x0,%eax
 805ce01:	e8 23 f8 ff ff       	callq  805c629 <vsetc>
 805ce06:	c9                   	leaveq 
 805ce07:	c3                   	retq   

000000000805ce08 <vseti>:
 805ce08:	55                   	push   %rbp
 805ce09:	48 89 e5             	mov    %rsp,%rbp
 805ce0c:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805ce13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805ce17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805ce1b:	b8 00 00 00 00       	mov    $0x0,%eax
 805ce20:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805ce23:	b8 00 00 00 00       	mov    $0x0,%eax
 805ce28:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805ce2c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805ce2f:	49 89 c2             	mov    %rax,%r10
 805ce32:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ce35:	48 89 c6             	mov    %rax,%rsi
 805ce38:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 805ce3c:	48 89 c7             	mov    %rax,%rdi
 805ce3f:	4c 89 d2             	mov    %r10,%rdx
 805ce42:	b8 00 00 00 00       	mov    $0x0,%eax
 805ce47:	e8 7c ff ff ff       	callq  805cdc8 <vset>
 805ce4c:	c9                   	leaveq 
 805ce4d:	c3                   	retq   

000000000805ce4e <vswap>:
 805ce4e:	55                   	push   %rbp
 805ce4f:	48 89 e5             	mov    %rsp,%rbp
 805ce52:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 805ce59:	48 8b 05 c0 10 03 00 	mov    0x310c0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ce60:	48 8b 00             	mov    (%rax),%rax
 805ce63:	48 8b 0d 7e 11 03 00 	mov    0x3117e(%rip),%rcx        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805ce6a:	48 81 c1 30 00 00 00 	add    $0x30,%rcx
 805ce71:	48 89 c2             	mov    %rax,%rdx
 805ce74:	48 89 c8             	mov    %rcx,%rax
 805ce77:	48 39 c2             	cmp    %rax,%rdx
 805ce7a:	0f 82 52 00 00 00    	jb     805ced2 <vswap+0x84>
 805ce80:	48 8b 05 99 10 03 00 	mov    0x31099(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ce87:	48 8b 00             	mov    (%rax),%rax
 805ce8a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805ce91:	00 00 00 
 805ce94:	48 01 c8             	add    %rcx,%rax
 805ce97:	0f b7 08             	movzwl (%rax),%ecx
 805ce9a:	83 e1 3f             	and    $0x3f,%ecx
 805ce9d:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 805cea0:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805cea3:	83 f8 33             	cmp    $0x33,%eax
 805cea6:	0f 84 14 00 00 00    	je     805cec0 <vswap+0x72>
 805ceac:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805ceaf:	83 e0 fe             	and    $0xfffffffe,%eax
 805ceb2:	83 f8 34             	cmp    $0x34,%eax
 805ceb5:	0f 84 05 00 00 00    	je     805cec0 <vswap+0x72>
 805cebb:	e9 12 00 00 00       	jmpq   805ced2 <vswap+0x84>
 805cec0:	b8 01 00 00 00       	mov    $0x1,%eax
 805cec5:	48 89 c7             	mov    %rax,%rdi
 805cec8:	b8 00 00 00 00       	mov    $0x0,%eax
 805cecd:	e8 58 08 00 00       	callq  805d72a <gv>
 805ced2:	48 8b 05 47 10 03 00 	mov    0x31047(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ced9:	48 8b 00             	mov    (%rax),%rax
 805cedc:	b9 30 00 00 00       	mov    $0x30,%ecx
 805cee1:	49 89 ca             	mov    %rcx,%r10
 805cee4:	48 89 c6             	mov    %rax,%rsi
 805cee7:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 805ceeb:	48 89 cf             	mov    %rcx,%rdi
 805ceee:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805cef2:	4c 89 d2             	mov    %r10,%rdx
 805cef5:	b8 00 00 00 00       	mov    $0x0,%eax
 805cefa:	e8 71 9d 02 00       	callq  8086c70 <memcpy>
 805ceff:	48 8b 05 1a 10 03 00 	mov    0x3101a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cf06:	48 8b 00             	mov    (%rax),%rax
 805cf09:	48 8b 0d 10 10 03 00 	mov    0x31010(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cf10:	48 8b 09             	mov    (%rcx),%rcx
 805cf13:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805cf1a:	ff ff ff 
 805cf1d:	48 01 d1             	add    %rdx,%rcx
 805cf20:	ba 30 00 00 00       	mov    $0x30,%edx
 805cf25:	49 89 d2             	mov    %rdx,%r10
 805cf28:	48 89 ce             	mov    %rcx,%rsi
 805cf2b:	48 89 c7             	mov    %rax,%rdi
 805cf2e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 805cf32:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 805cf36:	4c 89 d2             	mov    %r10,%rdx
 805cf39:	b8 00 00 00 00       	mov    $0x0,%eax
 805cf3e:	e8 2d 9d 02 00       	callq  8086c70 <memcpy>
 805cf43:	48 8b 05 d6 0f 03 00 	mov    0x30fd6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cf4a:	48 8b 00             	mov    (%rax),%rax
 805cf4d:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805cf54:	ff ff ff 
 805cf57:	48 01 c8             	add    %rcx,%rax
 805cf5a:	b9 30 00 00 00       	mov    $0x30,%ecx
 805cf5f:	49 89 ca             	mov    %rcx,%r10
 805cf62:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 805cf66:	48 89 ce             	mov    %rcx,%rsi
 805cf69:	48 89 c7             	mov    %rax,%rdi
 805cf6c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805cf70:	4c 89 d2             	mov    %r10,%rdx
 805cf73:	b8 00 00 00 00       	mov    $0x0,%eax
 805cf78:	e8 f3 9c 02 00       	callq  8086c70 <memcpy>
 805cf7d:	c9                   	leaveq 
 805cf7e:	c3                   	retq   

000000000805cf7f <vpushv>:
 805cf7f:	55                   	push   %rbp
 805cf80:	48 89 e5             	mov    %rsp,%rbp
 805cf83:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805cf8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805cf8e:	48 8b 05 8b 0f 03 00 	mov    0x30f8b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cf95:	48 8b 00             	mov    (%rax),%rax
 805cf98:	48 8b 0d 49 10 03 00 	mov    0x31049(%rip),%rcx        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805cf9f:	48 81 c1 00 30 00 00 	add    $0x3000,%rcx
 805cfa6:	48 89 c2             	mov    %rax,%rdx
 805cfa9:	48 89 c8             	mov    %rcx,%rax
 805cfac:	48 39 c2             	cmp    %rax,%rdx
 805cfaf:	0f 82 14 00 00 00    	jb     805cfc9 <vpushv+0x4a>
 805cfb5:	48 8d 05 13 e9 02 00 	lea    0x2e913(%rip),%rax        # 808b8cf <L.111>
 805cfbc:	48 89 c7             	mov    %rax,%rdi
 805cfbf:	b8 00 00 00 00       	mov    $0x0,%eax
 805cfc4:	e8 fe 06 ff ff       	callq  804d6c7 <tcc_error>
 805cfc9:	48 8b 05 50 0f 03 00 	mov    0x30f50(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cfd0:	48 8b 00             	mov    (%rax),%rax
 805cfd3:	48 89 c1             	mov    %rax,%rcx
 805cfd6:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805cfdd:	00 00 00 
 805cfe0:	48 01 d0             	add    %rdx,%rax
 805cfe3:	4c 8b 1d 36 0f 03 00 	mov    0x30f36(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cfea:	49 89 03             	mov    %rax,(%r11)
 805cfed:	48 8b 05 2c 0f 03 00 	mov    0x30f2c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805cff4:	48 8b 00             	mov    (%rax),%rax
 805cff7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805cffb:	ba 30 00 00 00       	mov    $0x30,%edx
 805d000:	49 89 d2             	mov    %rdx,%r10
 805d003:	48 89 ce             	mov    %rcx,%rsi
 805d006:	48 89 c7             	mov    %rax,%rdi
 805d009:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 805d00d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 805d011:	4c 89 d2             	mov    %r10,%rdx
 805d014:	b8 00 00 00 00       	mov    $0x0,%eax
 805d019:	e8 52 9c 02 00       	callq  8086c70 <memcpy>
 805d01e:	c9                   	leaveq 
 805d01f:	c3                   	retq   

000000000805d020 <vdup>:
 805d020:	55                   	push   %rbp
 805d021:	48 89 e5             	mov    %rsp,%rbp
 805d024:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 805d02b:	48 8b 05 ee 0e 03 00 	mov    0x30eee(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d032:	48 8b 00             	mov    (%rax),%rax
 805d035:	48 89 c7             	mov    %rax,%rdi
 805d038:	b8 00 00 00 00       	mov    $0x0,%eax
 805d03d:	e8 3d ff ff ff       	callq  805cf7f <vpushv>
 805d042:	c9                   	leaveq 
 805d043:	c3                   	retq   

000000000805d044 <save_reg>:
 805d044:	55                   	push   %rbp
 805d045:	48 89 e5             	mov    %rsp,%rbp
 805d048:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 805d04f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805d053:	b8 00 00 00 00       	mov    $0x0,%eax
 805d058:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805d05b:	b8 00 00 00 00       	mov    $0x0,%eax
 805d060:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805d063:	48 8b 05 7e 0f 03 00 	mov    0x30f7e(%rip),%rax        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805d06a:	48 81 c0 30 00 00 00 	add    $0x30,%rax
 805d071:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805d075:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d079:	48 8b 0d a0 0e 03 00 	mov    0x30ea0(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d080:	48 8b 09             	mov    (%rcx),%rcx
 805d083:	48 89 c2             	mov    %rax,%rdx
 805d086:	48 89 c8             	mov    %rcx,%rax
 805d089:	48 39 c2             	cmp    %rax,%rdx
 805d08c:	0f 87 81 02 00 00    	ja     805d313 <save_reg+0x2cf>
 805d092:	e9 1a 00 00 00       	jmpq   805d0b1 <save_reg+0x6d>
 805d097:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d09b:	48 89 c1             	mov    %rax,%rcx
 805d09e:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805d0a5:	00 00 00 
 805d0a8:	48 01 d0             	add    %rdx,%rax
 805d0ab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805d0af:	eb c4                	jmp    805d075 <save_reg+0x31>
 805d0b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d0b5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d0bc:	00 00 00 
 805d0bf:	48 01 c8             	add    %rcx,%rax
 805d0c2:	0f b7 08             	movzwl (%rax),%ecx
 805d0c5:	83 e1 3f             	and    $0x3f,%ecx
 805d0c8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d0cb:	39 c1                	cmp    %eax,%ecx
 805d0cd:	0f 84 3e 00 00 00    	je     805d111 <save_reg+0xcd>
 805d0d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d0d7:	8b 08                	mov    (%rax),%ecx
 805d0d9:	83 e1 0f             	and    $0xf,%ecx
 805d0dc:	83 f9 0c             	cmp    $0xc,%ecx
 805d0df:	0f 85 27 00 00 00    	jne    805d10c <save_reg+0xc8>
 805d0e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d0e9:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805d0f0:	00 00 00 
 805d0f3:	48 01 c8             	add    %rcx,%rax
 805d0f6:	0f b7 08             	movzwl (%rax),%ecx
 805d0f9:	83 e1 3f             	and    $0x3f,%ecx
 805d0fc:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d0ff:	39 c1                	cmp    %eax,%ecx
 805d101:	0f 85 05 00 00 00    	jne    805d10c <save_reg+0xc8>
 805d107:	e9 05 00 00 00       	jmpq   805d111 <save_reg+0xcd>
 805d10c:	e9 fd 01 00 00       	jmpq   805d30e <save_reg+0x2ca>
 805d111:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805d114:	85 c0                	test   %eax,%eax
 805d116:	0f 84 05 00 00 00    	je     805d121 <save_reg+0xdd>
 805d11c:	e9 34 01 00 00       	jmpq   805d255 <save_reg+0x211>
 805d121:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d125:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d12c:	00 00 00 
 805d12f:	48 01 c8             	add    %rcx,%rax
 805d132:	0f b7 08             	movzwl (%rax),%ecx
 805d135:	83 e1 3f             	and    $0x3f,%ecx
 805d138:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805d13b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d13f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805d143:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d147:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d14e:	00 00 00 
 805d151:	48 01 c8             	add    %rcx,%rax
 805d154:	0f b7 08             	movzwl (%rax),%ecx
 805d157:	81 e1 00 01 00 00    	and    $0x100,%ecx
 805d15d:	85 c9                	test   %ecx,%ecx
 805d15f:	0f 85 3c 00 00 00    	jne    805d1a1 <save_reg+0x15d>
 805d165:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805d169:	8b 08                	mov    (%rax),%ecx
 805d16b:	48 89 cf             	mov    %rcx,%rdi
 805d16e:	b8 00 00 00 00       	mov    $0x0,%eax
 805d173:	e8 ab ea ff ff       	callq  805bc23 <is_float>
 805d178:	85 c0                	test   %eax,%eax
 805d17a:	0f 84 05 00 00 00    	je     805d185 <save_reg+0x141>
 805d180:	e9 17 00 00 00       	jmpq   805d19c <save_reg+0x158>
 805d185:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805d189:	8b 08                	mov    (%rax),%ecx
 805d18b:	83 e1 0f             	and    $0xf,%ecx
 805d18e:	83 f9 0c             	cmp    $0xc,%ecx
 805d191:	0f 84 05 00 00 00    	je     805d19c <save_reg+0x158>
 805d197:	e9 05 00 00 00       	jmpq   805d1a1 <save_reg+0x15d>
 805d19c:	e9 0b 00 00 00       	jmpq   805d1ac <save_reg+0x168>
 805d1a1:	48 8b 05 38 0d 03 00 	mov    0x30d38(%rip),%rax        # 808dee0 <_GLOBAL_OFFSET_TABLE_+0x260>
 805d1a8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805d1ac:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 805d1b0:	48 89 c6             	mov    %rax,%rsi
 805d1b3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805d1b7:	48 89 c7             	mov    %rax,%rdi
 805d1ba:	b8 00 00 00 00       	mov    $0x0,%eax
 805d1bf:	e8 50 3c 00 00       	callq  8060e14 <type_size>
 805d1c4:	89 45 ec             	mov    %eax,-0x14(%rbp)
 805d1c7:	48 8b 05 2a 0e 03 00 	mov    0x30e2a(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 805d1ce:	8b 00                	mov    (%rax),%eax
 805d1d0:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805d1d3:	48 29 c8             	sub    %rcx,%rax
 805d1d6:	b9 00 00 00 00       	mov    $0x0,%ecx
 805d1db:	8b 55 e8             	mov    -0x18(%rbp),%edx
 805d1de:	48 29 d1             	sub    %rdx,%rcx
 805d1e1:	48 21 c8             	and    %rcx,%rax
 805d1e4:	4c 8b 1d 0d 0e 03 00 	mov    0x30e0d(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 805d1eb:	41 89 03             	mov    %eax,(%r11)
 805d1ee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805d1f2:	8b 08                	mov    (%rax),%ecx
 805d1f4:	89 4d b0             	mov    %ecx,-0x50(%rbp)
 805d1f7:	b8 32 01 00 00       	mov    $0x132,%eax
 805d1fc:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
 805d200:	48 8b 05 f1 0d 03 00 	mov    0x30df1(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 805d207:	8b 00                	mov    (%rax),%eax
 805d209:	89 45 c8             	mov    %eax,-0x38(%rbp)
 805d20c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 805d210:	48 89 c6             	mov    %rax,%rsi
 805d213:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d216:	48 89 c7             	mov    %rax,%rdi
 805d219:	b8 00 00 00 00       	mov    $0x0,%eax
 805d21e:	e8 84 1d 02 00       	callq  807efa7 <store>
 805d223:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d226:	83 f8 04             	cmp    $0x4,%eax
 805d229:	0f 85 12 00 00 00    	jne    805d241 <save_reg+0x1fd>
 805d22f:	b8 dd d8 00 00       	mov    $0xd8dd,%eax
 805d234:	48 89 c7             	mov    %rax,%rdi
 805d237:	b8 00 00 00 00       	mov    $0x0,%eax
 805d23c:	e8 10 0a 02 00       	callq  807dc51 <o>
 805d241:	48 8b 05 b0 0d 03 00 	mov    0x30db0(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 805d248:	8b 00                	mov    (%rax),%eax
 805d24a:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805d24d:	b8 01 00 00 00       	mov    $0x1,%eax
 805d252:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805d255:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d259:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d260:	00 00 00 
 805d263:	48 01 c8             	add    %rcx,%rax
 805d266:	0f b7 08             	movzwl (%rax),%ecx
 805d269:	81 e1 00 01 00 00    	and    $0x100,%ecx
 805d26f:	85 c9                	test   %ecx,%ecx
 805d271:	0f 84 36 00 00 00    	je     805d2ad <save_reg+0x269>
 805d277:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d27b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d282:	00 00 00 
 805d285:	48 01 c8             	add    %rcx,%rax
 805d288:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805d28c:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 805d293:	00 00 00 
 805d296:	48 01 d1             	add    %rdx,%rcx
 805d299:	0f b7 11             	movzwl (%rcx),%edx
 805d29c:	81 e2 c0 7f ff ff    	and    $0xffff7fc0,%edx
 805d2a2:	83 ca 31             	or     $0x31,%edx
 805d2a5:	66 89 10             	mov    %dx,(%rax)
 805d2a8:	e9 32 00 00 00       	jmpq   805d2df <save_reg+0x29b>
 805d2ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d2b1:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d2b8:	00 00 00 
 805d2bb:	48 01 c8             	add    %rcx,%rax
 805d2be:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805d2c2:	8b 11                	mov    (%rcx),%edx
 805d2c4:	48 89 d7             	mov    %rdx,%rdi
 805d2c7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 805d2cb:	b8 00 00 00 00       	mov    $0x0,%eax
 805d2d0:	e8 7b 7a 00 00       	callq  8064d50 <lvalue_type>
 805d2d5:	83 c8 32             	or     $0x32,%eax
 805d2d8:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 805d2dc:	66 89 01             	mov    %ax,(%rcx)
 805d2df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d2e3:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805d2ea:	00 00 00 
 805d2ed:	48 01 c8             	add    %rcx,%rax
 805d2f0:	b9 30 00 00 00       	mov    $0x30,%ecx
 805d2f5:	66 89 08             	mov    %cx,(%rax)
 805d2f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805d2fc:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805d303:	00 00 00 
 805d306:	48 01 c8             	add    %rcx,%rax
 805d309:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 805d30c:	89 08                	mov    %ecx,(%rax)
 805d30e:	e9 84 fd ff ff       	jmpq   805d097 <save_reg+0x53>
 805d313:	c9                   	leaveq 
 805d314:	c3                   	retq   

000000000805d315 <get_reg>:
 805d315:	55                   	push   %rbp
 805d316:	48 89 e5             	mov    %rsp,%rbp
 805d319:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805d320:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805d324:	b8 00 00 00 00       	mov    $0x0,%eax
 805d329:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805d32c:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d32f:	83 f8 05             	cmp    $0x5,%eax
 805d332:	0f 8d e8 00 00 00    	jge    805d420 <get_reg+0x10b>
 805d338:	e9 0e 00 00 00       	jmpq   805d34b <get_reg+0x36>
 805d33d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d340:	48 89 c1             	mov    %rax,%rcx
 805d343:	83 c0 01             	add    $0x1,%eax
 805d346:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805d349:	eb e1                	jmp    805d32c <get_reg+0x17>
 805d34b:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d34e:	48 63 c0             	movslq %eax,%rax
 805d351:	48 89 c1             	mov    %rax,%rcx
 805d354:	48 c1 e1 02          	shl    $0x2,%rcx
 805d358:	48 8b 05 a1 0c 03 00 	mov    0x30ca1(%rip),%rax        # 808e000 <_GLOBAL_OFFSET_TABLE_+0x380>
 805d35f:	48 89 ca             	mov    %rcx,%rdx
 805d362:	48 01 d0             	add    %rdx,%rax
 805d365:	8b 08                	mov    (%rax),%ecx
 805d367:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d36a:	48 21 c1             	and    %rax,%rcx
 805d36d:	85 c9                	test   %ecx,%ecx
 805d36f:	0f 84 a6 00 00 00    	je     805d41b <get_reg+0x106>
 805d375:	48 8b 05 6c 0c 03 00 	mov    0x30c6c(%rip),%rax        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805d37c:	48 81 c0 30 00 00 00 	add    $0x30,%rax
 805d383:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805d387:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d38b:	48 8b 0d 8e 0b 03 00 	mov    0x30b8e(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d392:	48 8b 09             	mov    (%rcx),%rcx
 805d395:	48 89 c2             	mov    %rax,%rdx
 805d398:	48 89 c8             	mov    %rcx,%rax
 805d39b:	48 39 c2             	cmp    %rax,%rdx
 805d39e:	0f 87 6f 00 00 00    	ja     805d413 <get_reg+0xfe>
 805d3a4:	e9 1a 00 00 00       	jmpq   805d3c3 <get_reg+0xae>
 805d3a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d3ad:	48 89 c1             	mov    %rax,%rcx
 805d3b0:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805d3b7:	00 00 00 
 805d3ba:	48 01 d0             	add    %rdx,%rax
 805d3bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805d3c1:	eb c4                	jmp    805d387 <get_reg+0x72>
 805d3c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d3c7:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d3ce:	00 00 00 
 805d3d1:	48 01 c8             	add    %rcx,%rax
 805d3d4:	0f b7 08             	movzwl (%rax),%ecx
 805d3d7:	83 e1 3f             	and    $0x3f,%ecx
 805d3da:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d3dd:	39 c1                	cmp    %eax,%ecx
 805d3df:	0f 84 27 00 00 00    	je     805d40c <get_reg+0xf7>
 805d3e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d3e9:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805d3f0:	00 00 00 
 805d3f3:	48 01 c8             	add    %rcx,%rax
 805d3f6:	0f b7 08             	movzwl (%rax),%ecx
 805d3f9:	83 e1 3f             	and    $0x3f,%ecx
 805d3fc:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d3ff:	39 c1                	cmp    %eax,%ecx
 805d401:	0f 84 05 00 00 00    	je     805d40c <get_reg+0xf7>
 805d407:	e9 05 00 00 00       	jmpq   805d411 <get_reg+0xfc>
 805d40c:	e9 0a 00 00 00       	jmpq   805d41b <get_reg+0x106>
 805d411:	eb 96                	jmp    805d3a9 <get_reg+0x94>
 805d413:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d416:	e9 1f 01 00 00       	jmpq   805d53a <get_reg+0x225>
 805d41b:	e9 1d ff ff ff       	jmpq   805d33d <get_reg+0x28>
 805d420:	48 8b 05 c1 0b 03 00 	mov    0x30bc1(%rip),%rax        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805d427:	48 81 c0 30 00 00 00 	add    $0x30,%rax
 805d42e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805d432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d436:	48 8b 0d e3 0a 03 00 	mov    0x30ae3(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d43d:	48 8b 09             	mov    (%rcx),%rcx
 805d440:	48 89 c2             	mov    %rax,%rdx
 805d443:	48 89 c8             	mov    %rcx,%rax
 805d446:	48 39 c2             	cmp    %rax,%rdx
 805d449:	0f 87 e1 00 00 00    	ja     805d530 <get_reg+0x21b>
 805d44f:	e9 1a 00 00 00       	jmpq   805d46e <get_reg+0x159>
 805d454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d458:	48 89 c1             	mov    %rax,%rcx
 805d45b:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805d462:	00 00 00 
 805d465:	48 01 d0             	add    %rdx,%rax
 805d468:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805d46c:	eb c4                	jmp    805d432 <get_reg+0x11d>
 805d46e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d472:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805d479:	00 00 00 
 805d47c:	48 01 c8             	add    %rcx,%rax
 805d47f:	0f b7 08             	movzwl (%rax),%ecx
 805d482:	83 e1 3f             	and    $0x3f,%ecx
 805d485:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805d488:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d48b:	83 f8 30             	cmp    $0x30,%eax
 805d48e:	0f 8d 2f 00 00 00    	jge    805d4c3 <get_reg+0x1ae>
 805d494:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d497:	48 63 c0             	movslq %eax,%rax
 805d49a:	48 89 c1             	mov    %rax,%rcx
 805d49d:	48 c1 e1 02          	shl    $0x2,%rcx
 805d4a1:	48 8b 05 58 0b 03 00 	mov    0x30b58(%rip),%rax        # 808e000 <_GLOBAL_OFFSET_TABLE_+0x380>
 805d4a8:	48 89 ca             	mov    %rcx,%rdx
 805d4ab:	48 01 d0             	add    %rdx,%rax
 805d4ae:	8b 08                	mov    (%rax),%ecx
 805d4b0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d4b3:	48 21 c1             	and    %rax,%rcx
 805d4b6:	85 c9                	test   %ecx,%ecx
 805d4b8:	0f 84 05 00 00 00    	je     805d4c3 <get_reg+0x1ae>
 805d4be:	e9 50 00 00 00       	jmpq   805d513 <get_reg+0x1fe>
 805d4c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d4c7:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d4ce:	00 00 00 
 805d4d1:	48 01 c8             	add    %rcx,%rax
 805d4d4:	0f b7 08             	movzwl (%rax),%ecx
 805d4d7:	83 e1 3f             	and    $0x3f,%ecx
 805d4da:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805d4dd:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d4e0:	83 f8 30             	cmp    $0x30,%eax
 805d4e3:	0f 8d 42 00 00 00    	jge    805d52b <get_reg+0x216>
 805d4e9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d4ec:	48 63 c0             	movslq %eax,%rax
 805d4ef:	48 89 c1             	mov    %rax,%rcx
 805d4f2:	48 c1 e1 02          	shl    $0x2,%rcx
 805d4f6:	48 8b 05 03 0b 03 00 	mov    0x30b03(%rip),%rax        # 808e000 <_GLOBAL_OFFSET_TABLE_+0x380>
 805d4fd:	48 89 ca             	mov    %rcx,%rdx
 805d500:	48 01 d0             	add    %rdx,%rax
 805d503:	8b 08                	mov    (%rax),%ecx
 805d505:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d508:	48 21 c1             	and    %rax,%rcx
 805d50b:	85 c9                	test   %ecx,%ecx
 805d50d:	0f 84 18 00 00 00    	je     805d52b <get_reg+0x216>
 805d513:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d516:	48 89 c7             	mov    %rax,%rdi
 805d519:	b8 00 00 00 00       	mov    $0x0,%eax
 805d51e:	e8 21 fb ff ff       	callq  805d044 <save_reg>
 805d523:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d526:	e9 0f 00 00 00       	jmpq   805d53a <get_reg+0x225>
 805d52b:	e9 24 ff ff ff       	jmpq   805d454 <get_reg+0x13f>
 805d530:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805d535:	e9 00 00 00 00       	jmpq   805d53a <get_reg+0x225>
 805d53a:	c9                   	leaveq 
 805d53b:	c3                   	retq   

000000000805d53c <save_regs>:
 805d53c:	55                   	push   %rbp
 805d53d:	48 89 e5             	mov    %rsp,%rbp
 805d540:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805d547:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805d54b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d54e:	48 63 c0             	movslq %eax,%rax
 805d551:	48 89 c1             	mov    %rax,%rcx
 805d554:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 805d55b:	00 00 00 
 805d55e:	48 0f af c8          	imul   %rax,%rcx
 805d562:	48 8b 05 b7 09 03 00 	mov    0x309b7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d569:	48 8b 00             	mov    (%rax),%rax
 805d56c:	48 89 ca             	mov    %rcx,%rdx
 805d56f:	48 29 d0             	sub    %rdx,%rax
 805d572:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805d576:	48 8b 05 6b 0a 03 00 	mov    0x30a6b(%rip),%rax        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 805d57d:	48 81 c0 30 00 00 00 	add    $0x30,%rax
 805d584:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805d588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d58c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 805d590:	48 89 c2             	mov    %rax,%rdx
 805d593:	48 89 c8             	mov    %rcx,%rax
 805d596:	48 39 c2             	cmp    %rax,%rdx
 805d599:	0f 87 57 00 00 00    	ja     805d5f6 <save_regs+0xba>
 805d59f:	e9 1a 00 00 00       	jmpq   805d5be <save_regs+0x82>
 805d5a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d5a8:	48 89 c1             	mov    %rax,%rcx
 805d5ab:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 805d5b2:	00 00 00 
 805d5b5:	48 01 d0             	add    %rdx,%rax
 805d5b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805d5bc:	eb ca                	jmp    805d588 <save_regs+0x4c>
 805d5be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805d5c2:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d5c9:	00 00 00 
 805d5cc:	48 01 c8             	add    %rcx,%rax
 805d5cf:	0f b7 08             	movzwl (%rax),%ecx
 805d5d2:	83 e1 3f             	and    $0x3f,%ecx
 805d5d5:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805d5d8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d5db:	83 f8 30             	cmp    $0x30,%eax
 805d5de:	0f 8d 10 00 00 00    	jge    805d5f4 <save_regs+0xb8>
 805d5e4:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805d5e7:	48 89 c7             	mov    %rax,%rdi
 805d5ea:	b8 00 00 00 00       	mov    $0x0,%eax
 805d5ef:	e8 50 fa ff ff       	callq  805d044 <save_reg>
 805d5f4:	eb ae                	jmp    805d5a4 <save_regs+0x68>
 805d5f6:	c9                   	leaveq 
 805d5f7:	c3                   	retq   

000000000805d5f8 <move_reg>:
 805d5f8:	55                   	push   %rbp
 805d5f9:	48 89 e5             	mov    %rsp,%rbp
 805d5fc:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805d603:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805d607:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805d60b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d60e:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805d611:	39 c8                	cmp    %ecx,%eax
 805d613:	0f 84 3f 00 00 00    	je     805d658 <move_reg+0x60>
 805d619:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d61c:	48 89 c7             	mov    %rax,%rdi
 805d61f:	b8 00 00 00 00       	mov    $0x0,%eax
 805d624:	e8 1b fa ff ff       	callq  805d044 <save_reg>
 805d629:	b8 00 00 00 00       	mov    $0x0,%eax
 805d62e:	89 45 c0             	mov    %eax,-0x40(%rbp)
 805d631:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
 805d635:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
 805d639:	b8 00 00 00 00       	mov    $0x0,%eax
 805d63e:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805d641:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 805d645:	48 89 c6             	mov    %rax,%rsi
 805d648:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d64b:	48 89 c7             	mov    %rax,%rdi
 805d64e:	b8 00 00 00 00       	mov    $0x0,%eax
 805d653:	e8 89 0f 02 00       	callq  807e5e1 <load>
 805d658:	c9                   	leaveq 
 805d659:	c3                   	retq   

000000000805d65a <gaddrof>:
 805d65a:	55                   	push   %rbp
 805d65b:	48 89 e5             	mov    %rsp,%rbp
 805d65e:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 805d665:	48 8b 05 b4 08 03 00 	mov    0x308b4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d66c:	48 8b 00             	mov    (%rax),%rax
 805d66f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d676:	00 00 00 
 805d679:	48 01 c8             	add    %rcx,%rax
 805d67c:	0f b7 08             	movzwl (%rax),%ecx
 805d67f:	83 e1 40             	and    $0x40,%ecx
 805d682:	85 c9                	test   %ecx,%ecx
 805d684:	0f 84 12 00 00 00    	je     805d69c <gaddrof+0x42>
 805d68a:	b8 01 00 00 00       	mov    $0x1,%eax
 805d68f:	48 89 c7             	mov    %rax,%rdi
 805d692:	b8 00 00 00 00       	mov    $0x0,%eax
 805d697:	e8 8e 00 00 00       	callq  805d72a <gv>
 805d69c:	48 8b 05 7d 08 03 00 	mov    0x3087d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d6a3:	48 8b 00             	mov    (%rax),%rax
 805d6a6:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d6ad:	00 00 00 
 805d6b0:	48 01 c8             	add    %rcx,%rax
 805d6b3:	0f b7 08             	movzwl (%rax),%ecx
 805d6b6:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 805d6bc:	66 89 08             	mov    %cx,(%rax)
 805d6bf:	48 8b 05 5a 08 03 00 	mov    0x3085a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d6c6:	48 8b 00             	mov    (%rax),%rax
 805d6c9:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d6d0:	00 00 00 
 805d6d3:	48 01 c8             	add    %rcx,%rax
 805d6d6:	0f b7 08             	movzwl (%rax),%ecx
 805d6d9:	83 e1 3f             	and    $0x3f,%ecx
 805d6dc:	83 f9 31             	cmp    $0x31,%ecx
 805d6df:	0f 85 43 00 00 00    	jne    805d728 <gaddrof+0xce>
 805d6e5:	48 8b 05 34 08 03 00 	mov    0x30834(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d6ec:	48 8b 00             	mov    (%rax),%rax
 805d6ef:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d6f6:	00 00 00 
 805d6f9:	48 01 c8             	add    %rcx,%rax
 805d6fc:	48 8b 0d 1d 08 03 00 	mov    0x3081d(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d703:	48 8b 09             	mov    (%rcx),%rcx
 805d706:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 805d70d:	00 00 00 
 805d710:	48 01 d1             	add    %rdx,%rcx
 805d713:	0f b7 11             	movzwl (%rcx),%edx
 805d716:	81 e2 c0 8f ff ff    	and    $0xffff8fc0,%edx
 805d71c:	83 ca 32             	or     $0x32,%edx
 805d71f:	81 ca 00 01 00 00    	or     $0x100,%edx
 805d725:	66 89 10             	mov    %dx,(%rax)
 805d728:	c9                   	leaveq 
 805d729:	c3                   	retq   

000000000805d72a <gv>:
 805d72a:	55                   	push   %rbp
 805d72b:	48 89 e5             	mov    %rsp,%rbp
 805d72e:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 805d735:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805d739:	48 8b 05 e0 07 03 00 	mov    0x307e0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d740:	48 8b 00             	mov    (%rax),%rax
 805d743:	8b 08                	mov    (%rax),%ecx
 805d745:	83 e1 40             	and    $0x40,%ecx
 805d748:	85 c9                	test   %ecx,%ecx
 805d74a:	0f 84 37 01 00 00    	je     805d887 <gv+0x15d>
 805d750:	b8 20 00 00 00       	mov    $0x20,%eax
 805d755:	89 45 cc             	mov    %eax,-0x34(%rbp)
 805d758:	48 8b 05 c1 07 03 00 	mov    0x307c1(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d75f:	48 8b 00             	mov    (%rax),%rax
 805d762:	8b 08                	mov    (%rax),%ecx
 805d764:	c1 f9 12             	sar    $0x12,%ecx
 805d767:	83 e1 3f             	and    $0x3f,%ecx
 805d76a:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 805d76d:	48 8b 05 ac 07 03 00 	mov    0x307ac(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d774:	48 8b 00             	mov    (%rax),%rax
 805d777:	8b 08                	mov    (%rax),%ecx
 805d779:	c1 f9 18             	sar    $0x18,%ecx
 805d77c:	83 e1 3f             	and    $0x3f,%ecx
 805d77f:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805d782:	48 8b 05 97 07 03 00 	mov    0x30797(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d789:	48 8b 00             	mov    (%rax),%rax
 805d78c:	8b 08                	mov    (%rax),%ecx
 805d78e:	81 e1 bf ff 03 00    	and    $0x3ffbf,%ecx
 805d794:	89 08                	mov    %ecx,(%rax)
 805d796:	48 8b 05 83 07 03 00 	mov    0x30783(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d79d:	48 8b 00             	mov    (%rax),%rax
 805d7a0:	8b 08                	mov    (%rax),%ecx
 805d7a2:	83 e1 0f             	and    $0xf,%ecx
 805d7a5:	83 f9 0c             	cmp    $0xc,%ecx
 805d7a8:	0f 85 15 00 00 00    	jne    805d7c3 <gv+0x99>
 805d7ae:	b8 0c 00 00 00       	mov    $0xc,%eax
 805d7b3:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805d7b6:	b8 40 00 00 00       	mov    $0x40,%eax
 805d7bb:	89 45 cc             	mov    %eax,-0x34(%rbp)
 805d7be:	e9 08 00 00 00       	jmpq   805d7cb <gv+0xa1>
 805d7c3:	b8 00 00 00 00       	mov    $0x0,%eax
 805d7c8:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805d7cb:	48 8b 05 4e 07 03 00 	mov    0x3074e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d7d2:	48 8b 00             	mov    (%rax),%rax
 805d7d5:	8b 08                	mov    (%rax),%ecx
 805d7d7:	83 e1 10             	and    $0x10,%ecx
 805d7da:	85 c9                	test   %ecx,%ecx
 805d7dc:	0f 85 1d 00 00 00    	jne    805d7ff <gv+0xd5>
 805d7e2:	48 8b 05 37 07 03 00 	mov    0x30737(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d7e9:	48 8b 00             	mov    (%rax),%rax
 805d7ec:	8b 08                	mov    (%rax),%ecx
 805d7ee:	83 e1 0f             	and    $0xf,%ecx
 805d7f1:	83 f9 0b             	cmp    $0xb,%ecx
 805d7f4:	0f 84 05 00 00 00    	je     805d7ff <gv+0xd5>
 805d7fa:	e9 09 00 00 00       	jmpq   805d808 <gv+0xde>
 805d7ff:	8b 45 d0             	mov    -0x30(%rbp),%eax
 805d802:	83 c8 10             	or     $0x10,%eax
 805d805:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805d808:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 805d80c:	48 89 c7             	mov    %rax,%rdi
 805d80f:	b8 00 00 00 00       	mov    $0x0,%eax
 805d814:	e8 7e 2a 00 00       	callq  8060297 <gen_cast>
 805d819:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805d81c:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805d81f:	48 01 c8             	add    %rcx,%rax
 805d822:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 805d825:	48 29 c1             	sub    %rax,%rcx
 805d828:	48 89 cf             	mov    %rcx,%rdi
 805d82b:	b8 00 00 00 00       	mov    $0x0,%eax
 805d830:	e8 c5 ef ff ff       	callq  805c7fa <vpushi>
 805d835:	b8 01 00 00 00       	mov    $0x1,%eax
 805d83a:	48 89 c7             	mov    %rax,%rdi
 805d83d:	b8 00 00 00 00       	mov    $0x0,%eax
 805d842:	e8 79 1f 00 00       	callq  805f7c0 <gen_op>
 805d847:	8b 45 cc             	mov    -0x34(%rbp),%eax
 805d84a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805d84d:	48 29 c8             	sub    %rcx,%rax
 805d850:	48 89 c7             	mov    %rax,%rdi
 805d853:	b8 00 00 00 00       	mov    $0x0,%eax
 805d858:	e8 9d ef ff ff       	callq  805c7fa <vpushi>
 805d85d:	b8 02 00 00 00       	mov    $0x2,%eax
 805d862:	48 89 c7             	mov    %rax,%rdi
 805d865:	b8 00 00 00 00       	mov    $0x0,%eax
 805d86a:	e8 51 1f 00 00       	callq  805f7c0 <gen_op>
 805d86f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805d872:	48 89 c7             	mov    %rax,%rdi
 805d875:	b8 00 00 00 00       	mov    $0x0,%eax
 805d87a:	e8 ab fe ff ff       	callq  805d72a <gv>
 805d87f:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805d882:	e9 7d 04 00 00       	jmpq   805dd04 <gv+0x5da>
 805d887:	48 8b 05 92 06 03 00 	mov    0x30692(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d88e:	48 8b 00             	mov    (%rax),%rax
 805d891:	8b 08                	mov    (%rax),%ecx
 805d893:	48 89 cf             	mov    %rcx,%rdi
 805d896:	b8 00 00 00 00       	mov    $0x0,%eax
 805d89b:	e8 83 e3 ff ff       	callq  805bc23 <is_float>
 805d8a0:	85 c0                	test   %eax,%eax
 805d8a2:	0f 84 52 02 00 00    	je     805dafa <gv+0x3d0>
 805d8a8:	48 8b 05 71 06 03 00 	mov    0x30671(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d8af:	48 8b 00             	mov    (%rax),%rax
 805d8b2:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805d8b9:	00 00 00 
 805d8bc:	48 01 c8             	add    %rcx,%rax
 805d8bf:	0f b7 08             	movzwl (%rax),%ecx
 805d8c2:	81 e1 3f 01 00 00    	and    $0x13f,%ecx
 805d8c8:	83 f9 30             	cmp    $0x30,%ecx
 805d8cb:	0f 85 29 02 00 00    	jne    805dafa <gv+0x3d0>
 805d8d1:	48 8b 05 48 06 03 00 	mov    0x30648(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d8d8:	48 8b 00             	mov    (%rax),%rax
 805d8db:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
 805d8df:	48 89 ce             	mov    %rcx,%rsi
 805d8e2:	48 89 c7             	mov    %rax,%rdi
 805d8e5:	b8 00 00 00 00       	mov    $0x0,%eax
 805d8ea:	e8 25 35 00 00       	callq  8060e14 <type_size>
 805d8ef:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805d8f2:	48 8b 05 7f 06 03 00 	mov    0x3067f(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 805d8f9:	48 8b 00             	mov    (%rax),%rax
 805d8fc:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 805d8ff:	48 63 c9             	movslq %ecx,%rcx
 805d902:	48 8b 10             	mov    (%rax),%rdx
 805d905:	48 89 c8             	mov    %rcx,%rax
 805d908:	48 01 c2             	add    %rax,%rdx
 805d90b:	48 89 d0             	mov    %rdx,%rax
 805d90e:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 805d915:	00 00 00 
 805d918:	48 29 c8             	sub    %rcx,%rax
 805d91b:	b9 00 00 00 00       	mov    $0x0,%ecx
 805d920:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 805d923:	48 29 d1             	sub    %rdx,%rcx
 805d926:	48 63 c9             	movslq %ecx,%rcx
 805d929:	48 89 c2             	mov    %rax,%rdx
 805d92c:	48 89 c8             	mov    %rcx,%rax
 805d92f:	48 21 c2             	and    %rax,%rdx
 805d932:	48 89 d0             	mov    %rdx,%rax
 805d935:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 805d939:	48 8b 05 38 06 03 00 	mov    0x30638(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 805d940:	48 8b 00             	mov    (%rax),%rax
 805d943:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 805d947:	48 89 08             	mov    %rcx,(%rax)
 805d94a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805d94d:	83 f8 10             	cmp    $0x10,%eax
 805d950:	0f 85 59 00 00 00    	jne    805d9af <gv+0x285>
 805d956:	48 8b 05 c3 05 03 00 	mov    0x305c3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d95d:	48 8b 00             	mov    (%rax),%rax
 805d960:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805d967:	00 00 00 
 805d96a:	48 01 c8             	add    %rcx,%rax
 805d96d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 805d974:	00 00 00 
 805d977:	48 01 c8             	add    %rcx,%rax
 805d97a:	8b 08                	mov    (%rax),%ecx
 805d97c:	81 e1 ff ff 00 00    	and    $0xffff,%ecx
 805d982:	89 08                	mov    %ecx,(%rax)
 805d984:	48 8b 05 95 05 03 00 	mov    0x30595(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805d98b:	48 8b 00             	mov    (%rax),%rax
 805d98e:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805d995:	00 00 00 
 805d998:	48 01 c8             	add    %rcx,%rax
 805d99b:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 805d9a2:	00 00 00 
 805d9a5:	48 01 c8             	add    %rcx,%rax
 805d9a8:	b9 00 00 00 00       	mov    $0x0,%ecx
 805d9ad:	89 08                	mov    %ecx,(%rax)
 805d9af:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805d9b2:	48 63 c0             	movslq %eax,%rax
 805d9b5:	48 89 c1             	mov    %rax,%rcx
 805d9b8:	48 89 ce             	mov    %rcx,%rsi
 805d9bb:	48 8b 05 b6 05 03 00 	mov    0x305b6(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 805d9c2:	48 8b 00             	mov    (%rax),%rax
 805d9c5:	48 89 c7             	mov    %rax,%rdi
 805d9c8:	b8 00 00 00 00       	mov    $0x0,%eax
 805d9cd:	e8 98 ee fe ff       	callq  804c86a <section_ptr_add>
 805d9d2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 805d9d6:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805d9d9:	c1 f8 02             	sar    $0x2,%eax
 805d9dc:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805d9df:	b8 00 00 00 00       	mov    $0x0,%eax
 805d9e4:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805d9e7:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805d9ea:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805d9ed:	39 c8                	cmp    %ecx,%eax
 805d9ef:	0f 8d 62 00 00 00    	jge    805da57 <gv+0x32d>
 805d9f5:	e9 0e 00 00 00       	jmpq   805da08 <gv+0x2de>
 805d9fa:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805d9fd:	48 89 c1             	mov    %rax,%rcx
 805da00:	83 c0 01             	add    $0x1,%eax
 805da03:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805da06:	eb df                	jmp    805d9e7 <gv+0x2bd>
 805da08:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805da0b:	48 63 c0             	movslq %eax,%rax
 805da0e:	48 89 c1             	mov    %rax,%rcx
 805da11:	48 c1 e1 02          	shl    $0x2,%rcx
 805da15:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 805da19:	48 89 ca             	mov    %rcx,%rdx
 805da1c:	48 01 d0             	add    %rdx,%rax
 805da1f:	48 8b 0d fa 04 03 00 	mov    0x304fa(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805da26:	48 8b 09             	mov    (%rcx),%rcx
 805da29:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 805da30:	00 00 00 
 805da33:	48 01 d1             	add    %rdx,%rcx
 805da36:	8b 55 e0             	mov    -0x20(%rbp),%edx
 805da39:	48 63 d2             	movslq %edx,%rdx
 805da3c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805da40:	48 89 d0             	mov    %rdx,%rax
 805da43:	48 c1 e0 02          	shl    $0x2,%rax
 805da47:	48 89 c2             	mov    %rax,%rdx
 805da4a:	48 01 d1             	add    %rdx,%rcx
 805da4d:	8b 01                	mov    (%rcx),%eax
 805da4f:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 805da53:	89 01                	mov    %eax,(%rcx)
 805da55:	eb a3                	jmp    805d9fa <gv+0x2d0>
 805da57:	48 8b 05 c2 04 03 00 	mov    0x304c2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805da5e:	48 8b 00             	mov    (%rax),%rax
 805da61:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 805da64:	c1 e1 02             	shl    $0x2,%ecx
 805da67:	48 63 c9             	movslq %ecx,%rcx
 805da6a:	48 89 ca             	mov    %rcx,%rdx
 805da6d:	49 89 d3             	mov    %rdx,%r11
 805da70:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 805da74:	49 89 ca             	mov    %rcx,%r10
 805da77:	48 8b 0d fa 04 03 00 	mov    0x304fa(%rip),%rcx        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 805da7e:	48 8b 09             	mov    (%rcx),%rcx
 805da81:	48 89 ce             	mov    %rcx,%rsi
 805da84:	48 89 c7             	mov    %rax,%rdi
 805da87:	4c 89 d2             	mov    %r10,%rdx
 805da8a:	4c 89 d9             	mov    %r11,%rcx
 805da8d:	b8 00 00 00 00       	mov    $0x0,%eax
 805da92:	e8 83 ee ff ff       	callq  805c91a <get_sym_ref>
 805da97:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805da9b:	48 8b 05 7e 04 03 00 	mov    0x3047e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805daa2:	48 8b 00             	mov    (%rax),%rax
 805daa5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805daac:	00 00 00 
 805daaf:	48 01 c8             	add    %rcx,%rax
 805dab2:	0f b7 08             	movzwl (%rax),%ecx
 805dab5:	81 c9 00 03 00 00    	or     $0x300,%ecx
 805dabb:	66 89 08             	mov    %cx,(%rax)
 805dabe:	48 8b 05 5b 04 03 00 	mov    0x3045b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dac5:	48 8b 00             	mov    (%rax),%rax
 805dac8:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 805dacf:	00 00 00 
 805dad2:	48 01 c8             	add    %rcx,%rax
 805dad5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805dad9:	48 89 08             	mov    %rcx,(%rax)
 805dadc:	48 8b 05 3d 04 03 00 	mov    0x3043d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dae3:	48 8b 00             	mov    (%rax),%rax
 805dae6:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805daed:	00 00 00 
 805daf0:	48 01 c8             	add    %rcx,%rax
 805daf3:	b9 00 00 00 00       	mov    $0x0,%ecx
 805daf8:	89 08                	mov    %ecx,(%rax)
 805dafa:	48 8b 05 1f 04 03 00 	mov    0x3041f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805db01:	48 8b 00             	mov    (%rax),%rax
 805db04:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805db0b:	00 00 00 
 805db0e:	48 01 c8             	add    %rcx,%rax
 805db11:	0f b7 08             	movzwl (%rax),%ecx
 805db14:	83 e1 3f             	and    $0x3f,%ecx
 805db17:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 805db1a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805db1d:	83 f8 30             	cmp    $0x30,%eax
 805db20:	0f 8d 57 00 00 00    	jge    805db7d <gv+0x453>
 805db26:	48 8b 05 f3 03 03 00 	mov    0x303f3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805db2d:	48 8b 00             	mov    (%rax),%rax
 805db30:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805db37:	00 00 00 
 805db3a:	48 01 c8             	add    %rcx,%rax
 805db3d:	0f b7 08             	movzwl (%rax),%ecx
 805db40:	81 e1 00 01 00 00    	and    $0x100,%ecx
 805db46:	85 c9                	test   %ecx,%ecx
 805db48:	0f 85 2f 00 00 00    	jne    805db7d <gv+0x453>
 805db4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805db51:	48 63 c0             	movslq %eax,%rax
 805db54:	48 89 c1             	mov    %rax,%rcx
 805db57:	48 c1 e1 02          	shl    $0x2,%rcx
 805db5b:	48 8b 05 9e 04 03 00 	mov    0x3049e(%rip),%rax        # 808e000 <_GLOBAL_OFFSET_TABLE_+0x380>
 805db62:	48 89 ca             	mov    %rcx,%rdx
 805db65:	48 01 d0             	add    %rdx,%rax
 805db68:	8b 08                	mov    (%rax),%ecx
 805db6a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805db6d:	48 21 c1             	and    %rax,%rcx
 805db70:	85 c9                	test   %ecx,%ecx
 805db72:	0f 84 05 00 00 00    	je     805db7d <gv+0x453>
 805db78:	e9 69 01 00 00       	jmpq   805dce6 <gv+0x5bc>
 805db7d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805db80:	48 89 c7             	mov    %rax,%rdi
 805db83:	b8 00 00 00 00       	mov    $0x0,%eax
 805db88:	e8 88 f7 ff ff       	callq  805d315 <get_reg>
 805db8d:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805db90:	48 8b 05 89 03 03 00 	mov    0x30389(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805db97:	48 8b 00             	mov    (%rax),%rax
 805db9a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805dba1:	00 00 00 
 805dba4:	48 01 c8             	add    %rcx,%rax
 805dba7:	0f b7 08             	movzwl (%rax),%ecx
 805dbaa:	81 e1 00 01 00 00    	and    $0x100,%ecx
 805dbb0:	85 c9                	test   %ecx,%ecx
 805dbb2:	0f 84 11 01 00 00    	je     805dcc9 <gv+0x59f>
 805dbb8:	48 8b 05 61 03 03 00 	mov    0x30361(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dbbf:	48 8b 00             	mov    (%rax),%rax
 805dbc2:	8b 08                	mov    (%rax),%ecx
 805dbc4:	48 89 cf             	mov    %rcx,%rdi
 805dbc7:	b8 00 00 00 00       	mov    $0x0,%eax
 805dbcc:	e8 52 e0 ff ff       	callq  805bc23 <is_float>
 805dbd1:	85 c0                	test   %eax,%eax
 805dbd3:	0f 84 05 00 00 00    	je     805dbde <gv+0x4b4>
 805dbd9:	e9 eb 00 00 00       	jmpq   805dcc9 <gv+0x59f>
 805dbde:	48 8b 05 3b 03 03 00 	mov    0x3033b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dbe5:	48 8b 00             	mov    (%rax),%rax
 805dbe8:	8b 08                	mov    (%rax),%ecx
 805dbea:	89 4d a0             	mov    %ecx,-0x60(%rbp)
 805dbed:	8b 45 a0             	mov    -0x60(%rbp),%eax
 805dbf0:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 805dbf3:	48 8b 05 26 03 03 00 	mov    0x30326(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dbfa:	48 8b 00             	mov    (%rax),%rax
 805dbfd:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805dc04:	00 00 00 
 805dc07:	48 01 c8             	add    %rcx,%rax
 805dc0a:	0f b7 08             	movzwl (%rax),%ecx
 805dc0d:	81 e1 00 10 00 00    	and    $0x1000,%ecx
 805dc13:	85 c9                	test   %ecx,%ecx
 805dc15:	0f 84 0d 00 00 00    	je     805dc28 <gv+0x4fe>
 805dc1b:	b8 01 00 00 00       	mov    $0x1,%eax
 805dc20:	89 45 a0             	mov    %eax,-0x60(%rbp)
 805dc23:	e9 30 00 00 00       	jmpq   805dc58 <gv+0x52e>
 805dc28:	48 8b 05 f1 02 03 00 	mov    0x302f1(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dc2f:	48 8b 00             	mov    (%rax),%rax
 805dc32:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805dc39:	00 00 00 
 805dc3c:	48 01 c8             	add    %rcx,%rax
 805dc3f:	0f b7 08             	movzwl (%rax),%ecx
 805dc42:	81 e1 00 20 00 00    	and    $0x2000,%ecx
 805dc48:	85 c9                	test   %ecx,%ecx
 805dc4a:	0f 84 08 00 00 00    	je     805dc58 <gv+0x52e>
 805dc50:	b8 02 00 00 00       	mov    $0x2,%eax
 805dc55:	89 45 a0             	mov    %eax,-0x60(%rbp)
 805dc58:	48 8b 05 c1 02 03 00 	mov    0x302c1(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dc5f:	48 8b 00             	mov    (%rax),%rax
 805dc62:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805dc69:	00 00 00 
 805dc6c:	48 01 c8             	add    %rcx,%rax
 805dc6f:	0f b7 08             	movzwl (%rax),%ecx
 805dc72:	81 e1 00 40 00 00    	and    $0x4000,%ecx
 805dc78:	85 c9                	test   %ecx,%ecx
 805dc7a:	0f 84 09 00 00 00    	je     805dc89 <gv+0x55f>
 805dc80:	8b 45 a0             	mov    -0x60(%rbp),%eax
 805dc83:	83 c8 10             	or     $0x10,%eax
 805dc86:	89 45 a0             	mov    %eax,-0x60(%rbp)
 805dc89:	48 8b 05 90 02 03 00 	mov    0x30290(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dc90:	48 8b 00             	mov    (%rax),%rax
 805dc93:	8b 4d a0             	mov    -0x60(%rbp),%ecx
 805dc96:	89 08                	mov    %ecx,(%rax)
 805dc98:	48 8b 05 81 02 03 00 	mov    0x30281(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dc9f:	48 8b 00             	mov    (%rax),%rax
 805dca2:	48 89 c6             	mov    %rax,%rsi
 805dca5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805dca8:	48 89 c7             	mov    %rax,%rdi
 805dcab:	b8 00 00 00 00       	mov    $0x0,%eax
 805dcb0:	e8 2c 09 02 00       	callq  807e5e1 <load>
 805dcb5:	48 8b 05 64 02 03 00 	mov    0x30264(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dcbc:	48 8b 00             	mov    (%rax),%rax
 805dcbf:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
 805dcc2:	89 08                	mov    %ecx,(%rax)
 805dcc4:	e9 1d 00 00 00       	jmpq   805dce6 <gv+0x5bc>
 805dcc9:	48 8b 05 50 02 03 00 	mov    0x30250(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dcd0:	48 8b 00             	mov    (%rax),%rax
 805dcd3:	48 89 c6             	mov    %rax,%rsi
 805dcd6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805dcd9:	48 89 c7             	mov    %rax,%rdi
 805dcdc:	b8 00 00 00 00       	mov    $0x0,%eax
 805dce1:	e8 fb 08 02 00       	callq  807e5e1 <load>
 805dce6:	48 8b 05 33 02 03 00 	mov    0x30233(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dced:	48 8b 00             	mov    (%rax),%rax
 805dcf0:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805dcf7:	00 00 00 
 805dcfa:	48 01 c8             	add    %rcx,%rax
 805dcfd:	0f b7 4d f4          	movzwl -0xc(%rbp),%ecx
 805dd01:	66 89 08             	mov    %cx,(%rax)
 805dd04:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805dd07:	e9 00 00 00 00       	jmpq   805dd0c <gv+0x5e2>
 805dd0c:	c9                   	leaveq 
 805dd0d:	c3                   	retq   

000000000805dd0e <gv2>:
 805dd0e:	55                   	push   %rbp
 805dd0f:	48 89 e5             	mov    %rsp,%rbp
 805dd12:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 805dd19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805dd1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805dd21:	48 8b 05 f8 01 03 00 	mov    0x301f8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dd28:	48 8b 00             	mov    (%rax),%rax
 805dd2b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805dd32:	00 00 00 
 805dd35:	48 01 c8             	add    %rcx,%rax
 805dd38:	0f b7 08             	movzwl (%rax),%ecx
 805dd3b:	83 e1 3f             	and    $0x3f,%ecx
 805dd3e:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805dd41:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805dd44:	83 f8 33             	cmp    $0x33,%eax
 805dd47:	0f 84 ad 00 00 00    	je     805ddfa <gv2+0xec>
 805dd4d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805dd50:	83 e0 fe             	and    $0xfffffffe,%eax
 805dd53:	83 f8 34             	cmp    $0x34,%eax
 805dd56:	0f 84 9e 00 00 00    	je     805ddfa <gv2+0xec>
 805dd5c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805dd5f:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805dd62:	39 c8                	cmp    %ecx,%eax
 805dd64:	0f 8f 90 00 00 00    	jg     805ddfa <gv2+0xec>
 805dd6a:	b8 00 00 00 00       	mov    $0x0,%eax
 805dd6f:	e8 da f0 ff ff       	callq  805ce4e <vswap>
 805dd74:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805dd77:	48 89 c7             	mov    %rax,%rdi
 805dd7a:	b8 00 00 00 00       	mov    $0x0,%eax
 805dd7f:	e8 a6 f9 ff ff       	callq  805d72a <gv>
 805dd84:	b8 00 00 00 00       	mov    $0x0,%eax
 805dd89:	e8 c0 f0 ff ff       	callq  805ce4e <vswap>
 805dd8e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805dd91:	48 89 c7             	mov    %rax,%rdi
 805dd94:	b8 00 00 00 00       	mov    $0x0,%eax
 805dd99:	e8 8c f9 ff ff       	callq  805d72a <gv>
 805dd9e:	48 8b 05 7b 01 03 00 	mov    0x3017b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dda5:	48 8b 00             	mov    (%rax),%rax
 805dda8:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805ddaf:	ff ff ff 
 805ddb2:	48 01 c8             	add    %rcx,%rax
 805ddb5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805ddbc:	00 00 00 
 805ddbf:	48 01 c8             	add    %rcx,%rax
 805ddc2:	0f b7 08             	movzwl (%rax),%ecx
 805ddc5:	83 e1 3f             	and    $0x3f,%ecx
 805ddc8:	83 f9 30             	cmp    $0x30,%ecx
 805ddcb:	0f 8c 24 00 00 00    	jl     805ddf5 <gv2+0xe7>
 805ddd1:	b8 00 00 00 00       	mov    $0x0,%eax
 805ddd6:	e8 73 f0 ff ff       	callq  805ce4e <vswap>
 805dddb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ddde:	48 89 c7             	mov    %rax,%rdi
 805dde1:	b8 00 00 00 00       	mov    $0x0,%eax
 805dde6:	e8 3f f9 ff ff       	callq  805d72a <gv>
 805ddeb:	b8 00 00 00 00       	mov    $0x0,%eax
 805ddf0:	e8 59 f0 ff ff       	callq  805ce4e <vswap>
 805ddf5:	e9 6a 00 00 00       	jmpq   805de64 <gv2+0x156>
 805ddfa:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805ddfd:	48 89 c7             	mov    %rax,%rdi
 805de00:	b8 00 00 00 00       	mov    $0x0,%eax
 805de05:	e8 20 f9 ff ff       	callq  805d72a <gv>
 805de0a:	b8 00 00 00 00       	mov    $0x0,%eax
 805de0f:	e8 3a f0 ff ff       	callq  805ce4e <vswap>
 805de14:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805de17:	48 89 c7             	mov    %rax,%rdi
 805de1a:	b8 00 00 00 00       	mov    $0x0,%eax
 805de1f:	e8 06 f9 ff ff       	callq  805d72a <gv>
 805de24:	b8 00 00 00 00       	mov    $0x0,%eax
 805de29:	e8 20 f0 ff ff       	callq  805ce4e <vswap>
 805de2e:	48 8b 05 eb 00 03 00 	mov    0x300eb(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805de35:	48 8b 00             	mov    (%rax),%rax
 805de38:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805de3f:	00 00 00 
 805de42:	48 01 c8             	add    %rcx,%rax
 805de45:	0f b7 08             	movzwl (%rax),%ecx
 805de48:	83 e1 3f             	and    $0x3f,%ecx
 805de4b:	83 f9 30             	cmp    $0x30,%ecx
 805de4e:	0f 8c 10 00 00 00    	jl     805de64 <gv2+0x156>
 805de54:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805de57:	48 89 c7             	mov    %rax,%rdi
 805de5a:	b8 00 00 00 00       	mov    $0x0,%eax
 805de5f:	e8 c6 f8 ff ff       	callq  805d72a <gv>
 805de64:	c9                   	leaveq 
 805de65:	c3                   	retq   

000000000805de66 <rc_fret>:
 805de66:	55                   	push   %rbp
 805de67:	48 89 e5             	mov    %rsp,%rbp
 805de6a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805de71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805de75:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805de78:	83 f8 0a             	cmp    $0xa,%eax
 805de7b:	0f 85 0a 00 00 00    	jne    805de8b <rc_fret+0x25>
 805de81:	b8 40 00 00 00       	mov    $0x40,%eax
 805de86:	e9 0a 00 00 00       	jmpq   805de95 <rc_fret+0x2f>
 805de8b:	b8 20 00 00 00       	mov    $0x20,%eax
 805de90:	e9 00 00 00 00       	jmpq   805de95 <rc_fret+0x2f>
 805de95:	c9                   	leaveq 
 805de96:	c3                   	retq   

000000000805de97 <reg_fret>:
 805de97:	55                   	push   %rbp
 805de98:	48 89 e5             	mov    %rsp,%rbp
 805de9b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805dea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805dea6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805dea9:	83 f8 0a             	cmp    $0xa,%eax
 805deac:	0f 85 0a 00 00 00    	jne    805debc <reg_fret+0x25>
 805deb2:	b8 04 00 00 00       	mov    $0x4,%eax
 805deb7:	e9 0a 00 00 00       	jmpq   805dec6 <reg_fret+0x2f>
 805debc:	b8 03 00 00 00       	mov    $0x3,%eax
 805dec1:	e9 00 00 00 00       	jmpq   805dec6 <reg_fret+0x2f>
 805dec6:	c9                   	leaveq 
 805dec7:	c3                   	retq   

000000000805dec8 <lexpand>:
 805dec8:	55                   	push   %rbp
 805dec9:	48 89 e5             	mov    %rsp,%rbp
 805decc:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805ded3:	48 8b 05 46 00 03 00 	mov    0x30046(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805deda:	48 8b 00             	mov    (%rax),%rax
 805dedd:	8b 08                	mov    (%rax),%ecx
 805dedf:	83 e1 10             	and    $0x10,%ecx
 805dee2:	89 4d fc             	mov    %ecx,-0x4(%rbp)
 805dee5:	b8 01 00 00 00       	mov    $0x1,%eax
 805deea:	48 89 c7             	mov    %rax,%rdi
 805deed:	b8 00 00 00 00       	mov    $0x0,%eax
 805def2:	e8 33 f8 ff ff       	callq  805d72a <gv>
 805def7:	b8 00 00 00 00       	mov    $0x0,%eax
 805defc:	e8 1f f1 ff ff       	callq  805d020 <vdup>
 805df01:	48 8b 05 18 00 03 00 	mov    0x30018(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805df08:	48 8b 00             	mov    (%rax),%rax
 805df0b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805df12:	00 00 00 
 805df15:	48 01 c8             	add    %rcx,%rax
 805df18:	48 8b 0d 01 00 03 00 	mov    0x30001(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805df1f:	48 8b 09             	mov    (%rcx),%rcx
 805df22:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805df29:	ff ff ff 
 805df2c:	48 01 d1             	add    %rdx,%rcx
 805df2f:	48 ba 12 00 00 00 00 	movabs $0x12,%rdx
 805df36:	00 00 00 
 805df39:	48 01 d1             	add    %rdx,%rcx
 805df3c:	0f b7 11             	movzwl (%rcx),%edx
 805df3f:	66 89 10             	mov    %dx,(%rax)
 805df42:	48 8b 05 d7 ff 02 00 	mov    0x2ffd7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805df49:	48 8b 00             	mov    (%rax),%rax
 805df4c:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805df53:	00 00 00 
 805df56:	48 01 c8             	add    %rcx,%rax
 805df59:	b9 30 00 00 00       	mov    $0x30,%ecx
 805df5e:	66 89 08             	mov    %cx,(%rax)
 805df61:	48 8b 05 b8 ff 02 00 	mov    0x2ffb8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805df68:	48 8b 00             	mov    (%rax),%rax
 805df6b:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805df72:	ff ff ff 
 805df75:	48 01 c8             	add    %rcx,%rax
 805df78:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805df7f:	00 00 00 
 805df82:	48 01 c8             	add    %rcx,%rax
 805df85:	b9 30 00 00 00       	mov    $0x30,%ecx
 805df8a:	66 89 08             	mov    %cx,(%rax)
 805df8d:	48 8b 05 8c ff 02 00 	mov    0x2ff8c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805df94:	48 8b 00             	mov    (%rax),%rax
 805df97:	8b 4d fc             	mov    -0x4(%rbp),%ecx
 805df9a:	89 08                	mov    %ecx,(%rax)
 805df9c:	48 8b 05 7d ff 02 00 	mov    0x2ff7d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dfa3:	48 8b 00             	mov    (%rax),%rax
 805dfa6:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805dfad:	ff ff ff 
 805dfb0:	48 01 c8             	add    %rcx,%rax
 805dfb3:	8b 4d fc             	mov    -0x4(%rbp),%ecx
 805dfb6:	89 08                	mov    %ecx,(%rax)
 805dfb8:	c9                   	leaveq 
 805dfb9:	c3                   	retq   

000000000805dfba <lbuild>:
 805dfba:	55                   	push   %rbp
 805dfbb:	48 89 e5             	mov    %rsp,%rbp
 805dfbe:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805dfc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805dfc9:	b8 01 00 00 00       	mov    $0x1,%eax
 805dfce:	48 89 c6             	mov    %rax,%rsi
 805dfd1:	b8 01 00 00 00       	mov    $0x1,%eax
 805dfd6:	48 89 c7             	mov    %rax,%rdi
 805dfd9:	b8 00 00 00 00       	mov    $0x0,%eax
 805dfde:	e8 2b fd ff ff       	callq  805dd0e <gv2>
 805dfe3:	48 8b 05 36 ff 02 00 	mov    0x2ff36(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805dfea:	48 8b 00             	mov    (%rax),%rax
 805dfed:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805dff4:	ff ff ff 
 805dff7:	48 01 c8             	add    %rcx,%rax
 805dffa:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 805e001:	00 00 00 
 805e004:	48 01 c8             	add    %rcx,%rax
 805e007:	48 8b 0d 12 ff 02 00 	mov    0x2ff12(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e00e:	48 8b 09             	mov    (%rcx),%rcx
 805e011:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 805e018:	00 00 00 
 805e01b:	48 01 d1             	add    %rdx,%rcx
 805e01e:	0f b7 11             	movzwl (%rcx),%edx
 805e021:	66 89 10             	mov    %dx,(%rax)
 805e024:	48 8b 05 f5 fe 02 00 	mov    0x2fef5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e02b:	48 8b 00             	mov    (%rax),%rax
 805e02e:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805e035:	ff ff ff 
 805e038:	48 01 c8             	add    %rcx,%rax
 805e03b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805e03e:	89 08                	mov    %ecx,(%rax)
 805e040:	b8 00 00 00 00       	mov    $0x0,%eax
 805e045:	e8 a8 02 00 00       	callq  805e2f2 <vpop>
 805e04a:	c9                   	leaveq 
 805e04b:	c3                   	retq   

000000000805e04c <vrotb>:
 805e04c:	55                   	push   %rbp
 805e04d:	48 89 e5             	mov    %rsp,%rbp
 805e050:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 805e057:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805e05b:	b8 00 00 00 00       	mov    $0x0,%eax
 805e060:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805e063:	48 29 c8             	sub    %rcx,%rax
 805e066:	83 c0 01             	add    $0x1,%eax
 805e069:	48 63 c0             	movslq %eax,%rax
 805e06c:	48 89 c1             	mov    %rax,%rcx
 805e06f:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 805e076:	00 00 00 
 805e079:	48 0f af c8          	imul   %rax,%rcx
 805e07d:	48 8b 05 9c fe 02 00 	mov    0x2fe9c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e084:	48 8b 00             	mov    (%rax),%rax
 805e087:	48 89 ca             	mov    %rcx,%rdx
 805e08a:	48 01 d0             	add    %rdx,%rax
 805e08d:	b9 30 00 00 00       	mov    $0x30,%ecx
 805e092:	49 89 ca             	mov    %rcx,%r10
 805e095:	48 89 c6             	mov    %rax,%rsi
 805e098:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
 805e09c:	48 89 cf             	mov    %rcx,%rdi
 805e09f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 805e0a3:	4c 89 d2             	mov    %r10,%rdx
 805e0a6:	b8 00 00 00 00       	mov    $0x0,%eax
 805e0ab:	e8 c0 8b 02 00       	callq  8086c70 <memcpy>
 805e0b0:	b8 00 00 00 00       	mov    $0x0,%eax
 805e0b5:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805e0b8:	48 29 c8             	sub    %rcx,%rax
 805e0bb:	83 c0 01             	add    $0x1,%eax
 805e0be:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805e0c1:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805e0c4:	83 f8 00             	cmp    $0x0,%eax
 805e0c7:	0f 84 90 00 00 00    	je     805e15d <vrotb+0x111>
 805e0cd:	e9 0e 00 00 00       	jmpq   805e0e0 <vrotb+0x94>
 805e0d2:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805e0d5:	48 89 c1             	mov    %rax,%rcx
 805e0d8:	83 c0 01             	add    $0x1,%eax
 805e0db:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805e0de:	eb e1                	jmp    805e0c1 <vrotb+0x75>
 805e0e0:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805e0e3:	48 63 c0             	movslq %eax,%rax
 805e0e6:	48 89 c1             	mov    %rax,%rcx
 805e0e9:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 805e0f0:	00 00 00 
 805e0f3:	48 0f af c8          	imul   %rax,%rcx
 805e0f7:	48 8b 05 22 fe 02 00 	mov    0x2fe22(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e0fe:	48 8b 00             	mov    (%rax),%rax
 805e101:	48 89 ca             	mov    %rcx,%rdx
 805e104:	48 01 d0             	add    %rdx,%rax
 805e107:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 805e10a:	83 c1 01             	add    $0x1,%ecx
 805e10d:	48 63 c9             	movslq %ecx,%rcx
 805e110:	48 89 ca             	mov    %rcx,%rdx
 805e113:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805e11a:	00 00 00 
 805e11d:	48 0f af d1          	imul   %rcx,%rdx
 805e121:	48 8b 0d f8 fd 02 00 	mov    0x2fdf8(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e128:	48 8b 09             	mov    (%rcx),%rcx
 805e12b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 805e12f:	48 89 d0             	mov    %rdx,%rax
 805e132:	48 01 c1             	add    %rax,%rcx
 805e135:	b8 30 00 00 00       	mov    $0x30,%eax
 805e13a:	49 89 c2             	mov    %rax,%r10
 805e13d:	48 89 ce             	mov    %rcx,%rsi
 805e140:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 805e144:	48 89 c7             	mov    %rax,%rdi
 805e147:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
 805e14b:	4c 89 d2             	mov    %r10,%rdx
 805e14e:	b8 00 00 00 00       	mov    $0x0,%eax
 805e153:	e8 18 8b 02 00       	callq  8086c70 <memcpy>
 805e158:	e9 75 ff ff ff       	jmpq   805e0d2 <vrotb+0x86>
 805e15d:	48 8b 05 bc fd 02 00 	mov    0x2fdbc(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e164:	48 8b 00             	mov    (%rax),%rax
 805e167:	b9 30 00 00 00       	mov    $0x30,%ecx
 805e16c:	49 89 ca             	mov    %rcx,%r10
 805e16f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
 805e173:	48 89 ce             	mov    %rcx,%rsi
 805e176:	48 89 c7             	mov    %rax,%rdi
 805e179:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 805e17d:	4c 89 d2             	mov    %r10,%rdx
 805e180:	b8 00 00 00 00       	mov    $0x0,%eax
 805e185:	e8 e6 8a 02 00       	callq  8086c70 <memcpy>
 805e18a:	c9                   	leaveq 
 805e18b:	c3                   	retq   

000000000805e18c <vrote>:
 805e18c:	55                   	push   %rbp
 805e18d:	48 89 e5             	mov    %rsp,%rbp
 805e190:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 805e197:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805e19b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805e19f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805e1a3:	b9 30 00 00 00       	mov    $0x30,%ecx
 805e1a8:	49 89 ca             	mov    %rcx,%r10
 805e1ab:	48 89 c6             	mov    %rax,%rsi
 805e1ae:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
 805e1b2:	48 89 cf             	mov    %rcx,%rdi
 805e1b5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 805e1b9:	4c 89 d2             	mov    %r10,%rdx
 805e1bc:	b8 00 00 00 00       	mov    $0x0,%eax
 805e1c1:	e8 aa 8a 02 00       	callq  8086c70 <memcpy>
 805e1c6:	b8 00 00 00 00       	mov    $0x0,%eax
 805e1cb:	89 45 ec             	mov    %eax,-0x14(%rbp)
 805e1ce:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805e1d1:	83 e8 01             	sub    $0x1,%eax
 805e1d4:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805e1d7:	39 c1                	cmp    %eax,%ecx
 805e1d9:	0f 8d 94 00 00 00    	jge    805e273 <vrote+0xe7>
 805e1df:	e9 0e 00 00 00       	jmpq   805e1f2 <vrote+0x66>
 805e1e4:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805e1e7:	48 89 c1             	mov    %rax,%rcx
 805e1ea:	83 c0 01             	add    $0x1,%eax
 805e1ed:	89 45 ec             	mov    %eax,-0x14(%rbp)
 805e1f0:	eb dc                	jmp    805e1ce <vrote+0x42>
 805e1f2:	b8 00 00 00 00       	mov    $0x0,%eax
 805e1f7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 805e1fa:	48 29 c8             	sub    %rcx,%rax
 805e1fd:	48 63 c0             	movslq %eax,%rax
 805e200:	48 89 c1             	mov    %rax,%rcx
 805e203:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 805e20a:	00 00 00 
 805e20d:	48 0f af c8          	imul   %rax,%rcx
 805e211:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805e215:	48 89 ca             	mov    %rcx,%rdx
 805e218:	48 01 d0             	add    %rdx,%rax
 805e21b:	b9 00 00 00 00       	mov    $0x0,%ecx
 805e220:	8b 55 ec             	mov    -0x14(%rbp),%edx
 805e223:	48 29 d1             	sub    %rdx,%rcx
 805e226:	83 e9 01             	sub    $0x1,%ecx
 805e229:	48 63 c9             	movslq %ecx,%rcx
 805e22c:	48 89 ca             	mov    %rcx,%rdx
 805e22f:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805e236:	00 00 00 
 805e239:	48 0f af d1          	imul   %rcx,%rdx
 805e23d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 805e241:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805e245:	48 89 d0             	mov    %rdx,%rax
 805e248:	48 01 c1             	add    %rax,%rcx
 805e24b:	b8 30 00 00 00       	mov    $0x30,%eax
 805e250:	49 89 c2             	mov    %rax,%r10
 805e253:	48 89 ce             	mov    %rcx,%rsi
 805e256:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805e25a:	48 89 c7             	mov    %rax,%rdi
 805e25d:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 805e261:	4c 89 d2             	mov    %r10,%rdx
 805e264:	b8 00 00 00 00       	mov    $0x0,%eax
 805e269:	e8 02 8a 02 00       	callq  8086c70 <memcpy>
 805e26e:	e9 71 ff ff ff       	jmpq   805e1e4 <vrote+0x58>
 805e273:	b8 00 00 00 00       	mov    $0x0,%eax
 805e278:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805e27b:	48 29 c8             	sub    %rcx,%rax
 805e27e:	83 c0 01             	add    $0x1,%eax
 805e281:	48 63 c0             	movslq %eax,%rax
 805e284:	48 89 c1             	mov    %rax,%rcx
 805e287:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 805e28e:	00 00 00 
 805e291:	48 0f af c8          	imul   %rax,%rcx
 805e295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805e299:	48 89 ca             	mov    %rcx,%rdx
 805e29c:	48 01 d0             	add    %rdx,%rax
 805e29f:	b9 30 00 00 00       	mov    $0x30,%ecx
 805e2a4:	49 89 ca             	mov    %rcx,%r10
 805e2a7:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
 805e2ab:	48 89 ce             	mov    %rcx,%rsi
 805e2ae:	48 89 c7             	mov    %rax,%rdi
 805e2b1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 805e2b5:	4c 89 d2             	mov    %r10,%rdx
 805e2b8:	b8 00 00 00 00       	mov    $0x0,%eax
 805e2bd:	e8 ae 89 02 00       	callq  8086c70 <memcpy>
 805e2c2:	c9                   	leaveq 
 805e2c3:	c3                   	retq   

000000000805e2c4 <vrott>:
 805e2c4:	55                   	push   %rbp
 805e2c5:	48 89 e5             	mov    %rsp,%rbp
 805e2c8:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805e2cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805e2d3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e2d6:	48 89 c6             	mov    %rax,%rsi
 805e2d9:	48 8b 05 40 fc 02 00 	mov    0x2fc40(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e2e0:	48 8b 00             	mov    (%rax),%rax
 805e2e3:	48 89 c7             	mov    %rax,%rdi
 805e2e6:	b8 00 00 00 00       	mov    $0x0,%eax
 805e2eb:	e8 9c fe ff ff       	callq  805e18c <vrote>
 805e2f0:	c9                   	leaveq 
 805e2f1:	c3                   	retq   

000000000805e2f2 <vpop>:
 805e2f2:	55                   	push   %rbp
 805e2f3:	48 89 e5             	mov    %rsp,%rbp
 805e2f6:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805e2fd:	48 8b 05 1c fc 02 00 	mov    0x2fc1c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e304:	48 8b 00             	mov    (%rax),%rax
 805e307:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805e30e:	00 00 00 
 805e311:	48 01 c8             	add    %rcx,%rax
 805e314:	0f b7 08             	movzwl (%rax),%ecx
 805e317:	83 e1 3f             	and    $0x3f,%ecx
 805e31a:	89 4d fc             	mov    %ecx,-0x4(%rbp)
 805e31d:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805e320:	83 f8 04             	cmp    $0x4,%eax
 805e323:	0f 85 2d 00 00 00    	jne    805e356 <vpop+0x64>
 805e329:	48 8b 05 d0 fb 02 00 	mov    0x2fbd0(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 805e330:	8b 00                	mov    (%rax),%eax
 805e332:	85 c0                	test   %eax,%eax
 805e334:	0f 84 05 00 00 00    	je     805e33f <vpop+0x4d>
 805e33a:	e9 17 00 00 00       	jmpq   805e356 <vpop+0x64>
 805e33f:	b8 dd d8 00 00       	mov    $0xd8dd,%eax
 805e344:	48 89 c7             	mov    %rax,%rdi
 805e347:	b8 00 00 00 00       	mov    $0x0,%eax
 805e34c:	e8 00 f9 01 00       	callq  807dc51 <o>
 805e351:	e9 43 00 00 00       	jmpq   805e399 <vpop+0xa7>
 805e356:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805e359:	83 f8 34             	cmp    $0x34,%eax
 805e35c:	0f 84 11 00 00 00    	je     805e373 <vpop+0x81>
 805e362:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805e365:	83 f8 35             	cmp    $0x35,%eax
 805e368:	0f 84 05 00 00 00    	je     805e373 <vpop+0x81>
 805e36e:	e9 26 00 00 00       	jmpq   805e399 <vpop+0xa7>
 805e373:	48 8b 05 a6 fb 02 00 	mov    0x2fba6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e37a:	48 8b 00             	mov    (%rax),%rax
 805e37d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e384:	00 00 00 
 805e387:	48 01 c8             	add    %rcx,%rax
 805e38a:	8b 08                	mov    (%rax),%ecx
 805e38c:	48 89 cf             	mov    %rcx,%rdi
 805e38f:	b8 00 00 00 00       	mov    $0x0,%eax
 805e394:	e8 72 fb 01 00       	callq  807df0b <gsym>
 805e399:	48 8b 05 80 fb 02 00 	mov    0x2fb80(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e3a0:	48 8b 00             	mov    (%rax),%rax
 805e3a3:	48 89 c1             	mov    %rax,%rcx
 805e3a6:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805e3ad:	ff ff ff 
 805e3b0:	48 01 d0             	add    %rdx,%rax
 805e3b3:	4c 8b 1d 66 fb 02 00 	mov    0x2fb66(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e3ba:	49 89 03             	mov    %rax,(%r11)
 805e3bd:	c9                   	leaveq 
 805e3be:	c3                   	retq   

000000000805e3bf <gv_dup>:
 805e3bf:	55                   	push   %rbp
 805e3c0:	48 89 e5             	mov    %rsp,%rbp
 805e3c3:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805e3ca:	48 8b 05 4f fb 02 00 	mov    0x2fb4f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e3d1:	48 8b 00             	mov    (%rax),%rax
 805e3d4:	8b 08                	mov    (%rax),%ecx
 805e3d6:	89 4d f8             	mov    %ecx,-0x8(%rbp)
 805e3d9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e3dc:	83 e0 0f             	and    $0xf,%eax
 805e3df:	83 f8 0c             	cmp    $0xc,%eax
 805e3e2:	0f 85 a9 00 00 00    	jne    805e491 <gv_dup+0xd2>
 805e3e8:	b8 00 00 00 00       	mov    $0x0,%eax
 805e3ed:	e8 d6 fa ff ff       	callq  805dec8 <lexpand>
 805e3f2:	b8 00 00 00 00       	mov    $0x0,%eax
 805e3f7:	e8 c3 ff ff ff       	callq  805e3bf <gv_dup>
 805e3fc:	b8 00 00 00 00       	mov    $0x0,%eax
 805e401:	e8 48 ea ff ff       	callq  805ce4e <vswap>
 805e406:	b8 03 00 00 00       	mov    $0x3,%eax
 805e40b:	48 89 c7             	mov    %rax,%rdi
 805e40e:	b8 00 00 00 00       	mov    $0x0,%eax
 805e413:	e8 34 fc ff ff       	callq  805e04c <vrotb>
 805e418:	b8 00 00 00 00       	mov    $0x0,%eax
 805e41d:	e8 9d ff ff ff       	callq  805e3bf <gv_dup>
 805e422:	b8 04 00 00 00       	mov    $0x4,%eax
 805e427:	48 89 c7             	mov    %rax,%rdi
 805e42a:	b8 00 00 00 00       	mov    $0x0,%eax
 805e42f:	e8 18 fc ff ff       	callq  805e04c <vrotb>
 805e434:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e437:	48 89 c7             	mov    %rax,%rdi
 805e43a:	b8 00 00 00 00       	mov    $0x0,%eax
 805e43f:	e8 76 fb ff ff       	callq  805dfba <lbuild>
 805e444:	b8 03 00 00 00       	mov    $0x3,%eax
 805e449:	48 89 c7             	mov    %rax,%rdi
 805e44c:	b8 00 00 00 00       	mov    $0x0,%eax
 805e451:	e8 f6 fb ff ff       	callq  805e04c <vrotb>
 805e456:	b8 03 00 00 00       	mov    $0x3,%eax
 805e45b:	48 89 c7             	mov    %rax,%rdi
 805e45e:	b8 00 00 00 00       	mov    $0x0,%eax
 805e463:	e8 e4 fb ff ff       	callq  805e04c <vrotb>
 805e468:	b8 00 00 00 00       	mov    $0x0,%eax
 805e46d:	e8 dc e9 ff ff       	callq  805ce4e <vswap>
 805e472:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e475:	48 89 c7             	mov    %rax,%rdi
 805e478:	b8 00 00 00 00       	mov    $0x0,%eax
 805e47d:	e8 38 fb ff ff       	callq  805dfba <lbuild>
 805e482:	b8 00 00 00 00       	mov    $0x0,%eax
 805e487:	e8 c2 e9 ff ff       	callq  805ce4e <vswap>
 805e48c:	e9 d0 00 00 00       	jmpq   805e561 <gv_dup+0x1a2>
 805e491:	b8 01 00 00 00       	mov    $0x1,%eax
 805e496:	89 45 fc             	mov    %eax,-0x4(%rbp)
 805e499:	b8 00 00 00 00       	mov    $0x0,%eax
 805e49e:	89 45 c0             	mov    %eax,-0x40(%rbp)
 805e4a1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e4a4:	48 89 c7             	mov    %rax,%rdi
 805e4a7:	b8 00 00 00 00       	mov    $0x0,%eax
 805e4ac:	e8 72 d7 ff ff       	callq  805bc23 <is_float>
 805e4b1:	85 c0                	test   %eax,%eax
 805e4b3:	0f 84 25 00 00 00    	je     805e4de <gv_dup+0x11f>
 805e4b9:	b8 02 00 00 00       	mov    $0x2,%eax
 805e4be:	89 45 fc             	mov    %eax,-0x4(%rbp)
 805e4c1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e4c4:	83 e0 0f             	and    $0xf,%eax
 805e4c7:	83 f8 0a             	cmp    $0xa,%eax
 805e4ca:	0f 85 08 00 00 00    	jne    805e4d8 <gv_dup+0x119>
 805e4d0:	b8 40 00 00 00       	mov    $0x40,%eax
 805e4d5:	89 45 fc             	mov    %eax,-0x4(%rbp)
 805e4d8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e4db:	89 45 c0             	mov    %eax,-0x40(%rbp)
 805e4de:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805e4e1:	48 89 c7             	mov    %rax,%rdi
 805e4e4:	b8 00 00 00 00       	mov    $0x0,%eax
 805e4e9:	e8 3c f2 ff ff       	callq  805d72a <gv>
 805e4ee:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805e4f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
 805e4f4:	48 89 c7             	mov    %rax,%rdi
 805e4f7:	b8 00 00 00 00       	mov    $0x0,%eax
 805e4fc:	e8 14 ee ff ff       	callq  805d315 <get_reg>
 805e501:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805e504:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
 805e508:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
 805e50c:	b8 00 00 00 00       	mov    $0x0,%eax
 805e511:	89 45 d8             	mov    %eax,-0x28(%rbp)
 805e514:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 805e518:	48 89 c6             	mov    %rax,%rsi
 805e51b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805e51e:	48 89 c7             	mov    %rax,%rdi
 805e521:	b8 00 00 00 00       	mov    $0x0,%eax
 805e526:	e8 b6 00 02 00       	callq  807e5e1 <load>
 805e52b:	b8 00 00 00 00       	mov    $0x0,%eax
 805e530:	e8 eb ea ff ff       	callq  805d020 <vdup>
 805e535:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805e538:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 805e53b:	39 c8                	cmp    %ecx,%eax
 805e53d:	0f 84 1e 00 00 00    	je     805e561 <gv_dup+0x1a2>
 805e543:	48 8b 05 d6 f9 02 00 	mov    0x2f9d6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e54a:	48 8b 00             	mov    (%rax),%rax
 805e54d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805e554:	00 00 00 
 805e557:	48 01 c8             	add    %rcx,%rax
 805e55a:	0f b7 4d f0          	movzwl -0x10(%rbp),%ecx
 805e55e:	66 89 08             	mov    %cx,(%rax)
 805e561:	c9                   	leaveq 
 805e562:	c3                   	retq   

000000000805e563 <gen_opic>:
 805e563:	55                   	push   %rbp
 805e564:	48 89 e5             	mov    %rsp,%rbp
 805e567:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 805e56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805e572:	48 8b 05 a7 f9 02 00 	mov    0x2f9a7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e579:	48 8b 00             	mov    (%rax),%rax
 805e57c:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805e583:	00 00 00 
 805e586:	48 29 c8             	sub    %rcx,%rax
 805e589:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805e58d:	48 8b 05 8c f9 02 00 	mov    0x2f98c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805e594:	48 8b 00             	mov    (%rax),%rax
 805e597:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 805e59b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805e59f:	8b 08                	mov    (%rax),%ecx
 805e5a1:	83 e1 0f             	and    $0xf,%ecx
 805e5a4:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805e5a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805e5ab:	8b 08                	mov    (%rax),%ecx
 805e5ad:	83 e1 0f             	and    $0xf,%ecx
 805e5b0:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 805e5b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805e5b6:	83 f8 0c             	cmp    $0xc,%eax
 805e5b9:	0f 85 1d 00 00 00    	jne    805e5dc <gen_opic+0x79>
 805e5bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805e5c3:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e5ca:	00 00 00 
 805e5cd:	48 01 c8             	add    %rcx,%rax
 805e5d0:	48 8b 08             	mov    (%rax),%rcx
 805e5d3:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e5d7:	e9 4d 00 00 00       	jmpq   805e629 <gen_opic+0xc6>
 805e5dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805e5e0:	8b 08                	mov    (%rax),%ecx
 805e5e2:	83 e1 10             	and    $0x10,%ecx
 805e5e5:	85 c9                	test   %ecx,%ecx
 805e5e7:	0f 84 1f 00 00 00    	je     805e60c <gen_opic+0xa9>
 805e5ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805e5f1:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e5f8:	00 00 00 
 805e5fb:	48 01 c8             	add    %rcx,%rax
 805e5fe:	8b 08                	mov    (%rax),%ecx
 805e600:	48 89 c8             	mov    %rcx,%rax
 805e603:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805e607:	e9 1d 00 00 00       	jmpq   805e629 <gen_opic+0xc6>
 805e60c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805e610:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e617:	00 00 00 
 805e61a:	48 01 c8             	add    %rcx,%rax
 805e61d:	8b 08                	mov    (%rax),%ecx
 805e61f:	48 63 c9             	movslq %ecx,%rcx
 805e622:	48 89 c8             	mov    %rcx,%rax
 805e625:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805e629:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805e62c:	83 f8 0c             	cmp    $0xc,%eax
 805e62f:	0f 85 1d 00 00 00    	jne    805e652 <gen_opic+0xef>
 805e635:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805e639:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e640:	00 00 00 
 805e643:	48 01 c8             	add    %rcx,%rax
 805e646:	48 8b 08             	mov    (%rax),%rcx
 805e649:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 805e64d:	e9 4d 00 00 00       	jmpq   805e69f <gen_opic+0x13c>
 805e652:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805e656:	8b 08                	mov    (%rax),%ecx
 805e658:	83 e1 10             	and    $0x10,%ecx
 805e65b:	85 c9                	test   %ecx,%ecx
 805e65d:	0f 84 1f 00 00 00    	je     805e682 <gen_opic+0x11f>
 805e663:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805e667:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e66e:	00 00 00 
 805e671:	48 01 c8             	add    %rcx,%rax
 805e674:	8b 08                	mov    (%rax),%ecx
 805e676:	48 89 c8             	mov    %rcx,%rax
 805e679:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805e67d:	e9 1d 00 00 00       	jmpq   805e69f <gen_opic+0x13c>
 805e682:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805e686:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805e68d:	00 00 00 
 805e690:	48 01 c8             	add    %rcx,%rax
 805e693:	8b 08                	mov    (%rax),%ecx
 805e695:	48 63 c9             	movslq %ecx,%rcx
 805e698:	48 89 c8             	mov    %rcx,%rax
 805e69b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805e69f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805e6a3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805e6aa:	00 00 00 
 805e6ad:	48 01 c8             	add    %rcx,%rax
 805e6b0:	0f b7 08             	movzwl (%rax),%ecx
 805e6b3:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 805e6b9:	83 f9 30             	cmp    $0x30,%ecx
 805e6bc:	b8 00 00 00 00       	mov    $0x0,%eax
 805e6c1:	0f 94 c0             	sete   %al
 805e6c4:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805e6c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 805e6cb:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805e6d2:	00 00 00 
 805e6d5:	48 01 c8             	add    %rcx,%rax
 805e6d8:	0f b7 08             	movzwl (%rax),%ecx
 805e6db:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 805e6e1:	83 f9 30             	cmp    $0x30,%ecx
 805e6e4:	b8 00 00 00 00       	mov    $0x0,%eax
 805e6e9:	0f 94 c0             	sete   %al
 805e6ec:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805e6ef:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805e6f2:	85 c0                	test   %eax,%eax
 805e6f4:	0f 84 d4 05 00 00    	je     805ecce <gen_opic+0x76b>
 805e6fa:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805e6fd:	85 c0                	test   %eax,%eax
 805e6ff:	0f 84 c9 05 00 00    	je     805ecce <gen_opic+0x76b>
 805e705:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e708:	e9 05 00 00 00       	jmpq   805e712 <gen_opic+0x1af>
 805e70d:	e9 09 00 00 00       	jmpq   805e71b <gen_opic+0x1b8>
 805e712:	83 f8 2b             	cmp    $0x2b,%eax
 805e715:	0f 85 1c 00 00 00    	jne    805e737 <gen_opic+0x1d4>
 805e71b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e71f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e723:	48 01 c8             	add    %rcx,%rax
 805e726:	48 89 c1             	mov    %rax,%rcx
 805e729:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e72d:	e9 5b 05 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e732:	e9 09 00 00 00       	jmpq   805e740 <gen_opic+0x1dd>
 805e737:	83 f8 2d             	cmp    $0x2d,%eax
 805e73a:	0f 85 1c 00 00 00    	jne    805e75c <gen_opic+0x1f9>
 805e740:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e744:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e748:	48 29 c8             	sub    %rcx,%rax
 805e74b:	48 89 c1             	mov    %rax,%rcx
 805e74e:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e752:	e9 36 05 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e757:	e9 09 00 00 00       	jmpq   805e765 <gen_opic+0x202>
 805e75c:	83 f8 26             	cmp    $0x26,%eax
 805e75f:	0f 85 1c 00 00 00    	jne    805e781 <gen_opic+0x21e>
 805e765:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e769:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e76d:	48 21 c8             	and    %rcx,%rax
 805e770:	48 89 c1             	mov    %rax,%rcx
 805e773:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e777:	e9 11 05 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e77c:	e9 09 00 00 00       	jmpq   805e78a <gen_opic+0x227>
 805e781:	83 f8 5e             	cmp    $0x5e,%eax
 805e784:	0f 85 1c 00 00 00    	jne    805e7a6 <gen_opic+0x243>
 805e78a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e78e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e792:	48 31 c8             	xor    %rcx,%rax
 805e795:	48 89 c1             	mov    %rax,%rcx
 805e798:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e79c:	e9 ec 04 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e7a1:	e9 09 00 00 00       	jmpq   805e7af <gen_opic+0x24c>
 805e7a6:	83 f8 7c             	cmp    $0x7c,%eax
 805e7a9:	0f 85 1c 00 00 00    	jne    805e7cb <gen_opic+0x268>
 805e7af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e7b3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e7b7:	48 09 c8             	or     %rcx,%rax
 805e7ba:	48 89 c1             	mov    %rax,%rcx
 805e7bd:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e7c1:	e9 c7 04 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e7c6:	e9 09 00 00 00       	jmpq   805e7d4 <gen_opic+0x271>
 805e7cb:	83 f8 2a             	cmp    $0x2a,%eax
 805e7ce:	0f 85 1d 00 00 00    	jne    805e7f1 <gen_opic+0x28e>
 805e7d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e7d8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e7dc:	48 0f af c1          	imul   %rcx,%rax
 805e7e0:	48 89 c1             	mov    %rax,%rcx
 805e7e3:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e7e7:	e9 a1 04 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e7ec:	e9 0c 00 00 00       	jmpq   805e7fd <gen_opic+0x29a>
 805e7f1:	81 f8 b2 00 00 00    	cmp    $0xb2,%eax
 805e7f7:	0f 85 05 00 00 00    	jne    805e802 <gen_opic+0x29f>
 805e7fd:	e9 09 00 00 00       	jmpq   805e80b <gen_opic+0x2a8>
 805e802:	83 f8 2f             	cmp    $0x2f,%eax
 805e805:	0f 85 05 00 00 00    	jne    805e810 <gen_opic+0x2ad>
 805e80b:	e9 09 00 00 00       	jmpq   805e819 <gen_opic+0x2b6>
 805e810:	83 f8 25             	cmp    $0x25,%eax
 805e813:	0f 85 05 00 00 00    	jne    805e81e <gen_opic+0x2bb>
 805e819:	e9 0c 00 00 00       	jmpq   805e82a <gen_opic+0x2c7>
 805e81e:	81 f8 b0 00 00 00    	cmp    $0xb0,%eax
 805e824:	0f 85 05 00 00 00    	jne    805e82f <gen_opic+0x2cc>
 805e82a:	e9 0c 00 00 00       	jmpq   805e83b <gen_opic+0x2d8>
 805e82f:	81 f8 b1 00 00 00    	cmp    $0xb1,%eax
 805e835:	0f 85 e5 00 00 00    	jne    805e920 <gen_opic+0x3bd>
 805e83b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805e83f:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805e846:	00 00 00 
 805e849:	48 39 c8             	cmp    %rcx,%rax
 805e84c:	0f 85 2a 00 00 00    	jne    805e87c <gen_opic+0x319>
 805e852:	48 8b 05 af f7 02 00 	mov    0x2f7af(%rip),%rax        # 808e008 <_GLOBAL_OFFSET_TABLE_+0x388>
 805e859:	8b 00                	mov    (%rax),%eax
 805e85b:	85 c0                	test   %eax,%eax
 805e85d:	0f 84 14 00 00 00    	je     805e877 <gen_opic+0x314>
 805e863:	48 8d 05 71 d0 02 00 	lea    0x2d071(%rip),%rax        # 808b8db <L.112>
 805e86a:	48 89 c7             	mov    %rax,%rdi
 805e86d:	b8 00 00 00 00       	mov    $0x0,%eax
 805e872:	e8 50 ee fe ff       	callq  804d6c7 <tcc_error>
 805e877:	e9 28 08 00 00       	jmpq   805f0a4 <gen_opic+0xb41>
 805e87c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805e87f:	e9 1e 00 00 00       	jmpq   805e8a2 <gen_opic+0x33f>
 805e884:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e888:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e88c:	48 99                	cqto   
 805e88e:	48 f7 f9             	idiv   %rcx
 805e891:	48 89 c1             	mov    %rax,%rcx
 805e894:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e898:	e9 79 00 00 00       	jmpq   805e916 <gen_opic+0x3b3>
 805e89d:	e9 09 00 00 00       	jmpq   805e8ab <gen_opic+0x348>
 805e8a2:	83 f8 25             	cmp    $0x25,%eax
 805e8a5:	0f 85 1e 00 00 00    	jne    805e8c9 <gen_opic+0x366>
 805e8ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e8af:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e8b3:	48 99                	cqto   
 805e8b5:	48 f7 f9             	idiv   %rcx
 805e8b8:	48 89 d0             	mov    %rdx,%rax
 805e8bb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805e8bf:	e9 52 00 00 00       	jmpq   805e916 <gen_opic+0x3b3>
 805e8c4:	e9 0c 00 00 00       	jmpq   805e8d5 <gen_opic+0x372>
 805e8c9:	81 f8 b0 00 00 00    	cmp    $0xb0,%eax
 805e8cf:	0f 85 1d 00 00 00    	jne    805e8f2 <gen_opic+0x38f>
 805e8d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e8d9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e8dd:	31 d2                	xor    %edx,%edx
 805e8df:	f7 f1                	div    %ecx
 805e8e1:	48 89 c1             	mov    %rax,%rcx
 805e8e4:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e8e8:	e9 29 00 00 00       	jmpq   805e916 <gen_opic+0x3b3>
 805e8ed:	e9 0c 00 00 00       	jmpq   805e8fe <gen_opic+0x39b>
 805e8f2:	81 f8 b1 00 00 00    	cmp    $0xb1,%eax
 805e8f8:	0f 85 86 ff ff ff    	jne    805e884 <gen_opic+0x321>
 805e8fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e902:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e906:	31 d2                	xor    %edx,%edx
 805e908:	f7 f1                	div    %ecx
 805e90a:	48 89 d0             	mov    %rdx,%rax
 805e90d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805e911:	e9 00 00 00 00       	jmpq   805e916 <gen_opic+0x3b3>
 805e916:	e9 72 03 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e91b:	e9 09 00 00 00       	jmpq   805e929 <gen_opic+0x3c6>
 805e920:	83 f8 01             	cmp    $0x1,%eax
 805e923:	0f 85 27 00 00 00    	jne    805e950 <gen_opic+0x3ed>
 805e929:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805e92d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805e931:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 805e935:	48 89 c1             	mov    %rax,%rcx
 805e938:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 805e93c:	48 d3 e0             	shl    %cl,%rax
 805e93f:	48 89 c1             	mov    %rax,%rcx
 805e942:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e946:	e9 42 03 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e94b:	e9 0c 00 00 00       	jmpq   805e95c <gen_opic+0x3f9>
 805e950:	81 f8 cd 00 00 00    	cmp    $0xcd,%eax
 805e956:	0f 85 27 00 00 00    	jne    805e983 <gen_opic+0x420>
 805e95c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805e960:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805e964:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 805e968:	48 89 c1             	mov    %rax,%rcx
 805e96b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 805e96f:	48 d3 e8             	shr    %cl,%rax
 805e972:	48 89 c1             	mov    %rax,%rcx
 805e975:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e979:	e9 0f 03 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e97e:	e9 09 00 00 00       	jmpq   805e98c <gen_opic+0x429>
 805e983:	83 f8 02             	cmp    $0x2,%eax
 805e986:	0f 85 27 00 00 00    	jne    805e9b3 <gen_opic+0x450>
 805e98c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805e990:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805e994:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
 805e998:	48 89 c1             	mov    %rax,%rcx
 805e99b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 805e99f:	48 d3 f8             	sar    %cl,%rax
 805e9a2:	48 89 c1             	mov    %rax,%rcx
 805e9a5:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e9a9:	e9 df 02 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e9ae:	e9 0c 00 00 00       	jmpq   805e9bf <gen_opic+0x45c>
 805e9b3:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 805e9b9:	0f 85 27 00 00 00    	jne    805e9e6 <gen_opic+0x483>
 805e9bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e9c3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e9c7:	48 39 c8             	cmp    %rcx,%rax
 805e9ca:	b8 00 00 00 00       	mov    $0x0,%eax
 805e9cf:	0f 92 c0             	setb   %al
 805e9d2:	48 63 c0             	movslq %eax,%rax
 805e9d5:	48 89 c1             	mov    %rax,%rcx
 805e9d8:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805e9dc:	e9 ac 02 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805e9e1:	e9 0c 00 00 00       	jmpq   805e9f2 <gen_opic+0x48f>
 805e9e6:	81 f8 93 00 00 00    	cmp    $0x93,%eax
 805e9ec:	0f 85 27 00 00 00    	jne    805ea19 <gen_opic+0x4b6>
 805e9f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805e9f6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805e9fa:	48 39 c8             	cmp    %rcx,%rax
 805e9fd:	b8 00 00 00 00       	mov    $0x0,%eax
 805ea02:	0f 93 c0             	setae  %al
 805ea05:	48 63 c0             	movslq %eax,%rax
 805ea08:	48 89 c1             	mov    %rax,%rcx
 805ea0b:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805ea0f:	e9 79 02 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805ea14:	e9 0c 00 00 00       	jmpq   805ea25 <gen_opic+0x4c2>
 805ea19:	81 f8 94 00 00 00    	cmp    $0x94,%eax
 805ea1f:	0f 85 27 00 00 00    	jne    805ea4c <gen_opic+0x4e9>
 805ea25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805ea29:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805ea2d:	48 39 c8             	cmp    %rcx,%rax
 805ea30:	b8 00 00 00 00       	mov    $0x0,%eax
 805ea35:	0f 94 c0             	sete   %al
 805ea38:	48 63 c0             	movslq %eax,%rax
 805ea3b:	48 89 c1             	mov    %rax,%rcx
 805ea3e:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805ea42:	e9 46 02 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805ea47:	e9 0c 00 00 00       	jmpq   805ea58 <gen_opic+0x4f5>
 805ea4c:	81 f8 95 00 00 00    	cmp    $0x95,%eax
 805ea52:	0f 85 27 00 00 00    	jne    805ea7f <gen_opic+0x51c>
 805ea58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805ea5c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805ea60:	48 39 c8             	cmp    %rcx,%rax
 805ea63:	b8 00 00 00 00       	mov    $0x0,%eax
 805ea68:	0f 95 c0             	setne  %al
 805ea6b:	48 63 c0             	movslq %eax,%rax
 805ea6e:	48 89 c1             	mov    %rax,%rcx
 805ea71:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805ea75:	e9 13 02 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805ea7a:	e9 0c 00 00 00       	jmpq   805ea8b <gen_opic+0x528>
 805ea7f:	81 f8 96 00 00 00    	cmp    $0x96,%eax
 805ea85:	0f 85 27 00 00 00    	jne    805eab2 <gen_opic+0x54f>
 805ea8b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805ea8f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805ea93:	48 39 c8             	cmp    %rcx,%rax
 805ea96:	b8 00 00 00 00       	mov    $0x0,%eax
 805ea9b:	0f 96 c0             	setbe  %al
 805ea9e:	48 63 c0             	movslq %eax,%rax
 805eaa1:	48 89 c1             	mov    %rax,%rcx
 805eaa4:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805eaa8:	e9 e0 01 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805eaad:	e9 0c 00 00 00       	jmpq   805eabe <gen_opic+0x55b>
 805eab2:	81 f8 97 00 00 00    	cmp    $0x97,%eax
 805eab8:	0f 85 27 00 00 00    	jne    805eae5 <gen_opic+0x582>
 805eabe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805eac2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805eac6:	48 39 c8             	cmp    %rcx,%rax
 805eac9:	b8 00 00 00 00       	mov    $0x0,%eax
 805eace:	0f 97 c0             	seta   %al
 805ead1:	48 63 c0             	movslq %eax,%rax
 805ead4:	48 89 c1             	mov    %rax,%rcx
 805ead7:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805eadb:	e9 ad 01 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805eae0:	e9 0c 00 00 00       	jmpq   805eaf1 <gen_opic+0x58e>
 805eae5:	81 f8 9c 00 00 00    	cmp    $0x9c,%eax
 805eaeb:	0f 85 27 00 00 00    	jne    805eb18 <gen_opic+0x5b5>
 805eaf1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805eaf5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805eaf9:	48 39 c8             	cmp    %rcx,%rax
 805eafc:	b8 00 00 00 00       	mov    $0x0,%eax
 805eb01:	0f 9c c0             	setl   %al
 805eb04:	48 63 c0             	movslq %eax,%rax
 805eb07:	48 89 c1             	mov    %rax,%rcx
 805eb0a:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805eb0e:	e9 7a 01 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805eb13:	e9 0c 00 00 00       	jmpq   805eb24 <gen_opic+0x5c1>
 805eb18:	81 f8 9d 00 00 00    	cmp    $0x9d,%eax
 805eb1e:	0f 85 27 00 00 00    	jne    805eb4b <gen_opic+0x5e8>
 805eb24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805eb28:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805eb2c:	48 39 c8             	cmp    %rcx,%rax
 805eb2f:	b8 00 00 00 00       	mov    $0x0,%eax
 805eb34:	0f 9d c0             	setge  %al
 805eb37:	48 63 c0             	movslq %eax,%rax
 805eb3a:	48 89 c1             	mov    %rax,%rcx
 805eb3d:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805eb41:	e9 47 01 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805eb46:	e9 0c 00 00 00       	jmpq   805eb57 <gen_opic+0x5f4>
 805eb4b:	81 f8 9e 00 00 00    	cmp    $0x9e,%eax
 805eb51:	0f 85 27 00 00 00    	jne    805eb7e <gen_opic+0x61b>
 805eb57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805eb5b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805eb5f:	48 39 c8             	cmp    %rcx,%rax
 805eb62:	b8 00 00 00 00       	mov    $0x0,%eax
 805eb67:	0f 9e c0             	setle  %al
 805eb6a:	48 63 c0             	movslq %eax,%rax
 805eb6d:	48 89 c1             	mov    %rax,%rcx
 805eb70:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805eb74:	e9 14 01 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805eb79:	e9 0c 00 00 00       	jmpq   805eb8a <gen_opic+0x627>
 805eb7e:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 805eb84:	0f 85 27 00 00 00    	jne    805ebb1 <gen_opic+0x64e>
 805eb8a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805eb8e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805eb92:	48 39 c8             	cmp    %rcx,%rax
 805eb95:	b8 00 00 00 00       	mov    $0x0,%eax
 805eb9a:	0f 9f c0             	setg   %al
 805eb9d:	48 63 c0             	movslq %eax,%rax
 805eba0:	48 89 c1             	mov    %rax,%rcx
 805eba3:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805eba7:	e9 e1 00 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805ebac:	e9 0c 00 00 00       	jmpq   805ebbd <gen_opic+0x65a>
 805ebb1:	81 f8 a0 00 00 00    	cmp    $0xa0,%eax
 805ebb7:	0f 85 62 00 00 00    	jne    805ec1f <gen_opic+0x6bc>
 805ebbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805ebc1:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805ebc8:	00 00 00 
 805ebcb:	48 39 c8             	cmp    %rcx,%rax
 805ebce:	b8 00 00 00 00       	mov    $0x0,%eax
 805ebd3:	0f 95 c0             	setne  %al
 805ebd6:	85 c0                	test   %eax,%eax
 805ebd8:	0f 84 28 00 00 00    	je     805ec06 <gen_opic+0x6a3>
 805ebde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805ebe2:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805ebe9:	00 00 00 
 805ebec:	48 39 c8             	cmp    %rcx,%rax
 805ebef:	b8 00 00 00 00       	mov    $0x0,%eax
 805ebf4:	0f 95 c0             	setne  %al
 805ebf7:	85 c0                	test   %eax,%eax
 805ebf9:	0f 84 07 00 00 00    	je     805ec06 <gen_opic+0x6a3>
 805ebff:	b8 01 00 00 00       	mov    $0x1,%eax
 805ec04:	eb 05                	jmp    805ec0b <gen_opic+0x6a8>
 805ec06:	b8 00 00 00 00       	mov    $0x0,%eax
 805ec0b:	48 63 c0             	movslq %eax,%rax
 805ec0e:	48 89 c1             	mov    %rax,%rcx
 805ec11:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805ec15:	e9 73 00 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805ec1a:	e9 0c 00 00 00       	jmpq   805ec2b <gen_opic+0x6c8>
 805ec1f:	81 f8 a1 00 00 00    	cmp    $0xa1,%eax
 805ec25:	0f 85 5d 00 00 00    	jne    805ec88 <gen_opic+0x725>
 805ec2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805ec2f:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805ec36:	00 00 00 
 805ec39:	48 39 c8             	cmp    %rcx,%rax
 805ec3c:	b8 00 00 00 00       	mov    $0x0,%eax
 805ec41:	0f 95 c0             	setne  %al
 805ec44:	85 c0                	test   %eax,%eax
 805ec46:	0f 85 28 00 00 00    	jne    805ec74 <gen_opic+0x711>
 805ec4c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805ec50:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805ec57:	00 00 00 
 805ec5a:	48 39 c8             	cmp    %rcx,%rax
 805ec5d:	b8 00 00 00 00       	mov    $0x0,%eax
 805ec62:	0f 95 c0             	setne  %al
 805ec65:	85 c0                	test   %eax,%eax
 805ec67:	0f 85 07 00 00 00    	jne    805ec74 <gen_opic+0x711>
 805ec6d:	b8 00 00 00 00       	mov    $0x0,%eax
 805ec72:	eb 05                	jmp    805ec79 <gen_opic+0x716>
 805ec74:	b8 01 00 00 00       	mov    $0x1,%eax
 805ec79:	48 63 c0             	movslq %eax,%rax
 805ec7c:	48 89 c1             	mov    %rax,%rcx
 805ec7f:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 805ec83:	e9 05 00 00 00       	jmpq   805ec8d <gen_opic+0x72a>
 805ec88:	e9 17 04 00 00       	jmpq   805f0a4 <gen_opic+0xb41>
 805ec8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805ec91:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805ec98:	00 00 00 
 805ec9b:	48 01 c8             	add    %rcx,%rax
 805ec9e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 805eca2:	48 89 08             	mov    %rcx,(%rax)
 805eca5:	48 8b 05 74 f2 02 00 	mov    0x2f274(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ecac:	48 8b 00             	mov    (%rax),%rax
 805ecaf:	48 89 c1             	mov    %rax,%rcx
 805ecb2:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805ecb9:	ff ff ff 
 805ecbc:	48 01 d0             	add    %rdx,%rax
 805ecbf:	4c 8b 1d 5a f2 02 00 	mov    0x2f25a(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ecc6:	49 89 03             	mov    %rax,(%r11)
 805ecc9:	e9 57 04 00 00       	jmpq   805f125 <gen_opic+0xbc2>
 805ecce:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805ecd1:	85 c0                	test   %eax,%eax
 805ecd3:	0f 84 59 00 00 00    	je     805ed32 <gen_opic+0x7cf>
 805ecd9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ecdc:	83 f8 2b             	cmp    $0x2b,%eax
 805ecdf:	0f 84 35 00 00 00    	je     805ed1a <gen_opic+0x7b7>
 805ece5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ece8:	83 f8 26             	cmp    $0x26,%eax
 805eceb:	0f 84 29 00 00 00    	je     805ed1a <gen_opic+0x7b7>
 805ecf1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ecf4:	83 f8 5e             	cmp    $0x5e,%eax
 805ecf7:	0f 84 1d 00 00 00    	je     805ed1a <gen_opic+0x7b7>
 805ecfd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed00:	83 f8 7c             	cmp    $0x7c,%eax
 805ed03:	0f 84 11 00 00 00    	je     805ed1a <gen_opic+0x7b7>
 805ed09:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed0c:	83 f8 2a             	cmp    $0x2a,%eax
 805ed0f:	0f 84 05 00 00 00    	je     805ed1a <gen_opic+0x7b7>
 805ed15:	e9 18 00 00 00       	jmpq   805ed32 <gen_opic+0x7cf>
 805ed1a:	b8 00 00 00 00       	mov    $0x0,%eax
 805ed1f:	e8 2a e1 ff ff       	callq  805ce4e <vswap>
 805ed24:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805ed27:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805ed2a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 805ed2e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805ed32:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805ed35:	85 c0                	test   %eax,%eax
 805ed37:	0f 84 25 01 00 00    	je     805ee62 <gen_opic+0x8ff>
 805ed3d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed40:	83 f8 2a             	cmp    $0x2a,%eax
 805ed43:	0f 84 2f 00 00 00    	je     805ed78 <gen_opic+0x815>
 805ed49:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed4c:	83 f8 2f             	cmp    $0x2f,%eax
 805ed4f:	0f 84 23 00 00 00    	je     805ed78 <gen_opic+0x815>
 805ed55:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed58:	81 f8 b0 00 00 00    	cmp    $0xb0,%eax
 805ed5e:	0f 84 14 00 00 00    	je     805ed78 <gen_opic+0x815>
 805ed64:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed67:	81 f8 b2 00 00 00    	cmp    $0xb2,%eax
 805ed6d:	0f 84 05 00 00 00    	je     805ed78 <gen_opic+0x815>
 805ed73:	e9 1c 00 00 00       	jmpq   805ed94 <gen_opic+0x831>
 805ed78:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805ed7c:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 805ed83:	00 00 00 
 805ed86:	48 39 c8             	cmp    %rcx,%rax
 805ed89:	0f 85 05 00 00 00    	jne    805ed94 <gen_opic+0x831>
 805ed8f:	e9 a5 00 00 00       	jmpq   805ee39 <gen_opic+0x8d6>
 805ed94:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ed97:	83 f8 2b             	cmp    $0x2b,%eax
 805ed9a:	0f 84 50 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805eda0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805eda3:	83 f8 2d             	cmp    $0x2d,%eax
 805eda6:	0f 84 44 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805edac:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805edaf:	83 f8 7c             	cmp    $0x7c,%eax
 805edb2:	0f 84 38 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805edb8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805edbb:	83 f8 5e             	cmp    $0x5e,%eax
 805edbe:	0f 84 2c 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805edc4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805edc7:	83 f8 01             	cmp    $0x1,%eax
 805edca:	0f 84 20 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805edd0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805edd3:	81 f8 cd 00 00 00    	cmp    $0xcd,%eax
 805edd9:	0f 84 11 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805eddf:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ede2:	83 f8 02             	cmp    $0x2,%eax
 805ede5:	0f 84 05 00 00 00    	je     805edf0 <gen_opic+0x88d>
 805edeb:	e9 1c 00 00 00       	jmpq   805ee0c <gen_opic+0x8a9>
 805edf0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805edf4:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805edfb:	00 00 00 
 805edfe:	48 39 c8             	cmp    %rcx,%rax
 805ee01:	0f 85 05 00 00 00    	jne    805ee0c <gen_opic+0x8a9>
 805ee07:	e9 2d 00 00 00       	jmpq   805ee39 <gen_opic+0x8d6>
 805ee0c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ee0f:	83 f8 26             	cmp    $0x26,%eax
 805ee12:	0f 85 1c 00 00 00    	jne    805ee34 <gen_opic+0x8d1>
 805ee18:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805ee1c:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rcx
 805ee23:	ff ff ff 
 805ee26:	48 39 c8             	cmp    %rcx,%rax
 805ee29:	0f 85 05 00 00 00    	jne    805ee34 <gen_opic+0x8d1>
 805ee2f:	e9 05 00 00 00       	jmpq   805ee39 <gen_opic+0x8d6>
 805ee34:	e9 29 00 00 00       	jmpq   805ee62 <gen_opic+0x8ff>
 805ee39:	48 8b 05 e0 f0 02 00 	mov    0x2f0e0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ee40:	48 8b 00             	mov    (%rax),%rax
 805ee43:	48 89 c1             	mov    %rax,%rcx
 805ee46:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805ee4d:	ff ff ff 
 805ee50:	48 01 d0             	add    %rdx,%rax
 805ee53:	4c 8b 1d c6 f0 02 00 	mov    0x2f0c6(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ee5a:	49 89 03             	mov    %rax,(%r11)
 805ee5d:	e9 c3 02 00 00       	jmpq   805f125 <gen_opic+0xbc2>
 805ee62:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805ee65:	85 c0                	test   %eax,%eax
 805ee67:	0f 84 27 01 00 00    	je     805ef94 <gen_opic+0xa31>
 805ee6d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ee70:	83 f8 2a             	cmp    $0x2a,%eax
 805ee73:	0f 84 23 00 00 00    	je     805ee9c <gen_opic+0x939>
 805ee79:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ee7c:	81 f8 b2 00 00 00    	cmp    $0xb2,%eax
 805ee82:	0f 84 14 00 00 00    	je     805ee9c <gen_opic+0x939>
 805ee88:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ee8b:	81 f8 b0 00 00 00    	cmp    $0xb0,%eax
 805ee91:	0f 84 05 00 00 00    	je     805ee9c <gen_opic+0x939>
 805ee97:	e9 f8 00 00 00       	jmpq   805ef94 <gen_opic+0xa31>
 805ee9c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805eea0:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805eea7:	00 00 00 
 805eeaa:	48 39 c8             	cmp    %rcx,%rax
 805eead:	0f 8e d7 00 00 00    	jle    805ef8a <gen_opic+0xa27>
 805eeb3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805eeb7:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 805eebe:	00 00 00 
 805eec1:	48 29 c8             	sub    %rcx,%rax
 805eec4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805eec8:	48 89 c2             	mov    %rax,%rdx
 805eecb:	48 21 d1             	and    %rdx,%rcx
 805eece:	48 89 c8             	mov    %rcx,%rax
 805eed1:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805eed8:	00 00 00 
 805eedb:	48 39 c8             	cmp    %rcx,%rax
 805eede:	0f 85 a6 00 00 00    	jne    805ef8a <gen_opic+0xa27>
 805eee4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805eee9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805eeec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805eef0:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 805eef7:	00 00 00 
 805eefa:	48 39 c8             	cmp    %rcx,%rax
 805eefd:	b8 00 00 00 00       	mov    $0x0,%eax
 805ef02:	0f 95 c0             	setne  %al
 805ef05:	85 c0                	test   %eax,%eax
 805ef07:	0f 84 1d 00 00 00    	je     805ef2a <gen_opic+0x9c7>
 805ef0d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 805ef11:	48 c1 f8 01          	sar    $0x1,%rax
 805ef15:	48 89 c1             	mov    %rax,%rcx
 805ef18:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 805ef1c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805ef1f:	48 89 c1             	mov    %rax,%rcx
 805ef22:	83 c0 01             	add    $0x1,%eax
 805ef25:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805ef28:	eb c2                	jmp    805eeec <gen_opic+0x989>
 805ef2a:	48 8b 05 ef ef 02 00 	mov    0x2efef(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ef31:	48 8b 00             	mov    (%rax),%rax
 805ef34:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805ef3b:	00 00 00 
 805ef3e:	48 01 c8             	add    %rcx,%rax
 805ef41:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 805ef44:	48 63 c9             	movslq %ecx,%rcx
 805ef47:	48 89 ca             	mov    %rcx,%rdx
 805ef4a:	48 89 10             	mov    %rdx,(%rax)
 805ef4d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ef50:	83 f8 2a             	cmp    $0x2a,%eax
 805ef53:	0f 85 0d 00 00 00    	jne    805ef66 <gen_opic+0xa03>
 805ef59:	b8 01 00 00 00       	mov    $0x1,%eax
 805ef5e:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ef61:	e9 24 00 00 00       	jmpq   805ef8a <gen_opic+0xa27>
 805ef66:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ef69:	81 f8 b2 00 00 00    	cmp    $0xb2,%eax
 805ef6f:	0f 85 0d 00 00 00    	jne    805ef82 <gen_opic+0xa1f>
 805ef75:	b8 02 00 00 00       	mov    $0x2,%eax
 805ef7a:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ef7d:	e9 08 00 00 00       	jmpq   805ef8a <gen_opic+0xa27>
 805ef82:	b8 cd 00 00 00       	mov    $0xcd,%eax
 805ef87:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805ef8a:	e9 15 01 00 00       	jmpq   805f0a4 <gen_opic+0xb41>
 805ef8f:	e9 91 01 00 00       	jmpq   805f125 <gen_opic+0xbc2>
 805ef94:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805ef97:	85 c0                	test   %eax,%eax
 805ef99:	0f 84 05 01 00 00    	je     805f0a4 <gen_opic+0xb41>
 805ef9f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805efa2:	83 f8 2b             	cmp    $0x2b,%eax
 805efa5:	0f 84 11 00 00 00    	je     805efbc <gen_opic+0xa59>
 805efab:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805efae:	83 f8 2d             	cmp    $0x2d,%eax
 805efb1:	0f 84 05 00 00 00    	je     805efbc <gen_opic+0xa59>
 805efb7:	e9 e8 00 00 00       	jmpq   805f0a4 <gen_opic+0xb41>
 805efbc:	48 8b 05 5d ef 02 00 	mov    0x2ef5d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805efc3:	48 8b 00             	mov    (%rax),%rax
 805efc6:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805efcd:	ff ff ff 
 805efd0:	48 01 c8             	add    %rcx,%rax
 805efd3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805efda:	00 00 00 
 805efdd:	48 01 c8             	add    %rcx,%rax
 805efe0:	0f b7 08             	movzwl (%rax),%ecx
 805efe3:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 805efe9:	81 f9 30 02 00 00    	cmp    $0x230,%ecx
 805efef:	0f 84 3b 00 00 00    	je     805f030 <gen_opic+0xacd>
 805eff5:	48 8b 05 24 ef 02 00 	mov    0x2ef24(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805effc:	48 8b 00             	mov    (%rax),%rax
 805efff:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805f006:	ff ff ff 
 805f009:	48 01 c8             	add    %rcx,%rax
 805f00c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805f013:	00 00 00 
 805f016:	48 01 c8             	add    %rcx,%rax
 805f019:	0f b7 08             	movzwl (%rax),%ecx
 805f01c:	81 e1 3f 01 00 00    	and    $0x13f,%ecx
 805f022:	83 f9 32             	cmp    $0x32,%ecx
 805f025:	0f 84 05 00 00 00    	je     805f030 <gen_opic+0xacd>
 805f02b:	e9 74 00 00 00       	jmpq   805f0a4 <gen_opic+0xb41>
 805f030:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f033:	83 f8 2d             	cmp    $0x2d,%eax
 805f036:	0f 85 18 00 00 00    	jne    805f054 <gen_opic+0xaf1>
 805f03c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 805f043:	00 00 00 
 805f046:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 805f04a:	48 29 c8             	sub    %rcx,%rax
 805f04d:	48 89 c1             	mov    %rax,%rcx
 805f050:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 805f054:	48 8b 05 c5 ee 02 00 	mov    0x2eec5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f05b:	48 8b 00             	mov    (%rax),%rax
 805f05e:	48 89 c1             	mov    %rax,%rcx
 805f061:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805f068:	ff ff ff 
 805f06b:	48 01 d0             	add    %rdx,%rax
 805f06e:	4c 8b 1d ab ee 02 00 	mov    0x2eeab(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f075:	49 89 03             	mov    %rax,(%r11)
 805f078:	48 8b 05 a1 ee 02 00 	mov    0x2eea1(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f07f:	48 8b 00             	mov    (%rax),%rax
 805f082:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f089:	00 00 00 
 805f08c:	48 01 c8             	add    %rcx,%rax
 805f08f:	48 8b 08             	mov    (%rax),%rcx
 805f092:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
 805f096:	48 01 d1             	add    %rdx,%rcx
 805f099:	48 89 ca             	mov    %rcx,%rdx
 805f09c:	48 89 10             	mov    %rdx,(%rax)
 805f09f:	e9 81 00 00 00       	jmpq   805f125 <gen_opic+0xbc2>
 805f0a4:	48 8b 05 55 ee 02 00 	mov    0x2ee55(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 805f0ab:	8b 00                	mov    (%rax),%eax
 805f0ad:	85 c0                	test   %eax,%eax
 805f0af:	0f 84 05 00 00 00    	je     805f0ba <gen_opic+0xb57>
 805f0b5:	e9 47 00 00 00       	jmpq   805f101 <gen_opic+0xb9e>
 805f0ba:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805f0bd:	83 f8 0c             	cmp    $0xc,%eax
 805f0c0:	0f 84 11 00 00 00    	je     805f0d7 <gen_opic+0xb74>
 805f0c6:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f0c9:	83 f8 0c             	cmp    $0xc,%eax
 805f0cc:	0f 84 05 00 00 00    	je     805f0d7 <gen_opic+0xb74>
 805f0d2:	e9 15 00 00 00       	jmpq   805f0ec <gen_opic+0xb89>
 805f0d7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f0da:	48 89 c7             	mov    %rax,%rdi
 805f0dd:	b8 00 00 00 00       	mov    $0x0,%eax
 805f0e2:	e8 d3 24 02 00       	callq  80815ba <gen_opl>
 805f0e7:	e9 10 00 00 00       	jmpq   805f0fc <gen_opic+0xb99>
 805f0ec:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f0ef:	48 89 c7             	mov    %rax,%rdi
 805f0f2:	b8 00 00 00 00       	mov    $0x0,%eax
 805f0f7:	e8 cd 1b 02 00       	callq  8080cc9 <gen_opi>
 805f0fc:	e9 24 00 00 00       	jmpq   805f125 <gen_opic+0xbc2>
 805f101:	48 8b 05 18 ee 02 00 	mov    0x2ee18(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f108:	48 8b 00             	mov    (%rax),%rax
 805f10b:	48 89 c1             	mov    %rax,%rcx
 805f10e:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805f115:	ff ff ff 
 805f118:	48 01 d0             	add    %rdx,%rax
 805f11b:	4c 8b 1d fe ed 02 00 	mov    0x2edfe(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f122:	49 89 03             	mov    %rax,(%r11)
 805f125:	c9                   	leaveq 
 805f126:	c3                   	retq   

000000000805f127 <gen_opif>:
 805f127:	55                   	push   %rbp
 805f128:	48 89 e5             	mov    %rsp,%rbp
 805f12b:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805f132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805f136:	48 8b 05 e3 ed 02 00 	mov    0x2ede3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f13d:	48 8b 00             	mov    (%rax),%rax
 805f140:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805f147:	00 00 00 
 805f14a:	48 29 c8             	sub    %rcx,%rax
 805f14d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 805f151:	48 8b 05 c8 ed 02 00 	mov    0x2edc8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f158:	48 8b 00             	mov    (%rax),%rax
 805f15b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805f15f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f163:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805f16a:	00 00 00 
 805f16d:	48 01 c8             	add    %rcx,%rax
 805f170:	0f b7 08             	movzwl (%rax),%ecx
 805f173:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 805f179:	83 f9 30             	cmp    $0x30,%ecx
 805f17c:	b8 00 00 00 00       	mov    $0x0,%eax
 805f181:	0f 94 c0             	sete   %al
 805f184:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805f187:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f18b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 805f192:	00 00 00 
 805f195:	48 01 c8             	add    %rcx,%rax
 805f198:	0f b7 08             	movzwl (%rax),%ecx
 805f19b:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 805f1a1:	83 f9 30             	cmp    $0x30,%ecx
 805f1a4:	b8 00 00 00 00       	mov    $0x0,%eax
 805f1a9:	0f 94 c0             	sete   %al
 805f1ac:	89 45 f0             	mov    %eax,-0x10(%rbp)
 805f1af:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805f1b2:	85 c0                	test   %eax,%eax
 805f1b4:	0f 84 d4 02 00 00    	je     805f48e <gen_opif+0x367>
 805f1ba:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805f1bd:	85 c0                	test   %eax,%eax
 805f1bf:	0f 84 c9 02 00 00    	je     805f48e <gen_opif+0x367>
 805f1c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f1c9:	8b 08                	mov    (%rax),%ecx
 805f1cb:	83 f9 08             	cmp    $0x8,%ecx
 805f1ce:	0f 85 51 00 00 00    	jne    805f225 <gen_opif+0xfe>
 805f1d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f1d8:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f1df:	00 00 00 
 805f1e2:	48 01 c8             	add    %rcx,%rax
 805f1e5:	66 0f 6e 00          	movd   (%rax),%xmm0
 805f1e9:	f3 0f 11 44 24 f0    	movss  %xmm0,-0x10(%rsp)
 805f1ef:	d9 44 24 f0          	flds   -0x10(%rsp)
 805f1f3:	d9 c0                	fld    %st(0)
 805f1f5:	db 7d d0             	fstpt  -0x30(%rbp)
 805f1f8:	dd d9                	fstp   %st(1)
 805f1fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f1fe:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f205:	00 00 00 
 805f208:	48 01 c8             	add    %rcx,%rax
 805f20b:	66 0f 6e 00          	movd   (%rax),%xmm0
 805f20f:	f3 0f 11 44 24 f0    	movss  %xmm0,-0x10(%rsp)
 805f215:	d9 44 24 f0          	flds   -0x10(%rsp)
 805f219:	d9 c0                	fld    %st(0)
 805f21b:	db 7d c0             	fstpt  -0x40(%rbp)
 805f21e:	dd d9                	fstp   %st(1)
 805f220:	e9 94 00 00 00       	jmpq   805f2b9 <gen_opif+0x192>
 805f225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f229:	8b 08                	mov    (%rax),%ecx
 805f22b:	83 f9 09             	cmp    $0x9,%ecx
 805f22e:	0f 85 51 00 00 00    	jne    805f285 <gen_opif+0x15e>
 805f234:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f238:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f23f:	00 00 00 
 805f242:	48 01 c8             	add    %rcx,%rax
 805f245:	f3 0f 7e 00          	movq   (%rax),%xmm0
 805f249:	f2 0f 11 44 24 f0    	movsd  %xmm0,-0x10(%rsp)
 805f24f:	dd 44 24 f0          	fldl   -0x10(%rsp)
 805f253:	d9 c0                	fld    %st(0)
 805f255:	db 7d d0             	fstpt  -0x30(%rbp)
 805f258:	dd d9                	fstp   %st(1)
 805f25a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f25e:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f265:	00 00 00 
 805f268:	48 01 c8             	add    %rcx,%rax
 805f26b:	f3 0f 7e 00          	movq   (%rax),%xmm0
 805f26f:	f2 0f 11 44 24 f0    	movsd  %xmm0,-0x10(%rsp)
 805f275:	dd 44 24 f0          	fldl   -0x10(%rsp)
 805f279:	d9 c0                	fld    %st(0)
 805f27b:	db 7d c0             	fstpt  -0x40(%rbp)
 805f27e:	dd d9                	fstp   %st(1)
 805f280:	e9 34 00 00 00       	jmpq   805f2b9 <gen_opif+0x192>
 805f285:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f289:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f290:	00 00 00 
 805f293:	48 01 c8             	add    %rcx,%rax
 805f296:	db 28                	fldt   (%rax)
 805f298:	d9 c0                	fld    %st(0)
 805f29a:	db 7d d0             	fstpt  -0x30(%rbp)
 805f29d:	dd d9                	fstp   %st(1)
 805f29f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f2a3:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f2aa:	00 00 00 
 805f2ad:	48 01 c8             	add    %rcx,%rax
 805f2b0:	db 28                	fldt   (%rax)
 805f2b2:	d9 c0                	fld    %st(0)
 805f2b4:	db 7d c0             	fstpt  -0x40(%rbp)
 805f2b7:	dd d9                	fstp   %st(1)
 805f2b9:	db 6d d0             	fldt   -0x30(%rbp)
 805f2bc:	dd 5c 24 f0          	fstpl  -0x10(%rsp)
 805f2c0:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
 805f2c6:	0f 28 c0             	movaps %xmm0,%xmm0
 805f2c9:	b8 01 00 00 00       	mov    $0x1,%eax
 805f2ce:	e8 9f c9 ff ff       	callq  805bc72 <ieee_finite>
 805f2d3:	85 c0                	test   %eax,%eax
 805f2d5:	0f 84 27 00 00 00    	je     805f302 <gen_opif+0x1db>
 805f2db:	db 6d c0             	fldt   -0x40(%rbp)
 805f2de:	dd 5c 24 f0          	fstpl  -0x10(%rsp)
 805f2e2:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
 805f2e8:	0f 28 c0             	movaps %xmm0,%xmm0
 805f2eb:	b8 01 00 00 00       	mov    $0x1,%eax
 805f2f0:	e8 7d c9 ff ff       	callq  805bc72 <ieee_finite>
 805f2f5:	85 c0                	test   %eax,%eax
 805f2f7:	0f 84 05 00 00 00    	je     805f302 <gen_opif+0x1db>
 805f2fd:	e9 05 00 00 00       	jmpq   805f307 <gen_opif+0x1e0>
 805f302:	e9 87 01 00 00       	jmpq   805f48e <gen_opif+0x367>
 805f307:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f30a:	e9 05 00 00 00       	jmpq   805f314 <gen_opif+0x1ed>
 805f30f:	e9 09 00 00 00       	jmpq   805f31d <gen_opif+0x1f6>
 805f314:	83 f8 2b             	cmp    $0x2b,%eax
 805f317:	0f 85 19 00 00 00    	jne    805f336 <gen_opif+0x20f>
 805f31d:	db 6d d0             	fldt   -0x30(%rbp)
 805f320:	db 6d c0             	fldt   -0x40(%rbp)
 805f323:	de c1                	faddp  %st,%st(1)
 805f325:	d9 c0                	fld    %st(0)
 805f327:	db 7d d0             	fstpt  -0x30(%rbp)
 805f32a:	dd d9                	fstp   %st(1)
 805f32c:	e9 ae 00 00 00       	jmpq   805f3df <gen_opif+0x2b8>
 805f331:	e9 09 00 00 00       	jmpq   805f33f <gen_opif+0x218>
 805f336:	83 f8 2d             	cmp    $0x2d,%eax
 805f339:	0f 85 19 00 00 00    	jne    805f358 <gen_opif+0x231>
 805f33f:	db 6d d0             	fldt   -0x30(%rbp)
 805f342:	db 6d c0             	fldt   -0x40(%rbp)
 805f345:	de e9                	fsubrp %st,%st(1)
 805f347:	d9 c0                	fld    %st(0)
 805f349:	db 7d d0             	fstpt  -0x30(%rbp)
 805f34c:	dd d9                	fstp   %st(1)
 805f34e:	e9 8c 00 00 00       	jmpq   805f3df <gen_opif+0x2b8>
 805f353:	e9 09 00 00 00       	jmpq   805f361 <gen_opif+0x23a>
 805f358:	83 f8 2a             	cmp    $0x2a,%eax
 805f35b:	0f 85 19 00 00 00    	jne    805f37a <gen_opif+0x253>
 805f361:	db 6d d0             	fldt   -0x30(%rbp)
 805f364:	db 6d c0             	fldt   -0x40(%rbp)
 805f367:	de c9                	fmulp  %st,%st(1)
 805f369:	d9 c0                	fld    %st(0)
 805f36b:	db 7d d0             	fstpt  -0x30(%rbp)
 805f36e:	dd d9                	fstp   %st(1)
 805f370:	e9 6a 00 00 00       	jmpq   805f3df <gen_opif+0x2b8>
 805f375:	e9 09 00 00 00       	jmpq   805f383 <gen_opif+0x25c>
 805f37a:	83 f8 2f             	cmp    $0x2f,%eax
 805f37d:	0f 85 57 00 00 00    	jne    805f3da <gen_opif+0x2b3>
 805f383:	db 2d 6f c5 02 00    	fldt   0x2c56f(%rip)        # 808b8f8 <L.113>
 805f389:	db 6d c0             	fldt   -0x40(%rbp)
 805f38c:	da e9                	fucompp 
 805f38e:	df e0                	fnstsw %ax
 805f390:	80 e4 45             	and    $0x45,%ah
 805f393:	80 fc 40             	cmp    $0x40,%ah
 805f396:	0f 85 2a 00 00 00    	jne    805f3c6 <gen_opif+0x29f>
 805f39c:	48 8b 05 65 ec 02 00 	mov    0x2ec65(%rip),%rax        # 808e008 <_GLOBAL_OFFSET_TABLE_+0x388>
 805f3a3:	8b 00                	mov    (%rax),%eax
 805f3a5:	85 c0                	test   %eax,%eax
 805f3a7:	0f 84 14 00 00 00    	je     805f3c1 <gen_opif+0x29a>
 805f3ad:	48 8d 05 54 c5 02 00 	lea    0x2c554(%rip),%rax        # 808b908 <L.114>
 805f3b4:	48 89 c7             	mov    %rax,%rdi
 805f3b7:	b8 00 00 00 00       	mov    $0x0,%eax
 805f3bc:	e8 06 e3 fe ff       	callq  804d6c7 <tcc_error>
 805f3c1:	e9 c8 00 00 00       	jmpq   805f48e <gen_opif+0x367>
 805f3c6:	db 6d d0             	fldt   -0x30(%rbp)
 805f3c9:	db 6d c0             	fldt   -0x40(%rbp)
 805f3cc:	de f9                	fdivrp %st,%st(1)
 805f3ce:	d9 c0                	fld    %st(0)
 805f3d0:	db 7d d0             	fstpt  -0x30(%rbp)
 805f3d3:	dd d9                	fstp   %st(1)
 805f3d5:	e9 05 00 00 00       	jmpq   805f3df <gen_opif+0x2b8>
 805f3da:	e9 af 00 00 00       	jmpq   805f48e <gen_opif+0x367>
 805f3df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f3e3:	8b 08                	mov    (%rax),%ecx
 805f3e5:	83 f9 08             	cmp    $0x8,%ecx
 805f3e8:	0f 85 27 00 00 00    	jne    805f415 <gen_opif+0x2ee>
 805f3ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f3f2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f3f9:	00 00 00 
 805f3fc:	48 01 c8             	add    %rcx,%rax
 805f3ff:	db 6d d0             	fldt   -0x30(%rbp)
 805f402:	d9 5c 24 f0          	fstps  -0x10(%rsp)
 805f406:	f3 0f 10 44 24 f0    	movss  -0x10(%rsp),%xmm0
 805f40c:	66 0f 7e 00          	movd   %xmm0,(%rax)
 805f410:	e9 50 00 00 00       	jmpq   805f465 <gen_opif+0x33e>
 805f415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f419:	8b 08                	mov    (%rax),%ecx
 805f41b:	83 f9 09             	cmp    $0x9,%ecx
 805f41e:	0f 85 27 00 00 00    	jne    805f44b <gen_opif+0x324>
 805f424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f428:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f42f:	00 00 00 
 805f432:	48 01 c8             	add    %rcx,%rax
 805f435:	db 6d d0             	fldt   -0x30(%rbp)
 805f438:	dd 5c 24 f0          	fstpl  -0x10(%rsp)
 805f43c:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
 805f442:	66 0f d6 00          	movq   %xmm0,(%rax)
 805f446:	e9 1a 00 00 00       	jmpq   805f465 <gen_opif+0x33e>
 805f44b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 805f44f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 805f456:	00 00 00 
 805f459:	48 01 c8             	add    %rcx,%rax
 805f45c:	db 6d d0             	fldt   -0x30(%rbp)
 805f45f:	d9 c0                	fld    %st(0)
 805f461:	db 38                	fstpt  (%rax)
 805f463:	dd d9                	fstp   %st(1)
 805f465:	48 8b 05 b4 ea 02 00 	mov    0x2eab4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f46c:	48 8b 00             	mov    (%rax),%rax
 805f46f:	48 89 c1             	mov    %rax,%rcx
 805f472:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805f479:	ff ff ff 
 805f47c:	48 01 d0             	add    %rdx,%rax
 805f47f:	4c 8b 1d 9a ea 02 00 	mov    0x2ea9a(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f486:	49 89 03             	mov    %rax,(%r11)
 805f489:	e9 4f 00 00 00       	jmpq   805f4dd <gen_opif+0x3b6>
 805f48e:	48 8b 05 6b ea 02 00 	mov    0x2ea6b(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 805f495:	8b 00                	mov    (%rax),%eax
 805f497:	85 c0                	test   %eax,%eax
 805f499:	0f 84 05 00 00 00    	je     805f4a4 <gen_opif+0x37d>
 805f49f:	e9 15 00 00 00       	jmpq   805f4b9 <gen_opif+0x392>
 805f4a4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f4a7:	48 89 c7             	mov    %rax,%rdi
 805f4aa:	b8 00 00 00 00       	mov    $0x0,%eax
 805f4af:	e8 27 21 02 00       	callq  80815db <gen_opf>
 805f4b4:	e9 24 00 00 00       	jmpq   805f4dd <gen_opif+0x3b6>
 805f4b9:	48 8b 05 60 ea 02 00 	mov    0x2ea60(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f4c0:	48 8b 00             	mov    (%rax),%rax
 805f4c3:	48 89 c1             	mov    %rax,%rcx
 805f4c6:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 805f4cd:	ff ff ff 
 805f4d0:	48 01 d0             	add    %rdx,%rax
 805f4d3:	4c 8b 1d 46 ea 02 00 	mov    0x2ea46(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f4da:	49 89 03             	mov    %rax,(%r11)
 805f4dd:	c9                   	leaveq 
 805f4de:	c3                   	retq   

000000000805f4df <pointed_size>:
 805f4df:	55                   	push   %rbp
 805f4e0:	48 89 e5             	mov    %rsp,%rbp
 805f4e3:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805f4ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805f4ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805f4f2:	48 89 c7             	mov    %rax,%rdi
 805f4f5:	b8 00 00 00 00       	mov    $0x0,%eax
 805f4fa:	e8 80 e1 00 00       	callq  806d67f <pointed_type>
 805f4ff:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
 805f503:	48 89 ce             	mov    %rcx,%rsi
 805f506:	48 89 c7             	mov    %rax,%rdi
 805f509:	b8 00 00 00 00       	mov    $0x0,%eax
 805f50e:	e8 01 19 00 00       	callq  8060e14 <type_size>
 805f513:	e9 00 00 00 00       	jmpq   805f518 <pointed_size+0x39>
 805f518:	c9                   	leaveq 
 805f519:	c3                   	retq   

000000000805f51a <vla_runtime_pointed_size>:
 805f51a:	55                   	push   %rbp
 805f51b:	48 89 e5             	mov    %rsp,%rbp
 805f51e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805f525:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805f529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805f52d:	48 89 c7             	mov    %rax,%rdi
 805f530:	b8 00 00 00 00       	mov    $0x0,%eax
 805f535:	e8 45 e1 00 00       	callq  806d67f <pointed_type>
 805f53a:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
 805f53e:	48 89 ce             	mov    %rcx,%rsi
 805f541:	48 89 c7             	mov    %rax,%rdi
 805f544:	b8 00 00 00 00       	mov    $0x0,%eax
 805f549:	e8 07 1b 00 00       	callq  8061055 <vla_runtime_type_size>
 805f54e:	c9                   	leaveq 
 805f54f:	c3                   	retq   

000000000805f550 <check_comparison_pointer_types>:
 805f550:	55                   	push   %rbp
 805f551:	48 89 e5             	mov    %rsp,%rbp
 805f554:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 805f55b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805f55f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 805f563:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 805f567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805f56b:	48 89 c7             	mov    %rax,%rdi
 805f56e:	b8 00 00 00 00       	mov    $0x0,%eax
 805f573:	e8 a5 df 00 00       	callq  806d51d <is_null_pointer>
 805f578:	85 c0                	test   %eax,%eax
 805f57a:	0f 85 1e 00 00 00    	jne    805f59e <check_comparison_pointer_types+0x4e>
 805f580:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805f584:	48 89 c7             	mov    %rax,%rdi
 805f587:	b8 00 00 00 00       	mov    $0x0,%eax
 805f58c:	e8 8c df 00 00       	callq  806d51d <is_null_pointer>
 805f591:	85 c0                	test   %eax,%eax
 805f593:	0f 85 05 00 00 00    	jne    805f59e <check_comparison_pointer_types+0x4e>
 805f599:	e9 05 00 00 00       	jmpq   805f5a3 <check_comparison_pointer_types+0x53>
 805f59e:	e9 1b 02 00 00       	jmpq   805f7be <check_comparison_pointer_types+0x26e>
 805f5a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 805f5a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805f5ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 805f5af:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805f5b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f5b7:	8b 08                	mov    (%rax),%ecx
 805f5b9:	83 e1 0f             	and    $0xf,%ecx
 805f5bc:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
 805f5bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805f5c3:	8b 08                	mov    (%rax),%ecx
 805f5c5:	83 e1 0f             	and    $0xf,%ecx
 805f5c8:	89 4d b0             	mov    %ecx,-0x50(%rbp)
 805f5cb:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 805f5ce:	48 89 c7             	mov    %rax,%rdi
 805f5d1:	b8 00 00 00 00       	mov    $0x0,%eax
 805f5d6:	e8 f0 de 00 00       	callq  806d4cb <is_integer_btype>
 805f5db:	85 c0                	test   %eax,%eax
 805f5dd:	0f 85 1d 00 00 00    	jne    805f600 <check_comparison_pointer_types+0xb0>
 805f5e3:	8b 45 b0             	mov    -0x50(%rbp),%eax
 805f5e6:	48 89 c7             	mov    %rax,%rdi
 805f5e9:	b8 00 00 00 00       	mov    $0x0,%eax
 805f5ee:	e8 d8 de 00 00       	callq  806d4cb <is_integer_btype>
 805f5f3:	85 c0                	test   %eax,%eax
 805f5f5:	0f 85 05 00 00 00    	jne    805f600 <check_comparison_pointer_types+0xb0>
 805f5fb:	e9 43 00 00 00       	jmpq   805f643 <check_comparison_pointer_types+0xf3>
 805f600:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f603:	83 f8 2d             	cmp    $0x2d,%eax
 805f606:	0f 84 37 00 00 00    	je     805f643 <check_comparison_pointer_types+0xf3>
 805f60c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f60f:	81 f8 a1 00 00 00    	cmp    $0xa1,%eax
 805f615:	0f 84 23 00 00 00    	je     805f63e <check_comparison_pointer_types+0xee>
 805f61b:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f61e:	81 f8 a0 00 00 00    	cmp    $0xa0,%eax
 805f624:	0f 84 14 00 00 00    	je     805f63e <check_comparison_pointer_types+0xee>
 805f62a:	48 8d 05 f4 c2 02 00 	lea    0x2c2f4(%rip),%rax        # 808b925 <L.115>
 805f631:	48 89 c7             	mov    %rax,%rdi
 805f634:	b8 00 00 00 00       	mov    $0x0,%eax
 805f639:	e8 c1 e2 fe ff       	callq  804d8ff <tcc_warning>
 805f63e:	e9 7b 01 00 00       	jmpq   805f7be <check_comparison_pointer_types+0x26e>
 805f643:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 805f646:	83 f8 04             	cmp    $0x4,%eax
 805f649:	0f 85 1a 00 00 00    	jne    805f669 <check_comparison_pointer_types+0x119>
 805f64f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f653:	48 89 c7             	mov    %rax,%rdi
 805f656:	b8 00 00 00 00       	mov    $0x0,%eax
 805f65b:	e8 1f e0 00 00       	callq  806d67f <pointed_type>
 805f660:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 805f664:	e9 11 00 00 00       	jmpq   805f67a <check_comparison_pointer_types+0x12a>
 805f669:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 805f66c:	83 f8 06             	cmp    $0x6,%eax
 805f66f:	0f 84 05 00 00 00    	je     805f67a <check_comparison_pointer_types+0x12a>
 805f675:	e9 32 00 00 00       	jmpq   805f6ac <check_comparison_pointer_types+0x15c>
 805f67a:	8b 45 b0             	mov    -0x50(%rbp),%eax
 805f67d:	83 f8 04             	cmp    $0x4,%eax
 805f680:	0f 85 1a 00 00 00    	jne    805f6a0 <check_comparison_pointer_types+0x150>
 805f686:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805f68a:	48 89 c7             	mov    %rax,%rdi
 805f68d:	b8 00 00 00 00       	mov    $0x0,%eax
 805f692:	e8 e8 df 00 00       	callq  806d67f <pointed_type>
 805f697:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 805f69b:	e9 3b 00 00 00       	jmpq   805f6db <check_comparison_pointer_types+0x18b>
 805f6a0:	8b 45 b0             	mov    -0x50(%rbp),%eax
 805f6a3:	83 f8 06             	cmp    $0x6,%eax
 805f6a6:	0f 84 2f 00 00 00    	je     805f6db <check_comparison_pointer_types+0x18b>
 805f6ac:	b8 00 00 00 00       	mov    $0x0,%eax
 805f6b1:	48 89 c6             	mov    %rax,%rsi
 805f6b4:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f6b7:	48 89 c7             	mov    %rax,%rdi
 805f6ba:	b8 00 00 00 00       	mov    $0x0,%eax
 805f6bf:	e8 f0 21 ff ff       	callq  80518b4 <get_tok_str>
 805f6c4:	48 89 c6             	mov    %rax,%rsi
 805f6c7:	48 8d 05 7e c2 02 00 	lea    0x2c27e(%rip),%rax        # 808b94c <L.116>
 805f6ce:	48 89 c7             	mov    %rax,%rdi
 805f6d1:	b8 00 00 00 00       	mov    $0x0,%eax
 805f6d6:	e8 ec df fe ff       	callq  804d6c7 <tcc_error>
 805f6db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f6df:	8b 08                	mov    (%rax),%ecx
 805f6e1:	83 e1 0f             	and    $0xf,%ecx
 805f6e4:	83 f9 03             	cmp    $0x3,%ecx
 805f6e7:	0f 84 17 00 00 00    	je     805f704 <check_comparison_pointer_types+0x1b4>
 805f6ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805f6f1:	8b 08                	mov    (%rax),%ecx
 805f6f3:	83 e1 0f             	and    $0xf,%ecx
 805f6f6:	83 f9 03             	cmp    $0x3,%ecx
 805f6f9:	0f 84 05 00 00 00    	je     805f704 <check_comparison_pointer_types+0x1b4>
 805f6ff:	e9 05 00 00 00       	jmpq   805f709 <check_comparison_pointer_types+0x1b9>
 805f704:	e9 b5 00 00 00       	jmpq   805f7be <check_comparison_pointer_types+0x26e>
 805f709:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 805f70d:	b9 10 00 00 00       	mov    $0x10,%ecx
 805f712:	49 89 ca             	mov    %rcx,%r10
 805f715:	48 89 c6             	mov    %rax,%rsi
 805f718:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
 805f71c:	48 89 cf             	mov    %rcx,%rdi
 805f71f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 805f723:	4c 89 d2             	mov    %r10,%rdx
 805f726:	b8 00 00 00 00       	mov    $0x0,%eax
 805f72b:	e8 40 75 02 00       	callq  8086c70 <memcpy>
 805f730:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 805f734:	b9 10 00 00 00       	mov    $0x10,%ecx
 805f739:	49 89 ca             	mov    %rcx,%r10
 805f73c:	48 89 c6             	mov    %rax,%rsi
 805f73f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
 805f743:	48 89 cf             	mov    %rcx,%rdi
 805f746:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 805f74a:	4c 89 d2             	mov    %r10,%rdx
 805f74d:	b8 00 00 00 00       	mov    $0x0,%eax
 805f752:	e8 19 75 02 00       	callq  8086c70 <memcpy>
 805f757:	8b 45 c8             	mov    -0x38(%rbp),%eax
 805f75a:	81 e0 ef e7 ff ff    	and    $0xffffe7ef,%eax
 805f760:	89 45 c8             	mov    %eax,-0x38(%rbp)
 805f763:	8b 45 b8             	mov    -0x48(%rbp),%eax
 805f766:	81 e0 ef e7 ff ff    	and    $0xffffe7ef,%eax
 805f76c:	89 45 b8             	mov    %eax,-0x48(%rbp)
 805f76f:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 805f773:	48 89 c6             	mov    %rax,%rsi
 805f776:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 805f77a:	48 89 c7             	mov    %rax,%rdi
 805f77d:	b8 00 00 00 00       	mov    $0x0,%eax
 805f782:	e8 79 1d 00 00       	callq  8061500 <is_compatible_types>
 805f787:	85 c0                	test   %eax,%eax
 805f789:	0f 84 05 00 00 00    	je     805f794 <check_comparison_pointer_types+0x244>
 805f78f:	e9 2a 00 00 00       	jmpq   805f7be <check_comparison_pointer_types+0x26e>
 805f794:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f797:	83 f8 2d             	cmp    $0x2d,%eax
 805f79a:	0f 85 0a 00 00 00    	jne    805f7aa <check_comparison_pointer_types+0x25a>
 805f7a0:	e9 07 ff ff ff       	jmpq   805f6ac <check_comparison_pointer_types+0x15c>
 805f7a5:	e9 14 00 00 00       	jmpq   805f7be <check_comparison_pointer_types+0x26e>
 805f7aa:	48 8d 05 b9 c1 02 00 	lea    0x2c1b9(%rip),%rax        # 808b96a <L.117>
 805f7b1:	48 89 c7             	mov    %rax,%rdi
 805f7b4:	b8 00 00 00 00       	mov    $0x0,%eax
 805f7b9:	e8 41 e1 fe ff       	callq  804d8ff <tcc_warning>
 805f7be:	c9                   	leaveq 
 805f7bf:	c3                   	retq   

000000000805f7c0 <gen_op>:
 805f7c0:	55                   	push   %rbp
 805f7c1:	48 89 e5             	mov    %rsp,%rbp
 805f7c4:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 805f7cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805f7cf:	48 8b 05 4a e7 02 00 	mov    0x2e74a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f7d6:	48 8b 00             	mov    (%rax),%rax
 805f7d9:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805f7e0:	ff ff ff 
 805f7e3:	48 01 c8             	add    %rcx,%rax
 805f7e6:	8b 08                	mov    (%rax),%ecx
 805f7e8:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 805f7eb:	48 8b 05 2e e7 02 00 	mov    0x2e72e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f7f2:	48 8b 00             	mov    (%rax),%rax
 805f7f5:	8b 08                	mov    (%rax),%ecx
 805f7f7:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 805f7fa:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805f7fd:	83 e0 0f             	and    $0xf,%eax
 805f800:	89 45 e8             	mov    %eax,-0x18(%rbp)
 805f803:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805f806:	83 e0 0f             	and    $0xf,%eax
 805f809:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 805f80c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f80f:	83 f8 04             	cmp    $0x4,%eax
 805f812:	0f 84 11 00 00 00    	je     805f829 <gen_op+0x69>
 805f818:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805f81b:	83 f8 04             	cmp    $0x4,%eax
 805f81e:	0f 84 05 00 00 00    	je     805f829 <gen_op+0x69>
 805f824:	e9 4a 03 00 00       	jmpq   805fb73 <gen_op+0x3b3>
 805f829:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f82c:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 805f832:	0f 8c 56 00 00 00    	jl     805f88e <gen_op+0xce>
 805f838:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f83b:	81 f8 a1 00 00 00    	cmp    $0xa1,%eax
 805f841:	0f 8f 47 00 00 00    	jg     805f88e <gen_op+0xce>
 805f847:	48 8b 05 d2 e6 02 00 	mov    0x2e6d2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f84e:	48 8b 00             	mov    (%rax),%rax
 805f851:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805f858:	00 00 00 
 805f85b:	48 29 c8             	sub    %rcx,%rax
 805f85e:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805f861:	49 89 ca             	mov    %rcx,%r10
 805f864:	48 8b 0d b5 e6 02 00 	mov    0x2e6b5(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f86b:	48 8b 09             	mov    (%rcx),%rcx
 805f86e:	48 89 ce             	mov    %rcx,%rsi
 805f871:	48 89 c7             	mov    %rax,%rdi
 805f874:	4c 89 d2             	mov    %r10,%rdx
 805f877:	b8 00 00 00 00       	mov    $0x0,%eax
 805f87c:	e8 cf fc ff ff       	callq  805f550 <check_comparison_pointer_types>
 805f881:	b8 1c 00 00 00       	mov    $0x1c,%eax
 805f886:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805f889:	e9 2c 05 00 00       	jmpq   805fdba <gen_op+0x5fa>
 805f88e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805f891:	83 f8 04             	cmp    $0x4,%eax
 805f894:	0f 85 3b 01 00 00    	jne    805f9d5 <gen_op+0x215>
 805f89a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805f89d:	83 f8 04             	cmp    $0x4,%eax
 805f8a0:	0f 85 2f 01 00 00    	jne    805f9d5 <gen_op+0x215>
 805f8a6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f8a9:	83 f8 2d             	cmp    $0x2d,%eax
 805f8ac:	0f 84 14 00 00 00    	je     805f8c6 <gen_op+0x106>
 805f8b2:	48 8d 05 e3 c0 02 00 	lea    0x2c0e3(%rip),%rax        # 808b99c <L.118>
 805f8b9:	48 89 c7             	mov    %rax,%rdi
 805f8bc:	b8 00 00 00 00       	mov    $0x0,%eax
 805f8c1:	e8 01 de fe ff       	callq  804d6c7 <tcc_error>
 805f8c6:	48 8b 05 53 e6 02 00 	mov    0x2e653(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f8cd:	48 8b 00             	mov    (%rax),%rax
 805f8d0:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 805f8d7:	00 00 00 
 805f8da:	48 29 c8             	sub    %rcx,%rax
 805f8dd:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 805f8e0:	49 89 ca             	mov    %rcx,%r10
 805f8e3:	48 8b 0d 36 e6 02 00 	mov    0x2e636(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f8ea:	48 8b 09             	mov    (%rcx),%rcx
 805f8ed:	48 89 ce             	mov    %rcx,%rsi
 805f8f0:	48 89 c7             	mov    %rax,%rdi
 805f8f3:	4c 89 d2             	mov    %r10,%rdx
 805f8f6:	b8 00 00 00 00       	mov    $0x0,%eax
 805f8fb:	e8 50 fc ff ff       	callq  805f550 <check_comparison_pointer_types>
 805f900:	48 8b 05 19 e6 02 00 	mov    0x2e619(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f907:	48 8b 00             	mov    (%rax),%rax
 805f90a:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805f911:	ff ff ff 
 805f914:	48 01 c8             	add    %rcx,%rax
 805f917:	8b 08                	mov    (%rax),%ecx
 805f919:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 805f91f:	85 c9                	test   %ecx,%ecx
 805f921:	0f 84 29 00 00 00    	je     805f950 <gen_op+0x190>
 805f927:	48 8b 05 f2 e5 02 00 	mov    0x2e5f2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f92e:	48 8b 00             	mov    (%rax),%rax
 805f931:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805f938:	ff ff ff 
 805f93b:	48 01 c8             	add    %rcx,%rax
 805f93e:	48 89 c7             	mov    %rax,%rdi
 805f941:	b8 00 00 00 00       	mov    $0x0,%eax
 805f946:	e8 cf fb ff ff       	callq  805f51a <vla_runtime_pointed_size>
 805f94b:	e9 31 00 00 00       	jmpq   805f981 <gen_op+0x1c1>
 805f950:	48 8b 05 c9 e5 02 00 	mov    0x2e5c9(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f957:	48 8b 00             	mov    (%rax),%rax
 805f95a:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805f961:	ff ff ff 
 805f964:	48 01 c8             	add    %rcx,%rax
 805f967:	48 89 c7             	mov    %rax,%rdi
 805f96a:	b8 00 00 00 00       	mov    $0x0,%eax
 805f96f:	e8 6b fb ff ff       	callq  805f4df <pointed_size>
 805f974:	48 89 c7             	mov    %rax,%rdi
 805f977:	b8 00 00 00 00       	mov    $0x0,%eax
 805f97c:	e8 79 ce ff ff       	callq  805c7fa <vpushi>
 805f981:	b8 03 00 00 00       	mov    $0x3,%eax
 805f986:	48 89 c7             	mov    %rax,%rdi
 805f989:	b8 00 00 00 00       	mov    $0x0,%eax
 805f98e:	e8 31 e9 ff ff       	callq  805e2c4 <vrott>
 805f993:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f996:	48 89 c7             	mov    %rax,%rdi
 805f999:	b8 00 00 00 00       	mov    $0x0,%eax
 805f99e:	e8 c0 eb ff ff       	callq  805e563 <gen_opic>
 805f9a3:	48 8b 05 76 e5 02 00 	mov    0x2e576(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805f9aa:	48 8b 00             	mov    (%rax),%rax
 805f9ad:	b9 0c 00 00 00       	mov    $0xc,%ecx
 805f9b2:	89 08                	mov    %ecx,(%rax)
 805f9b4:	b8 00 00 00 00       	mov    $0x0,%eax
 805f9b9:	e8 90 d4 ff ff       	callq  805ce4e <vswap>
 805f9be:	b8 b2 00 00 00       	mov    $0xb2,%eax
 805f9c3:	48 89 c7             	mov    %rax,%rdi
 805f9c6:	b8 00 00 00 00       	mov    $0x0,%eax
 805f9cb:	e8 f0 fd ff ff       	callq  805f7c0 <gen_op>
 805f9d0:	e9 99 01 00 00       	jmpq   805fb6e <gen_op+0x3ae>
 805f9d5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f9d8:	83 f8 2d             	cmp    $0x2d,%eax
 805f9db:	0f 84 20 00 00 00    	je     805fa01 <gen_op+0x241>
 805f9e1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805f9e4:	83 f8 2b             	cmp    $0x2b,%eax
 805f9e7:	0f 84 14 00 00 00    	je     805fa01 <gen_op+0x241>
 805f9ed:	48 8d 05 c1 bf 02 00 	lea    0x2bfc1(%rip),%rax        # 808b9b5 <L.119>
 805f9f4:	48 89 c7             	mov    %rax,%rdi
 805f9f7:	b8 00 00 00 00       	mov    $0x0,%eax
 805f9fc:	e8 c6 dc fe ff       	callq  804d6c7 <tcc_error>
 805fa01:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805fa04:	83 f8 04             	cmp    $0x4,%eax
 805fa07:	0f 85 22 00 00 00    	jne    805fa2f <gen_op+0x26f>
 805fa0d:	b8 00 00 00 00       	mov    $0x0,%eax
 805fa12:	e8 37 d4 ff ff       	callq  805ce4e <vswap>
 805fa17:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 805fa1b:	48 89 c6             	mov    %rax,%rsi
 805fa1e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 805fa22:	48 89 c7             	mov    %rax,%rdi
 805fa25:	b8 00 00 00 00       	mov    $0x0,%eax
 805fa2a:	e8 c7 cb ff ff       	callq  805c5f6 <swap>
 805fa2f:	48 8b 05 ea e4 02 00 	mov    0x2e4ea(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805fa36:	48 8b 00             	mov    (%rax),%rax
 805fa39:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805fa40:	ff ff ff 
 805fa43:	48 01 c8             	add    %rcx,%rax
 805fa46:	b9 10 00 00 00       	mov    $0x10,%ecx
 805fa4b:	49 89 ca             	mov    %rcx,%r10
 805fa4e:	48 89 c6             	mov    %rax,%rsi
 805fa51:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 805fa55:	48 89 cf             	mov    %rcx,%rdi
 805fa58:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 805fa5c:	4c 89 d2             	mov    %r10,%rdx
 805fa5f:	b8 00 00 00 00       	mov    $0x0,%eax
 805fa64:	e8 07 72 02 00       	callq  8086c70 <memcpy>
 805fa69:	8b 45 d0             	mov    -0x30(%rbp),%eax
 805fa6c:	83 e0 df             	and    $0xffffffdf,%eax
 805fa6f:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805fa72:	48 8b 05 a7 e4 02 00 	mov    0x2e4a7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805fa79:	48 8b 00             	mov    (%rax),%rax
 805fa7c:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805fa83:	ff ff ff 
 805fa86:	48 01 c8             	add    %rcx,%rax
 805fa89:	8b 08                	mov    (%rax),%ecx
 805fa8b:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 805fa91:	85 c9                	test   %ecx,%ecx
 805fa93:	0f 84 29 00 00 00    	je     805fac2 <gen_op+0x302>
 805fa99:	48 8b 05 80 e4 02 00 	mov    0x2e480(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805faa0:	48 8b 00             	mov    (%rax),%rax
 805faa3:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805faaa:	ff ff ff 
 805faad:	48 01 c8             	add    %rcx,%rax
 805fab0:	48 89 c7             	mov    %rax,%rdi
 805fab3:	b8 00 00 00 00       	mov    $0x0,%eax
 805fab8:	e8 5d fa ff ff       	callq  805f51a <vla_runtime_pointed_size>
 805fabd:	e9 5d 00 00 00       	jmpq   805fb1f <gen_op+0x35f>
 805fac2:	48 8b 05 57 e4 02 00 	mov    0x2e457(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805fac9:	48 8b 00             	mov    (%rax),%rax
 805facc:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 805fad3:	ff ff ff 
 805fad6:	48 01 c8             	add    %rcx,%rax
 805fad9:	48 89 c7             	mov    %rax,%rdi
 805fadc:	b8 00 00 00 00       	mov    $0x0,%eax
 805fae1:	e8 f9 f9 ff ff       	callq  805f4df <pointed_size>
 805fae6:	89 45 f4             	mov    %eax,-0xc(%rbp)
 805fae9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805faec:	83 f8 00             	cmp    $0x0,%eax
 805faef:	0f 8d 14 00 00 00    	jge    805fb09 <gen_op+0x349>
 805faf5:	48 8d 05 d2 be 02 00 	lea    0x2bed2(%rip),%rax        # 808b9ce <L.120>
 805fafc:	48 89 c7             	mov    %rax,%rdi
 805faff:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb04:	e8 be db fe ff       	callq  804d6c7 <tcc_error>
 805fb09:	8b 45 f4             	mov    -0xc(%rbp),%eax
 805fb0c:	48 63 c0             	movslq %eax,%rax
 805fb0f:	48 89 c1             	mov    %rax,%rcx
 805fb12:	48 89 cf             	mov    %rcx,%rdi
 805fb15:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb1a:	e8 68 cd ff ff       	callq  805c887 <vpushll>
 805fb1f:	b8 2a 00 00 00       	mov    $0x2a,%eax
 805fb24:	48 89 c7             	mov    %rax,%rdi
 805fb27:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb2c:	e8 8f fc ff ff       	callq  805f7c0 <gen_op>
 805fb31:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fb34:	48 89 c7             	mov    %rax,%rdi
 805fb37:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb3c:	e8 22 ea ff ff       	callq  805e563 <gen_opic>
 805fb41:	48 8b 05 d8 e3 02 00 	mov    0x2e3d8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805fb48:	48 8b 00             	mov    (%rax),%rax
 805fb4b:	b9 10 00 00 00       	mov    $0x10,%ecx
 805fb50:	49 89 ca             	mov    %rcx,%r10
 805fb53:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 805fb57:	48 89 ce             	mov    %rcx,%rsi
 805fb5a:	48 89 c7             	mov    %rax,%rdi
 805fb5d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 805fb61:	4c 89 d2             	mov    %r10,%rdx
 805fb64:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb69:	e8 02 71 02 00       	callq  8086c70 <memcpy>
 805fb6e:	e9 fb 03 00 00       	jmpq   805ff6e <gen_op+0x7ae>
 805fb73:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805fb76:	48 89 c7             	mov    %rax,%rdi
 805fb79:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb7e:	e8 a0 c0 ff ff       	callq  805bc23 <is_float>
 805fb83:	85 c0                	test   %eax,%eax
 805fb85:	0f 85 1d 00 00 00    	jne    805fba8 <gen_op+0x3e8>
 805fb8b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805fb8e:	48 89 c7             	mov    %rax,%rdi
 805fb91:	b8 00 00 00 00       	mov    $0x0,%eax
 805fb96:	e8 88 c0 ff ff       	callq  805bc23 <is_float>
 805fb9b:	85 c0                	test   %eax,%eax
 805fb9d:	0f 85 05 00 00 00    	jne    805fba8 <gen_op+0x3e8>
 805fba3:	e9 cd 00 00 00       	jmpq   805fc75 <gen_op+0x4b5>
 805fba8:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805fbab:	83 f8 0a             	cmp    $0xa,%eax
 805fbae:	0f 84 11 00 00 00    	je     805fbc5 <gen_op+0x405>
 805fbb4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805fbb7:	83 f8 0a             	cmp    $0xa,%eax
 805fbba:	0f 84 05 00 00 00    	je     805fbc5 <gen_op+0x405>
 805fbc0:	e9 0d 00 00 00       	jmpq   805fbd2 <gen_op+0x412>
 805fbc5:	b8 0a 00 00 00       	mov    $0xa,%eax
 805fbca:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fbcd:	e9 32 00 00 00       	jmpq   805fc04 <gen_op+0x444>
 805fbd2:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805fbd5:	83 f8 09             	cmp    $0x9,%eax
 805fbd8:	0f 84 11 00 00 00    	je     805fbef <gen_op+0x42f>
 805fbde:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805fbe1:	83 f8 09             	cmp    $0x9,%eax
 805fbe4:	0f 84 05 00 00 00    	je     805fbef <gen_op+0x42f>
 805fbea:	e9 0d 00 00 00       	jmpq   805fbfc <gen_op+0x43c>
 805fbef:	b8 09 00 00 00       	mov    $0x9,%eax
 805fbf4:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fbf7:	e9 08 00 00 00       	jmpq   805fc04 <gen_op+0x444>
 805fbfc:	b8 08 00 00 00       	mov    $0x8,%eax
 805fc01:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fc04:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc07:	83 f8 2b             	cmp    $0x2b,%eax
 805fc0a:	0f 84 5b 00 00 00    	je     805fc6b <gen_op+0x4ab>
 805fc10:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc13:	83 f8 2d             	cmp    $0x2d,%eax
 805fc16:	0f 84 4f 00 00 00    	je     805fc6b <gen_op+0x4ab>
 805fc1c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc1f:	83 f8 2a             	cmp    $0x2a,%eax
 805fc22:	0f 84 43 00 00 00    	je     805fc6b <gen_op+0x4ab>
 805fc28:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc2b:	83 f8 2f             	cmp    $0x2f,%eax
 805fc2e:	0f 84 37 00 00 00    	je     805fc6b <gen_op+0x4ab>
 805fc34:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc37:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 805fc3d:	0f 8c 14 00 00 00    	jl     805fc57 <gen_op+0x497>
 805fc43:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc46:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 805fc4c:	0f 8f 05 00 00 00    	jg     805fc57 <gen_op+0x497>
 805fc52:	e9 14 00 00 00       	jmpq   805fc6b <gen_op+0x4ab>
 805fc57:	48 8d 05 8b bd 02 00 	lea    0x2bd8b(%rip),%rax        # 808b9e9 <L.121>
 805fc5e:	48 89 c7             	mov    %rax,%rdi
 805fc61:	b8 00 00 00 00       	mov    $0x0,%eax
 805fc66:	e8 5c da fe ff       	callq  804d6c7 <tcc_error>
 805fc6b:	e9 4a 01 00 00       	jmpq   805fdba <gen_op+0x5fa>
 805fc70:	e9 f9 02 00 00       	jmpq   805ff6e <gen_op+0x7ae>
 805fc75:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc78:	81 f8 cd 00 00 00    	cmp    $0xcd,%eax
 805fc7e:	0f 84 1d 00 00 00    	je     805fca1 <gen_op+0x4e1>
 805fc84:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc87:	83 f8 02             	cmp    $0x2,%eax
 805fc8a:	0f 84 11 00 00 00    	je     805fca1 <gen_op+0x4e1>
 805fc90:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fc93:	83 f8 01             	cmp    $0x1,%eax
 805fc96:	0f 84 05 00 00 00    	je     805fca1 <gen_op+0x4e1>
 805fc9c:	e9 54 00 00 00       	jmpq   805fcf5 <gen_op+0x535>
 805fca1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805fca4:	83 f8 0c             	cmp    $0xc,%eax
 805fca7:	b8 00 00 00 00       	mov    $0x0,%eax
 805fcac:	0f 94 c0             	sete   %al
 805fcaf:	85 c0                	test   %eax,%eax
 805fcb1:	0f 84 05 00 00 00    	je     805fcbc <gen_op+0x4fc>
 805fcb7:	e9 0a 00 00 00       	jmpq   805fcc6 <gen_op+0x506>
 805fcbc:	b8 00 00 00 00       	mov    $0x0,%eax
 805fcc1:	e9 05 00 00 00       	jmpq   805fccb <gen_op+0x50b>
 805fcc6:	b8 0c 00 00 00       	mov    $0xc,%eax
 805fccb:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fcce:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805fcd1:	83 e0 1f             	and    $0x1f,%eax
 805fcd4:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 805fcd7:	83 c9 10             	or     $0x10,%ecx
 805fcda:	39 c8                	cmp    %ecx,%eax
 805fcdc:	0f 85 09 00 00 00    	jne    805fceb <gen_op+0x52b>
 805fce2:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805fce5:	83 c8 10             	or     $0x10,%eax
 805fce8:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fceb:	e9 ca 00 00 00       	jmpq   805fdba <gen_op+0x5fa>
 805fcf0:	e9 79 02 00 00       	jmpq   805ff6e <gen_op+0x7ae>
 805fcf5:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805fcf8:	83 f8 0c             	cmp    $0xc,%eax
 805fcfb:	0f 84 11 00 00 00    	je     805fd12 <gen_op+0x552>
 805fd01:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805fd04:	83 f8 0c             	cmp    $0xc,%eax
 805fd07:	0f 84 05 00 00 00    	je     805fd12 <gen_op+0x552>
 805fd0d:	e9 3e 00 00 00       	jmpq   805fd50 <gen_op+0x590>
 805fd12:	b8 0c 00 00 00       	mov    $0xc,%eax
 805fd17:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fd1a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805fd1d:	83 e0 1f             	and    $0x1f,%eax
 805fd20:	83 f8 1c             	cmp    $0x1c,%eax
 805fd23:	0f 84 14 00 00 00    	je     805fd3d <gen_op+0x57d>
 805fd29:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805fd2c:	83 e0 1f             	and    $0x1f,%eax
 805fd2f:	83 f8 1c             	cmp    $0x1c,%eax
 805fd32:	0f 84 05 00 00 00    	je     805fd3d <gen_op+0x57d>
 805fd38:	e9 09 00 00 00       	jmpq   805fd46 <gen_op+0x586>
 805fd3d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805fd40:	83 c8 10             	or     $0x10,%eax
 805fd43:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fd46:	e9 6f 00 00 00       	jmpq   805fdba <gen_op+0x5fa>
 805fd4b:	e9 1e 02 00 00       	jmpq   805ff6e <gen_op+0x7ae>
 805fd50:	8b 45 e8             	mov    -0x18(%rbp),%eax
 805fd53:	83 f8 07             	cmp    $0x7,%eax
 805fd56:	0f 84 11 00 00 00    	je     805fd6d <gen_op+0x5ad>
 805fd5c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 805fd5f:	83 f8 07             	cmp    $0x7,%eax
 805fd62:	0f 84 05 00 00 00    	je     805fd6d <gen_op+0x5ad>
 805fd68:	e9 19 00 00 00       	jmpq   805fd86 <gen_op+0x5c6>
 805fd6d:	48 8d 05 9b bc 02 00 	lea    0x2bc9b(%rip),%rax        # 808ba0f <L.122>
 805fd74:	48 89 c7             	mov    %rax,%rdi
 805fd77:	b8 00 00 00 00       	mov    $0x0,%eax
 805fd7c:	e8 46 d9 fe ff       	callq  804d6c7 <tcc_error>
 805fd81:	e9 e8 01 00 00       	jmpq   805ff6e <gen_op+0x7ae>
 805fd86:	b8 00 00 00 00       	mov    $0x0,%eax
 805fd8b:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fd8e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 805fd91:	83 e0 1f             	and    $0x1f,%eax
 805fd94:	83 f8 10             	cmp    $0x10,%eax
 805fd97:	0f 84 14 00 00 00    	je     805fdb1 <gen_op+0x5f1>
 805fd9d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 805fda0:	83 e0 1f             	and    $0x1f,%eax
 805fda3:	83 f8 10             	cmp    $0x10,%eax
 805fda6:	0f 84 05 00 00 00    	je     805fdb1 <gen_op+0x5f1>
 805fdac:	e9 09 00 00 00       	jmpq   805fdba <gen_op+0x5fa>
 805fdb1:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805fdb4:	83 c8 10             	or     $0x10,%eax
 805fdb7:	89 45 e0             	mov    %eax,-0x20(%rbp)
 805fdba:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805fdbd:	83 e0 10             	and    $0x10,%eax
 805fdc0:	85 c0                	test   %eax,%eax
 805fdc2:	0f 84 b6 00 00 00    	je     805fe7e <gen_op+0x6be>
 805fdc8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fdcb:	83 f8 02             	cmp    $0x2,%eax
 805fdce:	0f 85 0d 00 00 00    	jne    805fde1 <gen_op+0x621>
 805fdd4:	b8 cd 00 00 00       	mov    $0xcd,%eax
 805fdd9:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fddc:	e9 9d 00 00 00       	jmpq   805fe7e <gen_op+0x6be>
 805fde1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fde4:	83 f8 2f             	cmp    $0x2f,%eax
 805fde7:	0f 85 0d 00 00 00    	jne    805fdfa <gen_op+0x63a>
 805fded:	b8 b0 00 00 00       	mov    $0xb0,%eax
 805fdf2:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fdf5:	e9 84 00 00 00       	jmpq   805fe7e <gen_op+0x6be>
 805fdfa:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fdfd:	83 f8 25             	cmp    $0x25,%eax
 805fe00:	0f 85 0d 00 00 00    	jne    805fe13 <gen_op+0x653>
 805fe06:	b8 b1 00 00 00       	mov    $0xb1,%eax
 805fe0b:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fe0e:	e9 6b 00 00 00       	jmpq   805fe7e <gen_op+0x6be>
 805fe13:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fe16:	81 f8 9c 00 00 00    	cmp    $0x9c,%eax
 805fe1c:	0f 85 0d 00 00 00    	jne    805fe2f <gen_op+0x66f>
 805fe22:	b8 92 00 00 00       	mov    $0x92,%eax
 805fe27:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fe2a:	e9 4f 00 00 00       	jmpq   805fe7e <gen_op+0x6be>
 805fe2f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fe32:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 805fe38:	0f 85 0d 00 00 00    	jne    805fe4b <gen_op+0x68b>
 805fe3e:	b8 97 00 00 00       	mov    $0x97,%eax
 805fe43:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fe46:	e9 33 00 00 00       	jmpq   805fe7e <gen_op+0x6be>
 805fe4b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fe4e:	81 f8 9e 00 00 00    	cmp    $0x9e,%eax
 805fe54:	0f 85 0d 00 00 00    	jne    805fe67 <gen_op+0x6a7>
 805fe5a:	b8 96 00 00 00       	mov    $0x96,%eax
 805fe5f:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fe62:	e9 17 00 00 00       	jmpq   805fe7e <gen_op+0x6be>
 805fe67:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fe6a:	81 f8 9d 00 00 00    	cmp    $0x9d,%eax
 805fe70:	0f 85 08 00 00 00    	jne    805fe7e <gen_op+0x6be>
 805fe76:	b8 93 00 00 00       	mov    $0x93,%eax
 805fe7b:	89 45 f8             	mov    %eax,-0x8(%rbp)
 805fe7e:	b8 00 00 00 00       	mov    $0x0,%eax
 805fe83:	e8 c6 cf ff ff       	callq  805ce4e <vswap>
 805fe88:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805fe8b:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805fe8e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 805fe92:	48 89 c7             	mov    %rax,%rdi
 805fe95:	b8 00 00 00 00       	mov    $0x0,%eax
 805fe9a:	e8 f8 03 00 00       	callq  8060297 <gen_cast>
 805fe9f:	b8 00 00 00 00       	mov    $0x0,%eax
 805fea4:	e8 a5 cf ff ff       	callq  805ce4e <vswap>
 805fea9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805feac:	81 f8 cd 00 00 00    	cmp    $0xcd,%eax
 805feb2:	0f 84 1d 00 00 00    	je     805fed5 <gen_op+0x715>
 805feb8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805febb:	83 f8 02             	cmp    $0x2,%eax
 805febe:	0f 84 11 00 00 00    	je     805fed5 <gen_op+0x715>
 805fec4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805fec7:	83 f8 01             	cmp    $0x1,%eax
 805feca:	0f 84 05 00 00 00    	je     805fed5 <gen_op+0x715>
 805fed0:	e9 08 00 00 00       	jmpq   805fedd <gen_op+0x71d>
 805fed5:	b8 00 00 00 00       	mov    $0x0,%eax
 805feda:	89 45 d0             	mov    %eax,-0x30(%rbp)
 805fedd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 805fee1:	48 89 c7             	mov    %rax,%rdi
 805fee4:	b8 00 00 00 00       	mov    $0x0,%eax
 805fee9:	e8 a9 03 00 00       	callq  8060297 <gen_cast>
 805feee:	8b 45 e0             	mov    -0x20(%rbp),%eax
 805fef1:	48 89 c7             	mov    %rax,%rdi
 805fef4:	b8 00 00 00 00       	mov    $0x0,%eax
 805fef9:	e8 25 bd ff ff       	callq  805bc23 <is_float>
 805fefe:	85 c0                	test   %eax,%eax
 805ff00:	0f 84 15 00 00 00    	je     805ff1b <gen_op+0x75b>
 805ff06:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ff09:	48 89 c7             	mov    %rax,%rdi
 805ff0c:	b8 00 00 00 00       	mov    $0x0,%eax
 805ff11:	e8 11 f2 ff ff       	callq  805f127 <gen_opif>
 805ff16:	e9 10 00 00 00       	jmpq   805ff2b <gen_op+0x76b>
 805ff1b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ff1e:	48 89 c7             	mov    %rax,%rdi
 805ff21:	b8 00 00 00 00       	mov    $0x0,%eax
 805ff26:	e8 38 e6 ff ff       	callq  805e563 <gen_opic>
 805ff2b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ff2e:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 805ff34:	0f 8c 25 00 00 00    	jl     805ff5f <gen_op+0x79f>
 805ff3a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ff3d:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 805ff43:	0f 8f 16 00 00 00    	jg     805ff5f <gen_op+0x79f>
 805ff49:	48 8b 05 d0 df 02 00 	mov    0x2dfd0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ff50:	48 8b 00             	mov    (%rax),%rax
 805ff53:	b9 00 00 00 00       	mov    $0x0,%ecx
 805ff58:	89 08                	mov    %ecx,(%rax)
 805ff5a:	e9 0f 00 00 00       	jmpq   805ff6e <gen_op+0x7ae>
 805ff5f:	48 8b 05 ba df 02 00 	mov    0x2dfba(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ff66:	48 8b 00             	mov    (%rax),%rax
 805ff69:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 805ff6c:	89 08                	mov    %ecx,(%rax)
 805ff6e:	c9                   	leaveq 
 805ff6f:	c3                   	retq   

000000000805ff70 <gen_cvt_itof1>:
 805ff70:	55                   	push   %rbp
 805ff71:	48 89 e5             	mov    %rsp,%rbp
 805ff74:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 805ff7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 805ff7f:	48 8b 05 9a df 02 00 	mov    0x2df9a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 805ff86:	48 8b 00             	mov    (%rax),%rax
 805ff89:	8b 08                	mov    (%rax),%ecx
 805ff8b:	83 e1 1f             	and    $0x1f,%ecx
 805ff8e:	83 f9 1c             	cmp    $0x1c,%ecx
 805ff91:	0f 85 e3 00 00 00    	jne    806007a <gen_cvt_itof1+0x10a>
 805ff97:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ff9a:	83 f8 08             	cmp    $0x8,%eax
 805ff9d:	0f 85 21 00 00 00    	jne    805ffc4 <gen_cvt_itof1+0x54>
 805ffa3:	b8 7d 01 00 00       	mov    $0x17d,%eax
 805ffa8:	48 89 c6             	mov    %rax,%rsi
 805ffab:	48 8b 05 3e df 02 00 	mov    0x2df3e(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 805ffb2:	48 89 c7             	mov    %rax,%rdi
 805ffb5:	b8 00 00 00 00       	mov    $0x0,%eax
 805ffba:	e8 85 cd ff ff       	callq  805cd44 <vpush_global_sym>
 805ffbf:	e9 49 00 00 00       	jmpq   806000d <gen_cvt_itof1+0x9d>
 805ffc4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 805ffc7:	83 f8 0a             	cmp    $0xa,%eax
 805ffca:	0f 85 21 00 00 00    	jne    805fff1 <gen_cvt_itof1+0x81>
 805ffd0:	b8 7f 01 00 00       	mov    $0x17f,%eax
 805ffd5:	48 89 c6             	mov    %rax,%rsi
 805ffd8:	48 8b 05 11 df 02 00 	mov    0x2df11(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 805ffdf:	48 89 c7             	mov    %rax,%rdi
 805ffe2:	b8 00 00 00 00       	mov    $0x0,%eax
 805ffe7:	e8 58 cd ff ff       	callq  805cd44 <vpush_global_sym>
 805ffec:	e9 1c 00 00 00       	jmpq   806000d <gen_cvt_itof1+0x9d>
 805fff1:	b8 7e 01 00 00       	mov    $0x17e,%eax
 805fff6:	48 89 c6             	mov    %rax,%rsi
 805fff9:	48 8b 05 f0 de 02 00 	mov    0x2def0(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 8060000:	48 89 c7             	mov    %rax,%rdi
 8060003:	b8 00 00 00 00       	mov    $0x0,%eax
 8060008:	e8 37 cd ff ff       	callq  805cd44 <vpush_global_sym>
 806000d:	b8 02 00 00 00       	mov    $0x2,%eax
 8060012:	48 89 c7             	mov    %rax,%rdi
 8060015:	b8 00 00 00 00       	mov    $0x0,%eax
 806001a:	e8 a5 e2 ff ff       	callq  805e2c4 <vrott>
 806001f:	b8 01 00 00 00       	mov    $0x1,%eax
 8060024:	48 89 c7             	mov    %rax,%rdi
 8060027:	b8 00 00 00 00       	mov    $0x0,%eax
 806002c:	e8 3d f6 01 00       	callq  807f66e <gfunc_call>
 8060031:	b8 00 00 00 00       	mov    $0x0,%eax
 8060036:	48 89 c7             	mov    %rax,%rdi
 8060039:	b8 00 00 00 00       	mov    $0x0,%eax
 806003e:	e8 b7 c7 ff ff       	callq  805c7fa <vpushi>
 8060043:	48 8b 05 d6 de 02 00 	mov    0x2ded6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806004a:	48 8b 00             	mov    (%rax),%rax
 806004d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8060054:	00 00 00 
 8060057:	48 01 c8             	add    %rcx,%rax
 806005a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 806005d:	48 89 cf             	mov    %rcx,%rdi
 8060060:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8060064:	b8 00 00 00 00       	mov    $0x0,%eax
 8060069:	e8 29 de ff ff       	callq  805de97 <reg_fret>
 806006e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8060072:	66 89 01             	mov    %ax,(%rcx)
 8060075:	e9 10 00 00 00       	jmpq   806008a <gen_cvt_itof1+0x11a>
 806007a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806007d:	48 89 c7             	mov    %rax,%rdi
 8060080:	b8 00 00 00 00       	mov    $0x0,%eax
 8060085:	e8 b3 20 02 00       	callq  808213d <gen_cvt_itof>
 806008a:	c9                   	leaveq 
 806008b:	c3                   	retq   

000000000806008c <gen_cvt_ftoi1>:
 806008c:	55                   	push   %rbp
 806008d:	48 89 e5             	mov    %rsp,%rbp
 8060090:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8060097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806009b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806009e:	83 f8 1c             	cmp    $0x1c,%eax
 80600a1:	0f 85 01 01 00 00    	jne    80601a8 <gen_cvt_ftoi1+0x11c>
 80600a7:	48 8b 05 72 de 02 00 	mov    0x2de72(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80600ae:	48 8b 00             	mov    (%rax),%rax
 80600b1:	8b 08                	mov    (%rax),%ecx
 80600b3:	83 e1 0f             	and    $0xf,%ecx
 80600b6:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 80600b9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80600bc:	83 f8 08             	cmp    $0x8,%eax
 80600bf:	0f 85 21 00 00 00    	jne    80600e6 <gen_cvt_ftoi1+0x5a>
 80600c5:	b8 81 01 00 00       	mov    $0x181,%eax
 80600ca:	48 89 c6             	mov    %rax,%rsi
 80600cd:	48 8b 05 1c de 02 00 	mov    0x2de1c(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 80600d4:	48 89 c7             	mov    %rax,%rdi
 80600d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80600dc:	e8 63 cc ff ff       	callq  805cd44 <vpush_global_sym>
 80600e1:	e9 49 00 00 00       	jmpq   806012f <gen_cvt_ftoi1+0xa3>
 80600e6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80600e9:	83 f8 0a             	cmp    $0xa,%eax
 80600ec:	0f 85 21 00 00 00    	jne    8060113 <gen_cvt_ftoi1+0x87>
 80600f2:	b8 80 01 00 00       	mov    $0x180,%eax
 80600f7:	48 89 c6             	mov    %rax,%rsi
 80600fa:	48 8b 05 ef dd 02 00 	mov    0x2ddef(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 8060101:	48 89 c7             	mov    %rax,%rdi
 8060104:	b8 00 00 00 00       	mov    $0x0,%eax
 8060109:	e8 36 cc ff ff       	callq  805cd44 <vpush_global_sym>
 806010e:	e9 1c 00 00 00       	jmpq   806012f <gen_cvt_ftoi1+0xa3>
 8060113:	b8 82 01 00 00       	mov    $0x182,%eax
 8060118:	48 89 c6             	mov    %rax,%rsi
 806011b:	48 8b 05 ce dd 02 00 	mov    0x2ddce(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 8060122:	48 89 c7             	mov    %rax,%rdi
 8060125:	b8 00 00 00 00       	mov    $0x0,%eax
 806012a:	e8 15 cc ff ff       	callq  805cd44 <vpush_global_sym>
 806012f:	b8 02 00 00 00       	mov    $0x2,%eax
 8060134:	48 89 c7             	mov    %rax,%rdi
 8060137:	b8 00 00 00 00       	mov    $0x0,%eax
 806013c:	e8 83 e1 ff ff       	callq  805e2c4 <vrott>
 8060141:	b8 01 00 00 00       	mov    $0x1,%eax
 8060146:	48 89 c7             	mov    %rax,%rdi
 8060149:	b8 00 00 00 00       	mov    $0x0,%eax
 806014e:	e8 1b f5 01 00       	callq  807f66e <gfunc_call>
 8060153:	b8 00 00 00 00       	mov    $0x0,%eax
 8060158:	48 89 c7             	mov    %rax,%rdi
 806015b:	b8 00 00 00 00       	mov    $0x0,%eax
 8060160:	e8 95 c6 ff ff       	callq  805c7fa <vpushi>
 8060165:	48 8b 05 b4 dd 02 00 	mov    0x2ddb4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806016c:	48 8b 00             	mov    (%rax),%rax
 806016f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8060176:	00 00 00 
 8060179:	48 01 c8             	add    %rcx,%rax
 806017c:	b9 00 00 00 00       	mov    $0x0,%ecx
 8060181:	66 89 08             	mov    %cx,(%rax)
 8060184:	48 8b 05 95 dd 02 00 	mov    0x2dd95(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806018b:	48 8b 00             	mov    (%rax),%rax
 806018e:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 8060195:	00 00 00 
 8060198:	48 01 c8             	add    %rcx,%rax
 806019b:	b9 02 00 00 00       	mov    $0x2,%ecx
 80601a0:	66 89 08             	mov    %cx,(%rax)
 80601a3:	e9 10 00 00 00       	jmpq   80601b8 <gen_cvt_ftoi1+0x12c>
 80601a8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80601ab:	48 89 c7             	mov    %rax,%rdi
 80601ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80601b3:	e8 ab 24 02 00       	callq  8082663 <gen_cvt_ftoi>
 80601b8:	c9                   	leaveq 
 80601b9:	c3                   	retq   

00000000080601ba <force_charshort_cast>:
 80601ba:	55                   	push   %rbp
 80601bb:	48 89 e5             	mov    %rsp,%rbp
 80601be:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80601c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80601c9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80601cc:	83 e0 0f             	and    $0xf,%eax
 80601cf:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80601d2:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80601d5:	83 f8 01             	cmp    $0x1,%eax
 80601d8:	0f 85 0d 00 00 00    	jne    80601eb <force_charshort_cast+0x31>
 80601de:	b8 08 00 00 00       	mov    $0x8,%eax
 80601e3:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80601e6:	e9 08 00 00 00       	jmpq   80601f3 <force_charshort_cast+0x39>
 80601eb:	b8 10 00 00 00       	mov    $0x10,%eax
 80601f0:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80601f3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80601f6:	83 e0 10             	and    $0x10,%eax
 80601f9:	85 c0                	test   %eax,%eax
 80601fb:	0f 84 31 00 00 00    	je     8060232 <force_charshort_cast+0x78>
 8060201:	b8 01 00 00 00       	mov    $0x1,%eax
 8060206:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8060209:	d3 e0                	shl    %cl,%eax
 806020b:	83 e8 01             	sub    $0x1,%eax
 806020e:	48 89 c7             	mov    %rax,%rdi
 8060211:	b8 00 00 00 00       	mov    $0x0,%eax
 8060216:	e8 df c5 ff ff       	callq  805c7fa <vpushi>
 806021b:	b8 26 00 00 00       	mov    $0x26,%eax
 8060220:	48 89 c7             	mov    %rax,%rdi
 8060223:	b8 00 00 00 00       	mov    $0x0,%eax
 8060228:	e8 93 f5 ff ff       	callq  805f7c0 <gen_op>
 806022d:	e9 63 00 00 00       	jmpq   8060295 <force_charshort_cast+0xdb>
 8060232:	b8 20 00 00 00       	mov    $0x20,%eax
 8060237:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 806023a:	48 29 c8             	sub    %rcx,%rax
 806023d:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8060240:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060243:	48 89 c7             	mov    %rax,%rdi
 8060246:	b8 00 00 00 00       	mov    $0x0,%eax
 806024b:	e8 aa c5 ff ff       	callq  805c7fa <vpushi>
 8060250:	b8 01 00 00 00       	mov    $0x1,%eax
 8060255:	48 89 c7             	mov    %rax,%rdi
 8060258:	b8 00 00 00 00       	mov    $0x0,%eax
 806025d:	e8 5e f5 ff ff       	callq  805f7c0 <gen_op>
 8060262:	48 8b 05 b7 dc 02 00 	mov    0x2dcb7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060269:	48 8b 00             	mov    (%rax),%rax
 806026c:	8b 08                	mov    (%rax),%ecx
 806026e:	83 e1 ef             	and    $0xffffffef,%ecx
 8060271:	89 08                	mov    %ecx,(%rax)
 8060273:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060276:	48 89 c7             	mov    %rax,%rdi
 8060279:	b8 00 00 00 00       	mov    $0x0,%eax
 806027e:	e8 77 c5 ff ff       	callq  805c7fa <vpushi>
 8060283:	b8 02 00 00 00       	mov    $0x2,%eax
 8060288:	48 89 c7             	mov    %rax,%rdi
 806028b:	b8 00 00 00 00       	mov    $0x0,%eax
 8060290:	e8 2b f5 ff ff       	callq  805f7c0 <gen_op>
 8060295:	c9                   	leaveq 
 8060296:	c3                   	retq   

0000000008060297 <gen_cast>:
 8060297:	55                   	push   %rbp
 8060298:	48 89 e5             	mov    %rsp,%rbp
 806029b:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 80602a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80602a6:	48 8b 05 73 dc 02 00 	mov    0x2dc73(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80602ad:	48 8b 00             	mov    (%rax),%rax
 80602b0:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80602b7:	00 00 00 
 80602ba:	48 01 c8             	add    %rcx,%rax
 80602bd:	0f b7 08             	movzwl (%rax),%ecx
 80602c0:	81 e1 00 04 00 00    	and    $0x400,%ecx
 80602c6:	85 c9                	test   %ecx,%ecx
 80602c8:	0f 84 3c 00 00 00    	je     806030a <gen_cast+0x73>
 80602ce:	48 8b 05 4b dc 02 00 	mov    0x2dc4b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80602d5:	48 8b 00             	mov    (%rax),%rax
 80602d8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80602df:	00 00 00 
 80602e2:	48 01 c8             	add    %rcx,%rax
 80602e5:	0f b7 08             	movzwl (%rax),%ecx
 80602e8:	81 e1 ff fb ff ff    	and    $0xfffffbff,%ecx
 80602ee:	66 89 08             	mov    %cx,(%rax)
 80602f1:	48 8b 05 28 dc 02 00 	mov    0x2dc28(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80602f8:	48 8b 00             	mov    (%rax),%rax
 80602fb:	8b 08                	mov    (%rax),%ecx
 80602fd:	48 89 cf             	mov    %rcx,%rdi
 8060300:	b8 00 00 00 00       	mov    $0x0,%eax
 8060305:	e8 b0 fe ff ff       	callq  80601ba <force_charshort_cast>
 806030a:	48 8b 05 0f dc 02 00 	mov    0x2dc0f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060311:	48 8b 00             	mov    (%rax),%rax
 8060314:	8b 08                	mov    (%rax),%ecx
 8060316:	83 e1 40             	and    $0x40,%ecx
 8060319:	85 c9                	test   %ecx,%ecx
 806031b:	0f 84 12 00 00 00    	je     8060333 <gen_cast+0x9c>
 8060321:	b8 01 00 00 00       	mov    $0x1,%eax
 8060326:	48 89 c7             	mov    %rax,%rdi
 8060329:	b8 00 00 00 00       	mov    $0x0,%eax
 806032e:	e8 f7 d3 ff ff       	callq  805d72a <gv>
 8060333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060337:	8b 08                	mov    (%rax),%ecx
 8060339:	83 e1 1f             	and    $0x1f,%ecx
 806033c:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 806033f:	48 8b 05 da db 02 00 	mov    0x2dbda(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060346:	48 8b 00             	mov    (%rax),%rax
 8060349:	8b 08                	mov    (%rax),%ecx
 806034b:	83 e1 1f             	and    $0x1f,%ecx
 806034e:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8060351:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060354:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8060357:	39 c8                	cmp    %ecx,%eax
 8060359:	0f 84 c4 09 00 00    	je     8060d23 <gen_cast+0xa8c>
 806035f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060362:	48 89 c7             	mov    %rax,%rdi
 8060365:	b8 00 00 00 00       	mov    $0x0,%eax
 806036a:	e8 b4 b8 ff ff       	callq  805bc23 <is_float>
 806036f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8060372:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060375:	48 89 c7             	mov    %rax,%rdi
 8060378:	b8 00 00 00 00       	mov    $0x0,%eax
 806037d:	e8 a1 b8 ff ff       	callq  805bc23 <is_float>
 8060382:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8060385:	48 8b 05 94 db 02 00 	mov    0x2db94(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806038c:	48 8b 00             	mov    (%rax),%rax
 806038f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8060396:	00 00 00 
 8060399:	48 01 c8             	add    %rcx,%rax
 806039c:	0f b7 08             	movzwl (%rax),%ecx
 806039f:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 80603a5:	83 f9 30             	cmp    $0x30,%ecx
 80603a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80603ad:	0f 94 c0             	sete   %al
 80603b0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80603b3:	48 8b 05 66 db 02 00 	mov    0x2db66(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80603ba:	48 8b 00             	mov    (%rax),%rax
 80603bd:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80603c4:	00 00 00 
 80603c7:	48 01 c8             	add    %rcx,%rax
 80603ca:	0f b7 08             	movzwl (%rax),%ecx
 80603cd:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 80603d3:	81 f9 30 02 00 00    	cmp    $0x230,%ecx
 80603d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80603de:	0f 94 c0             	sete   %al
 80603e1:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80603e4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80603e7:	85 c0                	test   %eax,%eax
 80603e9:	0f 84 2b 06 00 00    	je     8060a1a <gen_cast+0x783>
 80603ef:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80603f2:	83 f8 08             	cmp    $0x8,%eax
 80603f5:	0f 85 47 00 00 00    	jne    8060442 <gen_cast+0x1ab>
 80603fb:	48 8b 05 1e db 02 00 	mov    0x2db1e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060402:	48 8b 00             	mov    (%rax),%rax
 8060405:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806040c:	00 00 00 
 806040f:	48 01 c8             	add    %rcx,%rax
 8060412:	48 8b 0d 07 db 02 00 	mov    0x2db07(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060419:	48 8b 09             	mov    (%rcx),%rcx
 806041c:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060423:	00 00 00 
 8060426:	48 01 d1             	add    %rdx,%rcx
 8060429:	66 0f 6e 01          	movd   (%rcx),%xmm0
 806042d:	f3 0f 11 44 24 f0    	movss  %xmm0,-0x10(%rsp)
 8060433:	d9 44 24 f0          	flds   -0x10(%rsp)
 8060437:	d9 c0                	fld    %st(0)
 8060439:	db 38                	fstpt  (%rax)
 806043b:	dd d9                	fstp   %st(1)
 806043d:	e9 4e 00 00 00       	jmpq   8060490 <gen_cast+0x1f9>
 8060442:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060445:	83 f8 09             	cmp    $0x9,%eax
 8060448:	0f 85 42 00 00 00    	jne    8060490 <gen_cast+0x1f9>
 806044e:	48 8b 05 cb da 02 00 	mov    0x2dacb(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060455:	48 8b 00             	mov    (%rax),%rax
 8060458:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806045f:	00 00 00 
 8060462:	48 01 c8             	add    %rcx,%rax
 8060465:	48 8b 0d b4 da 02 00 	mov    0x2dab4(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806046c:	48 8b 09             	mov    (%rcx),%rcx
 806046f:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060476:	00 00 00 
 8060479:	48 01 d1             	add    %rdx,%rcx
 806047c:	f3 0f 7e 01          	movq   (%rcx),%xmm0
 8060480:	f2 0f 11 44 24 f0    	movsd  %xmm0,-0x10(%rsp)
 8060486:	dd 44 24 f0          	fldl   -0x10(%rsp)
 806048a:	d9 c0                	fld    %st(0)
 806048c:	db 38                	fstpt  (%rax)
 806048e:	dd d9                	fstp   %st(1)
 8060490:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8060493:	85 c0                	test   %eax,%eax
 8060495:	0f 84 f1 01 00 00    	je     806068c <gen_cast+0x3f5>
 806049b:	8b 45 f4             	mov    -0xc(%rbp),%eax
 806049e:	83 e0 0f             	and    $0xf,%eax
 80604a1:	83 f8 0c             	cmp    $0xc,%eax
 80604a4:	0f 85 a3 00 00 00    	jne    806054d <gen_cast+0x2b6>
 80604aa:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80604ad:	83 e0 10             	and    $0x10,%eax
 80604b0:	85 c0                	test   %eax,%eax
 80604b2:	0f 84 51 00 00 00    	je     8060509 <gen_cast+0x272>
 80604b8:	48 8b 05 61 da 02 00 	mov    0x2da61(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80604bf:	48 8b 00             	mov    (%rax),%rax
 80604c2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80604c9:	00 00 00 
 80604cc:	48 01 c8             	add    %rcx,%rax
 80604cf:	48 8b 0d 4a da 02 00 	mov    0x2da4a(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80604d6:	48 8b 09             	mov    (%rcx),%rcx
 80604d9:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80604e0:	00 00 00 
 80604e3:	48 01 d1             	add    %rdx,%rcx
 80604e6:	48 8b 11             	mov    (%rcx),%rdx
 80604e9:	48 89 d7             	mov    %rdx,%rdi
 80604ec:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 80604f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80604f5:	e8 d6 70 02 00       	callq  80875d0 <__floatundixf>
 80604fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80604fe:	d9 c0                	fld    %st(0)
 8060500:	db 38                	fstpt  (%rax)
 8060502:	dd d9                	fstp   %st(1)
 8060504:	e9 3f 00 00 00       	jmpq   8060548 <gen_cast+0x2b1>
 8060509:	48 8b 05 10 da 02 00 	mov    0x2da10(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060510:	48 8b 00             	mov    (%rax),%rax
 8060513:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806051a:	00 00 00 
 806051d:	48 01 c8             	add    %rcx,%rax
 8060520:	48 8b 0d f9 d9 02 00 	mov    0x2d9f9(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060527:	48 8b 09             	mov    (%rcx),%rcx
 806052a:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060531:	00 00 00 
 8060534:	48 01 d1             	add    %rdx,%rcx
 8060537:	48 8b 11             	mov    (%rcx),%rdx
 806053a:	52                   	push   %rdx
 806053b:	df 2c 24             	fildll (%rsp)
 806053e:	48 83 c4 08          	add    $0x8,%rsp
 8060542:	d9 c0                	fld    %st(0)
 8060544:	db 38                	fstpt  (%rax)
 8060546:	dd d9                	fstp   %st(1)
 8060548:	e9 a1 00 00 00       	jmpq   80605ee <gen_cast+0x357>
 806054d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8060550:	85 c0                	test   %eax,%eax
 8060552:	0f 84 05 00 00 00    	je     806055d <gen_cast+0x2c6>
 8060558:	e9 91 00 00 00       	jmpq   80605ee <gen_cast+0x357>
 806055d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060560:	83 e0 10             	and    $0x10,%eax
 8060563:	85 c0                	test   %eax,%eax
 8060565:	0f 84 45 00 00 00    	je     80605b0 <gen_cast+0x319>
 806056b:	48 8b 05 ae d9 02 00 	mov    0x2d9ae(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060572:	48 8b 00             	mov    (%rax),%rax
 8060575:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806057c:	00 00 00 
 806057f:	48 01 c8             	add    %rcx,%rax
 8060582:	48 8b 0d 97 d9 02 00 	mov    0x2d997(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060589:	48 8b 09             	mov    (%rcx),%rcx
 806058c:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060593:	00 00 00 
 8060596:	48 01 d1             	add    %rdx,%rcx
 8060599:	8b 11                	mov    (%rcx),%edx
 806059b:	6a 00                	pushq  $0x0
 806059d:	52                   	push   %rdx
 806059e:	df 2c 24             	fildll (%rsp)
 80605a1:	48 83 c4 10          	add    $0x10,%rsp
 80605a5:	d9 c0                	fld    %st(0)
 80605a7:	db 38                	fstpt  (%rax)
 80605a9:	dd d9                	fstp   %st(1)
 80605ab:	e9 3e 00 00 00       	jmpq   80605ee <gen_cast+0x357>
 80605b0:	48 8b 05 69 d9 02 00 	mov    0x2d969(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80605b7:	48 8b 00             	mov    (%rax),%rax
 80605ba:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80605c1:	00 00 00 
 80605c4:	48 01 c8             	add    %rcx,%rax
 80605c7:	48 8b 0d 52 d9 02 00 	mov    0x2d952(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80605ce:	48 8b 09             	mov    (%rcx),%rcx
 80605d1:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80605d8:	00 00 00 
 80605db:	48 01 d1             	add    %rdx,%rcx
 80605de:	8b 11                	mov    (%rcx),%edx
 80605e0:	52                   	push   %rdx
 80605e1:	db 04 24             	fildl  (%rsp)
 80605e4:	48 83 c4 08          	add    $0x8,%rsp
 80605e8:	d9 c0                	fld    %st(0)
 80605ea:	db 38                	fstpt  (%rax)
 80605ec:	dd d9                	fstp   %st(1)
 80605ee:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80605f1:	83 f8 08             	cmp    $0x8,%eax
 80605f4:	0f 85 43 00 00 00    	jne    806063d <gen_cast+0x3a6>
 80605fa:	48 8b 05 1f d9 02 00 	mov    0x2d91f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060601:	48 8b 00             	mov    (%rax),%rax
 8060604:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806060b:	00 00 00 
 806060e:	48 01 c8             	add    %rcx,%rax
 8060611:	48 8b 0d 08 d9 02 00 	mov    0x2d908(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060618:	48 8b 09             	mov    (%rcx),%rcx
 806061b:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060622:	00 00 00 
 8060625:	48 01 d1             	add    %rdx,%rcx
 8060628:	db 29                	fldt   (%rcx)
 806062a:	d9 5c 24 f0          	fstps  -0x10(%rsp)
 806062e:	f3 0f 10 44 24 f0    	movss  -0x10(%rsp),%xmm0
 8060634:	66 0f 7e 00          	movd   %xmm0,(%rax)
 8060638:	e9 4a 00 00 00       	jmpq   8060687 <gen_cast+0x3f0>
 806063d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060640:	83 f8 09             	cmp    $0x9,%eax
 8060643:	0f 85 3e 00 00 00    	jne    8060687 <gen_cast+0x3f0>
 8060649:	48 8b 05 d0 d8 02 00 	mov    0x2d8d0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060650:	48 8b 00             	mov    (%rax),%rax
 8060653:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806065a:	00 00 00 
 806065d:	48 01 c8             	add    %rcx,%rax
 8060660:	48 8b 0d b9 d8 02 00 	mov    0x2d8b9(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060667:	48 8b 09             	mov    (%rcx),%rcx
 806066a:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060671:	00 00 00 
 8060674:	48 01 d1             	add    %rdx,%rcx
 8060677:	db 29                	fldt   (%rcx)
 8060679:	dd 5c 24 f0          	fstpl  -0x10(%rsp)
 806067d:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
 8060683:	66 0f d6 00          	movq   %xmm0,(%rax)
 8060687:	e9 89 03 00 00       	jmpq   8060a15 <gen_cast+0x77e>
 806068c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806068f:	85 c0                	test   %eax,%eax
 8060691:	0f 84 65 00 00 00    	je     80606fc <gen_cast+0x465>
 8060697:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806069a:	83 f8 1c             	cmp    $0x1c,%eax
 806069d:	0f 85 59 00 00 00    	jne    80606fc <gen_cast+0x465>
 80606a3:	48 8b 05 76 d8 02 00 	mov    0x2d876(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80606aa:	48 8b 00             	mov    (%rax),%rax
 80606ad:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80606b4:	00 00 00 
 80606b7:	48 01 c8             	add    %rcx,%rax
 80606ba:	48 8b 0d 5f d8 02 00 	mov    0x2d85f(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80606c1:	48 8b 09             	mov    (%rcx),%rcx
 80606c4:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80606cb:	00 00 00 
 80606ce:	48 01 d1             	add    %rdx,%rcx
 80606d1:	db 29                	fldt   (%rcx)
 80606d3:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80606da:	db 7c 24 00          	fstpt  0x0(%rsp)
 80606de:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80606e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80606e7:	e8 e4 6f 02 00       	callq  80876d0 <__fixunsxfdi>
 80606ec:	48 83 c4 10          	add    $0x10,%rsp
 80606f0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80606f4:	48 89 01             	mov    %rax,(%rcx)
 80606f7:	e9 19 03 00 00       	jmpq   8060a15 <gen_cast+0x77e>
 80606fc:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80606ff:	85 c0                	test   %eax,%eax
 8060701:	0f 84 63 00 00 00    	je     806076a <gen_cast+0x4d3>
 8060707:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806070a:	83 f8 0b             	cmp    $0xb,%eax
 806070d:	0f 85 57 00 00 00    	jne    806076a <gen_cast+0x4d3>
 8060713:	48 8b 05 06 d8 02 00 	mov    0x2d806(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806071a:	48 8b 00             	mov    (%rax),%rax
 806071d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060724:	00 00 00 
 8060727:	48 01 c8             	add    %rcx,%rax
 806072a:	48 8b 0d ef d7 02 00 	mov    0x2d7ef(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060731:	48 8b 09             	mov    (%rcx),%rcx
 8060734:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806073b:	00 00 00 
 806073e:	48 01 d1             	add    %rdx,%rcx
 8060741:	db 2d e1 b2 02 00    	fldt   0x2b2e1(%rip)        # 808ba28 <L.123>
 8060747:	db 29                	fldt   (%rcx)
 8060749:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806074d:	da e9                	fucompp 
 806074f:	df e0                	fnstsw %ax
 8060751:	80 e4 45             	and    $0x45,%ah
 8060754:	80 f4 40             	xor    $0x40,%ah
 8060757:	b8 00 00 00 00       	mov    $0x0,%eax
 806075c:	0f 95 c0             	setne  %al
 806075f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 8060763:	89 01                	mov    %eax,(%rcx)
 8060765:	e9 ab 02 00 00       	jmpq   8060a15 <gen_cast+0x77e>
 806076a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806076d:	85 c0                	test   %eax,%eax
 806076f:	0f 84 4a 00 00 00    	je     80607bf <gen_cast+0x528>
 8060775:	48 8b 05 a4 d7 02 00 	mov    0x2d7a4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806077c:	48 8b 00             	mov    (%rax),%rax
 806077f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060786:	00 00 00 
 8060789:	48 01 c8             	add    %rcx,%rax
 806078c:	48 8b 0d 8d d7 02 00 	mov    0x2d78d(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060793:	48 8b 09             	mov    (%rcx),%rcx
 8060796:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806079d:	00 00 00 
 80607a0:	48 01 d1             	add    %rdx,%rcx
 80607a3:	db 29                	fldt   (%rcx)
 80607a5:	dd 5c 24 f0          	fstpl  -0x10(%rsp)
 80607a9:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
 80607af:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
 80607b4:	48 89 ca             	mov    %rcx,%rdx
 80607b7:	48 89 10             	mov    %rdx,(%rax)
 80607ba:	e9 e4 00 00 00       	jmpq   80608a3 <gen_cast+0x60c>
 80607bf:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80607c2:	83 f8 1c             	cmp    $0x1c,%eax
 80607c5:	0f 85 39 00 00 00    	jne    8060804 <gen_cast+0x56d>
 80607cb:	48 8b 05 4e d7 02 00 	mov    0x2d74e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80607d2:	48 8b 00             	mov    (%rax),%rax
 80607d5:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80607dc:	00 00 00 
 80607df:	48 01 c8             	add    %rcx,%rax
 80607e2:	48 8b 0d 37 d7 02 00 	mov    0x2d737(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80607e9:	48 8b 09             	mov    (%rcx),%rcx
 80607ec:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80607f3:	00 00 00 
 80607f6:	48 01 d1             	add    %rdx,%rcx
 80607f9:	48 8b 11             	mov    (%rcx),%rdx
 80607fc:	48 89 10             	mov    %rdx,(%rax)
 80607ff:	e9 9f 00 00 00       	jmpq   80608a3 <gen_cast+0x60c>
 8060804:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060807:	83 e0 10             	and    $0x10,%eax
 806080a:	85 c0                	test   %eax,%eax
 806080c:	0f 84 3b 00 00 00    	je     806084d <gen_cast+0x5b6>
 8060812:	48 8b 05 07 d7 02 00 	mov    0x2d707(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060819:	48 8b 00             	mov    (%rax),%rax
 806081c:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060823:	00 00 00 
 8060826:	48 01 c8             	add    %rcx,%rax
 8060829:	48 8b 0d f0 d6 02 00 	mov    0x2d6f0(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060830:	48 8b 09             	mov    (%rcx),%rcx
 8060833:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806083a:	00 00 00 
 806083d:	48 01 d1             	add    %rdx,%rcx
 8060840:	8b 11                	mov    (%rcx),%edx
 8060842:	48 89 d1             	mov    %rdx,%rcx
 8060845:	48 89 08             	mov    %rcx,(%rax)
 8060848:	e9 56 00 00 00       	jmpq   80608a3 <gen_cast+0x60c>
 806084d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060850:	83 f8 04             	cmp    $0x4,%eax
 8060853:	0f 85 05 00 00 00    	jne    806085e <gen_cast+0x5c7>
 8060859:	e9 45 00 00 00       	jmpq   80608a3 <gen_cast+0x60c>
 806085e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060861:	83 f8 0c             	cmp    $0xc,%eax
 8060864:	0f 84 39 00 00 00    	je     80608a3 <gen_cast+0x60c>
 806086a:	48 8b 05 af d6 02 00 	mov    0x2d6af(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060871:	48 8b 00             	mov    (%rax),%rax
 8060874:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806087b:	00 00 00 
 806087e:	48 01 c8             	add    %rcx,%rax
 8060881:	48 8b 0d 98 d6 02 00 	mov    0x2d698(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060888:	48 8b 09             	mov    (%rcx),%rcx
 806088b:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060892:	00 00 00 
 8060895:	48 01 d1             	add    %rdx,%rcx
 8060898:	8b 11                	mov    (%rcx),%edx
 806089a:	48 63 d2             	movslq %edx,%rdx
 806089d:	48 89 d1             	mov    %rdx,%rcx
 80608a0:	48 89 08             	mov    %rcx,(%rax)
 80608a3:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80608a6:	83 f8 1c             	cmp    $0x1c,%eax
 80608a9:	0f 85 39 00 00 00    	jne    80608e8 <gen_cast+0x651>
 80608af:	48 8b 05 6a d6 02 00 	mov    0x2d66a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80608b6:	48 8b 00             	mov    (%rax),%rax
 80608b9:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80608c0:	00 00 00 
 80608c3:	48 01 c8             	add    %rcx,%rax
 80608c6:	48 8b 0d 53 d6 02 00 	mov    0x2d653(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80608cd:	48 8b 09             	mov    (%rcx),%rcx
 80608d0:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80608d7:	00 00 00 
 80608da:	48 01 d1             	add    %rdx,%rcx
 80608dd:	48 8b 11             	mov    (%rcx),%rdx
 80608e0:	48 89 10             	mov    %rdx,(%rax)
 80608e3:	e9 2d 01 00 00       	jmpq   8060a15 <gen_cast+0x77e>
 80608e8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80608eb:	83 f8 0b             	cmp    $0xb,%eax
 80608ee:	0f 85 4d 00 00 00    	jne    8060941 <gen_cast+0x6aa>
 80608f4:	48 8b 05 25 d6 02 00 	mov    0x2d625(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80608fb:	48 8b 00             	mov    (%rax),%rax
 80608fe:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060905:	00 00 00 
 8060908:	48 01 c8             	add    %rcx,%rax
 806090b:	48 8b 0d 0e d6 02 00 	mov    0x2d60e(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060912:	48 8b 09             	mov    (%rcx),%rcx
 8060915:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806091c:	00 00 00 
 806091f:	48 01 d1             	add    %rdx,%rcx
 8060922:	48 8b 11             	mov    (%rcx),%rdx
 8060925:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806092c:	00 00 00 
 806092f:	48 39 ca             	cmp    %rcx,%rdx
 8060932:	b9 00 00 00 00       	mov    $0x0,%ecx
 8060937:	0f 95 c1             	setne  %cl
 806093a:	89 08                	mov    %ecx,(%rax)
 806093c:	e9 d4 00 00 00       	jmpq   8060a15 <gen_cast+0x77e>
 8060941:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060944:	83 f8 0c             	cmp    $0xc,%eax
 8060947:	0f 84 c8 00 00 00    	je     8060a15 <gen_cast+0x77e>
 806094d:	b8 00 00 00 00       	mov    $0x0,%eax
 8060952:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8060955:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060958:	83 e0 0f             	and    $0xf,%eax
 806095b:	83 f8 01             	cmp    $0x1,%eax
 806095e:	0f 85 0d 00 00 00    	jne    8060971 <gen_cast+0x6da>
 8060964:	b8 18 00 00 00       	mov    $0x18,%eax
 8060969:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806096c:	e9 17 00 00 00       	jmpq   8060988 <gen_cast+0x6f1>
 8060971:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060974:	83 e0 0f             	and    $0xf,%eax
 8060977:	83 f8 02             	cmp    $0x2,%eax
 806097a:	0f 85 08 00 00 00    	jne    8060988 <gen_cast+0x6f1>
 8060980:	b8 10 00 00 00       	mov    $0x10,%eax
 8060985:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8060988:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806098b:	83 e0 10             	and    $0x10,%eax
 806098e:	85 c0                	test   %eax,%eax
 8060990:	0f 84 42 00 00 00    	je     80609d8 <gen_cast+0x741>
 8060996:	48 8b 05 83 d5 02 00 	mov    0x2d583(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806099d:	48 8b 00             	mov    (%rax),%rax
 80609a0:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80609a7:	00 00 00 
 80609aa:	48 01 c8             	add    %rcx,%rax
 80609ad:	48 8b 0d 6c d5 02 00 	mov    0x2d56c(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80609b4:	48 8b 09             	mov    (%rcx),%rcx
 80609b7:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80609be:	00 00 00 
 80609c1:	48 01 d1             	add    %rdx,%rcx
 80609c4:	48 8b 11             	mov    (%rcx),%rdx
 80609c7:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 80609ca:	d3 e2                	shl    %cl,%edx
 80609cc:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 80609cf:	d3 ea                	shr    %cl,%edx
 80609d1:	89 10                	mov    %edx,(%rax)
 80609d3:	e9 3d 00 00 00       	jmpq   8060a15 <gen_cast+0x77e>
 80609d8:	48 8b 05 41 d5 02 00 	mov    0x2d541(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80609df:	48 8b 00             	mov    (%rax),%rax
 80609e2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80609e9:	00 00 00 
 80609ec:	48 01 c8             	add    %rcx,%rax
 80609ef:	48 8b 0d 2a d5 02 00 	mov    0x2d52a(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80609f6:	48 8b 09             	mov    (%rcx),%rcx
 80609f9:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8060a00:	00 00 00 
 8060a03:	48 01 d1             	add    %rdx,%rcx
 8060a06:	48 8b 11             	mov    (%rcx),%rdx
 8060a09:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 8060a0c:	d3 e2                	shl    %cl,%edx
 8060a0e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 8060a11:	d3 fa                	sar    %cl,%edx
 8060a13:	89 10                	mov    %edx,(%rax)
 8060a15:	e9 04 03 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060a1a:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8060a1d:	85 c0                	test   %eax,%eax
 8060a1f:	0f 84 4e 00 00 00    	je     8060a73 <gen_cast+0x7dc>
 8060a25:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060a28:	83 f8 0b             	cmp    $0xb,%eax
 8060a2b:	0f 85 42 00 00 00    	jne    8060a73 <gen_cast+0x7dc>
 8060a31:	48 8b 05 e8 d4 02 00 	mov    0x2d4e8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060a38:	48 8b 00             	mov    (%rax),%rax
 8060a3b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8060a42:	00 00 00 
 8060a45:	48 01 c8             	add    %rcx,%rax
 8060a48:	b9 30 00 00 00       	mov    $0x30,%ecx
 8060a4d:	66 89 08             	mov    %cx,(%rax)
 8060a50:	48 8b 05 c9 d4 02 00 	mov    0x2d4c9(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060a57:	48 8b 00             	mov    (%rax),%rax
 8060a5a:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060a61:	00 00 00 
 8060a64:	48 01 c8             	add    %rcx,%rax
 8060a67:	b9 01 00 00 00       	mov    $0x1,%ecx
 8060a6c:	89 08                	mov    %ecx,(%rax)
 8060a6e:	e9 ab 02 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060a73:	48 8b 05 86 d4 02 00 	mov    0x2d486(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8060a7a:	8b 00                	mov    (%rax),%eax
 8060a7c:	85 c0                	test   %eax,%eax
 8060a7e:	0f 84 05 00 00 00    	je     8060a89 <gen_cast+0x7f2>
 8060a84:	e9 95 02 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060a89:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8060a8c:	85 c0                	test   %eax,%eax
 8060a8e:	0f 84 20 00 00 00    	je     8060ab4 <gen_cast+0x81d>
 8060a94:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8060a97:	85 c0                	test   %eax,%eax
 8060a99:	0f 84 15 00 00 00    	je     8060ab4 <gen_cast+0x81d>
 8060a9f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060aa2:	48 89 c7             	mov    %rax,%rdi
 8060aa5:	b8 00 00 00 00       	mov    $0x0,%eax
 8060aaa:	e8 37 19 02 00       	callq  80823e6 <gen_cvt_ftof>
 8060aaf:	e9 6a 02 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060ab4:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8060ab7:	85 c0                	test   %eax,%eax
 8060ab9:	0f 84 15 00 00 00    	je     8060ad4 <gen_cast+0x83d>
 8060abf:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060ac2:	48 89 c7             	mov    %rax,%rdi
 8060ac5:	b8 00 00 00 00       	mov    $0x0,%eax
 8060aca:	e8 a1 f4 ff ff       	callq  805ff70 <gen_cvt_itof1>
 8060acf:	e9 4a 02 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060ad4:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8060ad7:	85 c0                	test   %eax,%eax
 8060ad9:	0f 84 b6 00 00 00    	je     8060b95 <gen_cast+0x8fe>
 8060adf:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060ae2:	83 f8 0b             	cmp    $0xb,%eax
 8060ae5:	0f 85 29 00 00 00    	jne    8060b14 <gen_cast+0x87d>
 8060aeb:	b8 00 00 00 00       	mov    $0x0,%eax
 8060af0:	48 89 c7             	mov    %rax,%rdi
 8060af3:	b8 00 00 00 00       	mov    $0x0,%eax
 8060af8:	e8 fd bc ff ff       	callq  805c7fa <vpushi>
 8060afd:	b8 95 00 00 00       	mov    $0x95,%eax
 8060b02:	48 89 c7             	mov    %rax,%rdi
 8060b05:	b8 00 00 00 00       	mov    $0x0,%eax
 8060b0a:	e8 b1 ec ff ff       	callq  805f7c0 <gen_op>
 8060b0f:	e9 7c 00 00 00       	jmpq   8060b90 <gen_cast+0x8f9>
 8060b14:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b17:	83 f8 10             	cmp    $0x10,%eax
 8060b1a:	0f 84 20 00 00 00    	je     8060b40 <gen_cast+0x8a9>
 8060b20:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b23:	83 f8 1c             	cmp    $0x1c,%eax
 8060b26:	0f 84 14 00 00 00    	je     8060b40 <gen_cast+0x8a9>
 8060b2c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b2f:	83 f8 0c             	cmp    $0xc,%eax
 8060b32:	0f 84 08 00 00 00    	je     8060b40 <gen_cast+0x8a9>
 8060b38:	b8 00 00 00 00       	mov    $0x0,%eax
 8060b3d:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8060b40:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b43:	48 89 c7             	mov    %rax,%rdi
 8060b46:	b8 00 00 00 00       	mov    $0x0,%eax
 8060b4b:	e8 3c f5 ff ff       	callq  806008c <gen_cvt_ftoi1>
 8060b50:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b53:	83 f8 00             	cmp    $0x0,%eax
 8060b56:	0f 85 34 00 00 00    	jne    8060b90 <gen_cast+0x8f9>
 8060b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060b60:	8b 08                	mov    (%rax),%ecx
 8060b62:	83 e1 1f             	and    $0x1f,%ecx
 8060b65:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b68:	39 c1                	cmp    %eax,%ecx
 8060b6a:	0f 84 20 00 00 00    	je     8060b90 <gen_cast+0x8f9>
 8060b70:	48 8b 05 a9 d3 02 00 	mov    0x2d3a9(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060b77:	48 8b 00             	mov    (%rax),%rax
 8060b7a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8060b7d:	89 08                	mov    %ecx,(%rax)
 8060b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060b83:	48 89 c7             	mov    %rax,%rdi
 8060b86:	b8 00 00 00 00       	mov    $0x0,%eax
 8060b8b:	e8 07 f7 ff ff       	callq  8060297 <gen_cast>
 8060b90:	e9 89 01 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060b95:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060b98:	83 e0 0f             	and    $0xf,%eax
 8060b9b:	83 f8 0c             	cmp    $0xc,%eax
 8060b9e:	0f 84 23 00 00 00    	je     8060bc7 <gen_cast+0x930>
 8060ba4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060ba7:	83 e0 0f             	and    $0xf,%eax
 8060baa:	83 f8 04             	cmp    $0x4,%eax
 8060bad:	0f 84 14 00 00 00    	je     8060bc7 <gen_cast+0x930>
 8060bb3:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060bb6:	83 e0 0f             	and    $0xf,%eax
 8060bb9:	83 f8 06             	cmp    $0x6,%eax
 8060bbc:	0f 84 05 00 00 00    	je     8060bc7 <gen_cast+0x930>
 8060bc2:	e9 8a 00 00 00       	jmpq   8060c51 <gen_cast+0x9ba>
 8060bc7:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060bca:	83 e0 0f             	and    $0xf,%eax
 8060bcd:	83 f8 0c             	cmp    $0xc,%eax
 8060bd0:	0f 84 76 00 00 00    	je     8060c4c <gen_cast+0x9b5>
 8060bd6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060bd9:	83 e0 0f             	and    $0xf,%eax
 8060bdc:	83 f8 04             	cmp    $0x4,%eax
 8060bdf:	0f 84 67 00 00 00    	je     8060c4c <gen_cast+0x9b5>
 8060be5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060be8:	83 e0 0f             	and    $0xf,%eax
 8060beb:	83 f8 06             	cmp    $0x6,%eax
 8060bee:	0f 84 58 00 00 00    	je     8060c4c <gen_cast+0x9b5>
 8060bf4:	b8 01 00 00 00       	mov    $0x1,%eax
 8060bf9:	48 89 c7             	mov    %rax,%rdi
 8060bfc:	b8 00 00 00 00       	mov    $0x0,%eax
 8060c01:	e8 24 cb ff ff       	callq  805d72a <gv>
 8060c06:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8060c09:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060c0c:	83 f8 10             	cmp    $0x10,%eax
 8060c0f:	0f 84 37 00 00 00    	je     8060c4c <gen_cast+0x9b5>
 8060c15:	b8 48 63 00 00       	mov    $0x6348,%eax
 8060c1a:	48 89 c7             	mov    %rax,%rdi
 8060c1d:	b8 00 00 00 00       	mov    $0x0,%eax
 8060c22:	e8 2a d0 01 00       	callq  807dc51 <o>
 8060c27:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8060c2a:	83 e0 07             	and    $0x7,%eax
 8060c2d:	c1 e0 03             	shl    $0x3,%eax
 8060c30:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 8060c36:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 8060c39:	83 e1 07             	and    $0x7,%ecx
 8060c3c:	48 01 c8             	add    %rcx,%rax
 8060c3f:	48 89 c7             	mov    %rax,%rdi
 8060c42:	b8 00 00 00 00       	mov    $0x0,%eax
 8060c47:	e8 05 d0 01 00       	callq  807dc51 <o>
 8060c4c:	e9 cd 00 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060c51:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060c54:	83 f8 0b             	cmp    $0xb,%eax
 8060c57:	0f 85 29 00 00 00    	jne    8060c86 <gen_cast+0x9ef>
 8060c5d:	b8 00 00 00 00       	mov    $0x0,%eax
 8060c62:	48 89 c7             	mov    %rax,%rdi
 8060c65:	b8 00 00 00 00       	mov    $0x0,%eax
 8060c6a:	e8 8b bb ff ff       	callq  805c7fa <vpushi>
 8060c6f:	b8 95 00 00 00       	mov    $0x95,%eax
 8060c74:	48 89 c7             	mov    %rax,%rdi
 8060c77:	b8 00 00 00 00       	mov    $0x0,%eax
 8060c7c:	e8 3f eb ff ff       	callq  805f7c0 <gen_op>
 8060c81:	e9 98 00 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060c86:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060c89:	83 e0 0f             	and    $0xf,%eax
 8060c8c:	83 f8 01             	cmp    $0x1,%eax
 8060c8f:	0f 84 14 00 00 00    	je     8060ca9 <gen_cast+0xa12>
 8060c95:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060c98:	83 e0 0f             	and    $0xf,%eax
 8060c9b:	83 f8 02             	cmp    $0x2,%eax
 8060c9e:	0f 84 05 00 00 00    	je     8060ca9 <gen_cast+0xa12>
 8060ca4:	e9 46 00 00 00       	jmpq   8060cef <gen_cast+0xa58>
 8060ca9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060cac:	83 f8 04             	cmp    $0x4,%eax
 8060caf:	0f 85 25 00 00 00    	jne    8060cda <gen_cast+0xa43>
 8060cb5:	48 8b 05 64 d2 02 00 	mov    0x2d264(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060cbc:	48 8b 00             	mov    (%rax),%rax
 8060cbf:	b9 00 00 00 00       	mov    $0x0,%ecx
 8060cc4:	89 08                	mov    %ecx,(%rax)
 8060cc6:	48 8d 05 6b ad 02 00 	lea    0x2ad6b(%rip),%rax        # 808ba38 <L.124>
 8060ccd:	48 89 c7             	mov    %rax,%rdi
 8060cd0:	b8 00 00 00 00       	mov    $0x0,%eax
 8060cd5:	e8 25 cc fe ff       	callq  804d8ff <tcc_warning>
 8060cda:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060cdd:	48 89 c7             	mov    %rax,%rdi
 8060ce0:	b8 00 00 00 00       	mov    $0x0,%eax
 8060ce5:	e8 d0 f4 ff ff       	callq  80601ba <force_charshort_cast>
 8060cea:	e9 2f 00 00 00       	jmpq   8060d1e <gen_cast+0xa87>
 8060cef:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060cf2:	83 e0 0f             	and    $0xf,%eax
 8060cf5:	83 f8 00             	cmp    $0x0,%eax
 8060cf8:	0f 85 20 00 00 00    	jne    8060d1e <gen_cast+0xa87>
 8060cfe:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8060d01:	83 f8 0c             	cmp    $0xc,%eax
 8060d04:	0f 85 14 00 00 00    	jne    8060d1e <gen_cast+0xa87>
 8060d0a:	b8 00 00 00 00       	mov    $0x0,%eax
 8060d0f:	e8 b4 d1 ff ff       	callq  805dec8 <lexpand>
 8060d14:	b8 00 00 00 00       	mov    $0x0,%eax
 8060d19:	e8 d4 d5 ff ff       	callq  805e2f2 <vpop>
 8060d1e:	e9 be 00 00 00       	jmpq   8060de1 <gen_cast+0xb4a>
 8060d23:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8060d26:	83 e0 0f             	and    $0xf,%eax
 8060d29:	83 f8 04             	cmp    $0x4,%eax
 8060d2c:	0f 85 af 00 00 00    	jne    8060de1 <gen_cast+0xb4a>
 8060d32:	48 8b 05 e7 d1 02 00 	mov    0x2d1e7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060d39:	48 8b 00             	mov    (%rax),%rax
 8060d3c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8060d43:	00 00 00 
 8060d46:	48 01 c8             	add    %rcx,%rax
 8060d49:	0f b7 08             	movzwl (%rax),%ecx
 8060d4c:	81 e1 00 01 00 00    	and    $0x100,%ecx
 8060d52:	85 c9                	test   %ecx,%ecx
 8060d54:	0f 84 05 00 00 00    	je     8060d5f <gen_cast+0xac8>
 8060d5a:	e9 82 00 00 00       	jmpq   8060de1 <gen_cast+0xb4a>
 8060d5f:	48 8b 05 ba d1 02 00 	mov    0x2d1ba(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060d66:	48 8b 00             	mov    (%rax),%rax
 8060d69:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8060d70:	00 00 00 
 8060d73:	48 01 c8             	add    %rcx,%rax
 8060d76:	48 8b 0d a3 d1 02 00 	mov    0x2d1a3(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060d7d:	48 8b 09             	mov    (%rcx),%rcx
 8060d80:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8060d87:	00 00 00 
 8060d8a:	48 01 d1             	add    %rdx,%rcx
 8060d8d:	0f b7 11             	movzwl (%rcx),%edx
 8060d90:	81 e2 ff 8f ff ff    	and    $0xffff8fff,%edx
 8060d96:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8060d9a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8060d9e:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8060da5:	00 00 00 
 8060da8:	48 01 c1             	add    %rax,%rcx
 8060dab:	48 8b 01             	mov    (%rcx),%rax
 8060dae:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8060db5:	00 00 00 
 8060db8:	48 01 c8             	add    %rcx,%rax
 8060dbb:	8b 08                	mov    (%rax),%ecx
 8060dbd:	48 89 cf             	mov    %rcx,%rdi
 8060dc0:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
 8060dc4:	b8 00 00 00 00       	mov    $0x0,%eax
 8060dc9:	e8 82 3f 00 00       	callq  8064d50 <lvalue_type>
 8060dce:	81 e0 00 70 00 00    	and    $0x7000,%eax
 8060dd4:	8b 4d b0             	mov    -0x50(%rbp),%ecx
 8060dd7:	48 09 c1             	or     %rax,%rcx
 8060dda:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8060dde:	66 89 08             	mov    %cx,(%rax)
 8060de1:	48 8b 05 38 d1 02 00 	mov    0x2d138(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8060de8:	48 8b 00             	mov    (%rax),%rax
 8060deb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8060def:	ba 10 00 00 00       	mov    $0x10,%edx
 8060df4:	49 89 d2             	mov    %rdx,%r10
 8060df7:	48 89 ce             	mov    %rcx,%rsi
 8060dfa:	48 89 c7             	mov    %rax,%rdi
 8060dfd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 8060e01:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 8060e05:	4c 89 d2             	mov    %r10,%rdx
 8060e08:	b8 00 00 00 00       	mov    $0x0,%eax
 8060e0d:	e8 5e 5e 02 00       	callq  8086c70 <memcpy>
 8060e12:	c9                   	leaveq 
 8060e13:	c3                   	retq   

0000000008060e14 <type_size>:
 8060e14:	55                   	push   %rbp
 8060e15:	48 89 e5             	mov    %rsp,%rbp
 8060e18:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8060e1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8060e23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8060e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060e2b:	8b 08                	mov    (%rax),%ecx
 8060e2d:	83 e1 0f             	and    $0xf,%ecx
 8060e30:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8060e33:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060e36:	83 f8 07             	cmp    $0x7,%eax
 8060e39:	0f 85 53 00 00 00    	jne    8060e92 <type_size+0x7e>
 8060e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060e43:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8060e4a:	00 00 00 
 8060e4d:	48 01 c8             	add    %rcx,%rax
 8060e50:	48 8b 08             	mov    (%rax),%rcx
 8060e53:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8060e57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8060e5b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8060e5f:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8060e66:	00 00 00 
 8060e69:	48 01 d1             	add    %rdx,%rcx
 8060e6c:	48 8b 11             	mov    (%rcx),%rdx
 8060e6f:	89 10                	mov    %edx,(%rax)
 8060e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8060e75:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060e7c:	00 00 00 
 8060e7f:	48 01 c8             	add    %rcx,%rax
 8060e82:	48 8b 08             	mov    (%rax),%rcx
 8060e85:	48 89 c8             	mov    %rcx,%rax
 8060e88:	e9 c6 01 00 00       	jmpq   8061053 <type_size+0x23f>
 8060e8d:	e9 c1 01 00 00       	jmpq   8061053 <type_size+0x23f>
 8060e92:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060e95:	83 f8 04             	cmp    $0x4,%eax
 8060e98:	0f 85 da 00 00 00    	jne    8060f78 <type_size+0x164>
 8060e9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060ea2:	8b 08                	mov    (%rax),%ecx
 8060ea4:	83 e1 20             	and    $0x20,%ecx
 8060ea7:	85 c9                	test   %ecx,%ecx
 8060ea9:	0f 84 af 00 00 00    	je     8060f5e <type_size+0x14a>
 8060eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8060eb3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8060eba:	00 00 00 
 8060ebd:	48 01 c8             	add    %rcx,%rax
 8060ec0:	48 8b 08             	mov    (%rax),%rcx
 8060ec3:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8060ec7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8060ecb:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8060ed2:	00 00 00 
 8060ed5:	48 01 c8             	add    %rcx,%rax
 8060ed8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8060edc:	48 89 ce             	mov    %rcx,%rsi
 8060edf:	48 89 c7             	mov    %rax,%rdi
 8060ee2:	b8 00 00 00 00       	mov    $0x0,%eax
 8060ee7:	e8 28 ff ff ff       	callq  8060e14 <type_size>
 8060eec:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8060eef:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8060ef2:	83 f8 00             	cmp    $0x0,%eax
 8060ef5:	0f 8d 35 00 00 00    	jge    8060f30 <type_size+0x11c>
 8060efb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8060eff:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060f06:	00 00 00 
 8060f09:	48 01 c8             	add    %rcx,%rax
 8060f0c:	48 8b 08             	mov    (%rax),%rcx
 8060f0f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8060f16:	00 00 00 
 8060f19:	48 39 c1             	cmp    %rax,%rcx
 8060f1c:	0f 8d 0e 00 00 00    	jge    8060f30 <type_size+0x11c>
 8060f22:	b8 00 00 00 00       	mov    $0x0,%eax
 8060f27:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8060f2a:	48 29 c8             	sub    %rcx,%rax
 8060f2d:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8060f30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8060f34:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8060f3b:	00 00 00 
 8060f3e:	48 01 c8             	add    %rcx,%rax
 8060f41:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8060f44:	48 63 c9             	movslq %ecx,%rcx
 8060f47:	48 89 ca             	mov    %rcx,%rdx
 8060f4a:	48 8b 08             	mov    (%rax),%rcx
 8060f4d:	48 0f af d1          	imul   %rcx,%rdx
 8060f51:	48 89 d0             	mov    %rdx,%rax
 8060f54:	e9 fa 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060f59:	e9 15 00 00 00       	jmpq   8060f73 <type_size+0x15f>
 8060f5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8060f62:	b9 08 00 00 00       	mov    $0x8,%ecx
 8060f67:	89 08                	mov    %ecx,(%rax)
 8060f69:	b8 08 00 00 00       	mov    $0x8,%eax
 8060f6e:	e9 e0 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060f73:	e9 db 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060f78:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060f7b:	83 f8 0a             	cmp    $0xa,%eax
 8060f7e:	0f 85 1a 00 00 00    	jne    8060f9e <type_size+0x18a>
 8060f84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8060f88:	b9 08 00 00 00       	mov    $0x8,%ecx
 8060f8d:	89 08                	mov    %ecx,(%rax)
 8060f8f:	b8 10 00 00 00       	mov    $0x10,%eax
 8060f94:	e9 ba 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060f99:	e9 b5 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060f9e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060fa1:	83 f8 09             	cmp    $0x9,%eax
 8060fa4:	0f 84 11 00 00 00    	je     8060fbb <type_size+0x1a7>
 8060faa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060fad:	83 f8 0c             	cmp    $0xc,%eax
 8060fb0:	0f 84 05 00 00 00    	je     8060fbb <type_size+0x1a7>
 8060fb6:	e9 1a 00 00 00       	jmpq   8060fd5 <type_size+0x1c1>
 8060fbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8060fbf:	b9 08 00 00 00       	mov    $0x8,%ecx
 8060fc4:	89 08                	mov    %ecx,(%rax)
 8060fc6:	b8 08 00 00 00       	mov    $0x8,%eax
 8060fcb:	e9 83 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060fd0:	e9 7e 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8060fd5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060fd8:	83 f8 00             	cmp    $0x0,%eax
 8060fdb:	0f 84 1d 00 00 00    	je     8060ffe <type_size+0x1ea>
 8060fe1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060fe4:	83 f8 05             	cmp    $0x5,%eax
 8060fe7:	0f 84 11 00 00 00    	je     8060ffe <type_size+0x1ea>
 8060fed:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8060ff0:	83 f8 08             	cmp    $0x8,%eax
 8060ff3:	0f 84 05 00 00 00    	je     8060ffe <type_size+0x1ea>
 8060ff9:	e9 1a 00 00 00       	jmpq   8061018 <type_size+0x204>
 8060ffe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061002:	b9 04 00 00 00       	mov    $0x4,%ecx
 8061007:	89 08                	mov    %ecx,(%rax)
 8061009:	b8 04 00 00 00       	mov    $0x4,%eax
 806100e:	e9 40 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8061013:	e9 3b 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8061018:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806101b:	83 f8 02             	cmp    $0x2,%eax
 806101e:	0f 85 1a 00 00 00    	jne    806103e <type_size+0x22a>
 8061024:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061028:	b9 02 00 00 00       	mov    $0x2,%ecx
 806102d:	89 08                	mov    %ecx,(%rax)
 806102f:	b8 02 00 00 00       	mov    $0x2,%eax
 8061034:	e9 1a 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8061039:	e9 15 00 00 00       	jmpq   8061053 <type_size+0x23f>
 806103e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061042:	b9 01 00 00 00       	mov    $0x1,%ecx
 8061047:	89 08                	mov    %ecx,(%rax)
 8061049:	b8 01 00 00 00       	mov    $0x1,%eax
 806104e:	e9 00 00 00 00       	jmpq   8061053 <type_size+0x23f>
 8061053:	c9                   	leaveq 
 8061054:	c3                   	retq   

0000000008061055 <vla_runtime_type_size>:
 8061055:	55                   	push   %rbp
 8061056:	48 89 e5             	mov    %rsp,%rbp
 8061059:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8061060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8061064:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8061068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806106c:	8b 08                	mov    (%rax),%ecx
 806106e:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 8061074:	85 c9                	test   %ecx,%ecx
 8061076:	0f 84 4b 00 00 00    	je     80610c7 <vla_runtime_type_size+0x72>
 806107c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061080:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8061087:	00 00 00 
 806108a:	48 01 c8             	add    %rcx,%rax
 806108d:	48 8b 08             	mov    (%rax),%rcx
 8061090:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8061097:	00 00 00 
 806109a:	48 01 c1             	add    %rax,%rcx
 806109d:	48 8b 01             	mov    (%rcx),%rax
 80610a0:	49 89 c2             	mov    %rax,%r10
 80610a3:	b8 32 01 00 00       	mov    $0x132,%eax
 80610a8:	48 89 c6             	mov    %rax,%rsi
 80610ab:	48 8b 05 26 ce 02 00 	mov    0x2ce26(%rip),%rax        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 80610b2:	48 89 c7             	mov    %rax,%rdi
 80610b5:	4c 89 d2             	mov    %r10,%rdx
 80610b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80610bd:	e8 06 bd ff ff       	callq  805cdc8 <vset>
 80610c2:	e9 25 00 00 00       	jmpq   80610ec <vla_runtime_type_size+0x97>
 80610c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80610cb:	48 89 c6             	mov    %rax,%rsi
 80610ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80610d2:	48 89 c7             	mov    %rax,%rdi
 80610d5:	b8 00 00 00 00       	mov    $0x0,%eax
 80610da:	e8 35 fd ff ff       	callq  8060e14 <type_size>
 80610df:	48 89 c7             	mov    %rax,%rdi
 80610e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80610e7:	e8 0e b7 ff ff       	callq  805c7fa <vpushi>
 80610ec:	c9                   	leaveq 
 80610ed:	c3                   	retq   

00000000080610ee <mk_pointer>:
 80610ee:	55                   	push   %rbp
 80610ef:	48 89 e5             	mov    %rsp,%rbp
 80610f2:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80610f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80610fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8061102:	49 89 c3             	mov    %rax,%r11
 8061105:	b8 00 00 00 00       	mov    $0x0,%eax
 806110a:	49 89 c2             	mov    %rax,%r10
 806110d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061111:	48 89 c6             	mov    %rax,%rsi
 8061114:	b8 00 00 00 20       	mov    $0x20000000,%eax
 8061119:	48 89 c7             	mov    %rax,%rdi
 806111c:	4c 89 d2             	mov    %r10,%rdx
 806111f:	4c 89 d9             	mov    %r11,%rcx
 8061122:	b8 00 00 00 00       	mov    $0x0,%eax
 8061127:	e8 2f b0 ff ff       	callq  805c15b <sym_push>
 806112c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8061130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061134:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8061138:	8b 11                	mov    (%rcx),%edx
 806113a:	81 e2 80 c7 01 00    	and    $0x1c780,%edx
 8061140:	83 ca 04             	or     $0x4,%edx
 8061143:	89 10                	mov    %edx,(%rax)
 8061145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061149:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8061150:	00 00 00 
 8061153:	48 01 c8             	add    %rcx,%rax
 8061156:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806115a:	48 89 08             	mov    %rcx,(%rax)
 806115d:	c9                   	leaveq 
 806115e:	c3                   	retq   

000000000806115f <is_compatible_func>:
 806115f:	55                   	push   %rbp
 8061160:	48 89 e5             	mov    %rsp,%rbp
 8061163:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806116a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806116e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8061172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061176:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806117d:	00 00 00 
 8061180:	48 01 c8             	add    %rcx,%rax
 8061183:	48 8b 08             	mov    (%rax),%rcx
 8061186:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806118a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806118e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8061195:	00 00 00 
 8061198:	48 01 c8             	add    %rcx,%rax
 806119b:	48 8b 08             	mov    (%rax),%rcx
 806119e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80611a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80611a6:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80611ad:	00 00 00 
 80611b0:	48 01 c8             	add    %rcx,%rax
 80611b3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80611b7:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 80611be:	00 00 00 
 80611c1:	48 01 d1             	add    %rdx,%rcx
 80611c4:	48 89 ce             	mov    %rcx,%rsi
 80611c7:	48 89 c7             	mov    %rax,%rdi
 80611ca:	b8 00 00 00 00       	mov    $0x0,%eax
 80611cf:	e8 2c 03 00 00       	callq  8061500 <is_compatible_types>
 80611d4:	85 c0                	test   %eax,%eax
 80611d6:	0f 84 05 00 00 00    	je     80611e1 <is_compatible_func+0x82>
 80611dc:	e9 0a 00 00 00       	jmpq   80611eb <is_compatible_func+0x8c>
 80611e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80611e6:	e9 b9 01 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 80611eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80611ef:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80611f6:	00 00 00 
 80611f9:	48 01 c8             	add    %rcx,%rax
 80611fc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8061200:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8061207:	00 00 00 
 806120a:	48 01 d1             	add    %rdx,%rcx
 806120d:	8b 10                	mov    (%rax),%edx
 806120f:	c1 e2 1d             	shl    $0x1d,%edx
 8061212:	c1 ea 1d             	shr    $0x1d,%edx
 8061215:	8b 01                	mov    (%rcx),%eax
 8061217:	c1 e0 1d             	shl    $0x1d,%eax
 806121a:	c1 e8 1d             	shr    $0x1d,%eax
 806121d:	48 39 c2             	cmp    %rax,%rdx
 8061220:	0f 84 0a 00 00 00    	je     8061230 <is_compatible_func+0xd1>
 8061226:	b8 00 00 00 00       	mov    $0x0,%eax
 806122b:	e9 74 01 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 8061230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061234:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806123b:	00 00 00 
 806123e:	48 01 c8             	add    %rcx,%rax
 8061241:	48 8b 08             	mov    (%rax),%rcx
 8061244:	48 b8 02 00 00 00 00 	movabs $0x2,%rax
 806124b:	00 00 00 
 806124e:	48 39 c1             	cmp    %rax,%rcx
 8061251:	0f 84 2c 00 00 00    	je     8061283 <is_compatible_func+0x124>
 8061257:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806125b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8061262:	00 00 00 
 8061265:	48 01 c8             	add    %rcx,%rax
 8061268:	48 8b 08             	mov    (%rax),%rcx
 806126b:	48 b8 02 00 00 00 00 	movabs $0x2,%rax
 8061272:	00 00 00 
 8061275:	48 39 c1             	cmp    %rax,%rcx
 8061278:	0f 84 05 00 00 00    	je     8061283 <is_compatible_func+0x124>
 806127e:	e9 0a 00 00 00       	jmpq   806128d <is_compatible_func+0x12e>
 8061283:	b8 01 00 00 00       	mov    $0x1,%eax
 8061288:	e9 17 01 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 806128d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061291:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8061298:	00 00 00 
 806129b:	48 01 c8             	add    %rcx,%rax
 806129e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80612a2:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80612a9:	00 00 00 
 80612ac:	48 01 d1             	add    %rdx,%rcx
 80612af:	48 8b 10             	mov    (%rax),%rdx
 80612b2:	48 8b 01             	mov    (%rcx),%rax
 80612b5:	48 39 c2             	cmp    %rax,%rdx
 80612b8:	0f 84 0a 00 00 00    	je     80612c8 <is_compatible_func+0x169>
 80612be:	b8 00 00 00 00       	mov    $0x0,%eax
 80612c3:	e9 dc 00 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 80612c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80612cc:	48 89 c1             	mov    %rax,%rcx
 80612cf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80612d6:	00 00 00 
 80612d9:	48 39 c1             	cmp    %rax,%rcx
 80612dc:	0f 84 a2 00 00 00    	je     8061384 <is_compatible_func+0x225>
 80612e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80612e6:	48 89 c1             	mov    %rax,%rcx
 80612e9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80612f0:	00 00 00 
 80612f3:	48 39 c1             	cmp    %rax,%rcx
 80612f6:	0f 85 0a 00 00 00    	jne    8061306 <is_compatible_func+0x1a7>
 80612fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8061301:	e9 9e 00 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 8061306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806130a:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8061311:	00 00 00 
 8061314:	48 01 c8             	add    %rcx,%rax
 8061317:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806131b:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8061322:	00 00 00 
 8061325:	48 01 d1             	add    %rdx,%rcx
 8061328:	48 89 ce             	mov    %rcx,%rsi
 806132b:	48 89 c7             	mov    %rax,%rdi
 806132e:	b8 00 00 00 00       	mov    $0x0,%eax
 8061333:	e8 05 02 00 00       	callq  806153d <is_compatible_parameter_types>
 8061338:	85 c0                	test   %eax,%eax
 806133a:	0f 84 05 00 00 00    	je     8061345 <is_compatible_func+0x1e6>
 8061340:	e9 0a 00 00 00       	jmpq   806134f <is_compatible_func+0x1f0>
 8061345:	b8 00 00 00 00       	mov    $0x0,%eax
 806134a:	e9 55 00 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 806134f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061353:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806135a:	00 00 00 
 806135d:	48 01 c8             	add    %rcx,%rax
 8061360:	48 8b 08             	mov    (%rax),%rcx
 8061363:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8061367:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806136b:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8061372:	00 00 00 
 8061375:	48 01 c8             	add    %rcx,%rax
 8061378:	48 8b 08             	mov    (%rax),%rcx
 806137b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806137f:	e9 44 ff ff ff       	jmpq   80612c8 <is_compatible_func+0x169>
 8061384:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061388:	85 c0                	test   %eax,%eax
 806138a:	0f 84 0a 00 00 00    	je     806139a <is_compatible_func+0x23b>
 8061390:	b8 00 00 00 00       	mov    $0x0,%eax
 8061395:	e9 0a 00 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 806139a:	b8 01 00 00 00       	mov    $0x1,%eax
 806139f:	e9 00 00 00 00       	jmpq   80613a4 <is_compatible_func+0x245>
 80613a4:	c9                   	leaveq 
 80613a5:	c3                   	retq   

00000000080613a6 <compare_types>:
 80613a6:	55                   	push   %rbp
 80613a7:	48 89 e5             	mov    %rsp,%rbp
 80613aa:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 80613b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80613b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80613b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80613bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80613c1:	8b 08                	mov    (%rax),%ecx
 80613c3:	81 e1 7f 38 fe ff    	and    $0xfffe387f,%ecx
 80613c9:	89 4d e0             	mov    %ecx,-0x20(%rbp)
 80613cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80613d0:	8b 08                	mov    (%rax),%ecx
 80613d2:	81 e1 7f 38 fe ff    	and    $0xfffe387f,%ecx
 80613d8:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 80613db:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80613de:	85 c0                	test   %eax,%eax
 80613e0:	0f 84 18 00 00 00    	je     80613fe <compare_types+0x58>
 80613e6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80613e9:	81 e0 ff e7 ff ff    	and    $0xffffe7ff,%eax
 80613ef:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80613f2:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80613f5:	81 e0 ff e7 ff ff    	and    $0xffffe7ff,%eax
 80613fb:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80613fe:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8061401:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8061404:	39 c8                	cmp    %ecx,%eax
 8061406:	0f 84 0a 00 00 00    	je     8061416 <compare_types+0x70>
 806140c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061411:	e9 e8 00 00 00       	jmpq   80614fe <compare_types+0x158>
 8061416:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8061419:	83 e0 0f             	and    $0xf,%eax
 806141c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806141f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8061422:	83 f8 04             	cmp    $0x4,%eax
 8061425:	0f 85 4c 00 00 00    	jne    8061477 <compare_types+0xd1>
 806142b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806142f:	48 89 c7             	mov    %rax,%rdi
 8061432:	b8 00 00 00 00       	mov    $0x0,%eax
 8061437:	e8 43 c2 00 00       	callq  806d67f <pointed_type>
 806143c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8061440:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061444:	48 89 c7             	mov    %rax,%rdi
 8061447:	b8 00 00 00 00       	mov    $0x0,%eax
 806144c:	e8 2e c2 00 00       	callq  806d67f <pointed_type>
 8061451:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8061455:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061459:	48 89 c6             	mov    %rax,%rsi
 806145c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061460:	48 89 c7             	mov    %rax,%rdi
 8061463:	b8 00 00 00 00       	mov    $0x0,%eax
 8061468:	e8 93 00 00 00       	callq  8061500 <is_compatible_types>
 806146d:	e9 8c 00 00 00       	jmpq   80614fe <compare_types+0x158>
 8061472:	e9 87 00 00 00       	jmpq   80614fe <compare_types+0x158>
 8061477:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806147a:	83 f8 07             	cmp    $0x7,%eax
 806147d:	0f 85 43 00 00 00    	jne    80614c6 <compare_types+0x120>
 8061483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061487:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806148e:	00 00 00 
 8061491:	48 01 c8             	add    %rcx,%rax
 8061494:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8061498:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806149f:	00 00 00 
 80614a2:	48 01 d1             	add    %rdx,%rcx
 80614a5:	48 8b 10             	mov    (%rax),%rdx
 80614a8:	48 8b 01             	mov    (%rcx),%rax
 80614ab:	48 89 d1             	mov    %rdx,%rcx
 80614ae:	48 89 c2             	mov    %rax,%rdx
 80614b1:	48 39 d1             	cmp    %rdx,%rcx
 80614b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80614b9:	0f 94 c0             	sete   %al
 80614bc:	e9 3d 00 00 00       	jmpq   80614fe <compare_types+0x158>
 80614c1:	e9 38 00 00 00       	jmpq   80614fe <compare_types+0x158>
 80614c6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80614c9:	83 f8 06             	cmp    $0x6,%eax
 80614cc:	0f 85 22 00 00 00    	jne    80614f4 <compare_types+0x14e>
 80614d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80614d6:	48 89 c6             	mov    %rax,%rsi
 80614d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80614dd:	48 89 c7             	mov    %rax,%rdi
 80614e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80614e5:	e8 75 fc ff ff       	callq  806115f <is_compatible_func>
 80614ea:	e9 0f 00 00 00       	jmpq   80614fe <compare_types+0x158>
 80614ef:	e9 0a 00 00 00       	jmpq   80614fe <compare_types+0x158>
 80614f4:	b8 01 00 00 00       	mov    $0x1,%eax
 80614f9:	e9 00 00 00 00       	jmpq   80614fe <compare_types+0x158>
 80614fe:	c9                   	leaveq 
 80614ff:	c3                   	retq   

0000000008061500 <is_compatible_types>:
 8061500:	55                   	push   %rbp
 8061501:	48 89 e5             	mov    %rsp,%rbp
 8061504:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806150b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806150f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8061513:	b8 00 00 00 00       	mov    $0x0,%eax
 8061518:	49 89 c2             	mov    %rax,%r10
 806151b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806151f:	48 89 c6             	mov    %rax,%rsi
 8061522:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061526:	48 89 c7             	mov    %rax,%rdi
 8061529:	4c 89 d2             	mov    %r10,%rdx
 806152c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061531:	e8 70 fe ff ff       	callq  80613a6 <compare_types>
 8061536:	e9 00 00 00 00       	jmpq   806153b <is_compatible_types+0x3b>
 806153b:	c9                   	leaveq 
 806153c:	c3                   	retq   

000000000806153d <is_compatible_parameter_types>:
 806153d:	55                   	push   %rbp
 806153e:	48 89 e5             	mov    %rsp,%rbp
 8061541:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8061548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806154c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8061550:	b8 01 00 00 00       	mov    $0x1,%eax
 8061555:	49 89 c2             	mov    %rax,%r10
 8061558:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806155c:	48 89 c6             	mov    %rax,%rsi
 806155f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061563:	48 89 c7             	mov    %rax,%rdi
 8061566:	4c 89 d2             	mov    %r10,%rdx
 8061569:	b8 00 00 00 00       	mov    $0x0,%eax
 806156e:	e8 33 fe ff ff       	callq  80613a6 <compare_types>
 8061573:	e9 00 00 00 00       	jmpq   8061578 <is_compatible_parameter_types+0x3b>
 8061578:	c9                   	leaveq 
 8061579:	c3                   	retq   

000000000806157a <type_to_str>:
 806157a:	55                   	push   %rbp
 806157b:	48 89 e5             	mov    %rsp,%rbp
 806157e:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
 8061585:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8061589:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806158d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8061591:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8061595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061599:	8b 08                	mov    (%rax),%ecx
 806159b:	81 e1 7f 38 fe ff    	and    $0xfffe387f,%ecx
 80615a1:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 80615a4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 80615a7:	83 e0 0f             	and    $0xf,%eax
 80615aa:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80615ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80615b1:	b9 00 00 00 00       	mov    $0x0,%ecx
 80615b6:	88 08                	mov    %cl,(%rax)
 80615b8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 80615bb:	81 e0 00 08 00 00    	and    $0x800,%eax
 80615c1:	85 c0                	test   %eax,%eax
 80615c3:	0f 84 24 00 00 00    	je     80615ed <type_to_str+0x73>
 80615c9:	48 8d 05 9a a4 02 00 	lea    0x2a49a(%rip),%rax        # 808ba6a <L.125>
 80615d0:	49 89 c2             	mov    %rax,%r10
 80615d3:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80615d6:	48 89 c6             	mov    %rax,%rsi
 80615d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80615dd:	48 89 c7             	mov    %rax,%rdi
 80615e0:	4c 89 d2             	mov    %r10,%rdx
 80615e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80615e8:	e8 7e a7 fe ff       	callq  804bd6b <pstrcat>
 80615ed:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 80615f0:	81 e0 00 10 00 00    	and    $0x1000,%eax
 80615f6:	85 c0                	test   %eax,%eax
 80615f8:	0f 84 24 00 00 00    	je     8061622 <type_to_str+0xa8>
 80615fe:	48 8d 05 6c a4 02 00 	lea    0x2a46c(%rip),%rax        # 808ba71 <L.126>
 8061605:	49 89 c2             	mov    %rax,%r10
 8061608:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806160b:	48 89 c6             	mov    %rax,%rsi
 806160e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061612:	48 89 c7             	mov    %rax,%rdi
 8061615:	4c 89 d2             	mov    %r10,%rdx
 8061618:	b8 00 00 00 00       	mov    $0x0,%eax
 806161d:	e8 49 a7 fe ff       	callq  804bd6b <pstrcat>
 8061622:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8061625:	83 e0 10             	and    $0x10,%eax
 8061628:	85 c0                	test   %eax,%eax
 806162a:	0f 84 24 00 00 00    	je     8061654 <type_to_str+0xda>
 8061630:	48 8d 05 44 a4 02 00 	lea    0x2a444(%rip),%rax        # 808ba7b <L.127>
 8061637:	49 89 c2             	mov    %rax,%r10
 806163a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806163d:	48 89 c6             	mov    %rax,%rsi
 8061640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061644:	48 89 c7             	mov    %rax,%rdi
 8061647:	4c 89 d2             	mov    %r10,%rdx
 806164a:	b8 00 00 00 00       	mov    $0x0,%eax
 806164f:	e8 17 a7 fe ff       	callq  804bd6b <pstrcat>
 8061654:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8061657:	e9 05 00 00 00       	jmpq   8061661 <type_to_str+0xe7>
 806165c:	e9 09 00 00 00       	jmpq   806166a <type_to_str+0xf0>
 8061661:	83 f8 03             	cmp    $0x3,%eax
 8061664:	0f 85 18 00 00 00    	jne    8061682 <type_to_str+0x108>
 806166a:	48 8d 05 14 a4 02 00 	lea    0x2a414(%rip),%rax        # 808ba85 <L.128>
 8061671:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8061678:	e9 24 01 00 00       	jmpq   80617a1 <type_to_str+0x227>
 806167d:	e9 09 00 00 00       	jmpq   806168b <type_to_str+0x111>
 8061682:	83 f8 0b             	cmp    $0xb,%eax
 8061685:	0f 85 18 00 00 00    	jne    80616a3 <type_to_str+0x129>
 806168b:	48 8d 05 f8 a3 02 00 	lea    0x2a3f8(%rip),%rax        # 808ba8a <L.129>
 8061692:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8061699:	e9 03 01 00 00       	jmpq   80617a1 <type_to_str+0x227>
 806169e:	e9 09 00 00 00       	jmpq   80616ac <type_to_str+0x132>
 80616a3:	83 f8 01             	cmp    $0x1,%eax
 80616a6:	0f 85 18 00 00 00    	jne    80616c4 <type_to_str+0x14a>
 80616ac:	48 8d 05 dd a3 02 00 	lea    0x2a3dd(%rip),%rax        # 808ba90 <L.130>
 80616b3:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 80616ba:	e9 e2 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 80616bf:	e9 09 00 00 00       	jmpq   80616cd <type_to_str+0x153>
 80616c4:	83 f8 02             	cmp    $0x2,%eax
 80616c7:	0f 85 18 00 00 00    	jne    80616e5 <type_to_str+0x16b>
 80616cd:	48 8d 05 c1 a3 02 00 	lea    0x2a3c1(%rip),%rax        # 808ba95 <L.131>
 80616d4:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 80616db:	e9 c1 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 80616e0:	e9 09 00 00 00       	jmpq   80616ee <type_to_str+0x174>
 80616e5:	83 f8 00             	cmp    $0x0,%eax
 80616e8:	0f 85 18 00 00 00    	jne    8061706 <type_to_str+0x18c>
 80616ee:	48 8d 05 a6 a3 02 00 	lea    0x2a3a6(%rip),%rax        # 808ba9b <L.132>
 80616f5:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 80616fc:	e9 a0 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 8061701:	e9 09 00 00 00       	jmpq   806170f <type_to_str+0x195>
 8061706:	83 f8 0d             	cmp    $0xd,%eax
 8061709:	0f 85 18 00 00 00    	jne    8061727 <type_to_str+0x1ad>
 806170f:	48 8d 05 89 a3 02 00 	lea    0x2a389(%rip),%rax        # 808ba9f <L.133>
 8061716:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 806171d:	e9 7f 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 8061722:	e9 09 00 00 00       	jmpq   8061730 <type_to_str+0x1b6>
 8061727:	83 f8 0c             	cmp    $0xc,%eax
 806172a:	0f 85 18 00 00 00    	jne    8061748 <type_to_str+0x1ce>
 8061730:	48 8d 05 6d a3 02 00 	lea    0x2a36d(%rip),%rax        # 808baa4 <L.134>
 8061737:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 806173e:	e9 5e 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 8061743:	e9 09 00 00 00       	jmpq   8061751 <type_to_str+0x1d7>
 8061748:	83 f8 08             	cmp    $0x8,%eax
 806174b:	0f 85 18 00 00 00    	jne    8061769 <type_to_str+0x1ef>
 8061751:	48 8d 05 56 a3 02 00 	lea    0x2a356(%rip),%rax        # 808baae <L.135>
 8061758:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 806175f:	e9 3d 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 8061764:	e9 09 00 00 00       	jmpq   8061772 <type_to_str+0x1f8>
 8061769:	83 f8 09             	cmp    $0x9,%eax
 806176c:	0f 85 18 00 00 00    	jne    806178a <type_to_str+0x210>
 8061772:	48 8d 05 3b a3 02 00 	lea    0x2a33b(%rip),%rax        # 808bab4 <L.136>
 8061779:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8061780:	e9 1c 00 00 00       	jmpq   80617a1 <type_to_str+0x227>
 8061785:	e9 09 00 00 00       	jmpq   8061793 <type_to_str+0x219>
 806178a:	83 f8 0a             	cmp    $0xa,%eax
 806178d:	0f 85 3c 00 00 00    	jne    80617cf <type_to_str+0x255>
 8061793:	48 8d 05 21 a3 02 00 	lea    0x2a321(%rip),%rax        # 808babb <L.137>
 806179a:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 80617a1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
 80617a8:	49 89 c2             	mov    %rax,%r10
 80617ab:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80617ae:	48 89 c6             	mov    %rax,%rsi
 80617b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80617b5:	48 89 c7             	mov    %rax,%rdi
 80617b8:	4c 89 d2             	mov    %r10,%rdx
 80617bb:	b8 00 00 00 00       	mov    $0x0,%eax
 80617c0:	e8 a6 a5 fe ff       	callq  804bd6b <pstrcat>
 80617c5:	e9 4b 03 00 00       	jmpq   8061b15 <type_to_str+0x59b>
 80617ca:	e9 09 00 00 00       	jmpq   80617d8 <type_to_str+0x25e>
 80617cf:	83 f8 05             	cmp    $0x5,%eax
 80617d2:	0f 85 05 00 00 00    	jne    80617dd <type_to_str+0x263>
 80617d8:	e9 09 00 00 00       	jmpq   80617e6 <type_to_str+0x26c>
 80617dd:	83 f8 07             	cmp    $0x7,%eax
 80617e0:	0f 85 e7 00 00 00    	jne    80618cd <type_to_str+0x353>
 80617e6:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80617e9:	83 f8 07             	cmp    $0x7,%eax
 80617ec:	0f 85 13 00 00 00    	jne    8061805 <type_to_str+0x28b>
 80617f2:	48 8d 05 ce a2 02 00 	lea    0x2a2ce(%rip),%rax        # 808bac7 <L.138>
 80617f9:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8061800:	e9 0e 00 00 00       	jmpq   8061813 <type_to_str+0x299>
 8061805:	48 8d 05 c3 a2 02 00 	lea    0x2a2c3(%rip),%rax        # 808bacf <L.139>
 806180c:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8061813:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
 806181a:	49 89 c2             	mov    %rax,%r10
 806181d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061820:	48 89 c6             	mov    %rax,%rsi
 8061823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061827:	48 89 c7             	mov    %rax,%rdi
 806182a:	4c 89 d2             	mov    %r10,%rdx
 806182d:	b8 00 00 00 00       	mov    $0x0,%eax
 8061832:	e8 34 a5 fe ff       	callq  804bd6b <pstrcat>
 8061837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806183b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8061842:	00 00 00 
 8061845:	48 01 c8             	add    %rcx,%rax
 8061848:	48 8b 08             	mov    (%rax),%rcx
 806184b:	8b 01                	mov    (%rcx),%eax
 806184d:	81 e0 ff ff ff bf    	and    $0xbfffffff,%eax
 8061853:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8061856:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8061859:	81 f8 00 00 00 10    	cmp    $0x10000000,%eax
 806185f:	0f 8c 29 00 00 00    	jl     806188e <type_to_str+0x314>
 8061865:	48 8d 05 69 a2 02 00 	lea    0x2a269(%rip),%rax        # 808bad5 <L.140>
 806186c:	49 89 c2             	mov    %rax,%r10
 806186f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061872:	48 89 c6             	mov    %rax,%rsi
 8061875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061879:	48 89 c7             	mov    %rax,%rdi
 806187c:	4c 89 d2             	mov    %r10,%rdx
 806187f:	b8 00 00 00 00       	mov    $0x0,%eax
 8061884:	e8 e2 a4 fe ff       	callq  804bd6b <pstrcat>
 8061889:	e9 35 00 00 00       	jmpq   80618c3 <type_to_str+0x349>
 806188e:	b8 00 00 00 00       	mov    $0x0,%eax
 8061893:	48 89 c6             	mov    %rax,%rsi
 8061896:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8061899:	48 89 c7             	mov    %rax,%rdi
 806189c:	b8 00 00 00 00       	mov    $0x0,%eax
 80618a1:	e8 0e 00 ff ff       	callq  80518b4 <get_tok_str>
 80618a6:	49 89 c2             	mov    %rax,%r10
 80618a9:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80618ac:	48 89 c6             	mov    %rax,%rsi
 80618af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80618b3:	48 89 c7             	mov    %rax,%rdi
 80618b6:	4c 89 d2             	mov    %r10,%rdx
 80618b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80618be:	e8 a8 a4 fe ff       	callq  804bd6b <pstrcat>
 80618c3:	e9 4d 02 00 00       	jmpq   8061b15 <type_to_str+0x59b>
 80618c8:	e9 09 00 00 00       	jmpq   80618d6 <type_to_str+0x35c>
 80618cd:	83 f8 06             	cmp    $0x6,%eax
 80618d0:	0f 85 83 01 00 00    	jne    8061a59 <type_to_str+0x4df>
 80618d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80618da:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80618e1:	00 00 00 
 80618e4:	48 01 c8             	add    %rcx,%rax
 80618e7:	48 8b 08             	mov    (%rax),%rcx
 80618ea:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 80618ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80618f2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80618f9:	00 00 00 
 80618fc:	48 01 c8             	add    %rcx,%rax
 80618ff:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8061903:	49 89 cb             	mov    %rcx,%r11
 8061906:	49 89 c2             	mov    %rax,%r10
 8061909:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806190c:	48 89 c6             	mov    %rax,%rsi
 806190f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061913:	48 89 c7             	mov    %rax,%rdi
 8061916:	4c 89 d2             	mov    %r10,%rdx
 8061919:	4c 89 d9             	mov    %r11,%rcx
 806191c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061921:	e8 54 fc ff ff       	callq  806157a <type_to_str>
 8061926:	48 8d 05 b4 a1 02 00 	lea    0x2a1b4(%rip),%rax        # 808bae1 <L.141>
 806192d:	49 89 c2             	mov    %rax,%r10
 8061930:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061933:	48 89 c6             	mov    %rax,%rsi
 8061936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806193a:	48 89 c7             	mov    %rax,%rdi
 806193d:	4c 89 d2             	mov    %r10,%rdx
 8061940:	b8 00 00 00 00       	mov    $0x0,%eax
 8061945:	e8 21 a4 fe ff       	callq  804bd6b <pstrcat>
 806194a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806194e:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8061955:	00 00 00 
 8061958:	48 01 c8             	add    %rcx,%rax
 806195b:	48 8b 08             	mov    (%rax),%rcx
 806195e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8061962:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8061966:	48 89 c1             	mov    %rax,%rcx
 8061969:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8061970:	00 00 00 
 8061973:	48 39 c1             	cmp    %rax,%rcx
 8061976:	0f 84 af 00 00 00    	je     8061a2b <type_to_str+0x4b1>
 806197c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8061980:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8061987:	00 00 00 
 806198a:	48 01 c8             	add    %rcx,%rax
 806198d:	b9 00 00 00 00       	mov    $0x0,%ecx
 8061992:	49 89 cb             	mov    %rcx,%r11
 8061995:	49 89 c2             	mov    %rax,%r10
 8061998:	b8 00 01 00 00       	mov    $0x100,%eax
 806199d:	48 89 c6             	mov    %rax,%rsi
 80619a0:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
 80619a7:	48 89 c7             	mov    %rax,%rdi
 80619aa:	4c 89 d2             	mov    %r10,%rdx
 80619ad:	4c 89 d9             	mov    %r11,%rcx
 80619b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80619b5:	e8 c0 fb ff ff       	callq  806157a <type_to_str>
 80619ba:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
 80619c1:	49 89 c2             	mov    %rax,%r10
 80619c4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80619c7:	48 89 c6             	mov    %rax,%rsi
 80619ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80619ce:	48 89 c7             	mov    %rax,%rdi
 80619d1:	4c 89 d2             	mov    %r10,%rdx
 80619d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80619d9:	e8 8d a3 fe ff       	callq  804bd6b <pstrcat>
 80619de:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80619e2:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80619e9:	00 00 00 
 80619ec:	48 01 c8             	add    %rcx,%rax
 80619ef:	48 8b 08             	mov    (%rax),%rcx
 80619f2:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 80619f6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80619fa:	85 c0                	test   %eax,%eax
 80619fc:	0f 84 24 00 00 00    	je     8061a26 <type_to_str+0x4ac>
 8061a02:	48 8d 05 da a0 02 00 	lea    0x2a0da(%rip),%rax        # 808bae3 <L.142>
 8061a09:	49 89 c2             	mov    %rax,%r10
 8061a0c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061a0f:	48 89 c6             	mov    %rax,%rsi
 8061a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061a16:	48 89 c7             	mov    %rax,%rdi
 8061a19:	4c 89 d2             	mov    %r10,%rdx
 8061a1c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061a21:	e8 45 a3 fe ff       	callq  804bd6b <pstrcat>
 8061a26:	e9 37 ff ff ff       	jmpq   8061962 <type_to_str+0x3e8>
 8061a2b:	48 8d 05 b4 a0 02 00 	lea    0x2a0b4(%rip),%rax        # 808bae6 <L.143>
 8061a32:	49 89 c2             	mov    %rax,%r10
 8061a35:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061a38:	48 89 c6             	mov    %rax,%rsi
 8061a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061a3f:	48 89 c7             	mov    %rax,%rdi
 8061a42:	4c 89 d2             	mov    %r10,%rdx
 8061a45:	b8 00 00 00 00       	mov    $0x0,%eax
 8061a4a:	e8 1c a3 fe ff       	callq  804bd6b <pstrcat>
 8061a4f:	e9 12 01 00 00       	jmpq   8061b66 <type_to_str+0x5ec>
 8061a54:	e9 09 00 00 00       	jmpq   8061a62 <type_to_str+0x4e8>
 8061a59:	83 f8 04             	cmp    $0x4,%eax
 8061a5c:	0f 85 b3 00 00 00    	jne    8061b15 <type_to_str+0x59b>
 8061a62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061a66:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8061a6d:	00 00 00 
 8061a70:	48 01 c8             	add    %rcx,%rax
 8061a73:	48 8b 08             	mov    (%rax),%rcx
 8061a76:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 8061a7a:	48 8d 05 67 a0 02 00 	lea    0x2a067(%rip),%rax        # 808bae8 <L.144>
 8061a81:	49 89 c2             	mov    %rax,%r10
 8061a84:	b8 00 01 00 00       	mov    $0x100,%eax
 8061a89:	48 89 c6             	mov    %rax,%rsi
 8061a8c:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
 8061a93:	48 89 c7             	mov    %rax,%rdi
 8061a96:	4c 89 d2             	mov    %r10,%rdx
 8061a99:	b8 00 00 00 00       	mov    $0x0,%eax
 8061a9e:	e8 00 a2 fe ff       	callq  804bca3 <pstrcpy>
 8061aa3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061aa7:	85 c0                	test   %eax,%eax
 8061aa9:	0f 84 26 00 00 00    	je     8061ad5 <type_to_str+0x55b>
 8061aaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061ab3:	49 89 c2             	mov    %rax,%r10
 8061ab6:	b8 00 01 00 00       	mov    $0x100,%eax
 8061abb:	48 89 c6             	mov    %rax,%rsi
 8061abe:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
 8061ac5:	48 89 c7             	mov    %rax,%rdi
 8061ac8:	4c 89 d2             	mov    %r10,%rdx
 8061acb:	b8 00 00 00 00       	mov    $0x0,%eax
 8061ad0:	e8 96 a2 fe ff       	callq  804bd6b <pstrcat>
 8061ad5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8061ad9:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8061ae0:	00 00 00 
 8061ae3:	48 01 c8             	add    %rcx,%rax
 8061ae6:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
 8061aed:	49 89 cb             	mov    %rcx,%r11
 8061af0:	49 89 c2             	mov    %rax,%r10
 8061af3:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061af6:	48 89 c6             	mov    %rax,%rsi
 8061af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061afd:	48 89 c7             	mov    %rax,%rdi
 8061b00:	4c 89 d2             	mov    %r10,%rdx
 8061b03:	4c 89 d9             	mov    %r11,%rcx
 8061b06:	b8 00 00 00 00       	mov    $0x0,%eax
 8061b0b:	e8 6a fa ff ff       	callq  806157a <type_to_str>
 8061b10:	e9 51 00 00 00       	jmpq   8061b66 <type_to_str+0x5ec>
 8061b15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061b19:	85 c0                	test   %eax,%eax
 8061b1b:	0f 84 45 00 00 00    	je     8061b66 <type_to_str+0x5ec>
 8061b21:	48 8d 05 c2 9f 02 00 	lea    0x29fc2(%rip),%rax        # 808baea <L.145>
 8061b28:	49 89 c2             	mov    %rax,%r10
 8061b2b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061b2e:	48 89 c6             	mov    %rax,%rsi
 8061b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061b35:	48 89 c7             	mov    %rax,%rdi
 8061b38:	4c 89 d2             	mov    %r10,%rdx
 8061b3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8061b40:	e8 26 a2 fe ff       	callq  804bd6b <pstrcat>
 8061b45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061b49:	49 89 c2             	mov    %rax,%r10
 8061b4c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8061b4f:	48 89 c6             	mov    %rax,%rsi
 8061b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061b56:	48 89 c7             	mov    %rax,%rdi
 8061b59:	4c 89 d2             	mov    %r10,%rdx
 8061b5c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061b61:	e8 05 a2 fe ff       	callq  804bd6b <pstrcat>
 8061b66:	c9                   	leaveq 
 8061b67:	c3                   	retq   

0000000008061b68 <gen_assign_cast>:
 8061b68:	55                   	push   %rbp
 8061b69:	48 89 e5             	mov    %rsp,%rbp
 8061b6c:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
 8061b73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8061b77:	48 8b 05 a2 c3 02 00 	mov    0x2c3a2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8061b7e:	48 8b 00             	mov    (%rax),%rax
 8061b81:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8061b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061b89:	8b 08                	mov    (%rax),%ecx
 8061b8b:	83 e1 0f             	and    $0xf,%ecx
 8061b8e:	89 8d bc fd ff ff    	mov    %ecx,-0x244(%rbp)
 8061b94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061b98:	8b 08                	mov    (%rax),%ecx
 8061b9a:	83 e1 0f             	and    $0xf,%ecx
 8061b9d:	89 8d b8 fd ff ff    	mov    %ecx,-0x248(%rbp)
 8061ba3:	8b 85 b8 fd ff ff    	mov    -0x248(%rbp),%eax
 8061ba9:	83 f8 03             	cmp    $0x3,%eax
 8061bac:	0f 85 14 00 00 00    	jne    8061bc6 <gen_assign_cast+0x5e>
 8061bb2:	48 8d 05 33 9f 02 00 	lea    0x29f33(%rip),%rax        # 808baec <L.146>
 8061bb9:	48 89 c7             	mov    %rax,%rdi
 8061bbc:	b8 00 00 00 00       	mov    $0x0,%eax
 8061bc1:	e8 01 bb fe ff       	callq  804d6c7 <tcc_error>
 8061bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061bca:	8b 08                	mov    (%rax),%ecx
 8061bcc:	81 e1 00 08 00 00    	and    $0x800,%ecx
 8061bd2:	85 c9                	test   %ecx,%ecx
 8061bd4:	0f 84 14 00 00 00    	je     8061bee <gen_assign_cast+0x86>
 8061bda:	48 8d 05 24 9f 02 00 	lea    0x29f24(%rip),%rax        # 808bb05 <L.147>
 8061be1:	48 89 c7             	mov    %rax,%rdi
 8061be4:	b8 00 00 00 00       	mov    $0x0,%eax
 8061be9:	e8 11 bd fe ff       	callq  804d8ff <tcc_warning>
 8061bee:	8b 85 bc fd ff ff    	mov    -0x244(%rbp),%eax
 8061bf4:	e9 05 00 00 00       	jmpq   8061bfe <gen_assign_cast+0x96>
 8061bf9:	e9 09 00 00 00       	jmpq   8061c07 <gen_assign_cast+0x9f>
 8061bfe:	83 f8 04             	cmp    $0x4,%eax
 8061c01:	0f 85 5c 02 00 00    	jne    8061e63 <gen_assign_cast+0x2fb>
 8061c07:	48 8b 05 12 c3 02 00 	mov    0x2c312(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8061c0e:	48 8b 00             	mov    (%rax),%rax
 8061c11:	48 89 c7             	mov    %rax,%rdi
 8061c14:	b8 00 00 00 00       	mov    $0x0,%eax
 8061c19:	e8 ff b8 00 00       	callq  806d51d <is_null_pointer>
 8061c1e:	85 c0                	test   %eax,%eax
 8061c20:	0f 84 05 00 00 00    	je     8061c2b <gen_assign_cast+0xc3>
 8061c26:	e9 d8 03 00 00       	jmpq   8062003 <gen_assign_cast+0x49b>
 8061c2b:	8b 85 b8 fd ff ff    	mov    -0x248(%rbp),%eax
 8061c31:	48 89 c7             	mov    %rax,%rdi
 8061c34:	b8 00 00 00 00       	mov    $0x0,%eax
 8061c39:	e8 8d b8 00 00       	callq  806d4cb <is_integer_btype>
 8061c3e:	85 c0                	test   %eax,%eax
 8061c40:	0f 84 19 00 00 00    	je     8061c5f <gen_assign_cast+0xf7>
 8061c46:	48 8d 05 d9 9e 02 00 	lea    0x29ed9(%rip),%rax        # 808bb26 <L.148>
 8061c4d:	48 89 c7             	mov    %rax,%rdi
 8061c50:	b8 00 00 00 00       	mov    $0x0,%eax
 8061c55:	e8 a5 bc fe ff       	callq  804d8ff <tcc_warning>
 8061c5a:	e9 a4 03 00 00       	jmpq   8062003 <gen_assign_cast+0x49b>
 8061c5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061c63:	48 89 c7             	mov    %rax,%rdi
 8061c66:	b8 00 00 00 00       	mov    $0x0,%eax
 8061c6b:	e8 0f ba 00 00       	callq  806d67f <pointed_type>
 8061c70:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8061c74:	8b 85 b8 fd ff ff    	mov    -0x248(%rbp),%eax
 8061c7a:	83 f8 06             	cmp    $0x6,%eax
 8061c7d:	0f 85 5d 00 00 00    	jne    8061ce0 <gen_assign_cast+0x178>
 8061c83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061c87:	8b 08                	mov    (%rax),%ecx
 8061c89:	83 e1 0f             	and    $0xf,%ecx
 8061c8c:	83 f9 03             	cmp    $0x3,%ecx
 8061c8f:	0f 84 46 00 00 00    	je     8061cdb <gen_assign_cast+0x173>
 8061c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061c99:	48 89 c7             	mov    %rax,%rdi
 8061c9c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061ca1:	e8 d9 b9 00 00       	callq  806d67f <pointed_type>
 8061ca6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8061caa:	48 89 ce             	mov    %rcx,%rsi
 8061cad:	48 89 c7             	mov    %rax,%rdi
 8061cb0:	b8 00 00 00 00       	mov    $0x0,%eax
 8061cb5:	e8 46 f8 ff ff       	callq  8061500 <is_compatible_types>
 8061cba:	85 c0                	test   %eax,%eax
 8061cbc:	0f 84 05 00 00 00    	je     8061cc7 <gen_assign_cast+0x15f>
 8061cc2:	e9 14 00 00 00       	jmpq   8061cdb <gen_assign_cast+0x173>
 8061cc7:	48 8d 05 8d 9e 02 00 	lea    0x29e8d(%rip),%rax        # 808bb5b <L.149>
 8061cce:	48 89 c7             	mov    %rax,%rdi
 8061cd1:	b8 00 00 00 00       	mov    $0x0,%eax
 8061cd6:	e8 24 bc fe ff       	callq  804d8ff <tcc_warning>
 8061cdb:	e9 23 03 00 00       	jmpq   8062003 <gen_assign_cast+0x49b>
 8061ce0:	8b 85 b8 fd ff ff    	mov    -0x248(%rbp),%eax
 8061ce6:	83 f8 04             	cmp    $0x4,%eax
 8061ce9:	0f 84 05 00 00 00    	je     8061cf4 <gen_assign_cast+0x18c>
 8061cef:	e9 7d 02 00 00       	jmpq   8061f71 <gen_assign_cast+0x409>
 8061cf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061cf8:	48 89 c7             	mov    %rax,%rdi
 8061cfb:	b8 00 00 00 00       	mov    $0x0,%eax
 8061d00:	e8 7a b9 00 00       	callq  806d67f <pointed_type>
 8061d05:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8061d09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061d0d:	8b 08                	mov    (%rax),%ecx
 8061d0f:	83 e1 0f             	and    $0xf,%ecx
 8061d12:	83 f9 03             	cmp    $0x3,%ecx
 8061d15:	0f 84 17 00 00 00    	je     8061d32 <gen_assign_cast+0x1ca>
 8061d1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061d1f:	8b 08                	mov    (%rax),%ecx
 8061d21:	83 e1 0f             	and    $0xf,%ecx
 8061d24:	83 f9 03             	cmp    $0x3,%ecx
 8061d27:	0f 84 05 00 00 00    	je     8061d32 <gen_assign_cast+0x1ca>
 8061d2d:	e9 05 00 00 00       	jmpq   8061d37 <gen_assign_cast+0x1cf>
 8061d32:	e9 a5 00 00 00       	jmpq   8061ddc <gen_assign_cast+0x274>
 8061d37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061d3b:	b9 10 00 00 00       	mov    $0x10,%ecx
 8061d40:	49 89 ca             	mov    %rcx,%r10
 8061d43:	48 89 c6             	mov    %rax,%rsi
 8061d46:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 8061d4a:	48 89 cf             	mov    %rcx,%rdi
 8061d4d:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
 8061d54:	4c 89 d2             	mov    %r10,%rdx
 8061d57:	b8 00 00 00 00       	mov    $0x0,%eax
 8061d5c:	e8 0f 4f 02 00       	callq  8086c70 <memcpy>
 8061d61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061d65:	b9 10 00 00 00       	mov    $0x10,%ecx
 8061d6a:	49 89 ca             	mov    %rcx,%r10
 8061d6d:	48 89 c6             	mov    %rax,%rsi
 8061d70:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
 8061d74:	48 89 cf             	mov    %rcx,%rdi
 8061d77:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
 8061d7e:	4c 89 d2             	mov    %r10,%rdx
 8061d81:	b8 00 00 00 00       	mov    $0x0,%eax
 8061d86:	e8 e5 4e 02 00       	callq  8086c70 <memcpy>
 8061d8b:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8061d8e:	81 e0 ef e7 ff ff    	and    $0xffffe7ef,%eax
 8061d94:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8061d97:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8061d9a:	81 e0 ef e7 ff ff    	and    $0xffffe7ef,%eax
 8061da0:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8061da3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8061da7:	48 89 c6             	mov    %rax,%rsi
 8061daa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 8061dae:	48 89 c7             	mov    %rax,%rdi
 8061db1:	b8 00 00 00 00       	mov    $0x0,%eax
 8061db6:	e8 45 f7 ff ff       	callq  8061500 <is_compatible_types>
 8061dbb:	85 c0                	test   %eax,%eax
 8061dbd:	0f 84 05 00 00 00    	je     8061dc8 <gen_assign_cast+0x260>
 8061dc3:	e9 14 00 00 00       	jmpq   8061ddc <gen_assign_cast+0x274>
 8061dc8:	48 8d 05 b6 9d 02 00 	lea    0x29db6(%rip),%rax        # 808bb85 <L.150>
 8061dcf:	48 89 c7             	mov    %rax,%rdi
 8061dd2:	b8 00 00 00 00       	mov    $0x0,%eax
 8061dd7:	e8 23 bb fe ff       	callq  804d8ff <tcc_warning>
 8061ddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061de0:	8b 08                	mov    (%rax),%ecx
 8061de2:	81 e1 00 08 00 00    	and    $0x800,%ecx
 8061de8:	85 c9                	test   %ecx,%ecx
 8061dea:	0f 84 05 00 00 00    	je     8061df5 <gen_assign_cast+0x28d>
 8061df0:	e9 19 00 00 00       	jmpq   8061e0e <gen_assign_cast+0x2a6>
 8061df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061df9:	8b 08                	mov    (%rax),%ecx
 8061dfb:	81 e1 00 08 00 00    	and    $0x800,%ecx
 8061e01:	85 c9                	test   %ecx,%ecx
 8061e03:	0f 84 05 00 00 00    	je     8061e0e <gen_assign_cast+0x2a6>
 8061e09:	e9 37 00 00 00       	jmpq   8061e45 <gen_assign_cast+0x2dd>
 8061e0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8061e12:	8b 08                	mov    (%rax),%ecx
 8061e14:	81 e1 00 10 00 00    	and    $0x1000,%ecx
 8061e1a:	85 c9                	test   %ecx,%ecx
 8061e1c:	0f 84 05 00 00 00    	je     8061e27 <gen_assign_cast+0x2bf>
 8061e22:	e9 19 00 00 00       	jmpq   8061e40 <gen_assign_cast+0x2d8>
 8061e27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8061e2b:	8b 08                	mov    (%rax),%ecx
 8061e2d:	81 e1 00 10 00 00    	and    $0x1000,%ecx
 8061e33:	85 c9                	test   %ecx,%ecx
 8061e35:	0f 84 05 00 00 00    	je     8061e40 <gen_assign_cast+0x2d8>
 8061e3b:	e9 05 00 00 00       	jmpq   8061e45 <gen_assign_cast+0x2dd>
 8061e40:	e9 14 00 00 00       	jmpq   8061e59 <gen_assign_cast+0x2f1>
 8061e45:	48 8d 05 63 9d 02 00 	lea    0x29d63(%rip),%rax        # 808bbaf <L.151>
 8061e4c:	48 89 c7             	mov    %rax,%rdi
 8061e4f:	b8 00 00 00 00       	mov    $0x0,%eax
 8061e54:	e8 a6 ba fe ff       	callq  804d8ff <tcc_warning>
 8061e59:	e9 a5 01 00 00       	jmpq   8062003 <gen_assign_cast+0x49b>
 8061e5e:	e9 09 00 00 00       	jmpq   8061e6c <gen_assign_cast+0x304>
 8061e63:	83 f8 01             	cmp    $0x1,%eax
 8061e66:	0f 85 05 00 00 00    	jne    8061e71 <gen_assign_cast+0x309>
 8061e6c:	e9 09 00 00 00       	jmpq   8061e7a <gen_assign_cast+0x312>
 8061e71:	83 f8 02             	cmp    $0x2,%eax
 8061e74:	0f 85 05 00 00 00    	jne    8061e7f <gen_assign_cast+0x317>
 8061e7a:	e9 09 00 00 00       	jmpq   8061e88 <gen_assign_cast+0x320>
 8061e7f:	83 f8 00             	cmp    $0x0,%eax
 8061e82:	0f 85 05 00 00 00    	jne    8061e8d <gen_assign_cast+0x325>
 8061e88:	e9 09 00 00 00       	jmpq   8061e96 <gen_assign_cast+0x32e>
 8061e8d:	83 f8 0c             	cmp    $0xc,%eax
 8061e90:	0f 85 41 00 00 00    	jne    8061ed7 <gen_assign_cast+0x36f>
 8061e96:	8b 85 b8 fd ff ff    	mov    -0x248(%rbp),%eax
 8061e9c:	83 f8 04             	cmp    $0x4,%eax
 8061e9f:	0f 84 14 00 00 00    	je     8061eb9 <gen_assign_cast+0x351>
 8061ea5:	8b 85 b8 fd ff ff    	mov    -0x248(%rbp),%eax
 8061eab:	83 f8 06             	cmp    $0x6,%eax
 8061eae:	0f 84 05 00 00 00    	je     8061eb9 <gen_assign_cast+0x351>
 8061eb4:	e9 14 00 00 00       	jmpq   8061ecd <gen_assign_cast+0x365>
 8061eb9:	48 8d 05 27 9d 02 00 	lea    0x29d27(%rip),%rax        # 808bbe7 <L.152>
 8061ec0:	48 89 c7             	mov    %rax,%rdi
 8061ec3:	b8 00 00 00 00       	mov    $0x0,%eax
 8061ec8:	e8 32 ba fe ff       	callq  804d8ff <tcc_warning>
 8061ecd:	e9 31 01 00 00       	jmpq   8062003 <gen_assign_cast+0x49b>
 8061ed2:	e9 09 00 00 00       	jmpq   8061ee0 <gen_assign_cast+0x378>
 8061ed7:	83 f8 07             	cmp    $0x7,%eax
 8061eda:	0f 85 23 01 00 00    	jne    8062003 <gen_assign_cast+0x49b>
 8061ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061ee4:	b9 10 00 00 00       	mov    $0x10,%ecx
 8061ee9:	49 89 ca             	mov    %rcx,%r10
 8061eec:	48 89 c6             	mov    %rax,%rsi
 8061eef:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 8061ef3:	48 89 cf             	mov    %rcx,%rdi
 8061ef6:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
 8061efd:	4c 89 d2             	mov    %r10,%rdx
 8061f00:	b8 00 00 00 00       	mov    $0x0,%eax
 8061f05:	e8 66 4d 02 00       	callq  8086c70 <memcpy>
 8061f0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061f0e:	b9 10 00 00 00       	mov    $0x10,%ecx
 8061f13:	49 89 ca             	mov    %rcx,%r10
 8061f16:	48 89 c6             	mov    %rax,%rsi
 8061f19:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
 8061f1d:	48 89 cf             	mov    %rcx,%rdi
 8061f20:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
 8061f27:	4c 89 d2             	mov    %r10,%rdx
 8061f2a:	b8 00 00 00 00       	mov    $0x0,%eax
 8061f2f:	e8 3c 4d 02 00       	callq  8086c70 <memcpy>
 8061f34:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8061f37:	81 e0 ff e7 ff ff    	and    $0xffffe7ff,%eax
 8061f3d:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8061f40:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8061f43:	81 e0 ff e7 ff ff    	and    $0xffffe7ff,%eax
 8061f49:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8061f4c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8061f50:	48 89 c6             	mov    %rax,%rsi
 8061f53:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 8061f57:	48 89 c7             	mov    %rax,%rdi
 8061f5a:	b8 00 00 00 00       	mov    $0x0,%eax
 8061f5f:	e8 9c f5 ff ff       	callq  8061500 <is_compatible_types>
 8061f64:	85 c0                	test   %eax,%eax
 8061f66:	0f 84 05 00 00 00    	je     8061f71 <gen_assign_cast+0x409>
 8061f6c:	e9 8d 00 00 00       	jmpq   8061ffe <gen_assign_cast+0x496>
 8061f71:	b8 00 00 00 00       	mov    $0x0,%eax
 8061f76:	49 89 c3             	mov    %rax,%r11
 8061f79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8061f7d:	49 89 c2             	mov    %rax,%r10
 8061f80:	b8 00 01 00 00       	mov    $0x100,%eax
 8061f85:	48 89 c6             	mov    %rax,%rsi
 8061f88:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
 8061f8f:	48 89 c7             	mov    %rax,%rdi
 8061f92:	4c 89 d2             	mov    %r10,%rdx
 8061f95:	4c 89 d9             	mov    %r11,%rcx
 8061f98:	b8 00 00 00 00       	mov    $0x0,%eax
 8061f9d:	e8 d8 f5 ff ff       	callq  806157a <type_to_str>
 8061fa2:	b8 00 00 00 00       	mov    $0x0,%eax
 8061fa7:	49 89 c3             	mov    %rax,%r11
 8061faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8061fae:	49 89 c2             	mov    %rax,%r10
 8061fb1:	b8 00 01 00 00       	mov    $0x100,%eax
 8061fb6:	48 89 c6             	mov    %rax,%rsi
 8061fb9:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
 8061fc0:	48 89 c7             	mov    %rax,%rdi
 8061fc3:	4c 89 d2             	mov    %r10,%rdx
 8061fc6:	4c 89 d9             	mov    %r11,%rcx
 8061fc9:	b8 00 00 00 00       	mov    $0x0,%eax
 8061fce:	e8 a7 f5 ff ff       	callq  806157a <type_to_str>
 8061fd3:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
 8061fda:	49 89 c2             	mov    %rax,%r10
 8061fdd:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
 8061fe4:	48 89 c6             	mov    %rax,%rsi
 8061fe7:	48 8d 05 2e 9c 02 00 	lea    0x29c2e(%rip),%rax        # 808bc1c <L.153>
 8061fee:	48 89 c7             	mov    %rax,%rdi
 8061ff1:	4c 89 d2             	mov    %r10,%rdx
 8061ff4:	b8 00 00 00 00       	mov    $0x0,%eax
 8061ff9:	e8 c9 b6 fe ff       	callq  804d6c7 <tcc_error>
 8061ffe:	e9 00 00 00 00       	jmpq   8062003 <gen_assign_cast+0x49b>
 8062003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062007:	48 89 c7             	mov    %rax,%rdi
 806200a:	b8 00 00 00 00       	mov    $0x0,%eax
 806200f:	e8 83 e2 ff ff       	callq  8060297 <gen_cast>
 8062014:	c9                   	leaveq 
 8062015:	c3                   	retq   

0000000008062016 <vstore>:
 8062016:	55                   	push   %rbp
 8062017:	48 89 e5             	mov    %rsp,%rbp
 806201a:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 8062021:	48 8b 05 f8 be 02 00 	mov    0x2bef8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062028:	48 8b 00             	mov    (%rax),%rax
 806202b:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8062032:	ff ff ff 
 8062035:	48 01 c8             	add    %rcx,%rax
 8062038:	8b 08                	mov    (%rax),%ecx
 806203a:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 806203d:	48 8b 05 dc be 02 00 	mov    0x2bedc(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062044:	48 8b 00             	mov    (%rax),%rax
 8062047:	8b 08                	mov    (%rax),%ecx
 8062049:	83 e1 0f             	and    $0xf,%ecx
 806204c:	89 4d fc             	mov    %ecx,-0x4(%rbp)
 806204f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062052:	83 e0 0f             	and    $0xf,%eax
 8062055:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8062058:	8b 45 fc             	mov    -0x4(%rbp),%eax
 806205b:	83 f8 00             	cmp    $0x0,%eax
 806205e:	0f 84 11 00 00 00    	je     8062075 <vstore+0x5f>
 8062064:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8062067:	83 f8 02             	cmp    $0x2,%eax
 806206a:	0f 84 05 00 00 00    	je     8062075 <vstore+0x5f>
 8062070:	e9 11 00 00 00       	jmpq   8062086 <vstore+0x70>
 8062075:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8062078:	83 f8 01             	cmp    $0x1,%eax
 806207b:	0f 85 05 00 00 00    	jne    8062086 <vstore+0x70>
 8062081:	e9 22 00 00 00       	jmpq   80620a8 <vstore+0x92>
 8062086:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8062089:	83 f8 00             	cmp    $0x0,%eax
 806208c:	0f 85 11 00 00 00    	jne    80620a3 <vstore+0x8d>
 8062092:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8062095:	83 f8 02             	cmp    $0x2,%eax
 8062098:	0f 85 05 00 00 00    	jne    80620a3 <vstore+0x8d>
 806209e:	e9 05 00 00 00       	jmpq   80620a8 <vstore+0x92>
 80620a3:	e9 63 00 00 00       	jmpq   806210b <vstore+0xf5>
 80620a8:	48 8b 05 71 be 02 00 	mov    0x2be71(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80620af:	48 8b 00             	mov    (%rax),%rax
 80620b2:	8b 08                	mov    (%rax),%ecx
 80620b4:	83 e1 40             	and    $0x40,%ecx
 80620b7:	85 c9                	test   %ecx,%ecx
 80620b9:	0f 84 05 00 00 00    	je     80620c4 <vstore+0xae>
 80620bf:	e9 47 00 00 00       	jmpq   806210b <vstore+0xf5>
 80620c4:	b8 00 04 00 00       	mov    $0x400,%eax
 80620c9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 80620cc:	48 8b 05 4d be 02 00 	mov    0x2be4d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80620d3:	48 8b 00             	mov    (%rax),%rax
 80620d6:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 80620d9:	81 e1 3f 38 02 00    	and    $0x2383f,%ecx
 80620df:	89 08                	mov    %ecx,(%rax)
 80620e1:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80620e4:	81 e0 00 08 00 00    	and    $0x800,%eax
 80620ea:	85 c0                	test   %eax,%eax
 80620ec:	0f 84 14 00 00 00    	je     8062106 <vstore+0xf0>
 80620f2:	48 8d 05 3c 9b 02 00 	lea    0x29b3c(%rip),%rax        # 808bc35 <L.154>
 80620f9:	48 89 c7             	mov    %rax,%rdi
 80620fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8062101:	e8 f9 b7 fe ff       	callq  804d8ff <tcc_warning>
 8062106:	e9 3f 00 00 00       	jmpq   806214a <vstore+0x134>
 806210b:	b8 00 00 00 00       	mov    $0x0,%eax
 8062110:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8062113:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062116:	83 e0 40             	and    $0x40,%eax
 8062119:	85 c0                	test   %eax,%eax
 806211b:	0f 84 05 00 00 00    	je     8062126 <vstore+0x110>
 8062121:	e9 24 00 00 00       	jmpq   806214a <vstore+0x134>
 8062126:	48 8b 05 f3 bd 02 00 	mov    0x2bdf3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806212d:	48 8b 00             	mov    (%rax),%rax
 8062130:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8062137:	ff ff ff 
 806213a:	48 01 c8             	add    %rcx,%rax
 806213d:	48 89 c7             	mov    %rax,%rdi
 8062140:	b8 00 00 00 00       	mov    $0x0,%eax
 8062145:	e8 1e fa ff ff       	callq  8061b68 <gen_assign_cast>
 806214a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 806214d:	83 f8 07             	cmp    $0x7,%eax
 8062150:	0f 85 01 01 00 00    	jne    8062257 <vstore+0x241>
 8062156:	48 8b 05 a3 bd 02 00 	mov    0x2bda3(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 806215d:	8b 00                	mov    (%rax),%eax
 806215f:	85 c0                	test   %eax,%eax
 8062161:	0f 84 05 00 00 00    	je     806216c <vstore+0x156>
 8062167:	e9 d2 00 00 00       	jmpq   806223e <vstore+0x228>
 806216c:	48 8b 05 ad bd 02 00 	mov    0x2bdad(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062173:	48 8b 00             	mov    (%rax),%rax
 8062176:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
 806217a:	48 89 ce             	mov    %rcx,%rsi
 806217d:	48 89 c7             	mov    %rax,%rdi
 8062180:	b8 00 00 00 00       	mov    $0x0,%eax
 8062185:	e8 8a ec ff ff       	callq  8060e14 <type_size>
 806218a:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806218d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062192:	e8 b7 ac ff ff       	callq  805ce4e <vswap>
 8062197:	48 8b 05 82 bd 02 00 	mov    0x2bd82(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806219e:	48 8b 00             	mov    (%rax),%rax
 80621a1:	b9 04 00 00 00       	mov    $0x4,%ecx
 80621a6:	89 08                	mov    %ecx,(%rax)
 80621a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80621ad:	e8 a8 b4 ff ff       	callq  805d65a <gaddrof>
 80621b2:	b8 74 01 00 00       	mov    $0x174,%eax
 80621b7:	48 89 c6             	mov    %rax,%rsi
 80621ba:	48 8b 05 2f bd 02 00 	mov    0x2bd2f(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 80621c1:	48 89 c7             	mov    %rax,%rdi
 80621c4:	b8 00 00 00 00       	mov    $0x0,%eax
 80621c9:	e8 76 ab ff ff       	callq  805cd44 <vpush_global_sym>
 80621ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80621d3:	e8 76 ac ff ff       	callq  805ce4e <vswap>
 80621d8:	48 8b 05 41 bd 02 00 	mov    0x2bd41(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80621df:	48 8b 00             	mov    (%rax),%rax
 80621e2:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 80621e9:	00 00 00 
 80621ec:	48 29 c8             	sub    %rcx,%rax
 80621ef:	48 89 c7             	mov    %rax,%rdi
 80621f2:	b8 00 00 00 00       	mov    $0x0,%eax
 80621f7:	e8 83 ad ff ff       	callq  805cf7f <vpushv>
 80621fc:	48 8b 05 1d bd 02 00 	mov    0x2bd1d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062203:	48 8b 00             	mov    (%rax),%rax
 8062206:	b9 04 00 00 00       	mov    $0x4,%ecx
 806220b:	89 08                	mov    %ecx,(%rax)
 806220d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062212:	e8 43 b4 ff ff       	callq  805d65a <gaddrof>
 8062217:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806221a:	48 89 c7             	mov    %rax,%rdi
 806221d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062222:	e8 d3 a5 ff ff       	callq  805c7fa <vpushi>
 8062227:	b8 03 00 00 00       	mov    $0x3,%eax
 806222c:	48 89 c7             	mov    %rax,%rdi
 806222f:	b8 00 00 00 00       	mov    $0x0,%eax
 8062234:	e8 35 d4 01 00       	callq  807f66e <gfunc_call>
 8062239:	e9 14 00 00 00       	jmpq   8062252 <vstore+0x23c>
 806223e:	b8 00 00 00 00       	mov    $0x0,%eax
 8062243:	e8 06 ac ff ff       	callq  805ce4e <vswap>
 8062248:	b8 00 00 00 00       	mov    $0x0,%eax
 806224d:	e8 a0 c0 ff ff       	callq  805e2f2 <vpop>
 8062252:	e9 47 04 00 00       	jmpq   806269e <vstore+0x688>
 8062257:	8b 45 f4             	mov    -0xc(%rbp),%eax
 806225a:	83 e0 40             	and    $0x40,%eax
 806225d:	85 c0                	test   %eax,%eax
 806225f:	0f 84 8d 02 00 00    	je     80624f2 <vstore+0x4dc>
 8062265:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062268:	c1 f8 12             	sar    $0x12,%eax
 806226b:	83 e0 3f             	and    $0x3f,%eax
 806226e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8062271:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062274:	c1 f8 18             	sar    $0x18,%eax
 8062277:	83 e0 3f             	and    $0x3f,%eax
 806227a:	89 45 e0             	mov    %eax,-0x20(%rbp)
 806227d:	48 8b 05 9c bc 02 00 	mov    0x2bc9c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062284:	48 8b 00             	mov    (%rax),%rax
 8062287:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 806228e:	ff ff ff 
 8062291:	48 01 c8             	add    %rcx,%rax
 8062294:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8062297:	81 e1 bf ff 03 00    	and    $0x3ffbf,%ecx
 806229d:	89 08                	mov    %ecx,(%rax)
 806229f:	b8 00 00 00 00       	mov    $0x0,%eax
 80622a4:	e8 16 c1 ff ff       	callq  805e3bf <gv_dup>
 80622a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80622ae:	e8 9b ab ff ff       	callq  805ce4e <vswap>
 80622b3:	b8 03 00 00 00       	mov    $0x3,%eax
 80622b8:	48 89 c7             	mov    %rax,%rdi
 80622bb:	b8 00 00 00 00       	mov    $0x0,%eax
 80622c0:	e8 ff bf ff ff       	callq  805e2c4 <vrott>
 80622c5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80622c8:	83 e0 0f             	and    $0xf,%eax
 80622cb:	83 f8 0b             	cmp    $0xb,%eax
 80622ce:	0f 85 5c 00 00 00    	jne    8062330 <vstore+0x31a>
 80622d4:	48 8b 05 45 bc 02 00 	mov    0x2bc45(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80622db:	48 8b 00             	mov    (%rax),%rax
 80622de:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 80622e5:	ff ff ff 
 80622e8:	48 01 c8             	add    %rcx,%rax
 80622eb:	48 89 c7             	mov    %rax,%rdi
 80622ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80622f3:	e8 9f df ff ff       	callq  8060297 <gen_cast>
 80622f8:	48 8b 05 21 bc 02 00 	mov    0x2bc21(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80622ff:	48 8b 00             	mov    (%rax),%rax
 8062302:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8062309:	ff ff ff 
 806230c:	48 01 c8             	add    %rcx,%rax
 806230f:	48 8b 0d 0a bc 02 00 	mov    0x2bc0a(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062316:	48 8b 09             	mov    (%rcx),%rcx
 8062319:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8062320:	ff ff ff 
 8062323:	48 01 d1             	add    %rdx,%rcx
 8062326:	8b 11                	mov    (%rcx),%edx
 8062328:	83 e2 f0             	and    $0xfffffff0,%edx
 806232b:	83 ca 11             	or     $0x11,%edx
 806232e:	89 10                	mov    %edx,(%rax)
 8062330:	b8 00 00 00 00       	mov    $0x0,%eax
 8062335:	e8 e6 ac ff ff       	callq  805d020 <vdup>
 806233a:	48 8b 05 df bb 02 00 	mov    0x2bbdf(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062341:	48 8b 00             	mov    (%rax),%rax
 8062344:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 806234b:	ff ff ff 
 806234e:	48 01 c8             	add    %rcx,%rax
 8062351:	48 8b 0d c8 bb 02 00 	mov    0x2bbc8(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062358:	48 8b 09             	mov    (%rcx),%rcx
 806235b:	48 ba a0 ff ff ff ff 	movabs $0xffffffffffffffa0,%rdx
 8062362:	ff ff ff 
 8062365:	48 01 d1             	add    %rdx,%rcx
 8062368:	ba 30 00 00 00       	mov    $0x30,%edx
 806236d:	49 89 d2             	mov    %rdx,%r10
 8062370:	48 89 ce             	mov    %rcx,%rsi
 8062373:	48 89 c7             	mov    %rax,%rdi
 8062376:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806237a:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 806237e:	4c 89 d2             	mov    %r10,%rdx
 8062381:	b8 00 00 00 00       	mov    $0x0,%eax
 8062386:	e8 e5 48 02 00       	callq  8086c70 <memcpy>
 806238b:	8b 45 f4             	mov    -0xc(%rbp),%eax
 806238e:	83 e0 0f             	and    $0xf,%eax
 8062391:	83 f8 0b             	cmp    $0xb,%eax
 8062394:	0f 84 70 00 00 00    	je     806240a <vstore+0x3f4>
 806239a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 806239d:	83 e0 0f             	and    $0xf,%eax
 80623a0:	83 f8 0c             	cmp    $0xc,%eax
 80623a3:	0f 85 35 00 00 00    	jne    80623de <vstore+0x3c8>
 80623a9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 80623b0:	00 00 00 
 80623b3:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80623b6:	48 d3 e0             	shl    %cl,%rax
 80623b9:	48 89 c1             	mov    %rax,%rcx
 80623bc:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 80623c3:	00 00 00 
 80623c6:	48 29 c1             	sub    %rax,%rcx
 80623c9:	48 89 c8             	mov    %rcx,%rax
 80623cc:	48 89 c7             	mov    %rax,%rdi
 80623cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80623d4:	e8 ae a4 ff ff       	callq  805c887 <vpushll>
 80623d9:	e9 1a 00 00 00       	jmpq   80623f8 <vstore+0x3e2>
 80623de:	b8 01 00 00 00       	mov    $0x1,%eax
 80623e3:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80623e6:	d3 e0                	shl    %cl,%eax
 80623e8:	83 e8 01             	sub    $0x1,%eax
 80623eb:	48 89 c7             	mov    %rax,%rdi
 80623ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80623f3:	e8 02 a4 ff ff       	callq  805c7fa <vpushi>
 80623f8:	b8 26 00 00 00       	mov    $0x26,%eax
 80623fd:	48 89 c7             	mov    %rax,%rdi
 8062400:	b8 00 00 00 00       	mov    $0x0,%eax
 8062405:	e8 b6 d3 ff ff       	callq  805f7c0 <gen_op>
 806240a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806240d:	48 89 c7             	mov    %rax,%rdi
 8062410:	b8 00 00 00 00       	mov    $0x0,%eax
 8062415:	e8 e0 a3 ff ff       	callq  805c7fa <vpushi>
 806241a:	b8 01 00 00 00       	mov    $0x1,%eax
 806241f:	48 89 c7             	mov    %rax,%rdi
 8062422:	b8 00 00 00 00       	mov    $0x0,%eax
 8062427:	e8 94 d3 ff ff       	callq  805f7c0 <gen_op>
 806242c:	b8 00 00 00 00       	mov    $0x0,%eax
 8062431:	e8 18 aa ff ff       	callq  805ce4e <vswap>
 8062436:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062439:	83 e0 0f             	and    $0xf,%eax
 806243c:	83 f8 0c             	cmp    $0xc,%eax
 806243f:	0f 85 4e 00 00 00    	jne    8062493 <vstore+0x47d>
 8062445:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 806244c:	00 00 00 
 806244f:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8062452:	48 d3 e0             	shl    %cl,%rax
 8062455:	48 89 c1             	mov    %rax,%rcx
 8062458:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 806245f:	00 00 00 
 8062462:	48 29 c1             	sub    %rax,%rcx
 8062465:	48 89 c8             	mov    %rcx,%rax
 8062468:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806246b:	48 d3 e0             	shl    %cl,%rax
 806246e:	48 89 c1             	mov    %rax,%rcx
 8062471:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rax
 8062478:	ff ff ff 
 806247b:	48 31 c1             	xor    %rax,%rcx
 806247e:	48 89 c8             	mov    %rcx,%rax
 8062481:	48 89 c7             	mov    %rax,%rdi
 8062484:	b8 00 00 00 00       	mov    $0x0,%eax
 8062489:	e8 f9 a3 ff ff       	callq  805c887 <vpushll>
 806248e:	e9 22 00 00 00       	jmpq   80624b5 <vstore+0x49f>
 8062493:	b8 01 00 00 00       	mov    $0x1,%eax
 8062498:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 806249b:	d3 e0                	shl    %cl,%eax
 806249d:	83 e8 01             	sub    $0x1,%eax
 80624a0:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 80624a3:	d3 e0                	shl    %cl,%eax
 80624a5:	83 f0 ff             	xor    $0xffffffff,%eax
 80624a8:	48 89 c7             	mov    %rax,%rdi
 80624ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80624b0:	e8 45 a3 ff ff       	callq  805c7fa <vpushi>
 80624b5:	b8 26 00 00 00       	mov    $0x26,%eax
 80624ba:	48 89 c7             	mov    %rax,%rdi
 80624bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80624c2:	e8 f9 d2 ff ff       	callq  805f7c0 <gen_op>
 80624c7:	b8 7c 00 00 00       	mov    $0x7c,%eax
 80624cc:	48 89 c7             	mov    %rax,%rdi
 80624cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80624d4:	e8 e7 d2 ff ff       	callq  805f7c0 <gen_op>
 80624d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80624de:	e8 33 fb ff ff       	callq  8062016 <vstore>
 80624e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80624e8:	e8 05 be ff ff       	callq  805e2f2 <vpop>
 80624ed:	e9 ac 01 00 00       	jmpq   806269e <vstore+0x688>
 80624f2:	48 8b 05 07 ba 02 00 	mov    0x2ba07(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 80624f9:	8b 00                	mov    (%rax),%eax
 80624fb:	85 c0                	test   %eax,%eax
 80624fd:	0f 84 05 00 00 00    	je     8062508 <vstore+0x4f2>
 8062503:	e9 45 01 00 00       	jmpq   806264d <vstore+0x637>
 8062508:	b8 01 00 00 00       	mov    $0x1,%eax
 806250d:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8062510:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062513:	48 89 c7             	mov    %rax,%rdi
 8062516:	b8 00 00 00 00       	mov    $0x0,%eax
 806251b:	e8 03 97 ff ff       	callq  805bc23 <is_float>
 8062520:	85 c0                	test   %eax,%eax
 8062522:	0f 84 1f 00 00 00    	je     8062547 <vstore+0x531>
 8062528:	b8 02 00 00 00       	mov    $0x2,%eax
 806252d:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8062530:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062533:	83 e0 0f             	and    $0xf,%eax
 8062536:	83 f8 0a             	cmp    $0xa,%eax
 8062539:	0f 85 08 00 00 00    	jne    8062547 <vstore+0x531>
 806253f:	b8 40 00 00 00       	mov    $0x40,%eax
 8062544:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8062547:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806254a:	48 89 c7             	mov    %rax,%rdi
 806254d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062552:	e8 d3 b1 ff ff       	callq  805d72a <gv>
 8062557:	89 45 f0             	mov    %eax,-0x10(%rbp)
 806255a:	48 8b 05 bf b9 02 00 	mov    0x2b9bf(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062561:	48 8b 00             	mov    (%rax),%rax
 8062564:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 806256b:	ff ff ff 
 806256e:	48 01 c8             	add    %rcx,%rax
 8062571:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8062578:	00 00 00 
 806257b:	48 01 c8             	add    %rcx,%rax
 806257e:	0f b7 08             	movzwl (%rax),%ecx
 8062581:	83 e1 3f             	and    $0x3f,%ecx
 8062584:	83 f9 31             	cmp    $0x31,%ecx
 8062587:	0f 85 96 00 00 00    	jne    8062623 <vstore+0x60d>
 806258d:	b8 01 00 00 00       	mov    $0x1,%eax
 8062592:	48 89 c7             	mov    %rax,%rdi
 8062595:	b8 00 00 00 00       	mov    $0x0,%eax
 806259a:	e8 76 ad ff ff       	callq  805d315 <get_reg>
 806259f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80625a2:	b8 04 00 00 00       	mov    $0x4,%eax
 80625a7:	89 45 90             	mov    %eax,-0x70(%rbp)
 80625aa:	b8 32 01 00 00       	mov    $0x132,%eax
 80625af:	66 89 45 a0          	mov    %ax,-0x60(%rbp)
 80625b3:	48 8b 05 66 b9 02 00 	mov    0x2b966(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80625ba:	48 8b 00             	mov    (%rax),%rax
 80625bd:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 80625c4:	ff ff ff 
 80625c7:	48 01 c8             	add    %rcx,%rax
 80625ca:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80625d1:	00 00 00 
 80625d4:	48 01 c8             	add    %rcx,%rax
 80625d7:	8b 08                	mov    (%rax),%ecx
 80625d9:	89 4d a8             	mov    %ecx,-0x58(%rbp)
 80625dc:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 80625e0:	48 89 c6             	mov    %rax,%rsi
 80625e3:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80625e6:	48 89 c7             	mov    %rax,%rdi
 80625e9:	b8 00 00 00 00       	mov    $0x0,%eax
 80625ee:	e8 ee bf 01 00       	callq  807e5e1 <load>
 80625f3:	48 8b 05 26 b9 02 00 	mov    0x2b926(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80625fa:	48 8b 00             	mov    (%rax),%rax
 80625fd:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8062604:	ff ff ff 
 8062607:	48 01 c8             	add    %rcx,%rax
 806260a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8062611:	00 00 00 
 8062614:	48 01 c8             	add    %rcx,%rax
 8062617:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 806261a:	81 c9 00 01 00 00    	or     $0x100,%ecx
 8062620:	66 89 08             	mov    %cx,(%rax)
 8062623:	48 8b 05 f6 b8 02 00 	mov    0x2b8f6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806262a:	48 8b 00             	mov    (%rax),%rax
 806262d:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8062634:	00 00 00 
 8062637:	48 29 c8             	sub    %rcx,%rax
 806263a:	48 89 c6             	mov    %rax,%rsi
 806263d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8062640:	48 89 c7             	mov    %rax,%rdi
 8062643:	b8 00 00 00 00       	mov    $0x0,%eax
 8062648:	e8 5a c9 01 00       	callq  807efa7 <store>
 806264d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062652:	e8 f7 a7 ff ff       	callq  805ce4e <vswap>
 8062657:	48 8b 05 c2 b8 02 00 	mov    0x2b8c2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806265e:	48 8b 00             	mov    (%rax),%rax
 8062661:	48 89 c1             	mov    %rax,%rcx
 8062664:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 806266b:	ff ff ff 
 806266e:	48 01 d0             	add    %rdx,%rax
 8062671:	4c 8b 1d a8 b8 02 00 	mov    0x2b8a8(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062678:	49 89 03             	mov    %rax,(%r11)
 806267b:	48 8b 05 9e b8 02 00 	mov    0x2b89e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8062682:	48 8b 00             	mov    (%rax),%rax
 8062685:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806268c:	00 00 00 
 806268f:	48 01 c8             	add    %rcx,%rax
 8062692:	0f b7 08             	movzwl (%rax),%ecx
 8062695:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 8062698:	48 09 d1             	or     %rdx,%rcx
 806269b:	66 89 08             	mov    %cx,(%rax)
 806269e:	c9                   	leaveq 
 806269f:	c3                   	retq   

00000000080626a0 <inc>:
 80626a0:	55                   	push   %rbp
 80626a1:	48 89 e5             	mov    %rsp,%rbp
 80626a4:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80626ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80626af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80626b3:	b8 00 00 00 00       	mov    $0x0,%eax
 80626b8:	e8 f6 95 ff ff       	callq  805bcb3 <test_lvalue>
 80626bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80626c2:	e8 59 a9 ff ff       	callq  805d020 <vdup>
 80626c7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80626ca:	85 c0                	test   %eax,%eax
 80626cc:	0f 84 2e 00 00 00    	je     8062700 <inc+0x60>
 80626d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80626d7:	e8 e3 bc ff ff       	callq  805e3bf <gv_dup>
 80626dc:	b8 03 00 00 00       	mov    $0x3,%eax
 80626e1:	48 89 c7             	mov    %rax,%rdi
 80626e4:	b8 00 00 00 00       	mov    $0x0,%eax
 80626e9:	e8 5e b9 ff ff       	callq  805e04c <vrotb>
 80626ee:	b8 03 00 00 00       	mov    $0x3,%eax
 80626f3:	48 89 c7             	mov    %rax,%rdi
 80626f6:	b8 00 00 00 00       	mov    $0x0,%eax
 80626fb:	e8 4c b9 ff ff       	callq  805e04c <vrotb>
 8062700:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8062703:	81 e8 a3 00 00 00    	sub    $0xa3,%eax
 8062709:	48 89 c7             	mov    %rax,%rdi
 806270c:	b8 00 00 00 00       	mov    $0x0,%eax
 8062711:	e8 e4 a0 ff ff       	callq  805c7fa <vpushi>
 8062716:	b8 2b 00 00 00       	mov    $0x2b,%eax
 806271b:	48 89 c7             	mov    %rax,%rdi
 806271e:	b8 00 00 00 00       	mov    $0x0,%eax
 8062723:	e8 98 d0 ff ff       	callq  805f7c0 <gen_op>
 8062728:	b8 00 00 00 00       	mov    $0x0,%eax
 806272d:	e8 e4 f8 ff ff       	callq  8062016 <vstore>
 8062732:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8062735:	85 c0                	test   %eax,%eax
 8062737:	0f 84 0a 00 00 00    	je     8062747 <inc+0xa7>
 806273d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062742:	e8 ab bb ff ff       	callq  805e2f2 <vpop>
 8062747:	c9                   	leaveq 
 8062748:	c3                   	retq   

0000000008062749 <parse_attribute>:
 8062749:	55                   	push   %rbp
 806274a:	48 89 e5             	mov    %rsp,%rbp
 806274d:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 8062754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8062758:	48 8b 05 c9 b7 02 00 	mov    0x2b7c9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806275f:	8b 00                	mov    (%rax),%eax
 8062761:	81 f8 2e 01 00 00    	cmp    $0x12e,%eax
 8062767:	0f 84 1a 00 00 00    	je     8062787 <parse_attribute+0x3e>
 806276d:	48 8b 05 b4 b7 02 00 	mov    0x2b7b4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062774:	8b 00                	mov    (%rax),%eax
 8062776:	81 f8 2f 01 00 00    	cmp    $0x12f,%eax
 806277c:	0f 84 05 00 00 00    	je     8062787 <parse_attribute+0x3e>
 8062782:	e9 60 07 00 00       	jmpq   8062ee7 <parse_attribute+0x79e>
 8062787:	b8 00 00 00 00       	mov    $0x0,%eax
 806278c:	e8 39 5f ff ff       	callq  80586ca <next>
 8062791:	b8 28 00 00 00       	mov    $0x28,%eax
 8062796:	48 89 c7             	mov    %rax,%rdi
 8062799:	b8 00 00 00 00       	mov    $0x0,%eax
 806279e:	e8 40 e9 fe ff       	callq  80510e3 <skip>
 80627a3:	b8 28 00 00 00       	mov    $0x28,%eax
 80627a8:	48 89 c7             	mov    %rax,%rdi
 80627ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80627b0:	e8 2e e9 fe ff       	callq  80510e3 <skip>
 80627b5:	48 8b 05 6c b7 02 00 	mov    0x2b76c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80627bc:	8b 00                	mov    (%rax),%eax
 80627be:	83 f8 29             	cmp    $0x29,%eax
 80627c1:	0f 84 f7 06 00 00    	je     8062ebe <parse_attribute+0x775>
 80627c7:	48 8b 05 5a b7 02 00 	mov    0x2b75a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80627ce:	8b 00                	mov    (%rax),%eax
 80627d0:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 80627d6:	0f 8d 14 00 00 00    	jge    80627f0 <parse_attribute+0xa7>
 80627dc:	48 8d 05 73 94 02 00 	lea    0x29473(%rip),%rax        # 808bc56 <L.155>
 80627e3:	48 89 c7             	mov    %rax,%rdi
 80627e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80627eb:	e8 62 e9 fe ff       	callq  8051152 <expect>
 80627f0:	48 8b 05 31 b7 02 00 	mov    0x2b731(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80627f7:	8b 00                	mov    (%rax),%eax
 80627f9:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80627fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8062801:	e8 c4 5e ff ff       	callq  80586ca <next>
 8062806:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062809:	e9 05 00 00 00       	jmpq   8062813 <parse_attribute+0xca>
 806280e:	e9 0c 00 00 00       	jmpq   806281f <parse_attribute+0xd6>
 8062813:	81 f8 50 01 00 00    	cmp    $0x150,%eax
 8062819:	0f 85 05 00 00 00    	jne    8062824 <parse_attribute+0xdb>
 806281f:	e9 0c 00 00 00       	jmpq   8062830 <parse_attribute+0xe7>
 8062824:	81 f8 51 01 00 00    	cmp    $0x151,%eax
 806282a:	0f 85 b1 00 00 00    	jne    80628e1 <parse_attribute+0x198>
 8062830:	b8 28 00 00 00       	mov    $0x28,%eax
 8062835:	48 89 c7             	mov    %rax,%rdi
 8062838:	b8 00 00 00 00       	mov    $0x0,%eax
 806283d:	e8 a1 e8 fe ff       	callq  80510e3 <skip>
 8062842:	48 8b 05 df b6 02 00 	mov    0x2b6df(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062849:	8b 00                	mov    (%rax),%eax
 806284b:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8062851:	0f 84 14 00 00 00    	je     806286b <parse_attribute+0x122>
 8062857:	48 8d 05 07 94 02 00 	lea    0x29407(%rip),%rax        # 808bc65 <L.156>
 806285e:	48 89 c7             	mov    %rax,%rdi
 8062861:	b8 00 00 00 00       	mov    $0x0,%eax
 8062866:	e8 e7 e8 fe ff       	callq  8051152 <expect>
 806286b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806286f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8062876:	00 00 00 
 8062879:	48 01 c8             	add    %rcx,%rax
 806287c:	48 8b 0d 25 b7 02 00 	mov    0x2b725(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8062883:	48 8b 09             	mov    (%rcx),%rcx
 8062886:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806288d:	00 00 00 
 8062890:	48 01 d1             	add    %rdx,%rcx
 8062893:	48 8b 11             	mov    (%rcx),%rdx
 8062896:	48 89 d6             	mov    %rdx,%rsi
 8062899:	48 8b 0d f0 b5 02 00 	mov    0x2b5f0(%rip),%rcx        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 80628a0:	48 8b 09             	mov    (%rcx),%rcx
 80628a3:	48 89 cf             	mov    %rcx,%rdi
 80628a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 80628aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80628af:	e8 bc a0 fe ff       	callq  804c970 <find_section>
 80628b4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 80628b8:	48 89 01             	mov    %rax,(%rcx)
 80628bb:	b8 00 00 00 00       	mov    $0x0,%eax
 80628c0:	e8 05 5e ff ff       	callq  80586ca <next>
 80628c5:	b8 29 00 00 00       	mov    $0x29,%eax
 80628ca:	48 89 c7             	mov    %rax,%rdi
 80628cd:	b8 00 00 00 00       	mov    $0x0,%eax
 80628d2:	e8 0c e8 fe ff       	callq  80510e3 <skip>
 80628d7:	e9 bc 05 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 80628dc:	e9 0c 00 00 00       	jmpq   80628ed <parse_attribute+0x1a4>
 80628e1:	81 f8 58 01 00 00    	cmp    $0x158,%eax
 80628e7:	0f 85 05 00 00 00    	jne    80628f2 <parse_attribute+0x1a9>
 80628ed:	e9 0c 00 00 00       	jmpq   80628fe <parse_attribute+0x1b5>
 80628f2:	81 f8 59 01 00 00    	cmp    $0x159,%eax
 80628f8:	0f 85 c4 00 00 00    	jne    80629c2 <parse_attribute+0x279>
 80628fe:	b8 28 00 00 00       	mov    $0x28,%eax
 8062903:	48 89 c7             	mov    %rax,%rdi
 8062906:	b8 00 00 00 00       	mov    $0x0,%eax
 806290b:	e8 d3 e7 fe ff       	callq  80510e3 <skip>
 8062910:	48 8b 05 11 b6 02 00 	mov    0x2b611(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062917:	8b 00                	mov    (%rax),%eax
 8062919:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806291f:	0f 84 14 00 00 00    	je     8062939 <parse_attribute+0x1f0>
 8062925:	48 8d 05 46 93 02 00 	lea    0x29346(%rip),%rax        # 808bc72 <L.157>
 806292c:	48 89 c7             	mov    %rax,%rdi
 806292f:	b8 00 00 00 00       	mov    $0x0,%eax
 8062934:	e8 19 e8 fe ff       	callq  8051152 <expect>
 8062939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806293d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8062944:	00 00 00 
 8062947:	48 01 c8             	add    %rcx,%rax
 806294a:	48 8b 0d 57 b6 02 00 	mov    0x2b657(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8062951:	48 8b 09             	mov    (%rcx),%rcx
 8062954:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806295b:	00 00 00 
 806295e:	48 01 d1             	add    %rdx,%rcx
 8062961:	48 8b 15 40 b6 02 00 	mov    0x2b640(%rip),%rdx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8062968:	48 8b 12             	mov    (%rdx),%rdx
 806296b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806296f:	8b 02                	mov    (%rdx),%eax
 8062971:	83 e8 01             	sub    $0x1,%eax
 8062974:	48 89 c6             	mov    %rax,%rsi
 8062977:	48 8b 01             	mov    (%rcx),%rax
 806297a:	48 89 c7             	mov    %rax,%rdi
 806297d:	b8 00 00 00 00       	mov    $0x0,%eax
 8062982:	e8 dc ed fe ff       	callq  8051763 <tok_alloc>
 8062987:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 806298e:	00 00 00 
 8062991:	48 01 c8             	add    %rcx,%rax
 8062994:	8b 08                	mov    (%rax),%ecx
 8062996:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806299a:	89 08                	mov    %ecx,(%rax)
 806299c:	b8 00 00 00 00       	mov    $0x0,%eax
 80629a1:	e8 24 5d ff ff       	callq  80586ca <next>
 80629a6:	b8 29 00 00 00       	mov    $0x29,%eax
 80629ab:	48 89 c7             	mov    %rax,%rdi
 80629ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80629b3:	e8 2b e7 fe ff       	callq  80510e3 <skip>
 80629b8:	e9 db 04 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 80629bd:	e9 0c 00 00 00       	jmpq   80629ce <parse_attribute+0x285>
 80629c2:	81 f8 52 01 00 00    	cmp    $0x152,%eax
 80629c8:	0f 85 05 00 00 00    	jne    80629d3 <parse_attribute+0x28a>
 80629ce:	e9 0c 00 00 00       	jmpq   80629df <parse_attribute+0x296>
 80629d3:	81 f8 53 01 00 00    	cmp    $0x153,%eax
 80629d9:	0f 85 ad 00 00 00    	jne    8062a8c <parse_attribute+0x343>
 80629df:	48 8b 05 42 b5 02 00 	mov    0x2b542(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80629e6:	8b 00                	mov    (%rax),%eax
 80629e8:	83 f8 28             	cmp    $0x28,%eax
 80629eb:	0f 85 68 00 00 00    	jne    8062a59 <parse_attribute+0x310>
 80629f1:	b8 00 00 00 00       	mov    $0x0,%eax
 80629f6:	e8 cf 5c ff ff       	callq  80586ca <next>
 80629fb:	b8 00 00 00 00       	mov    $0x0,%eax
 8062a00:	e8 b2 53 00 00       	callq  8067db7 <expr_const>
 8062a05:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8062a08:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8062a0b:	83 f8 00             	cmp    $0x0,%eax
 8062a0e:	0f 8e 1a 00 00 00    	jle    8062a2e <parse_attribute+0x2e5>
 8062a14:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8062a17:	83 e8 01             	sub    $0x1,%eax
 8062a1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8062a1d:	48 21 c1             	and    %rax,%rcx
 8062a20:	83 f9 00             	cmp    $0x0,%ecx
 8062a23:	0f 85 05 00 00 00    	jne    8062a2e <parse_attribute+0x2e5>
 8062a29:	e9 14 00 00 00       	jmpq   8062a42 <parse_attribute+0x2f9>
 8062a2e:	48 8d 05 4d 92 02 00 	lea    0x2924d(%rip),%rax        # 808bc82 <L.158>
 8062a35:	48 89 c7             	mov    %rax,%rdi
 8062a38:	b8 00 00 00 00       	mov    $0x0,%eax
 8062a3d:	e8 85 ac fe ff       	callq  804d6c7 <tcc_error>
 8062a42:	b8 29 00 00 00       	mov    $0x29,%eax
 8062a47:	48 89 c7             	mov    %rax,%rdi
 8062a4a:	b8 00 00 00 00       	mov    $0x0,%eax
 8062a4f:	e8 8f e6 fe ff       	callq  80510e3 <skip>
 8062a54:	e9 08 00 00 00       	jmpq   8062a61 <parse_attribute+0x318>
 8062a59:	b8 08 00 00 00       	mov    $0x8,%eax
 8062a5e:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8062a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062a65:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8062a68:	48 89 ca             	mov    %rcx,%rdx
 8062a6b:	83 e2 1f             	and    $0x1f,%edx
 8062a6e:	c1 e2 03             	shl    $0x3,%edx
 8062a71:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8062a75:	8b 08                	mov    (%rax),%ecx
 8062a77:	81 e1 07 ff ff ff    	and    $0xffffff07,%ecx
 8062a7d:	48 09 ca             	or     %rcx,%rdx
 8062a80:	89 10                	mov    %edx,(%rax)
 8062a82:	e9 11 04 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062a87:	e9 0c 00 00 00       	jmpq   8062a98 <parse_attribute+0x34f>
 8062a8c:	81 f8 54 01 00 00    	cmp    $0x154,%eax
 8062a92:	0f 85 05 00 00 00    	jne    8062a9d <parse_attribute+0x354>
 8062a98:	e9 0c 00 00 00       	jmpq   8062aa9 <parse_attribute+0x360>
 8062a9d:	81 f8 55 01 00 00    	cmp    $0x155,%eax
 8062aa3:	0f 85 2d 00 00 00    	jne    8062ad6 <parse_attribute+0x38d>
 8062aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062aad:	b9 01 00 00 00       	mov    $0x1,%ecx
 8062ab2:	48 89 ca             	mov    %rcx,%rdx
 8062ab5:	83 e2 01             	and    $0x1,%edx
 8062ab8:	c1 e2 08             	shl    $0x8,%edx
 8062abb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8062abf:	8b 08                	mov    (%rax),%ecx
 8062ac1:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 8062ac7:	48 09 ca             	or     %rcx,%rdx
 8062aca:	89 10                	mov    %edx,(%rax)
 8062acc:	e9 c7 03 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062ad1:	e9 0c 00 00 00       	jmpq   8062ae2 <parse_attribute+0x399>
 8062ad6:	81 f8 56 01 00 00    	cmp    $0x156,%eax
 8062adc:	0f 85 05 00 00 00    	jne    8062ae7 <parse_attribute+0x39e>
 8062ae2:	e9 0c 00 00 00       	jmpq   8062af3 <parse_attribute+0x3aa>
 8062ae7:	81 f8 57 01 00 00    	cmp    $0x157,%eax
 8062aed:	0f 85 2d 00 00 00    	jne    8062b20 <parse_attribute+0x3d7>
 8062af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062af7:	b9 01 00 00 00       	mov    $0x1,%ecx
 8062afc:	48 89 ca             	mov    %rcx,%rdx
 8062aff:	83 e2 01             	and    $0x1,%edx
 8062b02:	c1 e2 14             	shl    $0x14,%edx
 8062b05:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 8062b09:	8b 08                	mov    (%rax),%ecx
 8062b0b:	81 e1 ff ff ef ff    	and    $0xffefffff,%ecx
 8062b11:	48 09 ca             	or     %rcx,%rdx
 8062b14:	89 10                	mov    %edx,(%rax)
 8062b16:	e9 7d 03 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062b1b:	e9 0c 00 00 00       	jmpq   8062b2c <parse_attribute+0x3e3>
 8062b20:	81 f8 5a 01 00 00    	cmp    $0x15a,%eax
 8062b26:	0f 85 05 00 00 00    	jne    8062b31 <parse_attribute+0x3e8>
 8062b2c:	e9 0c 00 00 00       	jmpq   8062b3d <parse_attribute+0x3f4>
 8062b31:	81 f8 5b 01 00 00    	cmp    $0x15b,%eax
 8062b37:	0f 85 0a 00 00 00    	jne    8062b47 <parse_attribute+0x3fe>
 8062b3d:	e9 56 03 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062b42:	e9 0c 00 00 00       	jmpq   8062b53 <parse_attribute+0x40a>
 8062b47:	81 f8 6b 01 00 00    	cmp    $0x16b,%eax
 8062b4d:	0f 85 05 00 00 00    	jne    8062b58 <parse_attribute+0x40f>
 8062b53:	e9 0c 00 00 00       	jmpq   8062b64 <parse_attribute+0x41b>
 8062b58:	81 f8 6c 01 00 00    	cmp    $0x16c,%eax
 8062b5e:	0f 85 0a 00 00 00    	jne    8062b6e <parse_attribute+0x425>
 8062b64:	e9 2f 03 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062b69:	e9 0c 00 00 00       	jmpq   8062b7a <parse_attribute+0x431>
 8062b6e:	81 f8 5c 01 00 00    	cmp    $0x15c,%eax
 8062b74:	0f 85 05 00 00 00    	jne    8062b7f <parse_attribute+0x436>
 8062b7a:	e9 0c 00 00 00       	jmpq   8062b8b <parse_attribute+0x442>
 8062b7f:	81 f8 5d 01 00 00    	cmp    $0x15d,%eax
 8062b85:	0f 85 05 00 00 00    	jne    8062b90 <parse_attribute+0x447>
 8062b8b:	e9 0c 00 00 00       	jmpq   8062b9c <parse_attribute+0x453>
 8062b90:	81 f8 5e 01 00 00    	cmp    $0x15e,%eax
 8062b96:	0f 85 27 00 00 00    	jne    8062bc3 <parse_attribute+0x47a>
 8062b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062ba0:	b9 00 00 00 00       	mov    $0x0,%ecx
 8062ba5:	48 89 ca             	mov    %rcx,%rdx
 8062ba8:	83 e2 07             	and    $0x7,%edx
 8062bab:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8062baf:	8b 08                	mov    (%rax),%ecx
 8062bb1:	83 e1 f8             	and    $0xfffffff8,%ecx
 8062bb4:	48 09 ca             	or     %rcx,%rdx
 8062bb7:	89 10                	mov    %edx,(%rax)
 8062bb9:	e9 da 02 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062bbe:	e9 0c 00 00 00       	jmpq   8062bcf <parse_attribute+0x486>
 8062bc3:	81 f8 5f 01 00 00    	cmp    $0x15f,%eax
 8062bc9:	0f 85 05 00 00 00    	jne    8062bd4 <parse_attribute+0x48b>
 8062bcf:	e9 0c 00 00 00       	jmpq   8062be0 <parse_attribute+0x497>
 8062bd4:	81 f8 60 01 00 00    	cmp    $0x160,%eax
 8062bda:	0f 85 05 00 00 00    	jne    8062be5 <parse_attribute+0x49c>
 8062be0:	e9 0c 00 00 00       	jmpq   8062bf1 <parse_attribute+0x4a8>
 8062be5:	81 f8 61 01 00 00    	cmp    $0x161,%eax
 8062beb:	0f 85 27 00 00 00    	jne    8062c18 <parse_attribute+0x4cf>
 8062bf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062bf5:	b9 01 00 00 00       	mov    $0x1,%ecx
 8062bfa:	48 89 ca             	mov    %rcx,%rdx
 8062bfd:	83 e2 07             	and    $0x7,%edx
 8062c00:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 8062c04:	8b 08                	mov    (%rax),%ecx
 8062c06:	83 e1 f8             	and    $0xfffffff8,%ecx
 8062c09:	48 09 ca             	or     %rcx,%rdx
 8062c0c:	89 10                	mov    %edx,(%rax)
 8062c0e:	e9 85 02 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062c13:	e9 0c 00 00 00       	jmpq   8062c24 <parse_attribute+0x4db>
 8062c18:	81 f8 65 01 00 00    	cmp    $0x165,%eax
 8062c1e:	0f 85 2b 01 00 00    	jne    8062d4f <parse_attribute+0x606>
 8062c24:	b8 28 00 00 00       	mov    $0x28,%eax
 8062c29:	48 89 c7             	mov    %rax,%rdi
 8062c2c:	b8 00 00 00 00       	mov    $0x0,%eax
 8062c31:	e8 ad e4 fe ff       	callq  80510e3 <skip>
 8062c36:	48 8b 05 eb b2 02 00 	mov    0x2b2eb(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062c3d:	8b 00                	mov    (%rax),%eax
 8062c3f:	e9 05 00 00 00       	jmpq   8062c49 <parse_attribute+0x500>
 8062c44:	e9 0c 00 00 00       	jmpq   8062c55 <parse_attribute+0x50c>
 8062c49:	81 f8 66 01 00 00    	cmp    $0x166,%eax
 8062c4f:	0f 85 2d 00 00 00    	jne    8062c82 <parse_attribute+0x539>
 8062c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062c59:	b9 0d 00 00 00       	mov    $0xd,%ecx
 8062c5e:	48 89 ca             	mov    %rcx,%rdx
 8062c61:	83 e2 0f             	and    $0xf,%edx
 8062c64:	c1 e2 10             	shl    $0x10,%edx
 8062c67:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 8062c6b:	8b 08                	mov    (%rax),%ecx
 8062c6d:	81 e1 ff ff f0 ff    	and    $0xfff0ffff,%ecx
 8062c73:	48 09 ca             	or     %rcx,%rdx
 8062c76:	89 10                	mov    %edx,(%rax)
 8062c78:	e9 ac 00 00 00       	jmpq   8062d29 <parse_attribute+0x5e0>
 8062c7d:	e9 0c 00 00 00       	jmpq   8062c8e <parse_attribute+0x545>
 8062c82:	81 f8 67 01 00 00    	cmp    $0x167,%eax
 8062c88:	0f 85 2d 00 00 00    	jne    8062cbb <parse_attribute+0x572>
 8062c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062c92:	b9 03 00 00 00       	mov    $0x3,%ecx
 8062c97:	48 89 ca             	mov    %rcx,%rdx
 8062c9a:	83 e2 0f             	and    $0xf,%edx
 8062c9d:	c1 e2 10             	shl    $0x10,%edx
 8062ca0:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
 8062ca4:	8b 08                	mov    (%rax),%ecx
 8062ca6:	81 e1 ff ff f0 ff    	and    $0xfff0ffff,%ecx
 8062cac:	48 09 ca             	or     %rcx,%rdx
 8062caf:	89 10                	mov    %edx,(%rax)
 8062cb1:	e9 73 00 00 00       	jmpq   8062d29 <parse_attribute+0x5e0>
 8062cb6:	e9 0c 00 00 00       	jmpq   8062cc7 <parse_attribute+0x57e>
 8062cbb:	81 f8 68 01 00 00    	cmp    $0x168,%eax
 8062cc1:	0f 85 28 00 00 00    	jne    8062cef <parse_attribute+0x5a6>
 8062cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062ccb:	b9 01 00 00 00       	mov    $0x1,%ecx
 8062cd0:	48 89 ca             	mov    %rcx,%rdx
 8062cd3:	83 e2 0f             	and    $0xf,%edx
 8062cd6:	c1 e2 10             	shl    $0x10,%edx
 8062cd9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 8062cdd:	8b 08                	mov    (%rax),%ecx
 8062cdf:	81 e1 ff ff f0 ff    	and    $0xfff0ffff,%ecx
 8062ce5:	48 09 ca             	or     %rcx,%rdx
 8062ce8:	89 10                	mov    %edx,(%rax)
 8062cea:	e9 3a 00 00 00       	jmpq   8062d29 <parse_attribute+0x5e0>
 8062cef:	b8 00 00 00 00       	mov    $0x0,%eax
 8062cf4:	48 89 c6             	mov    %rax,%rsi
 8062cf7:	48 8b 05 2a b2 02 00 	mov    0x2b22a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062cfe:	8b 00                	mov    (%rax),%eax
 8062d00:	48 89 c7             	mov    %rax,%rdi
 8062d03:	b8 00 00 00 00       	mov    $0x0,%eax
 8062d08:	e8 a7 eb fe ff       	callq  80518b4 <get_tok_str>
 8062d0d:	48 89 c6             	mov    %rax,%rsi
 8062d10:	48 8d 05 95 8f 02 00 	lea    0x28f95(%rip),%rax        # 808bcac <L.159>
 8062d17:	48 89 c7             	mov    %rax,%rdi
 8062d1a:	b8 00 00 00 00       	mov    $0x0,%eax
 8062d1f:	e8 db ab fe ff       	callq  804d8ff <tcc_warning>
 8062d24:	e9 00 00 00 00       	jmpq   8062d29 <parse_attribute+0x5e0>
 8062d29:	b8 00 00 00 00       	mov    $0x0,%eax
 8062d2e:	e8 97 59 ff ff       	callq  80586ca <next>
 8062d33:	b8 29 00 00 00       	mov    $0x29,%eax
 8062d38:	48 89 c7             	mov    %rax,%rdi
 8062d3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8062d40:	e8 9e e3 fe ff       	callq  80510e3 <skip>
 8062d45:	e9 4e 01 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062d4a:	e9 0c 00 00 00       	jmpq   8062d5b <parse_attribute+0x612>
 8062d4f:	81 f8 69 01 00 00    	cmp    $0x169,%eax
 8062d55:	0f 85 2d 00 00 00    	jne    8062d88 <parse_attribute+0x63f>
 8062d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062d5f:	b9 01 00 00 00       	mov    $0x1,%ecx
 8062d64:	48 89 ca             	mov    %rcx,%rdx
 8062d67:	83 e2 01             	and    $0x1,%edx
 8062d6a:	c1 e2 09             	shl    $0x9,%edx
 8062d6d:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 8062d71:	8b 08                	mov    (%rax),%ecx
 8062d73:	81 e1 ff fd ff ff    	and    $0xfffffdff,%ecx
 8062d79:	48 09 ca             	or     %rcx,%rdx
 8062d7c:	89 10                	mov    %edx,(%rax)
 8062d7e:	e9 15 01 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062d83:	e9 0c 00 00 00       	jmpq   8062d94 <parse_attribute+0x64b>
 8062d88:	81 f8 6a 01 00 00    	cmp    $0x16a,%eax
 8062d8e:	0f 85 28 00 00 00    	jne    8062dbc <parse_attribute+0x673>
 8062d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8062d98:	b9 01 00 00 00       	mov    $0x1,%ecx
 8062d9d:	48 89 ca             	mov    %rcx,%rdx
 8062da0:	83 e2 01             	and    $0x1,%edx
 8062da3:	c1 e2 0a             	shl    $0xa,%edx
 8062da6:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
 8062daa:	8b 08                	mov    (%rax),%ecx
 8062dac:	81 e1 ff fb ff ff    	and    $0xfffffbff,%ecx
 8062db2:	48 09 ca             	or     %rcx,%rdx
 8062db5:	89 10                	mov    %edx,(%rax)
 8062db7:	e9 dc 00 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062dbc:	48 8b 05 cd b0 02 00 	mov    0x2b0cd(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8062dc3:	48 8b 00             	mov    (%rax),%rax
 8062dc6:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 8062dcd:	00 00 00 
 8062dd0:	48 01 c8             	add    %rcx,%rax
 8062dd3:	8b 08                	mov    (%rax),%ecx
 8062dd5:	85 c9                	test   %ecx,%ecx
 8062dd7:	0f 84 2f 00 00 00    	je     8062e0c <parse_attribute+0x6c3>
 8062ddd:	b8 00 00 00 00       	mov    $0x0,%eax
 8062de2:	48 89 c6             	mov    %rax,%rsi
 8062de5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8062de8:	48 89 c7             	mov    %rax,%rdi
 8062deb:	b8 00 00 00 00       	mov    $0x0,%eax
 8062df0:	e8 bf ea fe ff       	callq  80518b4 <get_tok_str>
 8062df5:	48 89 c6             	mov    %rax,%rsi
 8062df8:	48 8d 05 c9 8e 02 00 	lea    0x28ec9(%rip),%rax        # 808bcc8 <L.160>
 8062dff:	48 89 c7             	mov    %rax,%rdi
 8062e02:	b8 00 00 00 00       	mov    $0x0,%eax
 8062e07:	e8 f3 aa fe ff       	callq  804d8ff <tcc_warning>
 8062e0c:	48 8b 05 15 b1 02 00 	mov    0x2b115(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062e13:	8b 00                	mov    (%rax),%eax
 8062e15:	83 f8 28             	cmp    $0x28,%eax
 8062e18:	0f 85 75 00 00 00    	jne    8062e93 <parse_attribute+0x74a>
 8062e1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8062e23:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8062e26:	48 8b 05 fb b0 02 00 	mov    0x2b0fb(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062e2d:	8b 00                	mov    (%rax),%eax
 8062e2f:	83 f8 28             	cmp    $0x28,%eax
 8062e32:	0f 85 11 00 00 00    	jne    8062e49 <parse_attribute+0x700>
 8062e38:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8062e3b:	48 89 c1             	mov    %rax,%rcx
 8062e3e:	83 c0 01             	add    $0x1,%eax
 8062e41:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8062e44:	e9 1e 00 00 00       	jmpq   8062e67 <parse_attribute+0x71e>
 8062e49:	48 8b 05 d8 b0 02 00 	mov    0x2b0d8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062e50:	8b 00                	mov    (%rax),%eax
 8062e52:	83 f8 29             	cmp    $0x29,%eax
 8062e55:	0f 85 0c 00 00 00    	jne    8062e67 <parse_attribute+0x71e>
 8062e5b:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8062e5e:	48 89 c1             	mov    %rax,%rcx
 8062e61:	83 c0 ff             	add    $0xffffffff,%eax
 8062e64:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8062e67:	b8 00 00 00 00       	mov    $0x0,%eax
 8062e6c:	e8 59 58 ff ff       	callq  80586ca <next>
 8062e71:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8062e74:	85 c0                	test   %eax,%eax
 8062e76:	0f 84 17 00 00 00    	je     8062e93 <parse_attribute+0x74a>
 8062e7c:	48 8b 05 a5 b0 02 00 	mov    0x2b0a5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062e83:	8b 00                	mov    (%rax),%eax
 8062e85:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062e88:	0f 84 05 00 00 00    	je     8062e93 <parse_attribute+0x74a>
 8062e8e:	e9 93 ff ff ff       	jmpq   8062e26 <parse_attribute+0x6dd>
 8062e93:	e9 00 00 00 00       	jmpq   8062e98 <parse_attribute+0x74f>
 8062e98:	48 8b 05 89 b0 02 00 	mov    0x2b089(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062e9f:	8b 00                	mov    (%rax),%eax
 8062ea1:	83 f8 2c             	cmp    $0x2c,%eax
 8062ea4:	0f 84 05 00 00 00    	je     8062eaf <parse_attribute+0x766>
 8062eaa:	e9 0f 00 00 00       	jmpq   8062ebe <parse_attribute+0x775>
 8062eaf:	b8 00 00 00 00       	mov    $0x0,%eax
 8062eb4:	e8 11 58 ff ff       	callq  80586ca <next>
 8062eb9:	e9 f7 f8 ff ff       	jmpq   80627b5 <parse_attribute+0x6c>
 8062ebe:	b8 29 00 00 00       	mov    $0x29,%eax
 8062ec3:	48 89 c7             	mov    %rax,%rdi
 8062ec6:	b8 00 00 00 00       	mov    $0x0,%eax
 8062ecb:	e8 13 e2 fe ff       	callq  80510e3 <skip>
 8062ed0:	b8 29 00 00 00       	mov    $0x29,%eax
 8062ed5:	48 89 c7             	mov    %rax,%rdi
 8062ed8:	b8 00 00 00 00       	mov    $0x0,%eax
 8062edd:	e8 01 e2 fe ff       	callq  80510e3 <skip>
 8062ee2:	e9 71 f8 ff ff       	jmpq   8062758 <parse_attribute+0xf>
 8062ee7:	c9                   	leaveq 
 8062ee8:	c3                   	retq   

0000000008062ee9 <struct_decl>:
 8062ee9:	55                   	push   %rbp
 8062eea:	48 89 e5             	mov    %rsp,%rbp
 8062eed:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 8062ef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8062ef8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8062efc:	48 8b 05 25 b0 02 00 	mov    0x2b025(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062f03:	8b 00                	mov    (%rax),%eax
 8062f05:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8062f08:	b8 00 00 00 00       	mov    $0x0,%eax
 8062f0d:	e8 b8 57 ff ff       	callq  80586ca <next>
 8062f12:	48 8b 05 0f b0 02 00 	mov    0x2b00f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062f19:	8b 00                	mov    (%rax),%eax
 8062f1b:	83 f8 7b             	cmp    $0x7b,%eax
 8062f1e:	0f 84 95 00 00 00    	je     8062fb9 <struct_decl+0xd0>
 8062f24:	48 8b 05 fd af 02 00 	mov    0x2affd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8062f2b:	8b 00                	mov    (%rax),%eax
 8062f2d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8062f30:	b8 00 00 00 00       	mov    $0x0,%eax
 8062f35:	e8 90 57 ff ff       	callq  80586ca <next>
 8062f3a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8062f3d:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8062f43:	0f 8d 14 00 00 00    	jge    8062f5d <struct_decl+0x74>
 8062f49:	48 8d 05 8f 8d 02 00 	lea    0x28d8f(%rip),%rax        # 808bcdf <L.161>
 8062f50:	48 89 c7             	mov    %rax,%rdi
 8062f53:	b8 00 00 00 00       	mov    $0x0,%eax
 8062f58:	e8 f5 e1 fe ff       	callq  8051152 <expect>
 8062f5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8062f60:	48 89 c7             	mov    %rax,%rdi
 8062f63:	b8 00 00 00 00       	mov    $0x0,%eax
 8062f68:	e8 00 91 ff ff       	callq  805c06d <struct_find>
 8062f6d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8062f71:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8062f75:	85 c0                	test   %eax,%eax
 8062f77:	0f 84 37 00 00 00    	je     8062fb4 <struct_decl+0xcb>
 8062f7d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8062f81:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8062f88:	00 00 00 
 8062f8b:	48 01 c8             	add    %rcx,%rax
 8062f8e:	8b 08                	mov    (%rax),%ecx
 8062f90:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8062f93:	39 c1                	cmp    %eax,%ecx
 8062f95:	0f 84 14 00 00 00    	je     8062faf <struct_decl+0xc6>
 8062f9b:	48 8d 05 54 8d 02 00 	lea    0x28d54(%rip),%rax        # 808bcf6 <L.162>
 8062fa2:	48 89 c7             	mov    %rax,%rdi
 8062fa5:	b8 00 00 00 00       	mov    $0x0,%eax
 8062faa:	e8 18 a7 fe ff       	callq  804d6c7 <tcc_error>
 8062faf:	e9 82 00 00 00       	jmpq   8063036 <struct_decl+0x14d>
 8062fb4:	e9 1c 00 00 00       	jmpq   8062fd5 <struct_decl+0xec>
 8062fb9:	48 8b 05 08 af 02 00 	mov    0x2af08(%rip),%rax        # 808dec8 <_GLOBAL_OFFSET_TABLE_+0x248>
 8062fc0:	8b 00                	mov    (%rax),%eax
 8062fc2:	48 89 c1             	mov    %rax,%rcx
 8062fc5:	83 c0 01             	add    $0x1,%eax
 8062fc8:	4c 8b 1d f9 ae 02 00 	mov    0x2aef9(%rip),%r11        # 808dec8 <_GLOBAL_OFFSET_TABLE_+0x248>
 8062fcf:	41 89 03             	mov    %eax,(%r11)
 8062fd2:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 8062fd5:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8062fd8:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 8062fde:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8062fe1:	81 c8 00 00 00 40    	or     $0x40000000,%eax
 8062fe7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8062fec:	49 89 cb             	mov    %rcx,%r11
 8062fef:	b9 00 00 00 00       	mov    $0x0,%ecx
 8062ff4:	49 89 ca             	mov    %rcx,%r10
 8062ff7:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
 8062ffe:	48 89 ce             	mov    %rcx,%rsi
 8063001:	48 89 c7             	mov    %rax,%rdi
 8063004:	4c 89 d2             	mov    %r10,%rdx
 8063007:	4c 89 d9             	mov    %r11,%rcx
 806300a:	b8 00 00 00 00       	mov    $0x0,%eax
 806300f:	e8 47 91 ff ff       	callq  805c15b <sym_push>
 8063014:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8063018:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806301c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8063023:	00 00 00 
 8063026:	48 01 c8             	add    %rcx,%rax
 8063029:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8063030:	00 00 00 
 8063033:	48 89 08             	mov    %rcx,(%rax)
 8063036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806303a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 806303d:	89 08                	mov    %ecx,(%rax)
 806303f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8063043:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806304a:	00 00 00 
 806304d:	48 01 c8             	add    %rcx,%rax
 8063050:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 8063054:	48 89 08             	mov    %rcx,(%rax)
 8063057:	48 8b 05 ca ae 02 00 	mov    0x2aeca(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806305e:	8b 00                	mov    (%rax),%eax
 8063060:	83 f8 7b             	cmp    $0x7b,%eax
 8063063:	0f 85 b4 08 00 00    	jne    806391d <struct_decl+0xa34>
 8063069:	b8 00 00 00 00       	mov    $0x0,%eax
 806306e:	e8 57 56 ff ff       	callq  80586ca <next>
 8063073:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8063077:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806307e:	00 00 00 
 8063081:	48 01 c8             	add    %rcx,%rax
 8063084:	48 8b 08             	mov    (%rax),%rcx
 8063087:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rax
 806308e:	ff ff ff 
 8063091:	48 39 c1             	cmp    %rax,%rcx
 8063094:	0f 84 14 00 00 00    	je     80630ae <struct_decl+0x1c5>
 806309a:	48 8d 05 62 8c 02 00 	lea    0x28c62(%rip),%rax        # 808bd03 <L.163>
 80630a1:	48 89 c7             	mov    %rax,%rdi
 80630a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80630a9:	e8 19 a6 fe ff       	callq  804d6c7 <tcc_error>
 80630ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80630b3:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80630b6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80630b9:	81 f8 2c 01 00 00    	cmp    $0x12c,%eax
 80630bf:	0f 85 0f 01 00 00    	jne    80631d4 <struct_decl+0x2eb>
 80630c5:	48 8b 05 5c ae 02 00 	mov    0x2ae5c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80630cc:	8b 00                	mov    (%rax),%eax
 80630ce:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80630d1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80630d4:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 80630da:	0f 8d 14 00 00 00    	jge    80630f4 <struct_decl+0x20b>
 80630e0:	48 8d 05 3e 8c 02 00 	lea    0x28c3e(%rip),%rax        # 808bd25 <L.164>
 80630e7:	48 89 c7             	mov    %rax,%rdi
 80630ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80630ef:	e8 5e e0 fe ff       	callq  8051152 <expect>
 80630f4:	b8 00 00 00 00       	mov    $0x0,%eax
 80630f9:	e8 cc 55 ff ff       	callq  80586ca <next>
 80630fe:	48 8b 05 23 ae 02 00 	mov    0x2ae23(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063105:	8b 00                	mov    (%rax),%eax
 8063107:	83 f8 3d             	cmp    $0x3d,%eax
 806310a:	0f 85 17 00 00 00    	jne    8063127 <struct_decl+0x23e>
 8063110:	b8 00 00 00 00       	mov    $0x0,%eax
 8063115:	e8 b0 55 ff ff       	callq  80586ca <next>
 806311a:	b8 00 00 00 00       	mov    $0x0,%eax
 806311f:	e8 93 4c 00 00       	callq  8067db7 <expr_const>
 8063124:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8063127:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806312a:	49 89 c3             	mov    %rax,%r11
 806312d:	b8 30 00 00 00       	mov    $0x30,%eax
 8063132:	49 89 c2             	mov    %rax,%r10
 8063135:	48 8b 05 9c ad 02 00 	mov    0x2ad9c(%rip),%rax        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 806313c:	48 89 c6             	mov    %rax,%rsi
 806313f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8063142:	48 89 c7             	mov    %rax,%rdi
 8063145:	4c 89 d2             	mov    %r10,%rdx
 8063148:	4c 89 d9             	mov    %r11,%rcx
 806314b:	b8 00 00 00 00       	mov    $0x0,%eax
 8063150:	e8 06 90 ff ff       	callq  805c15b <sym_push>
 8063155:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 8063159:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 806315d:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8063164:	00 00 00 
 8063167:	48 01 c8             	add    %rcx,%rax
 806316a:	8b 08                	mov    (%rax),%ecx
 806316c:	81 c9 00 01 00 00    	or     $0x100,%ecx
 8063172:	89 08                	mov    %ecx,(%rax)
 8063174:	48 8b 05 ad ad 02 00 	mov    0x2adad(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806317b:	8b 00                	mov    (%rax),%eax
 806317d:	83 f8 2c             	cmp    $0x2c,%eax
 8063180:	0f 84 05 00 00 00    	je     806318b <struct_decl+0x2a2>
 8063186:	e9 32 00 00 00       	jmpq   80631bd <struct_decl+0x2d4>
 806318b:	b8 00 00 00 00       	mov    $0x0,%eax
 8063190:	e8 35 55 ff ff       	callq  80586ca <next>
 8063195:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8063198:	48 89 c1             	mov    %rax,%rcx
 806319b:	83 c0 01             	add    $0x1,%eax
 806319e:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80631a1:	48 8b 05 80 ad 02 00 	mov    0x2ad80(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80631a8:	8b 00                	mov    (%rax),%eax
 80631aa:	83 f8 7d             	cmp    $0x7d,%eax
 80631ad:	0f 85 05 00 00 00    	jne    80631b8 <struct_decl+0x2cf>
 80631b3:	e9 05 00 00 00       	jmpq   80631bd <struct_decl+0x2d4>
 80631b8:	e9 08 ff ff ff       	jmpq   80630c5 <struct_decl+0x1dc>
 80631bd:	b8 7d 00 00 00       	mov    $0x7d,%eax
 80631c2:	48 89 c7             	mov    %rax,%rdi
 80631c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80631ca:	e8 14 df fe ff       	callq  80510e3 <skip>
 80631cf:	e9 49 07 00 00       	jmpq   806391d <struct_decl+0xa34>
 80631d4:	b8 01 00 00 00       	mov    $0x1,%eax
 80631d9:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80631dc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 80631e0:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80631e7:	00 00 00 
 80631ea:	48 01 c8             	add    %rcx,%rax
 80631ed:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 80631f1:	b8 00 00 00 00       	mov    $0x0,%eax
 80631f6:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80631f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80631fe:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8063201:	b8 00 00 00 00       	mov    $0x0,%eax
 8063206:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8063209:	48 8b 05 18 ad 02 00 	mov    0x2ad18(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063210:	8b 00                	mov    (%rax),%eax
 8063212:	83 f8 7d             	cmp    $0x7d,%eax
 8063215:	0f 84 91 06 00 00    	je     80638ac <struct_decl+0x9c3>
 806321b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 806321f:	48 89 c6             	mov    %rax,%rsi
 8063222:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 8063229:	48 89 c7             	mov    %rax,%rdi
 806322c:	b8 00 00 00 00       	mov    $0x0,%eax
 8063231:	e8 e9 06 00 00       	callq  806391f <parse_btype>
 8063236:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 806323b:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806323e:	b8 00 00 00 00       	mov    $0x0,%eax
 8063243:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063246:	b8 10 00 00 00       	mov    $0x10,%eax
 806324b:	49 89 c2             	mov    %rax,%r10
 806324e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 8063255:	48 89 c6             	mov    %rax,%rsi
 8063258:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 806325f:	48 89 c7             	mov    %rax,%rdi
 8063262:	4c 89 d2             	mov    %r10,%rdx
 8063265:	b8 00 00 00 00       	mov    $0x0,%eax
 806326a:	e8 01 3a 02 00       	callq  8086c70 <memcpy>
 806326f:	48 8b 05 b2 ac 02 00 	mov    0x2acb2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063276:	8b 00                	mov    (%rax),%eax
 8063278:	83 f8 3a             	cmp    $0x3a,%eax
 806327b:	0f 84 bc 00 00 00    	je     806333d <struct_decl+0x454>
 8063281:	b8 03 00 00 00       	mov    $0x3,%eax
 8063286:	49 89 c3             	mov    %rax,%r11
 8063289:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 806328d:	49 89 c2             	mov    %rax,%r10
 8063290:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8063294:	48 89 c6             	mov    %rax,%rsi
 8063297:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 806329e:	48 89 c7             	mov    %rax,%rdi
 80632a1:	4c 89 d2             	mov    %r10,%rdx
 80632a4:	4c 89 d9             	mov    %r11,%rcx
 80632a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80632ac:	e8 93 16 00 00       	callq  8064944 <type_decl>
 80632b1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80632b4:	83 f8 00             	cmp    $0x0,%eax
 80632b7:	0f 85 26 00 00 00    	jne    80632e3 <struct_decl+0x3fa>
 80632bd:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 80632c3:	83 e0 0f             	and    $0xf,%eax
 80632c6:	83 f8 07             	cmp    $0x7,%eax
 80632c9:	0f 84 14 00 00 00    	je     80632e3 <struct_decl+0x3fa>
 80632cf:	48 8d 05 5a 8a 02 00 	lea    0x28a5a(%rip),%rax        # 808bd30 <L.165>
 80632d6:	48 89 c7             	mov    %rax,%rdi
 80632d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80632de:	e8 6f de fe ff       	callq  8051152 <expect>
 80632e3:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 80632e9:	83 e0 0f             	and    $0xf,%eax
 80632ec:	83 f8 06             	cmp    $0x6,%eax
 80632ef:	0f 84 19 00 00 00    	je     806330e <struct_decl+0x425>
 80632f5:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 80632fb:	81 e0 80 07 00 00    	and    $0x780,%eax
 8063301:	85 c0                	test   %eax,%eax
 8063303:	0f 85 05 00 00 00    	jne    806330e <struct_decl+0x425>
 8063309:	e9 2f 00 00 00       	jmpq   806333d <struct_decl+0x454>
 806330e:	b8 00 00 00 00       	mov    $0x0,%eax
 8063313:	48 89 c6             	mov    %rax,%rsi
 8063316:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8063319:	48 89 c7             	mov    %rax,%rdi
 806331c:	b8 00 00 00 00       	mov    $0x0,%eax
 8063321:	e8 8e e5 fe ff       	callq  80518b4 <get_tok_str>
 8063326:	48 89 c6             	mov    %rax,%rsi
 8063329:	48 8d 05 0b 8a 02 00 	lea    0x28a0b(%rip),%rax        # 808bd3b <L.166>
 8063330:	48 89 c7             	mov    %rax,%rdi
 8063333:	b8 00 00 00 00       	mov    $0x0,%eax
 8063338:	e8 8a a3 fe ff       	callq  804d6c7 <tcc_error>
 806333d:	48 8b 05 e4 ab 02 00 	mov    0x2abe4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063344:	8b 00                	mov    (%rax),%eax
 8063346:	83 f8 3a             	cmp    $0x3a,%eax
 8063349:	0f 85 98 00 00 00    	jne    80633e7 <struct_decl+0x4fe>
 806334f:	b8 00 00 00 00       	mov    $0x0,%eax
 8063354:	e8 71 53 ff ff       	callq  80586ca <next>
 8063359:	b8 00 00 00 00       	mov    $0x0,%eax
 806335e:	e8 54 4a 00 00       	callq  8067db7 <expr_const>
 8063363:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8063366:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8063369:	83 f8 00             	cmp    $0x0,%eax
 806336c:	0f 8d 2f 00 00 00    	jge    80633a1 <struct_decl+0x4b8>
 8063372:	b8 00 00 00 00       	mov    $0x0,%eax
 8063377:	48 89 c6             	mov    %rax,%rsi
 806337a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806337d:	48 89 c7             	mov    %rax,%rdi
 8063380:	b8 00 00 00 00       	mov    $0x0,%eax
 8063385:	e8 2a e5 fe ff       	callq  80518b4 <get_tok_str>
 806338a:	48 89 c6             	mov    %rax,%rsi
 806338d:	48 8d 05 bd 89 02 00 	lea    0x289bd(%rip),%rax        # 808bd51 <L.167>
 8063394:	48 89 c7             	mov    %rax,%rdi
 8063397:	b8 00 00 00 00       	mov    $0x0,%eax
 806339c:	e8 26 a3 fe ff       	callq  804d6c7 <tcc_error>
 80633a1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80633a4:	85 c0                	test   %eax,%eax
 80633a6:	0f 84 3b 00 00 00    	je     80633e7 <struct_decl+0x4fe>
 80633ac:	8b 45 d0             	mov    -0x30(%rbp),%eax
 80633af:	83 f8 00             	cmp    $0x0,%eax
 80633b2:	0f 85 2f 00 00 00    	jne    80633e7 <struct_decl+0x4fe>
 80633b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80633bd:	48 89 c6             	mov    %rax,%rsi
 80633c0:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80633c3:	48 89 c7             	mov    %rax,%rdi
 80633c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80633cb:	e8 e4 e4 fe ff       	callq  80518b4 <get_tok_str>
 80633d0:	48 89 c6             	mov    %rax,%rsi
 80633d3:	48 8d 05 98 89 02 00 	lea    0x28998(%rip),%rax        # 808bd72 <L.168>
 80633da:	48 89 c7             	mov    %rax,%rdi
 80633dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80633e2:	e8 e0 a2 fe ff       	callq  804d6c7 <tcc_error>
 80633e7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 80633eb:	48 89 c6             	mov    %rax,%rsi
 80633ee:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 80633f5:	48 89 c7             	mov    %rax,%rdi
 80633f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80633fd:	e8 12 da ff ff       	callq  8060e14 <type_size>
 8063402:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8063405:	8b 45 80             	mov    -0x80(%rbp),%eax
 8063408:	c1 e0 18             	shl    $0x18,%eax
 806340b:	c1 e8 1b             	shr    $0x1b,%eax
 806340e:	85 c0                	test   %eax,%eax
 8063410:	0f 84 26 00 00 00    	je     806343c <struct_decl+0x553>
 8063416:	8b 45 80             	mov    -0x80(%rbp),%eax
 8063419:	c1 e0 18             	shl    $0x18,%eax
 806341c:	c1 e8 1b             	shr    $0x1b,%eax
 806341f:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8063422:	48 39 c1             	cmp    %rax,%rcx
 8063425:	0f 83 0c 00 00 00    	jae    8063437 <struct_decl+0x54e>
 806342b:	8b 45 80             	mov    -0x80(%rbp),%eax
 806342e:	c1 e0 18             	shl    $0x18,%eax
 8063431:	c1 e8 1b             	shr    $0x1b,%eax
 8063434:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8063437:	e9 88 00 00 00       	jmpq   80634c4 <struct_decl+0x5db>
 806343c:	8b 45 80             	mov    -0x80(%rbp),%eax
 806343f:	c1 e0 17             	shl    $0x17,%eax
 8063442:	c1 e8 1f             	shr    $0x1f,%eax
 8063445:	85 c0                	test   %eax,%eax
 8063447:	0f 84 0d 00 00 00    	je     806345a <struct_decl+0x571>
 806344d:	b8 01 00 00 00       	mov    $0x1,%eax
 8063452:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8063455:	e9 6a 00 00 00       	jmpq   80634c4 <struct_decl+0x5db>
 806345a:	48 8b 05 2f aa 02 00 	mov    0x2aa2f(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8063461:	48 8b 00             	mov    (%rax),%rax
 8063464:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 806346b:	00 00 00 
 806346e:	48 01 c8             	add    %rcx,%rax
 8063471:	48 8b 08             	mov    (%rax),%rcx
 8063474:	8b 01                	mov    (%rcx),%eax
 8063476:	85 c0                	test   %eax,%eax
 8063478:	0f 84 46 00 00 00    	je     80634c4 <struct_decl+0x5db>
 806347e:	48 8b 05 0b aa 02 00 	mov    0x2aa0b(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8063485:	48 8b 00             	mov    (%rax),%rax
 8063488:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 806348f:	00 00 00 
 8063492:	48 01 c8             	add    %rcx,%rax
 8063495:	48 8b 08             	mov    (%rax),%rcx
 8063498:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806349b:	8b 11                	mov    (%rcx),%edx
 806349d:	39 d0                	cmp    %edx,%eax
 806349f:	0f 8e 1f 00 00 00    	jle    80634c4 <struct_decl+0x5db>
 80634a5:	48 8b 05 e4 a9 02 00 	mov    0x2a9e4(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 80634ac:	48 8b 00             	mov    (%rax),%rax
 80634af:	48 b9 68 0c 00 00 00 	movabs $0xc68,%rcx
 80634b6:	00 00 00 
 80634b9:	48 01 c8             	add    %rcx,%rax
 80634bc:	48 8b 08             	mov    (%rax),%rcx
 80634bf:	8b 01                	mov    (%rcx),%eax
 80634c1:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80634c4:	b8 00 00 00 00       	mov    $0x0,%eax
 80634c9:	89 45 c0             	mov    %eax,-0x40(%rbp)
 80634cc:	8b 45 d0             	mov    -0x30(%rbp),%eax
 80634cf:	83 f8 00             	cmp    $0x0,%eax
 80634d2:	0f 8c 63 01 00 00    	jl     806363b <struct_decl+0x752>
 80634d8:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 80634de:	83 e0 0f             	and    $0xf,%eax
 80634e1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 80634e4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80634e7:	83 f8 00             	cmp    $0x0,%eax
 80634ea:	0f 84 50 00 00 00    	je     8063540 <struct_decl+0x657>
 80634f0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80634f3:	83 f8 01             	cmp    $0x1,%eax
 80634f6:	0f 84 44 00 00 00    	je     8063540 <struct_decl+0x657>
 80634fc:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80634ff:	83 f8 02             	cmp    $0x2,%eax
 8063502:	0f 84 38 00 00 00    	je     8063540 <struct_decl+0x657>
 8063508:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806350b:	83 f8 0b             	cmp    $0xb,%eax
 806350e:	0f 84 2c 00 00 00    	je     8063540 <struct_decl+0x657>
 8063514:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8063517:	83 f8 05             	cmp    $0x5,%eax
 806351a:	0f 84 20 00 00 00    	je     8063540 <struct_decl+0x657>
 8063520:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8063523:	83 f8 0c             	cmp    $0xc,%eax
 8063526:	0f 84 14 00 00 00    	je     8063540 <struct_decl+0x657>
 806352c:	48 8d 05 5d 88 02 00 	lea    0x2885d(%rip),%rax        # 808bd90 <L.169>
 8063533:	48 89 c7             	mov    %rax,%rdi
 8063536:	b8 00 00 00 00       	mov    $0x0,%eax
 806353b:	e8 87 a1 fe ff       	callq  804d6c7 <tcc_error>
 8063540:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8063543:	c1 e0 03             	shl    $0x3,%eax
 8063546:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8063549:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806354c:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 806354f:	39 c8                	cmp    %ecx,%eax
 8063551:	0f 8e 34 00 00 00    	jle    806358b <struct_decl+0x6a2>
 8063557:	b8 00 00 00 00       	mov    $0x0,%eax
 806355c:	48 89 c6             	mov    %rax,%rsi
 806355f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8063562:	48 89 c7             	mov    %rax,%rdi
 8063565:	b8 00 00 00 00       	mov    $0x0,%eax
 806356a:	e8 45 e3 fe ff       	callq  80518b4 <get_tok_str>
 806356f:	48 89 c6             	mov    %rax,%rsi
 8063572:	48 8d 05 37 88 02 00 	lea    0x28837(%rip),%rax        # 808bdb0 <L.170>
 8063579:	48 89 c7             	mov    %rax,%rdi
 806357c:	b8 00 00 00 00       	mov    $0x0,%eax
 8063581:	e8 41 a1 fe ff       	callq  804d6c7 <tcc_error>
 8063586:	e9 a5 00 00 00       	jmpq   8063630 <struct_decl+0x747>
 806358b:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806358e:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8063591:	39 c8                	cmp    %ecx,%eax
 8063593:	0f 85 0d 00 00 00    	jne    80635a6 <struct_decl+0x6bd>
 8063599:	b8 00 00 00 00       	mov    $0x0,%eax
 806359e:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80635a1:	e9 8a 00 00 00       	jmpq   8063630 <struct_decl+0x747>
 80635a6:	8b 45 d0             	mov    -0x30(%rbp),%eax
 80635a9:	83 f8 00             	cmp    $0x0,%eax
 80635ac:	0f 85 0d 00 00 00    	jne    80635bf <struct_decl+0x6d6>
 80635b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80635b7:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80635ba:	e9 71 00 00 00       	jmpq   8063630 <struct_decl+0x747>
 80635bf:	8b 45 cc             	mov    -0x34(%rbp),%eax
 80635c2:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 80635c5:	48 01 c8             	add    %rcx,%rax
 80635c8:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 80635cb:	39 c8                	cmp    %ecx,%eax
 80635cd:	0f 8f 22 00 00 00    	jg     80635f5 <struct_decl+0x70c>
 80635d3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80635d6:	8b 4d bc             	mov    -0x44(%rbp),%ecx
 80635d9:	39 c8                	cmp    %ecx,%eax
 80635db:	0f 85 14 00 00 00    	jne    80635f5 <struct_decl+0x70c>
 80635e1:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80635e4:	81 f8 29 01 00 00    	cmp    $0x129,%eax
 80635ea:	0f 84 05 00 00 00    	je     80635f5 <struct_decl+0x70c>
 80635f0:	e9 08 00 00 00       	jmpq   80635fd <struct_decl+0x714>
 80635f5:	b8 00 00 00 00       	mov    $0x0,%eax
 80635fa:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80635fd:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8063600:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8063603:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8063606:	c1 e0 12             	shl    $0x12,%eax
 8063609:	83 c8 40             	or     $0x40,%eax
 806360c:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806360f:	c1 e1 18             	shl    $0x18,%ecx
 8063612:	48 09 c8             	or     %rcx,%rax
 8063615:	8b 8d 70 ff ff ff    	mov    -0x90(%rbp),%ecx
 806361b:	48 09 c1             	or     %rax,%rcx
 806361e:	89 8d 70 ff ff ff    	mov    %ecx,-0x90(%rbp)
 8063624:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8063627:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806362a:	48 01 c8             	add    %rcx,%rax
 806362d:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8063630:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8063633:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8063636:	e9 08 00 00 00       	jmpq   8063643 <struct_decl+0x75a>
 806363b:	b8 00 00 00 00       	mov    $0x0,%eax
 8063640:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8063643:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8063646:	83 f8 00             	cmp    $0x0,%eax
 8063649:	0f 85 17 00 00 00    	jne    8063666 <struct_decl+0x77d>
 806364f:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 8063655:	83 e0 0f             	and    $0xf,%eax
 8063658:	83 f8 07             	cmp    $0x7,%eax
 806365b:	0f 84 05 00 00 00    	je     8063666 <struct_decl+0x77d>
 8063661:	e9 8b 00 00 00       	jmpq   80636f1 <struct_decl+0x808>
 8063666:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8063669:	83 f8 00             	cmp    $0x0,%eax
 806366c:	0f 85 7f 00 00 00    	jne    80636f1 <struct_decl+0x808>
 8063672:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063675:	81 f8 28 01 00 00    	cmp    $0x128,%eax
 806367b:	0f 85 40 00 00 00    	jne    80636c1 <struct_decl+0x7d8>
 8063681:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8063684:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8063687:	48 01 c8             	add    %rcx,%rax
 806368a:	83 e8 01             	sub    $0x1,%eax
 806368d:	b9 00 00 00 00       	mov    $0x0,%ecx
 8063692:	8b 55 e0             	mov    -0x20(%rbp),%edx
 8063695:	48 29 d1             	sub    %rdx,%rcx
 8063698:	48 21 c8             	and    %rcx,%rax
 806369b:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806369e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80636a1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 80636a4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80636a7:	83 f8 00             	cmp    $0x0,%eax
 80636aa:	0f 8e 0c 00 00 00    	jle    80636bc <struct_decl+0x7d3>
 80636b0:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80636b3:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 80636b6:	48 01 c8             	add    %rcx,%rax
 80636b9:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80636bc:	e9 1c 00 00 00       	jmpq   80636dd <struct_decl+0x7f4>
 80636c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80636c6:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 80636c9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80636cc:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 80636cf:	39 c8                	cmp    %ecx,%eax
 80636d1:	0f 8e 06 00 00 00    	jle    80636dd <struct_decl+0x7f4>
 80636d7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80636da:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80636dd:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80636e0:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 80636e3:	39 c8                	cmp    %ecx,%eax
 80636e5:	0f 8e 06 00 00 00    	jle    80636f1 <struct_decl+0x808>
 80636eb:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80636ee:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80636f1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80636f4:	83 f8 00             	cmp    $0x0,%eax
 80636f7:	0f 85 f0 00 00 00    	jne    80637ed <struct_decl+0x904>
 80636fd:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 8063703:	83 e0 0f             	and    $0xf,%eax
 8063706:	83 f8 07             	cmp    $0x7,%eax
 8063709:	0f 85 de 00 00 00    	jne    80637ed <struct_decl+0x904>
 806370f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8063716:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 806371a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806371e:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8063725:	00 00 00 
 8063728:	48 01 c8             	add    %rcx,%rax
 806372b:	48 8b 08             	mov    (%rax),%rcx
 806372e:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 8063732:	48 89 c8             	mov    %rcx,%rax
 8063735:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806373c:	00 00 00 
 806373f:	48 39 c8             	cmp    %rcx,%rax
 8063742:	0f 84 a0 00 00 00    	je     80637e8 <struct_decl+0x8ff>
 8063748:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806374c:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 8063750:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8063757:	00 00 00 
 806375a:	48 01 d1             	add    %rdx,%rcx
 806375d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
 8063761:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8063768:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806376f:	00 00 00 
 8063772:	48 01 c2             	add    %rax,%rdx
 8063775:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8063778:	48 63 c0             	movslq %eax,%rax
 806377b:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
 8063782:	48 89 c1             	mov    %rax,%rcx
 8063785:	48 8b 02             	mov    (%rdx),%rax
 8063788:	48 01 c1             	add    %rax,%rcx
 806378b:	48 89 c8             	mov    %rcx,%rax
 806378e:	49 89 c3             	mov    %rax,%r11
 8063791:	b8 00 00 00 00       	mov    $0x0,%eax
 8063796:	49 89 c2             	mov    %rax,%r10
 8063799:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 80637a0:	48 89 c6             	mov    %rax,%rsi
 80637a3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 80637aa:	8b 00                	mov    (%rax),%eax
 80637ac:	48 89 c7             	mov    %rax,%rdi
 80637af:	4c 89 d2             	mov    %r10,%rdx
 80637b2:	4c 89 d9             	mov    %r11,%rcx
 80637b5:	b8 00 00 00 00       	mov    $0x0,%eax
 80637ba:	e8 9c 89 ff ff       	callq  805c15b <sym_push>
 80637bf:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 80637c3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80637c7:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 80637cb:	48 89 08             	mov    %rcx,(%rax)
 80637ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80637d2:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80637d9:	00 00 00 
 80637dc:	48 01 c8             	add    %rcx,%rax
 80637df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 80637e3:	e9 32 ff ff ff       	jmpq   806371a <struct_decl+0x831>
 80637e8:	e9 63 00 00 00       	jmpq   8063850 <struct_decl+0x967>
 80637ed:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80637f0:	85 c0                	test   %eax,%eax
 80637f2:	0f 84 58 00 00 00    	je     8063850 <struct_decl+0x967>
 80637f8:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80637fb:	81 c8 00 00 00 20    	or     $0x20000000,%eax
 8063801:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 8063804:	49 89 cb             	mov    %rcx,%r11
 8063807:	b9 00 00 00 00       	mov    $0x0,%ecx
 806380c:	49 89 ca             	mov    %rcx,%r10
 806380f:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
 8063816:	48 89 ce             	mov    %rcx,%rsi
 8063819:	48 89 c7             	mov    %rax,%rdi
 806381c:	4c 89 d2             	mov    %r10,%rdx
 806381f:	4c 89 d9             	mov    %r11,%rcx
 8063822:	b8 00 00 00 00       	mov    $0x0,%eax
 8063827:	e8 2f 89 ff ff       	callq  805c15b <sym_push>
 806382c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 8063830:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8063834:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 8063838:	48 89 08             	mov    %rcx,(%rax)
 806383b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 806383f:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8063846:	00 00 00 
 8063849:	48 01 c8             	add    %rcx,%rax
 806384c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 8063850:	48 8b 05 d1 a6 02 00 	mov    0x2a6d1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063857:	8b 00                	mov    (%rax),%eax
 8063859:	83 f8 3b             	cmp    $0x3b,%eax
 806385c:	0f 84 17 00 00 00    	je     8063879 <struct_decl+0x990>
 8063862:	48 8b 05 bf a6 02 00 	mov    0x2a6bf(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063869:	8b 00                	mov    (%rax),%eax
 806386b:	83 f8 ff             	cmp    $0xffffffff,%eax
 806386e:	0f 84 05 00 00 00    	je     8063879 <struct_decl+0x990>
 8063874:	e9 05 00 00 00       	jmpq   806387e <struct_decl+0x995>
 8063879:	e9 17 00 00 00       	jmpq   8063895 <struct_decl+0x9ac>
 806387e:	b8 2c 00 00 00       	mov    $0x2c,%eax
 8063883:	48 89 c7             	mov    %rax,%rdi
 8063886:	b8 00 00 00 00       	mov    $0x0,%eax
 806388b:	e8 53 d8 fe ff       	callq  80510e3 <skip>
 8063890:	e9 a1 f9 ff ff       	jmpq   8063236 <struct_decl+0x34d>
 8063895:	b8 3b 00 00 00       	mov    $0x3b,%eax
 806389a:	48 89 c7             	mov    %rax,%rdi
 806389d:	b8 00 00 00 00       	mov    $0x0,%eax
 80638a2:	e8 3c d8 fe ff       	callq  80510e3 <skip>
 80638a7:	e9 5d f9 ff ff       	jmpq   8063209 <struct_decl+0x320>
 80638ac:	b8 7d 00 00 00       	mov    $0x7d,%eax
 80638b1:	48 89 c7             	mov    %rax,%rdi
 80638b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80638b9:	e8 25 d8 fe ff       	callq  80510e3 <skip>
 80638be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 80638c2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80638c9:	00 00 00 
 80638cc:	48 01 c8             	add    %rcx,%rax
 80638cf:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 80638d2:	8b 55 dc             	mov    -0x24(%rbp),%edx
 80638d5:	48 01 d1             	add    %rdx,%rcx
 80638d8:	83 e9 01             	sub    $0x1,%ecx
 80638db:	ba 00 00 00 00       	mov    $0x0,%edx
 80638e0:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 80638e7:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80638ea:	48 29 c2             	sub    %rax,%rdx
 80638ed:	48 21 d1             	and    %rdx,%rcx
 80638f0:	48 63 c9             	movslq %ecx,%rcx
 80638f3:	48 89 c8             	mov    %rcx,%rax
 80638f6:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80638fd:	48 89 01             	mov    %rax,(%rcx)
 8063900:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8063904:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806390b:	00 00 00 
 806390e:	48 01 c8             	add    %rcx,%rax
 8063911:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8063914:	48 63 c9             	movslq %ecx,%rcx
 8063917:	48 89 ca             	mov    %rcx,%rdx
 806391a:	48 89 10             	mov    %rdx,(%rax)
 806391d:	c9                   	leaveq 
 806391e:	c3                   	retq   

000000000806391f <parse_btype>:
 806391f:	55                   	push   %rbp
 8063920:	48 89 e5             	mov    %rsp,%rbp
 8063923:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 806392a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806392e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8063932:	b8 18 00 00 00       	mov    $0x18,%eax
 8063937:	49 89 c2             	mov    %rax,%r10
 806393a:	b8 00 00 00 00       	mov    $0x0,%eax
 806393f:	48 89 c6             	mov    %rax,%rsi
 8063942:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8063946:	48 89 c7             	mov    %rax,%rdi
 8063949:	4c 89 d2             	mov    %r10,%rdx
 806394c:	b8 00 00 00 00       	mov    $0x0,%eax
 8063951:	e8 5a 35 02 00       	callq  8086eb0 <memset>
 8063956:	b8 00 00 00 00       	mov    $0x0,%eax
 806395b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806395e:	b8 00 00 00 00       	mov    $0x0,%eax
 8063963:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8063966:	b8 00 00 00 00       	mov    $0x0,%eax
 806396b:	89 45 dc             	mov    %eax,-0x24(%rbp)
 806396e:	b8 00 00 00 00       	mov    $0x0,%eax
 8063973:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063976:	48 8b 05 ab a5 02 00 	mov    0x2a5ab(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806397d:	8b 00                	mov    (%rax),%eax
 806397f:	e9 05 00 00 00       	jmpq   8063989 <parse_btype+0x6a>
 8063984:	e9 0c 00 00 00       	jmpq   8063995 <parse_btype+0x76>
 8063989:	81 f8 23 01 00 00    	cmp    $0x123,%eax
 806398f:	0f 85 14 00 00 00    	jne    80639a9 <parse_btype+0x8a>
 8063995:	b8 00 00 00 00       	mov    $0x0,%eax
 806399a:	e8 2b 4d ff ff       	callq  80586ca <next>
 806399f:	e9 d2 ff ff ff       	jmpq   8063976 <parse_btype+0x57>
 80639a4:	e9 0c 00 00 00       	jmpq   80639b5 <parse_btype+0x96>
 80639a9:	81 f8 02 01 00 00    	cmp    $0x102,%eax
 80639af:	0f 85 53 00 00 00    	jne    8063a08 <parse_btype+0xe9>
 80639b5:	b8 01 00 00 00       	mov    $0x1,%eax
 80639ba:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80639bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80639c2:	e8 03 4d ff ff       	callq  80586ca <next>
 80639c7:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80639ca:	83 e0 0f             	and    $0xf,%eax
 80639cd:	83 f8 00             	cmp    $0x0,%eax
 80639d0:	0f 84 14 00 00 00    	je     80639ea <parse_btype+0xcb>
 80639d6:	48 8d 05 f2 83 02 00 	lea    0x283f2(%rip),%rax        # 808bdcf <L.171>
 80639dd:	48 89 c7             	mov    %rax,%rdi
 80639e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80639e5:	e8 dd 9c fe ff       	callq  804d6c7 <tcc_error>
 80639ea:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80639ed:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 80639f0:	48 09 c8             	or     %rcx,%rax
 80639f3:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80639f6:	b8 01 00 00 00       	mov    $0x1,%eax
 80639fb:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80639fe:	e9 01 07 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063a03:	e9 0c 00 00 00       	jmpq   8063a14 <parse_btype+0xf5>
 8063a08:	81 f8 01 01 00 00    	cmp    $0x101,%eax
 8063a0e:	0f 85 0f 00 00 00    	jne    8063a23 <parse_btype+0x104>
 8063a14:	b8 03 00 00 00       	mov    $0x3,%eax
 8063a19:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063a1c:	eb 9f                	jmp    80639bd <parse_btype+0x9e>
 8063a1e:	e9 0c 00 00 00       	jmpq   8063a2f <parse_btype+0x110>
 8063a23:	81 f8 27 01 00 00    	cmp    $0x127,%eax
 8063a29:	0f 85 0f 00 00 00    	jne    8063a3e <parse_btype+0x11f>
 8063a2f:	b8 02 00 00 00       	mov    $0x2,%eax
 8063a34:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063a37:	eb 84                	jmp    80639bd <parse_btype+0x9e>
 8063a39:	e9 0c 00 00 00       	jmpq   8063a4a <parse_btype+0x12b>
 8063a3e:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8063a44:	0f 85 1c 00 00 00    	jne    8063a66 <parse_btype+0x147>
 8063a4a:	b8 00 00 00 00       	mov    $0x0,%eax
 8063a4f:	e8 76 4c ff ff       	callq  80586ca <next>
 8063a54:	b8 01 00 00 00       	mov    $0x1,%eax
 8063a59:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8063a5c:	e9 a3 06 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063a61:	e9 0c 00 00 00       	jmpq   8063a72 <parse_btype+0x153>
 8063a66:	81 f8 17 01 00 00    	cmp    $0x117,%eax
 8063a6c:	0f 85 61 00 00 00    	jne    8063ad3 <parse_btype+0x1b4>
 8063a72:	b8 00 00 00 00       	mov    $0x0,%eax
 8063a77:	e8 4e 4c ff ff       	callq  80586ca <next>
 8063a7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063a7f:	83 e0 0f             	and    $0xf,%eax
 8063a82:	83 f8 09             	cmp    $0x9,%eax
 8063a85:	0f 85 11 00 00 00    	jne    8063a9c <parse_btype+0x17d>
 8063a8b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063a8e:	83 e0 f0             	and    $0xfffffff0,%eax
 8063a91:	83 c8 0a             	or     $0xa,%eax
 8063a94:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063a97:	e9 2d 00 00 00       	jmpq   8063ac9 <parse_btype+0x1aa>
 8063a9c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063a9f:	83 e0 0f             	and    $0xf,%eax
 8063aa2:	83 f8 0d             	cmp    $0xd,%eax
 8063aa5:	0f 85 11 00 00 00    	jne    8063abc <parse_btype+0x19d>
 8063aab:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063aae:	83 e0 f0             	and    $0xfffffff0,%eax
 8063ab1:	83 c8 0c             	or     $0xc,%eax
 8063ab4:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063ab7:	e9 0d 00 00 00       	jmpq   8063ac9 <parse_btype+0x1aa>
 8063abc:	b8 0d 00 00 00       	mov    $0xd,%eax
 8063ac1:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063ac4:	e9 fe fe ff ff       	jmpq   80639c7 <parse_btype+0xa8>
 8063ac9:	e9 36 06 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063ace:	e9 0c 00 00 00       	jmpq   8063adf <parse_btype+0x1c0>
 8063ad3:	81 f8 26 01 00 00    	cmp    $0x126,%eax
 8063ad9:	0f 85 12 00 00 00    	jne    8063af1 <parse_btype+0x1d2>
 8063adf:	b8 0b 00 00 00       	mov    $0xb,%eax
 8063ae4:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063ae7:	e9 d1 fe ff ff       	jmpq   80639bd <parse_btype+0x9e>
 8063aec:	e9 0c 00 00 00       	jmpq   8063afd <parse_btype+0x1de>
 8063af1:	81 f8 24 01 00 00    	cmp    $0x124,%eax
 8063af7:	0f 85 12 00 00 00    	jne    8063b0f <parse_btype+0x1f0>
 8063afd:	b8 08 00 00 00       	mov    $0x8,%eax
 8063b02:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063b05:	e9 b3 fe ff ff       	jmpq   80639bd <parse_btype+0x9e>
 8063b0a:	e9 0c 00 00 00       	jmpq   8063b1b <parse_btype+0x1fc>
 8063b0f:	81 f8 25 01 00 00    	cmp    $0x125,%eax
 8063b15:	0f 85 41 00 00 00    	jne    8063b5c <parse_btype+0x23d>
 8063b1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8063b20:	e8 a5 4b ff ff       	callq  80586ca <next>
 8063b25:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063b28:	83 e0 0f             	and    $0xf,%eax
 8063b2b:	83 f8 0d             	cmp    $0xd,%eax
 8063b2e:	0f 85 11 00 00 00    	jne    8063b45 <parse_btype+0x226>
 8063b34:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063b37:	83 e0 f0             	and    $0xfffffff0,%eax
 8063b3a:	83 c8 0a             	or     $0xa,%eax
 8063b3d:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063b40:	e9 0d 00 00 00       	jmpq   8063b52 <parse_btype+0x233>
 8063b45:	b8 09 00 00 00       	mov    $0x9,%eax
 8063b4a:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063b4d:	e9 75 fe ff ff       	jmpq   80639c7 <parse_btype+0xa8>
 8063b52:	e9 ad 05 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063b57:	e9 0c 00 00 00       	jmpq   8063b68 <parse_btype+0x249>
 8063b5c:	81 f8 2c 01 00 00    	cmp    $0x12c,%eax
 8063b62:	0f 85 41 00 00 00    	jne    8063ba9 <parse_btype+0x28a>
 8063b68:	b8 05 00 00 00       	mov    $0x5,%eax
 8063b6d:	48 89 c6             	mov    %rax,%rsi
 8063b70:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8063b74:	48 89 c7             	mov    %rax,%rdi
 8063b77:	b8 00 00 00 00       	mov    $0x0,%eax
 8063b7c:	e8 68 f3 ff ff       	callq  8062ee9 <struct_decl>
 8063b81:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8063b84:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8063b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8063b8b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8063b92:	00 00 00 
 8063b95:	48 01 c8             	add    %rcx,%rax
 8063b98:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 8063b9c:	48 89 08             	mov    %rcx,(%rax)
 8063b9f:	e9 23 fe ff ff       	jmpq   80639c7 <parse_btype+0xa8>
 8063ba4:	e9 0c 00 00 00       	jmpq   8063bb5 <parse_btype+0x296>
 8063ba9:	81 f8 28 01 00 00    	cmp    $0x128,%eax
 8063baf:	0f 85 05 00 00 00    	jne    8063bba <parse_btype+0x29b>
 8063bb5:	e9 0c 00 00 00       	jmpq   8063bc6 <parse_btype+0x2a7>
 8063bba:	81 f8 29 01 00 00    	cmp    $0x129,%eax
 8063bc0:	0f 85 20 00 00 00    	jne    8063be6 <parse_btype+0x2c7>
 8063bc6:	b8 07 00 00 00       	mov    $0x7,%eax
 8063bcb:	48 89 c6             	mov    %rax,%rsi
 8063bce:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8063bd2:	48 89 c7             	mov    %rax,%rdi
 8063bd5:	b8 00 00 00 00       	mov    $0x0,%eax
 8063bda:	e8 0a f3 ff ff       	callq  8062ee9 <struct_decl>
 8063bdf:	eb a0                	jmp    8063b81 <parse_btype+0x262>
 8063be1:	e9 0c 00 00 00       	jmpq   8063bf2 <parse_btype+0x2d3>
 8063be6:	81 f8 11 01 00 00    	cmp    $0x111,%eax
 8063bec:	0f 85 05 00 00 00    	jne    8063bf7 <parse_btype+0x2d8>
 8063bf2:	e9 0c 00 00 00       	jmpq   8063c03 <parse_btype+0x2e4>
 8063bf7:	81 f8 12 01 00 00    	cmp    $0x112,%eax
 8063bfd:	0f 85 05 00 00 00    	jne    8063c08 <parse_btype+0x2e9>
 8063c03:	e9 0c 00 00 00       	jmpq   8063c14 <parse_btype+0x2f5>
 8063c08:	81 f8 13 01 00 00    	cmp    $0x113,%eax
 8063c0e:	0f 85 20 00 00 00    	jne    8063c34 <parse_btype+0x315>
 8063c14:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063c17:	81 c8 00 08 00 00    	or     $0x800,%eax
 8063c1d:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063c20:	b8 00 00 00 00       	mov    $0x0,%eax
 8063c25:	e8 a0 4a ff ff       	callq  80586ca <next>
 8063c2a:	e9 d5 04 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063c2f:	e9 0c 00 00 00       	jmpq   8063c40 <parse_btype+0x321>
 8063c34:	81 f8 14 01 00 00    	cmp    $0x114,%eax
 8063c3a:	0f 85 05 00 00 00    	jne    8063c45 <parse_btype+0x326>
 8063c40:	e9 0c 00 00 00       	jmpq   8063c51 <parse_btype+0x332>
 8063c45:	81 f8 15 01 00 00    	cmp    $0x115,%eax
 8063c4b:	0f 85 05 00 00 00    	jne    8063c56 <parse_btype+0x337>
 8063c51:	e9 0c 00 00 00       	jmpq   8063c62 <parse_btype+0x343>
 8063c56:	81 f8 16 01 00 00    	cmp    $0x116,%eax
 8063c5c:	0f 85 20 00 00 00    	jne    8063c82 <parse_btype+0x363>
 8063c62:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063c65:	81 c8 00 10 00 00    	or     $0x1000,%eax
 8063c6b:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063c6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8063c73:	e8 52 4a ff ff       	callq  80586ca <next>
 8063c78:	e9 87 04 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063c7d:	e9 0c 00 00 00       	jmpq   8063c8e <parse_btype+0x36f>
 8063c82:	81 f8 19 01 00 00    	cmp    $0x119,%eax
 8063c88:	0f 85 05 00 00 00    	jne    8063c93 <parse_btype+0x374>
 8063c8e:	e9 0c 00 00 00       	jmpq   8063c9f <parse_btype+0x380>
 8063c93:	81 f8 1a 01 00 00    	cmp    $0x11a,%eax
 8063c99:	0f 85 05 00 00 00    	jne    8063ca4 <parse_btype+0x385>
 8063c9f:	e9 0c 00 00 00       	jmpq   8063cb0 <parse_btype+0x391>
 8063ca4:	81 f8 1b 01 00 00    	cmp    $0x11b,%eax
 8063caa:	0f 85 28 00 00 00    	jne    8063cd8 <parse_btype+0x3b9>
 8063cb0:	b8 01 00 00 00       	mov    $0x1,%eax
 8063cb5:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8063cb8:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063cbb:	81 c8 00 20 00 00    	or     $0x2000,%eax
 8063cc1:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063cc4:	b8 00 00 00 00       	mov    $0x0,%eax
 8063cc9:	e8 fc 49 ff ff       	callq  80586ca <next>
 8063cce:	e9 31 04 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063cd3:	e9 0c 00 00 00       	jmpq   8063ce4 <parse_btype+0x3c5>
 8063cd8:	81 f8 18 01 00 00    	cmp    $0x118,%eax
 8063cde:	0f 85 05 00 00 00    	jne    8063ce9 <parse_btype+0x3ca>
 8063ce4:	e9 0c 00 00 00       	jmpq   8063cf5 <parse_btype+0x3d6>
 8063ce9:	81 f8 1c 01 00 00    	cmp    $0x11c,%eax
 8063cef:	0f 85 05 00 00 00    	jne    8063cfa <parse_btype+0x3db>
 8063cf5:	e9 0c 00 00 00       	jmpq   8063d06 <parse_btype+0x3e7>
 8063cfa:	81 f8 20 01 00 00    	cmp    $0x120,%eax
 8063d00:	0f 85 05 00 00 00    	jne    8063d0b <parse_btype+0x3ec>
 8063d06:	e9 0c 00 00 00       	jmpq   8063d17 <parse_btype+0x3f8>
 8063d0b:	81 f8 21 01 00 00    	cmp    $0x121,%eax
 8063d11:	0f 85 05 00 00 00    	jne    8063d1c <parse_btype+0x3fd>
 8063d17:	e9 0c 00 00 00       	jmpq   8063d28 <parse_btype+0x409>
 8063d1c:	81 f8 22 01 00 00    	cmp    $0x122,%eax
 8063d22:	0f 85 14 00 00 00    	jne    8063d3c <parse_btype+0x41d>
 8063d28:	b8 00 00 00 00       	mov    $0x0,%eax
 8063d2d:	e8 98 49 ff ff       	callq  80586ca <next>
 8063d32:	e9 cd 03 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063d37:	e9 0c 00 00 00       	jmpq   8063d48 <parse_btype+0x429>
 8063d3c:	81 f8 0b 01 00 00    	cmp    $0x10b,%eax
 8063d42:	0f 85 25 00 00 00    	jne    8063d6d <parse_btype+0x44e>
 8063d48:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063d4b:	83 c8 10             	or     $0x10,%eax
 8063d4e:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063d51:	b8 00 00 00 00       	mov    $0x0,%eax
 8063d56:	e8 6f 49 ff ff       	callq  80586ca <next>
 8063d5b:	b8 01 00 00 00       	mov    $0x1,%eax
 8063d60:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8063d63:	e9 9c 03 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063d68:	e9 0c 00 00 00       	jmpq   8063d79 <parse_btype+0x45a>
 8063d6d:	81 f8 09 01 00 00    	cmp    $0x109,%eax
 8063d73:	0f 85 20 00 00 00    	jne    8063d99 <parse_btype+0x47a>
 8063d79:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063d7c:	81 c8 80 00 00 00    	or     $0x80,%eax
 8063d82:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063d85:	b8 00 00 00 00       	mov    $0x0,%eax
 8063d8a:	e8 3b 49 ff ff       	callq  80586ca <next>
 8063d8f:	e9 70 03 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063d94:	e9 0c 00 00 00       	jmpq   8063da5 <parse_btype+0x486>
 8063d99:	81 f8 0a 01 00 00    	cmp    $0x10a,%eax
 8063d9f:	0f 85 20 00 00 00    	jne    8063dc5 <parse_btype+0x4a6>
 8063da5:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063da8:	81 c8 00 01 00 00    	or     $0x100,%eax
 8063dae:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063db1:	b8 00 00 00 00       	mov    $0x0,%eax
 8063db6:	e8 0f 49 ff ff       	callq  80586ca <next>
 8063dbb:	e9 44 03 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063dc0:	e9 0c 00 00 00       	jmpq   8063dd1 <parse_btype+0x4b2>
 8063dc5:	81 f8 2a 01 00 00    	cmp    $0x12a,%eax
 8063dcb:	0f 85 20 00 00 00    	jne    8063df1 <parse_btype+0x4d2>
 8063dd1:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063dd4:	81 c8 00 02 00 00    	or     $0x200,%eax
 8063dda:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063ddd:	b8 00 00 00 00       	mov    $0x0,%eax
 8063de2:	e8 e3 48 ff ff       	callq  80586ca <next>
 8063de7:	e9 18 03 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063dec:	e9 0c 00 00 00       	jmpq   8063dfd <parse_btype+0x4de>
 8063df1:	81 f8 1d 01 00 00    	cmp    $0x11d,%eax
 8063df7:	0f 85 05 00 00 00    	jne    8063e02 <parse_btype+0x4e3>
 8063dfd:	e9 0c 00 00 00       	jmpq   8063e0e <parse_btype+0x4ef>
 8063e02:	81 f8 1e 01 00 00    	cmp    $0x11e,%eax
 8063e08:	0f 85 05 00 00 00    	jne    8063e13 <parse_btype+0x4f4>
 8063e0e:	e9 0c 00 00 00       	jmpq   8063e1f <parse_btype+0x500>
 8063e13:	81 f8 1f 01 00 00    	cmp    $0x11f,%eax
 8063e19:	0f 85 20 00 00 00    	jne    8063e3f <parse_btype+0x520>
 8063e1f:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063e22:	81 c8 00 04 00 00    	or     $0x400,%eax
 8063e28:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063e2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8063e30:	e8 95 48 ff ff       	callq  80586ca <next>
 8063e35:	e9 ca 02 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063e3a:	e9 0c 00 00 00       	jmpq   8063e4b <parse_btype+0x52c>
 8063e3f:	81 f8 2e 01 00 00    	cmp    $0x12e,%eax
 8063e45:	0f 85 05 00 00 00    	jne    8063e50 <parse_btype+0x531>
 8063e4b:	e9 0c 00 00 00       	jmpq   8063e5c <parse_btype+0x53d>
 8063e50:	81 f8 2f 01 00 00    	cmp    $0x12f,%eax
 8063e56:	0f 85 50 00 00 00    	jne    8063eac <parse_btype+0x58d>
 8063e5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8063e60:	48 89 c7             	mov    %rax,%rdi
 8063e63:	b8 00 00 00 00       	mov    $0x0,%eax
 8063e68:	e8 dc e8 ff ff       	callq  8062749 <parse_attribute>
 8063e6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8063e71:	8b 08                	mov    (%rax),%ecx
 8063e73:	c1 e1 0c             	shl    $0xc,%ecx
 8063e76:	c1 e9 1c             	shr    $0x1c,%ecx
 8063e79:	85 c9                	test   %ecx,%ecx
 8063e7b:	0f 84 21 00 00 00    	je     8063ea2 <parse_btype+0x583>
 8063e81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8063e85:	8b 08                	mov    (%rax),%ecx
 8063e87:	c1 e1 0c             	shl    $0xc,%ecx
 8063e8a:	c1 e9 1c             	shr    $0x1c,%ecx
 8063e8d:	83 e9 01             	sub    $0x1,%ecx
 8063e90:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 8063e93:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063e96:	83 e0 f0             	and    $0xfffffff0,%eax
 8063e99:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8063e9c:	48 09 c8             	or     %rcx,%rax
 8063e9f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063ea2:	e9 5d 02 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8063ea7:	e9 0c 00 00 00       	jmpq   8063eb8 <parse_btype+0x599>
 8063eac:	81 f8 32 01 00 00    	cmp    $0x132,%eax
 8063eb2:	0f 85 05 00 00 00    	jne    8063ebd <parse_btype+0x59e>
 8063eb8:	e9 0c 00 00 00       	jmpq   8063ec9 <parse_btype+0x5aa>
 8063ebd:	81 f8 33 01 00 00    	cmp    $0x133,%eax
 8063ec3:	0f 85 05 00 00 00    	jne    8063ece <parse_btype+0x5af>
 8063ec9:	e9 0c 00 00 00       	jmpq   8063eda <parse_btype+0x5bb>
 8063ece:	81 f8 34 01 00 00    	cmp    $0x134,%eax
 8063ed4:	0f 85 2c 00 00 00    	jne    8063f06 <parse_btype+0x5e7>
 8063eda:	b8 00 00 00 00       	mov    $0x0,%eax
 8063edf:	e8 e6 47 ff ff       	callq  80586ca <next>
 8063ee4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8063ee8:	48 89 c7             	mov    %rax,%rdi
 8063eeb:	b8 00 00 00 00       	mov    $0x0,%eax
 8063ef0:	e8 9a 11 00 00       	callq  806508f <parse_expr_type>
 8063ef5:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8063ef8:	81 e0 7f 3a fe ff    	and    $0xfffe3a7f,%eax
 8063efe:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8063f01:	e9 7b fc ff ff       	jmpq   8063b81 <parse_btype+0x262>
 8063f06:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8063f09:	85 c0                	test   %eax,%eax
 8063f0b:	0f 85 10 00 00 00    	jne    8063f21 <parse_btype+0x602>
 8063f11:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8063f14:	85 c0                	test   %eax,%eax
 8063f16:	0f 85 05 00 00 00    	jne    8063f21 <parse_btype+0x602>
 8063f1c:	e9 05 00 00 00       	jmpq   8063f26 <parse_btype+0x607>
 8063f21:	e9 eb 01 00 00       	jmpq   8064111 <parse_btype+0x7f2>
 8063f26:	48 8b 05 fb 9f 02 00 	mov    0x29ffb(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8063f2d:	8b 00                	mov    (%rax),%eax
 8063f2f:	48 89 c7             	mov    %rax,%rdi
 8063f32:	b8 00 00 00 00       	mov    $0x0,%eax
 8063f37:	e8 a8 81 ff ff       	callq  805c0e4 <sym_find>
 8063f3c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8063f40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8063f44:	85 c0                	test   %eax,%eax
 8063f46:	0f 84 26 00 00 00    	je     8063f72 <parse_btype+0x653>
 8063f4c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8063f50:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8063f57:	00 00 00 
 8063f5a:	48 01 c8             	add    %rcx,%rax
 8063f5d:	8b 08                	mov    (%rax),%ecx
 8063f5f:	81 e1 00 02 00 00    	and    $0x200,%ecx
 8063f65:	85 c9                	test   %ecx,%ecx
 8063f67:	0f 84 05 00 00 00    	je     8063f72 <parse_btype+0x653>
 8063f6d:	e9 05 00 00 00       	jmpq   8063f77 <parse_btype+0x658>
 8063f72:	e9 9a 01 00 00       	jmpq   8064111 <parse_btype+0x7f2>
 8063f77:	b8 01 00 00 00       	mov    $0x1,%eax
 8063f7c:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8063f7f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8063f83:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8063f8a:	00 00 00 
 8063f8d:	48 01 c8             	add    %rcx,%rax
 8063f90:	8b 08                	mov    (%rax),%ecx
 8063f92:	81 e1 ff fd ff ff    	and    $0xfffffdff,%ecx
 8063f98:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8063f9b:	48 09 c8             	or     %rcx,%rax
 8063f9e:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8063fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8063fa5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8063fac:	00 00 00 
 8063faf:	48 01 c8             	add    %rcx,%rax
 8063fb2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 8063fb6:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8063fbd:	00 00 00 
 8063fc0:	48 01 d1             	add    %rdx,%rcx
 8063fc3:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8063fca:	00 00 00 
 8063fcd:	48 01 d1             	add    %rdx,%rcx
 8063fd0:	48 8b 11             	mov    (%rcx),%rdx
 8063fd3:	48 89 10             	mov    %rdx,(%rax)
 8063fd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8063fda:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8063fe1:	00 00 00 
 8063fe4:	48 01 c8             	add    %rcx,%rax
 8063fe7:	48 8b 08             	mov    (%rax),%rcx
 8063fea:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8063ff1:	00 00 00 
 8063ff4:	48 39 c1             	cmp    %rax,%rcx
 8063ff7:	b8 00 00 00 00       	mov    $0x0,%eax
 8063ffc:	0f 95 c0             	setne  %al
 8063fff:	85 c0                	test   %eax,%eax
 8064001:	0f 84 e6 00 00 00    	je     80640ed <parse_btype+0x7ce>
 8064007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806400b:	8b 08                	mov    (%rax),%ecx
 806400d:	c1 e1 18             	shl    $0x18,%ecx
 8064010:	c1 e9 1b             	shr    $0x1b,%ecx
 8064013:	b8 00 00 00 00       	mov    $0x0,%eax
 8064018:	48 39 c8             	cmp    %rcx,%rax
 806401b:	0f 85 37 00 00 00    	jne    8064058 <parse_btype+0x739>
 8064021:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064025:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 8064029:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8064030:	00 00 00 
 8064033:	48 01 d1             	add    %rdx,%rcx
 8064036:	8b 11                	mov    (%rcx),%edx
 8064038:	c1 e2 18             	shl    $0x18,%edx
 806403b:	c1 ea 1b             	shr    $0x1b,%edx
 806403e:	48 89 d1             	mov    %rdx,%rcx
 8064041:	83 e1 1f             	and    $0x1f,%ecx
 8064044:	c1 e1 03             	shl    $0x3,%ecx
 8064047:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 806404b:	8b 10                	mov    (%rax),%edx
 806404d:	81 e2 07 ff ff ff    	and    $0xffffff07,%edx
 8064053:	48 09 d1             	or     %rdx,%rcx
 8064056:	89 08                	mov    %ecx,(%rax)
 8064058:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806405c:	8b 08                	mov    (%rax),%ecx
 806405e:	c1 e1 1d             	shl    $0x1d,%ecx
 8064061:	c1 e9 1d             	shr    $0x1d,%ecx
 8064064:	b8 00 00 00 00       	mov    $0x0,%eax
 8064069:	48 39 c8             	cmp    %rcx,%rax
 806406c:	0f 85 31 00 00 00    	jne    80640a3 <parse_btype+0x784>
 8064072:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064076:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 806407a:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8064081:	00 00 00 
 8064084:	48 01 d1             	add    %rdx,%rcx
 8064087:	8b 11                	mov    (%rcx),%edx
 8064089:	c1 e2 1d             	shl    $0x1d,%edx
 806408c:	c1 ea 1d             	shr    $0x1d,%edx
 806408f:	48 89 d1             	mov    %rdx,%rcx
 8064092:	83 e1 07             	and    $0x7,%ecx
 8064095:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
 8064099:	8b 10                	mov    (%rax),%edx
 806409b:	83 e2 f8             	and    $0xfffffff8,%edx
 806409e:	48 09 d1             	or     %rdx,%rcx
 80640a1:	89 08                	mov    %ecx,(%rax)
 80640a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80640a7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80640ab:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 80640b2:	00 00 00 
 80640b5:	48 01 d1             	add    %rdx,%rcx
 80640b8:	8b 10                	mov    (%rax),%edx
 80640ba:	c1 e2 17             	shl    $0x17,%edx
 80640bd:	c1 ea 1f             	shr    $0x1f,%edx
 80640c0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 80640c4:	8b 01                	mov    (%rcx),%eax
 80640c6:	c1 e0 17             	shl    $0x17,%eax
 80640c9:	c1 e8 1f             	shr    $0x1f,%eax
 80640cc:	48 09 c2             	or     %rax,%rdx
 80640cf:	48 89 d0             	mov    %rdx,%rax
 80640d2:	83 e0 01             	and    $0x1,%eax
 80640d5:	c1 e0 08             	shl    $0x8,%eax
 80640d8:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 80640dc:	8b 09                	mov    (%rcx),%ecx
 80640de:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 80640e4:	48 09 c8             	or     %rcx,%rax
 80640e7:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 80640eb:	89 01                	mov    %eax,(%rcx)
 80640ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80640f2:	e8 d3 45 ff ff       	callq  80586ca <next>
 80640f7:	b8 01 00 00 00       	mov    $0x1,%eax
 80640fc:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80640ff:	e9 00 00 00 00       	jmpq   8064104 <parse_btype+0x7e5>
 8064104:	b8 01 00 00 00       	mov    $0x1,%eax
 8064109:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806410c:	e9 65 f8 ff ff       	jmpq   8063976 <parse_btype+0x57>
 8064111:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064114:	81 e0 10 20 00 00    	and    $0x2010,%eax
 806411a:	81 f8 10 20 00 00    	cmp    $0x2010,%eax
 8064120:	0f 85 14 00 00 00    	jne    806413a <parse_btype+0x81b>
 8064126:	48 8d 05 b7 7c 02 00 	lea    0x27cb7(%rip),%rax        # 808bde4 <L.172>
 806412d:	48 89 c7             	mov    %rax,%rdi
 8064130:	b8 00 00 00 00       	mov    $0x0,%eax
 8064135:	e8 8d 95 fe ff       	callq  804d6c7 <tcc_error>
 806413a:	48 8b 05 4f 9d 02 00 	mov    0x29d4f(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8064141:	48 8b 00             	mov    (%rax),%rax
 8064144:	48 b9 2c 01 00 00 00 	movabs $0x12c,%rcx
 806414b:	00 00 00 
 806414e:	48 01 c8             	add    %rcx,%rax
 8064151:	8b 08                	mov    (%rax),%ecx
 8064153:	85 c9                	test   %ecx,%ecx
 8064155:	0f 84 1b 00 00 00    	je     8064176 <parse_btype+0x857>
 806415b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806415e:	81 e0 1f 20 00 00    	and    $0x201f,%eax
 8064164:	83 f8 01             	cmp    $0x1,%eax
 8064167:	0f 85 09 00 00 00    	jne    8064176 <parse_btype+0x857>
 806416d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064170:	83 c8 10             	or     $0x10,%eax
 8064173:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8064176:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064179:	81 e0 ff df ff ff    	and    $0xffffdfff,%eax
 806417f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8064182:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064185:	83 e0 0f             	and    $0xf,%eax
 8064188:	83 f8 0d             	cmp    $0xd,%eax
 806418b:	b8 00 00 00 00       	mov    $0x0,%eax
 8064190:	0f 94 c0             	sete   %al
 8064193:	85 c0                	test   %eax,%eax
 8064195:	0f 84 0c 00 00 00    	je     80641a7 <parse_btype+0x888>
 806419b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806419e:	83 e0 f0             	and    $0xfffffff0,%eax
 80641a1:	83 c8 0c             	or     $0xc,%eax
 80641a4:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80641a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80641ab:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80641ae:	89 08                	mov    %ecx,(%rax)
 80641b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80641b3:	e9 00 00 00 00       	jmpq   80641b8 <parse_btype+0x899>
 80641b8:	c9                   	leaveq 
 80641b9:	c3                   	retq   

00000000080641ba <parse_asm_str>:
 80641ba:	55                   	push   %rbp
 80641bb:	48 89 e5             	mov    %rsp,%rbp
 80641be:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80641c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80641c9:	b8 28 00 00 00       	mov    $0x28,%eax
 80641ce:	48 89 c7             	mov    %rax,%rdi
 80641d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80641d6:	e8 08 cf fe ff       	callq  80510e3 <skip>
 80641db:	48 8b 05 46 9d 02 00 	mov    0x29d46(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80641e2:	8b 00                	mov    (%rax),%eax
 80641e4:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 80641ea:	0f 84 14 00 00 00    	je     8064204 <parse_asm_str+0x4a>
 80641f0:	48 8d 05 0a 7c 02 00 	lea    0x27c0a(%rip),%rax        # 808be01 <L.173>
 80641f7:	48 89 c7             	mov    %rax,%rdi
 80641fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80641ff:	e8 4e cf fe ff       	callq  8051152 <expect>
 8064204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064208:	48 89 c7             	mov    %rax,%rdi
 806420b:	b8 00 00 00 00       	mov    $0x0,%eax
 8064210:	e8 b2 d1 fe ff       	callq  80513c7 <cstr_new>
 8064215:	48 8b 05 0c 9d 02 00 	mov    0x29d0c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806421c:	8b 00                	mov    (%rax),%eax
 806421e:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8064224:	0f 85 3a 00 00 00    	jne    8064264 <parse_asm_str+0xaa>
 806422a:	48 8b 05 77 9d 02 00 	mov    0x29d77(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8064231:	48 8b 00             	mov    (%rax),%rax
 8064234:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806423b:	00 00 00 
 806423e:	48 01 c8             	add    %rcx,%rax
 8064241:	48 8b 08             	mov    (%rax),%rcx
 8064244:	48 89 ce             	mov    %rcx,%rsi
 8064247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806424b:	48 89 c7             	mov    %rax,%rdi
 806424e:	b8 00 00 00 00       	mov    $0x0,%eax
 8064253:	e8 7d d0 fe ff       	callq  80512d5 <cstr_cat>
 8064258:	b8 00 00 00 00       	mov    $0x0,%eax
 806425d:	e8 68 44 ff ff       	callq  80586ca <next>
 8064262:	eb b1                	jmp    8064215 <parse_asm_str+0x5b>
 8064264:	b8 00 00 00 00       	mov    $0x0,%eax
 8064269:	48 89 c6             	mov    %rax,%rsi
 806426c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064270:	48 89 c7             	mov    %rax,%rdi
 8064273:	b8 00 00 00 00       	mov    $0x0,%eax
 8064278:	e8 d0 cf fe ff       	callq  805124d <cstr_ccat>
 806427d:	c9                   	leaveq 
 806427e:	c3                   	retq   

000000000806427f <asm_label_instr>:
 806427f:	55                   	push   %rbp
 8064280:	48 89 e5             	mov    %rsp,%rbp
 8064283:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806428a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806428e:	b8 00 00 00 00       	mov    $0x0,%eax
 8064293:	e8 32 44 ff ff       	callq  80586ca <next>
 8064298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806429c:	48 89 c7             	mov    %rax,%rdi
 806429f:	b8 00 00 00 00       	mov    $0x0,%eax
 80642a4:	e8 11 ff ff ff       	callq  80641ba <parse_asm_str>
 80642a9:	b8 29 00 00 00       	mov    $0x29,%eax
 80642ae:	48 89 c7             	mov    %rax,%rdi
 80642b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80642b6:	e8 28 ce fe ff       	callq  80510e3 <skip>
 80642bb:	c9                   	leaveq 
 80642bc:	c3                   	retq   

00000000080642bd <post_type>:
 80642bd:	55                   	push   %rbp
 80642be:	48 89 e5             	mov    %rsp,%rbp
 80642c1:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 80642c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80642cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80642d0:	48 8b 05 51 9c 02 00 	mov    0x29c51(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80642d7:	8b 00                	mov    (%rax),%eax
 80642d9:	83 f8 28             	cmp    $0x28,%eax
 80642dc:	0f 85 60 03 00 00    	jne    8064642 <post_type+0x385>
 80642e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80642e7:	e8 de 43 ff ff       	callq  80586ca <next>
 80642ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80642f1:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80642f4:	b8 00 00 00 00       	mov    $0x0,%eax
 80642f9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 80642fd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 8064301:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8064305:	b8 00 00 00 00       	mov    $0x0,%eax
 806430a:	89 45 e0             	mov    %eax,-0x20(%rbp)
 806430d:	48 8b 05 14 9c 02 00 	mov    0x29c14(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064314:	8b 00                	mov    (%rax),%eax
 8064316:	83 f8 29             	cmp    $0x29,%eax
 8064319:	0f 84 23 02 00 00    	je     8064542 <post_type+0x285>
 806431f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8064322:	83 f8 02             	cmp    $0x2,%eax
 8064325:	0f 84 08 01 00 00    	je     8064433 <post_type+0x176>
 806432b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 806432f:	48 89 c6             	mov    %rax,%rsi
 8064332:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8064336:	48 89 c7             	mov    %rax,%rdi
 8064339:	b8 00 00 00 00       	mov    $0x0,%eax
 806433e:	e8 dc f5 ff ff       	callq  806391f <parse_btype>
 8064343:	85 c0                	test   %eax,%eax
 8064345:	0f 84 05 00 00 00    	je     8064350 <post_type+0x93>
 806434b:	e9 31 00 00 00       	jmpq   8064381 <post_type+0xc4>
 8064350:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8064353:	85 c0                	test   %eax,%eax
 8064355:	0f 84 19 00 00 00    	je     8064374 <post_type+0xb7>
 806435b:	48 8d 05 af 7a 02 00 	lea    0x27aaf(%rip),%rax        # 808be11 <L.174>
 8064362:	48 89 c7             	mov    %rax,%rdi
 8064365:	b8 00 00 00 00       	mov    $0x0,%eax
 806436a:	e8 58 93 fe ff       	callq  804d6c7 <tcc_error>
 806436f:	e9 0d 00 00 00       	jmpq   8064381 <post_type+0xc4>
 8064374:	b8 02 00 00 00       	mov    $0x2,%eax
 8064379:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806437c:	e9 b2 00 00 00       	jmpq   8064433 <post_type+0x176>
 8064381:	b8 01 00 00 00       	mov    $0x1,%eax
 8064386:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8064389:	8b 45 98             	mov    -0x68(%rbp),%eax
 806438c:	83 e0 0f             	and    $0xf,%eax
 806438f:	83 f8 03             	cmp    $0x3,%eax
 8064392:	0f 85 17 00 00 00    	jne    80643af <post_type+0xf2>
 8064398:	48 8b 05 89 9b 02 00 	mov    0x29b89(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806439f:	8b 00                	mov    (%rax),%eax
 80643a1:	83 f8 29             	cmp    $0x29,%eax
 80643a4:	0f 85 05 00 00 00    	jne    80643af <post_type+0xf2>
 80643aa:	e9 93 01 00 00       	jmpq   8064542 <post_type+0x285>
 80643af:	b8 03 00 00 00       	mov    $0x3,%eax
 80643b4:	49 89 c3             	mov    %rax,%r11
 80643b7:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 80643bb:	49 89 c2             	mov    %rax,%r10
 80643be:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 80643c2:	48 89 c6             	mov    %rax,%rsi
 80643c5:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 80643c9:	48 89 c7             	mov    %rax,%rdi
 80643cc:	4c 89 d2             	mov    %r10,%rdx
 80643cf:	4c 89 d9             	mov    %r11,%rcx
 80643d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80643d7:	e8 68 05 00 00       	callq  8064944 <type_decl>
 80643dc:	8b 45 98             	mov    -0x68(%rbp),%eax
 80643df:	83 e0 0f             	and    $0xf,%eax
 80643e2:	83 f8 03             	cmp    $0x3,%eax
 80643e5:	0f 85 14 00 00 00    	jne    80643ff <post_type+0x142>
 80643eb:	48 8d 05 2c 7a 02 00 	lea    0x27a2c(%rip),%rax        # 808be1e <L.175>
 80643f2:	48 89 c7             	mov    %rax,%rdi
 80643f5:	b8 00 00 00 00       	mov    $0x0,%eax
 80643fa:	e8 c8 92 fe ff       	callq  804d6c7 <tcc_error>
 80643ff:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
 8064403:	48 89 c6             	mov    %rax,%rsi
 8064406:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 806440a:	48 89 c7             	mov    %rax,%rdi
 806440d:	b8 00 00 00 00       	mov    $0x0,%eax
 8064412:	e8 fd c9 ff ff       	callq  8060e14 <type_size>
 8064417:	83 c0 08             	add    $0x8,%eax
 806441a:	83 e8 01             	sub    $0x1,%eax
 806441d:	b9 08 00 00 00       	mov    $0x8,%ecx
 8064422:	99                   	cltd   
 8064423:	f7 f9                	idiv   %ecx
 8064425:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8064428:	48 01 c1             	add    %rax,%rcx
 806442b:	89 4d e0             	mov    %ecx,-0x20(%rbp)
 806442e:	e9 41 00 00 00       	jmpq   8064474 <post_type+0x1b7>
 8064433:	48 8b 05 ee 9a 02 00 	mov    0x29aee(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806443a:	8b 00                	mov    (%rax),%eax
 806443c:	89 45 ec             	mov    %eax,-0x14(%rbp)
 806443f:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064442:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 8064448:	0f 8d 14 00 00 00    	jge    8064462 <post_type+0x1a5>
 806444e:	48 8d 05 e4 79 02 00 	lea    0x279e4(%rip),%rax        # 808be39 <L.176>
 8064455:	48 89 c7             	mov    %rax,%rdi
 8064458:	b8 00 00 00 00       	mov    $0x0,%eax
 806445d:	e8 f0 cc fe ff       	callq  8051152 <expect>
 8064462:	b8 00 00 00 00       	mov    $0x0,%eax
 8064467:	89 45 98             	mov    %eax,-0x68(%rbp)
 806446a:	b8 00 00 00 00       	mov    $0x0,%eax
 806446f:	e8 56 42 ff ff       	callq  80586ca <next>
 8064474:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8064478:	48 89 c7             	mov    %rax,%rdi
 806447b:	b8 00 00 00 00       	mov    $0x0,%eax
 8064480:	e8 f9 8f 00 00       	callq  806d47e <convert_parameter_type>
 8064485:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064488:	81 c8 00 00 00 20    	or     $0x20000000,%eax
 806448e:	b9 00 00 00 00       	mov    $0x0,%ecx
 8064493:	49 89 cb             	mov    %rcx,%r11
 8064496:	b9 00 00 00 00       	mov    $0x0,%ecx
 806449b:	49 89 ca             	mov    %rcx,%r10
 806449e:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 80644a2:	48 89 ce             	mov    %rcx,%rsi
 80644a5:	48 89 c7             	mov    %rax,%rdi
 80644a8:	4c 89 d2             	mov    %r10,%rdx
 80644ab:	4c 89 d9             	mov    %r11,%rcx
 80644ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80644b3:	e8 a3 7c ff ff       	callq  805c15b <sym_push>
 80644b8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80644bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80644c0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 80644c4:	48 89 08             	mov    %rcx,(%rax)
 80644c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80644cb:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80644d2:	00 00 00 
 80644d5:	48 01 c8             	add    %rcx,%rax
 80644d8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80644dc:	48 8b 05 45 9a 02 00 	mov    0x29a45(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80644e3:	8b 00                	mov    (%rax),%eax
 80644e5:	83 f8 29             	cmp    $0x29,%eax
 80644e8:	0f 85 05 00 00 00    	jne    80644f3 <post_type+0x236>
 80644ee:	e9 4f 00 00 00       	jmpq   8064542 <post_type+0x285>
 80644f3:	b8 2c 00 00 00       	mov    $0x2c,%eax
 80644f8:	48 89 c7             	mov    %rax,%rdi
 80644fb:	b8 00 00 00 00       	mov    $0x0,%eax
 8064500:	e8 de cb fe ff       	callq  80510e3 <skip>
 8064505:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8064508:	83 f8 01             	cmp    $0x1,%eax
 806450b:	0f 85 2c 00 00 00    	jne    806453d <post_type+0x280>
 8064511:	48 8b 05 10 9a 02 00 	mov    0x29a10(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064518:	8b 00                	mov    (%rax),%eax
 806451a:	81 f8 cc 00 00 00    	cmp    $0xcc,%eax
 8064520:	0f 85 17 00 00 00    	jne    806453d <post_type+0x280>
 8064526:	b8 03 00 00 00       	mov    $0x3,%eax
 806452b:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806452e:	b8 00 00 00 00       	mov    $0x0,%eax
 8064533:	e8 92 41 ff ff       	callq  80586ca <next>
 8064538:	e9 05 00 00 00       	jmpq   8064542 <post_type+0x285>
 806453d:	e9 dd fd ff ff       	jmpq   806431f <post_type+0x62>
 8064542:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8064545:	83 f8 00             	cmp    $0x0,%eax
 8064548:	0f 85 08 00 00 00    	jne    8064556 <post_type+0x299>
 806454e:	b8 02 00 00 00       	mov    $0x2,%eax
 8064553:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8064556:	b8 29 00 00 00       	mov    $0x29,%eax
 806455b:	48 89 c7             	mov    %rax,%rdi
 806455e:	b8 00 00 00 00       	mov    $0x0,%eax
 8064563:	e8 7b cb fe ff       	callq  80510e3 <skip>
 8064568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806456c:	8b 08                	mov    (%rax),%ecx
 806456e:	81 e1 ff f7 ff ff    	and    $0xfffff7ff,%ecx
 8064574:	89 08                	mov    %ecx,(%rax)
 8064576:	48 8b 05 ab 99 02 00 	mov    0x299ab(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806457d:	8b 00                	mov    (%rax),%eax
 806457f:	83 f8 5b             	cmp    $0x5b,%eax
 8064582:	0f 85 27 00 00 00    	jne    80645af <post_type+0x2f2>
 8064588:	b8 00 00 00 00       	mov    $0x0,%eax
 806458d:	e8 38 41 ff ff       	callq  80586ca <next>
 8064592:	b8 5d 00 00 00       	mov    $0x5d,%eax
 8064597:	48 89 c7             	mov    %rax,%rdi
 806459a:	b8 00 00 00 00       	mov    $0x0,%eax
 806459f:	e8 3f cb fe ff       	callq  80510e3 <skip>
 80645a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80645a8:	8b 08                	mov    (%rax),%ecx
 80645aa:	83 c9 04             	or     $0x4,%ecx
 80645ad:	89 08                	mov    %ecx,(%rax)
 80645af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80645b3:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80645b6:	48 89 ca             	mov    %rcx,%rdx
 80645b9:	83 e2 1f             	and    $0x1f,%edx
 80645bc:	c1 e2 0b             	shl    $0xb,%edx
 80645bf:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
 80645c3:	8b 08                	mov    (%rax),%ecx
 80645c5:	81 e1 ff 07 ff ff    	and    $0xffff07ff,%ecx
 80645cb:	48 09 ca             	or     %rcx,%rdx
 80645ce:	89 10                	mov    %edx,(%rax)
 80645d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80645d4:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 80645d7:	49 89 cb             	mov    %rcx,%r11
 80645da:	8b 08                	mov    (%rax),%ecx
 80645dc:	49 89 ca             	mov    %rcx,%r10
 80645df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80645e3:	48 89 c6             	mov    %rax,%rsi
 80645e6:	b8 00 00 00 20       	mov    $0x20000000,%eax
 80645eb:	48 89 c7             	mov    %rax,%rdi
 80645ee:	4c 89 d2             	mov    %r10,%rdx
 80645f1:	4c 89 d9             	mov    %r11,%rcx
 80645f4:	b8 00 00 00 00       	mov    $0x0,%eax
 80645f9:	e8 5d 7b ff ff       	callq  805c15b <sym_push>
 80645fe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8064602:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8064606:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806460d:	00 00 00 
 8064610:	48 01 c8             	add    %rcx,%rax
 8064613:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 8064617:	48 89 08             	mov    %rcx,(%rax)
 806461a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806461e:	b9 06 00 00 00       	mov    $0x6,%ecx
 8064623:	89 08                	mov    %ecx,(%rax)
 8064625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064629:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8064630:	00 00 00 
 8064633:	48 01 c8             	add    %rcx,%rax
 8064636:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806463a:	48 89 08             	mov    %rcx,(%rax)
 806463d:	e9 00 03 00 00       	jmpq   8064942 <post_type+0x685>
 8064642:	48 8b 05 df 98 02 00 	mov    0x298df(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064649:	8b 00                	mov    (%rax),%eax
 806464b:	83 f8 5b             	cmp    $0x5b,%eax
 806464e:	0f 85 ee 02 00 00    	jne    8064942 <post_type+0x685>
 8064654:	b8 00 00 00 00       	mov    $0x0,%eax
 8064659:	e8 6c 40 ff ff       	callq  80586ca <next>
 806465e:	48 8b 05 c3 98 02 00 	mov    0x298c3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064665:	8b 00                	mov    (%rax),%eax
 8064667:	81 f8 20 01 00 00    	cmp    $0x120,%eax
 806466d:	0f 85 0a 00 00 00    	jne    806467d <post_type+0x3c0>
 8064673:	b8 00 00 00 00       	mov    $0x0,%eax
 8064678:	e8 4d 40 ff ff       	callq  80586ca <next>
 806467d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8064682:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8064685:	b8 00 00 00 00       	mov    $0x0,%eax
 806468a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806468d:	48 8b 05 94 98 02 00 	mov    0x29894(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064694:	8b 00                	mov    (%rax),%eax
 8064696:	83 f8 5d             	cmp    $0x5d,%eax
 8064699:	0f 84 fd 00 00 00    	je     806479c <post_type+0x4df>
 806469f:	48 8b 05 92 98 02 00 	mov    0x29892(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 80646a6:	48 8b 00             	mov    (%rax),%rax
 80646a9:	85 c0                	test   %eax,%eax
 80646ab:	0f 84 16 00 00 00    	je     80646c7 <post_type+0x40a>
 80646b1:	48 8b 05 48 98 02 00 	mov    0x29848(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 80646b8:	8b 00                	mov    (%rax),%eax
 80646ba:	85 c0                	test   %eax,%eax
 80646bc:	0f 85 05 00 00 00    	jne    80646c7 <post_type+0x40a>
 80646c2:	e9 1c 00 00 00       	jmpq   80646e3 <post_type+0x426>
 80646c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80646cc:	e8 e6 36 00 00       	callq  8067db7 <expr_const>
 80646d1:	48 89 c7             	mov    %rax,%rdi
 80646d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80646d9:	e8 1c 81 ff ff       	callq  805c7fa <vpushi>
 80646de:	e9 0a 00 00 00       	jmpq   80646ed <post_type+0x430>
 80646e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80646e8:	e8 4b 35 00 00       	callq  8067c38 <gexpr>
 80646ed:	48 8b 05 2c 98 02 00 	mov    0x2982c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80646f4:	48 8b 00             	mov    (%rax),%rax
 80646f7:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80646fe:	00 00 00 
 8064701:	48 01 c8             	add    %rcx,%rax
 8064704:	0f b7 08             	movzwl (%rax),%ecx
 8064707:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 806470d:	83 f9 30             	cmp    $0x30,%ecx
 8064710:	0f 85 41 00 00 00    	jne    8064757 <post_type+0x49a>
 8064716:	48 8b 05 03 98 02 00 	mov    0x29803(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806471d:	48 8b 00             	mov    (%rax),%rax
 8064720:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8064727:	00 00 00 
 806472a:	48 01 c8             	add    %rcx,%rax
 806472d:	8b 08                	mov    (%rax),%ecx
 806472f:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8064732:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064735:	83 f8 00             	cmp    $0x0,%eax
 8064738:	0f 8d 14 00 00 00    	jge    8064752 <post_type+0x495>
 806473e:	48 8d 05 ff 76 02 00 	lea    0x276ff(%rip),%rax        # 808be44 <L.177>
 8064745:	48 89 c7             	mov    %rax,%rdi
 8064748:	b8 00 00 00 00       	mov    $0x0,%eax
 806474d:	e8 75 8f fe ff       	callq  804d6c7 <tcc_error>
 8064752:	e9 45 00 00 00       	jmpq   806479c <post_type+0x4df>
 8064757:	48 8b 05 c2 97 02 00 	mov    0x297c2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806475e:	48 8b 00             	mov    (%rax),%rax
 8064761:	8b 08                	mov    (%rax),%ecx
 8064763:	83 e1 0f             	and    $0xf,%ecx
 8064766:	48 89 cf             	mov    %rcx,%rdi
 8064769:	b8 00 00 00 00       	mov    $0x0,%eax
 806476e:	e8 58 8d 00 00       	callq  806d4cb <is_integer_btype>
 8064773:	85 c0                	test   %eax,%eax
 8064775:	0f 84 05 00 00 00    	je     8064780 <post_type+0x4c3>
 806477b:	e9 14 00 00 00       	jmpq   8064794 <post_type+0x4d7>
 8064780:	48 8d 05 d0 76 02 00 	lea    0x276d0(%rip),%rax        # 808be57 <L.178>
 8064787:	48 89 c7             	mov    %rax,%rdi
 806478a:	b8 00 00 00 00       	mov    $0x0,%eax
 806478f:	e8 33 8f fe ff       	callq  804d6c7 <tcc_error>
 8064794:	b8 00 00 02 00       	mov    $0x20000,%eax
 8064799:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806479c:	b8 5d 00 00 00       	mov    $0x5d,%eax
 80647a1:	48 89 c7             	mov    %rax,%rdi
 80647a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80647a9:	e8 35 c9 fe ff       	callq  80510e3 <skip>
 80647ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80647b2:	48 89 c6             	mov    %rax,%rsi
 80647b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80647b9:	48 89 c7             	mov    %rax,%rdi
 80647bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80647c1:	e8 f7 fa ff ff       	callq  80642bd <post_type>
 80647c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80647ca:	8b 08                	mov    (%rax),%ecx
 80647cc:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 80647d2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80647d5:	48 09 c8             	or     %rcx,%rax
 80647d8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80647db:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80647de:	81 e0 00 00 02 00    	and    $0x20000,%eax
 80647e4:	85 c0                	test   %eax,%eax
 80647e6:	0f 84 c7 00 00 00    	je     80648b3 <post_type+0x5f6>
 80647ec:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
 80647f0:	48 89 c6             	mov    %rax,%rsi
 80647f3:	48 8b 05 de 96 02 00 	mov    0x296de(%rip),%rax        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 80647fa:	48 89 c7             	mov    %rax,%rdi
 80647fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8064802:	e8 0d c6 ff ff       	callq  8060e14 <type_size>
 8064807:	48 8b 0d ea 97 02 00 	mov    0x297ea(%rip),%rcx        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806480e:	8b 09                	mov    (%rcx),%ecx
 8064810:	48 29 c1             	sub    %rax,%rcx
 8064813:	4c 8b 1d de 97 02 00 	mov    0x297de(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806481a:	41 89 0b             	mov    %ecx,(%r11)
 806481d:	b8 00 00 00 00       	mov    $0x0,%eax
 8064822:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8064825:	48 29 c8             	sub    %rcx,%rax
 8064828:	48 8b 0d c9 97 02 00 	mov    0x297c9(%rip),%rcx        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806482f:	8b 09                	mov    (%rcx),%ecx
 8064831:	48 21 c1             	and    %rax,%rcx
 8064834:	4c 8b 1d bd 97 02 00 	mov    0x297bd(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806483b:	41 89 0b             	mov    %ecx,(%r11)
 806483e:	48 8b 05 b3 97 02 00 	mov    0x297b3(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8064845:	8b 00                	mov    (%rax),%eax
 8064847:	89 45 ec             	mov    %eax,-0x14(%rbp)
 806484a:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
 806484e:	48 89 c6             	mov    %rax,%rsi
 8064851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064855:	48 89 c7             	mov    %rax,%rdi
 8064858:	b8 00 00 00 00       	mov    $0x0,%eax
 806485d:	e8 f3 c7 ff ff       	callq  8061055 <vla_runtime_type_size>
 8064862:	b8 2a 00 00 00       	mov    $0x2a,%eax
 8064867:	48 89 c7             	mov    %rax,%rdi
 806486a:	b8 00 00 00 00       	mov    $0x0,%eax
 806486f:	e8 4c af ff ff       	callq  805f7c0 <gen_op>
 8064874:	48 8b 05 7d 97 02 00 	mov    0x2977d(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806487b:	8b 00                	mov    (%rax),%eax
 806487d:	49 89 c2             	mov    %rax,%r10
 8064880:	b8 32 01 00 00       	mov    $0x132,%eax
 8064885:	48 89 c6             	mov    %rax,%rsi
 8064888:	48 8b 05 49 96 02 00 	mov    0x29649(%rip),%rax        # 808ded8 <_GLOBAL_OFFSET_TABLE_+0x258>
 806488f:	48 89 c7             	mov    %rax,%rdi
 8064892:	4c 89 d2             	mov    %r10,%rdx
 8064895:	b8 00 00 00 00       	mov    $0x0,%eax
 806489a:	e8 29 85 ff ff       	callq  805cdc8 <vset>
 806489f:	b8 00 00 00 00       	mov    $0x0,%eax
 80648a4:	e8 a5 85 ff ff       	callq  805ce4e <vswap>
 80648a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80648ae:	e8 63 d7 ff ff       	callq  8062016 <vstore>
 80648b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80648b6:	83 f8 ff             	cmp    $0xffffffff,%eax
 80648b9:	0f 84 0a 00 00 00    	je     80648c9 <post_type+0x60c>
 80648bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80648c4:	e8 29 9a ff ff       	callq  805e2f2 <vpop>
 80648c9:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80648cc:	49 89 c3             	mov    %rax,%r11
 80648cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80648d4:	49 89 c2             	mov    %rax,%r10
 80648d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80648db:	48 89 c6             	mov    %rax,%rsi
 80648de:	b8 00 00 00 20       	mov    $0x20000000,%eax
 80648e3:	48 89 c7             	mov    %rax,%rdi
 80648e6:	4c 89 d2             	mov    %r10,%rdx
 80648e9:	4c 89 d9             	mov    %r11,%rcx
 80648ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80648f1:	e8 65 78 ff ff       	callq  805c15b <sym_push>
 80648f6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80648fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80648fe:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 8064901:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 8064905:	85 c9                	test   %ecx,%ecx
 8064907:	0f 84 05 00 00 00    	je     8064912 <post_type+0x655>
 806490d:	e9 0a 00 00 00       	jmpq   806491c <post_type+0x65f>
 8064912:	b8 20 00 00 00       	mov    $0x20,%eax
 8064917:	e9 05 00 00 00       	jmpq   8064921 <post_type+0x664>
 806491c:	b8 00 00 02 00       	mov    $0x20000,%eax
 8064921:	83 c8 04             	or     $0x4,%eax
 8064924:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 8064928:	89 01                	mov    %eax,(%rcx)
 806492a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806492e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8064935:	00 00 00 
 8064938:	48 01 c8             	add    %rcx,%rax
 806493b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806493f:	48 89 08             	mov    %rcx,(%rax)
 8064942:	c9                   	leaveq 
 8064943:	c3                   	retq   

0000000008064944 <type_decl>:
 8064944:	55                   	push   %rbp
 8064945:	48 89 e5             	mov    %rsp,%rbp
 8064948:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 806494f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8064953:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8064957:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806495b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806495f:	48 8b 05 c2 95 02 00 	mov    0x295c2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064966:	8b 00                	mov    (%rax),%eax
 8064968:	83 f8 2a             	cmp    $0x2a,%eax
 806496b:	0f 85 01 01 00 00    	jne    8064a72 <type_decl+0x12e>
 8064971:	b8 00 00 00 00       	mov    $0x0,%eax
 8064976:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8064979:	b8 00 00 00 00       	mov    $0x0,%eax
 806497e:	e8 47 3d ff ff       	callq  80586ca <next>
 8064983:	48 8b 05 9e 95 02 00 	mov    0x2959e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806498a:	8b 00                	mov    (%rax),%eax
 806498c:	e9 05 00 00 00       	jmpq   8064996 <type_decl+0x52>
 8064991:	e9 0c 00 00 00       	jmpq   80649a2 <type_decl+0x5e>
 8064996:	81 f8 11 01 00 00    	cmp    $0x111,%eax
 806499c:	0f 85 05 00 00 00    	jne    80649a7 <type_decl+0x63>
 80649a2:	e9 0c 00 00 00       	jmpq   80649b3 <type_decl+0x6f>
 80649a7:	81 f8 12 01 00 00    	cmp    $0x112,%eax
 80649ad:	0f 85 05 00 00 00    	jne    80649b8 <type_decl+0x74>
 80649b3:	e9 0c 00 00 00       	jmpq   80649c4 <type_decl+0x80>
 80649b8:	81 f8 13 01 00 00    	cmp    $0x113,%eax
 80649be:	0f 85 13 00 00 00    	jne    80649d7 <type_decl+0x93>
 80649c4:	8b 45 bc             	mov    -0x44(%rbp),%eax
 80649c7:	81 c8 00 08 00 00    	or     $0x800,%eax
 80649cd:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80649d0:	eb a7                	jmp    8064979 <type_decl+0x35>
 80649d2:	e9 0c 00 00 00       	jmpq   80649e3 <type_decl+0x9f>
 80649d7:	81 f8 14 01 00 00    	cmp    $0x114,%eax
 80649dd:	0f 85 05 00 00 00    	jne    80649e8 <type_decl+0xa4>
 80649e3:	e9 0c 00 00 00       	jmpq   80649f4 <type_decl+0xb0>
 80649e8:	81 f8 15 01 00 00    	cmp    $0x115,%eax
 80649ee:	0f 85 05 00 00 00    	jne    80649f9 <type_decl+0xb5>
 80649f4:	e9 0c 00 00 00       	jmpq   8064a05 <type_decl+0xc1>
 80649f9:	81 f8 16 01 00 00    	cmp    $0x116,%eax
 80649ff:	0f 85 16 00 00 00    	jne    8064a1b <type_decl+0xd7>
 8064a05:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8064a08:	81 c8 00 10 00 00    	or     $0x1000,%eax
 8064a0e:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8064a11:	e9 63 ff ff ff       	jmpq   8064979 <type_decl+0x35>
 8064a16:	e9 0c 00 00 00       	jmpq   8064a27 <type_decl+0xe3>
 8064a1b:	81 f8 20 01 00 00    	cmp    $0x120,%eax
 8064a21:	0f 85 05 00 00 00    	jne    8064a2c <type_decl+0xe8>
 8064a27:	e9 0c 00 00 00       	jmpq   8064a38 <type_decl+0xf4>
 8064a2c:	81 f8 21 01 00 00    	cmp    $0x121,%eax
 8064a32:	0f 85 05 00 00 00    	jne    8064a3d <type_decl+0xf9>
 8064a38:	e9 0c 00 00 00       	jmpq   8064a49 <type_decl+0x105>
 8064a3d:	81 f8 22 01 00 00    	cmp    $0x122,%eax
 8064a43:	0f 85 05 00 00 00    	jne    8064a4e <type_decl+0x10a>
 8064a49:	e9 2b ff ff ff       	jmpq   8064979 <type_decl+0x35>
 8064a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064a52:	48 89 c7             	mov    %rax,%rdi
 8064a55:	b8 00 00 00 00       	mov    $0x0,%eax
 8064a5a:	e8 8f c6 ff ff       	callq  80610ee <mk_pointer>
 8064a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064a63:	8b 08                	mov    (%rax),%ecx
 8064a65:	8b 55 bc             	mov    -0x44(%rbp),%edx
 8064a68:	48 09 d1             	or     %rdx,%rcx
 8064a6b:	89 08                	mov    %ecx,(%rax)
 8064a6d:	e9 ed fe ff ff       	jmpq   806495f <type_decl+0x1b>
 8064a72:	48 8b 05 af 94 02 00 	mov    0x294af(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064a79:	8b 00                	mov    (%rax),%eax
 8064a7b:	81 f8 2e 01 00 00    	cmp    $0x12e,%eax
 8064a81:	0f 84 1a 00 00 00    	je     8064aa1 <type_decl+0x15d>
 8064a87:	48 8b 05 9a 94 02 00 	mov    0x2949a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064a8e:	8b 00                	mov    (%rax),%eax
 8064a90:	81 f8 2f 01 00 00    	cmp    $0x12f,%eax
 8064a96:	0f 84 05 00 00 00    	je     8064aa1 <type_decl+0x15d>
 8064a9c:	e9 11 00 00 00       	jmpq   8064ab2 <type_decl+0x16e>
 8064aa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064aa5:	48 89 c7             	mov    %rax,%rdi
 8064aa8:	b8 00 00 00 00       	mov    $0x0,%eax
 8064aad:	e8 97 dc ff ff       	callq  8062749 <parse_attribute>
 8064ab2:	b8 00 00 00 00       	mov    $0x0,%eax
 8064ab7:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8064aba:	48 8b 05 67 94 02 00 	mov    0x29467(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064ac1:	8b 00                	mov    (%rax),%eax
 8064ac3:	83 f8 28             	cmp    $0x28,%eax
 8064ac6:	0f 85 8c 00 00 00    	jne    8064b58 <type_decl+0x214>
 8064acc:	b8 00 00 00 00       	mov    $0x0,%eax
 8064ad1:	e8 f4 3b ff ff       	callq  80586ca <next>
 8064ad6:	48 8b 05 4b 94 02 00 	mov    0x2944b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064add:	8b 00                	mov    (%rax),%eax
 8064adf:	81 f8 2e 01 00 00    	cmp    $0x12e,%eax
 8064ae5:	0f 84 1a 00 00 00    	je     8064b05 <type_decl+0x1c1>
 8064aeb:	48 8b 05 36 94 02 00 	mov    0x29436(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064af2:	8b 00                	mov    (%rax),%eax
 8064af4:	81 f8 2f 01 00 00    	cmp    $0x12f,%eax
 8064afa:	0f 84 05 00 00 00    	je     8064b05 <type_decl+0x1c1>
 8064b00:	e9 11 00 00 00       	jmpq   8064b16 <type_decl+0x1d2>
 8064b05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064b09:	48 89 c7             	mov    %rax,%rdi
 8064b0c:	b8 00 00 00 00       	mov    $0x0,%eax
 8064b11:	e8 33 dc ff ff       	callq  8062749 <parse_attribute>
 8064b16:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8064b19:	49 89 c3             	mov    %rax,%r11
 8064b1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8064b20:	49 89 c2             	mov    %rax,%r10
 8064b23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064b27:	48 89 c6             	mov    %rax,%rsi
 8064b2a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8064b2e:	48 89 c7             	mov    %rax,%rdi
 8064b31:	4c 89 d2             	mov    %r10,%rdx
 8064b34:	4c 89 d9             	mov    %r11,%rcx
 8064b37:	b8 00 00 00 00       	mov    $0x0,%eax
 8064b3c:	e8 03 fe ff ff       	callq  8064944 <type_decl>
 8064b41:	b8 29 00 00 00       	mov    $0x29,%eax
 8064b46:	48 89 c7             	mov    %rax,%rdi
 8064b49:	b8 00 00 00 00       	mov    $0x0,%eax
 8064b4e:	e8 90 c5 fe ff       	callq  80510e3 <skip>
 8064b53:	e9 73 00 00 00       	jmpq   8064bcb <type_decl+0x287>
 8064b58:	48 8b 05 c9 93 02 00 	mov    0x293c9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064b5f:	8b 00                	mov    (%rax),%eax
 8064b61:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8064b67:	0f 8c 2c 00 00 00    	jl     8064b99 <type_decl+0x255>
 8064b6d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8064b70:	83 e0 02             	and    $0x2,%eax
 8064b73:	85 c0                	test   %eax,%eax
 8064b75:	0f 84 1e 00 00 00    	je     8064b99 <type_decl+0x255>
 8064b7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8064b7f:	48 8b 0d a2 93 02 00 	mov    0x293a2(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064b86:	8b 09                	mov    (%rcx),%ecx
 8064b88:	89 08                	mov    %ecx,(%rax)
 8064b8a:	b8 00 00 00 00       	mov    $0x0,%eax
 8064b8f:	e8 36 3b ff ff       	callq  80586ca <next>
 8064b94:	e9 32 00 00 00       	jmpq   8064bcb <type_decl+0x287>
 8064b99:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8064b9c:	83 e0 01             	and    $0x1,%eax
 8064b9f:	85 c0                	test   %eax,%eax
 8064ba1:	0f 84 05 00 00 00    	je     8064bac <type_decl+0x268>
 8064ba7:	e9 14 00 00 00       	jmpq   8064bc0 <type_decl+0x27c>
 8064bac:	48 8d 05 d7 72 02 00 	lea    0x272d7(%rip),%rax        # 808be8a <L.179>
 8064bb3:	48 89 c7             	mov    %rax,%rdi
 8064bb6:	b8 00 00 00 00       	mov    $0x0,%eax
 8064bbb:	e8 92 c5 fe ff       	callq  8051152 <expect>
 8064bc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8064bc4:	b9 00 00 00 00       	mov    $0x0,%ecx
 8064bc9:	89 08                	mov    %ecx,(%rax)
 8064bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064bcf:	8b 08                	mov    (%rax),%ecx
 8064bd1:	81 e1 80 c7 01 00    	and    $0x1c780,%ecx
 8064bd7:	89 4d b8             	mov    %ecx,-0x48(%rbp)
 8064bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064bde:	8b 08                	mov    (%rax),%ecx
 8064be0:	81 e1 7f 38 fe ff    	and    $0xfffe387f,%ecx
 8064be6:	89 08                	mov    %ecx,(%rax)
 8064be8:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8064beb:	81 e0 00 01 00 00    	and    $0x100,%eax
 8064bf1:	85 c0                	test   %eax,%eax
 8064bf3:	0f 84 1b 00 00 00    	je     8064c14 <type_decl+0x2d0>
 8064bf9:	48 8b 05 00 93 02 00 	mov    0x29300(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8064c00:	8b 00                	mov    (%rax),%eax
 8064c02:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 8064c05:	b8 01 00 00 00       	mov    $0x1,%eax
 8064c0a:	4c 8b 1d ef 92 02 00 	mov    0x292ef(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8064c11:	41 89 03             	mov    %eax,(%r11)
 8064c14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064c18:	48 89 c6             	mov    %rax,%rsi
 8064c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064c1f:	48 89 c7             	mov    %rax,%rdi
 8064c22:	b8 00 00 00 00       	mov    $0x0,%eax
 8064c27:	e8 91 f6 ff ff       	callq  80642bd <post_type>
 8064c2c:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8064c2f:	81 e0 00 01 00 00    	and    $0x100,%eax
 8064c35:	85 c0                	test   %eax,%eax
 8064c37:	0f 84 0d 00 00 00    	je     8064c4a <type_decl+0x306>
 8064c3d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 8064c40:	4c 8b 1d b9 92 02 00 	mov    0x292b9(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8064c47:	41 89 03             	mov    %eax,(%r11)
 8064c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064c4e:	8b 08                	mov    (%rax),%ecx
 8064c50:	8b 55 b8             	mov    -0x48(%rbp),%edx
 8064c53:	48 09 d1             	or     %rdx,%rcx
 8064c56:	89 08                	mov    %ecx,(%rax)
 8064c58:	48 8b 05 c9 92 02 00 	mov    0x292c9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064c5f:	8b 00                	mov    (%rax),%eax
 8064c61:	81 f8 2e 01 00 00    	cmp    $0x12e,%eax
 8064c67:	0f 84 1a 00 00 00    	je     8064c87 <type_decl+0x343>
 8064c6d:	48 8b 05 b4 92 02 00 	mov    0x292b4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8064c74:	8b 00                	mov    (%rax),%eax
 8064c76:	81 f8 2f 01 00 00    	cmp    $0x12f,%eax
 8064c7c:	0f 84 05 00 00 00    	je     8064c87 <type_decl+0x343>
 8064c82:	e9 11 00 00 00       	jmpq   8064c98 <type_decl+0x354>
 8064c87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064c8b:	48 89 c7             	mov    %rax,%rdi
 8064c8e:	b8 00 00 00 00       	mov    $0x0,%eax
 8064c93:	e8 b1 da ff ff       	callq  8062749 <parse_attribute>
 8064c98:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8064c9b:	85 c0                	test   %eax,%eax
 8064c9d:	0f 84 05 00 00 00    	je     8064ca8 <type_decl+0x364>
 8064ca3:	e9 05 00 00 00       	jmpq   8064cad <type_decl+0x369>
 8064ca8:	e9 a1 00 00 00       	jmpq   8064d4e <type_decl+0x40a>
 8064cad:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8064cb1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8064cb5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8064cb9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8064cc0:	00 00 00 
 8064cc3:	48 01 c8             	add    %rcx,%rax
 8064cc6:	48 8b 08             	mov    (%rax),%rcx
 8064cc9:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8064ccd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8064cd1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8064cd8:	00 00 00 
 8064cdb:	48 01 c8             	add    %rcx,%rax
 8064cde:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8064ce2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8064ce6:	8b 08                	mov    (%rax),%ecx
 8064ce8:	85 c9                	test   %ecx,%ecx
 8064cea:	0f 84 05 00 00 00    	je     8064cf5 <type_decl+0x3b1>
 8064cf0:	e9 30 00 00 00       	jmpq   8064d25 <type_decl+0x3e1>
 8064cf5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8064cf9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8064cfd:	ba 10 00 00 00       	mov    $0x10,%edx
 8064d02:	49 89 d2             	mov    %rdx,%r10
 8064d05:	48 89 ce             	mov    %rcx,%rsi
 8064d08:	48 89 c7             	mov    %rax,%rdi
 8064d0b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 8064d0f:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 8064d13:	4c 89 d2             	mov    %r10,%rdx
 8064d16:	b8 00 00 00 00       	mov    $0x0,%eax
 8064d1b:	e8 50 1f 02 00       	callq  8086c70 <memcpy>
 8064d20:	e9 02 00 00 00       	jmpq   8064d27 <type_decl+0x3e3>
 8064d25:	eb 8e                	jmp    8064cb5 <type_decl+0x371>
 8064d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064d2b:	b9 10 00 00 00       	mov    $0x10,%ecx
 8064d30:	49 89 ca             	mov    %rcx,%r10
 8064d33:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
 8064d37:	48 89 ce             	mov    %rcx,%rsi
 8064d3a:	48 89 c7             	mov    %rax,%rdi
 8064d3d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 8064d41:	4c 89 d2             	mov    %r10,%rdx
 8064d44:	b8 00 00 00 00       	mov    $0x0,%eax
 8064d49:	e8 22 1f 02 00       	callq  8086c70 <memcpy>
 8064d4e:	c9                   	leaveq 
 8064d4f:	c3                   	retq   

0000000008064d50 <lvalue_type>:
 8064d50:	55                   	push   %rbp
 8064d51:	48 89 e5             	mov    %rsp,%rbp
 8064d54:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8064d5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8064d5f:	b8 00 01 00 00       	mov    $0x100,%eax
 8064d64:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8064d67:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8064d6a:	83 e0 0f             	and    $0xf,%eax
 8064d6d:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8064d70:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8064d73:	83 f8 01             	cmp    $0x1,%eax
 8064d76:	0f 84 11 00 00 00    	je     8064d8d <lvalue_type+0x3d>
 8064d7c:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8064d7f:	83 f8 0b             	cmp    $0xb,%eax
 8064d82:	0f 84 05 00 00 00    	je     8064d8d <lvalue_type+0x3d>
 8064d88:	e9 11 00 00 00       	jmpq   8064d9e <lvalue_type+0x4e>
 8064d8d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8064d90:	81 c8 00 10 00 00    	or     $0x1000,%eax
 8064d96:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8064d99:	e9 25 00 00 00       	jmpq   8064dc3 <lvalue_type+0x73>
 8064d9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8064da1:	83 f8 02             	cmp    $0x2,%eax
 8064da4:	0f 85 11 00 00 00    	jne    8064dbb <lvalue_type+0x6b>
 8064daa:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8064dad:	81 c8 00 20 00 00    	or     $0x2000,%eax
 8064db3:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8064db6:	e9 08 00 00 00       	jmpq   8064dc3 <lvalue_type+0x73>
 8064dbb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8064dbe:	e9 22 00 00 00       	jmpq   8064de5 <lvalue_type+0x95>
 8064dc3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8064dc6:	83 e0 10             	and    $0x10,%eax
 8064dc9:	85 c0                	test   %eax,%eax
 8064dcb:	0f 84 0c 00 00 00    	je     8064ddd <lvalue_type+0x8d>
 8064dd1:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8064dd4:	81 c8 00 40 00 00    	or     $0x4000,%eax
 8064dda:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8064ddd:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8064de0:	e9 00 00 00 00       	jmpq   8064de5 <lvalue_type+0x95>
 8064de5:	c9                   	leaveq 
 8064de6:	c3                   	retq   

0000000008064de7 <indir>:
 8064de7:	55                   	push   %rbp
 8064de8:	48 89 e5             	mov    %rsp,%rbp
 8064deb:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8064df2:	48 8b 05 27 91 02 00 	mov    0x29127(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064df9:	48 8b 00             	mov    (%rax),%rax
 8064dfc:	8b 08                	mov    (%rax),%ecx
 8064dfe:	83 e1 0f             	and    $0xf,%ecx
 8064e01:	83 f9 04             	cmp    $0x4,%ecx
 8064e04:	0f 84 31 00 00 00    	je     8064e3b <indir+0x54>
 8064e0a:	48 8b 05 0f 91 02 00 	mov    0x2910f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064e11:	48 8b 00             	mov    (%rax),%rax
 8064e14:	8b 08                	mov    (%rax),%ecx
 8064e16:	83 e1 0f             	and    $0xf,%ecx
 8064e19:	83 f9 06             	cmp    $0x6,%ecx
 8064e1c:	0f 85 05 00 00 00    	jne    8064e27 <indir+0x40>
 8064e22:	e9 44 01 00 00       	jmpq   8064f6b <indir+0x184>
 8064e27:	48 8d 05 67 70 02 00 	lea    0x27067(%rip),%rax        # 808be95 <L.180>
 8064e2e:	48 89 c7             	mov    %rax,%rdi
 8064e31:	b8 00 00 00 00       	mov    $0x0,%eax
 8064e36:	e8 17 c3 fe ff       	callq  8051152 <expect>
 8064e3b:	48 8b 05 de 90 02 00 	mov    0x290de(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064e42:	48 8b 00             	mov    (%rax),%rax
 8064e45:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8064e4c:	00 00 00 
 8064e4f:	48 01 c8             	add    %rcx,%rax
 8064e52:	0f b7 08             	movzwl (%rax),%ecx
 8064e55:	81 e1 00 01 00 00    	and    $0x100,%ecx
 8064e5b:	85 c9                	test   %ecx,%ecx
 8064e5d:	0f 84 28 00 00 00    	je     8064e8b <indir+0xa4>
 8064e63:	48 8b 05 96 90 02 00 	mov    0x29096(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8064e6a:	8b 00                	mov    (%rax),%eax
 8064e6c:	85 c0                	test   %eax,%eax
 8064e6e:	0f 84 05 00 00 00    	je     8064e79 <indir+0x92>
 8064e74:	e9 12 00 00 00       	jmpq   8064e8b <indir+0xa4>
 8064e79:	b8 01 00 00 00       	mov    $0x1,%eax
 8064e7e:	48 89 c7             	mov    %rax,%rdi
 8064e81:	b8 00 00 00 00       	mov    $0x0,%eax
 8064e86:	e8 9f 88 ff ff       	callq  805d72a <gv>
 8064e8b:	48 8b 05 8e 90 02 00 	mov    0x2908e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064e92:	48 8b 00             	mov    (%rax),%rax
 8064e95:	48 8b 0d 84 90 02 00 	mov    0x29084(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064e9c:	48 8b 09             	mov    (%rcx),%rcx
 8064e9f:	48 89 cf             	mov    %rcx,%rdi
 8064ea2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8064ea6:	b8 00 00 00 00       	mov    $0x0,%eax
 8064eab:	e8 cf 87 00 00       	callq  806d67f <pointed_type>
 8064eb0:	b9 10 00 00 00       	mov    $0x10,%ecx
 8064eb5:	49 89 ca             	mov    %rcx,%r10
 8064eb8:	48 89 c6             	mov    %rax,%rsi
 8064ebb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8064ebf:	48 89 cf             	mov    %rcx,%rdi
 8064ec2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8064ec6:	4c 89 d2             	mov    %r10,%rdx
 8064ec9:	b8 00 00 00 00       	mov    $0x0,%eax
 8064ece:	e8 9d 1d 02 00       	callq  8086c70 <memcpy>
 8064ed3:	48 8b 05 46 90 02 00 	mov    0x29046(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064eda:	48 8b 00             	mov    (%rax),%rax
 8064edd:	8b 08                	mov    (%rax),%ecx
 8064edf:	83 e1 20             	and    $0x20,%ecx
 8064ee2:	85 c9                	test   %ecx,%ecx
 8064ee4:	0f 84 05 00 00 00    	je     8064eef <indir+0x108>
 8064eea:	e9 7c 00 00 00       	jmpq   8064f6b <indir+0x184>
 8064eef:	48 8b 05 2a 90 02 00 	mov    0x2902a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064ef6:	48 8b 00             	mov    (%rax),%rax
 8064ef9:	8b 08                	mov    (%rax),%ecx
 8064efb:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 8064f01:	85 c9                	test   %ecx,%ecx
 8064f03:	0f 84 05 00 00 00    	je     8064f0e <indir+0x127>
 8064f09:	e9 5d 00 00 00       	jmpq   8064f6b <indir+0x184>
 8064f0e:	48 8b 05 0b 90 02 00 	mov    0x2900b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064f15:	48 8b 00             	mov    (%rax),%rax
 8064f18:	8b 08                	mov    (%rax),%ecx
 8064f1a:	83 e1 0f             	and    $0xf,%ecx
 8064f1d:	83 f9 06             	cmp    $0x6,%ecx
 8064f20:	0f 84 45 00 00 00    	je     8064f6b <indir+0x184>
 8064f26:	48 8b 05 f3 8f 02 00 	mov    0x28ff3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064f2d:	48 8b 00             	mov    (%rax),%rax
 8064f30:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8064f37:	00 00 00 
 8064f3a:	48 01 c8             	add    %rcx,%rax
 8064f3d:	48 8b 0d dc 8f 02 00 	mov    0x28fdc(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064f44:	48 8b 09             	mov    (%rcx),%rcx
 8064f47:	8b 11                	mov    (%rcx),%edx
 8064f49:	48 89 d7             	mov    %rdx,%rdi
 8064f4c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8064f50:	b8 00 00 00 00       	mov    $0x0,%eax
 8064f55:	e8 f6 fd ff ff       	callq  8064d50 <lvalue_type>
 8064f5a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8064f5e:	0f b7 09             	movzwl (%rcx),%ecx
 8064f61:	48 09 c1             	or     %rax,%rcx
 8064f64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8064f68:	66 89 08             	mov    %cx,(%rax)
 8064f6b:	c9                   	leaveq 
 8064f6c:	c3                   	retq   

0000000008064f6d <gfunc_param_typed>:
 8064f6d:	55                   	push   %rbp
 8064f6e:	48 89 e5             	mov    %rsp,%rbp
 8064f71:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8064f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8064f7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8064f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8064f84:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8064f8b:	00 00 00 
 8064f8e:	48 01 c8             	add    %rcx,%rax
 8064f91:	48 8b 08             	mov    (%rax),%rcx
 8064f94:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8064f97:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064f9a:	83 f8 02             	cmp    $0x2,%eax
 8064f9d:	0f 84 30 00 00 00    	je     8064fd3 <gfunc_param_typed+0x66>
 8064fa3:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8064fa6:	83 f8 03             	cmp    $0x3,%eax
 8064fa9:	0f 85 1f 00 00 00    	jne    8064fce <gfunc_param_typed+0x61>
 8064faf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8064fb3:	48 89 c1             	mov    %rax,%rcx
 8064fb6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8064fbd:	00 00 00 
 8064fc0:	48 39 c1             	cmp    %rax,%rcx
 8064fc3:	0f 85 05 00 00 00    	jne    8064fce <gfunc_param_typed+0x61>
 8064fc9:	e9 05 00 00 00       	jmpq   8064fd3 <gfunc_param_typed+0x66>
 8064fce:	e9 36 00 00 00       	jmpq   8065009 <gfunc_param_typed+0x9c>
 8064fd3:	48 8b 05 46 8f 02 00 	mov    0x28f46(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8064fda:	48 8b 00             	mov    (%rax),%rax
 8064fdd:	8b 08                	mov    (%rax),%ecx
 8064fdf:	83 e1 0f             	and    $0xf,%ecx
 8064fe2:	83 f9 08             	cmp    $0x8,%ecx
 8064fe5:	0f 85 19 00 00 00    	jne    8065004 <gfunc_param_typed+0x97>
 8064feb:	b8 09 00 00 00       	mov    $0x9,%eax
 8064ff0:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8064ff3:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8064ff7:	48 89 c7             	mov    %rax,%rdi
 8064ffa:	b8 00 00 00 00       	mov    $0x0,%eax
 8064fff:	e8 93 b2 ff ff       	callq  8060297 <gen_cast>
 8065004:	e9 84 00 00 00       	jmpq   806508d <gfunc_param_typed+0x120>
 8065009:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806500d:	48 89 c1             	mov    %rax,%rcx
 8065010:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8065017:	00 00 00 
 806501a:	48 39 c1             	cmp    %rax,%rcx
 806501d:	0f 85 19 00 00 00    	jne    806503c <gfunc_param_typed+0xcf>
 8065023:	48 8d 05 73 6e 02 00 	lea    0x26e73(%rip),%rax        # 808be9d <L.181>
 806502a:	48 89 c7             	mov    %rax,%rdi
 806502d:	b8 00 00 00 00       	mov    $0x0,%eax
 8065032:	e8 90 86 fe ff       	callq  804d6c7 <tcc_error>
 8065037:	e9 51 00 00 00       	jmpq   806508d <gfunc_param_typed+0x120>
 806503c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8065040:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8065047:	00 00 00 
 806504a:	48 01 c8             	add    %rcx,%rax
 806504d:	b9 10 00 00 00       	mov    $0x10,%ecx
 8065052:	49 89 ca             	mov    %rcx,%r10
 8065055:	48 89 c6             	mov    %rax,%rsi
 8065058:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
 806505c:	48 89 cf             	mov    %rcx,%rdi
 806505f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8065063:	4c 89 d2             	mov    %r10,%rdx
 8065066:	b8 00 00 00 00       	mov    $0x0,%eax
 806506b:	e8 00 1c 02 00       	callq  8086c70 <memcpy>
 8065070:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8065073:	81 e0 ff f7 ff ff    	and    $0xfffff7ff,%eax
 8065079:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806507c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065080:	48 89 c7             	mov    %rax,%rdi
 8065083:	b8 00 00 00 00       	mov    $0x0,%eax
 8065088:	e8 db ca ff ff       	callq  8061b68 <gen_assign_cast>
 806508d:	c9                   	leaveq 
 806508e:	c3                   	retq   

000000000806508f <parse_expr_type>:
 806508f:	55                   	push   %rbp
 8065090:	48 89 e5             	mov    %rsp,%rbp
 8065093:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 806509a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806509e:	b8 28 00 00 00       	mov    $0x28,%eax
 80650a3:	48 89 c7             	mov    %rax,%rdi
 80650a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80650ab:	e8 33 c0 fe ff       	callq  80510e3 <skip>
 80650b0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80650b4:	48 89 c6             	mov    %rax,%rsi
 80650b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80650bb:	48 89 c7             	mov    %rax,%rdi
 80650be:	b8 00 00 00 00       	mov    $0x0,%eax
 80650c3:	e8 57 e8 ff ff       	callq  806391f <parse_btype>
 80650c8:	85 c0                	test   %eax,%eax
 80650ca:	0f 84 32 00 00 00    	je     8065102 <parse_expr_type+0x73>
 80650d0:	b8 01 00 00 00       	mov    $0x1,%eax
 80650d5:	49 89 c3             	mov    %rax,%r11
 80650d8:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 80650dc:	49 89 c2             	mov    %rax,%r10
 80650df:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80650e3:	48 89 c6             	mov    %rax,%rsi
 80650e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80650ea:	48 89 c7             	mov    %rax,%rdi
 80650ed:	4c 89 d2             	mov    %r10,%rdx
 80650f0:	4c 89 d9             	mov    %r11,%rcx
 80650f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80650f8:	e8 47 f8 ff ff       	callq  8064944 <type_decl>
 80650fd:	e9 11 00 00 00       	jmpq   8065113 <parse_expr_type+0x84>
 8065102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8065106:	48 89 c7             	mov    %rax,%rdi
 8065109:	b8 00 00 00 00       	mov    $0x0,%eax
 806510e:	e8 69 2b 00 00       	callq  8067c7c <expr_type>
 8065113:	b8 29 00 00 00       	mov    $0x29,%eax
 8065118:	48 89 c7             	mov    %rax,%rdi
 806511b:	b8 00 00 00 00       	mov    $0x0,%eax
 8065120:	e8 be bf fe ff       	callq  80510e3 <skip>
 8065125:	c9                   	leaveq 
 8065126:	c3                   	retq   

0000000008065127 <parse_type>:
 8065127:	55                   	push   %rbp
 8065128:	48 89 e5             	mov    %rsp,%rbp
 806512b:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8065132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8065136:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 806513a:	48 89 c6             	mov    %rax,%rsi
 806513d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8065141:	48 89 c7             	mov    %rax,%rdi
 8065144:	b8 00 00 00 00       	mov    $0x0,%eax
 8065149:	e8 d1 e7 ff ff       	callq  806391f <parse_btype>
 806514e:	85 c0                	test   %eax,%eax
 8065150:	0f 84 05 00 00 00    	je     806515b <parse_type+0x34>
 8065156:	e9 14 00 00 00       	jmpq   806516f <parse_type+0x48>
 806515b:	48 8d 05 5a 6d 02 00 	lea    0x26d5a(%rip),%rax        # 808bebc <L.182>
 8065162:	48 89 c7             	mov    %rax,%rdi
 8065165:	b8 00 00 00 00       	mov    $0x0,%eax
 806516a:	e8 e3 bf fe ff       	callq  8051152 <expect>
 806516f:	b8 01 00 00 00       	mov    $0x1,%eax
 8065174:	49 89 c3             	mov    %rax,%r11
 8065177:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
 806517b:	49 89 c2             	mov    %rax,%r10
 806517e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8065182:	48 89 c6             	mov    %rax,%rsi
 8065185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8065189:	48 89 c7             	mov    %rax,%rdi
 806518c:	4c 89 d2             	mov    %r10,%rdx
 806518f:	4c 89 d9             	mov    %r11,%rcx
 8065192:	b8 00 00 00 00       	mov    $0x0,%eax
 8065197:	e8 a8 f7 ff ff       	callq  8064944 <type_decl>
 806519c:	c9                   	leaveq 
 806519d:	c3                   	retq   

000000000806519e <vpush_tokc>:
 806519e:	55                   	push   %rbp
 806519f:	48 89 e5             	mov    %rsp,%rbp
 80651a2:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80651a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80651ad:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80651b0:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80651b3:	b8 00 00 00 00       	mov    $0x0,%eax
 80651b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 80651bc:	48 8b 05 e5 8d 02 00 	mov    0x28de5(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 80651c3:	49 89 c2             	mov    %rax,%r10
 80651c6:	b8 30 00 00 00       	mov    $0x30,%eax
 80651cb:	48 89 c6             	mov    %rax,%rsi
 80651ce:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 80651d2:	48 89 c7             	mov    %rax,%rdi
 80651d5:	4c 89 d2             	mov    %r10,%rdx
 80651d8:	b8 00 00 00 00       	mov    $0x0,%eax
 80651dd:	e8 47 74 ff ff       	callq  805c629 <vsetc>
 80651e2:	c9                   	leaveq 
 80651e3:	c3                   	retq   

00000000080651e4 <unary>:
 80651e4:	55                   	push   %rbp
 80651e5:	48 89 e5             	mov    %rsp,%rbp
 80651e8:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
 80651ef:	8b 05 cf 6c 02 00    	mov    0x26ccf(%rip),%eax        # 808bec4 <in_sizeof>
 80651f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80651f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80651fd:	4c 8b 1d 0c 8e 02 00 	mov    0x28e0c(%rip),%r11        # 808e010 <_GLOBAL_OFFSET_TABLE_+0x390>
 8065204:	41 89 03             	mov    %eax,(%r11)
 8065207:	48 8b 05 1a 8d 02 00 	mov    0x28d1a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806520e:	8b 00                	mov    (%rax),%eax
 8065210:	e9 05 00 00 00       	jmpq   806521a <unary+0x36>
 8065215:	e9 0c 00 00 00       	jmpq   8065226 <unary+0x42>
 806521a:	81 f8 23 01 00 00    	cmp    $0x123,%eax
 8065220:	0f 85 11 00 00 00    	jne    8065237 <unary+0x53>
 8065226:	b8 00 00 00 00       	mov    $0x0,%eax
 806522b:	e8 9a 34 ff ff       	callq  80586ca <next>
 8065230:	eb d5                	jmp    8065207 <unary+0x23>
 8065232:	e9 0c 00 00 00       	jmpq   8065243 <unary+0x5f>
 8065237:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 806523d:	0f 85 05 00 00 00    	jne    8065248 <unary+0x64>
 8065243:	e9 0c 00 00 00       	jmpq   8065254 <unary+0x70>
 8065248:	81 f8 b4 00 00 00    	cmp    $0xb4,%eax
 806524e:	0f 85 05 00 00 00    	jne    8065259 <unary+0x75>
 8065254:	e9 0c 00 00 00       	jmpq   8065265 <unary+0x81>
 8065259:	81 f8 b7 00 00 00    	cmp    $0xb7,%eax
 806525f:	0f 85 2a 00 00 00    	jne    806528f <unary+0xab>
 8065265:	48 8b 05 3c 8d 02 00 	mov    0x28d3c(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 806526c:	8b 00                	mov    (%rax),%eax
 806526e:	48 89 c7             	mov    %rax,%rdi
 8065271:	b8 00 00 00 00       	mov    $0x0,%eax
 8065276:	e8 7f 75 ff ff       	callq  805c7fa <vpushi>
 806527b:	b8 00 00 00 00       	mov    $0x0,%eax
 8065280:	e8 45 34 ff ff       	callq  80586ca <next>
 8065285:	e9 f3 12 00 00       	jmpq   806657d <unary+0x1399>
 806528a:	e9 0c 00 00 00       	jmpq   806529b <unary+0xb7>
 806528f:	81 f8 c8 00 00 00    	cmp    $0xc8,%eax
 8065295:	0f 85 26 00 00 00    	jne    80652c1 <unary+0xdd>
 806529b:	b8 10 00 00 00       	mov    $0x10,%eax
 80652a0:	48 89 c7             	mov    %rax,%rdi
 80652a3:	b8 00 00 00 00       	mov    $0x0,%eax
 80652a8:	e8 f1 fe ff ff       	callq  806519e <vpush_tokc>
 80652ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80652b2:	e8 13 34 ff ff       	callq  80586ca <next>
 80652b7:	e9 c1 12 00 00       	jmpq   806657d <unary+0x1399>
 80652bc:	e9 0c 00 00 00       	jmpq   80652cd <unary+0xe9>
 80652c1:	81 f8 c9 00 00 00    	cmp    $0xc9,%eax
 80652c7:	0f 85 26 00 00 00    	jne    80652f3 <unary+0x10f>
 80652cd:	b8 0c 00 00 00       	mov    $0xc,%eax
 80652d2:	48 89 c7             	mov    %rax,%rdi
 80652d5:	b8 00 00 00 00       	mov    $0x0,%eax
 80652da:	e8 bf fe ff ff       	callq  806519e <vpush_tokc>
 80652df:	b8 00 00 00 00       	mov    $0x0,%eax
 80652e4:	e8 e1 33 ff ff       	callq  80586ca <next>
 80652e9:	e9 8f 12 00 00       	jmpq   806657d <unary+0x1399>
 80652ee:	e9 0c 00 00 00       	jmpq   80652ff <unary+0x11b>
 80652f3:	81 f8 ca 00 00 00    	cmp    $0xca,%eax
 80652f9:	0f 85 26 00 00 00    	jne    8065325 <unary+0x141>
 80652ff:	b8 1c 00 00 00       	mov    $0x1c,%eax
 8065304:	48 89 c7             	mov    %rax,%rdi
 8065307:	b8 00 00 00 00       	mov    $0x0,%eax
 806530c:	e8 8d fe ff ff       	callq  806519e <vpush_tokc>
 8065311:	b8 00 00 00 00       	mov    $0x0,%eax
 8065316:	e8 af 33 ff ff       	callq  80586ca <next>
 806531b:	e9 5d 12 00 00       	jmpq   806657d <unary+0x1399>
 8065320:	e9 0c 00 00 00       	jmpq   8065331 <unary+0x14d>
 8065325:	81 f8 b9 00 00 00    	cmp    $0xb9,%eax
 806532b:	0f 85 26 00 00 00    	jne    8065357 <unary+0x173>
 8065331:	b8 08 00 00 00       	mov    $0x8,%eax
 8065336:	48 89 c7             	mov    %rax,%rdi
 8065339:	b8 00 00 00 00       	mov    $0x0,%eax
 806533e:	e8 5b fe ff ff       	callq  806519e <vpush_tokc>
 8065343:	b8 00 00 00 00       	mov    $0x0,%eax
 8065348:	e8 7d 33 ff ff       	callq  80586ca <next>
 806534d:	e9 2b 12 00 00       	jmpq   806657d <unary+0x1399>
 8065352:	e9 0c 00 00 00       	jmpq   8065363 <unary+0x17f>
 8065357:	81 f8 c0 00 00 00    	cmp    $0xc0,%eax
 806535d:	0f 85 26 00 00 00    	jne    8065389 <unary+0x1a5>
 8065363:	b8 09 00 00 00       	mov    $0x9,%eax
 8065368:	48 89 c7             	mov    %rax,%rdi
 806536b:	b8 00 00 00 00       	mov    $0x0,%eax
 8065370:	e8 29 fe ff ff       	callq  806519e <vpush_tokc>
 8065375:	b8 00 00 00 00       	mov    $0x0,%eax
 806537a:	e8 4b 33 ff ff       	callq  80586ca <next>
 806537f:	e9 f9 11 00 00       	jmpq   806657d <unary+0x1399>
 8065384:	e9 0c 00 00 00       	jmpq   8065395 <unary+0x1b1>
 8065389:	81 f8 c1 00 00 00    	cmp    $0xc1,%eax
 806538f:	0f 85 26 00 00 00    	jne    80653bb <unary+0x1d7>
 8065395:	b8 0a 00 00 00       	mov    $0xa,%eax
 806539a:	48 89 c7             	mov    %rax,%rdi
 806539d:	b8 00 00 00 00       	mov    $0x0,%eax
 80653a2:	e8 f7 fd ff ff       	callq  806519e <vpush_tokc>
 80653a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80653ac:	e8 19 33 ff ff       	callq  80586ca <next>
 80653b1:	e9 c7 11 00 00       	jmpq   806657d <unary+0x1399>
 80653b6:	e9 0c 00 00 00       	jmpq   80653c7 <unary+0x1e3>
 80653bb:	81 f8 4a 01 00 00    	cmp    $0x14a,%eax
 80653c1:	0f 85 20 00 00 00    	jne    80653e7 <unary+0x203>
 80653c7:	48 8b 05 f2 8b 02 00 	mov    0x28bf2(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 80653ce:	8b 00                	mov    (%rax),%eax
 80653d0:	85 c0                	test   %eax,%eax
 80653d2:	0f 84 05 00 00 00    	je     80653dd <unary+0x1f9>
 80653d8:	e9 05 00 00 00       	jmpq   80653e2 <unary+0x1fe>
 80653dd:	e9 1f 0f 00 00       	jmpq   8066301 <unary+0x111d>
 80653e2:	e9 0c 00 00 00       	jmpq   80653f3 <unary+0x20f>
 80653e7:	81 f8 4c 01 00 00    	cmp    $0x14c,%eax
 80653ed:	0f 85 fe 00 00 00    	jne    80654f1 <unary+0x30d>
 80653f3:	48 8b 05 c6 8a 02 00 	mov    0x28ac6(%rip),%rax        # 808dec0 <_GLOBAL_OFFSET_TABLE_+0x240>
 80653fa:	48 8b 00             	mov    (%rax),%rax
 80653fd:	48 89 c7             	mov    %rax,%rdi
 8065400:	b8 00 00 00 00       	mov    $0x0,%eax
 8065405:	e8 d6 1e 02 00       	callq  80872e0 <strlen>
 806540a:	83 c0 01             	add    $0x1,%eax
 806540d:	89 45 ac             	mov    %eax,-0x54(%rbp)
 8065410:	b8 01 00 00 00       	mov    $0x1,%eax
 8065415:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8065418:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 806541c:	48 89 c7             	mov    %rax,%rdi
 806541f:	b8 00 00 00 00       	mov    $0x0,%eax
 8065424:	e8 c5 bc ff ff       	callq  80610ee <mk_pointer>
 8065429:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806542c:	83 c8 20             	or     $0x20,%eax
 806542f:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8065432:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8065436:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806543d:	00 00 00 
 8065440:	48 01 c8             	add    %rcx,%rax
 8065443:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 8065446:	48 63 c9             	movslq %ecx,%rcx
 8065449:	48 89 ca             	mov    %rcx,%rdx
 806544c:	48 89 10             	mov    %rdx,(%rax)
 806544f:	48 8b 05 22 8b 02 00 	mov    0x28b22(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 8065456:	48 8b 00             	mov    (%rax),%rax
 8065459:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 806545c:	48 63 c9             	movslq %ecx,%rcx
 806545f:	48 89 ca             	mov    %rcx,%rdx
 8065462:	49 89 d3             	mov    %rdx,%r11
 8065465:	48 8b 08             	mov    (%rax),%rcx
 8065468:	49 89 ca             	mov    %rcx,%r10
 806546b:	48 8b 05 06 8b 02 00 	mov    0x28b06(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 8065472:	48 8b 00             	mov    (%rax),%rax
 8065475:	48 89 c6             	mov    %rax,%rsi
 8065478:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 806547c:	48 89 c7             	mov    %rax,%rdi
 806547f:	4c 89 d2             	mov    %r10,%rdx
 8065482:	4c 89 d9             	mov    %r11,%rcx
 8065485:	b8 00 00 00 00       	mov    $0x0,%eax
 806548a:	e8 7a 75 ff ff       	callq  805ca09 <vpush_ref>
 806548f:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8065492:	48 63 c0             	movslq %eax,%rax
 8065495:	48 89 c1             	mov    %rax,%rcx
 8065498:	48 89 ce             	mov    %rcx,%rsi
 806549b:	48 8b 05 d6 8a 02 00 	mov    0x28ad6(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 80654a2:	48 8b 00             	mov    (%rax),%rax
 80654a5:	48 89 c7             	mov    %rax,%rdi
 80654a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80654ad:	e8 b8 73 fe ff       	callq  804c86a <section_ptr_add>
 80654b2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 80654b6:	8b 45 ac             	mov    -0x54(%rbp),%eax
 80654b9:	49 89 c2             	mov    %rax,%r10
 80654bc:	48 8b 05 fd 89 02 00 	mov    0x289fd(%rip),%rax        # 808dec0 <_GLOBAL_OFFSET_TABLE_+0x240>
 80654c3:	48 8b 00             	mov    (%rax),%rax
 80654c6:	48 89 c6             	mov    %rax,%rsi
 80654c9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 80654cd:	48 89 c7             	mov    %rax,%rdi
 80654d0:	4c 89 d2             	mov    %r10,%rdx
 80654d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80654d8:	e8 93 17 02 00       	callq  8086c70 <memcpy>
 80654dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80654e2:	e8 e3 31 ff ff       	callq  80586ca <next>
 80654e7:	e9 91 10 00 00       	jmpq   806657d <unary+0x1399>
 80654ec:	e9 0c 00 00 00       	jmpq   80654fd <unary+0x319>
 80654f1:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 80654f7:	0f 85 12 00 00 00    	jne    806550f <unary+0x32b>
 80654fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8065502:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8065505:	e9 19 00 00 00       	jmpq   8065523 <unary+0x33f>
 806550a:	e9 0c 00 00 00       	jmpq   806551b <unary+0x337>
 806550f:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8065515:	0f 85 cc 00 00 00    	jne    80655e7 <unary+0x403>
 806551b:	b8 01 00 00 00       	mov    $0x1,%eax
 8065520:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8065523:	48 8b 05 66 89 02 00 	mov    0x28966(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806552a:	48 8b 00             	mov    (%rax),%rax
 806552d:	48 b9 34 01 00 00 00 	movabs $0x134,%rcx
 8065534:	00 00 00 
 8065537:	48 01 c8             	add    %rcx,%rax
 806553a:	8b 08                	mov    (%rax),%ecx
 806553c:	85 c9                	test   %ecx,%ecx
 806553e:	0f 84 0c 00 00 00    	je     8065550 <unary+0x36c>
 8065544:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8065547:	81 c8 00 08 00 00    	or     $0x800,%eax
 806554d:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8065550:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8065553:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8065556:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 806555a:	48 89 c7             	mov    %rax,%rdi
 806555d:	b8 00 00 00 00       	mov    $0x0,%eax
 8065562:	e8 87 bb ff ff       	callq  80610ee <mk_pointer>
 8065567:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806556a:	83 c8 20             	or     $0x20,%eax
 806556d:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8065570:	b8 18 00 00 00       	mov    $0x18,%eax
 8065575:	49 89 c2             	mov    %rax,%r10
 8065578:	b8 00 00 00 00       	mov    $0x0,%eax
 806557d:	48 89 c6             	mov    %rax,%rsi
 8065580:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8065584:	48 89 c7             	mov    %rax,%rdi
 8065587:	4c 89 d2             	mov    %r10,%rdx
 806558a:	b8 00 00 00 00       	mov    $0x0,%eax
 806558f:	e8 1c 19 02 00       	callq  8086eb0 <memset>
 8065594:	50                   	push   %rax
 8065595:	b8 00 00 00 00       	mov    $0x0,%eax
 806559a:	50                   	push   %rax
 806559b:	b8 00 00 00 00       	mov    $0x0,%eax
 80655a0:	49 89 c1             	mov    %rax,%r9
 80655a3:	b8 00 00 00 00       	mov    $0x0,%eax
 80655a8:	49 89 c0             	mov    %rax,%r8
 80655ab:	b8 02 00 00 00       	mov    $0x2,%eax
 80655b0:	49 89 c3             	mov    %rax,%r11
 80655b3:	b8 30 00 00 00       	mov    $0x30,%eax
 80655b8:	49 89 c2             	mov    %rax,%r10
 80655bb:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80655bf:	48 89 c6             	mov    %rax,%rsi
 80655c2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80655c6:	48 89 c7             	mov    %rax,%rdi
 80655c9:	4c 89 d2             	mov    %r10,%rdx
 80655cc:	4c 89 d9             	mov    %r11,%rcx
 80655cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80655d4:	e8 40 5b 00 00       	callq  806b119 <decl_initializer_alloc>
 80655d9:	48 83 c4 10          	add    $0x10,%rsp
 80655dd:	e9 9b 0f 00 00       	jmpq   806657d <unary+0x1399>
 80655e2:	e9 09 00 00 00       	jmpq   80655f0 <unary+0x40c>
 80655e7:	83 f8 28             	cmp    $0x28,%eax
 80655ea:	0f 85 1f 02 00 00    	jne    806580f <unary+0x62b>
 80655f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80655f5:	e8 d0 30 ff ff       	callq  80586ca <next>
 80655fa:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80655fe:	48 89 c6             	mov    %rax,%rsi
 8065601:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065605:	48 89 c7             	mov    %rax,%rdi
 8065608:	b8 00 00 00 00       	mov    $0x0,%eax
 806560d:	e8 0d e3 ff ff       	callq  806391f <parse_btype>
 8065612:	85 c0                	test   %eax,%eax
 8065614:	0f 84 54 01 00 00    	je     806576e <unary+0x58a>
 806561a:	b8 01 00 00 00       	mov    $0x1,%eax
 806561f:	49 89 c3             	mov    %rax,%r11
 8065622:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
 8065626:	49 89 c2             	mov    %rax,%r10
 8065629:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 806562d:	48 89 c6             	mov    %rax,%rsi
 8065630:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065634:	48 89 c7             	mov    %rax,%rdi
 8065637:	4c 89 d2             	mov    %r10,%rdx
 806563a:	4c 89 d9             	mov    %r11,%rcx
 806563d:	b8 00 00 00 00       	mov    $0x0,%eax
 8065642:	e8 fd f2 ff ff       	callq  8064944 <type_decl>
 8065647:	b8 29 00 00 00       	mov    $0x29,%eax
 806564c:	48 89 c7             	mov    %rax,%rdi
 806564f:	b8 00 00 00 00       	mov    $0x0,%eax
 8065654:	e8 8a ba fe ff       	callq  80510e3 <skip>
 8065659:	48 8b 05 c8 88 02 00 	mov    0x288c8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8065660:	8b 00                	mov    (%rax),%eax
 8065662:	83 f8 7b             	cmp    $0x7b,%eax
 8065665:	0f 85 c2 00 00 00    	jne    806572d <unary+0x549>
 806566b:	48 8b 05 a6 89 02 00 	mov    0x289a6(%rip),%rax        # 808e018 <_GLOBAL_OFFSET_TABLE_+0x398>
 8065672:	8b 00                	mov    (%rax),%eax
 8065674:	85 c0                	test   %eax,%eax
 8065676:	0f 84 0d 00 00 00    	je     8065689 <unary+0x4a5>
 806567c:	b8 30 00 00 00       	mov    $0x30,%eax
 8065681:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8065684:	e9 08 00 00 00       	jmpq   8065691 <unary+0x4ad>
 8065689:	b8 32 00 00 00       	mov    $0x32,%eax
 806568e:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8065691:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8065694:	83 e0 20             	and    $0x20,%eax
 8065697:	85 c0                	test   %eax,%eax
 8065699:	0f 84 05 00 00 00    	je     80656a4 <unary+0x4c0>
 806569f:	e9 19 00 00 00       	jmpq   80656bd <unary+0x4d9>
 80656a4:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80656a7:	48 89 c7             	mov    %rax,%rdi
 80656aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80656af:	e8 9c f6 ff ff       	callq  8064d50 <lvalue_type>
 80656b4:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80656b7:	48 09 c1             	or     %rax,%rcx
 80656ba:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 80656bd:	b8 18 00 00 00       	mov    $0x18,%eax
 80656c2:	49 89 c2             	mov    %rax,%r10
 80656c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80656ca:	48 89 c6             	mov    %rax,%rsi
 80656cd:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80656d1:	48 89 c7             	mov    %rax,%rdi
 80656d4:	4c 89 d2             	mov    %r10,%rdx
 80656d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80656dc:	e8 cf 17 02 00       	callq  8086eb0 <memset>
 80656e1:	50                   	push   %rax
 80656e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80656e7:	50                   	push   %rax
 80656e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80656ed:	49 89 c1             	mov    %rax,%r9
 80656f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80656f5:	49 89 c0             	mov    %rax,%r8
 80656f8:	b8 01 00 00 00       	mov    $0x1,%eax
 80656fd:	49 89 c3             	mov    %rax,%r11
 8065700:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8065703:	49 89 c2             	mov    %rax,%r10
 8065706:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 806570a:	48 89 c6             	mov    %rax,%rsi
 806570d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065711:	48 89 c7             	mov    %rax,%rdi
 8065714:	4c 89 d2             	mov    %r10,%rdx
 8065717:	4c 89 d9             	mov    %r11,%rcx
 806571a:	b8 00 00 00 00       	mov    $0x0,%eax
 806571f:	e8 f5 59 00 00       	callq  806b119 <decl_initializer_alloc>
 8065724:	48 83 c4 10          	add    $0x10,%rsp
 8065728:	e9 3c 00 00 00       	jmpq   8065769 <unary+0x585>
 806572d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8065730:	85 c0                	test   %eax,%eax
 8065732:	0f 84 16 00 00 00    	je     806574e <unary+0x56a>
 8065738:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 806573c:	48 89 c7             	mov    %rax,%rdi
 806573f:	b8 00 00 00 00       	mov    $0x0,%eax
 8065744:	e8 7d 70 ff ff       	callq  805c7c6 <vpush>
 8065749:	e9 50 16 00 00       	jmpq   8066d9e <unary+0x1bba>
 806574e:	b8 00 00 00 00       	mov    $0x0,%eax
 8065753:	e8 8c fa ff ff       	callq  80651e4 <unary>
 8065758:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 806575c:	48 89 c7             	mov    %rax,%rdi
 806575f:	b8 00 00 00 00       	mov    $0x0,%eax
 8065764:	e8 2e ab ff ff       	callq  8060297 <gen_cast>
 8065769:	e9 97 00 00 00       	jmpq   8065805 <unary+0x621>
 806576e:	48 8b 05 b3 87 02 00 	mov    0x287b3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8065775:	8b 00                	mov    (%rax),%eax
 8065777:	83 f8 7b             	cmp    $0x7b,%eax
 806577a:	0f 85 69 00 00 00    	jne    80657e9 <unary+0x605>
 8065780:	b8 00 00 00 00       	mov    $0x0,%eax
 8065785:	48 89 c7             	mov    %rax,%rdi
 8065788:	b8 00 00 00 00       	mov    $0x0,%eax
 806578d:	e8 aa 7d ff ff       	callq  805d53c <save_regs>
 8065792:	b8 01 00 00 00       	mov    $0x1,%eax
 8065797:	49 89 c1             	mov    %rax,%r9
 806579a:	b8 00 00 00 00       	mov    $0x0,%eax
 806579f:	49 89 c0             	mov    %rax,%r8
 80657a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80657a7:	49 89 c3             	mov    %rax,%r11
 80657aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80657af:	49 89 c2             	mov    %rax,%r10
 80657b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80657b7:	48 89 c6             	mov    %rax,%rsi
 80657ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80657bf:	48 89 c7             	mov    %rax,%rdi
 80657c2:	4c 89 d2             	mov    %r10,%rdx
 80657c5:	4c 89 d9             	mov    %r11,%rcx
 80657c8:	b8 00 00 00 00       	mov    $0x0,%eax
 80657cd:	e8 6f 27 00 00       	callq  8067f41 <block>
 80657d2:	b8 29 00 00 00       	mov    $0x29,%eax
 80657d7:	48 89 c7             	mov    %rax,%rdi
 80657da:	b8 00 00 00 00       	mov    $0x0,%eax
 80657df:	e8 ff b8 fe ff       	callq  80510e3 <skip>
 80657e4:	e9 1c 00 00 00       	jmpq   8065805 <unary+0x621>
 80657e9:	b8 00 00 00 00       	mov    $0x0,%eax
 80657ee:	e8 45 24 00 00       	callq  8067c38 <gexpr>
 80657f3:	b8 29 00 00 00       	mov    $0x29,%eax
 80657f8:	48 89 c7             	mov    %rax,%rdi
 80657fb:	b8 00 00 00 00       	mov    $0x0,%eax
 8065800:	e8 de b8 fe ff       	callq  80510e3 <skip>
 8065805:	e9 73 0d 00 00       	jmpq   806657d <unary+0x1399>
 806580a:	e9 09 00 00 00       	jmpq   8065818 <unary+0x634>
 806580f:	83 f8 2a             	cmp    $0x2a,%eax
 8065812:	0f 85 28 00 00 00    	jne    8065840 <unary+0x65c>
 8065818:	b8 00 00 00 00       	mov    $0x0,%eax
 806581d:	e8 a8 2e ff ff       	callq  80586ca <next>
 8065822:	b8 00 00 00 00       	mov    $0x0,%eax
 8065827:	e8 b8 f9 ff ff       	callq  80651e4 <unary>
 806582c:	b8 00 00 00 00       	mov    $0x0,%eax
 8065831:	e8 b1 f5 ff ff       	callq  8064de7 <indir>
 8065836:	e9 42 0d 00 00       	jmpq   806657d <unary+0x1399>
 806583b:	e9 09 00 00 00       	jmpq   8065849 <unary+0x665>
 8065840:	83 f8 26             	cmp    $0x26,%eax
 8065843:	0f 85 99 00 00 00    	jne    80658e2 <unary+0x6fe>
 8065849:	b8 00 00 00 00       	mov    $0x0,%eax
 806584e:	e8 77 2e ff ff       	callq  80586ca <next>
 8065853:	b8 00 00 00 00       	mov    $0x0,%eax
 8065858:	e8 87 f9 ff ff       	callq  80651e4 <unary>
 806585d:	48 8b 05 bc 86 02 00 	mov    0x286bc(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065864:	48 8b 00             	mov    (%rax),%rax
 8065867:	8b 08                	mov    (%rax),%ecx
 8065869:	83 e1 0f             	and    $0xf,%ecx
 806586c:	83 f9 06             	cmp    $0x6,%ecx
 806586f:	0f 84 42 00 00 00    	je     80658b7 <unary+0x6d3>
 8065875:	48 8b 05 a4 86 02 00 	mov    0x286a4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806587c:	48 8b 00             	mov    (%rax),%rax
 806587f:	8b 08                	mov    (%rax),%ecx
 8065881:	83 e1 20             	and    $0x20,%ecx
 8065884:	85 c9                	test   %ecx,%ecx
 8065886:	0f 84 05 00 00 00    	je     8065891 <unary+0x6ad>
 806588c:	e9 26 00 00 00       	jmpq   80658b7 <unary+0x6d3>
 8065891:	48 8b 05 88 86 02 00 	mov    0x28688(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065898:	48 8b 00             	mov    (%rax),%rax
 806589b:	8b 08                	mov    (%rax),%ecx
 806589d:	83 e1 31             	and    $0x31,%ecx
 80658a0:	85 c9                	test   %ecx,%ecx
 80658a2:	0f 84 05 00 00 00    	je     80658ad <unary+0x6c9>
 80658a8:	e9 0a 00 00 00       	jmpq   80658b7 <unary+0x6d3>
 80658ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80658b2:	e8 fc 63 ff ff       	callq  805bcb3 <test_lvalue>
 80658b7:	48 8b 05 62 86 02 00 	mov    0x28662(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80658be:	48 8b 00             	mov    (%rax),%rax
 80658c1:	48 89 c7             	mov    %rax,%rdi
 80658c4:	b8 00 00 00 00       	mov    $0x0,%eax
 80658c9:	e8 20 b8 ff ff       	callq  80610ee <mk_pointer>
 80658ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80658d3:	e8 82 7d ff ff       	callq  805d65a <gaddrof>
 80658d8:	e9 a0 0c 00 00       	jmpq   806657d <unary+0x1399>
 80658dd:	e9 09 00 00 00       	jmpq   80658eb <unary+0x707>
 80658e2:	83 f8 21             	cmp    $0x21,%eax
 80658e5:	0f 85 54 01 00 00    	jne    8065a3f <unary+0x85b>
 80658eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80658f0:	e8 d5 2d ff ff       	callq  80586ca <next>
 80658f5:	b8 00 00 00 00       	mov    $0x0,%eax
 80658fa:	e8 e5 f8 ff ff       	callq  80651e4 <unary>
 80658ff:	48 8b 05 1a 86 02 00 	mov    0x2861a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065906:	48 8b 00             	mov    (%rax),%rax
 8065909:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8065910:	00 00 00 
 8065913:	48 01 c8             	add    %rcx,%rax
 8065916:	0f b7 08             	movzwl (%rax),%ecx
 8065919:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 806591f:	83 f9 30             	cmp    $0x30,%ecx
 8065922:	0f 85 6c 00 00 00    	jne    8065994 <unary+0x7b0>
 8065928:	b8 0b 00 00 00       	mov    $0xb,%eax
 806592d:	89 45 98             	mov    %eax,-0x68(%rbp)
 8065930:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8065934:	48 89 c7             	mov    %rax,%rdi
 8065937:	b8 00 00 00 00       	mov    $0x0,%eax
 806593c:	e8 56 a9 ff ff       	callq  8060297 <gen_cast>
 8065941:	48 8b 05 d8 85 02 00 	mov    0x285d8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065948:	48 8b 00             	mov    (%rax),%rax
 806594b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8065952:	00 00 00 
 8065955:	48 01 c8             	add    %rcx,%rax
 8065958:	48 8b 0d c1 85 02 00 	mov    0x285c1(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806595f:	48 8b 09             	mov    (%rcx),%rcx
 8065962:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8065969:	00 00 00 
 806596c:	48 01 d1             	add    %rdx,%rcx
 806596f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 8065973:	8b 01                	mov    (%rcx),%eax
 8065975:	85 c0                	test   %eax,%eax
 8065977:	0f 84 07 00 00 00    	je     8065984 <unary+0x7a0>
 806597d:	b8 00 00 00 00       	mov    $0x0,%eax
 8065982:	eb 05                	jmp    8065989 <unary+0x7a5>
 8065984:	b8 01 00 00 00       	mov    $0x1,%eax
 8065989:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 806598d:	89 01                	mov    %eax,(%rcx)
 806598f:	e9 a1 00 00 00       	jmpq   8065a35 <unary+0x851>
 8065994:	48 8b 05 85 85 02 00 	mov    0x28585(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806599b:	48 8b 00             	mov    (%rax),%rax
 806599e:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80659a5:	00 00 00 
 80659a8:	48 01 c8             	add    %rcx,%rax
 80659ab:	0f b7 08             	movzwl (%rax),%ecx
 80659ae:	83 e1 3f             	and    $0x3f,%ecx
 80659b1:	83 f9 33             	cmp    $0x33,%ecx
 80659b4:	0f 85 3a 00 00 00    	jne    80659f4 <unary+0x810>
 80659ba:	48 8b 05 5f 85 02 00 	mov    0x2855f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80659c1:	48 8b 00             	mov    (%rax),%rax
 80659c4:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80659cb:	00 00 00 
 80659ce:	48 01 c8             	add    %rcx,%rax
 80659d1:	48 8b 0d 48 85 02 00 	mov    0x28548(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80659d8:	48 8b 09             	mov    (%rcx),%rcx
 80659db:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80659e2:	00 00 00 
 80659e5:	48 01 d1             	add    %rdx,%rcx
 80659e8:	8b 11                	mov    (%rcx),%edx
 80659ea:	83 f2 01             	xor    $0x1,%edx
 80659ed:	89 10                	mov    %edx,(%rax)
 80659ef:	e9 41 00 00 00       	jmpq   8065a35 <unary+0x851>
 80659f4:	b8 01 00 00 00       	mov    $0x1,%eax
 80659f9:	48 89 c7             	mov    %rax,%rdi
 80659fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a01:	e8 36 7b ff ff       	callq  805d53c <save_regs>
 8065a06:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a0b:	48 89 c6             	mov    %rax,%rsi
 8065a0e:	b8 01 00 00 00       	mov    $0x1,%eax
 8065a13:	48 89 c7             	mov    %rax,%rdi
 8065a16:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a1b:	e8 c7 ae 01 00       	callq  80808e7 <gtst>
 8065a20:	48 89 c6             	mov    %rax,%rsi
 8065a23:	b8 34 00 00 00       	mov    $0x34,%eax
 8065a28:	48 89 c7             	mov    %rax,%rdi
 8065a2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a30:	e8 d3 73 ff ff       	callq  805ce08 <vseti>
 8065a35:	e9 43 0b 00 00       	jmpq   806657d <unary+0x1399>
 8065a3a:	e9 09 00 00 00       	jmpq   8065a48 <unary+0x864>
 8065a3f:	83 f8 7e             	cmp    $0x7e,%eax
 8065a42:	0f 85 42 00 00 00    	jne    8065a8a <unary+0x8a6>
 8065a48:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a4d:	e8 78 2c ff ff       	callq  80586ca <next>
 8065a52:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a57:	e8 88 f7 ff ff       	callq  80651e4 <unary>
 8065a5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8065a61:	48 89 c7             	mov    %rax,%rdi
 8065a64:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a69:	e8 8c 6d ff ff       	callq  805c7fa <vpushi>
 8065a6e:	b8 5e 00 00 00       	mov    $0x5e,%eax
 8065a73:	48 89 c7             	mov    %rax,%rdi
 8065a76:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a7b:	e8 40 9d ff ff       	callq  805f7c0 <gen_op>
 8065a80:	e9 f8 0a 00 00       	jmpq   806657d <unary+0x1399>
 8065a85:	e9 09 00 00 00       	jmpq   8065a93 <unary+0x8af>
 8065a8a:	83 f8 2b             	cmp    $0x2b,%eax
 8065a8d:	0f 85 6e 00 00 00    	jne    8065b01 <unary+0x91d>
 8065a93:	b8 00 00 00 00       	mov    $0x0,%eax
 8065a98:	e8 2d 2c ff ff       	callq  80586ca <next>
 8065a9d:	b8 00 00 00 00       	mov    $0x0,%eax
 8065aa2:	e8 3d f7 ff ff       	callq  80651e4 <unary>
 8065aa7:	48 8b 05 72 84 02 00 	mov    0x28472(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065aae:	48 8b 00             	mov    (%rax),%rax
 8065ab1:	8b 08                	mov    (%rax),%ecx
 8065ab3:	83 e1 0f             	and    $0xf,%ecx
 8065ab6:	83 f9 04             	cmp    $0x4,%ecx
 8065ab9:	0f 85 14 00 00 00    	jne    8065ad3 <unary+0x8ef>
 8065abf:	48 8d 05 02 64 02 00 	lea    0x26402(%rip),%rax        # 808bec8 <L.183>
 8065ac6:	48 89 c7             	mov    %rax,%rdi
 8065ac9:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ace:	e8 f4 7b fe ff       	callq  804d6c7 <tcc_error>
 8065ad3:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ad8:	48 89 c7             	mov    %rax,%rdi
 8065adb:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ae0:	e8 15 6d ff ff       	callq  805c7fa <vpushi>
 8065ae5:	b8 2b 00 00 00       	mov    $0x2b,%eax
 8065aea:	48 89 c7             	mov    %rax,%rdi
 8065aed:	b8 00 00 00 00       	mov    $0x0,%eax
 8065af2:	e8 c9 9c ff ff       	callq  805f7c0 <gen_op>
 8065af7:	e9 81 0a 00 00       	jmpq   806657d <unary+0x1399>
 8065afc:	e9 0c 00 00 00       	jmpq   8065b0d <unary+0x929>
 8065b01:	81 f8 2d 01 00 00    	cmp    $0x12d,%eax
 8065b07:	0f 85 05 00 00 00    	jne    8065b12 <unary+0x92e>
 8065b0d:	e9 0c 00 00 00       	jmpq   8065b1e <unary+0x93a>
 8065b12:	81 f8 30 01 00 00    	cmp    $0x130,%eax
 8065b18:	0f 85 05 00 00 00    	jne    8065b23 <unary+0x93f>
 8065b1e:	e9 0c 00 00 00       	jmpq   8065b2f <unary+0x94b>
 8065b23:	81 f8 31 01 00 00    	cmp    $0x131,%eax
 8065b29:	0f 85 06 01 00 00    	jne    8065c35 <unary+0xa51>
 8065b2f:	48 8b 05 f2 83 02 00 	mov    0x283f2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8065b36:	8b 00                	mov    (%rax),%eax
 8065b38:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8065b3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8065b40:	e8 85 2b ff ff       	callq  80586ca <next>
 8065b45:	8b 05 79 63 02 00    	mov    0x26379(%rip),%eax        # 808bec4 <in_sizeof>
 8065b4b:	48 89 c1             	mov    %rax,%rcx
 8065b4e:	83 c0 01             	add    $0x1,%eax
 8065b51:	4c 8b 1d b8 84 02 00 	mov    0x284b8(%rip),%r11        # 808e010 <_GLOBAL_OFFSET_TABLE_+0x390>
 8065b58:	41 89 03             	mov    %eax,(%r11)
 8065b5b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065b5f:	48 89 c7             	mov    %rax,%rdi
 8065b62:	b8 00 00 00 00       	mov    $0x0,%eax
 8065b67:	e8 8e 21 00 00       	callq  8067cfa <unary_type>
 8065b6c:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 8065b70:	48 89 c6             	mov    %rax,%rsi
 8065b73:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065b77:	48 89 c7             	mov    %rax,%rdi
 8065b7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8065b7f:	e8 90 b2 ff ff       	callq  8060e14 <type_size>
 8065b84:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8065b87:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8065b8a:	81 f8 2d 01 00 00    	cmp    $0x12d,%eax
 8065b90:	0f 85 6e 00 00 00    	jne    8065c04 <unary+0xa20>
 8065b96:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8065b99:	81 e0 00 00 02 00    	and    $0x20000,%eax
 8065b9f:	85 c0                	test   %eax,%eax
 8065ba1:	0f 84 05 00 00 00    	je     8065bac <unary+0x9c8>
 8065ba7:	e9 3b 00 00 00       	jmpq   8065be7 <unary+0xa03>
 8065bac:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8065baf:	83 f8 00             	cmp    $0x0,%eax
 8065bb2:	0f 8d 14 00 00 00    	jge    8065bcc <unary+0x9e8>
 8065bb8:	48 8d 05 2d 63 02 00 	lea    0x2632d(%rip),%rax        # 808beec <L.184>
 8065bbf:	48 89 c7             	mov    %rax,%rdi
 8065bc2:	b8 00 00 00 00       	mov    $0x0,%eax
 8065bc7:	e8 fb 7a fe ff       	callq  804d6c7 <tcc_error>
 8065bcc:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8065bcf:	48 63 c0             	movslq %eax,%rax
 8065bd2:	48 89 c1             	mov    %rax,%rcx
 8065bd5:	48 89 cf             	mov    %rcx,%rdi
 8065bd8:	b8 00 00 00 00       	mov    $0x0,%eax
 8065bdd:	e8 55 6c ff ff       	callq  805c837 <vpushs>
 8065be2:	e9 18 00 00 00       	jmpq   8065bff <unary+0xa1b>
 8065be7:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 8065beb:	48 89 c6             	mov    %rax,%rsi
 8065bee:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8065bf2:	48 89 c7             	mov    %rax,%rdi
 8065bf5:	b8 00 00 00 00       	mov    $0x0,%eax
 8065bfa:	e8 56 b4 ff ff       	callq  8061055 <vla_runtime_type_size>
 8065bff:	e9 16 00 00 00       	jmpq   8065c1a <unary+0xa36>
 8065c04:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8065c07:	48 63 c0             	movslq %eax,%rax
 8065c0a:	48 89 c1             	mov    %rax,%rcx
 8065c0d:	48 89 cf             	mov    %rcx,%rdi
 8065c10:	b8 00 00 00 00       	mov    $0x0,%eax
 8065c15:	e8 1d 6c ff ff       	callq  805c837 <vpushs>
 8065c1a:	48 8b 05 ff 82 02 00 	mov    0x282ff(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065c21:	48 8b 00             	mov    (%rax),%rax
 8065c24:	8b 08                	mov    (%rax),%ecx
 8065c26:	83 c9 10             	or     $0x10,%ecx
 8065c29:	89 08                	mov    %ecx,(%rax)
 8065c2b:	e9 4d 09 00 00       	jmpq   806657d <unary+0x1399>
 8065c30:	e9 0c 00 00 00       	jmpq   8065c41 <unary+0xa5d>
 8065c35:	81 f8 6d 01 00 00    	cmp    $0x16d,%eax
 8065c3b:	0f 85 b5 00 00 00    	jne    8065cf6 <unary+0xb12>
 8065c41:	b8 00 00 00 00       	mov    $0x0,%eax
 8065c46:	e8 7f 2a ff ff       	callq  80586ca <next>
 8065c4b:	b8 28 00 00 00       	mov    $0x28,%eax
 8065c50:	48 89 c7             	mov    %rax,%rdi
 8065c53:	b8 00 00 00 00       	mov    $0x0,%eax
 8065c58:	e8 86 b4 fe ff       	callq  80510e3 <skip>
 8065c5d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8065c61:	48 89 c7             	mov    %rax,%rdi
 8065c64:	b8 00 00 00 00       	mov    $0x0,%eax
 8065c69:	e8 b9 f4 ff ff       	callq  8065127 <parse_type>
 8065c6e:	b8 2c 00 00 00       	mov    $0x2c,%eax
 8065c73:	48 89 c7             	mov    %rax,%rdi
 8065c76:	b8 00 00 00 00       	mov    $0x0,%eax
 8065c7b:	e8 63 b4 fe ff       	callq  80510e3 <skip>
 8065c80:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 8065c87:	48 89 c7             	mov    %rax,%rdi
 8065c8a:	b8 00 00 00 00       	mov    $0x0,%eax
 8065c8f:	e8 93 f4 ff ff       	callq  8065127 <parse_type>
 8065c94:	b8 29 00 00 00       	mov    $0x29,%eax
 8065c99:	48 89 c7             	mov    %rax,%rdi
 8065c9c:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ca1:	e8 3d b4 fe ff       	callq  80510e3 <skip>
 8065ca6:	8b 45 80             	mov    -0x80(%rbp),%eax
 8065ca9:	81 e0 ff e7 ff ff    	and    $0xffffe7ff,%eax
 8065caf:	89 45 80             	mov    %eax,-0x80(%rbp)
 8065cb2:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 8065cb8:	81 e0 ff e7 ff ff    	and    $0xffffe7ff,%eax
 8065cbe:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 8065cc4:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 8065ccb:	48 89 c6             	mov    %rax,%rsi
 8065cce:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8065cd2:	48 89 c7             	mov    %rax,%rdi
 8065cd5:	b8 00 00 00 00       	mov    $0x0,%eax
 8065cda:	e8 21 b8 ff ff       	callq  8061500 <is_compatible_types>
 8065cdf:	48 89 c7             	mov    %rax,%rdi
 8065ce2:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ce7:	e8 0e 6b ff ff       	callq  805c7fa <vpushi>
 8065cec:	e9 8c 08 00 00       	jmpq   806657d <unary+0x1399>
 8065cf1:	e9 0c 00 00 00       	jmpq   8065d02 <unary+0xb1e>
 8065cf6:	81 f8 6e 01 00 00    	cmp    $0x16e,%eax
 8065cfc:	0f 85 be 00 00 00    	jne    8065dc0 <unary+0xbdc>
 8065d02:	b8 00 00 00 00       	mov    $0x0,%eax
 8065d07:	e8 be 29 ff ff       	callq  80586ca <next>
 8065d0c:	b8 28 00 00 00       	mov    $0x28,%eax
 8065d11:	48 89 c7             	mov    %rax,%rdi
 8065d14:	b8 00 00 00 00       	mov    $0x0,%eax
 8065d19:	e8 c5 b3 fe ff       	callq  80510e3 <skip>
 8065d1e:	48 8b 05 db 81 02 00 	mov    0x281db(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8065d25:	8b 00                	mov    (%rax),%eax
 8065d27:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
 8065d2d:	b8 01 00 00 00       	mov    $0x1,%eax
 8065d32:	4c 8b 1d c7 81 02 00 	mov    0x281c7(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8065d39:	41 89 03             	mov    %eax,(%r11)
 8065d3c:	b8 00 00 00 00       	mov    $0x0,%eax
 8065d41:	e8 f2 1e 00 00       	callq  8067c38 <gexpr>
 8065d46:	48 8b 05 d3 81 02 00 	mov    0x281d3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065d4d:	48 8b 00             	mov    (%rax),%rax
 8065d50:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8065d57:	00 00 00 
 8065d5a:	48 01 c8             	add    %rcx,%rax
 8065d5d:	0f b7 08             	movzwl (%rax),%ecx
 8065d60:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 8065d66:	83 f9 30             	cmp    $0x30,%ecx
 8065d69:	b8 00 00 00 00       	mov    $0x0,%eax
 8065d6e:	0f 94 c0             	sete   %al
 8065d71:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
 8065d77:	b8 00 00 00 00       	mov    $0x0,%eax
 8065d7c:	e8 71 85 ff ff       	callq  805e2f2 <vpop>
 8065d81:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 8065d87:	4c 8b 1d 72 81 02 00 	mov    0x28172(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8065d8e:	41 89 03             	mov    %eax,(%r11)
 8065d91:	b8 29 00 00 00       	mov    $0x29,%eax
 8065d96:	48 89 c7             	mov    %rax,%rdi
 8065d99:	b8 00 00 00 00       	mov    $0x0,%eax
 8065d9e:	e8 40 b3 fe ff       	callq  80510e3 <skip>
 8065da3:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
 8065da9:	48 89 c7             	mov    %rax,%rdi
 8065dac:	b8 00 00 00 00       	mov    $0x0,%eax
 8065db1:	e8 44 6a ff ff       	callq  805c7fa <vpushi>
 8065db6:	e9 c2 07 00 00       	jmpq   806657d <unary+0x1399>
 8065dbb:	e9 0c 00 00 00       	jmpq   8065dcc <unary+0xbe8>
 8065dc0:	81 f8 6f 01 00 00    	cmp    $0x16f,%eax
 8065dc6:	0f 85 14 01 00 00    	jne    8065ee0 <unary+0xcfc>
 8065dcc:	b8 00 00 00 00       	mov    $0x0,%eax
 8065dd1:	e8 f4 28 ff ff       	callq  80586ca <next>
 8065dd6:	b8 28 00 00 00       	mov    $0x28,%eax
 8065ddb:	48 89 c7             	mov    %rax,%rdi
 8065dde:	b8 00 00 00 00       	mov    $0x0,%eax
 8065de3:	e8 fb b2 fe ff       	callq  80510e3 <skip>
 8065de8:	48 8b 05 39 81 02 00 	mov    0x28139(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8065def:	8b 00                	mov    (%rax),%eax
 8065df1:	81 f8 b3 00 00 00    	cmp    $0xb3,%eax
 8065df7:	0f 85 17 00 00 00    	jne    8065e14 <unary+0xc30>
 8065dfd:	48 8b 05 a4 81 02 00 	mov    0x281a4(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8065e04:	8b 00                	mov    (%rax),%eax
 8065e06:	83 f8 00             	cmp    $0x0,%eax
 8065e09:	0f 8c 05 00 00 00    	jl     8065e14 <unary+0xc30>
 8065e0f:	e9 14 00 00 00       	jmpq   8065e28 <unary+0xc44>
 8065e14:	48 8d 05 f6 60 02 00 	lea    0x260f6(%rip),%rax        # 808bf11 <L.185>
 8065e1b:	48 89 c7             	mov    %rax,%rdi
 8065e1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8065e23:	e8 9f 78 fe ff       	callq  804d6c7 <tcc_error>
 8065e28:	48 8b 05 79 81 02 00 	mov    0x28179(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8065e2f:	8b 00                	mov    (%rax),%eax
 8065e31:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 8065e37:	b8 00 00 00 00       	mov    $0x0,%eax
 8065e3c:	e8 89 28 ff ff       	callq  80586ca <next>
 8065e41:	b8 29 00 00 00       	mov    $0x29,%eax
 8065e46:	48 89 c7             	mov    %rax,%rdi
 8065e49:	b8 00 00 00 00       	mov    $0x0,%eax
 8065e4e:	e8 90 b2 fe ff       	callq  80510e3 <skip>
 8065e53:	b8 03 00 00 00       	mov    $0x3,%eax
 8065e58:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
 8065e5e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8065e65:	48 89 c7             	mov    %rax,%rdi
 8065e68:	b8 00 00 00 00       	mov    $0x0,%eax
 8065e6d:	e8 7c b2 ff ff       	callq  80610ee <mk_pointer>
 8065e72:	b8 00 00 00 00       	mov    $0x0,%eax
 8065e77:	49 89 c2             	mov    %rax,%r10
 8065e7a:	b8 32 00 00 00       	mov    $0x32,%eax
 8065e7f:	48 89 c6             	mov    %rax,%rsi
 8065e82:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 8065e89:	48 89 c7             	mov    %rax,%rdi
 8065e8c:	4c 89 d2             	mov    %r10,%rdx
 8065e8f:	b8 00 00 00 00       	mov    $0x0,%eax
 8065e94:	e8 2f 6f ff ff       	callq  805cdc8 <vset>
 8065e99:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 8065e9f:	48 89 c1             	mov    %rax,%rcx
 8065ea2:	83 c0 ff             	add    $0xffffffff,%eax
 8065ea5:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 8065eab:	85 c9                	test   %ecx,%ecx
 8065ead:	0f 84 23 00 00 00    	je     8065ed6 <unary+0xcf2>
 8065eb3:	48 8b 05 66 80 02 00 	mov    0x28066(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8065eba:	48 8b 00             	mov    (%rax),%rax
 8065ebd:	48 89 c7             	mov    %rax,%rdi
 8065ec0:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ec5:	e8 24 b2 ff ff       	callq  80610ee <mk_pointer>
 8065eca:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ecf:	e8 13 ef ff ff       	callq  8064de7 <indir>
 8065ed4:	eb c3                	jmp    8065e99 <unary+0xcb5>
 8065ed6:	e9 a2 06 00 00       	jmpq   806657d <unary+0x1399>
 8065edb:	e9 0c 00 00 00       	jmpq   8065eec <unary+0xd08>
 8065ee0:	81 f8 70 01 00 00    	cmp    $0x170,%eax
 8065ee6:	0f 85 e1 00 00 00    	jne    8065fcd <unary+0xde9>
 8065eec:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ef1:	e8 d4 27 ff ff       	callq  80586ca <next>
 8065ef6:	b8 28 00 00 00       	mov    $0x28,%eax
 8065efb:	48 89 c7             	mov    %rax,%rdi
 8065efe:	b8 00 00 00 00       	mov    $0x0,%eax
 8065f03:	e8 db b1 fe ff       	callq  80510e3 <skip>
 8065f08:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 8065f0f:	48 89 c7             	mov    %rax,%rdi
 8065f12:	b8 00 00 00 00       	mov    $0x0,%eax
 8065f17:	e8 0b f2 ff ff       	callq  8065127 <parse_type>
 8065f1c:	b8 29 00 00 00       	mov    $0x29,%eax
 8065f21:	48 89 c7             	mov    %rax,%rdi
 8065f24:	b8 00 00 00 00       	mov    $0x0,%eax
 8065f29:	e8 b5 b1 fe ff       	callq  80510e3 <skip>
 8065f2e:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
 8065f34:	83 e0 0f             	and    $0xf,%eax
 8065f37:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 8065f3d:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8065f43:	83 f8 07             	cmp    $0x7,%eax
 8065f46:	0f 84 14 00 00 00    	je     8065f60 <unary+0xd7c>
 8065f4c:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8065f52:	83 f8 0a             	cmp    $0xa,%eax
 8065f55:	0f 84 05 00 00 00    	je     8065f60 <unary+0xd7c>
 8065f5b:	e9 17 00 00 00       	jmpq   8065f77 <unary+0xd93>
 8065f60:	b8 02 00 00 00       	mov    $0x2,%eax
 8065f65:	48 89 c7             	mov    %rax,%rdi
 8065f68:	b8 00 00 00 00       	mov    $0x0,%eax
 8065f6d:	e8 88 68 ff ff       	callq  805c7fa <vpushi>
 8065f72:	e9 4c 00 00 00       	jmpq   8065fc3 <unary+0xddf>
 8065f77:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8065f7d:	83 f8 08             	cmp    $0x8,%eax
 8065f80:	0f 84 14 00 00 00    	je     8065f9a <unary+0xdb6>
 8065f86:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8065f8c:	83 f8 09             	cmp    $0x9,%eax
 8065f8f:	0f 84 05 00 00 00    	je     8065f9a <unary+0xdb6>
 8065f95:	e9 17 00 00 00       	jmpq   8065fb1 <unary+0xdcd>
 8065f9a:	b8 01 00 00 00       	mov    $0x1,%eax
 8065f9f:	48 89 c7             	mov    %rax,%rdi
 8065fa2:	b8 00 00 00 00       	mov    $0x0,%eax
 8065fa7:	e8 4e 68 ff ff       	callq  805c7fa <vpushi>
 8065fac:	e9 12 00 00 00       	jmpq   8065fc3 <unary+0xddf>
 8065fb1:	b8 00 00 00 00       	mov    $0x0,%eax
 8065fb6:	48 89 c7             	mov    %rax,%rdi
 8065fb9:	b8 00 00 00 00       	mov    $0x0,%eax
 8065fbe:	e8 37 68 ff ff       	callq  805c7fa <vpushi>
 8065fc3:	e9 b5 05 00 00       	jmpq   806657d <unary+0x1399>
 8065fc8:	e9 0c 00 00 00       	jmpq   8065fd9 <unary+0xdf5>
 8065fcd:	81 f8 a4 00 00 00    	cmp    $0xa4,%eax
 8065fd3:	0f 85 05 00 00 00    	jne    8065fde <unary+0xdfa>
 8065fd9:	e9 0c 00 00 00       	jmpq   8065fea <unary+0xe06>
 8065fde:	81 f8 a2 00 00 00    	cmp    $0xa2,%eax
 8065fe4:	0f 85 42 00 00 00    	jne    806602c <unary+0xe48>
 8065fea:	48 8b 05 37 7f 02 00 	mov    0x27f37(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8065ff1:	8b 00                	mov    (%rax),%eax
 8065ff3:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8065ff6:	b8 00 00 00 00       	mov    $0x0,%eax
 8065ffb:	e8 ca 26 ff ff       	callq  80586ca <next>
 8066000:	b8 00 00 00 00       	mov    $0x0,%eax
 8066005:	e8 da f1 ff ff       	callq  80651e4 <unary>
 806600a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806600d:	48 89 c6             	mov    %rax,%rsi
 8066010:	b8 00 00 00 00       	mov    $0x0,%eax
 8066015:	48 89 c7             	mov    %rax,%rdi
 8066018:	b8 00 00 00 00       	mov    $0x0,%eax
 806601d:	e8 7e c6 ff ff       	callq  80626a0 <inc>
 8066022:	e9 56 05 00 00       	jmpq   806657d <unary+0x1399>
 8066027:	e9 09 00 00 00       	jmpq   8066035 <unary+0xe51>
 806602c:	83 f8 2d             	cmp    $0x2d,%eax
 806602f:	0f 85 42 00 00 00    	jne    8066077 <unary+0xe93>
 8066035:	b8 00 00 00 00       	mov    $0x0,%eax
 806603a:	e8 8b 26 ff ff       	callq  80586ca <next>
 806603f:	b8 00 00 00 00       	mov    $0x0,%eax
 8066044:	48 89 c7             	mov    %rax,%rdi
 8066047:	b8 00 00 00 00       	mov    $0x0,%eax
 806604c:	e8 a9 67 ff ff       	callq  805c7fa <vpushi>
 8066051:	b8 00 00 00 00       	mov    $0x0,%eax
 8066056:	e8 89 f1 ff ff       	callq  80651e4 <unary>
 806605b:	b8 2d 00 00 00       	mov    $0x2d,%eax
 8066060:	48 89 c7             	mov    %rax,%rdi
 8066063:	b8 00 00 00 00       	mov    $0x0,%eax
 8066068:	e8 53 97 ff ff       	callq  805f7c0 <gen_op>
 806606d:	e9 0b 05 00 00       	jmpq   806657d <unary+0x1399>
 8066072:	e9 0c 00 00 00       	jmpq   8066083 <unary+0xe9f>
 8066077:	81 f8 a0 00 00 00    	cmp    $0xa0,%eax
 806607d:	0f 85 c6 01 00 00    	jne    8066249 <unary+0x1065>
 8066083:	48 8b 05 36 7f 02 00 	mov    0x27f36(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 806608a:	8b 00                	mov    (%rax),%eax
 806608c:	85 c0                	test   %eax,%eax
 806608e:	0f 84 05 00 00 00    	je     8066099 <unary+0xeb5>
 8066094:	e9 05 00 00 00       	jmpq   806609e <unary+0xeba>
 8066099:	e9 63 02 00 00       	jmpq   8066301 <unary+0x111d>
 806609e:	b8 00 00 00 00       	mov    $0x0,%eax
 80660a3:	e8 22 26 ff ff       	callq  80586ca <next>
 80660a8:	48 8b 05 79 7e 02 00 	mov    0x27e79(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80660af:	8b 00                	mov    (%rax),%eax
 80660b1:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 80660b7:	0f 8d 14 00 00 00    	jge    80660d1 <unary+0xeed>
 80660bd:	48 8d 05 82 5e 02 00 	lea    0x25e82(%rip),%rax        # 808bf46 <L.186>
 80660c4:	48 89 c7             	mov    %rax,%rdi
 80660c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80660cc:	e8 81 b0 fe ff       	callq  8051152 <expect>
 80660d1:	48 8b 05 50 7e 02 00 	mov    0x27e50(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80660d8:	8b 00                	mov    (%rax),%eax
 80660da:	48 89 c7             	mov    %rax,%rdi
 80660dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80660e2:	e8 b4 de fe ff       	callq  8053f9b <label_find>
 80660e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80660eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80660ef:	85 c0                	test   %eax,%eax
 80660f1:	0f 84 05 00 00 00    	je     80660fc <unary+0xf18>
 80660f7:	e9 34 00 00 00       	jmpq   8066130 <unary+0xf4c>
 80660fc:	b8 01 00 00 00       	mov    $0x1,%eax
 8066101:	49 89 c2             	mov    %rax,%r10
 8066104:	48 8b 05 1d 7e 02 00 	mov    0x27e1d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806610b:	8b 00                	mov    (%rax),%eax
 806610d:	48 89 c6             	mov    %rax,%rsi
 8066110:	48 8b 05 a1 7e 02 00 	mov    0x27ea1(%rip),%rax        # 808dfb8 <_GLOBAL_OFFSET_TABLE_+0x338>
 8066117:	48 89 c7             	mov    %rax,%rdi
 806611a:	4c 89 d2             	mov    %r10,%rdx
 806611d:	b8 00 00 00 00       	mov    $0x0,%eax
 8066122:	e8 eb de fe ff       	callq  8054012 <label_push>
 8066127:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806612b:	e9 45 00 00 00       	jmpq   8066175 <unary+0xf91>
 8066130:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066134:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806613b:	00 00 00 
 806613e:	48 01 c8             	add    %rcx,%rax
 8066141:	48 8b 08             	mov    (%rax),%rcx
 8066144:	48 b8 02 00 00 00 00 	movabs $0x2,%rax
 806614b:	00 00 00 
 806614e:	48 39 c1             	cmp    %rax,%rcx
 8066151:	0f 85 1e 00 00 00    	jne    8066175 <unary+0xf91>
 8066157:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806615b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8066162:	00 00 00 
 8066165:	48 01 c8             	add    %rcx,%rax
 8066168:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 806616f:	00 00 00 
 8066172:	48 89 08             	mov    %rcx,(%rax)
 8066175:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066179:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8066180:	00 00 00 
 8066183:	48 01 c8             	add    %rcx,%rax
 8066186:	8b 08                	mov    (%rax),%ecx
 8066188:	85 c9                	test   %ecx,%ecx
 806618a:	0f 84 05 00 00 00    	je     8066195 <unary+0xfb1>
 8066190:	e9 51 00 00 00       	jmpq   80661e6 <unary+0x1002>
 8066195:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066199:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80661a0:	00 00 00 
 80661a3:	48 01 c8             	add    %rcx,%rax
 80661a6:	b9 03 00 00 00       	mov    $0x3,%ecx
 80661ab:	89 08                	mov    %ecx,(%rax)
 80661ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80661b1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80661b8:	00 00 00 
 80661bb:	48 01 c8             	add    %rcx,%rax
 80661be:	48 89 c7             	mov    %rax,%rdi
 80661c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80661c6:	e8 23 af ff ff       	callq  80610ee <mk_pointer>
 80661cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80661cf:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80661d6:	00 00 00 
 80661d9:	48 01 c8             	add    %rcx,%rax
 80661dc:	8b 08                	mov    (%rax),%ecx
 80661de:	81 c9 00 01 00 00    	or     $0x100,%ecx
 80661e4:	89 08                	mov    %ecx,(%rax)
 80661e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80661ea:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80661f1:	00 00 00 
 80661f4:	48 01 c8             	add    %rcx,%rax
 80661f7:	b9 00 00 00 00       	mov    $0x0,%ecx
 80661fc:	49 89 ca             	mov    %rcx,%r10
 80661ff:	b9 30 02 00 00       	mov    $0x230,%ecx
 8066204:	48 89 ce             	mov    %rcx,%rsi
 8066207:	48 89 c7             	mov    %rax,%rdi
 806620a:	4c 89 d2             	mov    %r10,%rdx
 806620d:	b8 00 00 00 00       	mov    $0x0,%eax
 8066212:	e8 b1 6b ff ff       	callq  805cdc8 <vset>
 8066217:	48 8b 05 02 7d 02 00 	mov    0x27d02(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806621e:	48 8b 00             	mov    (%rax),%rax
 8066221:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8066228:	00 00 00 
 806622b:	48 01 c8             	add    %rcx,%rax
 806622e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 8066232:	48 89 08             	mov    %rcx,(%rax)
 8066235:	b8 00 00 00 00       	mov    $0x0,%eax
 806623a:	e8 8b 24 ff ff       	callq  80586ca <next>
 806623f:	e9 39 03 00 00       	jmpq   806657d <unary+0x1399>
 8066244:	e9 0c 00 00 00       	jmpq   8066255 <unary+0x1071>
 8066249:	81 f8 4d 01 00 00    	cmp    $0x14d,%eax
 806624f:	0f 85 33 00 00 00    	jne    8066288 <unary+0x10a4>
 8066255:	48 b8 00 00 00 00 00 	movabs $0x7ff8000000000000,%rax
 806625c:	00 f8 7f 
 806625f:	48 89 c6             	mov    %rax,%rsi
 8066262:	b8 09 00 00 00       	mov    $0x9,%eax
 8066267:	48 89 c7             	mov    %rax,%rdi
 806626a:	b8 00 00 00 00       	mov    $0x0,%eax
 806626f:	e8 60 66 ff ff       	callq  805c8d4 <vpush64>
 8066274:	b8 00 00 00 00       	mov    $0x0,%eax
 8066279:	e8 4c 24 ff ff       	callq  80586ca <next>
 806627e:	e9 fa 02 00 00       	jmpq   806657d <unary+0x1399>
 8066283:	e9 0c 00 00 00       	jmpq   8066294 <unary+0x10b0>
 8066288:	81 f8 4e 01 00 00    	cmp    $0x14e,%eax
 806628e:	0f 85 33 00 00 00    	jne    80662c7 <unary+0x10e3>
 8066294:	48 b8 01 00 00 00 00 	movabs $0x7ff0000000000001,%rax
 806629b:	00 f0 7f 
 806629e:	48 89 c6             	mov    %rax,%rsi
 80662a1:	b8 09 00 00 00       	mov    $0x9,%eax
 80662a6:	48 89 c7             	mov    %rax,%rdi
 80662a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80662ae:	e8 21 66 ff ff       	callq  805c8d4 <vpush64>
 80662b3:	b8 00 00 00 00       	mov    $0x0,%eax
 80662b8:	e8 0d 24 ff ff       	callq  80586ca <next>
 80662bd:	e9 bb 02 00 00       	jmpq   806657d <unary+0x1399>
 80662c2:	e9 0c 00 00 00       	jmpq   80662d3 <unary+0x10ef>
 80662c7:	81 f8 4f 01 00 00    	cmp    $0x14f,%eax
 80662cd:	0f 85 2e 00 00 00    	jne    8066301 <unary+0x111d>
 80662d3:	48 b8 00 00 00 00 00 	movabs $0x7ff0000000000000,%rax
 80662da:	00 f0 7f 
 80662dd:	48 89 c6             	mov    %rax,%rsi
 80662e0:	b8 09 00 00 00       	mov    $0x9,%eax
 80662e5:	48 89 c7             	mov    %rax,%rdi
 80662e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80662ed:	e8 e2 65 ff ff       	callq  805c8d4 <vpush64>
 80662f2:	b8 00 00 00 00       	mov    $0x0,%eax
 80662f7:	e8 ce 23 ff ff       	callq  80586ca <next>
 80662fc:	e9 7c 02 00 00       	jmpq   806657d <unary+0x1399>
 8066301:	48 8b 05 20 7c 02 00 	mov    0x27c20(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066308:	8b 00                	mov    (%rax),%eax
 806630a:	89 45 f8             	mov    %eax,-0x8(%rbp)
 806630d:	b8 00 00 00 00       	mov    $0x0,%eax
 8066312:	e8 b3 23 ff ff       	callq  80586ca <next>
 8066317:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806631a:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 8066320:	0f 8d 14 00 00 00    	jge    806633a <unary+0x1156>
 8066326:	48 8d 05 2a 5c 02 00 	lea    0x25c2a(%rip),%rax        # 808bf57 <L.187>
 806632d:	48 89 c7             	mov    %rax,%rdi
 8066330:	b8 00 00 00 00       	mov    $0x0,%eax
 8066335:	e8 18 ae fe ff       	callq  8051152 <expect>
 806633a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806633d:	48 89 c7             	mov    %rax,%rdi
 8066340:	b8 00 00 00 00       	mov    $0x0,%eax
 8066345:	e8 9a 5d ff ff       	callq  805c0e4 <sym_find>
 806634a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806634e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066352:	85 c0                	test   %eax,%eax
 8066354:	0f 84 05 00 00 00    	je     806635f <unary+0x117b>
 806635a:	e9 ba 00 00 00       	jmpq   8066419 <unary+0x1235>
 806635f:	48 8b 05 c2 7b 02 00 	mov    0x27bc2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066366:	8b 00                	mov    (%rax),%eax
 8066368:	83 f8 28             	cmp    $0x28,%eax
 806636b:	0f 84 2f 00 00 00    	je     80663a0 <unary+0x11bc>
 8066371:	b8 00 00 00 00       	mov    $0x0,%eax
 8066376:	48 89 c6             	mov    %rax,%rsi
 8066379:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806637c:	48 89 c7             	mov    %rax,%rdi
 806637f:	b8 00 00 00 00       	mov    $0x0,%eax
 8066384:	e8 2b b5 fe ff       	callq  80518b4 <get_tok_str>
 8066389:	48 89 c6             	mov    %rax,%rsi
 806638c:	48 8d 05 cf 5b 02 00 	lea    0x25bcf(%rip),%rax        # 808bf62 <L.188>
 8066393:	48 89 c7             	mov    %rax,%rdi
 8066396:	b8 00 00 00 00       	mov    $0x0,%eax
 806639b:	e8 27 73 fe ff       	callq  804d6c7 <tcc_error>
 80663a0:	48 8b 05 e9 7a 02 00 	mov    0x27ae9(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 80663a7:	48 8b 00             	mov    (%rax),%rax
 80663aa:	48 b9 44 01 00 00 00 	movabs $0x144,%rcx
 80663b1:	00 00 00 
 80663b4:	48 01 c8             	add    %rcx,%rax
 80663b7:	8b 08                	mov    (%rax),%ecx
 80663b9:	85 c9                	test   %ecx,%ecx
 80663bb:	0f 84 2f 00 00 00    	je     80663f0 <unary+0x120c>
 80663c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80663c6:	48 89 c6             	mov    %rax,%rsi
 80663c9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80663cc:	48 89 c7             	mov    %rax,%rdi
 80663cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80663d4:	e8 db b4 fe ff       	callq  80518b4 <get_tok_str>
 80663d9:	48 89 c6             	mov    %rax,%rsi
 80663dc:	48 8d 05 8f 5b 02 00 	lea    0x25b8f(%rip),%rax        # 808bf72 <L.189>
 80663e3:	48 89 c7             	mov    %rax,%rdi
 80663e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80663eb:	e8 0f 75 fe ff       	callq  804d8ff <tcc_warning>
 80663f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80663f5:	49 89 c2             	mov    %rax,%r10
 80663f8:	48 8b 05 f1 7a 02 00 	mov    0x27af1(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 80663ff:	48 89 c6             	mov    %rax,%rsi
 8066402:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8066405:	48 89 c7             	mov    %rax,%rdi
 8066408:	4c 89 d2             	mov    %r10,%rdx
 806640b:	b8 00 00 00 00       	mov    $0x0,%eax
 8066410:	e8 8a 66 ff ff       	callq  805ca9f <external_global_sym>
 8066415:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8066419:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806641d:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8066424:	00 00 00 
 8066427:	48 01 c8             	add    %rcx,%rax
 806642a:	8b 08                	mov    (%rax),%ecx
 806642c:	81 e1 0f 05 00 00    	and    $0x50f,%ecx
 8066432:	81 f9 06 05 00 00    	cmp    $0x506,%ecx
 8066438:	0f 85 81 00 00 00    	jne    80664bf <unary+0x12db>
 806643e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066442:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8066449:	00 00 00 
 806644c:	48 01 c8             	add    %rcx,%rax
 806644f:	48 8b 08             	mov    (%rax),%rcx
 8066452:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8066459:	00 00 00 
 806645c:	48 39 c1             	cmp    %rax,%rcx
 806645f:	b8 00 00 00 00       	mov    $0x0,%eax
 8066464:	0f 95 c0             	setne  %al
 8066467:	85 c0                	test   %eax,%eax
 8066469:	0f 84 05 00 00 00    	je     8066474 <unary+0x1290>
 806646f:	e9 3e 00 00 00       	jmpq   80664b2 <unary+0x12ce>
 8066474:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806647b:	00 00 00 
 806647e:	49 89 c3             	mov    %rax,%r11
 8066481:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8066488:	00 00 00 
 806648b:	49 89 c2             	mov    %rax,%r10
 806648e:	48 8b 05 3b 7a 02 00 	mov    0x27a3b(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 8066495:	48 8b 00             	mov    (%rax),%rax
 8066498:	48 89 c6             	mov    %rax,%rsi
 806649b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806649f:	48 89 c7             	mov    %rax,%rdi
 80664a2:	4c 89 d2             	mov    %r10,%rdx
 80664a5:	4c 89 d9             	mov    %r11,%rcx
 80664a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80664ad:	e8 00 69 fe ff       	callq  804cdb2 <put_extern_sym>
 80664b2:	b8 30 02 00 00       	mov    $0x230,%eax
 80664b7:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80664ba:	e9 17 00 00 00       	jmpq   80664d6 <unary+0x12f2>
 80664bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80664c3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80664ca:	00 00 00 
 80664cd:	48 01 c8             	add    %rcx,%rax
 80664d0:	48 8b 08             	mov    (%rax),%rcx
 80664d3:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 80664d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80664da:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80664e1:	00 00 00 
 80664e4:	48 01 c8             	add    %rcx,%rax
 80664e7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80664eb:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80664f2:	00 00 00 
 80664f5:	48 01 d1             	add    %rdx,%rcx
 80664f8:	48 8b 11             	mov    (%rcx),%rdx
 80664fb:	49 89 d2             	mov    %rdx,%r10
 80664fe:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8066501:	48 89 ce             	mov    %rcx,%rsi
 8066504:	48 89 c7             	mov    %rax,%rdi
 8066507:	4c 89 d2             	mov    %r10,%rdx
 806650a:	b8 00 00 00 00       	mov    $0x0,%eax
 806650f:	e8 b4 68 ff ff       	callq  805cdc8 <vset>
 8066514:	48 8b 05 05 7a 02 00 	mov    0x27a05(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806651b:	48 8b 00             	mov    (%rax),%rax
 806651e:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8066525:	00 00 00 
 8066528:	48 01 c8             	add    %rcx,%rax
 806652b:	0f b7 08             	movzwl (%rax),%ecx
 806652e:	81 e1 00 02 00 00    	and    $0x200,%ecx
 8066534:	85 c9                	test   %ecx,%ecx
 8066536:	0f 84 3c 00 00 00    	je     8066578 <unary+0x1394>
 806653c:	48 8b 05 dd 79 02 00 	mov    0x279dd(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066543:	48 8b 00             	mov    (%rax),%rax
 8066546:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 806654d:	00 00 00 
 8066550:	48 01 c8             	add    %rcx,%rax
 8066553:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 8066557:	48 89 08             	mov    %rcx,(%rax)
 806655a:	48 8b 05 bf 79 02 00 	mov    0x279bf(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066561:	48 8b 00             	mov    (%rax),%rax
 8066564:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806656b:	00 00 00 
 806656e:	48 01 c8             	add    %rcx,%rax
 8066571:	b9 00 00 00 00       	mov    $0x0,%ecx
 8066576:	89 08                	mov    %ecx,(%rax)
 8066578:	e9 00 00 00 00       	jmpq   806657d <unary+0x1399>
 806657d:	48 8b 05 a4 79 02 00 	mov    0x279a4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066584:	8b 00                	mov    (%rax),%eax
 8066586:	81 f8 a4 00 00 00    	cmp    $0xa4,%eax
 806658c:	0f 84 1a 00 00 00    	je     80665ac <unary+0x13c8>
 8066592:	48 8b 05 8f 79 02 00 	mov    0x2798f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066599:	8b 00                	mov    (%rax),%eax
 806659b:	81 f8 a2 00 00 00    	cmp    $0xa2,%eax
 80665a1:	0f 84 05 00 00 00    	je     80665ac <unary+0x13c8>
 80665a7:	e9 2d 00 00 00       	jmpq   80665d9 <unary+0x13f5>
 80665ac:	48 8b 05 75 79 02 00 	mov    0x27975(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80665b3:	8b 00                	mov    (%rax),%eax
 80665b5:	48 89 c6             	mov    %rax,%rsi
 80665b8:	b8 01 00 00 00       	mov    $0x1,%eax
 80665bd:	48 89 c7             	mov    %rax,%rdi
 80665c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80665c5:	e8 d6 c0 ff ff       	callq  80626a0 <inc>
 80665ca:	b8 00 00 00 00       	mov    $0x0,%eax
 80665cf:	e8 f6 20 ff ff       	callq  80586ca <next>
 80665d4:	e9 c0 07 00 00       	jmpq   8066d99 <unary+0x1bb5>
 80665d9:	48 8b 05 48 79 02 00 	mov    0x27948(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80665e0:	8b 00                	mov    (%rax),%eax
 80665e2:	83 f8 2e             	cmp    $0x2e,%eax
 80665e5:	0f 84 1a 00 00 00    	je     8066605 <unary+0x1421>
 80665eb:	48 8b 05 36 79 02 00 	mov    0x27936(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80665f2:	8b 00                	mov    (%rax),%eax
 80665f4:	81 f8 cb 00 00 00    	cmp    $0xcb,%eax
 80665fa:	0f 84 05 00 00 00    	je     8066605 <unary+0x1421>
 8066600:	e9 8a 02 00 00       	jmpq   806688f <unary+0x16ab>
 8066605:	48 8b 05 1c 79 02 00 	mov    0x2791c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806660c:	8b 00                	mov    (%rax),%eax
 806660e:	81 f8 cb 00 00 00    	cmp    $0xcb,%eax
 8066614:	0f 85 0a 00 00 00    	jne    8066624 <unary+0x1440>
 806661a:	b8 00 00 00 00       	mov    $0x0,%eax
 806661f:	e8 c3 e7 ff ff       	callq  8064de7 <indir>
 8066624:	48 8b 05 f5 78 02 00 	mov    0x278f5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806662b:	48 8b 00             	mov    (%rax),%rax
 806662e:	8b 08                	mov    (%rax),%ecx
 8066630:	81 e1 00 18 00 00    	and    $0x1800,%ecx
 8066636:	89 8d 38 ff ff ff    	mov    %ecx,-0xc8(%rbp)
 806663c:	b8 00 00 00 00       	mov    $0x0,%eax
 8066641:	e8 6d 56 ff ff       	callq  805bcb3 <test_lvalue>
 8066646:	b8 00 00 00 00       	mov    $0x0,%eax
 806664b:	e8 0a 70 ff ff       	callq  805d65a <gaddrof>
 8066650:	b8 00 00 00 00       	mov    $0x0,%eax
 8066655:	e8 70 20 ff ff       	callq  80586ca <next>
 806665a:	48 8b 05 bf 78 02 00 	mov    0x278bf(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066661:	48 8b 00             	mov    (%rax),%rax
 8066664:	8b 08                	mov    (%rax),%ecx
 8066666:	83 e1 0f             	and    $0xf,%ecx
 8066669:	83 f9 07             	cmp    $0x7,%ecx
 806666c:	0f 84 14 00 00 00    	je     8066686 <unary+0x14a2>
 8066672:	48 8d 05 1f 59 02 00 	lea    0x2591f(%rip),%rax        # 808bf98 <L.190>
 8066679:	48 89 c7             	mov    %rax,%rdi
 806667c:	b8 00 00 00 00       	mov    $0x0,%eax
 8066681:	e8 cc aa fe ff       	callq  8051152 <expect>
 8066686:	48 8b 05 93 78 02 00 	mov    0x27893(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806668d:	48 8b 00             	mov    (%rax),%rax
 8066690:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8066697:	00 00 00 
 806669a:	48 01 c8             	add    %rcx,%rax
 806669d:	48 8b 08             	mov    (%rax),%rcx
 80666a0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 80666a4:	48 8b 05 7d 78 02 00 	mov    0x2787d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80666ab:	8b 00                	mov    (%rax),%eax
 80666ad:	81 c8 00 00 00 20    	or     $0x20000000,%eax
 80666b3:	4c 8b 1d 6e 78 02 00 	mov    0x2786e(%rip),%r11        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80666ba:	41 89 03             	mov    %eax,(%r11)
 80666bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80666c1:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80666c8:	00 00 00 
 80666cb:	48 01 c8             	add    %rcx,%rax
 80666ce:	48 8b 08             	mov    (%rax),%rcx
 80666d1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 80666d5:	48 89 c8             	mov    %rcx,%rax
 80666d8:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80666df:	00 00 00 
 80666e2:	48 39 c8             	cmp    %rcx,%rax
 80666e5:	0f 84 1e 00 00 00    	je     8066709 <unary+0x1525>
 80666eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80666ef:	8b 08                	mov    (%rax),%ecx
 80666f1:	48 8b 05 30 78 02 00 	mov    0x27830(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80666f8:	8b 00                	mov    (%rax),%eax
 80666fa:	39 c1                	cmp    %eax,%ecx
 80666fc:	0f 85 05 00 00 00    	jne    8066707 <unary+0x1523>
 8066702:	e9 02 00 00 00       	jmpq   8066709 <unary+0x1525>
 8066707:	eb b4                	jmp    80666bd <unary+0x14d9>
 8066709:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806670d:	85 c0                	test   %eax,%eax
 806670f:	0f 84 05 00 00 00    	je     806671a <unary+0x1536>
 8066715:	e9 3b 00 00 00       	jmpq   8066755 <unary+0x1571>
 806671a:	48 8b 05 07 78 02 00 	mov    0x27807(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066721:	8b 00                	mov    (%rax),%eax
 8066723:	81 e0 ff ff ff df    	and    $0xdfffffff,%eax
 8066729:	b9 00 00 00 00       	mov    $0x0,%ecx
 806672e:	48 89 ce             	mov    %rcx,%rsi
 8066731:	48 89 c7             	mov    %rax,%rdi
 8066734:	b8 00 00 00 00       	mov    $0x0,%eax
 8066739:	e8 76 b1 fe ff       	callq  80518b4 <get_tok_str>
 806673e:	48 89 c6             	mov    %rax,%rsi
 8066741:	48 8d 05 60 58 02 00 	lea    0x25860(%rip),%rax        # 808bfa8 <L.191>
 8066748:	48 89 c7             	mov    %rax,%rdi
 806674b:	b8 00 00 00 00       	mov    $0x0,%eax
 8066750:	e8 72 6f fe ff       	callq  804d6c7 <tcc_error>
 8066755:	48 8b 05 c4 77 02 00 	mov    0x277c4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806675c:	48 8b 00             	mov    (%rax),%rax
 806675f:	b9 10 00 00 00       	mov    $0x10,%ecx
 8066764:	49 89 ca             	mov    %rcx,%r10
 8066767:	48 8b 0d 72 77 02 00 	mov    0x27772(%rip),%rcx        # 808dee0 <_GLOBAL_OFFSET_TABLE_+0x260>
 806676e:	48 89 ce             	mov    %rcx,%rsi
 8066771:	48 89 c7             	mov    %rax,%rdi
 8066774:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 806677b:	4c 89 d2             	mov    %r10,%rdx
 806677e:	b8 00 00 00 00       	mov    $0x0,%eax
 8066783:	e8 e8 04 02 00       	callq  8086c70 <memcpy>
 8066788:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806678c:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8066793:	00 00 00 
 8066796:	48 01 c8             	add    %rcx,%rax
 8066799:	48 8b 08             	mov    (%rax),%rcx
 806679c:	48 89 cf             	mov    %rcx,%rdi
 806679f:	b8 00 00 00 00       	mov    $0x0,%eax
 80667a4:	e8 51 60 ff ff       	callq  805c7fa <vpushi>
 80667a9:	b8 2b 00 00 00       	mov    $0x2b,%eax
 80667ae:	48 89 c7             	mov    %rax,%rdi
 80667b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80667b6:	e8 05 90 ff ff       	callq  805f7c0 <gen_op>
 80667bb:	48 8b 05 5e 77 02 00 	mov    0x2775e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80667c2:	48 8b 00             	mov    (%rax),%rax
 80667c5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80667c9:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 80667d0:	00 00 00 
 80667d3:	48 01 d1             	add    %rdx,%rcx
 80667d6:	ba 10 00 00 00       	mov    $0x10,%edx
 80667db:	49 89 d2             	mov    %rdx,%r10
 80667de:	48 89 ce             	mov    %rcx,%rsi
 80667e1:	48 89 c7             	mov    %rax,%rdi
 80667e4:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 80667eb:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
 80667f2:	4c 89 d2             	mov    %r10,%rdx
 80667f5:	b8 00 00 00 00       	mov    $0x0,%eax
 80667fa:	e8 71 04 02 00       	callq  8086c70 <memcpy>
 80667ff:	48 8b 05 1a 77 02 00 	mov    0x2771a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066806:	48 8b 00             	mov    (%rax),%rax
 8066809:	8b 08                	mov    (%rax),%ecx
 806680b:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
 8066811:	48 09 d1             	or     %rdx,%rcx
 8066814:	89 08                	mov    %ecx,(%rax)
 8066816:	48 8b 05 03 77 02 00 	mov    0x27703(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806681d:	48 8b 00             	mov    (%rax),%rax
 8066820:	8b 08                	mov    (%rax),%ecx
 8066822:	83 e1 20             	and    $0x20,%ecx
 8066825:	85 c9                	test   %ecx,%ecx
 8066827:	0f 84 05 00 00 00    	je     8066832 <unary+0x164e>
 806682d:	e9 4e 00 00 00       	jmpq   8066880 <unary+0x169c>
 8066832:	48 8b 05 e7 76 02 00 	mov    0x276e7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066839:	48 8b 00             	mov    (%rax),%rax
 806683c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8066843:	00 00 00 
 8066846:	48 01 c8             	add    %rcx,%rax
 8066849:	48 8b 0d d0 76 02 00 	mov    0x276d0(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066850:	48 8b 09             	mov    (%rcx),%rcx
 8066853:	8b 11                	mov    (%rcx),%edx
 8066855:	48 89 d7             	mov    %rdx,%rdi
 8066858:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 806685f:	b8 00 00 00 00       	mov    $0x0,%eax
 8066864:	e8 e7 e4 ff ff       	callq  8064d50 <lvalue_type>
 8066869:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 8066870:	0f b7 09             	movzwl (%rcx),%ecx
 8066873:	48 09 c1             	or     %rax,%rcx
 8066876:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 806687d:	66 89 08             	mov    %cx,(%rax)
 8066880:	b8 00 00 00 00       	mov    $0x0,%eax
 8066885:	e8 40 1e ff ff       	callq  80586ca <next>
 806688a:	e9 0a 05 00 00       	jmpq   8066d99 <unary+0x1bb5>
 806688f:	48 8b 05 92 76 02 00 	mov    0x27692(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066896:	8b 00                	mov    (%rax),%eax
 8066898:	83 f8 5b             	cmp    $0x5b,%eax
 806689b:	0f 85 47 00 00 00    	jne    80668e8 <unary+0x1704>
 80668a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80668a6:	e8 1f 1e ff ff       	callq  80586ca <next>
 80668ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80668b0:	e8 83 13 00 00       	callq  8067c38 <gexpr>
 80668b5:	b8 2b 00 00 00       	mov    $0x2b,%eax
 80668ba:	48 89 c7             	mov    %rax,%rdi
 80668bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80668c2:	e8 f9 8e ff ff       	callq  805f7c0 <gen_op>
 80668c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80668cc:	e8 16 e5 ff ff       	callq  8064de7 <indir>
 80668d1:	b8 5d 00 00 00       	mov    $0x5d,%eax
 80668d6:	48 89 c7             	mov    %rax,%rdi
 80668d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80668de:	e8 00 a8 fe ff       	callq  80510e3 <skip>
 80668e3:	e9 b1 04 00 00       	jmpq   8066d99 <unary+0x1bb5>
 80668e8:	48 8b 05 39 76 02 00 	mov    0x27639(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80668ef:	8b 00                	mov    (%rax),%eax
 80668f1:	83 f8 28             	cmp    $0x28,%eax
 80668f4:	0f 85 9a 04 00 00    	jne    8066d94 <unary+0x1bb0>
 80668fa:	48 8b 05 1f 76 02 00 	mov    0x2761f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066901:	48 8b 00             	mov    (%rax),%rax
 8066904:	8b 08                	mov    (%rax),%ecx
 8066906:	83 e1 0f             	and    $0xf,%ecx
 8066909:	83 f9 06             	cmp    $0x6,%ecx
 806690c:	0f 84 a4 00 00 00    	je     80669b6 <unary+0x17d2>
 8066912:	48 8b 05 07 76 02 00 	mov    0x27607(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066919:	48 8b 00             	mov    (%rax),%rax
 806691c:	8b 08                	mov    (%rax),%ecx
 806691e:	83 e1 2f             	and    $0x2f,%ecx
 8066921:	83 f9 04             	cmp    $0x4,%ecx
 8066924:	0f 85 73 00 00 00    	jne    806699d <unary+0x17b9>
 806692a:	48 8b 05 ef 75 02 00 	mov    0x275ef(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066931:	48 8b 00             	mov    (%rax),%rax
 8066934:	48 8b 0d e5 75 02 00 	mov    0x275e5(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806693b:	48 8b 09             	mov    (%rcx),%rcx
 806693e:	48 89 cf             	mov    %rcx,%rdi
 8066941:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 8066948:	b8 00 00 00 00       	mov    $0x0,%eax
 806694d:	e8 2d 6d 00 00       	callq  806d67f <pointed_type>
 8066952:	b9 10 00 00 00       	mov    $0x10,%ecx
 8066957:	49 89 ca             	mov    %rcx,%r10
 806695a:	48 89 c6             	mov    %rax,%rsi
 806695d:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
 8066964:	48 89 cf             	mov    %rcx,%rdi
 8066967:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 806696e:	4c 89 d2             	mov    %r10,%rdx
 8066971:	b8 00 00 00 00       	mov    $0x0,%eax
 8066976:	e8 f5 02 02 00       	callq  8086c70 <memcpy>
 806697b:	48 8b 05 9e 75 02 00 	mov    0x2759e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066982:	48 8b 00             	mov    (%rax),%rax
 8066985:	8b 08                	mov    (%rax),%ecx
 8066987:	83 e1 0f             	and    $0xf,%ecx
 806698a:	83 f9 06             	cmp    $0x6,%ecx
 806698d:	0f 84 05 00 00 00    	je     8066998 <unary+0x17b4>
 8066993:	e9 05 00 00 00       	jmpq   806699d <unary+0x17b9>
 8066998:	e9 14 00 00 00       	jmpq   80669b1 <unary+0x17cd>
 806699d:	48 8d 05 18 56 02 00 	lea    0x25618(%rip),%rax        # 808bfbc <L.192>
 80669a4:	48 89 c7             	mov    %rax,%rdi
 80669a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80669ac:	e8 a1 a7 fe ff       	callq  8051152 <expect>
 80669b1:	e9 23 00 00 00       	jmpq   80669d9 <unary+0x17f5>
 80669b6:	48 8b 05 63 75 02 00 	mov    0x27563(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80669bd:	48 8b 00             	mov    (%rax),%rax
 80669c0:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80669c7:	00 00 00 
 80669ca:	48 01 c8             	add    %rcx,%rax
 80669cd:	0f b7 08             	movzwl (%rax),%ecx
 80669d0:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 80669d6:	66 89 08             	mov    %cx,(%rax)
 80669d9:	48 8b 05 40 75 02 00 	mov    0x27540(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80669e0:	48 8b 00             	mov    (%rax),%rax
 80669e3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80669ea:	00 00 00 
 80669ed:	48 01 c8             	add    %rcx,%rax
 80669f0:	48 8b 08             	mov    (%rax),%rcx
 80669f3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 80669f7:	b8 00 00 00 00       	mov    $0x0,%eax
 80669fc:	e8 c9 1c ff ff       	callq  80586ca <next>
 8066a01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066a05:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8066a0c:	00 00 00 
 8066a0f:	48 01 c8             	add    %rcx,%rax
 8066a12:	48 8b 08             	mov    (%rax),%rcx
 8066a15:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
 8066a1c:	b8 00 00 00 00       	mov    $0x0,%eax
 8066a21:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
 8066a27:	b8 30 00 00 00       	mov    $0x30,%eax
 8066a2c:	66 89 85 fa fe ff ff 	mov    %ax,-0x106(%rbp)
 8066a33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066a37:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8066a3e:	00 00 00 
 8066a41:	48 01 c8             	add    %rcx,%rax
 8066a44:	8b 08                	mov    (%rax),%ecx
 8066a46:	83 e1 0f             	and    $0xf,%ecx
 8066a49:	83 f9 07             	cmp    $0x7,%ecx
 8066a4c:	0f 85 0a 01 00 00    	jne    8066b5c <unary+0x1978>
 8066a52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066a56:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8066a5d:	00 00 00 
 8066a60:	48 01 c8             	add    %rcx,%rax
 8066a63:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
 8066a67:	48 89 ce             	mov    %rcx,%rsi
 8066a6a:	48 89 c7             	mov    %rax,%rdi
 8066a6d:	b8 00 00 00 00       	mov    $0x0,%eax
 8066a72:	e8 9d a3 ff ff       	callq  8060e14 <type_size>
 8066a77:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8066a7a:	48 8b 05 77 75 02 00 	mov    0x27577(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8066a81:	8b 00                	mov    (%rax),%eax
 8066a83:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8066a86:	48 29 c8             	sub    %rcx,%rax
 8066a89:	b9 00 00 00 00       	mov    $0x0,%ecx
 8066a8e:	8b 55 f4             	mov    -0xc(%rbp),%edx
 8066a91:	48 29 d1             	sub    %rdx,%rcx
 8066a94:	48 21 c8             	and    %rcx,%rax
 8066a97:	4c 8b 1d 5a 75 02 00 	mov    0x2755a(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8066a9e:	41 89 03             	mov    %eax,(%r11)
 8066aa1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066aa5:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8066aac:	00 00 00 
 8066aaf:	48 01 c8             	add    %rcx,%rax
 8066ab2:	b9 10 00 00 00       	mov    $0x10,%ecx
 8066ab7:	49 89 ca             	mov    %rcx,%r10
 8066aba:	48 89 c6             	mov    %rax,%rsi
 8066abd:	48 8d 8d e8 fe ff ff 	lea    -0x118(%rbp),%rcx
 8066ac4:	48 89 cf             	mov    %rcx,%rdi
 8066ac7:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
 8066ace:	4c 89 d2             	mov    %r10,%rdx
 8066ad1:	b8 00 00 00 00       	mov    $0x0,%eax
 8066ad6:	e8 95 01 02 00       	callq  8086c70 <memcpy>
 8066adb:	b8 32 01 00 00       	mov    $0x132,%eax
 8066ae0:	66 89 85 f8 fe ff ff 	mov    %ax,-0x108(%rbp)
 8066ae7:	48 8b 05 0a 75 02 00 	mov    0x2750a(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8066aee:	8b 00                	mov    (%rax),%eax
 8066af0:	48 89 c6             	mov    %rax,%rsi
 8066af3:	b8 32 00 00 00       	mov    $0x32,%eax
 8066af8:	48 89 c7             	mov    %rax,%rdi
 8066afb:	b8 00 00 00 00       	mov    $0x0,%eax
 8066b00:	e8 03 63 ff ff       	callq  805ce08 <vseti>
 8066b05:	48 8b 05 14 74 02 00 	mov    0x27414(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066b0c:	48 8b 00             	mov    (%rax),%rax
 8066b0f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8066b16:	00 00 00 
 8066b19:	48 01 c8             	add    %rcx,%rax
 8066b1c:	b9 10 00 00 00       	mov    $0x10,%ecx
 8066b21:	49 89 ca             	mov    %rcx,%r10
 8066b24:	48 89 c6             	mov    %rax,%rsi
 8066b27:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
 8066b2e:	48 89 cf             	mov    %rcx,%rdi
 8066b31:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8066b38:	4c 89 d2             	mov    %r10,%rdx
 8066b3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8066b40:	e8 2b 01 02 00       	callq  8086c70 <memcpy>
 8066b45:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
 8066b4b:	48 89 c1             	mov    %rax,%rcx
 8066b4e:	83 c0 01             	add    $0x1,%eax
 8066b51:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
 8066b57:	e9 a9 00 00 00       	jmpq   8066c05 <unary+0x1a21>
 8066b5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066b60:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8066b67:	00 00 00 
 8066b6a:	48 01 c8             	add    %rcx,%rax
 8066b6d:	b9 10 00 00 00       	mov    $0x10,%ecx
 8066b72:	49 89 ca             	mov    %rcx,%r10
 8066b75:	48 89 c6             	mov    %rax,%rsi
 8066b78:	48 8d 8d e8 fe ff ff 	lea    -0x118(%rbp),%rcx
 8066b7f:	48 89 cf             	mov    %rcx,%rdi
 8066b82:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
 8066b89:	4c 89 d2             	mov    %r10,%rdx
 8066b8c:	b8 00 00 00 00       	mov    $0x0,%eax
 8066b91:	e8 da 00 02 00       	callq  8086c70 <memcpy>
 8066b96:	8b 85 e8 fe ff ff    	mov    -0x118(%rbp),%eax
 8066b9c:	48 89 c7             	mov    %rax,%rdi
 8066b9f:	b8 00 00 00 00       	mov    $0x0,%eax
 8066ba4:	e8 7a 50 ff ff       	callq  805bc23 <is_float>
 8066ba9:	85 c0                	test   %eax,%eax
 8066bab:	0f 84 1f 00 00 00    	je     8066bd0 <unary+0x19ec>
 8066bb1:	8b 85 e8 fe ff ff    	mov    -0x118(%rbp),%eax
 8066bb7:	48 89 c7             	mov    %rax,%rdi
 8066bba:	b8 00 00 00 00       	mov    $0x0,%eax
 8066bbf:	e8 d3 72 ff ff       	callq  805de97 <reg_fret>
 8066bc4:	66 89 85 f8 fe ff ff 	mov    %ax,-0x108(%rbp)
 8066bcb:	e9 2a 00 00 00       	jmpq   8066bfa <unary+0x1a16>
 8066bd0:	8b 85 e8 fe ff ff    	mov    -0x118(%rbp),%eax
 8066bd6:	83 e0 0f             	and    $0xf,%eax
 8066bd9:	83 f8 0c             	cmp    $0xc,%eax
 8066bdc:	0f 85 0c 00 00 00    	jne    8066bee <unary+0x1a0a>
 8066be2:	b8 02 00 00 00       	mov    $0x2,%eax
 8066be7:	66 89 85 fa fe ff ff 	mov    %ax,-0x106(%rbp)
 8066bee:	b8 00 00 00 00       	mov    $0x0,%eax
 8066bf3:	66 89 85 f8 fe ff ff 	mov    %ax,-0x108(%rbp)
 8066bfa:	b8 00 00 00 00       	mov    $0x0,%eax
 8066bff:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
 8066c05:	48 8b 05 1c 73 02 00 	mov    0x2731c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066c0c:	8b 00                	mov    (%rax),%eax
 8066c0e:	83 f8 29             	cmp    $0x29,%eax
 8066c11:	0f 84 92 00 00 00    	je     8066ca9 <unary+0x1ac5>
 8066c17:	b8 00 00 00 00       	mov    $0x0,%eax
 8066c1c:	e8 fa 0e 00 00       	callq  8067b1b <expr_eq>
 8066c21:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8066c28:	48 89 c6             	mov    %rax,%rsi
 8066c2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8066c2f:	48 89 c7             	mov    %rax,%rdi
 8066c32:	b8 00 00 00 00       	mov    $0x0,%eax
 8066c37:	e8 31 e3 ff ff       	callq  8064f6d <gfunc_param_typed>
 8066c3c:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
 8066c42:	48 89 c1             	mov    %rax,%rcx
 8066c45:	83 c0 01             	add    $0x1,%eax
 8066c48:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
 8066c4e:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8066c55:	85 c0                	test   %eax,%eax
 8066c57:	0f 84 1e 00 00 00    	je     8066c7b <unary+0x1a97>
 8066c5d:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8066c64:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8066c6b:	00 00 00 
 8066c6e:	48 01 c8             	add    %rcx,%rax
 8066c71:	48 8b 08             	mov    (%rax),%rcx
 8066c74:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
 8066c7b:	48 8b 05 a6 72 02 00 	mov    0x272a6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066c82:	8b 00                	mov    (%rax),%eax
 8066c84:	83 f8 29             	cmp    $0x29,%eax
 8066c87:	0f 85 05 00 00 00    	jne    8066c92 <unary+0x1aae>
 8066c8d:	e9 17 00 00 00       	jmpq   8066ca9 <unary+0x1ac5>
 8066c92:	b8 2c 00 00 00       	mov    $0x2c,%eax
 8066c97:	48 89 c7             	mov    %rax,%rdi
 8066c9a:	b8 00 00 00 00       	mov    $0x0,%eax
 8066c9f:	e8 3f a4 fe ff       	callq  80510e3 <skip>
 8066ca4:	e9 6e ff ff ff       	jmpq   8066c17 <unary+0x1a33>
 8066ca9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8066cb0:	85 c0                	test   %eax,%eax
 8066cb2:	0f 84 14 00 00 00    	je     8066ccc <unary+0x1ae8>
 8066cb8:	48 8d 05 0e 53 02 00 	lea    0x2530e(%rip),%rax        # 808bfcd <L.193>
 8066cbf:	48 89 c7             	mov    %rax,%rdi
 8066cc2:	b8 00 00 00 00       	mov    $0x0,%eax
 8066cc7:	e8 fb 69 fe ff       	callq  804d6c7 <tcc_error>
 8066ccc:	b8 29 00 00 00       	mov    $0x29,%eax
 8066cd1:	48 89 c7             	mov    %rax,%rdi
 8066cd4:	b8 00 00 00 00       	mov    $0x0,%eax
 8066cd9:	e8 05 a4 fe ff       	callq  80510e3 <skip>
 8066cde:	48 8b 05 1b 72 02 00 	mov    0x2721b(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8066ce5:	8b 00                	mov    (%rax),%eax
 8066ce7:	85 c0                	test   %eax,%eax
 8066ce9:	0f 84 05 00 00 00    	je     8066cf4 <unary+0x1b10>
 8066cef:	e9 18 00 00 00       	jmpq   8066d0c <unary+0x1b28>
 8066cf4:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
 8066cfa:	48 89 c7             	mov    %rax,%rdi
 8066cfd:	b8 00 00 00 00       	mov    $0x0,%eax
 8066d02:	e8 67 89 01 00       	callq  807f66e <gfunc_call>
 8066d07:	e9 37 00 00 00       	jmpq   8066d43 <unary+0x1b5f>
 8066d0c:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
 8066d12:	83 c0 01             	add    $0x1,%eax
 8066d15:	48 63 c0             	movslq %eax,%rax
 8066d18:	48 89 c1             	mov    %rax,%rcx
 8066d1b:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 8066d22:	00 00 00 
 8066d25:	48 0f af c8          	imul   %rax,%rcx
 8066d29:	48 8b 05 f0 71 02 00 	mov    0x271f0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066d30:	48 8b 00             	mov    (%rax),%rax
 8066d33:	48 89 ca             	mov    %rcx,%rdx
 8066d36:	48 29 d0             	sub    %rdx,%rax
 8066d39:	4c 8b 1d e0 71 02 00 	mov    0x271e0(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066d40:	49 89 03             	mov    %rax,(%r11)
 8066d43:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 8066d4a:	49 89 c2             	mov    %rax,%r10
 8066d4d:	0f b7 85 f8 fe ff ff 	movzwl -0x108(%rbp),%eax
 8066d54:	48 89 c6             	mov    %rax,%rsi
 8066d57:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
 8066d5e:	48 89 c7             	mov    %rax,%rdi
 8066d61:	4c 89 d2             	mov    %r10,%rdx
 8066d64:	b8 00 00 00 00       	mov    $0x0,%eax
 8066d69:	e8 bb 58 ff ff       	callq  805c629 <vsetc>
 8066d6e:	48 8b 05 ab 71 02 00 	mov    0x271ab(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8066d75:	48 8b 00             	mov    (%rax),%rax
 8066d78:	48 b9 12 00 00 00 00 	movabs $0x12,%rcx
 8066d7f:	00 00 00 
 8066d82:	48 01 c8             	add    %rcx,%rax
 8066d85:	0f b7 8d fa fe ff ff 	movzwl -0x106(%rbp),%ecx
 8066d8c:	66 89 08             	mov    %cx,(%rax)
 8066d8f:	e9 05 00 00 00       	jmpq   8066d99 <unary+0x1bb5>
 8066d94:	e9 05 00 00 00       	jmpq   8066d9e <unary+0x1bba>
 8066d99:	e9 df f7 ff ff       	jmpq   806657d <unary+0x1399>
 8066d9e:	c9                   	leaveq 
 8066d9f:	c3                   	retq   

0000000008066da0 <expr_prod>:
 8066da0:	55                   	push   %rbp
 8066da1:	48 89 e5             	mov    %rsp,%rbp
 8066da4:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8066dab:	b8 00 00 00 00       	mov    $0x0,%eax
 8066db0:	e8 2f e4 ff ff       	callq  80651e4 <unary>
 8066db5:	48 8b 05 6c 71 02 00 	mov    0x2716c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066dbc:	8b 00                	mov    (%rax),%eax
 8066dbe:	83 f8 2a             	cmp    $0x2a,%eax
 8066dc1:	0f 84 29 00 00 00    	je     8066df0 <expr_prod+0x50>
 8066dc7:	48 8b 05 5a 71 02 00 	mov    0x2715a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066dce:	8b 00                	mov    (%rax),%eax
 8066dd0:	83 f8 2f             	cmp    $0x2f,%eax
 8066dd3:	0f 84 17 00 00 00    	je     8066df0 <expr_prod+0x50>
 8066dd9:	48 8b 05 48 71 02 00 	mov    0x27148(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066de0:	8b 00                	mov    (%rax),%eax
 8066de2:	83 f8 25             	cmp    $0x25,%eax
 8066de5:	0f 84 05 00 00 00    	je     8066df0 <expr_prod+0x50>
 8066deb:	e9 32 00 00 00       	jmpq   8066e22 <expr_prod+0x82>
 8066df0:	48 8b 05 31 71 02 00 	mov    0x27131(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066df7:	8b 00                	mov    (%rax),%eax
 8066df9:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8066dfc:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e01:	e8 c4 18 ff ff       	callq  80586ca <next>
 8066e06:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e0b:	e8 d4 e3 ff ff       	callq  80651e4 <unary>
 8066e10:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8066e13:	48 89 c7             	mov    %rax,%rdi
 8066e16:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e1b:	e8 a0 89 ff ff       	callq  805f7c0 <gen_op>
 8066e20:	eb 93                	jmp    8066db5 <expr_prod+0x15>
 8066e22:	c9                   	leaveq 
 8066e23:	c3                   	retq   

0000000008066e24 <expr_sum>:
 8066e24:	55                   	push   %rbp
 8066e25:	48 89 e5             	mov    %rsp,%rbp
 8066e28:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8066e2f:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e34:	e8 67 ff ff ff       	callq  8066da0 <expr_prod>
 8066e39:	48 8b 05 e8 70 02 00 	mov    0x270e8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066e40:	8b 00                	mov    (%rax),%eax
 8066e42:	83 f8 2b             	cmp    $0x2b,%eax
 8066e45:	0f 84 17 00 00 00    	je     8066e62 <expr_sum+0x3e>
 8066e4b:	48 8b 05 d6 70 02 00 	mov    0x270d6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066e52:	8b 00                	mov    (%rax),%eax
 8066e54:	83 f8 2d             	cmp    $0x2d,%eax
 8066e57:	0f 84 05 00 00 00    	je     8066e62 <expr_sum+0x3e>
 8066e5d:	e9 32 00 00 00       	jmpq   8066e94 <expr_sum+0x70>
 8066e62:	48 8b 05 bf 70 02 00 	mov    0x270bf(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066e69:	8b 00                	mov    (%rax),%eax
 8066e6b:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8066e6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e73:	e8 52 18 ff ff       	callq  80586ca <next>
 8066e78:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e7d:	e8 1e ff ff ff       	callq  8066da0 <expr_prod>
 8066e82:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8066e85:	48 89 c7             	mov    %rax,%rdi
 8066e88:	b8 00 00 00 00       	mov    $0x0,%eax
 8066e8d:	e8 2e 89 ff ff       	callq  805f7c0 <gen_op>
 8066e92:	eb a5                	jmp    8066e39 <expr_sum+0x15>
 8066e94:	c9                   	leaveq 
 8066e95:	c3                   	retq   

0000000008066e96 <expr_shift>:
 8066e96:	55                   	push   %rbp
 8066e97:	48 89 e5             	mov    %rsp,%rbp
 8066e9a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8066ea1:	b8 00 00 00 00       	mov    $0x0,%eax
 8066ea6:	e8 79 ff ff ff       	callq  8066e24 <expr_sum>
 8066eab:	48 8b 05 76 70 02 00 	mov    0x27076(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066eb2:	8b 00                	mov    (%rax),%eax
 8066eb4:	83 f8 01             	cmp    $0x1,%eax
 8066eb7:	0f 84 17 00 00 00    	je     8066ed4 <expr_shift+0x3e>
 8066ebd:	48 8b 05 64 70 02 00 	mov    0x27064(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066ec4:	8b 00                	mov    (%rax),%eax
 8066ec6:	83 f8 02             	cmp    $0x2,%eax
 8066ec9:	0f 84 05 00 00 00    	je     8066ed4 <expr_shift+0x3e>
 8066ecf:	e9 32 00 00 00       	jmpq   8066f06 <expr_shift+0x70>
 8066ed4:	48 8b 05 4d 70 02 00 	mov    0x2704d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066edb:	8b 00                	mov    (%rax),%eax
 8066edd:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8066ee0:	b8 00 00 00 00       	mov    $0x0,%eax
 8066ee5:	e8 e0 17 ff ff       	callq  80586ca <next>
 8066eea:	b8 00 00 00 00       	mov    $0x0,%eax
 8066eef:	e8 30 ff ff ff       	callq  8066e24 <expr_sum>
 8066ef4:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8066ef7:	48 89 c7             	mov    %rax,%rdi
 8066efa:	b8 00 00 00 00       	mov    $0x0,%eax
 8066eff:	e8 bc 88 ff ff       	callq  805f7c0 <gen_op>
 8066f04:	eb a5                	jmp    8066eab <expr_shift+0x15>
 8066f06:	c9                   	leaveq 
 8066f07:	c3                   	retq   

0000000008066f08 <expr_cmp>:
 8066f08:	55                   	push   %rbp
 8066f09:	48 89 e5             	mov    %rsp,%rbp
 8066f0c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8066f13:	b8 00 00 00 00       	mov    $0x0,%eax
 8066f18:	e8 79 ff ff ff       	callq  8066e96 <expr_shift>
 8066f1d:	48 8b 05 04 70 02 00 	mov    0x27004(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066f24:	8b 00                	mov    (%rax),%eax
 8066f26:	81 f8 96 00 00 00    	cmp    $0x96,%eax
 8066f2c:	0f 8c 1a 00 00 00    	jl     8066f4c <expr_cmp+0x44>
 8066f32:	48 8b 05 ef 6f 02 00 	mov    0x26fef(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066f39:	8b 00                	mov    (%rax),%eax
 8066f3b:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 8066f41:	0f 8f 05 00 00 00    	jg     8066f4c <expr_cmp+0x44>
 8066f47:	e9 2f 00 00 00       	jmpq   8066f7b <expr_cmp+0x73>
 8066f4c:	48 8b 05 d5 6f 02 00 	mov    0x26fd5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066f53:	8b 00                	mov    (%rax),%eax
 8066f55:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 8066f5b:	0f 84 1a 00 00 00    	je     8066f7b <expr_cmp+0x73>
 8066f61:	48 8b 05 c0 6f 02 00 	mov    0x26fc0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066f68:	8b 00                	mov    (%rax),%eax
 8066f6a:	81 f8 93 00 00 00    	cmp    $0x93,%eax
 8066f70:	0f 84 05 00 00 00    	je     8066f7b <expr_cmp+0x73>
 8066f76:	e9 35 00 00 00       	jmpq   8066fb0 <expr_cmp+0xa8>
 8066f7b:	48 8b 05 a6 6f 02 00 	mov    0x26fa6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066f82:	8b 00                	mov    (%rax),%eax
 8066f84:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8066f87:	b8 00 00 00 00       	mov    $0x0,%eax
 8066f8c:	e8 39 17 ff ff       	callq  80586ca <next>
 8066f91:	b8 00 00 00 00       	mov    $0x0,%eax
 8066f96:	e8 fb fe ff ff       	callq  8066e96 <expr_shift>
 8066f9b:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8066f9e:	48 89 c7             	mov    %rax,%rdi
 8066fa1:	b8 00 00 00 00       	mov    $0x0,%eax
 8066fa6:	e8 15 88 ff ff       	callq  805f7c0 <gen_op>
 8066fab:	e9 6d ff ff ff       	jmpq   8066f1d <expr_cmp+0x15>
 8066fb0:	c9                   	leaveq 
 8066fb1:	c3                   	retq   

0000000008066fb2 <expr_cmpeq>:
 8066fb2:	55                   	push   %rbp
 8066fb3:	48 89 e5             	mov    %rsp,%rbp
 8066fb6:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8066fbd:	b8 00 00 00 00       	mov    $0x0,%eax
 8066fc2:	e8 41 ff ff ff       	callq  8066f08 <expr_cmp>
 8066fc7:	48 8b 05 5a 6f 02 00 	mov    0x26f5a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066fce:	8b 00                	mov    (%rax),%eax
 8066fd0:	81 f8 94 00 00 00    	cmp    $0x94,%eax
 8066fd6:	0f 84 1a 00 00 00    	je     8066ff6 <expr_cmpeq+0x44>
 8066fdc:	48 8b 05 45 6f 02 00 	mov    0x26f45(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066fe3:	8b 00                	mov    (%rax),%eax
 8066fe5:	81 f8 95 00 00 00    	cmp    $0x95,%eax
 8066feb:	0f 84 05 00 00 00    	je     8066ff6 <expr_cmpeq+0x44>
 8066ff1:	e9 32 00 00 00       	jmpq   8067028 <expr_cmpeq+0x76>
 8066ff6:	48 8b 05 2b 6f 02 00 	mov    0x26f2b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8066ffd:	8b 00                	mov    (%rax),%eax
 8066fff:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8067002:	b8 00 00 00 00       	mov    $0x0,%eax
 8067007:	e8 be 16 ff ff       	callq  80586ca <next>
 806700c:	b8 00 00 00 00       	mov    $0x0,%eax
 8067011:	e8 f2 fe ff ff       	callq  8066f08 <expr_cmp>
 8067016:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067019:	48 89 c7             	mov    %rax,%rdi
 806701c:	b8 00 00 00 00       	mov    $0x0,%eax
 8067021:	e8 9a 87 ff ff       	callq  805f7c0 <gen_op>
 8067026:	eb 9f                	jmp    8066fc7 <expr_cmpeq+0x15>
 8067028:	c9                   	leaveq 
 8067029:	c3                   	retq   

000000000806702a <expr_and>:
 806702a:	55                   	push   %rbp
 806702b:	48 89 e5             	mov    %rsp,%rbp
 806702e:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8067035:	b8 00 00 00 00       	mov    $0x0,%eax
 806703a:	e8 73 ff ff ff       	callq  8066fb2 <expr_cmpeq>
 806703f:	48 8b 05 e2 6e 02 00 	mov    0x26ee2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067046:	8b 00                	mov    (%rax),%eax
 8067048:	83 f8 26             	cmp    $0x26,%eax
 806704b:	0f 85 28 00 00 00    	jne    8067079 <expr_and+0x4f>
 8067051:	b8 00 00 00 00       	mov    $0x0,%eax
 8067056:	e8 6f 16 ff ff       	callq  80586ca <next>
 806705b:	b8 00 00 00 00       	mov    $0x0,%eax
 8067060:	e8 4d ff ff ff       	callq  8066fb2 <expr_cmpeq>
 8067065:	b8 26 00 00 00       	mov    $0x26,%eax
 806706a:	48 89 c7             	mov    %rax,%rdi
 806706d:	b8 00 00 00 00       	mov    $0x0,%eax
 8067072:	e8 49 87 ff ff       	callq  805f7c0 <gen_op>
 8067077:	eb c6                	jmp    806703f <expr_and+0x15>
 8067079:	c9                   	leaveq 
 806707a:	c3                   	retq   

000000000806707b <expr_xor>:
 806707b:	55                   	push   %rbp
 806707c:	48 89 e5             	mov    %rsp,%rbp
 806707f:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8067086:	b8 00 00 00 00       	mov    $0x0,%eax
 806708b:	e8 9a ff ff ff       	callq  806702a <expr_and>
 8067090:	48 8b 05 91 6e 02 00 	mov    0x26e91(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067097:	8b 00                	mov    (%rax),%eax
 8067099:	83 f8 5e             	cmp    $0x5e,%eax
 806709c:	0f 85 28 00 00 00    	jne    80670ca <expr_xor+0x4f>
 80670a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80670a7:	e8 1e 16 ff ff       	callq  80586ca <next>
 80670ac:	b8 00 00 00 00       	mov    $0x0,%eax
 80670b1:	e8 74 ff ff ff       	callq  806702a <expr_and>
 80670b6:	b8 5e 00 00 00       	mov    $0x5e,%eax
 80670bb:	48 89 c7             	mov    %rax,%rdi
 80670be:	b8 00 00 00 00       	mov    $0x0,%eax
 80670c3:	e8 f8 86 ff ff       	callq  805f7c0 <gen_op>
 80670c8:	eb c6                	jmp    8067090 <expr_xor+0x15>
 80670ca:	c9                   	leaveq 
 80670cb:	c3                   	retq   

00000000080670cc <expr_or>:
 80670cc:	55                   	push   %rbp
 80670cd:	48 89 e5             	mov    %rsp,%rbp
 80670d0:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 80670d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80670dc:	e8 9a ff ff ff       	callq  806707b <expr_xor>
 80670e1:	48 8b 05 40 6e 02 00 	mov    0x26e40(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80670e8:	8b 00                	mov    (%rax),%eax
 80670ea:	83 f8 7c             	cmp    $0x7c,%eax
 80670ed:	0f 85 28 00 00 00    	jne    806711b <expr_or+0x4f>
 80670f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80670f8:	e8 cd 15 ff ff       	callq  80586ca <next>
 80670fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8067102:	e8 74 ff ff ff       	callq  806707b <expr_xor>
 8067107:	b8 7c 00 00 00       	mov    $0x7c,%eax
 806710c:	48 89 c7             	mov    %rax,%rdi
 806710f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067114:	e8 a7 86 ff ff       	callq  805f7c0 <gen_op>
 8067119:	eb c6                	jmp    80670e1 <expr_or+0x15>
 806711b:	c9                   	leaveq 
 806711c:	c3                   	retq   

000000000806711d <expr_land_const>:
 806711d:	55                   	push   %rbp
 806711e:	48 89 e5             	mov    %rsp,%rbp
 8067121:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8067128:	b8 00 00 00 00       	mov    $0x0,%eax
 806712d:	e8 9a ff ff ff       	callq  80670cc <expr_or>
 8067132:	48 8b 05 ef 6d 02 00 	mov    0x26def(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067139:	8b 00                	mov    (%rax),%eax
 806713b:	81 f8 a0 00 00 00    	cmp    $0xa0,%eax
 8067141:	0f 85 28 00 00 00    	jne    806716f <expr_land_const+0x52>
 8067147:	b8 00 00 00 00       	mov    $0x0,%eax
 806714c:	e8 79 15 ff ff       	callq  80586ca <next>
 8067151:	b8 00 00 00 00       	mov    $0x0,%eax
 8067156:	e8 71 ff ff ff       	callq  80670cc <expr_or>
 806715b:	b8 a0 00 00 00       	mov    $0xa0,%eax
 8067160:	48 89 c7             	mov    %rax,%rdi
 8067163:	b8 00 00 00 00       	mov    $0x0,%eax
 8067168:	e8 53 86 ff ff       	callq  805f7c0 <gen_op>
 806716d:	eb c3                	jmp    8067132 <expr_land_const+0x15>
 806716f:	c9                   	leaveq 
 8067170:	c3                   	retq   

0000000008067171 <expr_lor_const>:
 8067171:	55                   	push   %rbp
 8067172:	48 89 e5             	mov    %rsp,%rbp
 8067175:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 806717c:	b8 00 00 00 00       	mov    $0x0,%eax
 8067181:	e8 97 ff ff ff       	callq  806711d <expr_land_const>
 8067186:	48 8b 05 9b 6d 02 00 	mov    0x26d9b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806718d:	8b 00                	mov    (%rax),%eax
 806718f:	81 f8 a1 00 00 00    	cmp    $0xa1,%eax
 8067195:	0f 85 28 00 00 00    	jne    80671c3 <expr_lor_const+0x52>
 806719b:	b8 00 00 00 00       	mov    $0x0,%eax
 80671a0:	e8 25 15 ff ff       	callq  80586ca <next>
 80671a5:	b8 00 00 00 00       	mov    $0x0,%eax
 80671aa:	e8 6e ff ff ff       	callq  806711d <expr_land_const>
 80671af:	b8 a1 00 00 00       	mov    $0xa1,%eax
 80671b4:	48 89 c7             	mov    %rax,%rdi
 80671b7:	b8 00 00 00 00       	mov    $0x0,%eax
 80671bc:	e8 ff 85 ff ff       	callq  805f7c0 <gen_op>
 80671c1:	eb c3                	jmp    8067186 <expr_lor_const+0x15>
 80671c3:	c9                   	leaveq 
 80671c4:	c3                   	retq   

00000000080671c5 <expr_land>:
 80671c5:	55                   	push   %rbp
 80671c6:	48 89 e5             	mov    %rsp,%rbp
 80671c9:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80671d0:	b8 00 00 00 00       	mov    $0x0,%eax
 80671d5:	e8 f2 fe ff ff       	callq  80670cc <expr_or>
 80671da:	48 8b 05 47 6d 02 00 	mov    0x26d47(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80671e1:	8b 00                	mov    (%rax),%eax
 80671e3:	81 f8 a0 00 00 00    	cmp    $0xa0,%eax
 80671e9:	0f 85 7d 00 00 00    	jne    806726c <expr_land+0xa7>
 80671ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80671f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80671f7:	b8 01 00 00 00       	mov    $0x1,%eax
 80671fc:	48 89 c7             	mov    %rax,%rdi
 80671ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8067204:	e8 33 63 ff ff       	callq  805d53c <save_regs>
 8067209:	8b 45 fc             	mov    -0x4(%rbp),%eax
 806720c:	48 89 c6             	mov    %rax,%rsi
 806720f:	b8 01 00 00 00       	mov    $0x1,%eax
 8067214:	48 89 c7             	mov    %rax,%rdi
 8067217:	b8 00 00 00 00       	mov    $0x0,%eax
 806721c:	e8 c6 96 01 00       	callq  80808e7 <gtst>
 8067221:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8067224:	48 8b 05 fd 6c 02 00 	mov    0x26cfd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806722b:	8b 00                	mov    (%rax),%eax
 806722d:	81 f8 a0 00 00 00    	cmp    $0xa0,%eax
 8067233:	0f 84 1d 00 00 00    	je     8067256 <expr_land+0x91>
 8067239:	8b 45 fc             	mov    -0x4(%rbp),%eax
 806723c:	48 89 c6             	mov    %rax,%rsi
 806723f:	b8 35 00 00 00       	mov    $0x35,%eax
 8067244:	48 89 c7             	mov    %rax,%rdi
 8067247:	b8 00 00 00 00       	mov    $0x0,%eax
 806724c:	e8 b7 5b ff ff       	callq  805ce08 <vseti>
 8067251:	e9 16 00 00 00       	jmpq   806726c <expr_land+0xa7>
 8067256:	b8 00 00 00 00       	mov    $0x0,%eax
 806725b:	e8 6a 14 ff ff       	callq  80586ca <next>
 8067260:	b8 00 00 00 00       	mov    $0x0,%eax
 8067265:	e8 62 fe ff ff       	callq  80670cc <expr_or>
 806726a:	eb 9d                	jmp    8067209 <expr_land+0x44>
 806726c:	c9                   	leaveq 
 806726d:	c3                   	retq   

000000000806726e <expr_lor>:
 806726e:	55                   	push   %rbp
 806726f:	48 89 e5             	mov    %rsp,%rbp
 8067272:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8067279:	b8 00 00 00 00       	mov    $0x0,%eax
 806727e:	e8 42 ff ff ff       	callq  80671c5 <expr_land>
 8067283:	48 8b 05 9e 6c 02 00 	mov    0x26c9e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806728a:	8b 00                	mov    (%rax),%eax
 806728c:	81 f8 a1 00 00 00    	cmp    $0xa1,%eax
 8067292:	0f 85 7d 00 00 00    	jne    8067315 <expr_lor+0xa7>
 8067298:	b8 00 00 00 00       	mov    $0x0,%eax
 806729d:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80672a0:	b8 01 00 00 00       	mov    $0x1,%eax
 80672a5:	48 89 c7             	mov    %rax,%rdi
 80672a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80672ad:	e8 8a 62 ff ff       	callq  805d53c <save_regs>
 80672b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 80672b5:	48 89 c6             	mov    %rax,%rsi
 80672b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80672bd:	48 89 c7             	mov    %rax,%rdi
 80672c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80672c5:	e8 1d 96 01 00       	callq  80808e7 <gtst>
 80672ca:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80672cd:	48 8b 05 54 6c 02 00 	mov    0x26c54(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80672d4:	8b 00                	mov    (%rax),%eax
 80672d6:	81 f8 a1 00 00 00    	cmp    $0xa1,%eax
 80672dc:	0f 84 1d 00 00 00    	je     80672ff <expr_lor+0x91>
 80672e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 80672e5:	48 89 c6             	mov    %rax,%rsi
 80672e8:	b8 34 00 00 00       	mov    $0x34,%eax
 80672ed:	48 89 c7             	mov    %rax,%rdi
 80672f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80672f5:	e8 0e 5b ff ff       	callq  805ce08 <vseti>
 80672fa:	e9 16 00 00 00       	jmpq   8067315 <expr_lor+0xa7>
 80672ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8067304:	e8 c1 13 ff ff       	callq  80586ca <next>
 8067309:	b8 00 00 00 00       	mov    $0x0,%eax
 806730e:	e8 b2 fe ff ff       	callq  80671c5 <expr_land>
 8067313:	eb 9d                	jmp    80672b2 <expr_lor+0x44>
 8067315:	c9                   	leaveq 
 8067316:	c3                   	retq   

0000000008067317 <expr_cond>:
 8067317:	55                   	push   %rbp
 8067318:	48 89 e5             	mov    %rsp,%rbp
 806731b:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
 8067322:	48 8b 05 df 6c 02 00 	mov    0x26cdf(%rip),%rax        # 808e008 <_GLOBAL_OFFSET_TABLE_+0x388>
 8067329:	8b 00                	mov    (%rax),%eax
 806732b:	85 c0                	test   %eax,%eax
 806732d:	0f 84 0a 01 00 00    	je     806743d <expr_cond+0x126>
 8067333:	b8 00 00 00 00       	mov    $0x0,%eax
 8067338:	e8 34 fe ff ff       	callq  8067171 <expr_lor_const>
 806733d:	48 8b 05 e4 6b 02 00 	mov    0x26be4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067344:	8b 00                	mov    (%rax),%eax
 8067346:	83 f8 3f             	cmp    $0x3f,%eax
 8067349:	0f 85 e9 00 00 00    	jne    8067438 <expr_cond+0x121>
 806734f:	b8 0b 00 00 00       	mov    $0xb,%eax
 8067354:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
 806735a:	b8 00 00 00 00       	mov    $0x0,%eax
 806735f:	e8 bc 5c ff ff       	callq  805d020 <vdup>
 8067364:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
 806736b:	48 89 c7             	mov    %rax,%rdi
 806736e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067373:	e8 1f 8f ff ff       	callq  8060297 <gen_cast>
 8067378:	48 8b 05 a1 6b 02 00 	mov    0x26ba1(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806737f:	48 8b 00             	mov    (%rax),%rax
 8067382:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8067389:	00 00 00 
 806738c:	48 01 c8             	add    %rcx,%rax
 806738f:	8b 08                	mov    (%rax),%ecx
 8067391:	89 8d 64 ff ff ff    	mov    %ecx,-0x9c(%rbp)
 8067397:	b8 00 00 00 00       	mov    $0x0,%eax
 806739c:	e8 51 6f ff ff       	callq  805e2f2 <vpop>
 80673a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80673a6:	e8 1f 13 ff ff       	callq  80586ca <next>
 80673ab:	48 8b 05 76 6b 02 00 	mov    0x26b76(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80673b2:	8b 00                	mov    (%rax),%eax
 80673b4:	83 f8 3a             	cmp    $0x3a,%eax
 80673b7:	0f 85 16 00 00 00    	jne    80673d3 <expr_cond+0xbc>
 80673bd:	48 8b 05 fc 6b 02 00 	mov    0x26bfc(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 80673c4:	8b 00                	mov    (%rax),%eax
 80673c6:	85 c0                	test   %eax,%eax
 80673c8:	0f 84 05 00 00 00    	je     80673d3 <expr_cond+0xbc>
 80673ce:	e9 14 00 00 00       	jmpq   80673e7 <expr_cond+0xd0>
 80673d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80673d8:	e8 15 6f ff ff       	callq  805e2f2 <vpop>
 80673dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80673e2:	e8 51 08 00 00       	callq  8067c38 <gexpr>
 80673e7:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 80673ed:	85 c0                	test   %eax,%eax
 80673ef:	0f 84 05 00 00 00    	je     80673fa <expr_cond+0xe3>
 80673f5:	e9 0a 00 00 00       	jmpq   8067404 <expr_cond+0xed>
 80673fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80673ff:	e8 ee 6e ff ff       	callq  805e2f2 <vpop>
 8067404:	b8 3a 00 00 00       	mov    $0x3a,%eax
 8067409:	48 89 c7             	mov    %rax,%rdi
 806740c:	b8 00 00 00 00       	mov    $0x0,%eax
 8067411:	e8 cd 9c fe ff       	callq  80510e3 <skip>
 8067416:	b8 00 00 00 00       	mov    $0x0,%eax
 806741b:	e8 f7 fe ff ff       	callq  8067317 <expr_cond>
 8067420:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 8067426:	85 c0                	test   %eax,%eax
 8067428:	0f 84 0a 00 00 00    	je     8067438 <expr_cond+0x121>
 806742e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067433:	e8 ba 6e ff ff       	callq  805e2f2 <vpop>
 8067438:	e9 dc 06 00 00       	jmpq   8067b19 <expr_cond+0x802>
 806743d:	b8 00 00 00 00       	mov    $0x0,%eax
 8067442:	e8 27 fe ff ff       	callq  806726e <expr_lor>
 8067447:	48 8b 05 da 6a 02 00 	mov    0x26ada(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806744e:	8b 00                	mov    (%rax),%eax
 8067450:	83 f8 3f             	cmp    $0x3f,%eax
 8067453:	0f 85 c0 06 00 00    	jne    8067b19 <expr_cond+0x802>
 8067459:	b8 00 00 00 00       	mov    $0x0,%eax
 806745e:	e8 67 12 ff ff       	callq  80586ca <next>
 8067463:	48 8b 05 b6 6a 02 00 	mov    0x26ab6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806746a:	48 8b 00             	mov    (%rax),%rax
 806746d:	48 8b 0d 74 6b 02 00 	mov    0x26b74(%rip),%rcx        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 8067474:	48 81 c1 30 00 00 00 	add    $0x30,%rcx
 806747b:	48 89 c2             	mov    %rax,%rdx
 806747e:	48 89 c8             	mov    %rcx,%rax
 8067481:	48 39 c2             	cmp    %rax,%rdx
 8067484:	0f 84 78 00 00 00    	je     8067502 <expr_cond+0x1eb>
 806748a:	48 8b 05 8f 6a 02 00 	mov    0x26a8f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067491:	48 8b 00             	mov    (%rax),%rax
 8067494:	8b 08                	mov    (%rax),%ecx
 8067496:	48 89 cf             	mov    %rcx,%rdi
 8067499:	b8 00 00 00 00       	mov    $0x0,%eax
 806749e:	e8 80 47 ff ff       	callq  805bc23 <is_float>
 80674a3:	85 c0                	test   %eax,%eax
 80674a5:	0f 84 2d 00 00 00    	je     80674d8 <expr_cond+0x1c1>
 80674ab:	b8 02 00 00 00       	mov    $0x2,%eax
 80674b0:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80674b3:	48 8b 05 66 6a 02 00 	mov    0x26a66(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80674ba:	48 8b 00             	mov    (%rax),%rax
 80674bd:	8b 08                	mov    (%rax),%ecx
 80674bf:	83 e1 0f             	and    $0xf,%ecx
 80674c2:	83 f9 0a             	cmp    $0xa,%ecx
 80674c5:	0f 85 08 00 00 00    	jne    80674d3 <expr_cond+0x1bc>
 80674cb:	b8 40 00 00 00       	mov    $0x40,%eax
 80674d0:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80674d3:	e9 08 00 00 00       	jmpq   80674e0 <expr_cond+0x1c9>
 80674d8:	b8 01 00 00 00       	mov    $0x1,%eax
 80674dd:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80674e0:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80674e3:	48 89 c7             	mov    %rax,%rdi
 80674e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80674eb:	e8 3a 62 ff ff       	callq  805d72a <gv>
 80674f0:	b8 01 00 00 00       	mov    $0x1,%eax
 80674f5:	48 89 c7             	mov    %rax,%rdi
 80674f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80674fd:	e8 3a 60 ff ff       	callq  805d53c <save_regs>
 8067502:	48 8b 05 1f 6a 02 00 	mov    0x26a1f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067509:	8b 00                	mov    (%rax),%eax
 806750b:	83 f8 3a             	cmp    $0x3a,%eax
 806750e:	0f 85 3d 00 00 00    	jne    8067551 <expr_cond+0x23a>
 8067514:	48 8b 05 a5 6a 02 00 	mov    0x26aa5(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 806751b:	8b 00                	mov    (%rax),%eax
 806751d:	85 c0                	test   %eax,%eax
 806751f:	0f 84 2c 00 00 00    	je     8067551 <expr_cond+0x23a>
 8067525:	b8 00 00 00 00       	mov    $0x0,%eax
 806752a:	e8 90 6e ff ff       	callq  805e3bf <gv_dup>
 806752f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067534:	48 89 c6             	mov    %rax,%rsi
 8067537:	b8 01 00 00 00       	mov    $0x1,%eax
 806753c:	48 89 c7             	mov    %rax,%rdi
 806753f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067544:	e8 9e 93 01 00       	callq  80808e7 <gtst>
 8067549:	89 45 fc             	mov    %eax,-0x4(%rbp)
 806754c:	e9 27 00 00 00       	jmpq   8067578 <expr_cond+0x261>
 8067551:	b8 00 00 00 00       	mov    $0x0,%eax
 8067556:	48 89 c6             	mov    %rax,%rsi
 8067559:	b8 01 00 00 00       	mov    $0x1,%eax
 806755e:	48 89 c7             	mov    %rax,%rdi
 8067561:	b8 00 00 00 00       	mov    $0x0,%eax
 8067566:	e8 7c 93 01 00       	callq  80808e7 <gtst>
 806756b:	89 45 fc             	mov    %eax,-0x4(%rbp)
 806756e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067573:	e8 c0 06 00 00       	callq  8067c38 <gexpr>
 8067578:	48 8b 05 a1 69 02 00 	mov    0x269a1(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806757f:	48 8b 00             	mov    (%rax),%rax
 8067582:	b9 10 00 00 00       	mov    $0x10,%ecx
 8067587:	49 89 ca             	mov    %rcx,%r10
 806758a:	48 89 c6             	mov    %rax,%rsi
 806758d:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
 8067591:	48 89 cf             	mov    %rcx,%rdi
 8067594:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 806759b:	4c 89 d2             	mov    %r10,%rdx
 806759e:	b8 00 00 00 00       	mov    $0x0,%eax
 80675a3:	e8 c8 f6 01 00       	callq  8086c70 <memcpy>
 80675a8:	48 8b 05 71 69 02 00 	mov    0x26971(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80675af:	48 8b 00             	mov    (%rax),%rax
 80675b2:	b9 30 00 00 00       	mov    $0x30,%ecx
 80675b7:	49 89 ca             	mov    %rcx,%r10
 80675ba:	48 89 c6             	mov    %rax,%rsi
 80675bd:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
 80675c1:	48 89 cf             	mov    %rcx,%rdi
 80675c4:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 80675cb:	4c 89 d2             	mov    %r10,%rdx
 80675ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80675d3:	e8 98 f6 01 00       	callq  8086c70 <memcpy>
 80675d8:	48 8b 05 41 69 02 00 	mov    0x26941(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80675df:	48 8b 00             	mov    (%rax),%rax
 80675e2:	48 89 c1             	mov    %rax,%rcx
 80675e5:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 80675ec:	ff ff ff 
 80675ef:	48 01 d0             	add    %rdx,%rax
 80675f2:	4c 8b 1d 27 69 02 00 	mov    0x26927(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80675f9:	49 89 03             	mov    %rax,(%r11)
 80675fc:	b8 3a 00 00 00       	mov    $0x3a,%eax
 8067601:	48 89 c7             	mov    %rax,%rdi
 8067604:	b8 00 00 00 00       	mov    $0x0,%eax
 8067609:	e8 d5 9a fe ff       	callq  80510e3 <skip>
 806760e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067613:	48 89 c7             	mov    %rax,%rdi
 8067616:	b8 00 00 00 00       	mov    $0x0,%eax
 806761b:	e8 11 92 01 00       	callq  8080831 <gjmp>
 8067620:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8067623:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067626:	48 89 c7             	mov    %rax,%rdi
 8067629:	b8 00 00 00 00       	mov    $0x0,%eax
 806762e:	e8 d8 68 01 00       	callq  807df0b <gsym>
 8067633:	b8 00 00 00 00       	mov    $0x0,%eax
 8067638:	e8 da fc ff ff       	callq  8067317 <expr_cond>
 806763d:	48 8b 05 dc 68 02 00 	mov    0x268dc(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067644:	48 8b 00             	mov    (%rax),%rax
 8067647:	b9 10 00 00 00       	mov    $0x10,%ecx
 806764c:	49 89 ca             	mov    %rcx,%r10
 806764f:	48 89 c6             	mov    %rax,%rsi
 8067652:	48 8d 8d 78 ff ff ff 	lea    -0x88(%rbp),%rcx
 8067659:	48 89 cf             	mov    %rcx,%rdi
 806765c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8067663:	4c 89 d2             	mov    %r10,%rdx
 8067666:	b8 00 00 00 00       	mov    $0x0,%eax
 806766b:	e8 00 f6 01 00       	callq  8086c70 <memcpy>
 8067670:	8b 45 88             	mov    -0x78(%rbp),%eax
 8067673:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8067676:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8067679:	83 e0 0f             	and    $0xf,%eax
 806767c:	89 45 e0             	mov    %eax,-0x20(%rbp)
 806767f:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8067685:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8067688:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806768b:	83 e0 0f             	and    $0xf,%eax
 806768e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8067691:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8067694:	48 89 c7             	mov    %rax,%rdi
 8067697:	b8 00 00 00 00       	mov    $0x0,%eax
 806769c:	e8 82 45 ff ff       	callq  805bc23 <is_float>
 80676a1:	85 c0                	test   %eax,%eax
 80676a3:	0f 85 1d 00 00 00    	jne    80676c6 <expr_cond+0x3af>
 80676a9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80676ac:	48 89 c7             	mov    %rax,%rdi
 80676af:	b8 00 00 00 00       	mov    $0x0,%eax
 80676b4:	e8 6a 45 ff ff       	callq  805bc23 <is_float>
 80676b9:	85 c0                	test   %eax,%eax
 80676bb:	0f 85 05 00 00 00    	jne    80676c6 <expr_cond+0x3af>
 80676c1:	e9 61 00 00 00       	jmpq   8067727 <expr_cond+0x410>
 80676c6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80676c9:	83 f8 0a             	cmp    $0xa,%eax
 80676cc:	0f 84 11 00 00 00    	je     80676e3 <expr_cond+0x3cc>
 80676d2:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80676d5:	83 f8 0a             	cmp    $0xa,%eax
 80676d8:	0f 84 05 00 00 00    	je     80676e3 <expr_cond+0x3cc>
 80676de:	e9 0d 00 00 00       	jmpq   80676f0 <expr_cond+0x3d9>
 80676e3:	b8 0a 00 00 00       	mov    $0xa,%eax
 80676e8:	89 45 98             	mov    %eax,-0x68(%rbp)
 80676eb:	e9 32 00 00 00       	jmpq   8067722 <expr_cond+0x40b>
 80676f0:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80676f3:	83 f8 09             	cmp    $0x9,%eax
 80676f6:	0f 84 11 00 00 00    	je     806770d <expr_cond+0x3f6>
 80676fc:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80676ff:	83 f8 09             	cmp    $0x9,%eax
 8067702:	0f 84 05 00 00 00    	je     806770d <expr_cond+0x3f6>
 8067708:	e9 0d 00 00 00       	jmpq   806771a <expr_cond+0x403>
 806770d:	b8 09 00 00 00       	mov    $0x9,%eax
 8067712:	89 45 98             	mov    %eax,-0x68(%rbp)
 8067715:	e9 08 00 00 00       	jmpq   8067722 <expr_cond+0x40b>
 806771a:	b8 08 00 00 00       	mov    $0x8,%eax
 806771f:	89 45 98             	mov    %eax,-0x68(%rbp)
 8067722:	e9 6a 02 00 00       	jmpq   8067991 <expr_cond+0x67a>
 8067727:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806772a:	83 f8 0c             	cmp    $0xc,%eax
 806772d:	0f 84 11 00 00 00    	je     8067744 <expr_cond+0x42d>
 8067733:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8067736:	83 f8 0c             	cmp    $0xc,%eax
 8067739:	0f 84 05 00 00 00    	je     8067744 <expr_cond+0x42d>
 806773f:	e9 39 00 00 00       	jmpq   806777d <expr_cond+0x466>
 8067744:	b8 0c 00 00 00       	mov    $0xc,%eax
 8067749:	89 45 98             	mov    %eax,-0x68(%rbp)
 806774c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806774f:	83 e0 1f             	and    $0x1f,%eax
 8067752:	83 f8 1c             	cmp    $0x1c,%eax
 8067755:	0f 84 14 00 00 00    	je     806776f <expr_cond+0x458>
 806775b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806775e:	83 e0 1f             	and    $0x1f,%eax
 8067761:	83 f8 1c             	cmp    $0x1c,%eax
 8067764:	0f 84 05 00 00 00    	je     806776f <expr_cond+0x458>
 806776a:	e9 09 00 00 00       	jmpq   8067778 <expr_cond+0x461>
 806776f:	8b 45 98             	mov    -0x68(%rbp),%eax
 8067772:	83 c8 10             	or     $0x10,%eax
 8067775:	89 45 98             	mov    %eax,-0x68(%rbp)
 8067778:	e9 14 02 00 00       	jmpq   8067991 <expr_cond+0x67a>
 806777d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8067780:	83 f8 04             	cmp    $0x4,%eax
 8067783:	0f 84 11 00 00 00    	je     806779a <expr_cond+0x483>
 8067789:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806778c:	83 f8 04             	cmp    $0x4,%eax
 806778f:	0f 84 05 00 00 00    	je     806779a <expr_cond+0x483>
 8067795:	e9 b3 00 00 00       	jmpq   806784d <expr_cond+0x536>
 806779a:	48 8b 05 7f 67 02 00 	mov    0x2677f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80677a1:	48 8b 00             	mov    (%rax),%rax
 80677a4:	48 89 c7             	mov    %rax,%rdi
 80677a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80677ac:	e8 6c 5d 00 00       	callq  806d51d <is_null_pointer>
 80677b1:	85 c0                	test   %eax,%eax
 80677b3:	0f 84 28 00 00 00    	je     80677e1 <expr_cond+0x4ca>
 80677b9:	b8 10 00 00 00       	mov    $0x10,%eax
 80677be:	49 89 c2             	mov    %rax,%r10
 80677c1:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 80677c5:	48 89 c6             	mov    %rax,%rsi
 80677c8:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 80677cc:	48 89 c7             	mov    %rax,%rdi
 80677cf:	4c 89 d2             	mov    %r10,%rdx
 80677d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80677d7:	e8 94 f4 01 00       	callq  8086c70 <memcpy>
 80677dc:	e9 67 00 00 00       	jmpq   8067848 <expr_cond+0x531>
 80677e1:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 80677e5:	48 89 c7             	mov    %rax,%rdi
 80677e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80677ed:	e8 2b 5d 00 00       	callq  806d51d <is_null_pointer>
 80677f2:	85 c0                	test   %eax,%eax
 80677f4:	0f 84 2b 00 00 00    	je     8067825 <expr_cond+0x50e>
 80677fa:	b8 10 00 00 00       	mov    $0x10,%eax
 80677ff:	49 89 c2             	mov    %rax,%r10
 8067802:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8067809:	48 89 c6             	mov    %rax,%rsi
 806780c:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8067810:	48 89 c7             	mov    %rax,%rdi
 8067813:	4c 89 d2             	mov    %r10,%rdx
 8067816:	b8 00 00 00 00       	mov    $0x0,%eax
 806781b:	e8 50 f4 01 00       	callq  8086c70 <memcpy>
 8067820:	e9 23 00 00 00       	jmpq   8067848 <expr_cond+0x531>
 8067825:	b8 10 00 00 00       	mov    $0x10,%eax
 806782a:	49 89 c2             	mov    %rax,%r10
 806782d:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 8067831:	48 89 c6             	mov    %rax,%rsi
 8067834:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8067838:	48 89 c7             	mov    %rax,%rdi
 806783b:	4c 89 d2             	mov    %r10,%rdx
 806783e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067843:	e8 28 f4 01 00       	callq  8086c70 <memcpy>
 8067848:	e9 44 01 00 00       	jmpq   8067991 <expr_cond+0x67a>
 806784d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8067850:	83 f8 06             	cmp    $0x6,%eax
 8067853:	0f 84 11 00 00 00    	je     806786a <expr_cond+0x553>
 8067859:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806785c:	83 f8 06             	cmp    $0x6,%eax
 806785f:	0f 84 05 00 00 00    	je     806786a <expr_cond+0x553>
 8067865:	e9 56 00 00 00       	jmpq   80678c0 <expr_cond+0x5a9>
 806786a:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806786d:	83 f8 06             	cmp    $0x6,%eax
 8067870:	b8 00 00 00 00       	mov    $0x0,%eax
 8067875:	0f 94 c0             	sete   %al
 8067878:	85 c0                	test   %eax,%eax
 806787a:	0f 84 05 00 00 00    	je     8067885 <expr_cond+0x56e>
 8067880:	e9 0c 00 00 00       	jmpq   8067891 <expr_cond+0x57a>
 8067885:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 806788c:	e9 04 00 00 00       	jmpq   8067895 <expr_cond+0x57e>
 8067891:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 8067895:	b9 10 00 00 00       	mov    $0x10,%ecx
 806789a:	49 89 ca             	mov    %rcx,%r10
 806789d:	48 89 c6             	mov    %rax,%rsi
 80678a0:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 80678a4:	48 89 cf             	mov    %rcx,%rdi
 80678a7:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 80678ae:	4c 89 d2             	mov    %r10,%rdx
 80678b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80678b6:	e8 b5 f3 01 00       	callq  8086c70 <memcpy>
 80678bb:	e9 d1 00 00 00       	jmpq   8067991 <expr_cond+0x67a>
 80678c0:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80678c3:	83 f8 07             	cmp    $0x7,%eax
 80678c6:	0f 84 11 00 00 00    	je     80678dd <expr_cond+0x5c6>
 80678cc:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80678cf:	83 f8 07             	cmp    $0x7,%eax
 80678d2:	0f 84 05 00 00 00    	je     80678dd <expr_cond+0x5c6>
 80678d8:	e9 56 00 00 00       	jmpq   8067933 <expr_cond+0x61c>
 80678dd:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80678e0:	83 f8 07             	cmp    $0x7,%eax
 80678e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80678e8:	0f 94 c0             	sete   %al
 80678eb:	85 c0                	test   %eax,%eax
 80678ed:	0f 84 05 00 00 00    	je     80678f8 <expr_cond+0x5e1>
 80678f3:	e9 0c 00 00 00       	jmpq   8067904 <expr_cond+0x5ed>
 80678f8:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 80678ff:	e9 04 00 00 00       	jmpq   8067908 <expr_cond+0x5f1>
 8067904:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 8067908:	b9 10 00 00 00       	mov    $0x10,%ecx
 806790d:	49 89 ca             	mov    %rcx,%r10
 8067910:	48 89 c6             	mov    %rax,%rsi
 8067913:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 8067917:	48 89 cf             	mov    %rcx,%rdi
 806791a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
 8067921:	4c 89 d2             	mov    %r10,%rdx
 8067924:	b8 00 00 00 00       	mov    $0x0,%eax
 8067929:	e8 42 f3 01 00       	callq  8086c70 <memcpy>
 806792e:	e9 5e 00 00 00       	jmpq   8067991 <expr_cond+0x67a>
 8067933:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8067936:	83 f8 03             	cmp    $0x3,%eax
 8067939:	0f 84 11 00 00 00    	je     8067950 <expr_cond+0x639>
 806793f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8067942:	83 f8 03             	cmp    $0x3,%eax
 8067945:	0f 84 05 00 00 00    	je     8067950 <expr_cond+0x639>
 806794b:	e9 0d 00 00 00       	jmpq   806795d <expr_cond+0x646>
 8067950:	b8 03 00 00 00       	mov    $0x3,%eax
 8067955:	89 45 98             	mov    %eax,-0x68(%rbp)
 8067958:	e9 34 00 00 00       	jmpq   8067991 <expr_cond+0x67a>
 806795d:	b8 00 00 00 00       	mov    $0x0,%eax
 8067962:	89 45 98             	mov    %eax,-0x68(%rbp)
 8067965:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8067968:	83 e0 1f             	and    $0x1f,%eax
 806796b:	83 f8 10             	cmp    $0x10,%eax
 806796e:	0f 84 14 00 00 00    	je     8067988 <expr_cond+0x671>
 8067974:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8067977:	83 e0 1f             	and    $0x1f,%eax
 806797a:	83 f8 10             	cmp    $0x10,%eax
 806797d:	0f 84 05 00 00 00    	je     8067988 <expr_cond+0x671>
 8067983:	e9 09 00 00 00       	jmpq   8067991 <expr_cond+0x67a>
 8067988:	8b 45 98             	mov    -0x68(%rbp),%eax
 806798b:	83 c8 10             	or     $0x10,%eax
 806798e:	89 45 98             	mov    %eax,-0x68(%rbp)
 8067991:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8067995:	48 89 c7             	mov    %rax,%rdi
 8067998:	b8 00 00 00 00       	mov    $0x0,%eax
 806799d:	e8 f5 88 ff ff       	callq  8060297 <gen_cast>
 80679a2:	48 8b 05 77 65 02 00 	mov    0x26577(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80679a9:	48 8b 00             	mov    (%rax),%rax
 80679ac:	8b 08                	mov    (%rax),%ecx
 80679ae:	83 e1 0f             	and    $0xf,%ecx
 80679b1:	b8 07 00 00 00       	mov    $0x7,%eax
 80679b6:	39 c8                	cmp    %ecx,%eax
 80679b8:	0f 85 0a 00 00 00    	jne    80679c8 <expr_cond+0x6b1>
 80679be:	b8 00 00 00 00       	mov    $0x0,%eax
 80679c3:	e8 92 5c ff ff       	callq  805d65a <gaddrof>
 80679c8:	b8 01 00 00 00       	mov    $0x1,%eax
 80679cd:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80679d0:	8b 45 98             	mov    -0x68(%rbp),%eax
 80679d3:	48 89 c7             	mov    %rax,%rdi
 80679d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80679db:	e8 43 42 ff ff       	callq  805bc23 <is_float>
 80679e0:	85 c0                	test   %eax,%eax
 80679e2:	0f 84 24 00 00 00    	je     8067a0c <expr_cond+0x6f5>
 80679e8:	b8 02 00 00 00       	mov    $0x2,%eax
 80679ed:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80679f0:	8b 45 98             	mov    -0x68(%rbp),%eax
 80679f3:	83 e0 0f             	and    $0xf,%eax
 80679f6:	83 f8 0a             	cmp    $0xa,%eax
 80679f9:	0f 85 08 00 00 00    	jne    8067a07 <expr_cond+0x6f0>
 80679ff:	b8 40 00 00 00       	mov    $0x40,%eax
 8067a04:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8067a07:	e9 17 00 00 00       	jmpq   8067a23 <expr_cond+0x70c>
 8067a0c:	8b 45 98             	mov    -0x68(%rbp),%eax
 8067a0f:	83 e0 0f             	and    $0xf,%eax
 8067a12:	83 f8 0c             	cmp    $0xc,%eax
 8067a15:	0f 85 08 00 00 00    	jne    8067a23 <expr_cond+0x70c>
 8067a1b:	b8 04 00 00 00       	mov    $0x4,%eax
 8067a20:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8067a23:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8067a26:	48 89 c7             	mov    %rax,%rdi
 8067a29:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a2e:	e8 f7 5c ff ff       	callq  805d72a <gv>
 8067a33:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8067a36:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a3b:	48 89 c7             	mov    %rax,%rdi
 8067a3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a43:	e8 e9 8d 01 00       	callq  8080831 <gjmp>
 8067a48:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8067a4b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8067a4e:	48 89 c7             	mov    %rax,%rdi
 8067a51:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a56:	e8 b0 64 01 00       	callq  807df0b <gsym>
 8067a5b:	48 8b 05 be 64 02 00 	mov    0x264be(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067a62:	48 8b 00             	mov    (%rax),%rax
 8067a65:	b9 30 00 00 00       	mov    $0x30,%ecx
 8067a6a:	49 89 ca             	mov    %rcx,%r10
 8067a6d:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
 8067a71:	48 89 ce             	mov    %rcx,%rsi
 8067a74:	48 89 c7             	mov    %rax,%rdi
 8067a77:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 8067a7e:	4c 89 d2             	mov    %r10,%rdx
 8067a81:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a86:	e8 e5 f1 01 00       	callq  8086c70 <memcpy>
 8067a8b:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8067a8f:	48 89 c7             	mov    %rax,%rdi
 8067a92:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a97:	e8 fb 87 ff ff       	callq  8060297 <gen_cast>
 8067a9c:	48 8b 05 7d 64 02 00 	mov    0x2647d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067aa3:	48 8b 00             	mov    (%rax),%rax
 8067aa6:	8b 08                	mov    (%rax),%ecx
 8067aa8:	83 e1 0f             	and    $0xf,%ecx
 8067aab:	b8 07 00 00 00       	mov    $0x7,%eax
 8067ab0:	39 c8                	cmp    %ecx,%eax
 8067ab2:	0f 85 0a 00 00 00    	jne    8067ac2 <expr_cond+0x7ab>
 8067ab8:	b8 00 00 00 00       	mov    $0x0,%eax
 8067abd:	e8 98 5b ff ff       	callq  805d65a <gaddrof>
 8067ac2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8067ac5:	48 89 c7             	mov    %rax,%rdi
 8067ac8:	b8 00 00 00 00       	mov    $0x0,%eax
 8067acd:	e8 58 5c ff ff       	callq  805d72a <gv>
 8067ad2:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8067ad5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8067ad8:	48 89 c6             	mov    %rax,%rsi
 8067adb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8067ade:	48 89 c7             	mov    %rax,%rdi
 8067ae1:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ae6:	e8 0d 5b ff ff       	callq  805d5f8 <move_reg>
 8067aeb:	48 8b 05 2e 64 02 00 	mov    0x2642e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067af2:	48 8b 00             	mov    (%rax),%rax
 8067af5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8067afc:	00 00 00 
 8067aff:	48 01 c8             	add    %rcx,%rax
 8067b02:	0f b7 4d f0          	movzwl -0x10(%rbp),%ecx
 8067b06:	66 89 08             	mov    %cx,(%rax)
 8067b09:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067b0c:	48 89 c7             	mov    %rax,%rdi
 8067b0f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067b14:	e8 f2 63 01 00       	callq  807df0b <gsym>
 8067b19:	c9                   	leaveq 
 8067b1a:	c3                   	retq   

0000000008067b1b <expr_eq>:
 8067b1b:	55                   	push   %rbp
 8067b1c:	48 89 e5             	mov    %rsp,%rbp
 8067b1f:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8067b26:	b8 00 00 00 00       	mov    $0x0,%eax
 8067b2b:	e8 e7 f7 ff ff       	callq  8067317 <expr_cond>
 8067b30:	48 8b 05 f1 63 02 00 	mov    0x263f1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067b37:	8b 00                	mov    (%rax),%eax
 8067b39:	83 f8 3d             	cmp    $0x3d,%eax
 8067b3c:	0f 84 88 00 00 00    	je     8067bca <expr_eq+0xaf>
 8067b42:	48 8b 05 df 63 02 00 	mov    0x263df(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067b49:	8b 00                	mov    (%rax),%eax
 8067b4b:	81 f8 a5 00 00 00    	cmp    $0xa5,%eax
 8067b51:	0f 8c 1a 00 00 00    	jl     8067b71 <expr_eq+0x56>
 8067b57:	48 8b 05 ca 63 02 00 	mov    0x263ca(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067b5e:	8b 00                	mov    (%rax),%eax
 8067b60:	81 f8 af 00 00 00    	cmp    $0xaf,%eax
 8067b66:	0f 8f 05 00 00 00    	jg     8067b71 <expr_eq+0x56>
 8067b6c:	e9 59 00 00 00       	jmpq   8067bca <expr_eq+0xaf>
 8067b71:	48 8b 05 b0 63 02 00 	mov    0x263b0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067b78:	8b 00                	mov    (%rax),%eax
 8067b7a:	81 f8 de 00 00 00    	cmp    $0xde,%eax
 8067b80:	0f 84 44 00 00 00    	je     8067bca <expr_eq+0xaf>
 8067b86:	48 8b 05 9b 63 02 00 	mov    0x2639b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067b8d:	8b 00                	mov    (%rax),%eax
 8067b8f:	81 f8 fc 00 00 00    	cmp    $0xfc,%eax
 8067b95:	0f 84 2f 00 00 00    	je     8067bca <expr_eq+0xaf>
 8067b9b:	48 8b 05 86 63 02 00 	mov    0x26386(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067ba2:	8b 00                	mov    (%rax),%eax
 8067ba4:	81 f8 81 00 00 00    	cmp    $0x81,%eax
 8067baa:	0f 84 1a 00 00 00    	je     8067bca <expr_eq+0xaf>
 8067bb0:	48 8b 05 71 63 02 00 	mov    0x26371(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067bb7:	8b 00                	mov    (%rax),%eax
 8067bb9:	81 f8 82 00 00 00    	cmp    $0x82,%eax
 8067bbf:	0f 84 05 00 00 00    	je     8067bca <expr_eq+0xaf>
 8067bc5:	e9 6c 00 00 00       	jmpq   8067c36 <expr_eq+0x11b>
 8067bca:	b8 00 00 00 00       	mov    $0x0,%eax
 8067bcf:	e8 df 40 ff ff       	callq  805bcb3 <test_lvalue>
 8067bd4:	48 8b 05 4d 63 02 00 	mov    0x2634d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067bdb:	8b 00                	mov    (%rax),%eax
 8067bdd:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8067be0:	b8 00 00 00 00       	mov    $0x0,%eax
 8067be5:	e8 e0 0a ff ff       	callq  80586ca <next>
 8067bea:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067bed:	83 f8 3d             	cmp    $0x3d,%eax
 8067bf0:	0f 85 0f 00 00 00    	jne    8067c05 <expr_eq+0xea>
 8067bf6:	b8 00 00 00 00       	mov    $0x0,%eax
 8067bfb:	e8 1b ff ff ff       	callq  8067b1b <expr_eq>
 8067c00:	e9 27 00 00 00       	jmpq   8067c2c <expr_eq+0x111>
 8067c05:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c0a:	e8 11 54 ff ff       	callq  805d020 <vdup>
 8067c0f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c14:	e8 02 ff ff ff       	callq  8067b1b <expr_eq>
 8067c19:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067c1c:	83 e0 7f             	and    $0x7f,%eax
 8067c1f:	48 89 c7             	mov    %rax,%rdi
 8067c22:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c27:	e8 94 7b ff ff       	callq  805f7c0 <gen_op>
 8067c2c:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c31:	e8 e0 a3 ff ff       	callq  8062016 <vstore>
 8067c36:	c9                   	leaveq 
 8067c37:	c3                   	retq   

0000000008067c38 <gexpr>:
 8067c38:	55                   	push   %rbp
 8067c39:	48 89 e5             	mov    %rsp,%rbp
 8067c3c:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8067c43:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c48:	e8 ce fe ff ff       	callq  8067b1b <expr_eq>
 8067c4d:	48 8b 05 d4 62 02 00 	mov    0x262d4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067c54:	8b 00                	mov    (%rax),%eax
 8067c56:	83 f8 2c             	cmp    $0x2c,%eax
 8067c59:	0f 84 05 00 00 00    	je     8067c64 <gexpr+0x2c>
 8067c5f:	e9 16 00 00 00       	jmpq   8067c7a <gexpr+0x42>
 8067c64:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c69:	e8 84 66 ff ff       	callq  805e2f2 <vpop>
 8067c6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c73:	e8 52 0a ff ff       	callq  80586ca <next>
 8067c78:	eb c9                	jmp    8067c43 <gexpr+0xb>
 8067c7a:	c9                   	leaveq 
 8067c7b:	c3                   	retq   

0000000008067c7c <expr_type>:
 8067c7c:	55                   	push   %rbp
 8067c7d:	48 89 e5             	mov    %rsp,%rbp
 8067c80:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8067c87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8067c8b:	48 8b 05 6e 62 02 00 	mov    0x2626e(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8067c92:	8b 00                	mov    (%rax),%eax
 8067c94:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8067c97:	b8 01 00 00 00       	mov    $0x1,%eax
 8067c9c:	4c 8b 1d 5d 62 02 00 	mov    0x2625d(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8067ca3:	41 89 03             	mov    %eax,(%r11)
 8067ca6:	b8 00 00 00 00       	mov    $0x0,%eax
 8067cab:	e8 88 ff ff ff       	callq  8067c38 <gexpr>
 8067cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8067cb4:	48 8b 0d 65 62 02 00 	mov    0x26265(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067cbb:	48 8b 09             	mov    (%rcx),%rcx
 8067cbe:	ba 10 00 00 00       	mov    $0x10,%edx
 8067cc3:	49 89 d2             	mov    %rdx,%r10
 8067cc6:	48 89 ce             	mov    %rcx,%rsi
 8067cc9:	48 89 c7             	mov    %rax,%rdi
 8067ccc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8067cd0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8067cd4:	4c 89 d2             	mov    %r10,%rdx
 8067cd7:	b8 00 00 00 00       	mov    $0x0,%eax
 8067cdc:	e8 8f ef 01 00       	callq  8086c70 <memcpy>
 8067ce1:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ce6:	e8 07 66 ff ff       	callq  805e2f2 <vpop>
 8067ceb:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8067cee:	4c 8b 1d 0b 62 02 00 	mov    0x2620b(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8067cf5:	41 89 03             	mov    %eax,(%r11)
 8067cf8:	c9                   	leaveq 
 8067cf9:	c3                   	retq   

0000000008067cfa <unary_type>:
 8067cfa:	55                   	push   %rbp
 8067cfb:	48 89 e5             	mov    %rsp,%rbp
 8067cfe:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8067d05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8067d09:	48 8b 05 f0 61 02 00 	mov    0x261f0(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8067d10:	8b 00                	mov    (%rax),%eax
 8067d12:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8067d15:	b8 01 00 00 00       	mov    $0x1,%eax
 8067d1a:	4c 8b 1d df 61 02 00 	mov    0x261df(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8067d21:	41 89 03             	mov    %eax,(%r11)
 8067d24:	b8 00 00 00 00       	mov    $0x0,%eax
 8067d29:	e8 b6 d4 ff ff       	callq  80651e4 <unary>
 8067d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8067d32:	48 8b 0d e7 61 02 00 	mov    0x261e7(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067d39:	48 8b 09             	mov    (%rcx),%rcx
 8067d3c:	ba 10 00 00 00       	mov    $0x10,%edx
 8067d41:	49 89 d2             	mov    %rdx,%r10
 8067d44:	48 89 ce             	mov    %rcx,%rsi
 8067d47:	48 89 c7             	mov    %rax,%rdi
 8067d4a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8067d4e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8067d52:	4c 89 d2             	mov    %r10,%rdx
 8067d55:	b8 00 00 00 00       	mov    $0x0,%eax
 8067d5a:	e8 11 ef 01 00       	callq  8086c70 <memcpy>
 8067d5f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067d64:	e8 89 65 ff ff       	callq  805e2f2 <vpop>
 8067d69:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8067d6c:	4c 8b 1d 8d 61 02 00 	mov    0x2618d(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 8067d73:	41 89 03             	mov    %eax,(%r11)
 8067d76:	c9                   	leaveq 
 8067d77:	c3                   	retq   

0000000008067d78 <expr_const1>:
 8067d78:	55                   	push   %rbp
 8067d79:	48 89 e5             	mov    %rsp,%rbp
 8067d7c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8067d83:	48 8b 05 7e 62 02 00 	mov    0x2627e(%rip),%rax        # 808e008 <_GLOBAL_OFFSET_TABLE_+0x388>
 8067d8a:	8b 00                	mov    (%rax),%eax
 8067d8c:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8067d8f:	b8 01 00 00 00       	mov    $0x1,%eax
 8067d94:	4c 8b 1d 6d 62 02 00 	mov    0x2626d(%rip),%r11        # 808e008 <_GLOBAL_OFFSET_TABLE_+0x388>
 8067d9b:	41 89 03             	mov    %eax,(%r11)
 8067d9e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067da3:	e8 6f f5 ff ff       	callq  8067317 <expr_cond>
 8067da8:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067dab:	4c 8b 1d 56 62 02 00 	mov    0x26256(%rip),%r11        # 808e008 <_GLOBAL_OFFSET_TABLE_+0x388>
 8067db2:	41 89 03             	mov    %eax,(%r11)
 8067db5:	c9                   	leaveq 
 8067db6:	c3                   	retq   

0000000008067db7 <expr_const>:
 8067db7:	55                   	push   %rbp
 8067db8:	48 89 e5             	mov    %rsp,%rbp
 8067dbb:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8067dc2:	b8 00 00 00 00       	mov    $0x0,%eax
 8067dc7:	e8 ac ff ff ff       	callq  8067d78 <expr_const1>
 8067dcc:	48 8b 05 4d 61 02 00 	mov    0x2614d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067dd3:	48 8b 00             	mov    (%rax),%rax
 8067dd6:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8067ddd:	00 00 00 
 8067de0:	48 01 c8             	add    %rcx,%rax
 8067de3:	0f b7 08             	movzwl (%rax),%ecx
 8067de6:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 8067dec:	83 f9 30             	cmp    $0x30,%ecx
 8067def:	0f 84 14 00 00 00    	je     8067e09 <expr_const+0x52>
 8067df5:	48 8d 05 ef 41 02 00 	lea    0x241ef(%rip),%rax        # 808bfeb <L.194>
 8067dfc:	48 89 c7             	mov    %rax,%rdi
 8067dff:	b8 00 00 00 00       	mov    $0x0,%eax
 8067e04:	e8 49 93 fe ff       	callq  8051152 <expect>
 8067e09:	48 8b 05 10 61 02 00 	mov    0x26110(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8067e10:	48 8b 00             	mov    (%rax),%rax
 8067e13:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8067e1a:	00 00 00 
 8067e1d:	48 01 c8             	add    %rcx,%rax
 8067e20:	8b 08                	mov    (%rax),%ecx
 8067e22:	89 4d fc             	mov    %ecx,-0x4(%rbp)
 8067e25:	b8 00 00 00 00       	mov    $0x0,%eax
 8067e2a:	e8 c3 64 ff ff       	callq  805e2f2 <vpop>
 8067e2f:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067e32:	e9 00 00 00 00       	jmpq   8067e37 <expr_const+0x80>
 8067e37:	c9                   	leaveq 
 8067e38:	c3                   	retq   

0000000008067e39 <is_label>:
 8067e39:	55                   	push   %rbp
 8067e3a:	48 89 e5             	mov    %rsp,%rbp
 8067e3d:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8067e44:	48 8b 05 dd 60 02 00 	mov    0x260dd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067e4b:	8b 00                	mov    (%rax),%eax
 8067e4d:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 8067e53:	0f 8d 0a 00 00 00    	jge    8067e63 <is_label+0x2a>
 8067e59:	b8 00 00 00 00       	mov    $0x0,%eax
 8067e5e:	e9 59 00 00 00       	jmpq   8067ebc <is_label+0x83>
 8067e63:	48 8b 05 be 60 02 00 	mov    0x260be(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067e6a:	8b 00                	mov    (%rax),%eax
 8067e6c:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8067e6f:	b8 00 00 00 00       	mov    $0x0,%eax
 8067e74:	e8 51 08 ff ff       	callq  80586ca <next>
 8067e79:	48 8b 05 a8 60 02 00 	mov    0x260a8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067e80:	8b 00                	mov    (%rax),%eax
 8067e82:	83 f8 3a             	cmp    $0x3a,%eax
 8067e85:	0f 85 17 00 00 00    	jne    8067ea2 <is_label+0x69>
 8067e8b:	b8 00 00 00 00       	mov    $0x0,%eax
 8067e90:	e8 35 08 ff ff       	callq  80586ca <next>
 8067e95:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067e98:	e9 1f 00 00 00       	jmpq   8067ebc <is_label+0x83>
 8067e9d:	e9 1a 00 00 00       	jmpq   8067ebc <is_label+0x83>
 8067ea2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8067ea5:	48 89 c7             	mov    %rax,%rdi
 8067ea8:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ead:	e8 3a 0a ff ff       	callq  80588ec <unget_tok>
 8067eb2:	b8 00 00 00 00       	mov    $0x0,%eax
 8067eb7:	e9 00 00 00 00       	jmpq   8067ebc <is_label+0x83>
 8067ebc:	c9                   	leaveq 
 8067ebd:	c3                   	retq   

0000000008067ebe <label_or_decl>:
 8067ebe:	55                   	push   %rbp
 8067ebf:	48 89 e5             	mov    %rsp,%rbp
 8067ec2:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8067ec9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8067ecd:	48 8b 05 54 60 02 00 	mov    0x26054(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067ed4:	8b 00                	mov    (%rax),%eax
 8067ed6:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 8067edc:	0f 8c 4d 00 00 00    	jl     8067f2f <label_or_decl+0x71>
 8067ee2:	48 8b 05 3f 60 02 00 	mov    0x2603f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067ee9:	8b 00                	mov    (%rax),%eax
 8067eeb:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8067eee:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ef3:	e8 d2 07 ff ff       	callq  80586ca <next>
 8067ef8:	48 8b 05 29 60 02 00 	mov    0x26029(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8067eff:	8b 00                	mov    (%rax),%eax
 8067f01:	83 f8 3a             	cmp    $0x3a,%eax
 8067f04:	0f 85 15 00 00 00    	jne    8067f1f <label_or_decl+0x61>
 8067f0a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8067f0d:	48 89 c7             	mov    %rax,%rdi
 8067f10:	b8 00 00 00 00       	mov    $0x0,%eax
 8067f15:	e8 d2 09 ff ff       	callq  80588ec <unget_tok>
 8067f1a:	e9 20 00 00 00       	jmpq   8067f3f <label_or_decl+0x81>
 8067f1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8067f22:	48 89 c7             	mov    %rax,%rdi
 8067f25:	b8 00 00 00 00       	mov    $0x0,%eax
 8067f2a:	e8 bd 09 ff ff       	callq  80588ec <unget_tok>
 8067f2f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8067f32:	48 89 c7             	mov    %rax,%rdi
 8067f35:	b8 00 00 00 00       	mov    $0x0,%eax
 8067f3a:	e8 16 55 00 00       	callq  806d455 <decl>
 8067f3f:	c9                   	leaveq 
 8067f40:	c3                   	retq   

0000000008067f41 <block>:
 8067f41:	55                   	push   %rbp
 8067f42:	48 89 e5             	mov    %rsp,%rbp
 8067f45:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
 8067f4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8067f50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8067f54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8067f58:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8067f5c:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8067f60:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 8067f64:	48 8b 05 25 5f 02 00 	mov    0x25f25(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 8067f6b:	48 8b 00             	mov    (%rax),%rax
 8067f6e:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 8067f75:	00 00 00 
 8067f78:	48 01 c8             	add    %rcx,%rax
 8067f7b:	8b 08                	mov    (%rax),%ecx
 8067f7d:	85 c9                	test   %ecx,%ecx
 8067f7f:	0f 84 d3 00 00 00    	je     8068058 <block+0x117>
 8067f85:	48 8b 05 14 5f 02 00 	mov    0x25f14(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8067f8c:	48 8b 00             	mov    (%rax),%rax
 8067f8f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8067f96:	00 00 00 
 8067f99:	48 01 c8             	add    %rcx,%rax
 8067f9c:	48 8b 0d 7d 60 02 00 	mov    0x2607d(%rip),%rcx        # 808e020 <_GLOBAL_OFFSET_TABLE_+0x3a0>
 8067fa3:	8b 09                	mov    (%rcx),%ecx
 8067fa5:	8b 10                	mov    (%rax),%edx
 8067fa7:	39 d1                	cmp    %edx,%ecx
 8067fa9:	0f 85 1f 00 00 00    	jne    8067fce <block+0x8d>
 8067faf:	48 8b 05 72 60 02 00 	mov    0x26072(%rip),%rax        # 808e028 <_GLOBAL_OFFSET_TABLE_+0x3a8>
 8067fb6:	8b 00                	mov    (%rax),%eax
 8067fb8:	48 8b 0d 71 60 02 00 	mov    0x26071(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8067fbf:	8b 09                	mov    (%rcx),%ecx
 8067fc1:	39 c8                	cmp    %ecx,%eax
 8067fc3:	0f 85 05 00 00 00    	jne    8067fce <block+0x8d>
 8067fc9:	e9 8a 00 00 00       	jmpq   8068058 <block+0x117>
 8067fce:	48 8b 05 cb 5e 02 00 	mov    0x25ecb(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8067fd5:	48 8b 00             	mov    (%rax),%rax
 8067fd8:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8067fdf:	00 00 00 
 8067fe2:	48 01 c8             	add    %rcx,%rax
 8067fe5:	48 8b 0d 44 60 02 00 	mov    0x26044(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8067fec:	8b 09                	mov    (%rcx),%ecx
 8067fee:	48 8b 15 43 60 02 00 	mov    0x26043(%rip),%rdx        # 808e038 <_GLOBAL_OFFSET_TABLE_+0x3b8>
 8067ff5:	8b 12                	mov    (%rdx),%edx
 8067ff7:	48 29 d1             	sub    %rdx,%rcx
 8067ffa:	49 89 cb             	mov    %rcx,%r11
 8067ffd:	8b 08                	mov    (%rax),%ecx
 8067fff:	49 89 ca             	mov    %rcx,%r10
 8068002:	b8 00 00 00 00       	mov    $0x0,%eax
 8068007:	48 89 c6             	mov    %rax,%rsi
 806800a:	b8 44 00 00 00       	mov    $0x44,%eax
 806800f:	48 89 c7             	mov    %rax,%rdi
 8068012:	4c 89 d2             	mov    %r10,%rdx
 8068015:	4c 89 d9             	mov    %r11,%rcx
 8068018:	b8 00 00 00 00       	mov    $0x0,%eax
 806801d:	e8 a9 69 00 00       	callq  806e9cb <put_stabn>
 8068022:	48 8b 05 07 60 02 00 	mov    0x26007(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8068029:	8b 00                	mov    (%rax),%eax
 806802b:	4c 8b 1d f6 5f 02 00 	mov    0x25ff6(%rip),%r11        # 808e028 <_GLOBAL_OFFSET_TABLE_+0x3a8>
 8068032:	41 89 03             	mov    %eax,(%r11)
 8068035:	48 8b 05 64 5e 02 00 	mov    0x25e64(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806803c:	48 8b 00             	mov    (%rax),%rax
 806803f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8068046:	00 00 00 
 8068049:	48 01 c8             	add    %rcx,%rax
 806804c:	8b 08                	mov    (%rax),%ecx
 806804e:	4c 8b 1d cb 5f 02 00 	mov    0x25fcb(%rip),%r11        # 808e020 <_GLOBAL_OFFSET_TABLE_+0x3a0>
 8068055:	41 89 0b             	mov    %ecx,(%r11)
 8068058:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806805b:	85 c0                	test   %eax,%eax
 806805d:	0f 84 23 00 00 00    	je     8068086 <block+0x145>
 8068063:	b8 00 00 00 00       	mov    $0x0,%eax
 8068068:	48 89 c7             	mov    %rax,%rdi
 806806b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068070:	e8 85 47 ff ff       	callq  805c7fa <vpushi>
 8068075:	48 8b 05 a4 5e 02 00 	mov    0x25ea4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806807c:	48 8b 00             	mov    (%rax),%rax
 806807f:	b9 03 00 00 00       	mov    $0x3,%ecx
 8068084:	89 08                	mov    %ecx,(%rax)
 8068086:	48 8b 05 9b 5e 02 00 	mov    0x25e9b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806808d:	8b 00                	mov    (%rax),%eax
 806808f:	81 f8 03 01 00 00    	cmp    $0x103,%eax
 8068095:	0f 85 3d 01 00 00    	jne    80681d8 <block+0x297>
 806809b:	b8 00 00 00 00       	mov    $0x0,%eax
 80680a0:	e8 25 06 ff ff       	callq  80586ca <next>
 80680a5:	b8 28 00 00 00       	mov    $0x28,%eax
 80680aa:	48 89 c7             	mov    %rax,%rdi
 80680ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80680b2:	e8 2c 90 fe ff       	callq  80510e3 <skip>
 80680b7:	b8 00 00 00 00       	mov    $0x0,%eax
 80680bc:	e8 77 fb ff ff       	callq  8067c38 <gexpr>
 80680c1:	b8 29 00 00 00       	mov    $0x29,%eax
 80680c6:	48 89 c7             	mov    %rax,%rdi
 80680c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80680ce:	e8 10 90 fe ff       	callq  80510e3 <skip>
 80680d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80680d8:	48 89 c6             	mov    %rax,%rsi
 80680db:	b8 01 00 00 00       	mov    $0x1,%eax
 80680e0:	48 89 c7             	mov    %rax,%rdi
 80680e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80680e8:	e8 fa 87 01 00       	callq  80808e7 <gtst>
 80680ed:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80680f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80680f5:	49 89 c1             	mov    %rax,%r9
 80680f8:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80680fb:	49 89 c0             	mov    %rax,%r8
 80680fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8068102:	49 89 c3             	mov    %rax,%r11
 8068105:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068109:	49 89 c2             	mov    %rax,%r10
 806810c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8068110:	48 89 c6             	mov    %rax,%rsi
 8068113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8068117:	48 89 c7             	mov    %rax,%rdi
 806811a:	4c 89 d2             	mov    %r10,%rdx
 806811d:	4c 89 d9             	mov    %r11,%rcx
 8068120:	b8 00 00 00 00       	mov    $0x0,%eax
 8068125:	e8 17 fe ff ff       	callq  8067f41 <block>
 806812a:	48 8b 05 f7 5d 02 00 	mov    0x25df7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068131:	8b 00                	mov    (%rax),%eax
 8068133:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8068136:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8068139:	81 f8 04 01 00 00    	cmp    $0x104,%eax
 806813f:	0f 85 7e 00 00 00    	jne    80681c3 <block+0x282>
 8068145:	b8 00 00 00 00       	mov    $0x0,%eax
 806814a:	e8 7b 05 ff ff       	callq  80586ca <next>
 806814f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068154:	48 89 c7             	mov    %rax,%rdi
 8068157:	b8 00 00 00 00       	mov    $0x0,%eax
 806815c:	e8 d0 86 01 00       	callq  8080831 <gjmp>
 8068161:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8068164:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8068167:	48 89 c7             	mov    %rax,%rdi
 806816a:	b8 00 00 00 00       	mov    $0x0,%eax
 806816f:	e8 97 5d 01 00       	callq  807df0b <gsym>
 8068174:	b8 00 00 00 00       	mov    $0x0,%eax
 8068179:	49 89 c1             	mov    %rax,%r9
 806817c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806817f:	49 89 c0             	mov    %rax,%r8
 8068182:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8068186:	49 89 c3             	mov    %rax,%r11
 8068189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806818d:	49 89 c2             	mov    %rax,%r10
 8068190:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8068194:	48 89 c6             	mov    %rax,%rsi
 8068197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806819b:	48 89 c7             	mov    %rax,%rdi
 806819e:	4c 89 d2             	mov    %r10,%rdx
 80681a1:	4c 89 d9             	mov    %r11,%rcx
 80681a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80681a9:	e8 93 fd ff ff       	callq  8067f41 <block>
 80681ae:	8b 45 c0             	mov    -0x40(%rbp),%eax
 80681b1:	48 89 c7             	mov    %rax,%rdi
 80681b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80681b9:	e8 4d 5d 01 00       	callq  807df0b <gsym>
 80681be:	e9 10 00 00 00       	jmpq   80681d3 <block+0x292>
 80681c3:	8b 45 cc             	mov    -0x34(%rbp),%eax
 80681c6:	48 89 c7             	mov    %rax,%rdi
 80681c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80681ce:	e8 38 5d 01 00       	callq  807df0b <gsym>
 80681d3:	e9 f1 12 00 00       	jmpq   80694c9 <block+0x1588>
 80681d8:	48 8b 05 49 5d 02 00 	mov    0x25d49(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80681df:	8b 00                	mov    (%rax),%eax
 80681e1:	81 f8 05 01 00 00    	cmp    $0x105,%eax
 80681e7:	0f 85 de 00 00 00    	jne    80682cb <block+0x38a>
 80681ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80681f2:	e8 d3 04 ff ff       	callq  80586ca <next>
 80681f7:	48 8b 05 32 5e 02 00 	mov    0x25e32(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80681fe:	8b 00                	mov    (%rax),%eax
 8068200:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8068203:	b8 28 00 00 00       	mov    $0x28,%eax
 8068208:	48 89 c7             	mov    %rax,%rdi
 806820b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068210:	e8 ce 8e fe ff       	callq  80510e3 <skip>
 8068215:	b8 00 00 00 00       	mov    $0x0,%eax
 806821a:	e8 19 fa ff ff       	callq  8067c38 <gexpr>
 806821f:	b8 29 00 00 00       	mov    $0x29,%eax
 8068224:	48 89 c7             	mov    %rax,%rdi
 8068227:	b8 00 00 00 00       	mov    $0x0,%eax
 806822c:	e8 b2 8e fe ff       	callq  80510e3 <skip>
 8068231:	b8 00 00 00 00       	mov    $0x0,%eax
 8068236:	48 89 c6             	mov    %rax,%rsi
 8068239:	b8 01 00 00 00       	mov    $0x1,%eax
 806823e:	48 89 c7             	mov    %rax,%rdi
 8068241:	b8 00 00 00 00       	mov    $0x0,%eax
 8068246:	e8 9c 86 01 00       	callq  80808e7 <gtst>
 806824b:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806824e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068253:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8068256:	b8 00 00 00 00       	mov    $0x0,%eax
 806825b:	49 89 c1             	mov    %rax,%r9
 806825e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068261:	49 89 c0             	mov    %rax,%r8
 8068264:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8068268:	49 89 c3             	mov    %rax,%r11
 806826b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806826f:	49 89 c2             	mov    %rax,%r10
 8068272:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8068276:	48 89 c6             	mov    %rax,%rsi
 8068279:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
 806827d:	48 89 c7             	mov    %rax,%rdi
 8068280:	4c 89 d2             	mov    %r10,%rdx
 8068283:	4c 89 d9             	mov    %r11,%rcx
 8068286:	b8 00 00 00 00       	mov    $0x0,%eax
 806828b:	e8 b1 fc ff ff       	callq  8067f41 <block>
 8068290:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8068293:	48 89 c7             	mov    %rax,%rdi
 8068296:	b8 00 00 00 00       	mov    $0x0,%eax
 806829b:	e8 bf 85 01 00       	callq  808085f <gjmp_addr>
 80682a0:	8b 45 cc             	mov    -0x34(%rbp),%eax
 80682a3:	48 89 c7             	mov    %rax,%rdi
 80682a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80682ab:	e8 5b 5c 01 00       	callq  807df0b <gsym>
 80682b0:	8b 45 c0             	mov    -0x40(%rbp),%eax
 80682b3:	48 89 c6             	mov    %rax,%rsi
 80682b6:	8b 45 c8             	mov    -0x38(%rbp),%eax
 80682b9:	48 89 c7             	mov    %rax,%rdi
 80682bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80682c1:	e8 d8 5b 01 00       	callq  807de9e <gsym_addr>
 80682c6:	e9 fe 11 00 00       	jmpq   80694c9 <block+0x1588>
 80682cb:	48 8b 05 56 5c 02 00 	mov    0x25c56(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80682d2:	8b 00                	mov    (%rax),%eax
 80682d4:	83 f8 7b             	cmp    $0x7b,%eax
 80682d7:	0f 85 15 03 00 00    	jne    80685f2 <block+0x6b1>
 80682dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80682e2:	e8 e3 03 ff ff       	callq  80586ca <next>
 80682e7:	48 8b 05 4a 5c 02 00 	mov    0x25c4a(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 80682ee:	48 8b 00             	mov    (%rax),%rax
 80682f1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 80682f5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80682fc:	00 00 00 
 80682ff:	49 89 c3             	mov    %rax,%r11
 8068302:	b8 00 00 00 00       	mov    $0x0,%eax
 8068307:	49 89 c2             	mov    %rax,%r10
 806830a:	b8 00 00 00 20       	mov    $0x20000000,%eax
 806830f:	48 89 c6             	mov    %rax,%rsi
 8068312:	48 8b 05 1f 5c 02 00 	mov    0x25c1f(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 8068319:	48 89 c7             	mov    %rax,%rdi
 806831c:	4c 89 d2             	mov    %r10,%rdx
 806831f:	4c 89 d9             	mov    %r11,%rcx
 8068322:	b8 00 00 00 00       	mov    $0x0,%eax
 8068327:	e8 11 3b ff ff       	callq  805be3d <sym_push2>
 806832c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8068330:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8068334:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806833b:	00 00 00 
 806833e:	48 01 c8             	add    %rcx,%rax
 8068341:	48 8b 0d a8 5c 02 00 	mov    0x25ca8(%rip),%rcx        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 8068348:	48 8b 09             	mov    (%rcx),%rcx
 806834b:	48 89 08             	mov    %rcx,(%rax)
 806834e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8068352:	4c 8b 1d 97 5c 02 00 	mov    0x25c97(%rip),%r11        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 8068359:	49 89 03             	mov    %rax,(%r11)
 806835c:	48 8b 05 dd 5c 02 00 	mov    0x25cdd(%rip),%rax        # 808e040 <_GLOBAL_OFFSET_TABLE_+0x3c0>
 8068363:	48 8b 00             	mov    (%rax),%rax
 8068366:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 806836a:	48 8b 05 b7 5b 02 00 	mov    0x25bb7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068371:	8b 00                	mov    (%rax),%eax
 8068373:	81 f8 35 01 00 00    	cmp    $0x135,%eax
 8068379:	0f 85 a5 00 00 00    	jne    8068424 <block+0x4e3>
 806837f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068384:	e8 41 03 ff ff       	callq  80586ca <next>
 8068389:	48 8b 05 98 5b 02 00 	mov    0x25b98(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068390:	8b 00                	mov    (%rax),%eax
 8068392:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 8068398:	0f 8d 14 00 00 00    	jge    80683b2 <block+0x471>
 806839e:	48 8d 05 5a 3c 02 00 	lea    0x23c5a(%rip),%rax        # 808bfff <L.195>
 80683a5:	48 89 c7             	mov    %rax,%rdi
 80683a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80683ad:	e8 a0 8d fe ff       	callq  8051152 <expect>
 80683b2:	b8 02 00 00 00       	mov    $0x2,%eax
 80683b7:	49 89 c2             	mov    %rax,%r10
 80683ba:	48 8b 05 67 5b 02 00 	mov    0x25b67(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80683c1:	8b 00                	mov    (%rax),%eax
 80683c3:	48 89 c6             	mov    %rax,%rsi
 80683c6:	48 8b 05 73 5c 02 00 	mov    0x25c73(%rip),%rax        # 808e040 <_GLOBAL_OFFSET_TABLE_+0x3c0>
 80683cd:	48 89 c7             	mov    %rax,%rdi
 80683d0:	4c 89 d2             	mov    %r10,%rdx
 80683d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80683d8:	e8 35 bc fe ff       	callq  8054012 <label_push>
 80683dd:	b8 00 00 00 00       	mov    $0x0,%eax
 80683e2:	e8 e3 02 ff ff       	callq  80586ca <next>
 80683e7:	48 8b 05 3a 5b 02 00 	mov    0x25b3a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80683ee:	8b 00                	mov    (%rax),%eax
 80683f0:	83 f8 2c             	cmp    $0x2c,%eax
 80683f3:	0f 85 0f 00 00 00    	jne    8068408 <block+0x4c7>
 80683f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80683fe:	e8 c7 02 ff ff       	callq  80586ca <next>
 8068403:	e9 17 00 00 00       	jmpq   806841f <block+0x4de>
 8068408:	b8 3b 00 00 00       	mov    $0x3b,%eax
 806840d:	48 89 c7             	mov    %rax,%rdi
 8068410:	b8 00 00 00 00       	mov    $0x0,%eax
 8068415:	e8 c9 8c fe ff       	callq  80510e3 <skip>
 806841a:	e9 05 00 00 00       	jmpq   8068424 <block+0x4e3>
 806841f:	e9 65 ff ff ff       	jmpq   8068389 <block+0x448>
 8068424:	48 8b 05 fd 5a 02 00 	mov    0x25afd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806842b:	8b 00                	mov    (%rax),%eax
 806842d:	83 f8 7d             	cmp    $0x7d,%eax
 8068430:	0f 84 76 00 00 00    	je     80684ac <block+0x56b>
 8068436:	b8 32 00 00 00       	mov    $0x32,%eax
 806843b:	48 89 c7             	mov    %rax,%rdi
 806843e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068443:	e8 76 fa ff ff       	callq  8067ebe <label_or_decl>
 8068448:	48 8b 05 d9 5a 02 00 	mov    0x25ad9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806844f:	8b 00                	mov    (%rax),%eax
 8068451:	83 f8 7d             	cmp    $0x7d,%eax
 8068454:	0f 84 4d 00 00 00    	je     80684a7 <block+0x566>
 806845a:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806845d:	85 c0                	test   %eax,%eax
 806845f:	0f 84 0a 00 00 00    	je     806846f <block+0x52e>
 8068465:	b8 00 00 00 00       	mov    $0x0,%eax
 806846a:	e8 83 5e ff ff       	callq  805e2f2 <vpop>
 806846f:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8068472:	49 89 c1             	mov    %rax,%r9
 8068475:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068478:	49 89 c0             	mov    %rax,%r8
 806847b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806847f:	49 89 c3             	mov    %rax,%r11
 8068482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068486:	49 89 c2             	mov    %rax,%r10
 8068489:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806848d:	48 89 c6             	mov    %rax,%rsi
 8068490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8068494:	48 89 c7             	mov    %rax,%rdi
 8068497:	4c 89 d2             	mov    %r10,%rdx
 806849a:	4c 89 d9             	mov    %r11,%rcx
 806849d:	b8 00 00 00 00       	mov    $0x0,%eax
 80684a2:	e8 9a fa ff ff       	callq  8067f41 <block>
 80684a7:	e9 78 ff ff ff       	jmpq   8068424 <block+0x4e3>
 80684ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80684b0:	48 89 c6             	mov    %rax,%rsi
 80684b3:	48 8b 05 86 5b 02 00 	mov    0x25b86(%rip),%rax        # 808e040 <_GLOBAL_OFFSET_TABLE_+0x3c0>
 80684ba:	48 89 c7             	mov    %rax,%rdi
 80684bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80684c2:	e8 6e bc fe ff       	callq  8054135 <label_pop>
 80684c7:	8b 45 d0             	mov    -0x30(%rbp),%eax
 80684ca:	85 c0                	test   %eax,%eax
 80684cc:	0f 84 d2 00 00 00    	je     80685a4 <block+0x663>
 80684d2:	48 8b 05 47 5a 02 00 	mov    0x25a47(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80684d9:	48 8b 00             	mov    (%rax),%rax
 80684dc:	8b 08                	mov    (%rax),%ecx
 80684de:	83 e1 0f             	and    $0xf,%ecx
 80684e1:	e9 05 00 00 00       	jmpq   80684eb <block+0x5aa>
 80684e6:	e9 09 00 00 00       	jmpq   80684f4 <block+0x5b3>
 80684eb:	83 f9 04             	cmp    $0x4,%ecx
 80684ee:	0f 85 05 00 00 00    	jne    80684f9 <block+0x5b8>
 80684f4:	e9 09 00 00 00       	jmpq   8068502 <block+0x5c1>
 80684f9:	83 f9 07             	cmp    $0x7,%ecx
 80684fc:	0f 85 05 00 00 00    	jne    8068507 <block+0x5c6>
 8068502:	e9 09 00 00 00       	jmpq   8068510 <block+0x5cf>
 8068507:	83 f9 05             	cmp    $0x5,%ecx
 806850a:	0f 85 05 00 00 00    	jne    8068515 <block+0x5d4>
 8068510:	e9 09 00 00 00       	jmpq   806851e <block+0x5dd>
 8068515:	83 f9 06             	cmp    $0x6,%ecx
 8068518:	0f 85 86 00 00 00    	jne    80685a4 <block+0x663>
 806851e:	48 8b 05 fb 59 02 00 	mov    0x259fb(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8068525:	48 8b 00             	mov    (%rax),%rax
 8068528:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806852f:	00 00 00 
 8068532:	48 01 c8             	add    %rcx,%rax
 8068535:	48 8b 08             	mov    (%rax),%rcx
 8068538:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 806853c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8068540:	85 c0                	test   %eax,%eax
 8068542:	0f 84 5c 00 00 00    	je     80685a4 <block+0x663>
 8068548:	e9 1a 00 00 00       	jmpq   8068567 <block+0x626>
 806854d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8068551:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8068558:	00 00 00 
 806855b:	48 01 c8             	add    %rcx,%rax
 806855e:	48 8b 08             	mov    (%rax),%rcx
 8068561:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 8068565:	eb d5                	jmp    806853c <block+0x5fb>
 8068567:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806856b:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8068572:	00 00 00 
 8068575:	48 01 c8             	add    %rcx,%rax
 8068578:	48 8b 08             	mov    (%rax),%rcx
 806857b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806857f:	48 89 ca             	mov    %rcx,%rdx
 8068582:	48 89 c1             	mov    %rax,%rcx
 8068585:	48 39 ca             	cmp    %rcx,%rdx
 8068588:	0f 85 14 00 00 00    	jne    80685a2 <block+0x661>
 806858e:	48 8d 05 7b 3a 02 00 	lea    0x23a7b(%rip),%rax        # 808c010 <L.196>
 8068595:	48 89 c7             	mov    %rax,%rdi
 8068598:	b8 00 00 00 00       	mov    $0x0,%eax
 806859d:	e8 25 51 fe ff       	callq  804d6c7 <tcc_error>
 80685a2:	eb a9                	jmp    806854d <block+0x60c>
 80685a4:	48 8b 05 45 5a 02 00 	mov    0x25a45(%rip),%rax        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 80685ab:	48 8b 00             	mov    (%rax),%rax
 80685ae:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80685b5:	00 00 00 
 80685b8:	48 01 c8             	add    %rcx,%rax
 80685bb:	48 8b 08             	mov    (%rax),%rcx
 80685be:	4c 8b 1d 2b 5a 02 00 	mov    0x25a2b(%rip),%r11        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 80685c5:	49 89 0b             	mov    %rcx,(%r11)
 80685c8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 80685cc:	48 89 c6             	mov    %rax,%rsi
 80685cf:	48 8b 05 62 59 02 00 	mov    0x25962(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 80685d6:	48 89 c7             	mov    %rax,%rdi
 80685d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80685de:	e8 0d 3e ff ff       	callq  805c3f0 <sym_pop>
 80685e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80685e8:	e8 dd 00 ff ff       	callq  80586ca <next>
 80685ed:	e9 d7 0e 00 00       	jmpq   80694c9 <block+0x1588>
 80685f2:	48 8b 05 2f 59 02 00 	mov    0x2592f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80685f9:	8b 00                	mov    (%rax),%eax
 80685fb:	81 f8 07 01 00 00    	cmp    $0x107,%eax
 8068601:	0f 85 84 01 00 00    	jne    806878b <block+0x84a>
 8068607:	b8 00 00 00 00       	mov    $0x0,%eax
 806860c:	e8 b9 00 ff ff       	callq  80586ca <next>
 8068611:	48 8b 05 10 59 02 00 	mov    0x25910(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068618:	8b 00                	mov    (%rax),%eax
 806861a:	83 f8 3b             	cmp    $0x3b,%eax
 806861d:	0f 84 31 01 00 00    	je     8068754 <block+0x813>
 8068623:	b8 00 00 00 00       	mov    $0x0,%eax
 8068628:	e8 0b f6 ff ff       	callq  8067c38 <gexpr>
 806862d:	48 8b 05 14 5a 02 00 	mov    0x25a14(%rip),%rax        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 8068634:	48 89 c7             	mov    %rax,%rdi
 8068637:	b8 00 00 00 00       	mov    $0x0,%eax
 806863c:	e8 27 95 ff ff       	callq  8061b68 <gen_assign_cast>
 8068641:	48 8b 05 00 5a 02 00 	mov    0x25a00(%rip),%rax        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 8068648:	8b 00                	mov    (%rax),%eax
 806864a:	83 e0 0f             	and    $0xf,%eax
 806864d:	83 f8 07             	cmp    $0x7,%eax
 8068650:	0f 85 82 00 00 00    	jne    80686d8 <block+0x797>
 8068656:	b8 10 00 00 00       	mov    $0x10,%eax
 806865b:	49 89 c2             	mov    %rax,%r10
 806865e:	48 8b 05 e3 59 02 00 	mov    0x259e3(%rip),%rax        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 8068665:	48 89 c6             	mov    %rax,%rsi
 8068668:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 806866c:	48 89 c7             	mov    %rax,%rdi
 806866f:	4c 89 d2             	mov    %r10,%rdx
 8068672:	b8 00 00 00 00       	mov    $0x0,%eax
 8068677:	e8 f4 e5 01 00       	callq  8086c70 <memcpy>
 806867c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 8068680:	48 89 c7             	mov    %rax,%rdi
 8068683:	b8 00 00 00 00       	mov    $0x0,%eax
 8068688:	e8 61 8a ff ff       	callq  80610ee <mk_pointer>
 806868d:	48 8b 05 bc 59 02 00 	mov    0x259bc(%rip),%rax        # 808e050 <_GLOBAL_OFFSET_TABLE_+0x3d0>
 8068694:	8b 00                	mov    (%rax),%eax
 8068696:	49 89 c2             	mov    %rax,%r10
 8068699:	b8 32 01 00 00       	mov    $0x132,%eax
 806869e:	48 89 c6             	mov    %rax,%rsi
 80686a1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 80686a5:	48 89 c7             	mov    %rax,%rdi
 80686a8:	4c 89 d2             	mov    %r10,%rdx
 80686ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80686b0:	e8 13 47 ff ff       	callq  805cdc8 <vset>
 80686b5:	b8 00 00 00 00       	mov    $0x0,%eax
 80686ba:	e8 28 c7 ff ff       	callq  8064de7 <indir>
 80686bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80686c4:	e8 85 47 ff ff       	callq  805ce4e <vswap>
 80686c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80686ce:	e8 43 99 ff ff       	callq  8062016 <vstore>
 80686d3:	e9 58 00 00 00       	jmpq   8068730 <block+0x7ef>
 80686d8:	48 8b 05 69 59 02 00 	mov    0x25969(%rip),%rax        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 80686df:	8b 00                	mov    (%rax),%eax
 80686e1:	48 89 c7             	mov    %rax,%rdi
 80686e4:	b8 00 00 00 00       	mov    $0x0,%eax
 80686e9:	e8 35 35 ff ff       	callq  805bc23 <is_float>
 80686ee:	85 c0                	test   %eax,%eax
 80686f0:	0f 84 28 00 00 00    	je     806871e <block+0x7dd>
 80686f6:	48 8b 05 4b 59 02 00 	mov    0x2594b(%rip),%rax        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 80686fd:	8b 00                	mov    (%rax),%eax
 80686ff:	48 89 c7             	mov    %rax,%rdi
 8068702:	b8 00 00 00 00       	mov    $0x0,%eax
 8068707:	e8 5a 57 ff ff       	callq  805de66 <rc_fret>
 806870c:	48 89 c7             	mov    %rax,%rdi
 806870f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068714:	e8 11 50 ff ff       	callq  805d72a <gv>
 8068719:	e9 12 00 00 00       	jmpq   8068730 <block+0x7ef>
 806871e:	b8 04 00 00 00       	mov    $0x4,%eax
 8068723:	48 89 c7             	mov    %rax,%rdi
 8068726:	b8 00 00 00 00       	mov    $0x0,%eax
 806872b:	e8 fa 4f ff ff       	callq  805d72a <gv>
 8068730:	48 8b 05 e9 57 02 00 	mov    0x257e9(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8068737:	48 8b 00             	mov    (%rax),%rax
 806873a:	48 89 c1             	mov    %rax,%rcx
 806873d:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8068744:	ff ff ff 
 8068747:	48 01 d0             	add    %rdx,%rax
 806874a:	4c 8b 1d cf 57 02 00 	mov    0x257cf(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8068751:	49 89 03             	mov    %rax,(%r11)
 8068754:	b8 3b 00 00 00       	mov    $0x3b,%eax
 8068759:	48 89 c7             	mov    %rax,%rdi
 806875c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068761:	e8 7d 89 fe ff       	callq  80510e3 <skip>
 8068766:	48 8b 05 eb 58 02 00 	mov    0x258eb(%rip),%rax        # 808e058 <_GLOBAL_OFFSET_TABLE_+0x3d8>
 806876d:	8b 00                	mov    (%rax),%eax
 806876f:	48 89 c7             	mov    %rax,%rdi
 8068772:	b8 00 00 00 00       	mov    $0x0,%eax
 8068777:	e8 b5 80 01 00       	callq  8080831 <gjmp>
 806877c:	4c 8b 1d d5 58 02 00 	mov    0x258d5(%rip),%r11        # 808e058 <_GLOBAL_OFFSET_TABLE_+0x3d8>
 8068783:	41 89 03             	mov    %eax,(%r11)
 8068786:	e9 3e 0d 00 00       	jmpq   80694c9 <block+0x1588>
 806878b:	48 8b 05 96 57 02 00 	mov    0x25796(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068792:	8b 00                	mov    (%rax),%eax
 8068794:	81 f8 06 01 00 00    	cmp    $0x106,%eax
 806879a:	0f 85 67 00 00 00    	jne    8068807 <block+0x8c6>
 80687a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80687a4:	85 c0                	test   %eax,%eax
 80687a6:	0f 84 05 00 00 00    	je     80687b1 <block+0x870>
 80687ac:	e9 14 00 00 00       	jmpq   80687c5 <block+0x884>
 80687b1:	48 8d 05 74 38 02 00 	lea    0x23874(%rip),%rax        # 808c02c <L.197>
 80687b8:	48 89 c7             	mov    %rax,%rdi
 80687bb:	b8 00 00 00 00       	mov    $0x0,%eax
 80687c0:	e8 02 4f fe ff       	callq  804d6c7 <tcc_error>
 80687c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80687c9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80687cd:	8b 11                	mov    (%rcx),%edx
 80687cf:	48 89 d7             	mov    %rdx,%rdi
 80687d2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 80687d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80687db:	e8 51 80 01 00       	callq  8080831 <gjmp>
 80687e0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 80687e4:	89 01                	mov    %eax,(%rcx)
 80687e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80687eb:	e8 da fe fe ff       	callq  80586ca <next>
 80687f0:	b8 3b 00 00 00       	mov    $0x3b,%eax
 80687f5:	48 89 c7             	mov    %rax,%rdi
 80687f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80687fd:	e8 e1 88 fe ff       	callq  80510e3 <skip>
 8068802:	e9 c2 0c 00 00       	jmpq   80694c9 <block+0x1588>
 8068807:	48 8b 05 1a 57 02 00 	mov    0x2571a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806880e:	8b 00                	mov    (%rax),%eax
 8068810:	81 f8 0e 01 00 00    	cmp    $0x10e,%eax
 8068816:	0f 85 67 00 00 00    	jne    8068883 <block+0x942>
 806881c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8068820:	85 c0                	test   %eax,%eax
 8068822:	0f 84 05 00 00 00    	je     806882d <block+0x8ec>
 8068828:	e9 14 00 00 00       	jmpq   8068841 <block+0x900>
 806882d:	48 8d 05 05 38 02 00 	lea    0x23805(%rip),%rax        # 808c039 <L.198>
 8068834:	48 89 c7             	mov    %rax,%rdi
 8068837:	b8 00 00 00 00       	mov    $0x0,%eax
 806883c:	e8 86 4e fe ff       	callq  804d6c7 <tcc_error>
 8068841:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8068845:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8068849:	8b 11                	mov    (%rcx),%edx
 806884b:	48 89 d7             	mov    %rdx,%rdi
 806884e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8068852:	b8 00 00 00 00       	mov    $0x0,%eax
 8068857:	e8 d5 7f 01 00       	callq  8080831 <gjmp>
 806885c:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
 8068860:	89 01                	mov    %eax,(%rcx)
 8068862:	b8 00 00 00 00       	mov    $0x0,%eax
 8068867:	e8 5e fe fe ff       	callq  80586ca <next>
 806886c:	b8 3b 00 00 00       	mov    $0x3b,%eax
 8068871:	48 89 c7             	mov    %rax,%rdi
 8068874:	b8 00 00 00 00       	mov    $0x0,%eax
 8068879:	e8 65 88 fe ff       	callq  80510e3 <skip>
 806887e:	e9 46 0c 00 00       	jmpq   80694c9 <block+0x1588>
 8068883:	48 8b 05 9e 56 02 00 	mov    0x2569e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806888a:	8b 00                	mov    (%rax),%eax
 806888c:	81 f8 08 01 00 00    	cmp    $0x108,%eax
 8068892:	0f 85 96 02 00 00    	jne    8068b2e <block+0xbed>
 8068898:	b8 00 00 00 00       	mov    $0x0,%eax
 806889d:	e8 28 fe fe ff       	callq  80586ca <next>
 80688a2:	b8 28 00 00 00       	mov    $0x28,%eax
 80688a7:	48 89 c7             	mov    %rax,%rdi
 80688aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80688af:	e8 2f 88 fe ff       	callq  80510e3 <skip>
 80688b4:	48 8b 05 7d 56 02 00 	mov    0x2567d(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 80688bb:	48 8b 00             	mov    (%rax),%rax
 80688be:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 80688c2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80688c9:	00 00 00 
 80688cc:	49 89 c3             	mov    %rax,%r11
 80688cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80688d4:	49 89 c2             	mov    %rax,%r10
 80688d7:	b8 00 00 00 20       	mov    $0x20000000,%eax
 80688dc:	48 89 c6             	mov    %rax,%rsi
 80688df:	48 8b 05 52 56 02 00 	mov    0x25652(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 80688e6:	48 89 c7             	mov    %rax,%rdi
 80688e9:	4c 89 d2             	mov    %r10,%rdx
 80688ec:	4c 89 d9             	mov    %r11,%rcx
 80688ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80688f4:	e8 44 35 ff ff       	callq  805be3d <sym_push2>
 80688f9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 80688fd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8068901:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8068908:	00 00 00 
 806890b:	48 01 c8             	add    %rcx,%rax
 806890e:	48 8b 0d db 56 02 00 	mov    0x256db(%rip),%rcx        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 8068915:	48 8b 09             	mov    (%rcx),%rcx
 8068918:	48 89 08             	mov    %rcx,(%rax)
 806891b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806891f:	4c 8b 1d ca 56 02 00 	mov    0x256ca(%rip),%r11        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 8068926:	49 89 03             	mov    %rax,(%r11)
 8068929:	48 8b 05 f8 55 02 00 	mov    0x255f8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068930:	8b 00                	mov    (%rax),%eax
 8068932:	83 f8 3b             	cmp    $0x3b,%eax
 8068935:	0f 84 3b 00 00 00    	je     8068976 <block+0xa35>
 806893b:	b8 01 00 00 00       	mov    $0x1,%eax
 8068940:	48 89 c6             	mov    %rax,%rsi
 8068943:	b8 32 00 00 00       	mov    $0x32,%eax
 8068948:	48 89 c7             	mov    %rax,%rdi
 806894b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068950:	e8 28 3e 00 00       	callq  806c77d <decl0>
 8068955:	85 c0                	test   %eax,%eax
 8068957:	0f 84 05 00 00 00    	je     8068962 <block+0xa21>
 806895d:	e9 14 00 00 00       	jmpq   8068976 <block+0xa35>
 8068962:	b8 00 00 00 00       	mov    $0x0,%eax
 8068967:	e8 cc f2 ff ff       	callq  8067c38 <gexpr>
 806896c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068971:	e8 7c 59 ff ff       	callq  805e2f2 <vpop>
 8068976:	b8 3b 00 00 00       	mov    $0x3b,%eax
 806897b:	48 89 c7             	mov    %rax,%rdi
 806897e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068983:	e8 5b 87 fe ff       	callq  80510e3 <skip>
 8068988:	48 8b 05 a1 56 02 00 	mov    0x256a1(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806898f:	8b 00                	mov    (%rax),%eax
 8068991:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8068994:	48 8b 05 95 56 02 00 	mov    0x25695(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806899b:	8b 00                	mov    (%rax),%eax
 806899d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 80689a0:	b8 00 00 00 00       	mov    $0x0,%eax
 80689a5:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80689a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80689ad:	89 45 c8             	mov    %eax,-0x38(%rbp)
 80689b0:	48 8b 05 71 55 02 00 	mov    0x25571(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80689b7:	8b 00                	mov    (%rax),%eax
 80689b9:	83 f8 3b             	cmp    $0x3b,%eax
 80689bc:	0f 84 27 00 00 00    	je     80689e9 <block+0xaa8>
 80689c2:	b8 00 00 00 00       	mov    $0x0,%eax
 80689c7:	e8 6c f2 ff ff       	callq  8067c38 <gexpr>
 80689cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80689d1:	48 89 c6             	mov    %rax,%rsi
 80689d4:	b8 01 00 00 00       	mov    $0x1,%eax
 80689d9:	48 89 c7             	mov    %rax,%rdi
 80689dc:	b8 00 00 00 00       	mov    $0x0,%eax
 80689e1:	e8 01 7f 01 00       	callq  80808e7 <gtst>
 80689e6:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80689e9:	b8 3b 00 00 00       	mov    $0x3b,%eax
 80689ee:	48 89 c7             	mov    %rax,%rdi
 80689f1:	b8 00 00 00 00       	mov    $0x0,%eax
 80689f6:	e8 e8 86 fe ff       	callq  80510e3 <skip>
 80689fb:	48 8b 05 26 55 02 00 	mov    0x25526(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068a02:	8b 00                	mov    (%rax),%eax
 8068a04:	83 f8 29             	cmp    $0x29,%eax
 8068a07:	0f 84 5b 00 00 00    	je     8068a68 <block+0xb27>
 8068a0d:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a12:	48 89 c7             	mov    %rax,%rdi
 8068a15:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a1a:	e8 12 7e 01 00       	callq  8080831 <gjmp>
 8068a1f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 8068a25:	48 8b 05 04 56 02 00 	mov    0x25604(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8068a2c:	8b 00                	mov    (%rax),%eax
 8068a2e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8068a31:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a36:	e8 fd f1 ff ff       	callq  8067c38 <gexpr>
 8068a3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a40:	e8 ad 58 ff ff       	callq  805e2f2 <vpop>
 8068a45:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8068a48:	48 89 c7             	mov    %rax,%rdi
 8068a4b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a50:	e8 0a 7e 01 00       	callq  808085f <gjmp_addr>
 8068a55:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 8068a5b:	48 89 c7             	mov    %rax,%rdi
 8068a5e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a63:	e8 a3 54 01 00       	callq  807df0b <gsym>
 8068a68:	b8 29 00 00 00       	mov    $0x29,%eax
 8068a6d:	48 89 c7             	mov    %rax,%rdi
 8068a70:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a75:	e8 69 86 fe ff       	callq  80510e3 <skip>
 8068a7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a7f:	49 89 c1             	mov    %rax,%r9
 8068a82:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068a85:	49 89 c0             	mov    %rax,%r8
 8068a88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8068a8c:	49 89 c3             	mov    %rax,%r11
 8068a8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068a93:	49 89 c2             	mov    %rax,%r10
 8068a96:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8068a9a:	48 89 c6             	mov    %rax,%rsi
 8068a9d:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
 8068aa1:	48 89 c7             	mov    %rax,%rdi
 8068aa4:	4c 89 d2             	mov    %r10,%rdx
 8068aa7:	4c 89 d9             	mov    %r11,%rcx
 8068aaa:	b8 00 00 00 00       	mov    $0x0,%eax
 8068aaf:	e8 8d f4 ff ff       	callq  8067f41 <block>
 8068ab4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8068ab7:	48 89 c7             	mov    %rax,%rdi
 8068aba:	b8 00 00 00 00       	mov    $0x0,%eax
 8068abf:	e8 9b 7d 01 00       	callq  808085f <gjmp_addr>
 8068ac4:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8068ac7:	48 89 c7             	mov    %rax,%rdi
 8068aca:	b8 00 00 00 00       	mov    $0x0,%eax
 8068acf:	e8 37 54 01 00       	callq  807df0b <gsym>
 8068ad4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8068ad7:	48 89 c6             	mov    %rax,%rsi
 8068ada:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8068add:	48 89 c7             	mov    %rax,%rdi
 8068ae0:	b8 00 00 00 00       	mov    $0x0,%eax
 8068ae5:	e8 b4 53 01 00       	callq  807de9e <gsym_addr>
 8068aea:	48 8b 05 ff 54 02 00 	mov    0x254ff(%rip),%rax        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 8068af1:	48 8b 00             	mov    (%rax),%rax
 8068af4:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8068afb:	00 00 00 
 8068afe:	48 01 c8             	add    %rcx,%rax
 8068b01:	48 8b 08             	mov    (%rax),%rcx
 8068b04:	4c 8b 1d e5 54 02 00 	mov    0x254e5(%rip),%r11        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 8068b0b:	49 89 0b             	mov    %rcx,(%r11)
 8068b0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8068b12:	48 89 c6             	mov    %rax,%rsi
 8068b15:	48 8b 05 1c 54 02 00 	mov    0x2541c(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 8068b1c:	48 89 c7             	mov    %rax,%rdi
 8068b1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b24:	e8 c7 38 ff ff       	callq  805c3f0 <sym_pop>
 8068b29:	e9 9b 09 00 00       	jmpq   80694c9 <block+0x1588>
 8068b2e:	48 8b 05 f3 53 02 00 	mov    0x253f3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068b35:	8b 00                	mov    (%rax),%eax
 8068b37:	81 f8 0d 01 00 00    	cmp    $0x10d,%eax
 8068b3d:	0f 85 0a 01 00 00    	jne    8068c4d <block+0xd0c>
 8068b43:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b48:	e8 7d fb fe ff       	callq  80586ca <next>
 8068b4d:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b52:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8068b55:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b5a:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8068b5d:	48 8b 05 cc 54 02 00 	mov    0x254cc(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8068b64:	8b 00                	mov    (%rax),%eax
 8068b66:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8068b69:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b6e:	49 89 c1             	mov    %rax,%r9
 8068b71:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068b74:	49 89 c0             	mov    %rax,%r8
 8068b77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8068b7b:	49 89 c3             	mov    %rax,%r11
 8068b7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068b82:	49 89 c2             	mov    %rax,%r10
 8068b85:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8068b89:	48 89 c6             	mov    %rax,%rsi
 8068b8c:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
 8068b90:	48 89 c7             	mov    %rax,%rdi
 8068b93:	4c 89 d2             	mov    %r10,%rdx
 8068b96:	4c 89 d9             	mov    %r11,%rcx
 8068b99:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b9e:	e8 9e f3 ff ff       	callq  8067f41 <block>
 8068ba3:	b8 05 01 00 00       	mov    $0x105,%eax
 8068ba8:	48 89 c7             	mov    %rax,%rdi
 8068bab:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bb0:	e8 2e 85 fe ff       	callq  80510e3 <skip>
 8068bb5:	b8 28 00 00 00       	mov    $0x28,%eax
 8068bba:	48 89 c7             	mov    %rax,%rdi
 8068bbd:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bc2:	e8 1c 85 fe ff       	callq  80510e3 <skip>
 8068bc7:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8068bca:	48 89 c7             	mov    %rax,%rdi
 8068bcd:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bd2:	e8 34 53 01 00       	callq  807df0b <gsym>
 8068bd7:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bdc:	e8 57 f0 ff ff       	callq  8067c38 <gexpr>
 8068be1:	b8 00 00 00 00       	mov    $0x0,%eax
 8068be6:	48 89 c6             	mov    %rax,%rsi
 8068be9:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bee:	48 89 c7             	mov    %rax,%rdi
 8068bf1:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bf6:	e8 ec 7c 01 00       	callq  80808e7 <gtst>
 8068bfb:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8068bfe:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8068c01:	48 89 c6             	mov    %rax,%rsi
 8068c04:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8068c07:	48 89 c7             	mov    %rax,%rdi
 8068c0a:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c0f:	e8 8a 52 01 00       	callq  807de9e <gsym_addr>
 8068c14:	b8 29 00 00 00       	mov    $0x29,%eax
 8068c19:	48 89 c7             	mov    %rax,%rdi
 8068c1c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c21:	e8 bd 84 fe ff       	callq  80510e3 <skip>
 8068c26:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8068c29:	48 89 c7             	mov    %rax,%rdi
 8068c2c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c31:	e8 d5 52 01 00       	callq  807df0b <gsym>
 8068c36:	b8 3b 00 00 00       	mov    $0x3b,%eax
 8068c3b:	48 89 c7             	mov    %rax,%rdi
 8068c3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c43:	e8 9b 84 fe ff       	callq  80510e3 <skip>
 8068c48:	e9 7c 08 00 00       	jmpq   80694c9 <block+0x1588>
 8068c4d:	48 8b 05 d4 52 02 00 	mov    0x252d4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068c54:	8b 00                	mov    (%rax),%eax
 8068c56:	81 f8 0f 01 00 00    	cmp    $0x10f,%eax
 8068c5c:	0f 85 f9 00 00 00    	jne    8068d5b <block+0xe1a>
 8068c62:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c67:	e8 5e fa fe ff       	callq  80586ca <next>
 8068c6c:	b8 28 00 00 00       	mov    $0x28,%eax
 8068c71:	48 89 c7             	mov    %rax,%rdi
 8068c74:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c79:	e8 65 84 fe ff       	callq  80510e3 <skip>
 8068c7e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c83:	e8 b0 ef ff ff       	callq  8067c38 <gexpr>
 8068c88:	b8 01 00 00 00       	mov    $0x1,%eax
 8068c8d:	48 89 c7             	mov    %rax,%rdi
 8068c90:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c95:	e8 90 4a ff ff       	callq  805d72a <gv>
 8068c9a:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8068c9d:	b8 00 00 00 00       	mov    $0x0,%eax
 8068ca2:	e8 4b 56 ff ff       	callq  805e2f2 <vpop>
 8068ca7:	b8 29 00 00 00       	mov    $0x29,%eax
 8068cac:	48 89 c7             	mov    %rax,%rdi
 8068caf:	b8 00 00 00 00       	mov    $0x0,%eax
 8068cb4:	e8 2a 84 fe ff       	callq  80510e3 <skip>
 8068cb9:	b8 00 00 00 00       	mov    $0x0,%eax
 8068cbe:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8068cc1:	b8 00 00 00 00       	mov    $0x0,%eax
 8068cc6:	48 89 c7             	mov    %rax,%rdi
 8068cc9:	b8 00 00 00 00       	mov    $0x0,%eax
 8068cce:	e8 5e 7b 01 00       	callq  8080831 <gjmp>
 8068cd3:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8068cd6:	b8 00 00 00 00       	mov    $0x0,%eax
 8068cdb:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8068cde:	b8 00 00 00 00       	mov    $0x0,%eax
 8068ce3:	49 89 c1             	mov    %rax,%r9
 8068ce6:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068ce9:	49 89 c0             	mov    %rax,%r8
 8068cec:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
 8068cf0:	49 89 c3             	mov    %rax,%r11
 8068cf3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8068cf7:	49 89 c2             	mov    %rax,%r10
 8068cfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8068cfe:	48 89 c6             	mov    %rax,%rsi
 8068d01:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
 8068d05:	48 89 c7             	mov    %rax,%rdi
 8068d08:	4c 89 d2             	mov    %r10,%rdx
 8068d0b:	4c 89 d9             	mov    %r11,%rcx
 8068d0e:	b8 00 00 00 00       	mov    $0x0,%eax
 8068d13:	e8 29 f2 ff ff       	callq  8067f41 <block>
 8068d18:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8068d1b:	83 f8 00             	cmp    $0x0,%eax
 8068d1e:	0f 85 0c 00 00 00    	jne    8068d30 <block+0xdef>
 8068d24:	48 8b 05 05 53 02 00 	mov    0x25305(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8068d2b:	8b 00                	mov    (%rax),%eax
 8068d2d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8068d30:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8068d33:	48 89 c6             	mov    %rax,%rsi
 8068d36:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8068d39:	48 89 c7             	mov    %rax,%rdi
 8068d3c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068d41:	e8 58 51 01 00       	callq  807de9e <gsym_addr>
 8068d46:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8068d49:	48 89 c7             	mov    %rax,%rdi
 8068d4c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068d51:	e8 b5 51 01 00       	callq  807df0b <gsym>
 8068d56:	e9 6e 07 00 00       	jmpq   80694c9 <block+0x1588>
 8068d5b:	48 8b 05 c6 51 02 00 	mov    0x251c6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068d62:	8b 00                	mov    (%rax),%eax
 8068d64:	81 f8 10 01 00 00    	cmp    $0x110,%eax
 8068d6a:	0f 85 3f 02 00 00    	jne    8068faf <block+0x106e>
 8068d70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068d74:	85 c0                	test   %eax,%eax
 8068d76:	0f 84 05 00 00 00    	je     8068d81 <block+0xe40>
 8068d7c:	e9 14 00 00 00       	jmpq   8068d95 <block+0xe54>
 8068d81:	48 8d 05 c1 32 02 00 	lea    0x232c1(%rip),%rax        # 808c049 <L.199>
 8068d88:	48 89 c7             	mov    %rax,%rdi
 8068d8b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068d90:	e8 bd 83 fe ff       	callq  8051152 <expect>
 8068d95:	b8 00 00 00 00       	mov    $0x0,%eax
 8068d9a:	e8 2b f9 fe ff       	callq  80586ca <next>
 8068d9f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068da4:	e8 0e f0 ff ff       	callq  8067db7 <expr_const>
 8068da9:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
 8068daf:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8068db5:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 8068dbb:	48 8b 05 fe 51 02 00 	mov    0x251fe(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 8068dc2:	8b 00                	mov    (%rax),%eax
 8068dc4:	85 c0                	test   %eax,%eax
 8068dc6:	0f 84 57 00 00 00    	je     8068e23 <block+0xee2>
 8068dcc:	48 8b 05 55 51 02 00 	mov    0x25155(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068dd3:	8b 00                	mov    (%rax),%eax
 8068dd5:	81 f8 cc 00 00 00    	cmp    $0xcc,%eax
 8068ddb:	0f 85 42 00 00 00    	jne    8068e23 <block+0xee2>
 8068de1:	b8 00 00 00 00       	mov    $0x0,%eax
 8068de6:	e8 df f8 fe ff       	callq  80586ca <next>
 8068deb:	b8 00 00 00 00       	mov    $0x0,%eax
 8068df0:	e8 c2 ef ff ff       	callq  8067db7 <expr_const>
 8068df5:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 8068dfb:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 8068e01:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
 8068e07:	39 c8                	cmp    %ecx,%eax
 8068e09:	0f 8d 14 00 00 00    	jge    8068e23 <block+0xee2>
 8068e0f:	48 8d 05 3a 32 02 00 	lea    0x2323a(%rip),%rax        # 808c050 <L.200>
 8068e16:	48 89 c7             	mov    %rax,%rdi
 8068e19:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e1e:	e8 dc 4a fe ff       	callq  804d8ff <tcc_warning>
 8068e23:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e28:	48 89 c7             	mov    %rax,%rdi
 8068e2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e30:	e8 fc 79 01 00       	callq  8080831 <gjmp>
 8068e35:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8068e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068e3c:	8b 08                	mov    (%rax),%ecx
 8068e3e:	48 89 cf             	mov    %rcx,%rdi
 8068e41:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e46:	e8 c0 50 01 00       	callq  807df0b <gsym>
 8068e4b:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e50:	48 89 c6             	mov    %rax,%rsi
 8068e53:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068e56:	48 89 c7             	mov    %rax,%rdi
 8068e59:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e5e:	e8 a5 3f ff ff       	callq  805ce08 <vseti>
 8068e63:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8068e69:	48 89 c7             	mov    %rax,%rdi
 8068e6c:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e71:	e8 84 39 ff ff       	callq  805c7fa <vpushi>
 8068e76:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8068e7c:	8b 8d 74 ff ff ff    	mov    -0x8c(%rbp),%ecx
 8068e82:	39 c8                	cmp    %ecx,%eax
 8068e84:	0f 85 45 00 00 00    	jne    8068ecf <block+0xf8e>
 8068e8a:	b8 94 00 00 00       	mov    $0x94,%eax
 8068e8f:	48 89 c7             	mov    %rax,%rdi
 8068e92:	b8 00 00 00 00       	mov    $0x0,%eax
 8068e97:	e8 24 69 ff ff       	callq  805f7c0 <gen_op>
 8068e9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068ea0:	b9 00 00 00 00       	mov    $0x0,%ecx
 8068ea5:	48 89 ce             	mov    %rcx,%rsi
 8068ea8:	b9 01 00 00 00       	mov    $0x1,%ecx
 8068ead:	48 89 cf             	mov    %rcx,%rdi
 8068eb0:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 8068eb7:	b8 00 00 00 00       	mov    $0x0,%eax
 8068ebc:	e8 26 7a 01 00       	callq  80808e7 <gtst>
 8068ec1:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
 8068ec8:	89 01                	mov    %eax,(%rcx)
 8068eca:	e9 ac 00 00 00       	jmpq   8068f7b <block+0x103a>
 8068ecf:	b8 9d 00 00 00       	mov    $0x9d,%eax
 8068ed4:	48 89 c7             	mov    %rax,%rdi
 8068ed7:	b8 00 00 00 00       	mov    $0x0,%eax
 8068edc:	e8 df 68 ff ff       	callq  805f7c0 <gen_op>
 8068ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068ee5:	b9 00 00 00 00       	mov    $0x0,%ecx
 8068eea:	48 89 ce             	mov    %rcx,%rsi
 8068eed:	b9 01 00 00 00       	mov    $0x1,%ecx
 8068ef2:	48 89 cf             	mov    %rcx,%rdi
 8068ef5:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 8068efc:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f01:	e8 e1 79 01 00       	callq  80808e7 <gtst>
 8068f06:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
 8068f0d:	89 01                	mov    %eax,(%rcx)
 8068f0f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f14:	48 89 c6             	mov    %rax,%rsi
 8068f17:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8068f1a:	48 89 c7             	mov    %rax,%rdi
 8068f1d:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f22:	e8 e1 3e ff ff       	callq  805ce08 <vseti>
 8068f27:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 8068f2d:	48 89 c7             	mov    %rax,%rdi
 8068f30:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f35:	e8 c0 38 ff ff       	callq  805c7fa <vpushi>
 8068f3a:	b8 9e 00 00 00       	mov    $0x9e,%eax
 8068f3f:	48 89 c7             	mov    %rax,%rdi
 8068f42:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f47:	e8 74 68 ff ff       	callq  805f7c0 <gen_op>
 8068f4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8068f50:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8068f54:	8b 11                	mov    (%rcx),%edx
 8068f56:	48 89 d6             	mov    %rdx,%rsi
 8068f59:	b9 01 00 00 00       	mov    $0x1,%ecx
 8068f5e:	48 89 cf             	mov    %rcx,%rdi
 8068f61:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8068f68:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f6d:	e8 75 79 01 00       	callq  80808e7 <gtst>
 8068f72:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8068f79:	89 01                	mov    %eax,(%rcx)
 8068f7b:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8068f7e:	48 89 c7             	mov    %rax,%rdi
 8068f81:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f86:	e8 80 4f 01 00       	callq  807df0b <gsym>
 8068f8b:	b8 3a 00 00 00       	mov    $0x3a,%eax
 8068f90:	48 89 c7             	mov    %rax,%rdi
 8068f93:	b8 00 00 00 00       	mov    $0x0,%eax
 8068f98:	e8 46 81 fe ff       	callq  80510e3 <skip>
 8068f9d:	b8 00 00 00 00       	mov    $0x0,%eax
 8068fa2:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8068fa5:	e9 46 04 00 00       	jmpq   80693f0 <block+0x14af>
 8068faa:	e9 1a 05 00 00       	jmpq   80694c9 <block+0x1588>
 8068faf:	48 8b 05 72 4f 02 00 	mov    0x24f72(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8068fb6:	8b 00                	mov    (%rax),%eax
 8068fb8:	81 f8 2b 01 00 00    	cmp    $0x12b,%eax
 8068fbe:	0f 85 84 00 00 00    	jne    8069048 <block+0x1107>
 8068fc4:	b8 00 00 00 00       	mov    $0x0,%eax
 8068fc9:	e8 fc f6 fe ff       	callq  80586ca <next>
 8068fce:	b8 3a 00 00 00       	mov    $0x3a,%eax
 8068fd3:	48 89 c7             	mov    %rax,%rdi
 8068fd6:	b8 00 00 00 00       	mov    $0x0,%eax
 8068fdb:	e8 03 81 fe ff       	callq  80510e3 <skip>
 8068fe0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8068fe4:	85 c0                	test   %eax,%eax
 8068fe6:	0f 84 05 00 00 00    	je     8068ff1 <block+0x10b0>
 8068fec:	e9 14 00 00 00       	jmpq   8069005 <block+0x10c4>
 8068ff1:	48 8d 05 69 30 02 00 	lea    0x23069(%rip),%rax        # 808c061 <L.201>
 8068ff8:	48 89 c7             	mov    %rax,%rdi
 8068ffb:	b8 00 00 00 00       	mov    $0x0,%eax
 8069000:	e8 4d 81 fe ff       	callq  8051152 <expect>
 8069005:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8069009:	8b 08                	mov    (%rax),%ecx
 806900b:	85 c9                	test   %ecx,%ecx
 806900d:	0f 84 14 00 00 00    	je     8069027 <block+0x10e6>
 8069013:	48 8d 05 4e 30 02 00 	lea    0x2304e(%rip),%rax        # 808c068 <L.202>
 806901a:	48 89 c7             	mov    %rax,%rdi
 806901d:	b8 00 00 00 00       	mov    $0x0,%eax
 8069022:	e8 a0 46 fe ff       	callq  804d6c7 <tcc_error>
 8069027:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806902b:	48 8b 0d fe 4f 02 00 	mov    0x24ffe(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8069032:	8b 09                	mov    (%rcx),%ecx
 8069034:	89 08                	mov    %ecx,(%rax)
 8069036:	b8 00 00 00 00       	mov    $0x0,%eax
 806903b:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806903e:	e9 ad 03 00 00       	jmpq   80693f0 <block+0x14af>
 8069043:	e9 81 04 00 00       	jmpq   80694c9 <block+0x1588>
 8069048:	48 8b 05 d9 4e 02 00 	mov    0x24ed9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806904f:	8b 00                	mov    (%rax),%eax
 8069051:	81 f8 0c 01 00 00    	cmp    $0x10c,%eax
 8069057:	0f 85 1f 02 00 00    	jne    806927c <block+0x133b>
 806905d:	b8 00 00 00 00       	mov    $0x0,%eax
 8069062:	e8 63 f6 fe ff       	callq  80586ca <next>
 8069067:	48 8b 05 ba 4e 02 00 	mov    0x24eba(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806906e:	8b 00                	mov    (%rax),%eax
 8069070:	83 f8 2a             	cmp    $0x2a,%eax
 8069073:	0f 85 60 00 00 00    	jne    80690d9 <block+0x1198>
 8069079:	48 8b 05 40 4f 02 00 	mov    0x24f40(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 8069080:	8b 00                	mov    (%rax),%eax
 8069082:	85 c0                	test   %eax,%eax
 8069084:	0f 84 4f 00 00 00    	je     80690d9 <block+0x1198>
 806908a:	b8 00 00 00 00       	mov    $0x0,%eax
 806908f:	e8 36 f6 fe ff       	callq  80586ca <next>
 8069094:	b8 00 00 00 00       	mov    $0x0,%eax
 8069099:	e8 9a eb ff ff       	callq  8067c38 <gexpr>
 806909e:	48 8b 05 7b 4e 02 00 	mov    0x24e7b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80690a5:	48 8b 00             	mov    (%rax),%rax
 80690a8:	8b 08                	mov    (%rax),%ecx
 80690aa:	83 e1 0f             	and    $0xf,%ecx
 80690ad:	83 f9 04             	cmp    $0x4,%ecx
 80690b0:	0f 84 14 00 00 00    	je     80690ca <block+0x1189>
 80690b6:	48 8d 05 be 2f 02 00 	lea    0x22fbe(%rip),%rax        # 808c07b <L.203>
 80690bd:	48 89 c7             	mov    %rax,%rdi
 80690c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80690c5:	e8 88 80 fe ff       	callq  8051152 <expect>
 80690ca:	b8 00 00 00 00       	mov    $0x0,%eax
 80690cf:	e8 27 97 01 00       	callq  80827fb <ggoto>
 80690d4:	e9 8c 01 00 00       	jmpq   8069265 <block+0x1324>
 80690d9:	48 8b 05 48 4e 02 00 	mov    0x24e48(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80690e0:	8b 00                	mov    (%rax),%eax
 80690e2:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 80690e8:	0f 8c 63 01 00 00    	jl     8069251 <block+0x1310>
 80690ee:	48 8b 05 33 4e 02 00 	mov    0x24e33(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80690f5:	8b 00                	mov    (%rax),%eax
 80690f7:	48 89 c7             	mov    %rax,%rdi
 80690fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80690ff:	e8 97 ae fe ff       	callq  8053f9b <label_find>
 8069104:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8069108:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806910c:	85 c0                	test   %eax,%eax
 806910e:	0f 84 05 00 00 00    	je     8069119 <block+0x11d8>
 8069114:	e9 34 00 00 00       	jmpq   806914d <block+0x120c>
 8069119:	b8 01 00 00 00       	mov    $0x1,%eax
 806911e:	49 89 c2             	mov    %rax,%r10
 8069121:	48 8b 05 00 4e 02 00 	mov    0x24e00(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069128:	8b 00                	mov    (%rax),%eax
 806912a:	48 89 c6             	mov    %rax,%rsi
 806912d:	48 8b 05 84 4e 02 00 	mov    0x24e84(%rip),%rax        # 808dfb8 <_GLOBAL_OFFSET_TABLE_+0x338>
 8069134:	48 89 c7             	mov    %rax,%rdi
 8069137:	4c 89 d2             	mov    %r10,%rdx
 806913a:	b8 00 00 00 00       	mov    $0x0,%eax
 806913f:	e8 ce ae fe ff       	callq  8054012 <label_push>
 8069144:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8069148:	e9 45 00 00 00       	jmpq   8069192 <block+0x1251>
 806914d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069151:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8069158:	00 00 00 
 806915b:	48 01 c8             	add    %rcx,%rax
 806915e:	48 8b 08             	mov    (%rax),%rcx
 8069161:	48 b8 02 00 00 00 00 	movabs $0x2,%rax
 8069168:	00 00 00 
 806916b:	48 39 c1             	cmp    %rax,%rcx
 806916e:	0f 85 1e 00 00 00    	jne    8069192 <block+0x1251>
 8069174:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069178:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806917f:	00 00 00 
 8069182:	48 01 c8             	add    %rcx,%rax
 8069185:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 806918c:	00 00 00 
 806918f:	48 89 08             	mov    %rcx,(%rax)
 8069192:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069196:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806919d:	00 00 00 
 80691a0:	48 01 c8             	add    %rcx,%rax
 80691a3:	48 8b 08             	mov    (%rax),%rcx
 80691a6:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 80691ad:	00 00 00 
 80691b0:	48 21 c1             	and    %rax,%rcx
 80691b3:	48 89 c8             	mov    %rcx,%rax
 80691b6:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80691bd:	00 00 00 
 80691c0:	48 39 c8             	cmp    %rcx,%rax
 80691c3:	b8 00 00 00 00       	mov    $0x0,%eax
 80691c8:	0f 95 c0             	setne  %al
 80691cb:	85 c0                	test   %eax,%eax
 80691cd:	0f 84 4e 00 00 00    	je     8069221 <block+0x12e0>
 80691d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 80691d7:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80691de:	00 00 00 
 80691e1:	48 01 c8             	add    %rcx,%rax
 80691e4:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 80691e8:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 80691ef:	00 00 00 
 80691f2:	48 01 d1             	add    %rdx,%rcx
 80691f5:	48 8b 11             	mov    (%rcx),%rdx
 80691f8:	48 89 d7             	mov    %rdx,%rdi
 80691fb:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 8069202:	b8 00 00 00 00       	mov    $0x0,%eax
 8069207:	e8 25 76 01 00       	callq  8080831 <gjmp>
 806920c:	48 63 c0             	movslq %eax,%rax
 806920f:	48 89 c1             	mov    %rax,%rcx
 8069212:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 8069219:	48 89 08             	mov    %rcx,(%rax)
 806921c:	e9 21 00 00 00       	jmpq   8069242 <block+0x1301>
 8069221:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069225:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806922c:	00 00 00 
 806922f:	48 01 c8             	add    %rcx,%rax
 8069232:	48 8b 08             	mov    (%rax),%rcx
 8069235:	48 89 cf             	mov    %rcx,%rdi
 8069238:	b8 00 00 00 00       	mov    $0x0,%eax
 806923d:	e8 1d 76 01 00       	callq  808085f <gjmp_addr>
 8069242:	b8 00 00 00 00       	mov    $0x0,%eax
 8069247:	e8 7e f4 fe ff       	callq  80586ca <next>
 806924c:	e9 14 00 00 00       	jmpq   8069265 <block+0x1324>
 8069251:	48 8d 05 2b 2e 02 00 	lea    0x22e2b(%rip),%rax        # 808c083 <L.204>
 8069258:	48 89 c7             	mov    %rax,%rdi
 806925b:	b8 00 00 00 00       	mov    $0x0,%eax
 8069260:	e8 ed 7e fe ff       	callq  8051152 <expect>
 8069265:	b8 3b 00 00 00       	mov    $0x3b,%eax
 806926a:	48 89 c7             	mov    %rax,%rdi
 806926d:	b8 00 00 00 00       	mov    $0x0,%eax
 8069272:	e8 6c 7e fe ff       	callq  80510e3 <skip>
 8069277:	e9 4d 02 00 00       	jmpq   80694c9 <block+0x1588>
 806927c:	48 8b 05 a5 4c 02 00 	mov    0x24ca5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069283:	8b 00                	mov    (%rax),%eax
 8069285:	81 f8 36 01 00 00    	cmp    $0x136,%eax
 806928b:	0f 84 2f 00 00 00    	je     80692c0 <block+0x137f>
 8069291:	48 8b 05 90 4c 02 00 	mov    0x24c90(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069298:	8b 00                	mov    (%rax),%eax
 806929a:	81 f8 37 01 00 00    	cmp    $0x137,%eax
 80692a0:	0f 84 1a 00 00 00    	je     80692c0 <block+0x137f>
 80692a6:	48 8b 05 7b 4c 02 00 	mov    0x24c7b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80692ad:	8b 00                	mov    (%rax),%eax
 80692af:	81 f8 38 01 00 00    	cmp    $0x138,%eax
 80692b5:	0f 84 05 00 00 00    	je     80692c0 <block+0x137f>
 80692bb:	e9 0f 00 00 00       	jmpq   80692cf <block+0x138e>
 80692c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80692c5:	e8 3a 24 01 00       	callq  807b704 <asm_instr>
 80692ca:	e9 fa 01 00 00       	jmpq   80694c9 <block+0x1588>
 80692cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80692d4:	e8 60 eb ff ff       	callq  8067e39 <is_label>
 80692d9:	89 45 c8             	mov    %eax,-0x38(%rbp)
 80692dc:	8b 45 c8             	mov    -0x38(%rbp),%eax
 80692df:	85 c0                	test   %eax,%eax
 80692e1:	0f 84 86 01 00 00    	je     806946d <block+0x152c>
 80692e7:	8b 45 c8             	mov    -0x38(%rbp),%eax
 80692ea:	48 89 c7             	mov    %rax,%rdi
 80692ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80692f2:	e8 a4 ac fe ff       	callq  8053f9b <label_find>
 80692f7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 80692fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 80692ff:	85 c0                	test   %eax,%eax
 8069301:	0f 84 9d 00 00 00    	je     80693a4 <block+0x1463>
 8069307:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806930b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8069312:	00 00 00 
 8069315:	48 01 c8             	add    %rcx,%rax
 8069318:	48 8b 08             	mov    (%rax),%rcx
 806931b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8069322:	00 00 00 
 8069325:	48 39 c1             	cmp    %rax,%rcx
 8069328:	0f 85 32 00 00 00    	jne    8069360 <block+0x141f>
 806932e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069332:	b9 00 00 00 00       	mov    $0x0,%ecx
 8069337:	48 89 ce             	mov    %rcx,%rsi
 806933a:	8b 08                	mov    (%rax),%ecx
 806933c:	48 89 cf             	mov    %rcx,%rdi
 806933f:	b8 00 00 00 00       	mov    $0x0,%eax
 8069344:	e8 6b 85 fe ff       	callq  80518b4 <get_tok_str>
 8069349:	48 89 c6             	mov    %rax,%rsi
 806934c:	48 8d 05 41 2d 02 00 	lea    0x22d41(%rip),%rax        # 808c094 <L.205>
 8069353:	48 89 c7             	mov    %rax,%rdi
 8069356:	b8 00 00 00 00       	mov    $0x0,%eax
 806935b:	e8 67 43 fe ff       	callq  804d6c7 <tcc_error>
 8069360:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069364:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806936b:	00 00 00 
 806936e:	48 01 c8             	add    %rcx,%rax
 8069371:	48 8b 08             	mov    (%rax),%rcx
 8069374:	48 89 cf             	mov    %rcx,%rdi
 8069377:	b8 00 00 00 00       	mov    $0x0,%eax
 806937c:	e8 8a 4b 01 00       	callq  807df0b <gsym>
 8069381:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8069385:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806938c:	00 00 00 
 806938f:	48 01 c8             	add    %rcx,%rax
 8069392:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8069399:	00 00 00 
 806939c:	48 89 08             	mov    %rcx,(%rax)
 806939f:	e9 29 00 00 00       	jmpq   80693cd <block+0x148c>
 80693a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80693a9:	49 89 c2             	mov    %rax,%r10
 80693ac:	8b 45 c8             	mov    -0x38(%rbp),%eax
 80693af:	48 89 c6             	mov    %rax,%rsi
 80693b2:	48 8b 05 ff 4b 02 00 	mov    0x24bff(%rip),%rax        # 808dfb8 <_GLOBAL_OFFSET_TABLE_+0x338>
 80693b9:	48 89 c7             	mov    %rax,%rdi
 80693bc:	4c 89 d2             	mov    %r10,%rdx
 80693bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80693c4:	e8 49 ac fe ff       	callq  8054012 <label_push>
 80693c9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 80693cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 80693d1:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80693d8:	00 00 00 
 80693db:	48 01 c8             	add    %rcx,%rax
 80693de:	48 8b 0d 4b 4c 02 00 	mov    0x24c4b(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80693e5:	8b 09                	mov    (%rcx),%ecx
 80693e7:	48 63 c9             	movslq %ecx,%rcx
 80693ea:	48 89 ca             	mov    %rcx,%rdx
 80693ed:	48 89 10             	mov    %rdx,(%rax)
 80693f0:	48 8b 05 31 4b 02 00 	mov    0x24b31(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80693f7:	8b 00                	mov    (%rax),%eax
 80693f9:	83 f8 7d             	cmp    $0x7d,%eax
 80693fc:	0f 85 19 00 00 00    	jne    806941b <block+0x14da>
 8069402:	48 8d 05 a0 2c 02 00 	lea    0x22ca0(%rip),%rax        # 808c0a9 <L.206>
 8069409:	48 89 c7             	mov    %rax,%rdi
 806940c:	b8 00 00 00 00       	mov    $0x0,%eax
 8069411:	e8 e9 44 fe ff       	callq  804d8ff <tcc_warning>
 8069416:	e9 4d 00 00 00       	jmpq   8069468 <block+0x1527>
 806941b:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806941e:	85 c0                	test   %eax,%eax
 8069420:	0f 84 0a 00 00 00    	je     8069430 <block+0x14ef>
 8069426:	b8 00 00 00 00       	mov    $0x0,%eax
 806942b:	e8 c2 4e ff ff       	callq  805e2f2 <vpop>
 8069430:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069433:	49 89 c1             	mov    %rax,%r9
 8069436:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8069439:	49 89 c0             	mov    %rax,%r8
 806943c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8069440:	49 89 c3             	mov    %rax,%r11
 8069443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8069447:	49 89 c2             	mov    %rax,%r10
 806944a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806944e:	48 89 c6             	mov    %rax,%rsi
 8069451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069455:	48 89 c7             	mov    %rax,%rdi
 8069458:	4c 89 d2             	mov    %r10,%rdx
 806945b:	4c 89 d9             	mov    %r11,%rcx
 806945e:	b8 00 00 00 00       	mov    $0x0,%eax
 8069463:	e8 d9 ea ff ff       	callq  8067f41 <block>
 8069468:	e9 5c 00 00 00       	jmpq   80694c9 <block+0x1588>
 806946d:	48 8b 05 b4 4a 02 00 	mov    0x24ab4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069474:	8b 00                	mov    (%rax),%eax
 8069476:	83 f8 3b             	cmp    $0x3b,%eax
 8069479:	0f 84 38 00 00 00    	je     80694b7 <block+0x1576>
 806947f:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069482:	85 c0                	test   %eax,%eax
 8069484:	0f 84 19 00 00 00    	je     80694a3 <block+0x1562>
 806948a:	b8 00 00 00 00       	mov    $0x0,%eax
 806948f:	e8 5e 4e ff ff       	callq  805e2f2 <vpop>
 8069494:	b8 00 00 00 00       	mov    $0x0,%eax
 8069499:	e8 9a e7 ff ff       	callq  8067c38 <gexpr>
 806949e:	e9 14 00 00 00       	jmpq   80694b7 <block+0x1576>
 80694a3:	b8 00 00 00 00       	mov    $0x0,%eax
 80694a8:	e8 8b e7 ff ff       	callq  8067c38 <gexpr>
 80694ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80694b2:	e8 3b 4e ff ff       	callq  805e2f2 <vpop>
 80694b7:	b8 3b 00 00 00       	mov    $0x3b,%eax
 80694bc:	48 89 c7             	mov    %rax,%rdi
 80694bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80694c4:	e8 1a 7c fe ff       	callq  80510e3 <skip>
 80694c9:	c9                   	leaveq 
 80694ca:	c3                   	retq   

00000000080694cb <decl_designator>:
 80694cb:	55                   	push   %rbp
 80694cc:	48 89 e5             	mov    %rsp,%rbp
 80694cf:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
 80694d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80694da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80694de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80694e2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80694e6:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 80694ea:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 80694ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80694f3:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80694f6:	b8 00 00 00 00       	mov    $0x0,%eax
 80694fb:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 80694fe:	b8 01 00 00 00       	mov    $0x1,%eax
 8069503:	89 45 a8             	mov    %eax,-0x58(%rbp)
 8069506:	48 8b 05 b3 4a 02 00 	mov    0x24ab3(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 806950d:	8b 00                	mov    (%rax),%eax
 806950f:	85 c0                	test   %eax,%eax
 8069511:	0f 84 1b 00 00 00    	je     8069532 <decl_designator+0x67>
 8069517:	b8 00 00 00 00       	mov    $0x0,%eax
 806951c:	e8 18 e9 ff ff       	callq  8067e39 <is_label>
 8069521:	89 45 ac             	mov    %eax,-0x54(%rbp)
 8069524:	83 f8 00             	cmp    $0x0,%eax
 8069527:	0f 84 05 00 00 00    	je     8069532 <decl_designator+0x67>
 806952d:	e9 9d 02 00 00       	jmpq   80697cf <decl_designator+0x304>
 8069532:	48 8b 05 ef 49 02 00 	mov    0x249ef(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069539:	8b 00                	mov    (%rax),%eax
 806953b:	83 f8 5b             	cmp    $0x5b,%eax
 806953e:	0f 84 17 00 00 00    	je     806955b <decl_designator+0x90>
 8069544:	48 8b 05 dd 49 02 00 	mov    0x249dd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806954b:	8b 00                	mov    (%rax),%eax
 806954d:	83 f8 2e             	cmp    $0x2e,%eax
 8069550:	0f 84 05 00 00 00    	je     806955b <decl_designator+0x90>
 8069556:	e9 d2 03 00 00       	jmpq   806992d <decl_designator+0x462>
 806955b:	48 8b 05 c6 49 02 00 	mov    0x249c6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069562:	8b 00                	mov    (%rax),%eax
 8069564:	83 f8 5b             	cmp    $0x5b,%eax
 8069567:	0f 85 42 02 00 00    	jne    80697af <decl_designator+0x2e4>
 806956d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069571:	8b 08                	mov    (%rax),%ecx
 8069573:	83 e1 20             	and    $0x20,%ecx
 8069576:	85 c9                	test   %ecx,%ecx
 8069578:	0f 84 05 00 00 00    	je     8069583 <decl_designator+0xb8>
 806957e:	e9 14 00 00 00       	jmpq   8069597 <decl_designator+0xcc>
 8069583:	48 8d 05 54 2b 02 00 	lea    0x22b54(%rip),%rax        # 808c0de <L.207>
 806958a:	48 89 c7             	mov    %rax,%rdi
 806958d:	b8 00 00 00 00       	mov    $0x0,%eax
 8069592:	e8 bb 7b fe ff       	callq  8051152 <expect>
 8069597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806959b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80695a2:	00 00 00 
 80695a5:	48 01 c8             	add    %rcx,%rax
 80695a8:	48 8b 08             	mov    (%rax),%rcx
 80695ab:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 80695af:	b8 00 00 00 00       	mov    $0x0,%eax
 80695b4:	e8 11 f1 fe ff       	callq  80586ca <next>
 80695b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80695be:	e8 f4 e7 ff ff       	callq  8067db7 <expr_const>
 80695c3:	89 45 b8             	mov    %eax,-0x48(%rbp)
 80695c6:	8b 45 b8             	mov    -0x48(%rbp),%eax
 80695c9:	83 f8 00             	cmp    $0x0,%eax
 80695cc:	0f 8c 57 00 00 00    	jl     8069629 <decl_designator+0x15e>
 80695d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80695d6:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80695dd:	00 00 00 
 80695e0:	48 01 c8             	add    %rcx,%rax
 80695e3:	48 8b 08             	mov    (%rax),%rcx
 80695e6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80695ed:	00 00 00 
 80695f0:	48 39 c1             	cmp    %rax,%rcx
 80695f3:	0f 8c 2b 00 00 00    	jl     8069624 <decl_designator+0x159>
 80695f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80695fd:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8069604:	00 00 00 
 8069607:	48 01 c8             	add    %rcx,%rax
 806960a:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 806960d:	48 63 c9             	movslq %ecx,%rcx
 8069610:	48 89 ca             	mov    %rcx,%rdx
 8069613:	48 8b 08             	mov    (%rax),%rcx
 8069616:	48 39 ca             	cmp    %rcx,%rdx
 8069619:	0f 8c 05 00 00 00    	jl     8069624 <decl_designator+0x159>
 806961f:	e9 05 00 00 00       	jmpq   8069629 <decl_designator+0x15e>
 8069624:	e9 14 00 00 00       	jmpq   806963d <decl_designator+0x172>
 8069629:	48 8d 05 b9 2a 02 00 	lea    0x22ab9(%rip),%rax        # 808c0e9 <L.208>
 8069630:	48 89 c7             	mov    %rax,%rdi
 8069633:	b8 00 00 00 00       	mov    $0x0,%eax
 8069638:	e8 15 7b fe ff       	callq  8051152 <expect>
 806963d:	48 8b 05 e4 48 02 00 	mov    0x248e4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8069644:	8b 00                	mov    (%rax),%eax
 8069646:	81 f8 cc 00 00 00    	cmp    $0xcc,%eax
 806964c:	0f 85 b2 00 00 00    	jne    8069704 <decl_designator+0x239>
 8069652:	48 8b 05 67 49 02 00 	mov    0x24967(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 8069659:	8b 00                	mov    (%rax),%eax
 806965b:	85 c0                	test   %eax,%eax
 806965d:	0f 84 a1 00 00 00    	je     8069704 <decl_designator+0x239>
 8069663:	b8 00 00 00 00       	mov    $0x0,%eax
 8069668:	e8 5d f0 fe ff       	callq  80586ca <next>
 806966d:	b8 00 00 00 00       	mov    $0x0,%eax
 8069672:	e8 40 e7 ff ff       	callq  8067db7 <expr_const>
 8069677:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 806967a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 806967d:	83 f8 00             	cmp    $0x0,%eax
 8069680:	0f 8c 65 00 00 00    	jl     80696eb <decl_designator+0x220>
 8069686:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806968a:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8069691:	00 00 00 
 8069694:	48 01 c8             	add    %rcx,%rax
 8069697:	48 8b 08             	mov    (%rax),%rcx
 806969a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80696a1:	00 00 00 
 80696a4:	48 39 c1             	cmp    %rax,%rcx
 80696a7:	0f 8c 2b 00 00 00    	jl     80696d8 <decl_designator+0x20d>
 80696ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80696b1:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80696b8:	00 00 00 
 80696bb:	48 01 c8             	add    %rcx,%rax
 80696be:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 80696c1:	48 63 c9             	movslq %ecx,%rcx
 80696c4:	48 89 ca             	mov    %rcx,%rdx
 80696c7:	48 8b 08             	mov    (%rax),%rcx
 80696ca:	48 39 ca             	cmp    %rcx,%rdx
 80696cd:	0f 8c 05 00 00 00    	jl     80696d8 <decl_designator+0x20d>
 80696d3:	e9 13 00 00 00       	jmpq   80696eb <decl_designator+0x220>
 80696d8:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 80696db:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 80696de:	39 c8                	cmp    %ecx,%eax
 80696e0:	0f 8c 05 00 00 00    	jl     80696eb <decl_designator+0x220>
 80696e6:	e9 14 00 00 00       	jmpq   80696ff <decl_designator+0x234>
 80696eb:	48 8d 05 05 2a 02 00 	lea    0x22a05(%rip),%rax        # 808c0f7 <L.209>
 80696f2:	48 89 c7             	mov    %rax,%rdi
 80696f5:	b8 00 00 00 00       	mov    $0x0,%eax
 80696fa:	e8 53 7a fe ff       	callq  8051152 <expect>
 80696ff:	e9 06 00 00 00       	jmpq   806970a <decl_designator+0x23f>
 8069704:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8069707:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 806970a:	b8 5d 00 00 00       	mov    $0x5d,%eax
 806970f:	48 89 c7             	mov    %rax,%rdi
 8069712:	b8 00 00 00 00       	mov    $0x0,%eax
 8069717:	e8 c7 79 fe ff       	callq  80510e3 <skip>
 806971c:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806971f:	85 c0                	test   %eax,%eax
 8069721:	0f 84 05 00 00 00    	je     806972c <decl_designator+0x261>
 8069727:	e9 09 00 00 00       	jmpq   8069735 <decl_designator+0x26a>
 806972c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8069730:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 8069733:	89 08                	mov    %ecx,(%rax)
 8069735:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069739:	48 89 c7             	mov    %rax,%rdi
 806973c:	b8 00 00 00 00       	mov    $0x0,%eax
 8069741:	e8 39 3f 00 00       	callq  806d67f <pointed_type>
 8069746:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 806974a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 806974e:	48 89 c6             	mov    %rax,%rsi
 8069751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069755:	48 89 c7             	mov    %rax,%rdi
 8069758:	b8 00 00 00 00       	mov    $0x0,%eax
 806975d:	e8 b2 76 ff ff       	callq  8060e14 <type_size>
 8069762:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 8069765:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8069768:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
 806976b:	0f af c1             	imul   %ecx,%eax
 806976e:	48 63 c0             	movslq %eax,%rax
 8069771:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8069775:	48 89 c2             	mov    %rax,%rdx
 8069778:	48 01 d1             	add    %rdx,%rcx
 806977b:	48 89 c8             	mov    %rcx,%rax
 806977e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8069782:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 8069785:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 8069788:	48 29 c8             	sub    %rcx,%rax
 806978b:	83 c0 01             	add    $0x1,%eax
 806978e:	89 45 a8             	mov    %eax,-0x58(%rbp)
 8069791:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8069794:	83 f8 01             	cmp    $0x1,%eax
 8069797:	0f 84 0d 00 00 00    	je     80697aa <decl_designator+0x2df>
 806979d:	b8 01 00 00 00       	mov    $0x1,%eax
 80697a2:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80697a5:	e9 83 01 00 00       	jmpq   806992d <decl_designator+0x462>
 80697aa:	e9 71 01 00 00       	jmpq   8069920 <decl_designator+0x455>
 80697af:	b8 00 00 00 00       	mov    $0x0,%eax
 80697b4:	e8 11 ef fe ff       	callq  80586ca <next>
 80697b9:	48 8b 05 68 47 02 00 	mov    0x24768(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80697c0:	8b 00                	mov    (%rax),%eax
 80697c2:	89 45 ac             	mov    %eax,-0x54(%rbp)
 80697c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80697ca:	e8 fb ee fe ff       	callq  80586ca <next>
 80697cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80697d3:	8b 08                	mov    (%rax),%ecx
 80697d5:	83 e1 0f             	and    $0xf,%ecx
 80697d8:	83 f9 07             	cmp    $0x7,%ecx
 80697db:	0f 84 14 00 00 00    	je     80697f5 <decl_designator+0x32a>
 80697e1:	48 8d 05 1d 29 02 00 	lea    0x2291d(%rip),%rax        # 808c105 <L.210>
 80697e8:	48 89 c7             	mov    %rax,%rdi
 80697eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80697f0:	e8 5d 79 fe ff       	callq  8051152 <expect>
 80697f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80697f9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8069800:	00 00 00 
 8069803:	48 01 c8             	add    %rcx,%rax
 8069806:	48 8b 08             	mov    (%rax),%rcx
 8069809:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 806980d:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8069810:	81 c8 00 00 00 20    	or     $0x20000000,%eax
 8069816:	89 45 ac             	mov    %eax,-0x54(%rbp)
 8069819:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806981d:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8069824:	00 00 00 
 8069827:	48 01 c8             	add    %rcx,%rax
 806982a:	48 8b 08             	mov    (%rax),%rcx
 806982d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8069831:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069835:	85 c0                	test   %eax,%eax
 8069837:	0f 84 30 00 00 00    	je     806986d <decl_designator+0x3a2>
 806983d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069841:	8b 08                	mov    (%rax),%ecx
 8069843:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8069846:	39 c1                	cmp    %eax,%ecx
 8069848:	0f 85 05 00 00 00    	jne    8069853 <decl_designator+0x388>
 806984e:	e9 1a 00 00 00       	jmpq   806986d <decl_designator+0x3a2>
 8069853:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069857:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806985e:	00 00 00 
 8069861:	48 01 c8             	add    %rcx,%rax
 8069864:	48 8b 08             	mov    (%rax),%rcx
 8069867:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 806986b:	eb c4                	jmp    8069831 <decl_designator+0x366>
 806986d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069871:	85 c0                	test   %eax,%eax
 8069873:	0f 84 05 00 00 00    	je     806987e <decl_designator+0x3b3>
 8069879:	e9 14 00 00 00       	jmpq   8069892 <decl_designator+0x3c7>
 806987e:	48 8d 05 92 28 02 00 	lea    0x22892(%rip),%rax        # 808c117 <L.211>
 8069885:	48 89 c7             	mov    %rax,%rdi
 8069888:	b8 00 00 00 00       	mov    $0x0,%eax
 806988d:	e8 c0 78 fe ff       	callq  8051152 <expect>
 8069892:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8069895:	85 c0                	test   %eax,%eax
 8069897:	0f 84 05 00 00 00    	je     80698a2 <decl_designator+0x3d7>
 806989d:	e9 0b 00 00 00       	jmpq   80698ad <decl_designator+0x3e2>
 80698a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80698a6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 80698aa:	48 89 08             	mov    %rcx,(%rax)
 80698ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80698b1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80698b8:	00 00 00 
 80698bb:	48 01 c8             	add    %rcx,%rax
 80698be:	b9 10 00 00 00       	mov    $0x10,%ecx
 80698c3:	49 89 ca             	mov    %rcx,%r10
 80698c6:	48 89 c6             	mov    %rax,%rsi
 80698c9:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
 80698cd:	48 89 cf             	mov    %rcx,%rdi
 80698d0:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 80698d4:	4c 89 d2             	mov    %r10,%rdx
 80698d7:	b8 00 00 00 00       	mov    $0x0,%eax
 80698dc:	e8 8f d3 01 00       	callq  8086c70 <memcpy>
 80698e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80698e5:	8b 08                	mov    (%rax),%ecx
 80698e7:	81 e1 80 c7 01 00    	and    $0x1c780,%ecx
 80698ed:	8b 45 90             	mov    -0x70(%rbp),%eax
 80698f0:	48 09 c8             	or     %rcx,%rax
 80698f3:	89 45 90             	mov    %eax,-0x70(%rbp)
 80698f6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 80698fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80698fe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069902:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8069909:	00 00 00 
 806990c:	48 01 c8             	add    %rcx,%rax
 806990f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8069913:	48 8b 10             	mov    (%rax),%rdx
 8069916:	48 01 d1             	add    %rdx,%rcx
 8069919:	48 89 c8             	mov    %rcx,%rax
 806991c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8069920:	b8 01 00 00 00       	mov    $0x1,%eax
 8069925:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8069928:	e9 05 fc ff ff       	jmpq   8069532 <decl_designator+0x67>
 806992d:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8069930:	85 c0                	test   %eax,%eax
 8069932:	0f 84 50 00 00 00    	je     8069988 <decl_designator+0x4bd>
 8069938:	48 8b 05 e9 45 02 00 	mov    0x245e9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806993f:	8b 00                	mov    (%rax),%eax
 8069941:	83 f8 3d             	cmp    $0x3d,%eax
 8069944:	0f 85 0f 00 00 00    	jne    8069959 <decl_designator+0x48e>
 806994a:	b8 00 00 00 00       	mov    $0x0,%eax
 806994f:	e8 76 ed fe ff       	callq  80586ca <next>
 8069954:	e9 2a 00 00 00       	jmpq   8069983 <decl_designator+0x4b8>
 8069959:	48 8b 05 60 46 02 00 	mov    0x24660(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 8069960:	8b 00                	mov    (%rax),%eax
 8069962:	85 c0                	test   %eax,%eax
 8069964:	0f 84 05 00 00 00    	je     806996f <decl_designator+0x4a4>
 806996a:	e9 14 00 00 00       	jmpq   8069983 <decl_designator+0x4b8>
 806996f:	48 8d 05 a7 27 02 00 	lea    0x227a7(%rip),%rax        # 808c11d <L.212>
 8069976:	48 89 c7             	mov    %rax,%rdi
 8069979:	b8 00 00 00 00       	mov    $0x0,%eax
 806997e:	e8 cf 77 fe ff       	callq  8051152 <expect>
 8069983:	e9 09 01 00 00       	jmpq   8069a91 <decl_designator+0x5c6>
 8069988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806998c:	8b 08                	mov    (%rax),%ecx
 806998e:	83 e1 20             	and    $0x20,%ecx
 8069991:	85 c9                	test   %ecx,%ecx
 8069993:	0f 84 55 00 00 00    	je     80699ee <decl_designator+0x523>
 8069999:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806999d:	8b 08                	mov    (%rax),%ecx
 806999f:	89 4d b8             	mov    %ecx,-0x48(%rbp)
 80699a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80699a6:	48 89 c7             	mov    %rax,%rdi
 80699a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80699ae:	e8 cc 3c 00 00       	callq  806d67f <pointed_type>
 80699b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 80699b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 80699bb:	48 89 c6             	mov    %rax,%rsi
 80699be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80699c2:	48 89 c7             	mov    %rax,%rdi
 80699c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80699ca:	e8 45 74 ff ff       	callq  8060e14 <type_size>
 80699cf:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 80699d2:	0f af c8             	imul   %eax,%ecx
 80699d5:	48 63 c9             	movslq %ecx,%rcx
 80699d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80699dc:	48 89 ca             	mov    %rcx,%rdx
 80699df:	48 01 d0             	add    %rdx,%rax
 80699e2:	48 89 c1             	mov    %rax,%rcx
 80699e5:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 80699e9:	e9 a3 00 00 00       	jmpq   8069a91 <decl_designator+0x5c6>
 80699ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80699f2:	48 8b 08             	mov    (%rax),%rcx
 80699f5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 80699f9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80699fd:	85 c0                	test   %eax,%eax
 80699ff:	0f 84 05 00 00 00    	je     8069a0a <decl_designator+0x53f>
 8069a05:	e9 14 00 00 00       	jmpq   8069a1e <decl_designator+0x553>
 8069a0a:	48 8d 05 0e 27 02 00 	lea    0x2270e(%rip),%rax        # 808c11f <L.213>
 8069a11:	48 89 c7             	mov    %rax,%rdi
 8069a14:	b8 00 00 00 00       	mov    $0x0,%eax
 8069a19:	e8 a9 3c fe ff       	callq  804d6c7 <tcc_error>
 8069a1e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069a22:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8069a29:	00 00 00 
 8069a2c:	48 01 c8             	add    %rcx,%rax
 8069a2f:	b9 10 00 00 00       	mov    $0x10,%ecx
 8069a34:	49 89 ca             	mov    %rcx,%r10
 8069a37:	48 89 c6             	mov    %rax,%rsi
 8069a3a:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
 8069a3e:	48 89 cf             	mov    %rcx,%rdi
 8069a41:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8069a45:	4c 89 d2             	mov    %r10,%rdx
 8069a48:	b8 00 00 00 00       	mov    $0x0,%eax
 8069a4d:	e8 1e d2 01 00       	callq  8086c70 <memcpy>
 8069a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069a56:	8b 08                	mov    (%rax),%ecx
 8069a58:	81 e1 80 c7 01 00    	and    $0x1c780,%ecx
 8069a5e:	8b 45 90             	mov    -0x70(%rbp),%eax
 8069a61:	48 09 c8             	or     %rcx,%rax
 8069a64:	89 45 90             	mov    %eax,-0x70(%rbp)
 8069a67:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 8069a6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8069a6f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069a73:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8069a7a:	00 00 00 
 8069a7d:	48 01 c8             	add    %rcx,%rax
 8069a80:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8069a84:	48 8b 10             	mov    (%rax),%rdx
 8069a87:	48 01 d1             	add    %rdx,%rcx
 8069a8a:	48 89 c8             	mov    %rcx,%rax
 8069a8d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8069a91:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069a94:	49 89 c0             	mov    %rax,%r8
 8069a97:	b8 00 00 00 00       	mov    $0x0,%eax
 8069a9c:	49 89 c3             	mov    %rax,%r11
 8069a9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8069aa3:	49 89 c2             	mov    %rax,%r10
 8069aa6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069aaa:	48 89 c6             	mov    %rax,%rsi
 8069aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069ab1:	48 89 c7             	mov    %rax,%rdi
 8069ab4:	4c 89 d2             	mov    %r10,%rdx
 8069ab7:	4c 89 d9             	mov    %r11,%rcx
 8069aba:	b8 00 00 00 00       	mov    $0x0,%eax
 8069abf:	e8 e7 07 00 00       	callq  806a2ab <decl_initializer>
 8069ac4:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069ac7:	85 c0                	test   %eax,%eax
 8069ac9:	0f 84 05 00 00 00    	je     8069ad4 <decl_designator+0x609>
 8069acf:	e9 38 01 00 00       	jmpq   8069c0c <decl_designator+0x741>
 8069ad4:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8069ad7:	83 f8 01             	cmp    $0x1,%eax
 8069ada:	0f 8e 2c 01 00 00    	jle    8069c0c <decl_designator+0x741>
 8069ae0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069ae4:	85 c0                	test   %eax,%eax
 8069ae6:	0f 84 05 00 00 00    	je     8069af1 <decl_designator+0x626>
 8069aec:	e9 14 00 00 00       	jmpq   8069b05 <decl_designator+0x63a>
 8069af1:	48 8d 05 3b 26 02 00 	lea    0x2263b(%rip),%rax        # 808c133 <L.214>
 8069af8:	48 89 c7             	mov    %rax,%rdi
 8069afb:	b8 00 00 00 00       	mov    $0x0,%eax
 8069b00:	e8 c2 3b fe ff       	callq  804d6c7 <tcc_error>
 8069b05:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8069b08:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
 8069b0b:	0f af c1             	imul   %ecx,%eax
 8069b0e:	48 63 c0             	movslq %eax,%rax
 8069b11:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8069b15:	48 89 c2             	mov    %rax,%rdx
 8069b18:	48 01 d1             	add    %rdx,%rcx
 8069b1b:	48 89 c8             	mov    %rcx,%rax
 8069b1e:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 8069b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069b29:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8069b30:	00 00 00 
 8069b33:	48 01 c8             	add    %rcx,%rax
 8069b36:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
 8069b3d:	48 8b 10             	mov    (%rax),%rdx
 8069b40:	48 39 d1             	cmp    %rdx,%rcx
 8069b43:	0f 86 1b 00 00 00    	jbe    8069b64 <decl_designator+0x699>
 8069b49:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8069b50:	48 89 c6             	mov    %rax,%rsi
 8069b53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069b57:	48 89 c7             	mov    %rax,%rdi
 8069b5a:	b8 00 00 00 00       	mov    $0x0,%eax
 8069b5f:	e8 dd 2b fe ff       	callq  804c741 <section_realloc>
 8069b64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069b68:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8069b6f:	00 00 00 
 8069b72:	48 01 c8             	add    %rcx,%rax
 8069b75:	48 8b 08             	mov    (%rax),%rcx
 8069b78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8069b7c:	48 01 c1             	add    %rax,%rcx
 8069b7f:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
 8069b86:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 8069b8d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 8069b94:	b8 01 00 00 00       	mov    $0x1,%eax
 8069b99:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 8069b9f:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 8069ba5:	8b 4d a8             	mov    -0x58(%rbp),%ecx
 8069ba8:	39 c8                	cmp    %ecx,%eax
 8069baa:	0f 8d 5c 00 00 00    	jge    8069c0c <decl_designator+0x741>
 8069bb0:	e9 14 00 00 00       	jmpq   8069bc9 <decl_designator+0x6fe>
 8069bb5:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 8069bbb:	48 89 c1             	mov    %rax,%rcx
 8069bbe:	83 c0 01             	add    $0x1,%eax
 8069bc1:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 8069bc7:	eb d6                	jmp    8069b9f <decl_designator+0x6d4>
 8069bc9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8069bcc:	48 63 c0             	movslq %eax,%rax
 8069bcf:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
 8069bd6:	48 89 c2             	mov    %rax,%rdx
 8069bd9:	48 01 d1             	add    %rdx,%rcx
 8069bdc:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 8069be3:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8069be6:	49 89 c2             	mov    %rax,%r10
 8069be9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 8069bf0:	48 89 c6             	mov    %rax,%rsi
 8069bf3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 8069bfa:	48 89 c7             	mov    %rax,%rdi
 8069bfd:	4c 89 d2             	mov    %r10,%rdx
 8069c00:	b8 00 00 00 00       	mov    $0x0,%eax
 8069c05:	e8 66 d0 01 00       	callq  8086c70 <memcpy>
 8069c0a:	eb a9                	jmp    8069bb5 <decl_designator+0x6ea>
 8069c0c:	c9                   	leaveq 
 8069c0d:	c3                   	retq   

0000000008069c0e <init_putv>:
 8069c0e:	55                   	push   %rbp
 8069c0f:	48 89 e5             	mov    %rsp,%rbp
 8069c12:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
 8069c19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8069c1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8069c21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8069c25:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8069c29:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8069c2d:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8069c30:	e9 05 00 00 00       	jmpq   8069c3a <init_putv+0x2c>
 8069c35:	e9 09 00 00 00       	jmpq   8069c43 <init_putv+0x35>
 8069c3a:	83 f8 00             	cmp    $0x0,%eax
 8069c3d:	0f 85 1a 00 00 00    	jne    8069c5d <init_putv+0x4f>
 8069c43:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8069c46:	48 89 c7             	mov    %rax,%rdi
 8069c49:	b8 00 00 00 00       	mov    $0x0,%eax
 8069c4e:	e8 a7 2b ff ff       	callq  805c7fa <vpushi>
 8069c53:	e9 9f 00 00 00       	jmpq   8069cf7 <init_putv+0xe9>
 8069c58:	e9 09 00 00 00       	jmpq   8069c66 <init_putv+0x58>
 8069c5d:	83 f8 01             	cmp    $0x1,%eax
 8069c60:	0f 85 79 00 00 00    	jne    8069cdf <init_putv+0xd1>
 8069c66:	48 8b 05 ab 43 02 00 	mov    0x243ab(%rip),%rax        # 808e018 <_GLOBAL_OFFSET_TABLE_+0x398>
 8069c6d:	8b 00                	mov    (%rax),%eax
 8069c6f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8069c72:	b8 01 00 00 00       	mov    $0x1,%eax
 8069c77:	4c 8b 1d 9a 43 02 00 	mov    0x2439a(%rip),%r11        # 808e018 <_GLOBAL_OFFSET_TABLE_+0x398>
 8069c7e:	41 89 03             	mov    %eax,(%r11)
 8069c81:	b8 00 00 00 00       	mov    $0x0,%eax
 8069c86:	e8 ed e0 ff ff       	callq  8067d78 <expr_const1>
 8069c8b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8069c8e:	4c 8b 1d 83 43 02 00 	mov    0x24383(%rip),%r11        # 808e018 <_GLOBAL_OFFSET_TABLE_+0x398>
 8069c95:	41 89 03             	mov    %eax,(%r11)
 8069c98:	48 8b 05 81 42 02 00 	mov    0x24281(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069c9f:	48 8b 00             	mov    (%rax),%rax
 8069ca2:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8069ca9:	00 00 00 
 8069cac:	48 01 c8             	add    %rcx,%rax
 8069caf:	0f b7 08             	movzwl (%rax),%ecx
 8069cb2:	81 e1 3f 01 00 00    	and    $0x13f,%ecx
 8069cb8:	83 f9 30             	cmp    $0x30,%ecx
 8069cbb:	0f 84 14 00 00 00    	je     8069cd5 <init_putv+0xc7>
 8069cc1:	48 8d 05 9c 24 02 00 	lea    0x2249c(%rip),%rax        # 808c164 <L.215>
 8069cc8:	48 89 c7             	mov    %rax,%rdi
 8069ccb:	b8 00 00 00 00       	mov    $0x0,%eax
 8069cd0:	e8 f2 39 fe ff       	callq  804d6c7 <tcc_error>
 8069cd5:	e9 1d 00 00 00       	jmpq   8069cf7 <init_putv+0xe9>
 8069cda:	e9 09 00 00 00       	jmpq   8069ce8 <init_putv+0xda>
 8069cdf:	83 f8 02             	cmp    $0x2,%eax
 8069ce2:	0f 85 0f 00 00 00    	jne    8069cf7 <init_putv+0xe9>
 8069ce8:	b8 00 00 00 00       	mov    $0x0,%eax
 8069ced:	e8 29 de ff ff       	callq  8067b1b <expr_eq>
 8069cf2:	e9 00 00 00 00       	jmpq   8069cf7 <init_putv+0xe9>
 8069cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069cfb:	b9 10 00 00 00       	mov    $0x10,%ecx
 8069d00:	49 89 ca             	mov    %rcx,%r10
 8069d03:	48 89 c6             	mov    %rax,%rsi
 8069d06:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
 8069d0a:	48 89 cf             	mov    %rcx,%rdi
 8069d0d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8069d11:	4c 89 d2             	mov    %r10,%rdx
 8069d14:	b8 00 00 00 00       	mov    $0x0,%eax
 8069d19:	e8 52 cf 01 00       	callq  8086c70 <memcpy>
 8069d1e:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8069d21:	81 e0 ff f7 ff ff    	and    $0xfffff7ff,%eax
 8069d27:	89 45 a8             	mov    %eax,-0x58(%rbp)
 8069d2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069d2e:	85 c0                	test   %eax,%eax
 8069d30:	0f 84 9d 04 00 00    	je     806a1d3 <init_putv+0x5c5>
 8069d36:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 8069d3a:	48 89 c7             	mov    %rax,%rdi
 8069d3d:	b8 00 00 00 00       	mov    $0x0,%eax
 8069d42:	e8 21 7e ff ff       	callq  8061b68 <gen_assign_cast>
 8069d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069d4b:	8b 08                	mov    (%rax),%ecx
 8069d4d:	83 e1 0f             	and    $0xf,%ecx
 8069d50:	89 4d d0             	mov    %ecx,-0x30(%rbp)
 8069d53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8069d57:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8069d5e:	00 00 00 
 8069d61:	48 01 c8             	add    %rcx,%rax
 8069d64:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8069d68:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8069d6f:	00 00 00 
 8069d72:	48 01 d1             	add    %rdx,%rcx
 8069d75:	48 89 c2             	mov    %rax,%rdx
 8069d78:	48 8b 01             	mov    (%rcx),%rax
 8069d7b:	48 39 c2             	cmp    %rax,%rdx
 8069d7e:	0f 86 28 00 00 00    	jbe    8069dac <init_putv+0x19e>
 8069d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8069d88:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8069d8f:	00 00 00 
 8069d92:	48 01 c8             	add    %rcx,%rax
 8069d95:	48 89 c1             	mov    %rax,%rcx
 8069d98:	48 89 ce             	mov    %rcx,%rsi
 8069d9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069d9f:	48 89 c7             	mov    %rax,%rdi
 8069da2:	b8 00 00 00 00       	mov    $0x0,%eax
 8069da7:	e8 95 29 fe ff       	callq  804c741 <section_realloc>
 8069dac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8069db0:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8069db7:	00 00 00 
 8069dba:	48 01 c8             	add    %rcx,%rax
 8069dbd:	48 8b 08             	mov    (%rax),%rcx
 8069dc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8069dc4:	48 01 c1             	add    %rax,%rcx
 8069dc7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8069dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8069dcf:	8b 08                	mov    (%rax),%ecx
 8069dd1:	83 e1 40             	and    $0x40,%ecx
 8069dd4:	85 c9                	test   %ecx,%ecx
 8069dd6:	0f 84 05 00 00 00    	je     8069de1 <init_putv+0x1d3>
 8069ddc:	e9 23 00 00 00       	jmpq   8069e04 <init_putv+0x1f6>
 8069de1:	b8 00 00 00 00       	mov    $0x0,%eax
 8069de6:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8069de9:	b8 20 00 00 00       	mov    $0x20,%eax
 8069dee:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8069df1:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rax
 8069df8:	ff ff ff 
 8069dfb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8069dff:	e9 51 00 00 00       	jmpq   8069e55 <init_putv+0x247>
 8069e04:	48 8b 05 15 41 02 00 	mov    0x24115(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069e0b:	48 8b 00             	mov    (%rax),%rax
 8069e0e:	8b 08                	mov    (%rax),%ecx
 8069e10:	c1 f9 12             	sar    $0x12,%ecx
 8069e13:	83 e1 3f             	and    $0x3f,%ecx
 8069e16:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 8069e19:	48 8b 05 00 41 02 00 	mov    0x24100(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069e20:	48 8b 00             	mov    (%rax),%rax
 8069e23:	8b 08                	mov    (%rax),%ecx
 8069e25:	c1 f9 18             	sar    $0x18,%ecx
 8069e28:	83 e1 3f             	and    $0x3f,%ecx
 8069e2b:	89 4d c8             	mov    %ecx,-0x38(%rbp)
 8069e2e:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8069e35:	00 00 00 
 8069e38:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8069e3b:	48 d3 e0             	shl    %cl,%rax
 8069e3e:	48 89 c1             	mov    %rax,%rcx
 8069e41:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8069e48:	00 00 00 
 8069e4b:	48 29 c1             	sub    %rax,%rcx
 8069e4e:	48 89 c8             	mov    %rcx,%rax
 8069e51:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8069e55:	48 8b 05 c4 40 02 00 	mov    0x240c4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069e5c:	48 8b 00             	mov    (%rax),%rax
 8069e5f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8069e66:	00 00 00 
 8069e69:	48 01 c8             	add    %rcx,%rax
 8069e6c:	0f b7 08             	movzwl (%rax),%ecx
 8069e6f:	81 e1 00 02 00 00    	and    $0x200,%ecx
 8069e75:	85 c9                	test   %ecx,%ecx
 8069e77:	0f 84 72 00 00 00    	je     8069eef <init_putv+0x2e1>
 8069e7d:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069e80:	83 f8 01             	cmp    $0x1,%eax
 8069e83:	0f 84 52 00 00 00    	je     8069edb <init_putv+0x2cd>
 8069e89:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069e8c:	83 f8 02             	cmp    $0x2,%eax
 8069e8f:	0f 84 46 00 00 00    	je     8069edb <init_putv+0x2cd>
 8069e95:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069e98:	83 f8 09             	cmp    $0x9,%eax
 8069e9b:	0f 84 3a 00 00 00    	je     8069edb <init_putv+0x2cd>
 8069ea1:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069ea4:	83 f8 0a             	cmp    $0xa,%eax
 8069ea7:	0f 84 2e 00 00 00    	je     8069edb <init_putv+0x2cd>
 8069ead:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069eb0:	83 f8 0c             	cmp    $0xc,%eax
 8069eb3:	0f 84 22 00 00 00    	je     8069edb <init_putv+0x2cd>
 8069eb9:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069ebc:	83 f8 00             	cmp    $0x0,%eax
 8069ebf:	0f 85 11 00 00 00    	jne    8069ed6 <init_putv+0x2c8>
 8069ec5:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8069ec8:	83 f8 20             	cmp    $0x20,%eax
 8069ecb:	0f 84 05 00 00 00    	je     8069ed6 <init_putv+0x2c8>
 8069ed1:	e9 05 00 00 00       	jmpq   8069edb <init_putv+0x2cd>
 8069ed6:	e9 14 00 00 00       	jmpq   8069eef <init_putv+0x2e1>
 8069edb:	48 8d 05 a6 22 02 00 	lea    0x222a6(%rip),%rax        # 808c188 <L.216>
 8069ee2:	48 89 c7             	mov    %rax,%rdi
 8069ee5:	b8 00 00 00 00       	mov    $0x0,%eax
 8069eea:	e8 d8 37 fe ff       	callq  804d6c7 <tcc_error>
 8069eef:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8069ef2:	e9 05 00 00 00       	jmpq   8069efc <init_putv+0x2ee>
 8069ef7:	e9 09 00 00 00       	jmpq   8069f05 <init_putv+0x2f7>
 8069efc:	83 f8 0b             	cmp    $0xb,%eax
 8069eff:	0f 85 42 00 00 00    	jne    8069f47 <init_putv+0x339>
 8069f05:	48 8b 05 14 40 02 00 	mov    0x24014(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069f0c:	48 8b 00             	mov    (%rax),%rax
 8069f0f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8069f16:	00 00 00 
 8069f19:	48 01 c8             	add    %rcx,%rax
 8069f1c:	48 8b 0d fd 3f 02 00 	mov    0x23ffd(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069f23:	48 8b 09             	mov    (%rcx),%rcx
 8069f26:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8069f2d:	00 00 00 
 8069f30:	48 01 d1             	add    %rdx,%rcx
 8069f33:	8b 11                	mov    (%rcx),%edx
 8069f35:	83 fa 00             	cmp    $0x0,%edx
 8069f38:	b9 00 00 00 00       	mov    $0x0,%ecx
 8069f3d:	0f 95 c1             	setne  %cl
 8069f40:	89 08                	mov    %ecx,(%rax)
 8069f42:	e9 09 00 00 00       	jmpq   8069f50 <init_putv+0x342>
 8069f47:	83 f8 01             	cmp    $0x1,%eax
 8069f4a:	0f 85 64 00 00 00    	jne    8069fb4 <init_putv+0x3a6>
 8069f50:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069f54:	48 8b 0d c5 3f 02 00 	mov    0x23fc5(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069f5b:	48 8b 09             	mov    (%rcx),%rcx
 8069f5e:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8069f65:	00 00 00 
 8069f68:	48 01 d1             	add    %rdx,%rcx
 8069f6b:	8b 11                	mov    (%rcx),%edx
 8069f6d:	48 63 d2             	movslq %edx,%rdx
 8069f70:	48 89 d1             	mov    %rdx,%rcx
 8069f73:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 8069f77:	48 21 d1             	and    %rdx,%rcx
 8069f7a:	48 89 ca             	mov    %rcx,%rdx
 8069f7d:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 8069f80:	48 d3 e2             	shl    %cl,%rdx
 8069f83:	0f be 08             	movsbl (%rax),%ecx
 8069f86:	48 63 c9             	movslq %ecx,%rcx
 8069f89:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 8069f8d:	48 89 c8             	mov    %rcx,%rax
 8069f90:	48 89 d1             	mov    %rdx,%rcx
 8069f93:	48 09 c8             	or     %rcx,%rax
 8069f96:	48 89 c1             	mov    %rax,%rcx
 8069f99:	48 c1 e1 18          	shl    $0x18,%rcx
 8069f9d:	48 89 c8             	mov    %rcx,%rax
 8069fa0:	48 c1 f8 18          	sar    $0x18,%rax
 8069fa4:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 8069fa8:	88 01                	mov    %al,(%rcx)
 8069faa:	e9 fb 01 00 00       	jmpq   806a1aa <init_putv+0x59c>
 8069faf:	e9 09 00 00 00       	jmpq   8069fbd <init_putv+0x3af>
 8069fb4:	83 f8 02             	cmp    $0x2,%eax
 8069fb7:	0f 85 65 00 00 00    	jne    806a022 <init_putv+0x414>
 8069fbd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8069fc1:	48 8b 0d 58 3f 02 00 	mov    0x23f58(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8069fc8:	48 8b 09             	mov    (%rcx),%rcx
 8069fcb:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8069fd2:	00 00 00 
 8069fd5:	48 01 d1             	add    %rdx,%rcx
 8069fd8:	8b 11                	mov    (%rcx),%edx
 8069fda:	48 63 d2             	movslq %edx,%rdx
 8069fdd:	48 89 d1             	mov    %rdx,%rcx
 8069fe0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 8069fe4:	48 21 d1             	and    %rdx,%rcx
 8069fe7:	48 89 ca             	mov    %rcx,%rdx
 8069fea:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 8069fed:	48 d3 e2             	shl    %cl,%rdx
 8069ff0:	0f bf 08             	movswl (%rax),%ecx
 8069ff3:	48 63 c9             	movslq %ecx,%rcx
 8069ff6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 8069ffa:	48 89 c8             	mov    %rcx,%rax
 8069ffd:	48 89 d1             	mov    %rdx,%rcx
 806a000:	48 09 c8             	or     %rcx,%rax
 806a003:	48 89 c1             	mov    %rax,%rcx
 806a006:	48 c1 e1 10          	shl    $0x10,%rcx
 806a00a:	48 89 c8             	mov    %rcx,%rax
 806a00d:	48 c1 f8 10          	sar    $0x10,%rax
 806a011:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 806a015:	66 89 01             	mov    %ax,(%rcx)
 806a018:	e9 8d 01 00 00       	jmpq   806a1aa <init_putv+0x59c>
 806a01d:	e9 09 00 00 00       	jmpq   806a02b <init_putv+0x41d>
 806a022:	83 f8 09             	cmp    $0x9,%eax
 806a025:	0f 85 2d 00 00 00    	jne    806a058 <init_putv+0x44a>
 806a02b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806a02f:	48 8b 0d ea 3e 02 00 	mov    0x23eea(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a036:	48 8b 09             	mov    (%rcx),%rcx
 806a039:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806a040:	00 00 00 
 806a043:	48 01 d1             	add    %rdx,%rcx
 806a046:	f3 0f 7e 01          	movq   (%rcx),%xmm0
 806a04a:	66 0f d6 00          	movq   %xmm0,(%rax)
 806a04e:	e9 57 01 00 00       	jmpq   806a1aa <init_putv+0x59c>
 806a053:	e9 09 00 00 00       	jmpq   806a061 <init_putv+0x453>
 806a058:	83 f8 0a             	cmp    $0xa,%eax
 806a05b:	0f 85 2d 00 00 00    	jne    806a08e <init_putv+0x480>
 806a061:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806a065:	48 8b 0d b4 3e 02 00 	mov    0x23eb4(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a06c:	48 8b 09             	mov    (%rcx),%rcx
 806a06f:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806a076:	00 00 00 
 806a079:	48 01 d1             	add    %rdx,%rcx
 806a07c:	db 29                	fldt   (%rcx)
 806a07e:	d9 c0                	fld    %st(0)
 806a080:	db 38                	fstpt  (%rax)
 806a082:	dd d9                	fstp   %st(1)
 806a084:	e9 21 01 00 00       	jmpq   806a1aa <init_putv+0x59c>
 806a089:	e9 09 00 00 00       	jmpq   806a097 <init_putv+0x489>
 806a08e:	83 f8 0c             	cmp    $0xc,%eax
 806a091:	0f 85 52 00 00 00    	jne    806a0e9 <init_putv+0x4db>
 806a097:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806a09b:	48 8b 0d 7e 3e 02 00 	mov    0x23e7e(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a0a2:	48 8b 09             	mov    (%rcx),%rcx
 806a0a5:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806a0ac:	00 00 00 
 806a0af:	48 01 d1             	add    %rdx,%rcx
 806a0b2:	48 8b 11             	mov    (%rcx),%rdx
 806a0b5:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806a0b9:	48 21 ca             	and    %rcx,%rdx
 806a0bc:	48 89 d1             	mov    %rdx,%rcx
 806a0bf:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
 806a0c3:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806a0c6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 806a0ca:	48 d3 e2             	shl    %cl,%rdx
 806a0cd:	48 8b 08             	mov    (%rax),%rcx
 806a0d0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 806a0d4:	48 89 d0             	mov    %rdx,%rax
 806a0d7:	48 09 c1             	or     %rax,%rcx
 806a0da:	48 89 c8             	mov    %rcx,%rax
 806a0dd:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
 806a0e1:	48 89 01             	mov    %rax,(%rcx)
 806a0e4:	e9 c1 00 00 00       	jmpq   806a1aa <init_putv+0x59c>
 806a0e9:	48 8b 05 30 3e 02 00 	mov    0x23e30(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a0f0:	48 8b 00             	mov    (%rax),%rax
 806a0f3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806a0fa:	00 00 00 
 806a0fd:	48 01 c8             	add    %rcx,%rax
 806a100:	0f b7 08             	movzwl (%rax),%ecx
 806a103:	81 e1 00 02 00 00    	and    $0x200,%ecx
 806a109:	85 c9                	test   %ecx,%ecx
 806a10b:	0f 84 43 00 00 00    	je     806a154 <init_putv+0x546>
 806a111:	48 8b 05 08 3e 02 00 	mov    0x23e08(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a118:	48 8b 00             	mov    (%rax),%rax
 806a11b:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 806a122:	00 00 00 
 806a125:	48 01 c8             	add    %rcx,%rax
 806a128:	b9 01 00 00 00       	mov    $0x1,%ecx
 806a12d:	49 89 cb             	mov    %rcx,%r11
 806a130:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806a134:	49 89 ca             	mov    %rcx,%r10
 806a137:	48 8b 08             	mov    (%rax),%rcx
 806a13a:	48 89 ce             	mov    %rcx,%rsi
 806a13d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a141:	48 89 c7             	mov    %rax,%rdi
 806a144:	4c 89 d2             	mov    %r10,%rdx
 806a147:	4c 89 d9             	mov    %r11,%rcx
 806a14a:	b8 00 00 00 00       	mov    $0x0,%eax
 806a14f:	e8 af 2c fe ff       	callq  804ce03 <greloc>
 806a154:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806a158:	48 8b 0d c1 3d 02 00 	mov    0x23dc1(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a15f:	48 8b 09             	mov    (%rcx),%rcx
 806a162:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806a169:	00 00 00 
 806a16c:	48 01 d1             	add    %rdx,%rcx
 806a16f:	8b 11                	mov    (%rcx),%edx
 806a171:	48 63 d2             	movslq %edx,%rdx
 806a174:	48 89 d1             	mov    %rdx,%rcx
 806a177:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 806a17b:	48 21 d1             	and    %rdx,%rcx
 806a17e:	48 89 ca             	mov    %rcx,%rdx
 806a181:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806a184:	48 d3 e2             	shl    %cl,%rdx
 806a187:	8b 08                	mov    (%rax),%ecx
 806a189:	48 63 c9             	movslq %ecx,%rcx
 806a18c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 806a193:	48 89 c8             	mov    %rcx,%rax
 806a196:	48 89 d1             	mov    %rdx,%rcx
 806a199:	48 09 c8             	or     %rcx,%rax
 806a19c:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
 806a1a3:	89 01                	mov    %eax,(%rcx)
 806a1a5:	e9 00 00 00 00       	jmpq   806a1aa <init_putv+0x59c>
 806a1aa:	48 8b 05 6f 3d 02 00 	mov    0x23d6f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a1b1:	48 8b 00             	mov    (%rax),%rax
 806a1b4:	48 89 c1             	mov    %rax,%rcx
 806a1b7:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 806a1be:	ff ff ff 
 806a1c1:	48 01 d0             	add    %rdx,%rax
 806a1c4:	4c 8b 1d 55 3d 02 00 	mov    0x23d55(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806a1cb:	49 89 03             	mov    %rax,(%r11)
 806a1ce:	e9 40 00 00 00       	jmpq   806a213 <init_putv+0x605>
 806a1d3:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806a1d6:	49 89 c2             	mov    %rax,%r10
 806a1d9:	b8 32 01 00 00       	mov    $0x132,%eax
 806a1de:	48 89 c6             	mov    %rax,%rsi
 806a1e1:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 806a1e5:	48 89 c7             	mov    %rax,%rdi
 806a1e8:	4c 89 d2             	mov    %r10,%rdx
 806a1eb:	b8 00 00 00 00       	mov    $0x0,%eax
 806a1f0:	e8 d3 2b ff ff       	callq  805cdc8 <vset>
 806a1f5:	b8 00 00 00 00       	mov    $0x0,%eax
 806a1fa:	e8 4f 2c ff ff       	callq  805ce4e <vswap>
 806a1ff:	b8 00 00 00 00       	mov    $0x0,%eax
 806a204:	e8 0d 7e ff ff       	callq  8062016 <vstore>
 806a209:	b8 00 00 00 00       	mov    $0x0,%eax
 806a20e:	e8 df 40 ff ff       	callq  805e2f2 <vpop>
 806a213:	c9                   	leaveq 
 806a214:	c3                   	retq   

000000000806a215 <init_putz>:
 806a215:	55                   	push   %rbp
 806a216:	48 89 e5             	mov    %rsp,%rbp
 806a219:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806a220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806a224:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806a228:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806a22c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806a230:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a234:	85 c0                	test   %eax,%eax
 806a236:	0f 84 05 00 00 00    	je     806a241 <init_putz+0x2c>
 806a23c:	e9 68 00 00 00       	jmpq   806a2a9 <init_putz+0x94>
 806a241:	b8 75 01 00 00       	mov    $0x175,%eax
 806a246:	48 89 c6             	mov    %rax,%rsi
 806a249:	48 8b 05 a0 3c 02 00 	mov    0x23ca0(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 806a250:	48 89 c7             	mov    %rax,%rdi
 806a253:	b8 00 00 00 00       	mov    $0x0,%eax
 806a258:	e8 e7 2a ff ff       	callq  805cd44 <vpush_global_sym>
 806a25d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806a260:	48 89 c6             	mov    %rax,%rsi
 806a263:	b8 32 00 00 00       	mov    $0x32,%eax
 806a268:	48 89 c7             	mov    %rax,%rdi
 806a26b:	b8 00 00 00 00       	mov    $0x0,%eax
 806a270:	e8 93 2b ff ff       	callq  805ce08 <vseti>
 806a275:	b8 00 00 00 00       	mov    $0x0,%eax
 806a27a:	48 89 c7             	mov    %rax,%rdi
 806a27d:	b8 00 00 00 00       	mov    $0x0,%eax
 806a282:	e8 73 25 ff ff       	callq  805c7fa <vpushi>
 806a287:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806a28a:	48 89 c7             	mov    %rax,%rdi
 806a28d:	b8 00 00 00 00       	mov    $0x0,%eax
 806a292:	e8 63 25 ff ff       	callq  805c7fa <vpushi>
 806a297:	b8 03 00 00 00       	mov    $0x3,%eax
 806a29c:	48 89 c7             	mov    %rax,%rdi
 806a29f:	b8 00 00 00 00       	mov    $0x0,%eax
 806a2a4:	e8 c5 53 01 00       	callq  807f66e <gfunc_call>
 806a2a9:	c9                   	leaveq 
 806a2aa:	c3                   	retq   

000000000806a2ab <decl_initializer>:
 806a2ab:	55                   	push   %rbp
 806a2ac:	48 89 e5             	mov    %rsp,%rbp
 806a2af:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
 806a2b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806a2ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806a2be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806a2c2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806a2c6:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806a2ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a2ce:	8b 08                	mov    (%rax),%ecx
 806a2d0:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 806a2d6:	85 c9                	test   %ecx,%ecx
 806a2d8:	0f 84 bc 00 00 00    	je     806a39a <decl_initializer+0xef>
 806a2de:	b8 83 01 00 00       	mov    $0x183,%eax
 806a2e3:	48 89 c6             	mov    %rax,%rsi
 806a2e6:	48 8b 05 03 3c 02 00 	mov    0x23c03(%rip),%rax        # 808def0 <_GLOBAL_OFFSET_TABLE_+0x270>
 806a2ed:	48 89 c7             	mov    %rax,%rdi
 806a2f0:	b8 00 00 00 00       	mov    $0x0,%eax
 806a2f5:	e8 4a 2a ff ff       	callq  805cd44 <vpush_global_sym>
 806a2fa:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
 806a2fe:	48 89 c6             	mov    %rax,%rsi
 806a301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a305:	48 89 c7             	mov    %rax,%rdi
 806a308:	b8 00 00 00 00       	mov    $0x0,%eax
 806a30d:	e8 43 6d ff ff       	callq  8061055 <vla_runtime_type_size>
 806a312:	b8 01 00 00 00       	mov    $0x1,%eax
 806a317:	48 89 c7             	mov    %rax,%rdi
 806a31a:	b8 00 00 00 00       	mov    $0x0,%eax
 806a31f:	e8 4a 53 01 00       	callq  807f66e <gfunc_call>
 806a324:	b8 00 00 00 00       	mov    $0x0,%eax
 806a329:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
 806a32f:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 806a336:	49 89 c2             	mov    %rax,%r10
 806a339:	b8 00 00 00 00       	mov    $0x0,%eax
 806a33e:	48 89 c6             	mov    %rax,%rsi
 806a341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a345:	48 89 c7             	mov    %rax,%rdi
 806a348:	4c 89 d2             	mov    %r10,%rdx
 806a34b:	b8 00 00 00 00       	mov    $0x0,%eax
 806a350:	e8 d4 22 ff ff       	callq  805c629 <vsetc>
 806a355:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806a358:	49 89 c2             	mov    %rax,%r10
 806a35b:	b8 32 01 00 00       	mov    $0x132,%eax
 806a360:	48 89 c6             	mov    %rax,%rsi
 806a363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a367:	48 89 c7             	mov    %rax,%rdi
 806a36a:	4c 89 d2             	mov    %r10,%rdx
 806a36d:	b8 00 00 00 00       	mov    $0x0,%eax
 806a372:	e8 51 2a ff ff       	callq  805cdc8 <vset>
 806a377:	b8 00 00 00 00       	mov    $0x0,%eax
 806a37c:	e8 cd 2a ff ff       	callq  805ce4e <vswap>
 806a381:	b8 00 00 00 00       	mov    $0x0,%eax
 806a386:	e8 8b 7c ff ff       	callq  8062016 <vstore>
 806a38b:	b8 00 00 00 00       	mov    $0x0,%eax
 806a390:	e8 5d 3f ff ff       	callq  805e2f2 <vpop>
 806a395:	e9 7d 0d 00 00       	jmpq   806b117 <decl_initializer+0xe6c>
 806a39a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a39e:	8b 08                	mov    (%rax),%ecx
 806a3a0:	83 e1 20             	and    $0x20,%ecx
 806a3a3:	85 c9                	test   %ecx,%ecx
 806a3a5:	0f 84 97 06 00 00    	je     806aa42 <decl_initializer+0x797>
 806a3ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a3af:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806a3b6:	00 00 00 
 806a3b9:	48 01 c8             	add    %rcx,%rax
 806a3bc:	48 8b 08             	mov    (%rax),%rcx
 806a3bf:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 806a3c3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806a3c7:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806a3ce:	00 00 00 
 806a3d1:	48 01 c8             	add    %rcx,%rax
 806a3d4:	48 8b 08             	mov    (%rax),%rcx
 806a3d7:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 806a3da:	b8 00 00 00 00       	mov    $0x0,%eax
 806a3df:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806a3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a3e6:	48 89 c7             	mov    %rax,%rdi
 806a3e9:	b8 00 00 00 00       	mov    $0x0,%eax
 806a3ee:	e8 8c 32 00 00       	callq  806d67f <pointed_type>
 806a3f3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 806a3f7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 806a3fb:	48 89 c6             	mov    %rax,%rsi
 806a3fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806a402:	48 89 c7             	mov    %rax,%rdi
 806a405:	b8 00 00 00 00       	mov    $0x0,%eax
 806a40a:	e8 05 6a ff ff       	callq  8060e14 <type_size>
 806a40f:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 806a412:	b8 01 00 00 00       	mov    $0x1,%eax
 806a417:	89 45 c8             	mov    %eax,-0x38(%rbp)
 806a41a:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806a41d:	85 c0                	test   %eax,%eax
 806a41f:	0f 84 2f 00 00 00    	je     806a454 <decl_initializer+0x1a9>
 806a425:	48 8b 05 fc 3a 02 00 	mov    0x23afc(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a42c:	8b 00                	mov    (%rax),%eax
 806a42e:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 806a434:	0f 84 1a 00 00 00    	je     806a454 <decl_initializer+0x1a9>
 806a43a:	48 8b 05 e7 3a 02 00 	mov    0x23ae7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a441:	8b 00                	mov    (%rax),%eax
 806a443:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806a449:	0f 84 05 00 00 00    	je     806a454 <decl_initializer+0x1a9>
 806a44f:	e9 17 00 00 00       	jmpq   806a46b <decl_initializer+0x1c0>
 806a454:	48 8b 05 cd 3a 02 00 	mov    0x23acd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a45b:	8b 00                	mov    (%rax),%eax
 806a45d:	83 f8 7b             	cmp    $0x7b,%eax
 806a460:	0f 84 05 00 00 00    	je     806a46b <decl_initializer+0x1c0>
 806a466:	e9 40 00 00 00       	jmpq   806a4ab <decl_initializer+0x200>
 806a46b:	48 8b 05 b6 3a 02 00 	mov    0x23ab6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a472:	8b 00                	mov    (%rax),%eax
 806a474:	83 f8 7b             	cmp    $0x7b,%eax
 806a477:	0f 84 14 00 00 00    	je     806a491 <decl_initializer+0x1e6>
 806a47d:	48 8d 05 37 1d 02 00 	lea    0x21d37(%rip),%rax        # 808c1bb <L.217>
 806a484:	48 89 c7             	mov    %rax,%rdi
 806a487:	b8 00 00 00 00       	mov    $0x0,%eax
 806a48c:	e8 36 32 fe ff       	callq  804d6c7 <tcc_error>
 806a491:	b8 7b 00 00 00       	mov    $0x7b,%eax
 806a496:	48 89 c7             	mov    %rax,%rdi
 806a499:	b8 00 00 00 00       	mov    $0x0,%eax
 806a49e:	e8 40 6c fe ff       	callq  80510e3 <skip>
 806a4a3:	b8 00 00 00 00       	mov    $0x0,%eax
 806a4a8:	89 45 c8             	mov    %eax,-0x38(%rbp)
 806a4ab:	48 8b 05 76 3a 02 00 	mov    0x23a76(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a4b2:	8b 00                	mov    (%rax),%eax
 806a4b4:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 806a4ba:	0f 85 17 00 00 00    	jne    806a4d7 <decl_initializer+0x22c>
 806a4c0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806a4c4:	8b 08                	mov    (%rax),%ecx
 806a4c6:	83 e1 0f             	and    $0xf,%ecx
 806a4c9:	83 f9 00             	cmp    $0x0,%ecx
 806a4cc:	0f 85 05 00 00 00    	jne    806a4d7 <decl_initializer+0x22c>
 806a4d2:	e9 31 00 00 00       	jmpq   806a508 <decl_initializer+0x25d>
 806a4d7:	48 8b 05 4a 3a 02 00 	mov    0x23a4a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a4de:	8b 00                	mov    (%rax),%eax
 806a4e0:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806a4e6:	0f 85 17 00 00 00    	jne    806a503 <decl_initializer+0x258>
 806a4ec:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806a4f0:	8b 08                	mov    (%rax),%ecx
 806a4f2:	83 e1 0f             	and    $0xf,%ecx
 806a4f5:	83 f9 01             	cmp    $0x1,%ecx
 806a4f8:	0f 85 05 00 00 00    	jne    806a503 <decl_initializer+0x258>
 806a4fe:	e9 05 00 00 00       	jmpq   806a508 <decl_initializer+0x25d>
 806a503:	e9 1c 03 00 00       	jmpq   806a824 <decl_initializer+0x579>
 806a508:	48 8b 05 19 3a 02 00 	mov    0x23a19(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a50f:	8b 00                	mov    (%rax),%eax
 806a511:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806a517:	0f 84 1a 00 00 00    	je     806a537 <decl_initializer+0x28c>
 806a51d:	48 8b 05 04 3a 02 00 	mov    0x23a04(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a524:	8b 00                	mov    (%rax),%eax
 806a526:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 806a52c:	0f 84 05 00 00 00    	je     806a537 <decl_initializer+0x28c>
 806a532:	e9 63 02 00 00       	jmpq   806a79a <decl_initializer+0x4ef>
 806a537:	48 8b 05 6a 3a 02 00 	mov    0x23a6a(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 806a53e:	48 8b 00             	mov    (%rax),%rax
 806a541:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 806a548:	48 8b 05 d9 39 02 00 	mov    0x239d9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a54f:	8b 00                	mov    (%rax),%eax
 806a551:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806a557:	0f 85 14 00 00 00    	jne    806a571 <decl_initializer+0x2c6>
 806a55d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806a564:	8b 08                	mov    (%rax),%ecx
 806a566:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
 806a56c:	e9 12 00 00 00       	jmpq   806a583 <decl_initializer+0x2d8>
 806a571:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806a578:	8b 08                	mov    (%rax),%ecx
 806a57a:	c1 e9 02             	shr    $0x2,%ecx
 806a57d:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
 806a583:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 806a589:	48 89 c1             	mov    %rax,%rcx
 806a58c:	83 c0 ff             	add    $0xffffffff,%eax
 806a58f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 806a595:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 806a59b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806a59e:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a5a1:	83 f8 00             	cmp    $0x0,%eax
 806a5a4:	0f 8c 20 00 00 00    	jl     806a5ca <decl_initializer+0x31f>
 806a5aa:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a5ad:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806a5b0:	48 29 c8             	sub    %rcx,%rax
 806a5b3:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806a5b6:	39 c1                	cmp    %eax,%ecx
 806a5b8:	0f 8e 0c 00 00 00    	jle    806a5ca <decl_initializer+0x31f>
 806a5be:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a5c1:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806a5c4:	48 29 c8             	sub    %rcx,%rax
 806a5c7:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806a5ca:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806a5cd:	85 c0                	test   %eax,%eax
 806a5cf:	0f 84 05 00 00 00    	je     806a5da <decl_initializer+0x32f>
 806a5d5:	e9 a5 01 00 00       	jmpq   806a77f <decl_initializer+0x4d4>
 806a5da:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 806a5e0:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806a5e3:	39 c8                	cmp    %ecx,%eax
 806a5e5:	0f 8e 14 00 00 00    	jle    806a5ff <decl_initializer+0x354>
 806a5eb:	48 8d 05 16 1c 02 00 	lea    0x21c16(%rip),%rax        # 808c208 <L.218>
 806a5f2:	48 89 c7             	mov    %rax,%rdi
 806a5f5:	b8 00 00 00 00       	mov    $0x0,%eax
 806a5fa:	e8 00 33 fe ff       	callq  804d8ff <tcc_warning>
 806a5ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a603:	85 c0                	test   %eax,%eax
 806a605:	0f 84 7d 00 00 00    	je     806a688 <decl_initializer+0x3dd>
 806a60b:	48 8b 05 16 39 02 00 	mov    0x23916(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a612:	8b 00                	mov    (%rax),%eax
 806a614:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806a61a:	0f 85 68 00 00 00    	jne    806a688 <decl_initializer+0x3dd>
 806a620:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 806a623:	83 f8 01             	cmp    $0x1,%eax
 806a626:	0f 85 5c 00 00 00    	jne    806a688 <decl_initializer+0x3dd>
 806a62c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a630:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806a637:	00 00 00 
 806a63a:	48 01 c8             	add    %rcx,%rax
 806a63d:	48 8b 08             	mov    (%rax),%rcx
 806a640:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806a644:	48 01 c1             	add    %rax,%rcx
 806a647:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a64a:	48 63 c0             	movslq %eax,%rax
 806a64d:	48 89 c2             	mov    %rax,%rdx
 806a650:	48 01 d1             	add    %rdx,%rcx
 806a653:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806a65a:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806a661:	00 00 00 
 806a664:	48 01 d0             	add    %rdx,%rax
 806a667:	8b 55 c4             	mov    -0x3c(%rbp),%edx
 806a66a:	49 89 d2             	mov    %rdx,%r10
 806a66d:	48 8b 10             	mov    (%rax),%rdx
 806a670:	48 89 d6             	mov    %rdx,%rsi
 806a673:	48 89 cf             	mov    %rcx,%rdi
 806a676:	4c 89 d2             	mov    %r10,%rdx
 806a679:	b8 00 00 00 00       	mov    $0x0,%eax
 806a67e:	e8 ed c5 01 00       	callq  8086c70 <memcpy>
 806a683:	e9 f7 00 00 00       	jmpq   806a77f <decl_initializer+0x4d4>
 806a688:	b8 00 00 00 00       	mov    $0x0,%eax
 806a68d:	89 45 b8             	mov    %eax,-0x48(%rbp)
 806a690:	8b 45 b8             	mov    -0x48(%rbp),%eax
 806a693:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806a696:	39 c8                	cmp    %ecx,%eax
 806a698:	0f 8d e1 00 00 00    	jge    806a77f <decl_initializer+0x4d4>
 806a69e:	e9 0e 00 00 00       	jmpq   806a6b1 <decl_initializer+0x406>
 806a6a3:	8b 45 b8             	mov    -0x48(%rbp),%eax
 806a6a6:	48 89 c1             	mov    %rax,%rcx
 806a6a9:	83 c0 01             	add    $0x1,%eax
 806a6ac:	89 45 b8             	mov    %eax,-0x48(%rbp)
 806a6af:	eb df                	jmp    806a690 <decl_initializer+0x3e5>
 806a6b1:	48 8b 05 70 38 02 00 	mov    0x23870(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a6b8:	8b 00                	mov    (%rax),%eax
 806a6ba:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806a6c0:	0f 85 31 00 00 00    	jne    806a6f7 <decl_initializer+0x44c>
 806a6c6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806a6cd:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806a6d4:	00 00 00 
 806a6d7:	48 01 c8             	add    %rcx,%rax
 806a6da:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 806a6dd:	48 63 c9             	movslq %ecx,%rcx
 806a6e0:	48 8b 10             	mov    (%rax),%rdx
 806a6e3:	48 89 c8             	mov    %rcx,%rax
 806a6e6:	48 01 c2             	add    %rax,%rdx
 806a6e9:	0f b6 02             	movzbl (%rdx),%eax
 806a6ec:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 806a6f2:	e9 32 00 00 00       	jmpq   806a729 <decl_initializer+0x47e>
 806a6f7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806a6fe:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806a705:	00 00 00 
 806a708:	48 01 c8             	add    %rcx,%rax
 806a70b:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 806a70e:	48 63 c9             	movslq %ecx,%rcx
 806a711:	48 89 ca             	mov    %rcx,%rdx
 806a714:	48 c1 e2 02          	shl    $0x2,%rdx
 806a718:	48 8b 08             	mov    (%rax),%rcx
 806a71b:	48 89 d0             	mov    %rdx,%rax
 806a71e:	48 01 c1             	add    %rax,%rcx
 806a721:	8b 01                	mov    (%rcx),%eax
 806a723:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 806a729:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a72c:	8b 4d b8             	mov    -0x48(%rbp),%ecx
 806a72f:	48 01 c8             	add    %rcx,%rax
 806a732:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 806a735:	0f af c1             	imul   %ecx,%eax
 806a738:	48 63 c0             	movslq %eax,%rax
 806a73b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806a73f:	48 89 c2             	mov    %rax,%rdx
 806a742:	48 01 d1             	add    %rdx,%rcx
 806a745:	b8 00 00 00 00       	mov    $0x0,%eax
 806a74a:	49 89 c0             	mov    %rax,%r8
 806a74d:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 806a753:	49 89 c3             	mov    %rax,%r11
 806a756:	48 89 c8             	mov    %rcx,%rax
 806a759:	49 89 c2             	mov    %rax,%r10
 806a75c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a760:	48 89 c6             	mov    %rax,%rsi
 806a763:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806a767:	48 89 c7             	mov    %rax,%rdi
 806a76a:	4c 89 d2             	mov    %r10,%rdx
 806a76d:	4c 89 d9             	mov    %r11,%rcx
 806a770:	b8 00 00 00 00       	mov    $0x0,%eax
 806a775:	e8 94 f4 ff ff       	callq  8069c0e <init_putv>
 806a77a:	e9 24 ff ff ff       	jmpq   806a6a3 <decl_initializer+0x3f8>
 806a77f:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a782:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806a785:	48 01 c8             	add    %rcx,%rax
 806a788:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806a78b:	b8 00 00 00 00       	mov    $0x0,%eax
 806a790:	e8 35 df fe ff       	callq  80586ca <next>
 806a795:	e9 6e fd ff ff       	jmpq   806a508 <decl_initializer+0x25d>
 806a79a:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a79d:	83 f8 00             	cmp    $0x0,%eax
 806a7a0:	0f 8c 13 00 00 00    	jl     806a7b9 <decl_initializer+0x50e>
 806a7a6:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a7a9:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806a7ac:	39 c8                	cmp    %ecx,%eax
 806a7ae:	0f 8c 05 00 00 00    	jl     806a7b9 <decl_initializer+0x50e>
 806a7b4:	e9 66 00 00 00       	jmpq   806a81f <decl_initializer+0x574>
 806a7b9:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806a7bc:	85 c0                	test   %eax,%eax
 806a7be:	0f 84 05 00 00 00    	je     806a7c9 <decl_initializer+0x51e>
 806a7c4:	e9 4a 00 00 00       	jmpq   806a813 <decl_initializer+0x568>
 806a7c9:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a7cc:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 806a7cf:	0f af c1             	imul   %ecx,%eax
 806a7d2:	48 63 c0             	movslq %eax,%rax
 806a7d5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806a7d9:	48 89 c2             	mov    %rax,%rdx
 806a7dc:	48 01 d1             	add    %rdx,%rcx
 806a7df:	b8 00 00 00 00       	mov    $0x0,%eax
 806a7e4:	49 89 c0             	mov    %rax,%r8
 806a7e7:	b8 00 00 00 00       	mov    $0x0,%eax
 806a7ec:	49 89 c3             	mov    %rax,%r11
 806a7ef:	48 89 c8             	mov    %rcx,%rax
 806a7f2:	49 89 c2             	mov    %rax,%r10
 806a7f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a7f9:	48 89 c6             	mov    %rax,%rsi
 806a7fc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806a800:	48 89 c7             	mov    %rax,%rdi
 806a803:	4c 89 d2             	mov    %r10,%rdx
 806a806:	4c 89 d9             	mov    %r11,%rcx
 806a809:	b8 00 00 00 00       	mov    $0x0,%eax
 806a80e:	e8 fb f3 ff ff       	callq  8069c0e <init_putv>
 806a813:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a816:	48 89 c1             	mov    %rax,%rcx
 806a819:	83 c0 01             	add    $0x1,%eax
 806a81c:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806a81f:	e9 58 01 00 00       	jmpq   806a97c <decl_initializer+0x6d1>
 806a824:	b8 00 00 00 00       	mov    $0x0,%eax
 806a829:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 806a82c:	48 8b 05 f5 36 02 00 	mov    0x236f5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a833:	8b 00                	mov    (%rax),%eax
 806a835:	83 f8 7d             	cmp    $0x7d,%eax
 806a838:	0f 84 3e 01 00 00    	je     806a97c <decl_initializer+0x6d1>
 806a83e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806a841:	49 89 c1             	mov    %rax,%r9
 806a844:	b8 00 00 00 00       	mov    $0x0,%eax
 806a849:	49 89 c0             	mov    %rax,%r8
 806a84c:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
 806a850:	49 89 c3             	mov    %rax,%r11
 806a853:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806a857:	49 89 c2             	mov    %rax,%r10
 806a85a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a85e:	48 89 c6             	mov    %rax,%rsi
 806a861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806a865:	48 89 c7             	mov    %rax,%rdi
 806a868:	4c 89 d2             	mov    %r10,%rdx
 806a86b:	4c 89 d9             	mov    %r11,%rcx
 806a86e:	b8 00 00 00 00       	mov    $0x0,%eax
 806a873:	e8 53 ec ff ff       	callq  80694cb <decl_designator>
 806a878:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a87b:	83 f8 00             	cmp    $0x0,%eax
 806a87e:	0f 8c 22 00 00 00    	jl     806a8a6 <decl_initializer+0x5fb>
 806a884:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806a887:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806a88a:	39 c8                	cmp    %ecx,%eax
 806a88c:	0f 8c 14 00 00 00    	jl     806a8a6 <decl_initializer+0x5fb>
 806a892:	48 8d 05 98 19 02 00 	lea    0x21998(%rip),%rax        # 808c231 <L.219>
 806a899:	48 89 c7             	mov    %rax,%rdi
 806a89c:	b8 00 00 00 00       	mov    $0x0,%eax
 806a8a1:	e8 21 2e fe ff       	callq  804d6c7 <tcc_error>
 806a8a6:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806a8a9:	85 c0                	test   %eax,%eax
 806a8ab:	0f 84 05 00 00 00    	je     806a8b6 <decl_initializer+0x60b>
 806a8b1:	e9 5a 00 00 00       	jmpq   806a910 <decl_initializer+0x665>
 806a8b6:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a8b9:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 806a8bc:	39 c8                	cmp    %ecx,%eax
 806a8be:	0f 8d 4c 00 00 00    	jge    806a910 <decl_initializer+0x665>
 806a8c4:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a8c7:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 806a8ca:	0f af c1             	imul   %ecx,%eax
 806a8cd:	48 63 c0             	movslq %eax,%rax
 806a8d0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806a8d4:	48 89 c2             	mov    %rax,%rdx
 806a8d7:	48 01 d1             	add    %rdx,%rcx
 806a8da:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806a8dd:	8b 55 d0             	mov    -0x30(%rbp),%edx
 806a8e0:	48 29 d0             	sub    %rdx,%rax
 806a8e3:	8b 55 b4             	mov    -0x4c(%rbp),%edx
 806a8e6:	0f af c2             	imul   %edx,%eax
 806a8e9:	49 89 c3             	mov    %rax,%r11
 806a8ec:	48 89 c8             	mov    %rcx,%rax
 806a8ef:	49 89 c2             	mov    %rax,%r10
 806a8f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a8f6:	48 89 c6             	mov    %rax,%rsi
 806a8f9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806a8fd:	48 89 c7             	mov    %rax,%rdi
 806a900:	4c 89 d2             	mov    %r10,%rdx
 806a903:	4c 89 d9             	mov    %r11,%rcx
 806a906:	b8 00 00 00 00       	mov    $0x0,%eax
 806a90b:	e8 05 f9 ff ff       	callq  806a215 <init_putz>
 806a910:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806a913:	48 89 c1             	mov    %rax,%rcx
 806a916:	83 c0 01             	add    $0x1,%eax
 806a919:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 806a91c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806a91f:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806a922:	39 c8                	cmp    %ecx,%eax
 806a924:	0f 8e 06 00 00 00    	jle    806a930 <decl_initializer+0x685>
 806a92a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806a92d:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806a930:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806a933:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806a936:	39 c8                	cmp    %ecx,%eax
 806a938:	0f 8c 10 00 00 00    	jl     806a94e <decl_initializer+0x6a3>
 806a93e:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806a941:	85 c0                	test   %eax,%eax
 806a943:	0f 84 05 00 00 00    	je     806a94e <decl_initializer+0x6a3>
 806a949:	e9 2e 00 00 00       	jmpq   806a97c <decl_initializer+0x6d1>
 806a94e:	48 8b 05 d3 35 02 00 	mov    0x235d3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806a955:	8b 00                	mov    (%rax),%eax
 806a957:	83 f8 7d             	cmp    $0x7d,%eax
 806a95a:	0f 85 05 00 00 00    	jne    806a965 <decl_initializer+0x6ba>
 806a960:	e9 17 00 00 00       	jmpq   806a97c <decl_initializer+0x6d1>
 806a965:	b8 2c 00 00 00       	mov    $0x2c,%eax
 806a96a:	48 89 c7             	mov    %rax,%rdi
 806a96d:	b8 00 00 00 00       	mov    $0x0,%eax
 806a972:	e8 6c 67 fe ff       	callq  80510e3 <skip>
 806a977:	e9 b0 fe ff ff       	jmpq   806a82c <decl_initializer+0x581>
 806a97c:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806a97f:	85 c0                	test   %eax,%eax
 806a981:	0f 84 05 00 00 00    	je     806a98c <decl_initializer+0x6e1>
 806a987:	e9 12 00 00 00       	jmpq   806a99e <decl_initializer+0x6f3>
 806a98c:	b8 7d 00 00 00       	mov    $0x7d,%eax
 806a991:	48 89 c7             	mov    %rax,%rdi
 806a994:	b8 00 00 00 00       	mov    $0x0,%eax
 806a999:	e8 45 67 fe ff       	callq  80510e3 <skip>
 806a99e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806a9a1:	85 c0                	test   %eax,%eax
 806a9a3:	0f 84 05 00 00 00    	je     806a9ae <decl_initializer+0x703>
 806a9a9:	e9 66 00 00 00       	jmpq   806aa14 <decl_initializer+0x769>
 806a9ae:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a9b1:	83 f8 00             	cmp    $0x0,%eax
 806a9b4:	0f 8c 5a 00 00 00    	jl     806aa14 <decl_initializer+0x769>
 806a9ba:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a9bd:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806a9c0:	39 c8                	cmp    %ecx,%eax
 806a9c2:	0f 8d 4c 00 00 00    	jge    806aa14 <decl_initializer+0x769>
 806a9c8:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806a9cb:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
 806a9ce:	0f af c1             	imul   %ecx,%eax
 806a9d1:	48 63 c0             	movslq %eax,%rax
 806a9d4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806a9d8:	48 89 c2             	mov    %rax,%rdx
 806a9db:	48 01 d1             	add    %rdx,%rcx
 806a9de:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806a9e1:	8b 55 d0             	mov    -0x30(%rbp),%edx
 806a9e4:	48 29 d0             	sub    %rdx,%rax
 806a9e7:	8b 55 b4             	mov    -0x4c(%rbp),%edx
 806a9ea:	0f af c2             	imul   %edx,%eax
 806a9ed:	49 89 c3             	mov    %rax,%r11
 806a9f0:	48 89 c8             	mov    %rcx,%rax
 806a9f3:	49 89 c2             	mov    %rax,%r10
 806a9f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806a9fa:	48 89 c6             	mov    %rax,%rsi
 806a9fd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806aa01:	48 89 c7             	mov    %rax,%rdi
 806aa04:	4c 89 d2             	mov    %r10,%rdx
 806aa07:	4c 89 d9             	mov    %r11,%rcx
 806aa0a:	b8 00 00 00 00       	mov    $0x0,%eax
 806aa0f:	e8 01 f8 ff ff       	callq  806a215 <init_putz>
 806aa14:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806aa17:	83 f8 00             	cmp    $0x0,%eax
 806aa1a:	0f 8d 1d 00 00 00    	jge    806aa3d <decl_initializer+0x792>
 806aa20:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806aa24:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806aa2b:	00 00 00 
 806aa2e:	48 01 c8             	add    %rcx,%rax
 806aa31:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806aa34:	48 63 c9             	movslq %ecx,%rcx
 806aa37:	48 89 ca             	mov    %rcx,%rdx
 806aa3a:	48 89 10             	mov    %rdx,(%rax)
 806aa3d:	e9 d5 06 00 00       	jmpq   806b117 <decl_initializer+0xe6c>
 806aa42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806aa46:	8b 08                	mov    (%rax),%ecx
 806aa48:	83 e1 0f             	and    $0xf,%ecx
 806aa4b:	83 f9 07             	cmp    $0x7,%ecx
 806aa4e:	0f 85 02 05 00 00    	jne    806af56 <decl_initializer+0xcab>
 806aa54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806aa58:	85 c0                	test   %eax,%eax
 806aa5a:	0f 85 22 00 00 00    	jne    806aa82 <decl_initializer+0x7d7>
 806aa60:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806aa63:	85 c0                	test   %eax,%eax
 806aa65:	0f 84 17 00 00 00    	je     806aa82 <decl_initializer+0x7d7>
 806aa6b:	48 8b 05 b6 34 02 00 	mov    0x234b6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806aa72:	8b 00                	mov    (%rax),%eax
 806aa74:	83 f8 7b             	cmp    $0x7b,%eax
 806aa77:	0f 84 05 00 00 00    	je     806aa82 <decl_initializer+0x7d7>
 806aa7d:	e9 d4 04 00 00       	jmpq   806af56 <decl_initializer+0xcab>
 806aa82:	b8 00 00 00 00       	mov    $0x0,%eax
 806aa87:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 806aa8d:	48 8b 05 94 34 02 00 	mov    0x23494(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806aa94:	8b 00                	mov    (%rax),%eax
 806aa96:	83 f8 28             	cmp    $0x28,%eax
 806aa99:	0f 85 be 00 00 00    	jne    806ab5d <decl_initializer+0x8b2>
 806aa9f:	b8 00 00 00 00       	mov    $0x0,%eax
 806aaa4:	e8 21 dc fe ff       	callq  80586ca <next>
 806aaa9:	48 8b 05 78 34 02 00 	mov    0x23478(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806aab0:	8b 00                	mov    (%rax),%eax
 806aab2:	83 f8 28             	cmp    $0x28,%eax
 806aab5:	0f 85 1e 00 00 00    	jne    806aad9 <decl_initializer+0x82e>
 806aabb:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 806aac1:	48 89 c1             	mov    %rax,%rcx
 806aac4:	83 c0 01             	add    $0x1,%eax
 806aac7:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 806aacd:	b8 00 00 00 00       	mov    $0x0,%eax
 806aad2:	e8 f3 db fe ff       	callq  80586ca <next>
 806aad7:	eb d0                	jmp    806aaa9 <decl_initializer+0x7fe>
 806aad9:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
 806aae0:	48 89 c6             	mov    %rax,%rsi
 806aae3:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
 806aaea:	48 89 c7             	mov    %rax,%rdi
 806aaed:	b8 00 00 00 00       	mov    $0x0,%eax
 806aaf2:	e8 28 8e ff ff       	callq  806391f <parse_btype>
 806aaf7:	85 c0                	test   %eax,%eax
 806aaf9:	0f 84 05 00 00 00    	je     806ab04 <decl_initializer+0x859>
 806aaff:	e9 14 00 00 00       	jmpq   806ab18 <decl_initializer+0x86d>
 806ab04:	48 8d 05 36 17 02 00 	lea    0x21736(%rip),%rax        # 808c241 <L.220>
 806ab0b:	48 89 c7             	mov    %rax,%rdi
 806ab0e:	b8 00 00 00 00       	mov    $0x0,%eax
 806ab13:	e8 3a 66 fe ff       	callq  8051152 <expect>
 806ab18:	b8 01 00 00 00       	mov    $0x1,%eax
 806ab1d:	49 89 c3             	mov    %rax,%r11
 806ab20:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
 806ab24:	49 89 c2             	mov    %rax,%r10
 806ab27:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
 806ab2e:	48 89 c6             	mov    %rax,%rsi
 806ab31:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
 806ab38:	48 89 c7             	mov    %rax,%rdi
 806ab3b:	4c 89 d2             	mov    %r10,%rdx
 806ab3e:	4c 89 d9             	mov    %r11,%rcx
 806ab41:	b8 00 00 00 00       	mov    $0x0,%eax
 806ab46:	e8 f9 9d ff ff       	callq  8064944 <type_decl>
 806ab4b:	b8 29 00 00 00       	mov    $0x29,%eax
 806ab50:	48 89 c7             	mov    %rax,%rdi
 806ab53:	b8 00 00 00 00       	mov    $0x0,%eax
 806ab58:	e8 86 65 fe ff       	callq  80510e3 <skip>
 806ab5d:	b8 01 00 00 00       	mov    $0x1,%eax
 806ab62:	89 45 c8             	mov    %eax,-0x38(%rbp)
 806ab65:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806ab68:	85 c0                	test   %eax,%eax
 806ab6a:	0f 85 17 00 00 00    	jne    806ab87 <decl_initializer+0x8dc>
 806ab70:	48 8b 05 b1 33 02 00 	mov    0x233b1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806ab77:	8b 00                	mov    (%rax),%eax
 806ab79:	83 f8 7b             	cmp    $0x7b,%eax
 806ab7c:	0f 84 05 00 00 00    	je     806ab87 <decl_initializer+0x8dc>
 806ab82:	e9 1a 00 00 00       	jmpq   806aba1 <decl_initializer+0x8f6>
 806ab87:	b8 7b 00 00 00       	mov    $0x7b,%eax
 806ab8c:	48 89 c7             	mov    %rax,%rdi
 806ab8f:	b8 00 00 00 00       	mov    $0x0,%eax
 806ab94:	e8 4a 65 fe ff       	callq  80510e3 <skip>
 806ab99:	b8 00 00 00 00       	mov    $0x0,%eax
 806ab9e:	89 45 c8             	mov    %eax,-0x38(%rbp)
 806aba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806aba5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806abac:	00 00 00 
 806abaf:	48 01 c8             	add    %rcx,%rax
 806abb2:	48 8b 08             	mov    (%rax),%rcx
 806abb5:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 806abb9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806abbd:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806abc4:	00 00 00 
 806abc7:	48 01 c8             	add    %rcx,%rax
 806abca:	48 8b 08             	mov    (%rax),%rcx
 806abcd:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 806abd1:	b8 00 00 00 00       	mov    $0x0,%eax
 806abd6:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806abd9:	b8 00 00 00 00       	mov    $0x0,%eax
 806abde:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 806abe1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806abe5:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806abec:	00 00 00 
 806abef:	48 01 c8             	add    %rcx,%rax
 806abf2:	48 8b 08             	mov    (%rax),%rcx
 806abf5:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 806abf8:	48 8b 05 29 33 02 00 	mov    0x23329(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806abff:	8b 00                	mov    (%rax),%eax
 806ac01:	83 f8 7d             	cmp    $0x7d,%eax
 806ac04:	0f 84 93 02 00 00    	je     806ae9d <decl_initializer+0xbf2>
 806ac0a:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ac0d:	49 89 c1             	mov    %rax,%r9
 806ac10:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 806ac14:	49 89 c0             	mov    %rax,%r8
 806ac17:	b8 00 00 00 00       	mov    $0x0,%eax
 806ac1c:	49 89 c3             	mov    %rax,%r11
 806ac1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806ac23:	49 89 c2             	mov    %rax,%r10
 806ac26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ac2a:	48 89 c6             	mov    %rax,%rsi
 806ac2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806ac31:	48 89 c7             	mov    %rax,%rdi
 806ac34:	4c 89 d2             	mov    %r10,%rdx
 806ac37:	4c 89 d9             	mov    %r11,%rcx
 806ac3a:	b8 00 00 00 00       	mov    $0x0,%eax
 806ac3f:	e8 87 e8 ff ff       	callq  80694cb <decl_designator>
 806ac44:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ac48:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806ac4f:	00 00 00 
 806ac52:	48 01 c8             	add    %rcx,%rax
 806ac55:	48 8b 08             	mov    (%rax),%rcx
 806ac58:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 806ac5b:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ac5e:	85 c0                	test   %eax,%eax
 806ac60:	0f 84 05 00 00 00    	je     806ac6b <decl_initializer+0x9c0>
 806ac66:	e9 4e 00 00 00       	jmpq   806acb9 <decl_initializer+0xa0e>
 806ac6b:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ac6e:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 806ac71:	39 c8                	cmp    %ecx,%eax
 806ac73:	0f 8d 40 00 00 00    	jge    806acb9 <decl_initializer+0xa0e>
 806ac79:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ac7c:	48 63 c0             	movslq %eax,%rax
 806ac7f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806ac83:	48 89 c2             	mov    %rax,%rdx
 806ac86:	48 01 d1             	add    %rdx,%rcx
 806ac89:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806ac8c:	8b 55 d0             	mov    -0x30(%rbp),%edx
 806ac8f:	48 29 d0             	sub    %rdx,%rax
 806ac92:	49 89 c3             	mov    %rax,%r11
 806ac95:	48 89 c8             	mov    %rcx,%rax
 806ac98:	49 89 c2             	mov    %rax,%r10
 806ac9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ac9f:	48 89 c6             	mov    %rax,%rsi
 806aca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806aca6:	48 89 c7             	mov    %rax,%rdi
 806aca9:	4c 89 d2             	mov    %r10,%rdx
 806acac:	4c 89 d9             	mov    %r11,%rcx
 806acaf:	b8 00 00 00 00       	mov    $0x0,%eax
 806acb4:	e8 5c f5 ff ff       	callq  806a215 <init_putz>
 806acb9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806acbd:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806acc4:	00 00 00 
 806acc7:	48 01 c8             	add    %rcx,%rax
 806acca:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
 806acce:	48 89 ce             	mov    %rcx,%rsi
 806acd1:	48 89 c7             	mov    %rax,%rdi
 806acd4:	b8 00 00 00 00       	mov    $0x0,%eax
 806acd9:	e8 36 61 ff ff       	callq  8060e14 <type_size>
 806acde:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 806ace1:	48 01 c1             	add    %rax,%rcx
 806ace4:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 806ace7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806acea:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806aced:	39 c8                	cmp    %ecx,%eax
 806acef:	0f 8e 06 00 00 00    	jle    806acfb <decl_initializer+0xa50>
 806acf5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806acf8:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806acfb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806acff:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806ad06:	00 00 00 
 806ad09:	48 01 c8             	add    %rcx,%rax
 806ad0c:	48 8b 08             	mov    (%rax),%rcx
 806ad0f:	85 c9                	test   %ecx,%ecx
 806ad11:	0f 84 16 01 00 00    	je     806ae2d <decl_initializer+0xb82>
 806ad17:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ad1b:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806ad22:	00 00 00 
 806ad25:	48 01 c8             	add    %rcx,%rax
 806ad28:	48 8b 08             	mov    (%rax),%rcx
 806ad2b:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806ad32:	00 00 00 
 806ad35:	48 01 c1             	add    %rax,%rcx
 806ad38:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ad3c:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806ad43:	00 00 00 
 806ad46:	48 01 d0             	add    %rdx,%rax
 806ad49:	48 8b 11             	mov    (%rcx),%rdx
 806ad4c:	48 8b 08             	mov    (%rax),%rcx
 806ad4f:	48 39 ca             	cmp    %rcx,%rdx
 806ad52:	0f 84 05 00 00 00    	je     806ad5d <decl_initializer+0xab2>
 806ad58:	e9 d0 00 00 00       	jmpq   806ae2d <decl_initializer+0xb82>
 806ad5d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ad61:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806ad68:	00 00 00 
 806ad6b:	48 01 c8             	add    %rcx,%rax
 806ad6e:	8b 08                	mov    (%rax),%ecx
 806ad70:	83 e1 40             	and    $0x40,%ecx
 806ad73:	85 c9                	test   %ecx,%ecx
 806ad75:	0f 84 95 00 00 00    	je     806ae10 <decl_initializer+0xb65>
 806ad7b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ad7f:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806ad86:	00 00 00 
 806ad89:	48 01 c8             	add    %rcx,%rax
 806ad8c:	48 8b 08             	mov    (%rax),%rcx
 806ad8f:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 806ad96:	00 00 00 
 806ad99:	48 01 c1             	add    %rax,%rcx
 806ad9c:	8b 01                	mov    (%rcx),%eax
 806ad9e:	83 e0 40             	and    $0x40,%eax
 806ada1:	85 c0                	test   %eax,%eax
 806ada3:	0f 84 67 00 00 00    	je     806ae10 <decl_initializer+0xb65>
 806ada9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806adad:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806adb4:	00 00 00 
 806adb7:	48 01 c8             	add    %rcx,%rax
 806adba:	8b 08                	mov    (%rax),%ecx
 806adbc:	c1 f9 12             	sar    $0x12,%ecx
 806adbf:	83 e1 3f             	and    $0x3f,%ecx
 806adc2:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%rbp)
 806adc8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806adcc:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806add3:	00 00 00 
 806add6:	48 01 c8             	add    %rcx,%rax
 806add9:	48 8b 08             	mov    (%rax),%rcx
 806addc:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 806ade3:	00 00 00 
 806ade6:	48 01 c1             	add    %rax,%rcx
 806ade9:	8b 01                	mov    (%rcx),%eax
 806adeb:	c1 f8 12             	sar    $0x12,%eax
 806adee:	83 e0 3f             	and    $0x3f,%eax
 806adf1:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
 806adf7:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
 806adfd:	8b 8d 30 ff ff ff    	mov    -0xd0(%rbp),%ecx
 806ae03:	39 c8                	cmp    %ecx,%eax
 806ae05:	0f 84 05 00 00 00    	je     806ae10 <decl_initializer+0xb65>
 806ae0b:	e9 1d 00 00 00       	jmpq   806ae2d <decl_initializer+0xb82>
 806ae10:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ae14:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806ae1b:	00 00 00 
 806ae1e:	48 01 c8             	add    %rcx,%rax
 806ae21:	48 8b 08             	mov    (%rax),%rcx
 806ae24:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 806ae28:	e9 ce fe ff ff       	jmpq   806acfb <decl_initializer+0xa50>
 806ae2d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ae31:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806ae38:	00 00 00 
 806ae3b:	48 01 c8             	add    %rcx,%rax
 806ae3e:	48 8b 08             	mov    (%rax),%rcx
 806ae41:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 806ae45:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806ae48:	85 c0                	test   %eax,%eax
 806ae4a:	0f 84 1f 00 00 00    	je     806ae6f <decl_initializer+0xbc4>
 806ae50:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806ae54:	48 89 c1             	mov    %rax,%rcx
 806ae57:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806ae5e:	00 00 00 
 806ae61:	48 39 c1             	cmp    %rax,%rcx
 806ae64:	0f 85 05 00 00 00    	jne    806ae6f <decl_initializer+0xbc4>
 806ae6a:	e9 2e 00 00 00       	jmpq   806ae9d <decl_initializer+0xbf2>
 806ae6f:	48 8b 05 b2 30 02 00 	mov    0x230b2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806ae76:	8b 00                	mov    (%rax),%eax
 806ae78:	83 f8 7d             	cmp    $0x7d,%eax
 806ae7b:	0f 85 05 00 00 00    	jne    806ae86 <decl_initializer+0xbdb>
 806ae81:	e9 17 00 00 00       	jmpq   806ae9d <decl_initializer+0xbf2>
 806ae86:	b8 2c 00 00 00       	mov    $0x2c,%eax
 806ae8b:	48 89 c7             	mov    %rax,%rdi
 806ae8e:	b8 00 00 00 00       	mov    $0x0,%eax
 806ae93:	e8 4b 62 fe ff       	callq  80510e3 <skip>
 806ae98:	e9 5b fd ff ff       	jmpq   806abf8 <decl_initializer+0x94d>
 806ae9d:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806aea0:	85 c0                	test   %eax,%eax
 806aea2:	0f 84 05 00 00 00    	je     806aead <decl_initializer+0xc02>
 806aea8:	e9 4e 00 00 00       	jmpq   806aefb <decl_initializer+0xc50>
 806aead:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806aeb0:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806aeb3:	39 c8                	cmp    %ecx,%eax
 806aeb5:	0f 8d 40 00 00 00    	jge    806aefb <decl_initializer+0xc50>
 806aebb:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806aebe:	48 63 c0             	movslq %eax,%rax
 806aec1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806aec5:	48 89 c2             	mov    %rax,%rdx
 806aec8:	48 01 d1             	add    %rdx,%rcx
 806aecb:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806aece:	8b 55 d0             	mov    -0x30(%rbp),%edx
 806aed1:	48 29 d0             	sub    %rdx,%rax
 806aed4:	49 89 c3             	mov    %rax,%r11
 806aed7:	48 89 c8             	mov    %rcx,%rax
 806aeda:	49 89 c2             	mov    %rax,%r10
 806aedd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806aee1:	48 89 c6             	mov    %rax,%rsi
 806aee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806aee8:	48 89 c7             	mov    %rax,%rdi
 806aeeb:	4c 89 d2             	mov    %r10,%rdx
 806aeee:	4c 89 d9             	mov    %r11,%rcx
 806aef1:	b8 00 00 00 00       	mov    $0x0,%eax
 806aef6:	e8 1a f3 ff ff       	callq  806a215 <init_putz>
 806aefb:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806aefe:	85 c0                	test   %eax,%eax
 806af00:	0f 84 05 00 00 00    	je     806af0b <decl_initializer+0xc60>
 806af06:	e9 12 00 00 00       	jmpq   806af1d <decl_initializer+0xc72>
 806af0b:	b8 7d 00 00 00       	mov    $0x7d,%eax
 806af10:	48 89 c7             	mov    %rax,%rdi
 806af13:	b8 00 00 00 00       	mov    $0x0,%eax
 806af18:	e8 c6 61 fe ff       	callq  80510e3 <skip>
 806af1d:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 806af23:	85 c0                	test   %eax,%eax
 806af25:	0f 84 26 00 00 00    	je     806af51 <decl_initializer+0xca6>
 806af2b:	b8 29 00 00 00       	mov    $0x29,%eax
 806af30:	48 89 c7             	mov    %rax,%rdi
 806af33:	b8 00 00 00 00       	mov    $0x0,%eax
 806af38:	e8 a6 61 fe ff       	callq  80510e3 <skip>
 806af3d:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
 806af43:	48 89 c1             	mov    %rax,%rcx
 806af46:	83 c0 ff             	add    $0xffffffff,%eax
 806af49:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
 806af4f:	eb cc                	jmp    806af1d <decl_initializer+0xc72>
 806af51:	e9 c1 01 00 00       	jmpq   806b117 <decl_initializer+0xe6c>
 806af56:	48 8b 05 cb 2f 02 00 	mov    0x22fcb(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806af5d:	8b 00                	mov    (%rax),%eax
 806af5f:	83 f8 7b             	cmp    $0x7b,%eax
 806af62:	0f 85 52 00 00 00    	jne    806afba <decl_initializer+0xd0f>
 806af68:	b8 00 00 00 00       	mov    $0x0,%eax
 806af6d:	e8 58 d7 fe ff       	callq  80586ca <next>
 806af72:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806af75:	49 89 c0             	mov    %rax,%r8
 806af78:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806af7b:	49 89 c3             	mov    %rax,%r11
 806af7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806af82:	49 89 c2             	mov    %rax,%r10
 806af85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806af89:	48 89 c6             	mov    %rax,%rsi
 806af8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806af90:	48 89 c7             	mov    %rax,%rdi
 806af93:	4c 89 d2             	mov    %r10,%rdx
 806af96:	4c 89 d9             	mov    %r11,%rcx
 806af99:	b8 00 00 00 00       	mov    $0x0,%eax
 806af9e:	e8 08 f3 ff ff       	callq  806a2ab <decl_initializer>
 806afa3:	b8 7d 00 00 00       	mov    $0x7d,%eax
 806afa8:	48 89 c7             	mov    %rax,%rdi
 806afab:	b8 00 00 00 00       	mov    $0x0,%eax
 806afb0:	e8 2e 61 fe ff       	callq  80510e3 <skip>
 806afb5:	e9 5d 01 00 00       	jmpq   806b117 <decl_initializer+0xe6c>
 806afba:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806afbd:	85 c0                	test   %eax,%eax
 806afbf:	0f 84 fe 00 00 00    	je     806b0c3 <decl_initializer+0xe18>
 806afc5:	b8 00 00 00 00       	mov    $0x0,%eax
 806afca:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806afcd:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806afd0:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806afd3:	83 f8 00             	cmp    $0x0,%eax
 806afd6:	0f 8f 3a 00 00 00    	jg     806b016 <decl_initializer+0xd6b>
 806afdc:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806afdf:	83 f8 00             	cmp    $0x0,%eax
 806afe2:	0f 8f 2e 00 00 00    	jg     806b016 <decl_initializer+0xd6b>
 806afe8:	48 8b 05 39 2f 02 00 	mov    0x22f39(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806afef:	8b 00                	mov    (%rax),%eax
 806aff1:	83 f8 7d             	cmp    $0x7d,%eax
 806aff4:	0f 84 17 00 00 00    	je     806b011 <decl_initializer+0xd66>
 806affa:	48 8b 05 27 2f 02 00 	mov    0x22f27(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b001:	8b 00                	mov    (%rax),%eax
 806b003:	83 f8 2c             	cmp    $0x2c,%eax
 806b006:	0f 84 05 00 00 00    	je     806b011 <decl_initializer+0xd66>
 806b00c:	e9 05 00 00 00       	jmpq   806b016 <decl_initializer+0xd6b>
 806b011:	e9 a8 00 00 00       	jmpq   806b0be <decl_initializer+0xe13>
 806b016:	48 8b 05 0b 2f 02 00 	mov    0x22f0b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b01d:	8b 00                	mov    (%rax),%eax
 806b01f:	83 f8 ff             	cmp    $0xffffffff,%eax
 806b022:	0f 84 96 00 00 00    	je     806b0be <decl_initializer+0xe13>
 806b028:	48 8b 05 f9 2e 02 00 	mov    0x22ef9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b02f:	8b 00                	mov    (%rax),%eax
 806b031:	83 f8 28             	cmp    $0x28,%eax
 806b034:	0f 85 11 00 00 00    	jne    806b04b <decl_initializer+0xda0>
 806b03a:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806b03d:	48 89 c1             	mov    %rax,%rcx
 806b040:	83 c0 01             	add    $0x1,%eax
 806b043:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806b046:	e9 64 00 00 00       	jmpq   806b0af <decl_initializer+0xe04>
 806b04b:	48 8b 05 d6 2e 02 00 	mov    0x22ed6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b052:	8b 00                	mov    (%rax),%eax
 806b054:	83 f8 29             	cmp    $0x29,%eax
 806b057:	0f 85 11 00 00 00    	jne    806b06e <decl_initializer+0xdc3>
 806b05d:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806b060:	48 89 c1             	mov    %rax,%rcx
 806b063:	83 c0 ff             	add    $0xffffffff,%eax
 806b066:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806b069:	e9 41 00 00 00       	jmpq   806b0af <decl_initializer+0xe04>
 806b06e:	48 8b 05 b3 2e 02 00 	mov    0x22eb3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b075:	8b 00                	mov    (%rax),%eax
 806b077:	83 f8 7b             	cmp    $0x7b,%eax
 806b07a:	0f 85 11 00 00 00    	jne    806b091 <decl_initializer+0xde6>
 806b080:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806b083:	48 89 c1             	mov    %rax,%rcx
 806b086:	83 c0 01             	add    $0x1,%eax
 806b089:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806b08c:	e9 1e 00 00 00       	jmpq   806b0af <decl_initializer+0xe04>
 806b091:	48 8b 05 90 2e 02 00 	mov    0x22e90(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b098:	8b 00                	mov    (%rax),%eax
 806b09a:	83 f8 7d             	cmp    $0x7d,%eax
 806b09d:	0f 85 0c 00 00 00    	jne    806b0af <decl_initializer+0xe04>
 806b0a3:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806b0a6:	48 89 c1             	mov    %rax,%rcx
 806b0a9:	83 c0 ff             	add    $0xffffffff,%eax
 806b0ac:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806b0af:	b8 00 00 00 00       	mov    $0x0,%eax
 806b0b4:	e8 11 d6 fe ff       	callq  80586ca <next>
 806b0b9:	e9 12 ff ff ff       	jmpq   806afd0 <decl_initializer+0xd25>
 806b0be:	e9 54 00 00 00       	jmpq   806b117 <decl_initializer+0xe6c>
 806b0c3:	b8 01 00 00 00       	mov    $0x1,%eax
 806b0c8:	89 45 ac             	mov    %eax,-0x54(%rbp)
 806b0cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b0cf:	85 c0                	test   %eax,%eax
 806b0d1:	0f 84 05 00 00 00    	je     806b0dc <decl_initializer+0xe31>
 806b0d7:	e9 08 00 00 00       	jmpq   806b0e4 <decl_initializer+0xe39>
 806b0dc:	b8 02 00 00 00       	mov    $0x2,%eax
 806b0e1:	89 45 ac             	mov    %eax,-0x54(%rbp)
 806b0e4:	8b 45 ac             	mov    -0x54(%rbp),%eax
 806b0e7:	49 89 c0             	mov    %rax,%r8
 806b0ea:	b8 00 00 00 00       	mov    $0x0,%eax
 806b0ef:	49 89 c3             	mov    %rax,%r11
 806b0f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806b0f6:	49 89 c2             	mov    %rax,%r10
 806b0f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b0fd:	48 89 c6             	mov    %rax,%rsi
 806b100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b104:	48 89 c7             	mov    %rax,%rdi
 806b107:	4c 89 d2             	mov    %r10,%rdx
 806b10a:	4c 89 d9             	mov    %r11,%rcx
 806b10d:	b8 00 00 00 00       	mov    $0x0,%eax
 806b112:	e8 f7 ea ff ff       	callq  8069c0e <init_putv>
 806b117:	c9                   	leaveq 
 806b118:	c3                   	retq   

000000000806b119 <decl_initializer_alloc>:
 806b119:	55                   	push   %rbp
 806b11a:	48 89 e5             	mov    %rsp,%rbp
 806b11d:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 806b124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806b128:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806b12c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806b130:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806b134:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806b138:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 806b13c:	b8 00 00 00 00       	mov    $0x0,%eax
 806b141:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 806b145:	b8 18 00 00 00       	mov    $0x18,%eax
 806b14a:	49 89 c2             	mov    %rax,%r10
 806b14d:	b8 00 00 00 00       	mov    $0x0,%eax
 806b152:	48 89 c6             	mov    %rax,%rsi
 806b155:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 806b159:	48 89 c7             	mov    %rax,%rdi
 806b15c:	4c 89 d2             	mov    %r10,%rdx
 806b15f:	b8 00 00 00 00       	mov    $0x0,%eax
 806b164:	e8 47 bd 01 00       	callq  8086eb0 <memset>
 806b169:	b8 00 00 00 00       	mov    $0x0,%eax
 806b16e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 806b175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b179:	8b 08                	mov    (%rax),%ecx
 806b17b:	83 e1 0f             	and    $0xf,%ecx
 806b17e:	83 f9 07             	cmp    $0x7,%ecx
 806b181:	0f 85 df 00 00 00    	jne    806b266 <decl_initializer_alloc+0x14d>
 806b187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b18b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b192:	00 00 00 
 806b195:	48 01 c8             	add    %rcx,%rax
 806b198:	48 8b 08             	mov    (%rax),%rcx
 806b19b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 806b1a2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806b1a9:	85 c0                	test   %eax,%eax
 806b1ab:	0f 84 3f 00 00 00    	je     806b1f0 <decl_initializer_alloc+0xd7>
 806b1b1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806b1b8:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806b1bf:	00 00 00 
 806b1c2:	48 01 c8             	add    %rcx,%rax
 806b1c5:	48 8b 08             	mov    (%rax),%rcx
 806b1c8:	85 c9                	test   %ecx,%ecx
 806b1ca:	0f 84 20 00 00 00    	je     806b1f0 <decl_initializer_alloc+0xd7>
 806b1d0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806b1d7:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806b1de:	00 00 00 
 806b1e1:	48 01 c8             	add    %rcx,%rax
 806b1e4:	48 8b 08             	mov    (%rax),%rcx
 806b1e7:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 806b1ee:	eb b2                	jmp    806b1a2 <decl_initializer_alloc+0x89>
 806b1f0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806b1f7:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b1fe:	00 00 00 
 806b201:	48 01 c8             	add    %rcx,%rax
 806b204:	8b 08                	mov    (%rax),%ecx
 806b206:	83 e1 20             	and    $0x20,%ecx
 806b209:	85 c9                	test   %ecx,%ecx
 806b20b:	0f 84 55 00 00 00    	je     806b266 <decl_initializer_alloc+0x14d>
 806b211:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806b218:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b21f:	00 00 00 
 806b222:	48 01 c8             	add    %rcx,%rax
 806b225:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b22c:	00 00 00 
 806b22f:	48 01 c8             	add    %rcx,%rax
 806b232:	48 8b 08             	mov    (%rax),%rcx
 806b235:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806b23c:	00 00 00 
 806b23f:	48 01 c1             	add    %rax,%rcx
 806b242:	48 8b 01             	mov    (%rcx),%rax
 806b245:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806b24c:	00 00 00 
 806b24f:	48 39 c8             	cmp    %rcx,%rax
 806b252:	0f 8d 0e 00 00 00    	jge    806b266 <decl_initializer_alloc+0x14d>
 806b258:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 806b25f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 806b266:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 806b26a:	48 89 c6             	mov    %rax,%rsi
 806b26d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b271:	48 89 c7             	mov    %rax,%rdi
 806b274:	b8 00 00 00 00       	mov    $0x0,%eax
 806b279:	e8 96 5b ff ff       	callq  8060e14 <type_size>
 806b27e:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806b281:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 806b285:	48 89 c7             	mov    %rax,%rdi
 806b288:	b8 00 00 00 00       	mov    $0x0,%eax
 806b28d:	e8 c0 81 fe ff       	callq  8053452 <tok_str_new>
 806b292:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806b295:	83 f8 00             	cmp    $0x0,%eax
 806b298:	0f 8c 24 00 00 00    	jl     806b2c2 <decl_initializer_alloc+0x1a9>
 806b29e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806b2a5:	85 c0                	test   %eax,%eax
 806b2a7:	0f 84 10 00 00 00    	je     806b2bd <decl_initializer_alloc+0x1a4>
 806b2ad:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806b2b0:	85 c0                	test   %eax,%eax
 806b2b2:	0f 84 05 00 00 00    	je     806b2bd <decl_initializer_alloc+0x1a4>
 806b2b8:	e9 05 00 00 00       	jmpq   806b2c2 <decl_initializer_alloc+0x1a9>
 806b2bd:	e9 4f 02 00 00       	jmpq   806b511 <decl_initializer_alloc+0x3f8>
 806b2c2:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806b2c5:	85 c0                	test   %eax,%eax
 806b2c7:	0f 84 05 00 00 00    	je     806b2d2 <decl_initializer_alloc+0x1b9>
 806b2cd:	e9 14 00 00 00       	jmpq   806b2e6 <decl_initializer_alloc+0x1cd>
 806b2d2:	48 8d 05 6d 0f 02 00 	lea    0x20f6d(%rip),%rax        # 808c246 <L.221>
 806b2d9:	48 89 c7             	mov    %rax,%rdi
 806b2dc:	b8 00 00 00 00       	mov    $0x0,%eax
 806b2e1:	e8 e1 23 fe ff       	callq  804d6c7 <tcc_error>
 806b2e6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806b2e9:	83 f8 02             	cmp    $0x2,%eax
 806b2ec:	0f 85 51 00 00 00    	jne    806b343 <decl_initializer_alloc+0x22a>
 806b2f2:	48 8b 05 2f 2c 02 00 	mov    0x22c2f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b2f9:	8b 00                	mov    (%rax),%eax
 806b2fb:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 806b301:	0f 84 1a 00 00 00    	je     806b321 <decl_initializer_alloc+0x208>
 806b307:	48 8b 05 1a 2c 02 00 	mov    0x22c1a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b30e:	8b 00                	mov    (%rax),%eax
 806b310:	81 f8 b8 00 00 00    	cmp    $0xb8,%eax
 806b316:	0f 84 05 00 00 00    	je     806b321 <decl_initializer_alloc+0x208>
 806b31c:	e9 1d 00 00 00       	jmpq   806b33e <decl_initializer_alloc+0x225>
 806b321:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 806b325:	48 89 c7             	mov    %rax,%rdi
 806b328:	b8 00 00 00 00       	mov    $0x0,%eax
 806b32d:	e8 fe 86 fe ff       	callq  8053a30 <tok_str_add_tok>
 806b332:	b8 00 00 00 00       	mov    $0x0,%eax
 806b337:	e8 8e d3 fe ff       	callq  80586ca <next>
 806b33c:	eb b4                	jmp    806b2f2 <decl_initializer_alloc+0x1d9>
 806b33e:	e9 e4 00 00 00       	jmpq   806b427 <decl_initializer_alloc+0x30e>
 806b343:	b8 00 00 00 00       	mov    $0x0,%eax
 806b348:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806b34b:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806b34e:	83 f8 00             	cmp    $0x0,%eax
 806b351:	0f 8f 2e 00 00 00    	jg     806b385 <decl_initializer_alloc+0x26c>
 806b357:	48 8b 05 ca 2b 02 00 	mov    0x22bca(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b35e:	8b 00                	mov    (%rax),%eax
 806b360:	83 f8 2c             	cmp    $0x2c,%eax
 806b363:	0f 84 17 00 00 00    	je     806b380 <decl_initializer_alloc+0x267>
 806b369:	48 8b 05 b8 2b 02 00 	mov    0x22bb8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b370:	8b 00                	mov    (%rax),%eax
 806b372:	83 f8 3b             	cmp    $0x3b,%eax
 806b375:	0f 84 05 00 00 00    	je     806b380 <decl_initializer_alloc+0x267>
 806b37b:	e9 05 00 00 00       	jmpq   806b385 <decl_initializer_alloc+0x26c>
 806b380:	e9 a2 00 00 00       	jmpq   806b427 <decl_initializer_alloc+0x30e>
 806b385:	48 8b 05 9c 2b 02 00 	mov    0x22b9c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b38c:	8b 00                	mov    (%rax),%eax
 806b38e:	83 f8 00             	cmp    $0x0,%eax
 806b391:	0f 8d 14 00 00 00    	jge    806b3ab <decl_initializer_alloc+0x292>
 806b397:	48 8d 05 ba 0e 02 00 	lea    0x20eba(%rip),%rax        # 808c258 <L.222>
 806b39e:	48 89 c7             	mov    %rax,%rdi
 806b3a1:	b8 00 00 00 00       	mov    $0x0,%eax
 806b3a6:	e8 1c 23 fe ff       	callq  804d6c7 <tcc_error>
 806b3ab:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 806b3af:	48 89 c7             	mov    %rax,%rdi
 806b3b2:	b8 00 00 00 00       	mov    $0x0,%eax
 806b3b7:	e8 74 86 fe ff       	callq  8053a30 <tok_str_add_tok>
 806b3bc:	48 8b 05 65 2b 02 00 	mov    0x22b65(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b3c3:	8b 00                	mov    (%rax),%eax
 806b3c5:	83 f8 7b             	cmp    $0x7b,%eax
 806b3c8:	0f 85 11 00 00 00    	jne    806b3df <decl_initializer_alloc+0x2c6>
 806b3ce:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806b3d1:	48 89 c1             	mov    %rax,%rcx
 806b3d4:	83 c0 01             	add    $0x1,%eax
 806b3d7:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806b3da:	e9 39 00 00 00       	jmpq   806b418 <decl_initializer_alloc+0x2ff>
 806b3df:	48 8b 05 42 2b 02 00 	mov    0x22b42(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806b3e6:	8b 00                	mov    (%rax),%eax
 806b3e8:	83 f8 7d             	cmp    $0x7d,%eax
 806b3eb:	0f 85 27 00 00 00    	jne    806b418 <decl_initializer_alloc+0x2ff>
 806b3f1:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806b3f4:	48 89 c1             	mov    %rax,%rcx
 806b3f7:	83 c0 ff             	add    $0xffffffff,%eax
 806b3fa:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806b3fd:	8b 45 bc             	mov    -0x44(%rbp),%eax
 806b400:	83 f8 00             	cmp    $0x0,%eax
 806b403:	0f 8f 0f 00 00 00    	jg     806b418 <decl_initializer_alloc+0x2ff>
 806b409:	b8 00 00 00 00       	mov    $0x0,%eax
 806b40e:	e8 b7 d2 fe ff       	callq  80586ca <next>
 806b413:	e9 0f 00 00 00       	jmpq   806b427 <decl_initializer_alloc+0x30e>
 806b418:	b8 00 00 00 00       	mov    $0x0,%eax
 806b41d:	e8 a8 d2 fe ff       	callq  80586ca <next>
 806b422:	e9 24 ff ff ff       	jmpq   806b34b <decl_initializer_alloc+0x232>
 806b427:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 806b42c:	48 89 c6             	mov    %rax,%rsi
 806b42f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 806b433:	48 89 c7             	mov    %rax,%rdi
 806b436:	b8 00 00 00 00       	mov    $0x0,%eax
 806b43b:	e8 3a 81 fe ff       	callq  805357a <tok_str_add>
 806b440:	b8 00 00 00 00       	mov    $0x0,%eax
 806b445:	48 89 c6             	mov    %rax,%rsi
 806b448:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 806b44c:	48 89 c7             	mov    %rax,%rdi
 806b44f:	b8 00 00 00 00       	mov    $0x0,%eax
 806b454:	e8 21 81 fe ff       	callq  805357a <tok_str_add>
 806b459:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 806b45d:	48 89 c7             	mov    %rax,%rdi
 806b460:	b8 00 00 00 00       	mov    $0x0,%eax
 806b465:	e8 a5 7e fe ff       	callq  805330f <save_parse_state>
 806b46a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806b46e:	4c 8b 1d fb 2a 02 00 	mov    0x22afb(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 806b475:	49 89 03             	mov    %rax,(%r11)
 806b478:	b8 00 00 00 00       	mov    $0x0,%eax
 806b47d:	e8 48 d2 fe ff       	callq  80586ca <next>
 806b482:	b8 01 00 00 00       	mov    $0x1,%eax
 806b487:	49 89 c0             	mov    %rax,%r8
 806b48a:	b8 01 00 00 00       	mov    $0x1,%eax
 806b48f:	49 89 c3             	mov    %rax,%r11
 806b492:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806b499:	00 00 00 
 806b49c:	49 89 c2             	mov    %rax,%r10
 806b49f:	b8 00 00 00 00       	mov    $0x0,%eax
 806b4a4:	48 89 c6             	mov    %rax,%rsi
 806b4a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b4ab:	48 89 c7             	mov    %rax,%rdi
 806b4ae:	4c 89 d2             	mov    %r10,%rdx
 806b4b1:	4c 89 d9             	mov    %r11,%rcx
 806b4b4:	b8 00 00 00 00       	mov    $0x0,%eax
 806b4b9:	e8 ed ed ff ff       	callq  806a2ab <decl_initializer>
 806b4be:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806b4c2:	4c 8b 1d a7 2a 02 00 	mov    0x22aa7(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 806b4c9:	49 89 03             	mov    %rax,(%r11)
 806b4cc:	b8 00 00 00 00       	mov    $0x0,%eax
 806b4d1:	e8 f4 d1 fe ff       	callq  80586ca <next>
 806b4d6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 806b4da:	48 89 c6             	mov    %rax,%rsi
 806b4dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b4e1:	48 89 c7             	mov    %rax,%rdi
 806b4e4:	b8 00 00 00 00       	mov    $0x0,%eax
 806b4e9:	e8 26 59 ff ff       	callq  8060e14 <type_size>
 806b4ee:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806b4f1:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806b4f4:	83 f8 00             	cmp    $0x0,%eax
 806b4f7:	0f 8d 14 00 00 00    	jge    806b511 <decl_initializer_alloc+0x3f8>
 806b4fd:	48 8d 05 7a 0d 02 00 	lea    0x20d7a(%rip),%rax        # 808c27e <L.223>
 806b504:	48 89 c7             	mov    %rax,%rdi
 806b507:	b8 00 00 00 00       	mov    $0x0,%eax
 806b50c:	e8 b6 21 fe ff       	callq  804d6c7 <tcc_error>
 806b511:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806b518:	85 c0                	test   %eax,%eax
 806b51a:	0f 84 82 00 00 00    	je     806b5a2 <decl_initializer_alloc+0x489>
 806b520:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806b527:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b52e:	00 00 00 
 806b531:	48 01 c8             	add    %rcx,%rax
 806b534:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b53b:	00 00 00 
 806b53e:	48 01 c8             	add    %rcx,%rax
 806b541:	48 8b 08             	mov    (%rax),%rcx
 806b544:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806b54b:	00 00 00 
 806b54e:	48 01 c1             	add    %rax,%rcx
 806b551:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806b558:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 806b55f:	00 00 00 
 806b562:	48 01 d0             	add    %rdx,%rax
 806b565:	48 89 c7             	mov    %rax,%rdi
 806b568:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
 806b56f:	b8 00 00 00 00       	mov    $0x0,%eax
 806b574:	e8 66 3f ff ff       	callq  805f4df <pointed_size>
 806b579:	48 63 c0             	movslq %eax,%rax
 806b57c:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
 806b583:	48 8b 09             	mov    (%rcx),%rcx
 806b586:	48 89 c2             	mov    %rax,%rdx
 806b589:	48 0f af ca          	imul   %rdx,%rcx
 806b58d:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806b590:	48 63 c0             	movslq %eax,%rax
 806b593:	48 89 c2             	mov    %rax,%rdx
 806b596:	48 89 c8             	mov    %rcx,%rax
 806b599:	48 01 c2             	add    %rax,%rdx
 806b59c:	48 89 d0             	mov    %rdx,%rax
 806b59f:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806b5a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b5a6:	8b 08                	mov    (%rax),%ecx
 806b5a8:	c1 e1 18             	shl    $0x18,%ecx
 806b5ab:	c1 e9 1b             	shr    $0x1b,%ecx
 806b5ae:	85 c9                	test   %ecx,%ecx
 806b5b0:	0f 84 2c 00 00 00    	je     806b5e2 <decl_initializer_alloc+0x4c9>
 806b5b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b5ba:	8b 08                	mov    (%rax),%ecx
 806b5bc:	c1 e1 18             	shl    $0x18,%ecx
 806b5bf:	c1 e9 1b             	shr    $0x1b,%ecx
 806b5c2:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806b5c5:	48 39 c1             	cmp    %rax,%rcx
 806b5c8:	0f 86 0f 00 00 00    	jbe    806b5dd <decl_initializer_alloc+0x4c4>
 806b5ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b5d2:	8b 08                	mov    (%rax),%ecx
 806b5d4:	c1 e1 18             	shl    $0x18,%ecx
 806b5d7:	c1 e9 1b             	shr    $0x1b,%ecx
 806b5da:	89 4d c8             	mov    %ecx,-0x38(%rbp)
 806b5dd:	e9 1c 00 00 00       	jmpq   806b5fe <decl_initializer_alloc+0x4e5>
 806b5e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b5e6:	8b 08                	mov    (%rax),%ecx
 806b5e8:	c1 e1 17             	shl    $0x17,%ecx
 806b5eb:	c1 e9 1f             	shr    $0x1f,%ecx
 806b5ee:	85 c9                	test   %ecx,%ecx
 806b5f0:	0f 84 08 00 00 00    	je     806b5fe <decl_initializer_alloc+0x4e5>
 806b5f6:	b8 01 00 00 00       	mov    $0x1,%eax
 806b5fb:	89 45 c8             	mov    %eax,-0x38(%rbp)
 806b5fe:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806b601:	83 e0 3f             	and    $0x3f,%eax
 806b604:	83 f8 32             	cmp    $0x32,%eax
 806b607:	0f 85 9d 00 00 00    	jne    806b6aa <decl_initializer_alloc+0x591>
 806b60d:	b8 00 00 00 00       	mov    $0x0,%eax
 806b612:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 806b619:	48 8b 05 d8 29 02 00 	mov    0x229d8(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806b620:	8b 00                	mov    (%rax),%eax
 806b622:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806b625:	48 29 c8             	sub    %rcx,%rax
 806b628:	b9 00 00 00 00       	mov    $0x0,%ecx
 806b62d:	8b 55 c8             	mov    -0x38(%rbp),%edx
 806b630:	48 29 d1             	sub    %rdx,%rcx
 806b633:	48 21 c8             	and    %rcx,%rax
 806b636:	4c 8b 1d bb 29 02 00 	mov    0x229bb(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806b63d:	41 89 03             	mov    %eax,(%r11)
 806b640:	48 8b 05 b1 29 02 00 	mov    0x229b1(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 806b647:	8b 00                	mov    (%rax),%eax
 806b649:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806b64c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806b64f:	85 c0                	test   %eax,%eax
 806b651:	0f 84 2e 00 00 00    	je     806b685 <decl_initializer_alloc+0x56c>
 806b657:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806b65a:	49 89 c3             	mov    %rax,%r11
 806b65d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806b660:	49 89 c2             	mov    %rax,%r10
 806b663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b667:	48 89 c6             	mov    %rax,%rsi
 806b66a:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806b66d:	48 89 c7             	mov    %rax,%rdi
 806b670:	4c 89 d2             	mov    %r10,%rdx
 806b673:	4c 89 d9             	mov    %r11,%rcx
 806b676:	b8 00 00 00 00       	mov    $0x0,%eax
 806b67b:	e8 db 0a ff ff       	callq  805c15b <sym_push>
 806b680:	e9 20 00 00 00       	jmpq   806b6a5 <decl_initializer_alloc+0x58c>
 806b685:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806b688:	49 89 c2             	mov    %rax,%r10
 806b68b:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806b68e:	48 89 c6             	mov    %rax,%rsi
 806b691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b695:	48 89 c7             	mov    %rax,%rdi
 806b698:	4c 89 d2             	mov    %r10,%rdx
 806b69b:	b8 00 00 00 00       	mov    $0x0,%eax
 806b6a0:	e8 23 17 ff ff       	callq  805cdc8 <vset>
 806b6a5:	e9 bd 05 00 00       	jmpq   806bc67 <decl_initializer_alloc+0xb4e>
 806b6aa:	b8 00 00 00 00       	mov    $0x0,%eax
 806b6af:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 806b6b6:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806b6b9:	85 c0                	test   %eax,%eax
 806b6bb:	0f 84 e9 01 00 00    	je     806b8aa <decl_initializer_alloc+0x791>
 806b6c1:	8b 45 10             	mov    0x10(%rbp),%eax
 806b6c4:	83 f8 30             	cmp    $0x30,%eax
 806b6c7:	0f 85 dd 01 00 00    	jne    806b8aa <decl_initializer_alloc+0x791>
 806b6cd:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806b6d0:	48 89 c7             	mov    %rax,%rdi
 806b6d3:	b8 00 00 00 00       	mov    $0x0,%eax
 806b6d8:	e8 07 0a ff ff       	callq  805c0e4 <sym_find>
 806b6dd:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 806b6e4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b6eb:	85 c0                	test   %eax,%eax
 806b6ed:	0f 84 b7 01 00 00    	je     806b8aa <decl_initializer_alloc+0x791>
 806b6f3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b6fa:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b701:	00 00 00 
 806b704:	48 01 c8             	add    %rcx,%rax
 806b707:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806b70b:	48 89 ce             	mov    %rcx,%rsi
 806b70e:	48 89 c7             	mov    %rax,%rdi
 806b711:	b8 00 00 00 00       	mov    $0x0,%eax
 806b716:	e8 e5 5d ff ff       	callq  8061500 <is_compatible_types>
 806b71b:	85 c0                	test   %eax,%eax
 806b71d:	0f 84 05 00 00 00    	je     806b728 <decl_initializer_alloc+0x60f>
 806b723:	e9 2f 00 00 00       	jmpq   806b757 <decl_initializer_alloc+0x63e>
 806b728:	b8 00 00 00 00       	mov    $0x0,%eax
 806b72d:	48 89 c6             	mov    %rax,%rsi
 806b730:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806b733:	48 89 c7             	mov    %rax,%rdi
 806b736:	b8 00 00 00 00       	mov    $0x0,%eax
 806b73b:	e8 74 61 fe ff       	callq  80518b4 <get_tok_str>
 806b740:	48 89 c6             	mov    %rax,%rsi
 806b743:	48 8d 05 46 0b 02 00 	lea    0x20b46(%rip),%rax        # 808c290 <L.224>
 806b74a:	48 89 c7             	mov    %rax,%rdi
 806b74d:	b8 00 00 00 00       	mov    $0x0,%eax
 806b752:	e8 70 1f fe ff       	callq  804d6c7 <tcc_error>
 806b757:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b75e:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b765:	00 00 00 
 806b768:	48 01 c8             	add    %rcx,%rax
 806b76b:	8b 08                	mov    (%rax),%ecx
 806b76d:	81 e1 80 00 00 00    	and    $0x80,%ecx
 806b773:	85 c9                	test   %ecx,%ecx
 806b775:	0f 84 1a 01 00 00    	je     806b895 <decl_initializer_alloc+0x77c>
 806b77b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b782:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b789:	00 00 00 
 806b78c:	48 01 c8             	add    %rcx,%rax
 806b78f:	8b 08                	mov    (%rax),%ecx
 806b791:	81 e1 7f ff ff ff    	and    $0xffffff7f,%ecx
 806b797:	89 08                	mov    %ecx,(%rax)
 806b799:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b7a0:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b7a7:	00 00 00 
 806b7aa:	48 01 c8             	add    %rcx,%rax
 806b7ad:	8b 08                	mov    (%rax),%ecx
 806b7af:	83 e1 20             	and    $0x20,%ecx
 806b7b2:	85 c9                	test   %ecx,%ecx
 806b7b4:	0f 84 d6 00 00 00    	je     806b890 <decl_initializer_alloc+0x777>
 806b7ba:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b7c1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b7c8:	00 00 00 
 806b7cb:	48 01 c8             	add    %rcx,%rax
 806b7ce:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b7d5:	00 00 00 
 806b7d8:	48 01 c8             	add    %rcx,%rax
 806b7db:	48 8b 08             	mov    (%rax),%rcx
 806b7de:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806b7e5:	00 00 00 
 806b7e8:	48 01 c1             	add    %rax,%rcx
 806b7eb:	48 8b 01             	mov    (%rcx),%rax
 806b7ee:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806b7f5:	00 00 00 
 806b7f8:	48 39 c8             	cmp    %rcx,%rax
 806b7fb:	0f 8d 8f 00 00 00    	jge    806b890 <decl_initializer_alloc+0x777>
 806b801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b805:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b80c:	00 00 00 
 806b80f:	48 01 c8             	add    %rcx,%rax
 806b812:	48 8b 08             	mov    (%rax),%rcx
 806b815:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806b81c:	00 00 00 
 806b81f:	48 01 c1             	add    %rax,%rcx
 806b822:	48 8b 01             	mov    (%rcx),%rax
 806b825:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806b82c:	00 00 00 
 806b82f:	48 39 c8             	cmp    %rcx,%rax
 806b832:	0f 8c 58 00 00 00    	jl     806b890 <decl_initializer_alloc+0x777>
 806b838:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806b83f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b846:	00 00 00 
 806b849:	48 01 c8             	add    %rcx,%rax
 806b84c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b853:	00 00 00 
 806b856:	48 01 c8             	add    %rcx,%rax
 806b859:	48 8b 08             	mov    (%rax),%rcx
 806b85c:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806b863:	00 00 00 
 806b866:	48 01 c1             	add    %rax,%rcx
 806b869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806b86d:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806b874:	00 00 00 
 806b877:	48 01 d0             	add    %rdx,%rax
 806b87a:	48 8b 10             	mov    (%rax),%rdx
 806b87d:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806b884:	00 00 00 
 806b887:	48 01 c2             	add    %rax,%rdx
 806b88a:	48 8b 02             	mov    (%rdx),%rax
 806b88d:	48 89 01             	mov    %rax,(%rcx)
 806b890:	e9 15 00 00 00       	jmpq   806b8aa <decl_initializer_alloc+0x791>
 806b895:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806b898:	85 c0                	test   %eax,%eax
 806b89a:	0f 84 05 00 00 00    	je     806b8a5 <decl_initializer_alloc+0x78c>
 806b8a0:	e9 05 00 00 00       	jmpq   806b8aa <decl_initializer_alloc+0x791>
 806b8a5:	e9 99 04 00 00       	jmpq   806bd43 <decl_initializer_alloc+0xc2a>
 806b8aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806b8ae:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806b8b5:	00 00 00 
 806b8b8:	48 01 c8             	add    %rcx,%rax
 806b8bb:	48 8b 08             	mov    (%rax),%rcx
 806b8be:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
 806b8c5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b8cc:	85 c0                	test   %eax,%eax
 806b8ce:	0f 84 05 00 00 00    	je     806b8d9 <decl_initializer_alloc+0x7c0>
 806b8d4:	e9 53 00 00 00       	jmpq   806b92c <decl_initializer_alloc+0x813>
 806b8d9:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806b8dc:	85 c0                	test   %eax,%eax
 806b8de:	0f 84 16 00 00 00    	je     806b8fa <decl_initializer_alloc+0x7e1>
 806b8e4:	48 8b 05 8d 26 02 00 	mov    0x2268d(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 806b8eb:	48 8b 00             	mov    (%rax),%rax
 806b8ee:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 806b8f5:	e9 32 00 00 00       	jmpq   806b92c <decl_initializer_alloc+0x813>
 806b8fa:	48 8b 05 8f 25 02 00 	mov    0x2258f(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806b901:	48 8b 00             	mov    (%rax),%rax
 806b904:	48 b9 e0 00 00 00 00 	movabs $0xe0,%rcx
 806b90b:	00 00 00 
 806b90e:	48 01 c8             	add    %rcx,%rax
 806b911:	8b 08                	mov    (%rax),%ecx
 806b913:	85 c9                	test   %ecx,%ecx
 806b915:	0f 84 11 00 00 00    	je     806b92c <decl_initializer_alloc+0x813>
 806b91b:	48 8b 05 5e 26 02 00 	mov    0x2265e(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 806b922:	48 8b 00             	mov    (%rax),%rax
 806b925:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 806b92c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b933:	85 c0                	test   %eax,%eax
 806b935:	0f 84 f5 00 00 00    	je     806ba30 <decl_initializer_alloc+0x917>
 806b93b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b942:	8b 08                	mov    (%rax),%ecx
 806b944:	89 4d c0             	mov    %ecx,-0x40(%rbp)
 806b947:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806b94a:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 806b94d:	48 01 c8             	add    %rcx,%rax
 806b950:	83 e8 01             	sub    $0x1,%eax
 806b953:	b9 00 00 00 00       	mov    $0x0,%ecx
 806b958:	8b 55 c8             	mov    -0x38(%rbp),%edx
 806b95b:	48 29 d1             	sub    %rdx,%rcx
 806b95e:	48 21 c8             	and    %rcx,%rax
 806b961:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806b964:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806b967:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806b96a:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806b96d:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806b970:	48 01 c8             	add    %rcx,%rax
 806b973:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806b976:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b97d:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 806b980:	48 63 c9             	movslq %ecx,%rcx
 806b983:	48 89 ca             	mov    %rcx,%rdx
 806b986:	48 89 10             	mov    %rdx,(%rax)
 806b989:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b990:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806b997:	00 00 00 
 806b99a:	48 01 c8             	add    %rcx,%rax
 806b99d:	8b 08                	mov    (%rax),%ecx
 806b99f:	83 f9 08             	cmp    $0x8,%ecx
 806b9a2:	0f 84 49 00 00 00    	je     806b9f1 <decl_initializer_alloc+0x8d8>
 806b9a8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b9af:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806b9b6:	00 00 00 
 806b9b9:	48 01 c8             	add    %rcx,%rax
 806b9bc:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 806b9bf:	48 63 c9             	movslq %ecx,%rcx
 806b9c2:	48 89 ca             	mov    %rcx,%rdx
 806b9c5:	48 8b 08             	mov    (%rax),%rcx
 806b9c8:	48 39 ca             	cmp    %rcx,%rdx
 806b9cb:	0f 86 20 00 00 00    	jbe    806b9f1 <decl_initializer_alloc+0x8d8>
 806b9d1:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806b9d4:	48 63 c0             	movslq %eax,%rax
 806b9d7:	48 89 c1             	mov    %rax,%rcx
 806b9da:	48 89 ce             	mov    %rcx,%rsi
 806b9dd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b9e4:	48 89 c7             	mov    %rax,%rdi
 806b9e7:	b8 00 00 00 00       	mov    $0x0,%eax
 806b9ec:	e8 50 0d fe ff       	callq  804c741 <section_realloc>
 806b9f1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806b9f8:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 806b9ff:	00 00 00 
 806ba02:	48 01 c8             	add    %rcx,%rax
 806ba05:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 806ba08:	8b 10                	mov    (%rax),%edx
 806ba0a:	39 d1                	cmp    %edx,%ecx
 806ba0c:	0f 8e 19 00 00 00    	jle    806ba2b <decl_initializer_alloc+0x912>
 806ba12:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806ba19:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 806ba20:	00 00 00 
 806ba23:	48 01 c8             	add    %rcx,%rax
 806ba26:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 806ba29:	89 08                	mov    %ecx,(%rax)
 806ba2b:	e9 08 00 00 00       	jmpq   806ba38 <decl_initializer_alloc+0x91f>
 806ba30:	b8 00 00 00 00       	mov    $0x0,%eax
 806ba35:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806ba38:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ba3b:	85 c0                	test   %eax,%eax
 806ba3d:	0f 84 6a 01 00 00    	je     806bbad <decl_initializer_alloc+0xa94>
 806ba43:	8b 45 10             	mov    0x10(%rbp),%eax
 806ba46:	83 f8 30             	cmp    $0x30,%eax
 806ba49:	0f 85 14 00 00 00    	jne    806ba63 <decl_initializer_alloc+0x94a>
 806ba4f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806ba56:	85 c0                	test   %eax,%eax
 806ba58:	0f 84 05 00 00 00    	je     806ba63 <decl_initializer_alloc+0x94a>
 806ba5e:	e9 53 00 00 00       	jmpq   806bab6 <decl_initializer_alloc+0x99d>
 806ba63:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806ba66:	81 c8 00 02 00 00    	or     $0x200,%eax
 806ba6c:	b9 00 00 00 00       	mov    $0x0,%ecx
 806ba71:	49 89 cb             	mov    %rcx,%r11
 806ba74:	49 89 c2             	mov    %rax,%r10
 806ba77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806ba7b:	48 89 c6             	mov    %rax,%rsi
 806ba7e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ba81:	48 89 c7             	mov    %rax,%rdi
 806ba84:	4c 89 d2             	mov    %r10,%rdx
 806ba87:	4c 89 d9             	mov    %r11,%rcx
 806ba8a:	b8 00 00 00 00       	mov    $0x0,%eax
 806ba8f:	e8 c7 06 ff ff       	callq  805c15b <sym_push>
 806ba94:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 806ba9b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806baa2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806baa9:	00 00 00 
 806baac:	48 01 c8             	add    %rcx,%rax
 806baaf:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 806bab3:	48 89 08             	mov    %rcx,(%rax)
 806bab6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806babd:	85 c0                	test   %eax,%eax
 806babf:	0f 84 41 00 00 00    	je     806bb06 <decl_initializer_alloc+0x9ed>
 806bac5:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806bac8:	48 63 c0             	movslq %eax,%rax
 806bacb:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806bace:	48 63 c9             	movslq %ecx,%rcx
 806bad1:	48 89 ca             	mov    %rcx,%rdx
 806bad4:	49 89 d3             	mov    %rdx,%r11
 806bad7:	48 89 c1             	mov    %rax,%rcx
 806bada:	49 89 ca             	mov    %rcx,%r10
 806badd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806bae4:	48 89 c6             	mov    %rax,%rsi
 806bae7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806baee:	48 89 c7             	mov    %rax,%rdi
 806baf1:	4c 89 d2             	mov    %r10,%rdx
 806baf4:	4c 89 d9             	mov    %r11,%rcx
 806baf7:	b8 00 00 00 00       	mov    $0x0,%eax
 806bafc:	e8 b1 12 fe ff       	callq  804cdb2 <put_extern_sym>
 806bb01:	e9 a2 00 00 00       	jmpq   806bba8 <decl_initializer_alloc+0xa8f>
 806bb06:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806bb09:	48 63 c0             	movslq %eax,%rax
 806bb0c:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806bb0f:	48 63 c9             	movslq %ecx,%rcx
 806bb12:	48 89 ca             	mov    %rcx,%rdx
 806bb15:	49 89 d3             	mov    %rdx,%r11
 806bb18:	48 89 c1             	mov    %rax,%rcx
 806bb1b:	49 89 ca             	mov    %rcx,%r10
 806bb1e:	b8 00 00 00 00       	mov    $0x0,%eax
 806bb23:	48 89 c6             	mov    %rax,%rsi
 806bb26:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806bb2d:	48 89 c7             	mov    %rax,%rdi
 806bb30:	4c 89 d2             	mov    %r10,%rdx
 806bb33:	4c 89 d9             	mov    %r11,%rcx
 806bb36:	b8 00 00 00 00       	mov    $0x0,%eax
 806bb3b:	e8 72 12 fe ff       	callq  804cdb2 <put_extern_sym>
 806bb40:	48 8b 05 51 23 02 00 	mov    0x22351(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806bb47:	48 8b 00             	mov    (%rax),%rax
 806bb4a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806bb51:	00 00 00 
 806bb54:	48 01 c8             	add    %rcx,%rax
 806bb57:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 806bb5e:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806bb65:	00 00 00 
 806bb68:	48 01 d1             	add    %rdx,%rcx
 806bb6b:	48 8b 11             	mov    (%rcx),%rdx
 806bb6e:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806bb75:	00 00 00 
 806bb78:	48 0f af d1          	imul   %rcx,%rdx
 806bb7c:	48 8b 08             	mov    (%rax),%rcx
 806bb7f:	48 89 d0             	mov    %rdx,%rax
 806bb82:	48 01 c1             	add    %rax,%rcx
 806bb85:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
 806bb8c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 806bb93:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806bb9a:	00 00 00 
 806bb9d:	48 01 c8             	add    %rcx,%rax
 806bba0:	b9 f2 ff 00 00       	mov    $0xfff2,%ecx
 806bba5:	66 89 08             	mov    %cx,(%rax)
 806bba8:	e9 92 00 00 00       	jmpq   806bc3f <decl_initializer_alloc+0xb26>
 806bbad:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806bbb0:	48 63 c0             	movslq %eax,%rax
 806bbb3:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806bbb6:	48 63 c9             	movslq %ecx,%rcx
 806bbb9:	48 89 ca             	mov    %rcx,%rdx
 806bbbc:	49 89 d3             	mov    %rdx,%r11
 806bbbf:	48 89 c1             	mov    %rax,%rcx
 806bbc2:	49 89 ca             	mov    %rcx,%r10
 806bbc5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806bbcc:	48 89 c6             	mov    %rax,%rsi
 806bbcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806bbd3:	48 89 c7             	mov    %rax,%rdi
 806bbd6:	4c 89 d2             	mov    %r10,%rdx
 806bbd9:	4c 89 d9             	mov    %r11,%rcx
 806bbdc:	b8 00 00 00 00       	mov    $0x0,%eax
 806bbe1:	e8 34 0d ff ff       	callq  805c91a <get_sym_ref>
 806bbe6:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 806bbed:	b8 00 00 00 00       	mov    $0x0,%eax
 806bbf2:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
 806bbf8:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 806bbff:	49 89 c2             	mov    %rax,%r10
 806bc02:	b8 30 02 00 00       	mov    $0x230,%eax
 806bc07:	48 89 c6             	mov    %rax,%rsi
 806bc0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806bc0e:	48 89 c7             	mov    %rax,%rdi
 806bc11:	4c 89 d2             	mov    %r10,%rdx
 806bc14:	b8 00 00 00 00       	mov    $0x0,%eax
 806bc19:	e8 0b 0a ff ff       	callq  805c629 <vsetc>
 806bc1e:	48 8b 05 fb 22 02 00 	mov    0x222fb(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 806bc25:	48 8b 00             	mov    (%rax),%rax
 806bc28:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 806bc2f:	00 00 00 
 806bc32:	48 01 c8             	add    %rcx,%rax
 806bc35:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 806bc3c:	48 89 08             	mov    %rcx,(%rax)
 806bc3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806bc43:	8b 08                	mov    (%rax),%ecx
 806bc45:	81 e1 00 00 01 00    	and    $0x10000,%ecx
 806bc4b:	85 c9                	test   %ecx,%ecx
 806bc4d:	0f 84 14 00 00 00    	je     806bc67 <decl_initializer_alloc+0xb4e>
 806bc53:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806bc5a:	48 89 c7             	mov    %rax,%rdi
 806bc5d:	b8 00 00 00 00       	mov    $0x0,%eax
 806bc62:	e8 c0 08 ff ff       	callq  805c527 <weaken_symbol>
 806bc67:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806bc6a:	85 c0                	test   %eax,%eax
 806bc6c:	0f 85 19 00 00 00    	jne    806bc8b <decl_initializer_alloc+0xb72>
 806bc72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806bc76:	8b 08                	mov    (%rax),%ecx
 806bc78:	81 e1 00 00 02 00    	and    $0x20000,%ecx
 806bc7e:	85 c9                	test   %ecx,%ecx
 806bc80:	0f 85 05 00 00 00    	jne    806bc8b <decl_initializer_alloc+0xb72>
 806bc86:	e9 b8 00 00 00       	jmpq   806bd43 <decl_initializer_alloc+0xc2a>
 806bc8b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806bc8e:	48 63 c0             	movslq %eax,%rax
 806bc91:	b9 00 00 00 00       	mov    $0x0,%ecx
 806bc96:	49 89 c8             	mov    %rcx,%r8
 806bc99:	b9 01 00 00 00       	mov    $0x1,%ecx
 806bc9e:	49 89 cb             	mov    %rcx,%r11
 806bca1:	48 89 c1             	mov    %rax,%rcx
 806bca4:	49 89 ca             	mov    %rcx,%r10
 806bca7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806bcae:	48 89 c6             	mov    %rax,%rsi
 806bcb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806bcb5:	48 89 c7             	mov    %rax,%rdi
 806bcb8:	4c 89 d2             	mov    %r10,%rdx
 806bcbb:	4c 89 d9             	mov    %r11,%rcx
 806bcbe:	b8 00 00 00 00       	mov    $0x0,%eax
 806bcc3:	e8 e3 e5 ff ff       	callq  806a2ab <decl_initializer>
 806bcc8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806bccc:	85 c0                	test   %eax,%eax
 806bcce:	0f 84 22 00 00 00    	je     806bcf6 <decl_initializer_alloc+0xbdd>
 806bcd4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806bcd8:	48 89 c7             	mov    %rax,%rdi
 806bcdb:	b8 00 00 00 00       	mov    $0x0,%eax
 806bce0:	e8 d2 77 fe ff       	callq  80534b7 <tok_str_free>
 806bce5:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 806bce9:	48 89 c7             	mov    %rax,%rdi
 806bcec:	b8 00 00 00 00       	mov    $0x0,%eax
 806bcf1:	e8 ba 76 fe ff       	callq  80533b0 <restore_parse_state>
 806bcf6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806bcfd:	85 c0                	test   %eax,%eax
 806bcff:	0f 84 3e 00 00 00    	je     806bd43 <decl_initializer_alloc+0xc2a>
 806bd05:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806bd0c:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806bd13:	00 00 00 
 806bd16:	48 01 c8             	add    %rcx,%rax
 806bd19:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806bd20:	00 00 00 
 806bd23:	48 01 c8             	add    %rcx,%rax
 806bd26:	48 8b 08             	mov    (%rax),%rcx
 806bd29:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806bd30:	00 00 00 
 806bd33:	48 01 c1             	add    %rax,%rcx
 806bd36:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rax
 806bd3d:	ff ff ff 
 806bd40:	48 89 01             	mov    %rax,(%rcx)
 806bd43:	c9                   	leaveq 
 806bd44:	c3                   	retq   

000000000806bd45 <put_func_debug>:
 806bd45:	55                   	push   %rbp
 806bd46:	48 89 e5             	mov    %rsp,%rbp
 806bd49:	48 81 ec 10 02 00 00 	sub    $0x210,%rsp
 806bd50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806bd54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806bd58:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806bd5f:	00 00 00 
 806bd62:	48 01 c8             	add    %rcx,%rax
 806bd65:	8b 08                	mov    (%rax),%ecx
 806bd67:	81 e1 00 01 00 00    	and    $0x100,%ecx
 806bd6d:	85 c9                	test   %ecx,%ecx
 806bd6f:	0f 84 05 00 00 00    	je     806bd7a <put_func_debug+0x35>
 806bd75:	e9 0a 00 00 00       	jmpq   806bd84 <put_func_debug+0x3f>
 806bd7a:	b8 46 00 00 00       	mov    $0x46,%eax
 806bd7f:	e9 05 00 00 00       	jmpq   806bd89 <put_func_debug+0x44>
 806bd84:	b8 66 00 00 00       	mov    $0x66,%eax
 806bd89:	49 89 c0             	mov    %rax,%r8
 806bd8c:	48 8b 05 2d 21 02 00 	mov    0x2212d(%rip),%rax        # 808dec0 <_GLOBAL_OFFSET_TABLE_+0x240>
 806bd93:	48 8b 00             	mov    (%rax),%rax
 806bd96:	49 89 c3             	mov    %rax,%r11
 806bd99:	48 8d 05 1c 05 02 00 	lea    0x2051c(%rip),%rax        # 808c2bc <L.225>
 806bda0:	49 89 c2             	mov    %rax,%r10
 806bda3:	b8 00 02 00 00       	mov    $0x200,%eax
 806bda8:	48 89 c6             	mov    %rax,%rsi
 806bdab:	48 8d 85 f8 fd ff ff 	lea    -0x208(%rbp),%rax
 806bdb2:	48 89 c7             	mov    %rax,%rdi
 806bdb5:	4c 89 d2             	mov    %r10,%rdx
 806bdb8:	4c 89 d9             	mov    %r11,%rcx
 806bdbb:	b8 00 00 00 00       	mov    $0x0,%eax
 806bdc0:	e8 7b be 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 806bdc5:	48 8b 05 d4 20 02 00 	mov    0x220d4(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806bdcc:	48 8b 00             	mov    (%rax),%rax
 806bdcf:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806bdd6:	00 00 00 
 806bdd9:	48 01 c8             	add    %rcx,%rax
 806bddc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806bde0:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806bde7:	00 00 00 
 806bdea:	48 01 d1             	add    %rdx,%rcx
 806bded:	48 8b 11             	mov    (%rcx),%rdx
 806bdf0:	50                   	push   %rax
 806bdf1:	52                   	push   %rdx
 806bdf2:	48 8b 0d bf 20 02 00 	mov    0x220bf(%rip),%rcx        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806bdf9:	48 8b 09             	mov    (%rcx),%rcx
 806bdfc:	49 89 c9             	mov    %rcx,%r9
 806bdff:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806be06:	00 00 00 
 806be09:	49 89 c8             	mov    %rcx,%r8
 806be0c:	8b 08                	mov    (%rax),%ecx
 806be0e:	49 89 cb             	mov    %rcx,%r11
 806be11:	b8 00 00 00 00       	mov    $0x0,%eax
 806be16:	49 89 c2             	mov    %rax,%r10
 806be19:	b8 24 00 00 00       	mov    $0x24,%eax
 806be1e:	48 89 c6             	mov    %rax,%rsi
 806be21:	48 8d 85 f8 fd ff ff 	lea    -0x208(%rbp),%rax
 806be28:	48 89 c7             	mov    %rax,%rdi
 806be2b:	4c 89 d2             	mov    %r10,%rdx
 806be2e:	4c 89 d9             	mov    %r11,%rcx
 806be31:	b8 00 00 00 00       	mov    $0x0,%eax
 806be36:	e8 e3 2a 00 00       	callq  806e91e <put_stabs_r>
 806be3b:	48 83 c4 10          	add    $0x10,%rsp
 806be3f:	48 8b 05 5a 20 02 00 	mov    0x2205a(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806be46:	48 8b 00             	mov    (%rax),%rax
 806be49:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806be50:	00 00 00 
 806be53:	48 01 c8             	add    %rcx,%rax
 806be56:	b9 00 00 00 00       	mov    $0x0,%ecx
 806be5b:	49 89 cb             	mov    %rcx,%r11
 806be5e:	8b 08                	mov    (%rax),%ecx
 806be60:	49 89 ca             	mov    %rcx,%r10
 806be63:	b8 00 00 00 00       	mov    $0x0,%eax
 806be68:	48 89 c6             	mov    %rax,%rsi
 806be6b:	b8 44 00 00 00       	mov    $0x44,%eax
 806be70:	48 89 c7             	mov    %rax,%rdi
 806be73:	4c 89 d2             	mov    %r10,%rdx
 806be76:	4c 89 d9             	mov    %r11,%rcx
 806be79:	b8 00 00 00 00       	mov    $0x0,%eax
 806be7e:	e8 48 2b 00 00       	callq  806e9cb <put_stabn>
 806be83:	b8 00 00 00 00       	mov    $0x0,%eax
 806be88:	4c 8b 1d 99 21 02 00 	mov    0x22199(%rip),%r11        # 808e028 <_GLOBAL_OFFSET_TABLE_+0x3a8>
 806be8f:	41 89 03             	mov    %eax,(%r11)
 806be92:	b8 00 00 00 00       	mov    $0x0,%eax
 806be97:	4c 8b 1d 82 21 02 00 	mov    0x22182(%rip),%r11        # 808e020 <_GLOBAL_OFFSET_TABLE_+0x3a0>
 806be9e:	41 89 03             	mov    %eax,(%r11)
 806bea1:	c9                   	leaveq 
 806bea2:	c3                   	retq   

000000000806bea3 <func_decl_list>:
 806bea3:	55                   	push   %rbp
 806bea4:	48 89 e5             	mov    %rsp,%rbp
 806bea7:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 806beae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806beb2:	48 8b 05 6f 20 02 00 	mov    0x2206f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806beb9:	8b 00                	mov    (%rax),%eax
 806bebb:	83 f8 7b             	cmp    $0x7b,%eax
 806bebe:	0f 84 96 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806bec4:	48 8b 05 5d 20 02 00 	mov    0x2205d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806becb:	8b 00                	mov    (%rax),%eax
 806becd:	83 f8 3b             	cmp    $0x3b,%eax
 806bed0:	0f 84 84 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806bed6:	48 8b 05 4b 20 02 00 	mov    0x2204b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806bedd:	8b 00                	mov    (%rax),%eax
 806bedf:	83 f8 2c             	cmp    $0x2c,%eax
 806bee2:	0f 84 72 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806bee8:	48 8b 05 39 20 02 00 	mov    0x22039(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806beef:	8b 00                	mov    (%rax),%eax
 806bef1:	83 f8 ff             	cmp    $0xffffffff,%eax
 806bef4:	0f 84 60 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806befa:	48 8b 05 27 20 02 00 	mov    0x22027(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806bf01:	8b 00                	mov    (%rax),%eax
 806bf03:	81 f8 36 01 00 00    	cmp    $0x136,%eax
 806bf09:	0f 84 4b 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806bf0f:	48 8b 05 12 20 02 00 	mov    0x22012(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806bf16:	8b 00                	mov    (%rax),%eax
 806bf18:	81 f8 37 01 00 00    	cmp    $0x137,%eax
 806bf1e:	0f 84 36 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806bf24:	48 8b 05 fd 1f 02 00 	mov    0x21ffd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806bf2b:	8b 00                	mov    (%rax),%eax
 806bf2d:	81 f8 38 01 00 00    	cmp    $0x138,%eax
 806bf33:	0f 84 21 02 00 00    	je     806c15a <func_decl_list+0x2b7>
 806bf39:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 806bf3d:	48 89 c6             	mov    %rax,%rsi
 806bf40:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 806bf44:	48 89 c7             	mov    %rax,%rdi
 806bf47:	b8 00 00 00 00       	mov    $0x0,%eax
 806bf4c:	e8 ce 79 ff ff       	callq  806391f <parse_btype>
 806bf51:	85 c0                	test   %eax,%eax
 806bf53:	0f 84 05 00 00 00    	je     806bf5e <func_decl_list+0xbb>
 806bf59:	e9 14 00 00 00       	jmpq   806bf72 <func_decl_list+0xcf>
 806bf5e:	48 8d 05 5e 03 02 00 	lea    0x2035e(%rip),%rax        # 808c2c3 <L.226>
 806bf65:	48 89 c7             	mov    %rax,%rdi
 806bf68:	b8 00 00 00 00       	mov    $0x0,%eax
 806bf6d:	e8 e0 51 fe ff       	callq  8051152 <expect>
 806bf72:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806bf75:	83 e0 0f             	and    $0xf,%eax
 806bf78:	83 f8 05             	cmp    $0x5,%eax
 806bf7b:	0f 84 14 00 00 00    	je     806bf95 <func_decl_list+0xf2>
 806bf81:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806bf84:	83 e0 0f             	and    $0xf,%eax
 806bf87:	83 f8 07             	cmp    $0x7,%eax
 806bf8a:	0f 84 05 00 00 00    	je     806bf95 <func_decl_list+0xf2>
 806bf90:	e9 17 00 00 00       	jmpq   806bfac <func_decl_list+0x109>
 806bf95:	48 8b 05 8c 1f 02 00 	mov    0x21f8c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806bf9c:	8b 00                	mov    (%rax),%eax
 806bf9e:	83 f8 3b             	cmp    $0x3b,%eax
 806bfa1:	0f 85 05 00 00 00    	jne    806bfac <func_decl_list+0x109>
 806bfa7:	e9 97 01 00 00       	jmpq   806c143 <func_decl_list+0x2a0>
 806bfac:	b8 10 00 00 00       	mov    $0x10,%eax
 806bfb1:	49 89 c2             	mov    %rax,%r10
 806bfb4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 806bfb8:	48 89 c6             	mov    %rax,%rsi
 806bfbb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 806bfbf:	48 89 c7             	mov    %rax,%rdi
 806bfc2:	4c 89 d2             	mov    %r10,%rdx
 806bfc5:	b8 00 00 00 00       	mov    $0x0,%eax
 806bfca:	e8 a1 ac 01 00       	callq  8086c70 <memcpy>
 806bfcf:	b8 02 00 00 00       	mov    $0x2,%eax
 806bfd4:	49 89 c3             	mov    %rax,%r11
 806bfd7:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
 806bfdb:	49 89 c2             	mov    %rax,%r10
 806bfde:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 806bfe2:	48 89 c6             	mov    %rax,%rsi
 806bfe5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 806bfe9:	48 89 c7             	mov    %rax,%rdi
 806bfec:	4c 89 d2             	mov    %r10,%rdx
 806bfef:	4c 89 d9             	mov    %r11,%rcx
 806bff2:	b8 00 00 00 00       	mov    $0x0,%eax
 806bff7:	e8 48 89 ff ff       	callq  8064944 <type_decl>
 806bffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c000:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806c007:	00 00 00 
 806c00a:	48 01 c8             	add    %rcx,%rax
 806c00d:	48 8b 08             	mov    (%rax),%rcx
 806c010:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 806c014:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806c018:	48 89 c1             	mov    %rax,%rcx
 806c01b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806c022:	00 00 00 
 806c025:	48 39 c1             	cmp    %rax,%rcx
 806c028:	0f 84 36 00 00 00    	je     806c064 <func_decl_list+0x1c1>
 806c02e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806c032:	8b 08                	mov    (%rax),%ecx
 806c034:	81 e1 ff ff ff df    	and    $0xdfffffff,%ecx
 806c03a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806c03d:	39 c1                	cmp    %eax,%ecx
 806c03f:	0f 85 05 00 00 00    	jne    806c04a <func_decl_list+0x1a7>
 806c045:	e9 49 00 00 00       	jmpq   806c093 <func_decl_list+0x1f0>
 806c04a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806c04e:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806c055:	00 00 00 
 806c058:	48 01 c8             	add    %rcx,%rax
 806c05b:	48 8b 08             	mov    (%rax),%rcx
 806c05e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 806c062:	eb b0                	jmp    806c014 <func_decl_list+0x171>
 806c064:	b8 00 00 00 00       	mov    $0x0,%eax
 806c069:	48 89 c6             	mov    %rax,%rsi
 806c06c:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806c06f:	48 89 c7             	mov    %rax,%rdi
 806c072:	b8 00 00 00 00       	mov    $0x0,%eax
 806c077:	e8 38 58 fe ff       	callq  80518b4 <get_tok_str>
 806c07c:	48 89 c6             	mov    %rax,%rsi
 806c07f:	48 8d 05 4e 02 02 00 	lea    0x2024e(%rip),%rax        # 808c2d4 <L.227>
 806c086:	48 89 c7             	mov    %rax,%rdi
 806c089:	b8 00 00 00 00       	mov    $0x0,%eax
 806c08e:	e8 34 16 fe ff       	callq  804d6c7 <tcc_error>
 806c093:	8b 45 b0             	mov    -0x50(%rbp),%eax
 806c096:	81 e0 80 c7 01 00    	and    $0x1c780,%eax
 806c09c:	85 c0                	test   %eax,%eax
 806c09e:	0f 84 2f 00 00 00    	je     806c0d3 <func_decl_list+0x230>
 806c0a4:	b8 00 00 00 00       	mov    $0x0,%eax
 806c0a9:	48 89 c6             	mov    %rax,%rsi
 806c0ac:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806c0af:	48 89 c7             	mov    %rax,%rdi
 806c0b2:	b8 00 00 00 00       	mov    $0x0,%eax
 806c0b7:	e8 f8 57 fe ff       	callq  80518b4 <get_tok_str>
 806c0bc:	48 89 c6             	mov    %rax,%rsi
 806c0bf:	48 8d 05 43 02 02 00 	lea    0x20243(%rip),%rax        # 808c309 <L.228>
 806c0c6:	48 89 c7             	mov    %rax,%rdi
 806c0c9:	b8 00 00 00 00       	mov    $0x0,%eax
 806c0ce:	e8 f4 15 fe ff       	callq  804d6c7 <tcc_error>
 806c0d3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 806c0d7:	48 89 c7             	mov    %rax,%rdi
 806c0da:	b8 00 00 00 00       	mov    $0x0,%eax
 806c0df:	e8 9a 13 00 00       	callq  806d47e <convert_parameter_type>
 806c0e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806c0e8:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806c0ef:	00 00 00 
 806c0f2:	48 01 c8             	add    %rcx,%rax
 806c0f5:	b9 10 00 00 00       	mov    $0x10,%ecx
 806c0fa:	49 89 ca             	mov    %rcx,%r10
 806c0fd:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
 806c101:	48 89 ce             	mov    %rcx,%rsi
 806c104:	48 89 c7             	mov    %rax,%rdi
 806c107:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 806c10b:	4c 89 d2             	mov    %r10,%rdx
 806c10e:	b8 00 00 00 00       	mov    $0x0,%eax
 806c113:	e8 58 ab 01 00       	callq  8086c70 <memcpy>
 806c118:	48 8b 05 09 1e 02 00 	mov    0x21e09(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c11f:	8b 00                	mov    (%rax),%eax
 806c121:	83 f8 2c             	cmp    $0x2c,%eax
 806c124:	0f 85 0f 00 00 00    	jne    806c139 <func_decl_list+0x296>
 806c12a:	b8 00 00 00 00       	mov    $0x0,%eax
 806c12f:	e8 96 c5 fe ff       	callq  80586ca <next>
 806c134:	e9 05 00 00 00       	jmpq   806c13e <func_decl_list+0x29b>
 806c139:	e9 05 00 00 00       	jmpq   806c143 <func_decl_list+0x2a0>
 806c13e:	e9 69 fe ff ff       	jmpq   806bfac <func_decl_list+0x109>
 806c143:	b8 3b 00 00 00       	mov    $0x3b,%eax
 806c148:	48 89 c7             	mov    %rax,%rdi
 806c14b:	b8 00 00 00 00       	mov    $0x0,%eax
 806c150:	e8 8e 4f fe ff       	callq  80510e3 <skip>
 806c155:	e9 58 fd ff ff       	jmpq   806beb2 <func_decl_list+0xf>
 806c15a:	c9                   	leaveq 
 806c15b:	c3                   	retq   

000000000806c15c <gen_function>:
 806c15c:	55                   	push   %rbp
 806c15d:	48 89 e5             	mov    %rsp,%rbp
 806c160:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806c167:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806c16b:	48 8b 05 8e 1d 02 00 	mov    0x21d8e(%rip),%rax        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 806c172:	8b 00                	mov    (%rax),%eax
 806c174:	89 45 f4             	mov    %eax,-0xc(%rbp)
 806c177:	b8 00 00 00 00       	mov    $0x0,%eax
 806c17c:	4c 8b 1d 7d 1d 02 00 	mov    0x21d7d(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 806c183:	41 89 03             	mov    %eax,(%r11)
 806c186:	48 8b 05 2b 1d 02 00 	mov    0x21d2b(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806c18d:	48 8b 00             	mov    (%rax),%rax
 806c190:	8b 08                	mov    (%rax),%ecx
 806c192:	4c 8b 1d 97 1e 02 00 	mov    0x21e97(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c199:	41 89 0b             	mov    %ecx,(%r11)
 806c19c:	48 8b 05 8d 1e 02 00 	mov    0x21e8d(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c1a3:	8b 00                	mov    (%rax),%eax
 806c1a5:	48 63 c0             	movslq %eax,%rax
 806c1a8:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806c1af:	00 00 00 
 806c1b2:	49 89 cb             	mov    %rcx,%r11
 806c1b5:	48 89 c1             	mov    %rax,%rcx
 806c1b8:	49 89 ca             	mov    %rcx,%r10
 806c1bb:	48 8b 05 f6 1c 02 00 	mov    0x21cf6(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806c1c2:	48 8b 00             	mov    (%rax),%rax
 806c1c5:	48 89 c6             	mov    %rax,%rsi
 806c1c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c1cc:	48 89 c7             	mov    %rax,%rdi
 806c1cf:	4c 89 d2             	mov    %r10,%rdx
 806c1d2:	4c 89 d9             	mov    %r11,%rcx
 806c1d5:	b8 00 00 00 00       	mov    $0x0,%eax
 806c1da:	e8 d3 0b fe ff       	callq  804cdb2 <put_extern_sym>
 806c1df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c1e3:	b9 00 00 00 00       	mov    $0x0,%ecx
 806c1e8:	48 89 ce             	mov    %rcx,%rsi
 806c1eb:	8b 08                	mov    (%rax),%ecx
 806c1ed:	48 89 cf             	mov    %rcx,%rdi
 806c1f0:	b8 00 00 00 00       	mov    $0x0,%eax
 806c1f5:	e8 ba 56 fe ff       	callq  80518b4 <get_tok_str>
 806c1fa:	4c 8b 1d bf 1c 02 00 	mov    0x21cbf(%rip),%r11        # 808dec0 <_GLOBAL_OFFSET_TABLE_+0x240>
 806c201:	49 89 03             	mov    %rax,(%r11)
 806c204:	48 8b 05 25 1e 02 00 	mov    0x21e25(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c20b:	8b 00                	mov    (%rax),%eax
 806c20d:	4c 8b 1d 24 1e 02 00 	mov    0x21e24(%rip),%r11        # 808e038 <_GLOBAL_OFFSET_TABLE_+0x3b8>
 806c214:	41 89 03             	mov    %eax,(%r11)
 806c217:	48 8b 05 72 1c 02 00 	mov    0x21c72(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c21e:	48 8b 00             	mov    (%rax),%rax
 806c221:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 806c228:	00 00 00 
 806c22b:	48 01 c8             	add    %rcx,%rax
 806c22e:	8b 08                	mov    (%rax),%ecx
 806c230:	85 c9                	test   %ecx,%ecx
 806c232:	0f 84 11 00 00 00    	je     806c249 <gen_function+0xed>
 806c238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c23c:	48 89 c7             	mov    %rax,%rdi
 806c23f:	b8 00 00 00 00       	mov    $0x0,%eax
 806c244:	e8 fc fa ff ff       	callq  806bd45 <put_func_debug>
 806c249:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806c250:	00 00 00 
 806c253:	49 89 c3             	mov    %rax,%r11
 806c256:	b8 00 00 00 00       	mov    $0x0,%eax
 806c25b:	49 89 c2             	mov    %rax,%r10
 806c25e:	b8 00 00 00 20       	mov    $0x20000000,%eax
 806c263:	48 89 c6             	mov    %rax,%rsi
 806c266:	48 8b 05 cb 1c 02 00 	mov    0x21ccb(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 806c26d:	48 89 c7             	mov    %rax,%rdi
 806c270:	4c 89 d2             	mov    %r10,%rdx
 806c273:	4c 89 d9             	mov    %r11,%rcx
 806c276:	b8 00 00 00 00       	mov    $0x0,%eax
 806c27b:	e8 bd fb fe ff       	callq  805be3d <sym_push2>
 806c280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c284:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806c28b:	00 00 00 
 806c28e:	48 01 c8             	add    %rcx,%rax
 806c291:	48 89 c7             	mov    %rax,%rdi
 806c294:	b8 00 00 00 00       	mov    $0x0,%eax
 806c299:	e8 50 3e 01 00       	callq  80800ee <gfunc_prolog>
 806c29e:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2a3:	4c 8b 1d ae 1d 02 00 	mov    0x21dae(%rip),%r11        # 808e058 <_GLOBAL_OFFSET_TABLE_+0x3d8>
 806c2aa:	41 89 03             	mov    %eax,(%r11)
 806c2ad:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2b2:	49 89 c1             	mov    %rax,%r9
 806c2b5:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2ba:	49 89 c0             	mov    %rax,%r8
 806c2bd:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2c2:	49 89 c3             	mov    %rax,%r11
 806c2c5:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2ca:	49 89 c2             	mov    %rax,%r10
 806c2cd:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2d2:	48 89 c6             	mov    %rax,%rsi
 806c2d5:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2da:	48 89 c7             	mov    %rax,%rdi
 806c2dd:	4c 89 d2             	mov    %r10,%rdx
 806c2e0:	4c 89 d9             	mov    %r11,%rcx
 806c2e3:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2e8:	e8 54 bc ff ff       	callq  8067f41 <block>
 806c2ed:	48 8b 05 64 1d 02 00 	mov    0x21d64(%rip),%rax        # 808e058 <_GLOBAL_OFFSET_TABLE_+0x3d8>
 806c2f4:	8b 00                	mov    (%rax),%eax
 806c2f6:	48 89 c7             	mov    %rax,%rdi
 806c2f9:	b8 00 00 00 00       	mov    $0x0,%eax
 806c2fe:	e8 08 1c 01 00       	callq  807df0b <gsym>
 806c303:	b8 00 00 00 00       	mov    $0x0,%eax
 806c308:	e8 1f 44 01 00       	callq  808072c <gfunc_epilog>
 806c30d:	48 8b 05 a4 1b 02 00 	mov    0x21ba4(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806c314:	48 8b 00             	mov    (%rax),%rax
 806c317:	48 8b 0d 12 1d 02 00 	mov    0x21d12(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c31e:	8b 09                	mov    (%rcx),%ecx
 806c320:	48 63 c9             	movslq %ecx,%rcx
 806c323:	48 89 ca             	mov    %rcx,%rdx
 806c326:	48 89 10             	mov    %rdx,(%rax)
 806c329:	b8 00 00 00 00       	mov    $0x0,%eax
 806c32e:	48 89 c6             	mov    %rax,%rsi
 806c331:	48 8b 05 80 1c 02 00 	mov    0x21c80(%rip),%rax        # 808dfb8 <_GLOBAL_OFFSET_TABLE_+0x338>
 806c338:	48 89 c7             	mov    %rax,%rdi
 806c33b:	b8 00 00 00 00       	mov    $0x0,%eax
 806c340:	e8 f0 7d fe ff       	callq  8054135 <label_pop>
 806c345:	b8 00 00 00 00       	mov    $0x0,%eax
 806c34a:	4c 8b 1d 9f 1c 02 00 	mov    0x21c9f(%rip),%r11        # 808dff0 <_GLOBAL_OFFSET_TABLE_+0x370>
 806c351:	49 89 03             	mov    %rax,(%r11)
 806c354:	b8 00 00 00 00       	mov    $0x0,%eax
 806c359:	48 89 c6             	mov    %rax,%rsi
 806c35c:	48 8b 05 d5 1b 02 00 	mov    0x21bd5(%rip),%rax        # 808df38 <_GLOBAL_OFFSET_TABLE_+0x2b8>
 806c363:	48 89 c7             	mov    %rax,%rdi
 806c366:	b8 00 00 00 00       	mov    $0x0,%eax
 806c36b:	e8 80 00 ff ff       	callq  805c3f0 <sym_pop>
 806c370:	48 8b 05 21 1b 02 00 	mov    0x21b21(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806c377:	48 8b 00             	mov    (%rax),%rax
 806c37a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806c381:	00 00 00 
 806c384:	48 01 c8             	add    %rcx,%rax
 806c387:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806c38b:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806c392:	00 00 00 
 806c395:	48 01 d1             	add    %rdx,%rcx
 806c398:	48 8b 11             	mov    (%rcx),%rdx
 806c39b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806c3a2:	00 00 00 
 806c3a5:	48 0f af d1          	imul   %rcx,%rdx
 806c3a9:	48 8b 08             	mov    (%rax),%rcx
 806c3ac:	48 89 d0             	mov    %rdx,%rax
 806c3af:	48 01 c1             	add    %rax,%rcx
 806c3b2:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 806c3b9:	00 00 00 
 806c3bc:	48 01 c1             	add    %rax,%rcx
 806c3bf:	48 8b 05 6a 1c 02 00 	mov    0x21c6a(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c3c6:	8b 00                	mov    (%rax),%eax
 806c3c8:	48 8b 15 69 1c 02 00 	mov    0x21c69(%rip),%rdx        # 808e038 <_GLOBAL_OFFSET_TABLE_+0x3b8>
 806c3cf:	8b 12                	mov    (%rdx),%edx
 806c3d1:	48 29 d0             	sub    %rdx,%rax
 806c3d4:	48 63 c0             	movslq %eax,%rax
 806c3d7:	48 89 c2             	mov    %rax,%rdx
 806c3da:	48 89 11             	mov    %rdx,(%rcx)
 806c3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c3e1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806c3e8:	00 00 00 
 806c3eb:	48 01 c8             	add    %rcx,%rax
 806c3ee:	8b 08                	mov    (%rax),%ecx
 806c3f0:	81 e1 00 00 01 00    	and    $0x10000,%ecx
 806c3f6:	85 c9                	test   %ecx,%ecx
 806c3f8:	0f 84 11 00 00 00    	je     806c40f <gen_function+0x2b3>
 806c3fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c402:	48 89 c7             	mov    %rax,%rdi
 806c405:	b8 00 00 00 00       	mov    $0x0,%eax
 806c40a:	e8 18 01 ff ff       	callq  805c527 <weaken_symbol>
 806c40f:	48 8b 05 7a 1a 02 00 	mov    0x21a7a(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c416:	48 8b 00             	mov    (%rax),%rax
 806c419:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 806c420:	00 00 00 
 806c423:	48 01 c8             	add    %rcx,%rax
 806c426:	8b 08                	mov    (%rax),%ecx
 806c428:	85 c9                	test   %ecx,%ecx
 806c42a:	0f 84 40 00 00 00    	je     806c470 <gen_function+0x314>
 806c430:	48 8b 05 f9 1b 02 00 	mov    0x21bf9(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c437:	8b 00                	mov    (%rax),%eax
 806c439:	48 8b 0d f8 1b 02 00 	mov    0x21bf8(%rip),%rcx        # 808e038 <_GLOBAL_OFFSET_TABLE_+0x3b8>
 806c440:	8b 09                	mov    (%rcx),%ecx
 806c442:	48 29 c8             	sub    %rcx,%rax
 806c445:	49 89 c3             	mov    %rax,%r11
 806c448:	b8 00 00 00 00       	mov    $0x0,%eax
 806c44d:	49 89 c2             	mov    %rax,%r10
 806c450:	b8 00 00 00 00       	mov    $0x0,%eax
 806c455:	48 89 c6             	mov    %rax,%rsi
 806c458:	b8 24 00 00 00       	mov    $0x24,%eax
 806c45d:	48 89 c7             	mov    %rax,%rdi
 806c460:	4c 89 d2             	mov    %r10,%rdx
 806c463:	4c 89 d9             	mov    %r11,%rcx
 806c466:	b8 00 00 00 00       	mov    $0x0,%eax
 806c46b:	e8 5b 25 00 00       	callq  806e9cb <put_stabn>
 806c470:	b8 00 00 00 00       	mov    $0x0,%eax
 806c475:	4c 8b 1d 3c 1a 02 00 	mov    0x21a3c(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806c47c:	49 89 03             	mov    %rax,(%r11)
 806c47f:	48 8d 05 a4 fe 01 00 	lea    0x1fea4(%rip),%rax        # 808c32a <L.229>
 806c486:	4c 8b 1d 33 1a 02 00 	mov    0x21a33(%rip),%r11        # 808dec0 <_GLOBAL_OFFSET_TABLE_+0x240>
 806c48d:	49 89 03             	mov    %rax,(%r11)
 806c490:	b8 03 00 00 00       	mov    $0x3,%eax
 806c495:	4c 8b 1d ac 1b 02 00 	mov    0x21bac(%rip),%r11        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 806c49c:	41 89 03             	mov    %eax,(%r11)
 806c49f:	b8 00 00 00 00       	mov    $0x0,%eax
 806c4a4:	4c 8b 1d 85 1b 02 00 	mov    0x21b85(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 806c4ab:	41 89 03             	mov    %eax,(%r11)
 806c4ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
 806c4b1:	4c 8b 1d 48 1a 02 00 	mov    0x21a48(%rip),%r11        # 808df00 <_GLOBAL_OFFSET_TABLE_+0x280>
 806c4b8:	41 89 03             	mov    %eax,(%r11)
 806c4bb:	c9                   	leaveq 
 806c4bc:	c3                   	retq   

000000000806c4bd <gen_inline_functions>:
 806c4bd:	55                   	push   %rbp
 806c4be:	48 89 e5             	mov    %rsp,%rbp
 806c4c1:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806c4c8:	b8 00 00 00 00       	mov    $0x0,%eax
 806c4cd:	89 45 ec             	mov    %eax,-0x14(%rbp)
 806c4d0:	b8 00 00 00 00       	mov    $0x0,%eax
 806c4d5:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806c4d8:	48 8b 05 b1 19 02 00 	mov    0x219b1(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c4df:	48 8b 00             	mov    (%rax),%rax
 806c4e2:	48 b9 98 0c 00 00 00 	movabs $0xc98,%rcx
 806c4e9:	00 00 00 
 806c4ec:	48 01 c8             	add    %rcx,%rax
 806c4ef:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 806c4f2:	8b 10                	mov    (%rax),%edx
 806c4f4:	39 d1                	cmp    %edx,%ecx
 806c4f6:	0f 8d 99 01 00 00    	jge    806c695 <gen_inline_functions+0x1d8>
 806c4fc:	e9 0b 00 00 00       	jmpq   806c50c <gen_inline_functions+0x4f>
 806c501:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806c504:	83 c0 01             	add    $0x1,%eax
 806c507:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806c50a:	eb cc                	jmp    806c4d8 <gen_inline_functions+0x1b>
 806c50c:	48 8b 05 7d 19 02 00 	mov    0x2197d(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c513:	48 8b 00             	mov    (%rax),%rax
 806c516:	48 b9 90 0c 00 00 00 	movabs $0xc90,%rcx
 806c51d:	00 00 00 
 806c520:	48 01 c8             	add    %rcx,%rax
 806c523:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 806c526:	48 63 c9             	movslq %ecx,%rcx
 806c529:	48 89 ca             	mov    %rcx,%rdx
 806c52c:	48 c1 e2 03          	shl    $0x3,%rdx
 806c530:	48 8b 08             	mov    (%rax),%rcx
 806c533:	48 89 d0             	mov    %rdx,%rax
 806c536:	48 01 c1             	add    %rax,%rcx
 806c539:	48 8b 01             	mov    (%rcx),%rax
 806c53c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806c540:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806c544:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806c54b:	00 00 00 
 806c54e:	48 01 c8             	add    %rcx,%rax
 806c551:	48 8b 08             	mov    (%rax),%rcx
 806c554:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 806c558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c55c:	85 c0                	test   %eax,%eax
 806c55e:	0f 84 2c 01 00 00    	je     806c690 <gen_inline_functions+0x1d3>
 806c564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c568:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806c56f:	00 00 00 
 806c572:	48 01 c8             	add    %rcx,%rax
 806c575:	48 8b 08             	mov    (%rax),%rcx
 806c578:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806c57f:	00 00 00 
 806c582:	48 39 c1             	cmp    %rax,%rcx
 806c585:	b8 00 00 00 00       	mov    $0x0,%eax
 806c58a:	0f 95 c0             	setne  %al
 806c58d:	85 c0                	test   %eax,%eax
 806c58f:	0f 84 fb 00 00 00    	je     806c690 <gen_inline_functions+0x1d3>
 806c595:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806c599:	48 8b 08             	mov    (%rax),%rcx
 806c59c:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
 806c5a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806c5a4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806c5ab:	00 00 00 
 806c5ae:	48 01 c8             	add    %rcx,%rax
 806c5b1:	b9 00 00 00 00       	mov    $0x0,%ecx
 806c5b6:	48 89 08             	mov    %rcx,(%rax)
 806c5b9:	48 8b 05 e0 18 02 00 	mov    0x218e0(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806c5c0:	48 8b 00             	mov    (%rax),%rax
 806c5c3:	85 c0                	test   %eax,%eax
 806c5c5:	0f 84 38 00 00 00    	je     806c603 <gen_inline_functions+0x146>
 806c5cb:	48 8b 05 ce 18 02 00 	mov    0x218ce(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806c5d2:	48 8b 00             	mov    (%rax),%rax
 806c5d5:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 806c5dc:	00 00 00 
 806c5df:	48 01 c8             	add    %rcx,%rax
 806c5e2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806c5e6:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 806c5ed:	00 00 00 
 806c5f0:	48 01 d1             	add    %rdx,%rcx
 806c5f3:	48 89 ce             	mov    %rcx,%rsi
 806c5f6:	48 89 c7             	mov    %rax,%rdi
 806c5f9:	b8 00 00 00 00       	mov    $0x0,%eax
 806c5fe:	e8 5d ac 01 00       	callq  8087260 <strcpy>
 806c603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c607:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806c60e:	00 00 00 
 806c611:	48 01 c8             	add    %rcx,%rax
 806c614:	48 b9 30 02 00 00 00 	movabs $0x230,%rcx
 806c61b:	00 00 00 
 806c61e:	48 89 08             	mov    %rcx,(%rax)
 806c621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c625:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806c62c:	00 00 00 
 806c62f:	48 01 c8             	add    %rcx,%rax
 806c632:	8b 08                	mov    (%rax),%ecx
 806c634:	81 e1 ff fb ff ff    	and    $0xfffffbff,%ecx
 806c63a:	89 08                	mov    %ecx,(%rax)
 806c63c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806c640:	4c 8b 1d 29 19 02 00 	mov    0x21929(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 806c647:	49 89 03             	mov    %rax,(%r11)
 806c64a:	b8 00 00 00 00       	mov    $0x0,%eax
 806c64f:	e8 76 c0 fe ff       	callq  80586ca <next>
 806c654:	48 8b 05 75 18 02 00 	mov    0x21875(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 806c65b:	48 8b 00             	mov    (%rax),%rax
 806c65e:	4c 8b 1d 53 18 02 00 	mov    0x21853(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806c665:	49 89 03             	mov    %rax,(%r11)
 806c668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806c66c:	48 89 c7             	mov    %rax,%rdi
 806c66f:	b8 00 00 00 00       	mov    $0x0,%eax
 806c674:	e8 e3 fa ff ff       	callq  806c15c <gen_function>
 806c679:	b8 00 00 00 00       	mov    $0x0,%eax
 806c67e:	4c 8b 1d eb 18 02 00 	mov    0x218eb(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 806c685:	49 89 03             	mov    %rax,(%r11)
 806c688:	b8 01 00 00 00       	mov    $0x1,%eax
 806c68d:	89 45 ec             	mov    %eax,-0x14(%rbp)
 806c690:	e9 6c fe ff ff       	jmpq   806c501 <gen_inline_functions+0x44>
 806c695:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806c698:	85 c0                	test   %eax,%eax
 806c69a:	0f 84 05 00 00 00    	je     806c6a5 <gen_inline_functions+0x1e8>
 806c6a0:	e9 05 00 00 00       	jmpq   806c6aa <gen_inline_functions+0x1ed>
 806c6a5:	e9 05 00 00 00       	jmpq   806c6af <gen_inline_functions+0x1f2>
 806c6aa:	e9 19 fe ff ff       	jmpq   806c4c8 <gen_inline_functions+0xb>
 806c6af:	b8 00 00 00 00       	mov    $0x0,%eax
 806c6b4:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806c6b7:	48 8b 05 d2 17 02 00 	mov    0x217d2(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c6be:	48 8b 00             	mov    (%rax),%rax
 806c6c1:	48 b9 98 0c 00 00 00 	movabs $0xc98,%rcx
 806c6c8:	00 00 00 
 806c6cb:	48 01 c8             	add    %rcx,%rax
 806c6ce:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 806c6d1:	8b 10                	mov    (%rax),%edx
 806c6d3:	39 d1                	cmp    %edx,%ecx
 806c6d5:	0f 8d 62 00 00 00    	jge    806c73d <gen_inline_functions+0x280>
 806c6db:	e9 0b 00 00 00       	jmpq   806c6eb <gen_inline_functions+0x22e>
 806c6e0:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806c6e3:	83 c0 01             	add    $0x1,%eax
 806c6e6:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806c6e9:	eb cc                	jmp    806c6b7 <gen_inline_functions+0x1fa>
 806c6eb:	48 8b 05 9e 17 02 00 	mov    0x2179e(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c6f2:	48 8b 00             	mov    (%rax),%rax
 806c6f5:	48 b9 90 0c 00 00 00 	movabs $0xc90,%rcx
 806c6fc:	00 00 00 
 806c6ff:	48 01 c8             	add    %rcx,%rax
 806c702:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 806c705:	48 63 c9             	movslq %ecx,%rcx
 806c708:	48 89 ca             	mov    %rcx,%rdx
 806c70b:	48 c1 e2 03          	shl    $0x3,%rdx
 806c70f:	48 8b 08             	mov    (%rax),%rcx
 806c712:	48 89 d0             	mov    %rdx,%rax
 806c715:	48 01 c1             	add    %rax,%rcx
 806c718:	48 8b 01             	mov    (%rcx),%rax
 806c71b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806c71f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806c723:	48 8b 08             	mov    (%rax),%rcx
 806c726:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
 806c72a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806c72e:	48 89 c7             	mov    %rax,%rdi
 806c731:	b8 00 00 00 00       	mov    $0x0,%eax
 806c736:	e8 7c 6d fe ff       	callq  80534b7 <tok_str_free>
 806c73b:	eb a3                	jmp    806c6e0 <gen_inline_functions+0x223>
 806c73d:	48 8b 05 4c 17 02 00 	mov    0x2174c(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c744:	48 8b 00             	mov    (%rax),%rax
 806c747:	48 b9 90 0c 00 00 00 	movabs $0xc90,%rcx
 806c74e:	00 00 00 
 806c751:	48 01 c8             	add    %rcx,%rax
 806c754:	48 8b 0d 35 17 02 00 	mov    0x21735(%rip),%rcx        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806c75b:	48 8b 09             	mov    (%rcx),%rcx
 806c75e:	48 ba 98 0c 00 00 00 	movabs $0xc98,%rdx
 806c765:	00 00 00 
 806c768:	48 01 d1             	add    %rdx,%rcx
 806c76b:	48 89 ce             	mov    %rcx,%rsi
 806c76e:	48 89 c7             	mov    %rax,%rdi
 806c771:	b8 00 00 00 00       	mov    $0x0,%eax
 806c776:	e8 4c fa fd ff       	callq  804c1c7 <dynarray_reset>
 806c77b:	c9                   	leaveq 
 806c77c:	c3                   	retq   

000000000806c77d <decl0>:
 806c77d:	55                   	push   %rbp
 806c77e:	48 89 e5             	mov    %rsp,%rbp
 806c781:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
 806c788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806c78c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806c790:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 806c794:	48 89 c6             	mov    %rax,%rsi
 806c797:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 806c79b:	48 89 c7             	mov    %rax,%rdi
 806c79e:	b8 00 00 00 00       	mov    $0x0,%eax
 806c7a3:	e8 77 71 ff ff       	callq  806391f <parse_btype>
 806c7a8:	85 c0                	test   %eax,%eax
 806c7aa:	0f 84 05 00 00 00    	je     806c7b5 <decl0+0x38>
 806c7b0:	e9 c8 00 00 00       	jmpq   806c87d <decl0+0x100>
 806c7b5:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806c7b8:	85 c0                	test   %eax,%eax
 806c7ba:	0f 84 0a 00 00 00    	je     806c7ca <decl0+0x4d>
 806c7c0:	b8 00 00 00 00       	mov    $0x0,%eax
 806c7c5:	e9 89 0c 00 00       	jmpq   806d453 <decl0+0xcd6>
 806c7ca:	48 8b 05 57 17 02 00 	mov    0x21757(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c7d1:	8b 00                	mov    (%rax),%eax
 806c7d3:	83 f8 3b             	cmp    $0x3b,%eax
 806c7d6:	0f 85 0f 00 00 00    	jne    806c7eb <decl0+0x6e>
 806c7dc:	b8 00 00 00 00       	mov    $0x0,%eax
 806c7e1:	e8 e4 be fe ff       	callq  80586ca <next>
 806c7e6:	e9 a5 ff ff ff       	jmpq   806c790 <decl0+0x13>
 806c7eb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806c7ee:	83 f8 30             	cmp    $0x30,%eax
 806c7f1:	0f 85 53 00 00 00    	jne    806c84a <decl0+0xcd>
 806c7f7:	48 8b 05 2a 17 02 00 	mov    0x2172a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c7fe:	8b 00                	mov    (%rax),%eax
 806c800:	81 f8 36 01 00 00    	cmp    $0x136,%eax
 806c806:	0f 84 2f 00 00 00    	je     806c83b <decl0+0xbe>
 806c80c:	48 8b 05 15 17 02 00 	mov    0x21715(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c813:	8b 00                	mov    (%rax),%eax
 806c815:	81 f8 37 01 00 00    	cmp    $0x137,%eax
 806c81b:	0f 84 1a 00 00 00    	je     806c83b <decl0+0xbe>
 806c821:	48 8b 05 00 17 02 00 	mov    0x21700(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c828:	8b 00                	mov    (%rax),%eax
 806c82a:	81 f8 38 01 00 00    	cmp    $0x138,%eax
 806c830:	0f 84 05 00 00 00    	je     806c83b <decl0+0xbe>
 806c836:	e9 0f 00 00 00       	jmpq   806c84a <decl0+0xcd>
 806c83b:	b8 00 00 00 00       	mov    $0x0,%eax
 806c840:	e8 4f f3 00 00       	callq  807bb94 <asm_global_instr>
 806c845:	e9 46 ff ff ff       	jmpq   806c790 <decl0+0x13>
 806c84a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806c84d:	83 f8 32             	cmp    $0x32,%eax
 806c850:	0f 84 1a 00 00 00    	je     806c870 <decl0+0xf3>
 806c856:	48 8b 05 cb 16 02 00 	mov    0x216cb(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c85d:	8b 00                	mov    (%rax),%eax
 806c85f:	81 f8 39 01 00 00    	cmp    $0x139,%eax
 806c865:	0f 8c 05 00 00 00    	jl     806c870 <decl0+0xf3>
 806c86b:	e9 05 00 00 00       	jmpq   806c875 <decl0+0xf8>
 806c870:	e9 d4 0b 00 00       	jmpq   806d449 <decl0+0xccc>
 806c875:	b8 00 00 00 00       	mov    $0x0,%eax
 806c87a:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806c87d:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806c880:	83 e0 0f             	and    $0xf,%eax
 806c883:	83 f8 05             	cmp    $0x5,%eax
 806c886:	0f 84 14 00 00 00    	je     806c8a0 <decl0+0x123>
 806c88c:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806c88f:	83 e0 0f             	and    $0xf,%eax
 806c892:	83 f8 07             	cmp    $0x7,%eax
 806c895:	0f 84 05 00 00 00    	je     806c8a0 <decl0+0x123>
 806c89b:	e9 21 00 00 00       	jmpq   806c8c1 <decl0+0x144>
 806c8a0:	48 8b 05 81 16 02 00 	mov    0x21681(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c8a7:	8b 00                	mov    (%rax),%eax
 806c8a9:	83 f8 3b             	cmp    $0x3b,%eax
 806c8ac:	0f 85 0f 00 00 00    	jne    806c8c1 <decl0+0x144>
 806c8b2:	b8 00 00 00 00       	mov    $0x0,%eax
 806c8b7:	e8 0e be fe ff       	callq  80586ca <next>
 806c8bc:	e9 cf fe ff ff       	jmpq   806c790 <decl0+0x13>
 806c8c1:	b8 10 00 00 00       	mov    $0x10,%eax
 806c8c6:	49 89 c2             	mov    %rax,%r10
 806c8c9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 806c8cd:	48 89 c6             	mov    %rax,%rsi
 806c8d0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 806c8d4:	48 89 c7             	mov    %rax,%rdi
 806c8d7:	4c 89 d2             	mov    %r10,%rdx
 806c8da:	b8 00 00 00 00       	mov    $0x0,%eax
 806c8df:	e8 8c a3 01 00       	callq  8086c70 <memcpy>
 806c8e4:	b8 02 00 00 00       	mov    $0x2,%eax
 806c8e9:	49 89 c3             	mov    %rax,%r11
 806c8ec:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 806c8f0:	49 89 c2             	mov    %rax,%r10
 806c8f3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 806c8f7:	48 89 c6             	mov    %rax,%rsi
 806c8fa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 806c8fe:	48 89 c7             	mov    %rax,%rdi
 806c901:	4c 89 d2             	mov    %r10,%rdx
 806c904:	4c 89 d9             	mov    %r11,%rcx
 806c907:	b8 00 00 00 00       	mov    $0x0,%eax
 806c90c:	e8 33 80 ff ff       	callq  8064944 <type_decl>
 806c911:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806c914:	83 e0 0f             	and    $0xf,%eax
 806c917:	83 f8 06             	cmp    $0x6,%eax
 806c91a:	0f 85 71 00 00 00    	jne    806c991 <decl0+0x214>
 806c920:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806c923:	81 e0 00 01 00 00    	and    $0x100,%eax
 806c929:	85 c0                	test   %eax,%eax
 806c92b:	0f 84 20 00 00 00    	je     806c951 <decl0+0x1d4>
 806c931:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806c934:	83 f8 32             	cmp    $0x32,%eax
 806c937:	0f 85 14 00 00 00    	jne    806c951 <decl0+0x1d4>
 806c93d:	48 8d 05 e7 f9 01 00 	lea    0x1f9e7(%rip),%rax        # 808c32b <L.230>
 806c944:	48 89 c7             	mov    %rax,%rdi
 806c947:	b8 00 00 00 00       	mov    $0x0,%eax
 806c94c:	e8 76 0d fe ff       	callq  804d6c7 <tcc_error>
 806c951:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806c955:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806c959:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806c95d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806c964:	00 00 00 
 806c967:	48 01 c8             	add    %rcx,%rax
 806c96a:	48 8b 08             	mov    (%rax),%rcx
 806c96d:	48 b8 02 00 00 00 00 	movabs $0x2,%rax
 806c974:	00 00 00 
 806c977:	48 39 c1             	cmp    %rax,%rcx
 806c97a:	0f 85 11 00 00 00    	jne    806c991 <decl0+0x214>
 806c980:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806c984:	48 89 c7             	mov    %rax,%rdi
 806c987:	b8 00 00 00 00       	mov    $0x0,%eax
 806c98c:	e8 12 f5 ff ff       	callq  806bea3 <func_decl_list>
 806c991:	b8 00 00 00 00       	mov    $0x0,%eax
 806c996:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 806c99a:	48 8b 05 1f 16 02 00 	mov    0x2161f(%rip),%rax        # 808dfc0 <_GLOBAL_OFFSET_TABLE_+0x340>
 806c9a1:	8b 00                	mov    (%rax),%eax
 806c9a3:	85 c0                	test   %eax,%eax
 806c9a5:	0f 84 92 00 00 00    	je     806ca3d <decl0+0x2c0>
 806c9ab:	48 8b 05 76 15 02 00 	mov    0x21576(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c9b2:	8b 00                	mov    (%rax),%eax
 806c9b4:	81 f8 36 01 00 00    	cmp    $0x136,%eax
 806c9ba:	0f 84 2f 00 00 00    	je     806c9ef <decl0+0x272>
 806c9c0:	48 8b 05 61 15 02 00 	mov    0x21561(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c9c7:	8b 00                	mov    (%rax),%eax
 806c9c9:	81 f8 37 01 00 00    	cmp    $0x137,%eax
 806c9cf:	0f 84 1a 00 00 00    	je     806c9ef <decl0+0x272>
 806c9d5:	48 8b 05 4c 15 02 00 	mov    0x2154c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806c9dc:	8b 00                	mov    (%rax),%eax
 806c9de:	81 f8 38 01 00 00    	cmp    $0x138,%eax
 806c9e4:	0f 84 05 00 00 00    	je     806c9ef <decl0+0x272>
 806c9ea:	e9 4e 00 00 00       	jmpq   806ca3d <decl0+0x2c0>
 806c9ef:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 806c9f6:	48 89 c7             	mov    %rax,%rdi
 806c9f9:	b8 00 00 00 00       	mov    $0x0,%eax
 806c9fe:	e8 7c 78 ff ff       	callq  806427f <asm_label_instr>
 806ca03:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806ca07:	48 89 c7             	mov    %rax,%rdi
 806ca0a:	b8 00 00 00 00       	mov    $0x0,%eax
 806ca0f:	e8 88 f6 fd ff       	callq  804c09c <tcc_strdup>
 806ca14:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 806ca18:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 806ca1f:	48 89 c7             	mov    %rax,%rdi
 806ca22:	b8 00 00 00 00       	mov    $0x0,%eax
 806ca27:	e8 d0 49 fe ff       	callq  80513fc <cstr_free>
 806ca2c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 806ca30:	48 89 c7             	mov    %rax,%rdi
 806ca33:	b8 00 00 00 00       	mov    $0x0,%eax
 806ca38:	e8 0c 5d ff ff       	callq  8062749 <parse_attribute>
 806ca3d:	8b 45 a0             	mov    -0x60(%rbp),%eax
 806ca40:	c1 e0 0b             	shl    $0xb,%eax
 806ca43:	c1 e8 1f             	shr    $0x1f,%eax
 806ca46:	85 c0                	test   %eax,%eax
 806ca48:	0f 84 0c 00 00 00    	je     806ca5a <decl0+0x2dd>
 806ca4e:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ca51:	81 c8 00 00 01 00    	or     $0x10000,%eax
 806ca57:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806ca5a:	48 8b 05 c7 14 02 00 	mov    0x214c7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806ca61:	8b 00                	mov    (%rax),%eax
 806ca63:	83 f8 7b             	cmp    $0x7b,%eax
 806ca66:	0f 85 b1 05 00 00    	jne    806d01d <decl0+0x8a0>
 806ca6c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806ca6f:	83 f8 32             	cmp    $0x32,%eax
 806ca72:	0f 85 14 00 00 00    	jne    806ca8c <decl0+0x30f>
 806ca78:	48 8d 05 d9 f8 01 00 	lea    0x1f8d9(%rip),%rax        # 808c358 <L.231>
 806ca7f:	48 89 c7             	mov    %rax,%rdi
 806ca82:	b8 00 00 00 00       	mov    $0x0,%eax
 806ca87:	e8 3b 0c fe ff       	callq  804d6c7 <tcc_error>
 806ca8c:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ca8f:	83 e0 0f             	and    $0xf,%eax
 806ca92:	83 f8 06             	cmp    $0x6,%eax
 806ca95:	0f 84 14 00 00 00    	je     806caaf <decl0+0x332>
 806ca9b:	48 8d 05 d1 f8 01 00 	lea    0x1f8d1(%rip),%rax        # 808c373 <L.232>
 806caa2:	48 89 c7             	mov    %rax,%rdi
 806caa5:	b8 00 00 00 00       	mov    $0x0,%eax
 806caaa:	e8 a3 46 fe ff       	callq  8051152 <expect>
 806caaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806cab3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806cab7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cabb:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806cac2:	00 00 00 
 806cac5:	48 01 c8             	add    %rcx,%rax
 806cac8:	48 8b 08             	mov    (%rax),%rcx
 806cacb:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 806cacf:	48 89 c8             	mov    %rcx,%rax
 806cad2:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806cad9:	00 00 00 
 806cadc:	48 39 c8             	cmp    %rcx,%rax
 806cadf:	0f 84 2f 00 00 00    	je     806cb14 <decl0+0x397>
 806cae5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cae9:	8b 08                	mov    (%rax),%ecx
 806caeb:	81 e1 ff ff ff df    	and    $0xdfffffff,%ecx
 806caf1:	85 c9                	test   %ecx,%ecx
 806caf3:	0f 84 05 00 00 00    	je     806cafe <decl0+0x381>
 806caf9:	e9 14 00 00 00       	jmpq   806cb12 <decl0+0x395>
 806cafe:	48 8d 05 82 f8 01 00 	lea    0x1f882(%rip),%rax        # 808c387 <L.233>
 806cb05:	48 89 c7             	mov    %rax,%rdi
 806cb08:	b8 00 00 00 00       	mov    $0x0,%eax
 806cb0d:	e8 40 46 fe ff       	callq  8051152 <expect>
 806cb12:	eb a3                	jmp    806cab7 <decl0+0x33a>
 806cb14:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806cb17:	81 e0 80 04 00 00    	and    $0x480,%eax
 806cb1d:	81 f8 80 04 00 00    	cmp    $0x480,%eax
 806cb23:	0f 85 12 00 00 00    	jne    806cb3b <decl0+0x3be>
 806cb29:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806cb2c:	81 e0 7f ff ff ff    	and    $0xffffff7f,%eax
 806cb32:	81 c8 00 01 00 00    	or     $0x100,%eax
 806cb38:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806cb3b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806cb3e:	48 89 c7             	mov    %rax,%rdi
 806cb41:	b8 00 00 00 00       	mov    $0x0,%eax
 806cb46:	e8 99 f5 fe ff       	callq  805c0e4 <sym_find>
 806cb4b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806cb4f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cb53:	85 c0                	test   %eax,%eax
 806cb55:	0f 84 d1 01 00 00    	je     806cd2c <decl0+0x5af>
 806cb5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cb5f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806cb66:	00 00 00 
 806cb69:	48 01 c8             	add    %rcx,%rax
 806cb6c:	8b 08                	mov    (%rax),%ecx
 806cb6e:	83 e1 0f             	and    $0xf,%ecx
 806cb71:	83 f9 06             	cmp    $0x6,%ecx
 806cb74:	0f 84 05 00 00 00    	je     806cb7f <decl0+0x402>
 806cb7a:	e9 42 01 00 00       	jmpq   806ccc1 <decl0+0x544>
 806cb7f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cb83:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806cb8a:	00 00 00 
 806cb8d:	48 01 c8             	add    %rcx,%rax
 806cb90:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806cb97:	00 00 00 
 806cb9a:	48 01 c8             	add    %rcx,%rax
 806cb9d:	48 8b 08             	mov    (%rax),%rcx
 806cba0:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 806cba7:	00 00 00 
 806cbaa:	48 01 c1             	add    %rax,%rcx
 806cbad:	48 8b 01             	mov    (%rcx),%rax
 806cbb0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806cbb3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806cbb6:	c1 e0 1d             	shl    $0x1d,%eax
 806cbb9:	c1 e8 1d             	shr    $0x1d,%eax
 806cbbc:	83 f8 00             	cmp    $0x0,%eax
 806cbbf:	0f 84 53 00 00 00    	je     806cc18 <decl0+0x49b>
 806cbc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806cbc9:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806cbd0:	00 00 00 
 806cbd3:	48 01 c8             	add    %rcx,%rax
 806cbd6:	8b 08                	mov    (%rax),%ecx
 806cbd8:	c1 e1 1d             	shl    $0x1d,%ecx
 806cbdb:	c1 e9 1d             	shr    $0x1d,%ecx
 806cbde:	83 f9 00             	cmp    $0x0,%ecx
 806cbe1:	0f 85 31 00 00 00    	jne    806cc18 <decl0+0x49b>
 806cbe7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806cbeb:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806cbf2:	00 00 00 
 806cbf5:	48 01 c8             	add    %rcx,%rax
 806cbf8:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 806cbfb:	c1 e1 1d             	shl    $0x1d,%ecx
 806cbfe:	c1 e9 1d             	shr    $0x1d,%ecx
 806cc01:	48 89 ca             	mov    %rcx,%rdx
 806cc04:	83 e2 07             	and    $0x7,%edx
 806cc07:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
 806cc0e:	8b 08                	mov    (%rax),%ecx
 806cc10:	83 e1 f8             	and    $0xfffffff8,%ecx
 806cc13:	48 09 ca             	or     %rcx,%rdx
 806cc16:	89 10                	mov    %edx,(%rax)
 806cc18:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806cc1b:	c1 e0 16             	shl    $0x16,%eax
 806cc1e:	c1 e8 1f             	shr    $0x1f,%eax
 806cc21:	85 c0                	test   %eax,%eax
 806cc23:	0f 84 33 00 00 00    	je     806cc5c <decl0+0x4df>
 806cc29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806cc2d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806cc34:	00 00 00 
 806cc37:	48 01 c8             	add    %rcx,%rax
 806cc3a:	b9 01 00 00 00       	mov    $0x1,%ecx
 806cc3f:	48 89 ca             	mov    %rcx,%rdx
 806cc42:	83 e2 01             	and    $0x1,%edx
 806cc45:	c1 e2 09             	shl    $0x9,%edx
 806cc48:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 806cc4f:	8b 08                	mov    (%rax),%ecx
 806cc51:	81 e1 ff fd ff ff    	and    $0xfffffdff,%ecx
 806cc57:	48 09 ca             	or     %rcx,%rdx
 806cc5a:	89 10                	mov    %edx,(%rax)
 806cc5c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cc60:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806cc67:	00 00 00 
 806cc6a:	48 01 c8             	add    %rcx,%rax
 806cc6d:	8b 08                	mov    (%rax),%ecx
 806cc6f:	81 e1 00 01 00 00    	and    $0x100,%ecx
 806cc75:	85 c9                	test   %ecx,%ecx
 806cc77:	0f 84 12 00 00 00    	je     806cc8f <decl0+0x512>
 806cc7d:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806cc80:	81 e0 7f ff ff ff    	and    $0xffffff7f,%eax
 806cc86:	81 c8 00 01 00 00    	or     $0x100,%eax
 806cc8c:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806cc8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cc93:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806cc9a:	00 00 00 
 806cc9d:	48 01 c8             	add    %rcx,%rax
 806cca0:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 806cca4:	48 89 ce             	mov    %rcx,%rsi
 806cca7:	48 89 c7             	mov    %rax,%rdi
 806ccaa:	b8 00 00 00 00       	mov    $0x0,%eax
 806ccaf:	e8 4c 48 ff ff       	callq  8061500 <is_compatible_types>
 806ccb4:	85 c0                	test   %eax,%eax
 806ccb6:	0f 84 05 00 00 00    	je     806ccc1 <decl0+0x544>
 806ccbc:	e9 2f 00 00 00       	jmpq   806ccf0 <decl0+0x573>
 806ccc1:	b8 00 00 00 00       	mov    $0x0,%eax
 806ccc6:	48 89 c6             	mov    %rax,%rsi
 806ccc9:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806cccc:	48 89 c7             	mov    %rax,%rdi
 806cccf:	b8 00 00 00 00       	mov    $0x0,%eax
 806ccd4:	e8 db 4b fe ff       	callq  80518b4 <get_tok_str>
 806ccd9:	48 89 c6             	mov    %rax,%rsi
 806ccdc:	48 8d 05 af f6 01 00 	lea    0x1f6af(%rip),%rax        # 808c392 <L.234>
 806cce3:	48 89 c7             	mov    %rax,%rdi
 806cce6:	b8 00 00 00 00       	mov    $0x0,%eax
 806cceb:	e8 d7 09 fe ff       	callq  804d6c7 <tcc_error>
 806ccf0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806ccf4:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806ccfb:	00 00 00 
 806ccfe:	48 01 c8             	add    %rcx,%rax
 806cd01:	b9 10 00 00 00       	mov    $0x10,%ecx
 806cd06:	49 89 ca             	mov    %rcx,%r10
 806cd09:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 806cd0d:	48 89 ce             	mov    %rcx,%rsi
 806cd10:	48 89 c7             	mov    %rax,%rdi
 806cd13:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 806cd1a:	4c 89 d2             	mov    %r10,%rdx
 806cd1d:	b8 00 00 00 00       	mov    $0x0,%eax
 806cd22:	e8 49 9f 01 00       	callq  8086c70 <memcpy>
 806cd27:	e9 4a 00 00 00       	jmpq   806cd76 <decl0+0x5f9>
 806cd2c:	b8 00 00 00 00       	mov    $0x0,%eax
 806cd31:	49 89 c2             	mov    %rax,%r10
 806cd34:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806cd37:	48 89 c6             	mov    %rax,%rsi
 806cd3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806cd3d:	48 89 c7             	mov    %rax,%rdi
 806cd40:	4c 89 d2             	mov    %r10,%rdx
 806cd43:	b8 00 00 00 00       	mov    $0x0,%eax
 806cd48:	e8 aa f5 fe ff       	callq  805c2f7 <global_identifier_push>
 806cd4d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806cd51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cd55:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806cd5c:	00 00 00 
 806cd5f:	48 01 c8             	add    %rcx,%rax
 806cd62:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806cd69:	00 00 00 
 806cd6c:	48 01 c8             	add    %rcx,%rax
 806cd6f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 806cd73:	48 89 08             	mov    %rcx,(%rax)
 806cd76:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806cd79:	81 e0 00 05 00 00    	and    $0x500,%eax
 806cd7f:	81 f8 00 05 00 00    	cmp    $0x500,%eax
 806cd85:	0f 85 20 02 00 00    	jne    806cfab <decl0+0x82e>
 806cd8b:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
 806cd92:	48 89 c7             	mov    %rax,%rdi
 806cd95:	b8 00 00 00 00       	mov    $0x0,%eax
 806cd9a:	e8 b3 66 fe ff       	callq  8053452 <tok_str_new>
 806cd9f:	b8 00 00 00 00       	mov    $0x0,%eax
 806cda4:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
 806cdaa:	48 8b 05 77 11 02 00 	mov    0x21177(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806cdb1:	8b 00                	mov    (%rax),%eax
 806cdb3:	83 f8 ff             	cmp    $0xffffffff,%eax
 806cdb6:	0f 85 14 00 00 00    	jne    806cdd0 <decl0+0x653>
 806cdbc:	48 8d 05 fb f5 01 00 	lea    0x1f5fb(%rip),%rax        # 808c3be <L.235>
 806cdc3:	48 89 c7             	mov    %rax,%rdi
 806cdc6:	b8 00 00 00 00       	mov    $0x0,%eax
 806cdcb:	e8 f7 08 fe ff       	callq  804d6c7 <tcc_error>
 806cdd0:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
 806cdd7:	48 89 c7             	mov    %rax,%rdi
 806cdda:	b8 00 00 00 00       	mov    $0x0,%eax
 806cddf:	e8 4c 6c fe ff       	callq  8053a30 <tok_str_add_tok>
 806cde4:	48 8b 05 3d 11 02 00 	mov    0x2113d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806cdeb:	8b 00                	mov    (%rax),%eax
 806cded:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
 806cdf3:	b8 00 00 00 00       	mov    $0x0,%eax
 806cdf8:	e8 cd b8 fe ff       	callq  80586ca <next>
 806cdfd:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
 806ce03:	83 f8 7b             	cmp    $0x7b,%eax
 806ce06:	0f 85 17 00 00 00    	jne    806ce23 <decl0+0x6a6>
 806ce0c:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
 806ce12:	48 89 c1             	mov    %rax,%rcx
 806ce15:	83 c0 01             	add    $0x1,%eax
 806ce18:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
 806ce1e:	e9 35 00 00 00       	jmpq   806ce58 <decl0+0x6db>
 806ce23:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
 806ce29:	83 f8 7d             	cmp    $0x7d,%eax
 806ce2c:	0f 85 26 00 00 00    	jne    806ce58 <decl0+0x6db>
 806ce32:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
 806ce38:	48 89 c1             	mov    %rax,%rcx
 806ce3b:	83 c0 ff             	add    $0xffffffff,%eax
 806ce3e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
 806ce44:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
 806ce4a:	83 f8 00             	cmp    $0x0,%eax
 806ce4d:	0f 85 05 00 00 00    	jne    806ce58 <decl0+0x6db>
 806ce53:	e9 05 00 00 00       	jmpq   806ce5d <decl0+0x6e0>
 806ce58:	e9 4d ff ff ff       	jmpq   806cdaa <decl0+0x62d>
 806ce5d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 806ce62:	48 89 c6             	mov    %rax,%rsi
 806ce65:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
 806ce6c:	48 89 c7             	mov    %rax,%rdi
 806ce6f:	b8 00 00 00 00       	mov    $0x0,%eax
 806ce74:	e8 01 67 fe ff       	callq  805357a <tok_str_add>
 806ce79:	b8 00 00 00 00       	mov    $0x0,%eax
 806ce7e:	48 89 c6             	mov    %rax,%rsi
 806ce81:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
 806ce88:	48 89 c7             	mov    %rax,%rdi
 806ce8b:	b8 00 00 00 00       	mov    $0x0,%eax
 806ce90:	e8 e5 66 fe ff       	callq  805357a <tok_str_add>
 806ce95:	48 8b 05 04 10 02 00 	mov    0x21004(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806ce9c:	48 8b 00             	mov    (%rax),%rax
 806ce9f:	85 c0                	test   %eax,%eax
 806cea1:	0f 84 1c 00 00 00    	je     806cec3 <decl0+0x746>
 806cea7:	48 8b 05 f2 0f 02 00 	mov    0x20ff2(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 806ceae:	48 8b 00             	mov    (%rax),%rax
 806ceb1:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 806ceb8:	00 00 00 
 806cebb:	48 01 c8             	add    %rcx,%rax
 806cebe:	e9 0c 00 00 00       	jmpq   806cecf <decl0+0x752>
 806cec3:	48 8d 05 0b f5 01 00 	lea    0x1f50b(%rip),%rax        # 808c3d5 <L.236>
 806ceca:	e9 00 00 00 00       	jmpq   806cecf <decl0+0x752>
 806cecf:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 806ced6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 806cedd:	48 89 c7             	mov    %rax,%rdi
 806cee0:	b8 00 00 00 00       	mov    $0x0,%eax
 806cee5:	e8 f6 a3 01 00       	callq  80872e0 <strlen>
 806ceea:	83 c0 18             	add    $0x18,%eax
 806ceed:	48 89 c1             	mov    %rax,%rcx
 806cef0:	48 89 cf             	mov    %rcx,%rdi
 806cef3:	b8 00 00 00 00       	mov    $0x0,%eax
 806cef8:	e8 5b f0 fd ff       	callq  804bf58 <tcc_malloc>
 806cefd:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
 806cf04:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 806cf0b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806cf12:	00 00 00 
 806cf15:	48 01 c8             	add    %rcx,%rax
 806cf18:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
 806cf1f:	48 89 ce             	mov    %rcx,%rsi
 806cf22:	48 89 c7             	mov    %rax,%rdi
 806cf25:	b8 00 00 00 00       	mov    $0x0,%eax
 806cf2a:	e8 31 a3 01 00       	callq  8087260 <strcpy>
 806cf2f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 806cf36:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806cf3d:	00 00 00 
 806cf40:	48 01 c8             	add    %rcx,%rax
 806cf43:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806cf47:	48 89 08             	mov    %rcx,(%rax)
 806cf4a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 806cf51:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 806cf58:	48 89 08             	mov    %rcx,(%rax)
 806cf5b:	48 8b 05 2e 0f 02 00 	mov    0x20f2e(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806cf62:	48 8b 00             	mov    (%rax),%rax
 806cf65:	48 b9 90 0c 00 00 00 	movabs $0xc90,%rcx
 806cf6c:	00 00 00 
 806cf6f:	48 01 c8             	add    %rcx,%rax
 806cf72:	48 8b 0d 17 0f 02 00 	mov    0x20f17(%rip),%rcx        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806cf79:	48 8b 09             	mov    (%rcx),%rcx
 806cf7c:	48 ba 98 0c 00 00 00 	movabs $0xc98,%rdx
 806cf83:	00 00 00 
 806cf86:	48 01 d1             	add    %rdx,%rcx
 806cf89:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
 806cf90:	49 89 d2             	mov    %rdx,%r10
 806cf93:	48 89 ce             	mov    %rcx,%rsi
 806cf96:	48 89 c7             	mov    %rax,%rdi
 806cf99:	4c 89 d2             	mov    %r10,%rdx
 806cf9c:	b8 00 00 00 00       	mov    $0x0,%eax
 806cfa1:	e8 5d f1 fd ff       	callq  804c103 <dynarray_add>
 806cfa6:	e9 68 00 00 00       	jmpq   806d013 <decl0+0x896>
 806cfab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 806cfaf:	4c 8b 1d 02 0f 02 00 	mov    0x20f02(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806cfb6:	49 89 03             	mov    %rax,(%r11)
 806cfb9:	48 8b 05 f8 0e 02 00 	mov    0x20ef8(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806cfc0:	48 8b 00             	mov    (%rax),%rax
 806cfc3:	85 c0                	test   %eax,%eax
 806cfc5:	0f 84 05 00 00 00    	je     806cfd0 <decl0+0x853>
 806cfcb:	e9 14 00 00 00       	jmpq   806cfe4 <decl0+0x867>
 806cfd0:	48 8b 05 f9 0e 02 00 	mov    0x20ef9(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 806cfd7:	48 8b 00             	mov    (%rax),%rax
 806cfda:	4c 8b 1d d7 0e 02 00 	mov    0x20ed7(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 806cfe1:	49 89 03             	mov    %rax,(%r11)
 806cfe4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806cfe8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806cfef:	00 00 00 
 806cff2:	48 01 c8             	add    %rcx,%rax
 806cff5:	48 b9 30 02 00 00 00 	movabs $0x230,%rcx
 806cffc:	00 00 00 
 806cfff:	48 89 08             	mov    %rcx,(%rax)
 806d002:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806d006:	48 89 c7             	mov    %rax,%rdi
 806d009:	b8 00 00 00 00       	mov    $0x0,%eax
 806d00e:	e8 49 f1 ff ff       	callq  806c15c <gen_function>
 806d013:	e9 2c 04 00 00       	jmpq   806d444 <decl0+0xcc7>
 806d018:	e9 05 04 00 00       	jmpq   806d422 <decl0+0xca5>
 806d01d:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806d020:	81 e0 00 02 00 00    	and    $0x200,%eax
 806d026:	85 c0                	test   %eax,%eax
 806d028:	0f 84 4f 00 00 00    	je     806d07d <decl0+0x900>
 806d02e:	b8 00 00 00 00       	mov    $0x0,%eax
 806d033:	49 89 c3             	mov    %rax,%r11
 806d036:	8b 45 a0             	mov    -0x60(%rbp),%eax
 806d039:	49 89 c2             	mov    %rax,%r10
 806d03c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 806d040:	48 89 c6             	mov    %rax,%rsi
 806d043:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806d046:	48 89 c7             	mov    %rax,%rdi
 806d049:	4c 89 d2             	mov    %r10,%rdx
 806d04c:	4c 89 d9             	mov    %r11,%rcx
 806d04f:	b8 00 00 00 00       	mov    $0x0,%eax
 806d054:	e8 02 f1 fe ff       	callq  805c15b <sym_push>
 806d059:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806d05d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806d061:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806d068:	00 00 00 
 806d06b:	48 01 c8             	add    %rcx,%rax
 806d06e:	8b 08                	mov    (%rax),%ecx
 806d070:	81 c9 00 02 00 00    	or     $0x200,%ecx
 806d076:	89 08                	mov    %ecx,(%rax)
 806d078:	e9 5d 03 00 00       	jmpq   806d3da <decl0+0xc5d>
 806d07d:	b8 00 00 00 00       	mov    $0x0,%eax
 806d082:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806d085:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d088:	83 e0 0f             	and    $0xf,%eax
 806d08b:	83 f8 06             	cmp    $0x6,%eax
 806d08e:	0f 85 22 00 00 00    	jne    806d0b6 <decl0+0x939>
 806d094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806d098:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806d09f:	00 00 00 
 806d0a2:	48 01 c8             	add    %rcx,%rax
 806d0a5:	8b 4d a0             	mov    -0x60(%rbp),%ecx
 806d0a8:	48 63 c9             	movslq %ecx,%rcx
 806d0ab:	48 89 ca             	mov    %rcx,%rdx
 806d0ae:	48 89 10             	mov    %rdx,(%rax)
 806d0b1:	e9 2c 00 00 00       	jmpq   806d0e2 <decl0+0x965>
 806d0b6:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d0b9:	83 e0 20             	and    $0x20,%eax
 806d0bc:	85 c0                	test   %eax,%eax
 806d0be:	0f 84 05 00 00 00    	je     806d0c9 <decl0+0x94c>
 806d0c4:	e9 19 00 00 00       	jmpq   806d0e2 <decl0+0x965>
 806d0c9:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d0cc:	48 89 c7             	mov    %rax,%rdi
 806d0cf:	b8 00 00 00 00       	mov    $0x0,%eax
 806d0d4:	e8 77 7c ff ff       	callq  8064d50 <lvalue_type>
 806d0d9:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 806d0dc:	48 09 c1             	or     %rax,%rcx
 806d0df:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 806d0e2:	48 8b 05 3f 0e 02 00 	mov    0x20e3f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806d0e9:	8b 00                	mov    (%rax),%eax
 806d0eb:	83 f8 3d             	cmp    $0x3d,%eax
 806d0ee:	b8 00 00 00 00       	mov    $0x0,%eax
 806d0f3:	0f 94 c0             	sete   %al
 806d0f6:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806d0f9:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806d0fc:	85 c0                	test   %eax,%eax
 806d0fe:	0f 84 25 00 00 00    	je     806d129 <decl0+0x9ac>
 806d104:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d107:	81 e0 00 00 02 00    	and    $0x20000,%eax
 806d10d:	85 c0                	test   %eax,%eax
 806d10f:	0f 84 14 00 00 00    	je     806d129 <decl0+0x9ac>
 806d115:	48 8d 05 ba f2 01 00 	lea    0x1f2ba(%rip),%rax        # 808c3d6 <L.237>
 806d11c:	48 89 c7             	mov    %rax,%rdi
 806d11f:	b8 00 00 00 00       	mov    $0x0,%eax
 806d124:	e8 9e 05 fe ff       	callq  804d6c7 <tcc_error>
 806d129:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806d12c:	81 e0 80 00 00 00    	and    $0x80,%eax
 806d132:	85 c0                	test   %eax,%eax
 806d134:	0f 85 7b 00 00 00    	jne    806d1b5 <decl0+0xa38>
 806d13a:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d13d:	83 e0 0f             	and    $0xf,%eax
 806d140:	83 f8 06             	cmp    $0x6,%eax
 806d143:	0f 84 6c 00 00 00    	je     806d1b5 <decl0+0xa38>
 806d149:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d14c:	83 e0 20             	and    $0x20,%eax
 806d14f:	85 c0                	test   %eax,%eax
 806d151:	0f 84 59 00 00 00    	je     806d1b0 <decl0+0xa33>
 806d157:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d15a:	81 e0 00 01 00 00    	and    $0x100,%eax
 806d160:	85 c0                	test   %eax,%eax
 806d162:	0f 84 48 00 00 00    	je     806d1b0 <decl0+0xa33>
 806d168:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806d16b:	85 c0                	test   %eax,%eax
 806d16d:	0f 84 05 00 00 00    	je     806d178 <decl0+0x9fb>
 806d173:	e9 38 00 00 00       	jmpq   806d1b0 <decl0+0xa33>
 806d178:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d17b:	83 f8 30             	cmp    $0x30,%eax
 806d17e:	0f 85 2c 00 00 00    	jne    806d1b0 <decl0+0xa33>
 806d184:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806d188:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806d18f:	00 00 00 
 806d192:	48 01 c8             	add    %rcx,%rax
 806d195:	48 8b 08             	mov    (%rax),%rcx
 806d198:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806d19f:	00 00 00 
 806d1a2:	48 39 c1             	cmp    %rax,%rcx
 806d1a5:	0f 8d 05 00 00 00    	jge    806d1b0 <decl0+0xa33>
 806d1ab:	e9 05 00 00 00       	jmpq   806d1b5 <decl0+0xa38>
 806d1b0:	e9 93 01 00 00       	jmpq   806d348 <decl0+0xbcb>
 806d1b5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806d1b9:	49 89 c3             	mov    %rax,%r11
 806d1bc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806d1bf:	49 89 c2             	mov    %rax,%r10
 806d1c2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 806d1c6:	48 89 c6             	mov    %rax,%rsi
 806d1c9:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806d1cc:	48 89 c7             	mov    %rax,%rdi
 806d1cf:	4c 89 d2             	mov    %r10,%rdx
 806d1d2:	4c 89 d9             	mov    %r11,%rcx
 806d1d5:	b8 00 00 00 00       	mov    $0x0,%eax
 806d1da:	e8 90 f9 fe ff       	callq  805cb6f <external_sym>
 806d1df:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806d1e3:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d1e6:	81 e0 00 00 01 00    	and    $0x10000,%eax
 806d1ec:	85 c0                	test   %eax,%eax
 806d1ee:	0f 84 11 00 00 00    	je     806d205 <decl0+0xa88>
 806d1f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806d1f8:	48 89 c7             	mov    %rax,%rdi
 806d1fb:	b8 00 00 00 00       	mov    $0x0,%eax
 806d200:	e8 22 f3 fe ff       	callq  805c527 <weaken_symbol>
 806d205:	8b 45 b0             	mov    -0x50(%rbp),%eax
 806d208:	85 c0                	test   %eax,%eax
 806d20a:	0f 84 33 01 00 00    	je     806d343 <decl0+0xbc6>
 806d210:	8b 45 b0             	mov    -0x50(%rbp),%eax
 806d213:	48 89 c7             	mov    %rax,%rdi
 806d216:	b8 00 00 00 00       	mov    $0x0,%eax
 806d21b:	e8 c4 ee fe ff       	callq  805c0e4 <sym_find>
 806d220:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 806d227:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 806d22e:	85 c0                	test   %eax,%eax
 806d230:	0f 84 39 00 00 00    	je     806d26f <decl0+0xaf2>
 806d236:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 806d23d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806d244:	00 00 00 
 806d247:	48 01 c8             	add    %rcx,%rax
 806d24a:	48 8b 08             	mov    (%rax),%rcx
 806d24d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806d254:	00 00 00 
 806d257:	48 39 c1             	cmp    %rax,%rcx
 806d25a:	b8 00 00 00 00       	mov    $0x0,%eax
 806d25f:	0f 95 c0             	setne  %al
 806d262:	85 c0                	test   %eax,%eax
 806d264:	0f 84 05 00 00 00    	je     806d26f <decl0+0xaf2>
 806d26a:	e9 14 00 00 00       	jmpq   806d283 <decl0+0xb06>
 806d26f:	48 8d 05 8c f1 01 00 	lea    0x1f18c(%rip),%rax        # 808c402 <L.238>
 806d276:	48 89 c7             	mov    %rax,%rdi
 806d279:	b8 00 00 00 00       	mov    $0x0,%eax
 806d27e:	e8 44 04 fe ff       	callq  804d6c7 <tcc_error>
 806d283:	48 8b 05 0e 0c 02 00 	mov    0x20c0e(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806d28a:	48 8b 00             	mov    (%rax),%rax
 806d28d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806d294:	00 00 00 
 806d297:	48 01 c8             	add    %rcx,%rax
 806d29a:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
 806d2a1:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806d2a8:	00 00 00 
 806d2ab:	48 01 d1             	add    %rdx,%rcx
 806d2ae:	48 8b 11             	mov    (%rcx),%rdx
 806d2b1:	48 c1 e2 04          	shl    $0x4,%rdx
 806d2b5:	48 8b 08             	mov    (%rax),%rcx
 806d2b8:	48 89 d0             	mov    %rdx,%rax
 806d2bb:	48 01 c1             	add    %rax,%rcx
 806d2be:	48 89 8d a0 fe ff ff 	mov    %rcx,-0x160(%rbp)
 806d2c5:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
 806d2cc:	48 b9 0e 00 00 00 00 	movabs $0xe,%rcx
 806d2d3:	00 00 00 
 806d2d6:	48 01 c8             	add    %rcx,%rax
 806d2d9:	0f b7 08             	movzwl (%rax),%ecx
 806d2dc:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
 806d2e2:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
 806d2e9:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806d2f0:	00 00 00 
 806d2f3:	48 01 c8             	add    %rcx,%rax
 806d2f6:	8b 08                	mov    (%rax),%ecx
 806d2f8:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
 806d2ff:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806d306:	00 00 00 
 806d309:	48 01 d0             	add    %rdx,%rax
 806d30c:	8b 10                	mov    (%rax),%edx
 806d30e:	b8 00 00 00 00       	mov    $0x0,%eax
 806d313:	49 89 c0             	mov    %rax,%r8
 806d316:	48 89 d0             	mov    %rdx,%rax
 806d319:	49 89 c3             	mov    %rax,%r11
 806d31c:	48 89 c8             	mov    %rcx,%rax
 806d31f:	49 89 c2             	mov    %rax,%r10
 806d322:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
 806d329:	48 89 c6             	mov    %rax,%rsi
 806d32c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806d330:	48 89 c7             	mov    %rax,%rdi
 806d333:	4c 89 d2             	mov    %r10,%rdx
 806d336:	4c 89 d9             	mov    %r11,%rcx
 806d339:	b8 00 00 00 00       	mov    $0x0,%eax
 806d33e:	e8 19 f7 fd ff       	callq  804ca5c <put_extern_sym2>
 806d343:	e9 92 00 00 00       	jmpq   806d3da <decl0+0xc5d>
 806d348:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806d34b:	81 e0 00 01 00 00    	and    $0x100,%eax
 806d351:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806d354:	48 09 c1             	or     %rax,%rcx
 806d357:	89 4d d0             	mov    %ecx,-0x30(%rbp)
 806d35a:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806d35d:	81 e0 00 01 00 00    	and    $0x100,%eax
 806d363:	85 c0                	test   %eax,%eax
 806d365:	0f 84 0e 00 00 00    	je     806d379 <decl0+0xbfc>
 806d36b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806d36e:	83 c8 30             	or     $0x30,%eax
 806d371:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806d374:	e9 0c 00 00 00       	jmpq   806d385 <decl0+0xc08>
 806d379:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806d37c:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 806d37f:	48 09 c8             	or     %rcx,%rax
 806d382:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806d385:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806d388:	85 c0                	test   %eax,%eax
 806d38a:	0f 84 0a 00 00 00    	je     806d39a <decl0+0xc1d>
 806d390:	b8 00 00 00 00       	mov    $0x0,%eax
 806d395:	e8 30 b3 fe ff       	callq  80586ca <next>
 806d39a:	50                   	push   %rax
 806d39b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d39e:	50                   	push   %rax
 806d39f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806d3a3:	49 89 c1             	mov    %rax,%r9
 806d3a6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806d3a9:	49 89 c0             	mov    %rax,%r8
 806d3ac:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806d3af:	49 89 c3             	mov    %rax,%r11
 806d3b2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806d3b5:	49 89 c2             	mov    %rax,%r10
 806d3b8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 806d3bc:	48 89 c6             	mov    %rax,%rsi
 806d3bf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 806d3c3:	48 89 c7             	mov    %rax,%rdi
 806d3c6:	4c 89 d2             	mov    %r10,%rdx
 806d3c9:	4c 89 d9             	mov    %r11,%rcx
 806d3cc:	b8 00 00 00 00       	mov    $0x0,%eax
 806d3d1:	e8 43 dd ff ff       	callq  806b119 <decl_initializer_alloc>
 806d3d6:	48 83 c4 10          	add    $0x10,%rsp
 806d3da:	48 8b 05 47 0b 02 00 	mov    0x20b47(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 806d3e1:	8b 00                	mov    (%rax),%eax
 806d3e3:	83 f8 2c             	cmp    $0x2c,%eax
 806d3e6:	0f 84 2c 00 00 00    	je     806d418 <decl0+0xc9b>
 806d3ec:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806d3ef:	85 c0                	test   %eax,%eax
 806d3f1:	0f 84 0a 00 00 00    	je     806d401 <decl0+0xc84>
 806d3f7:	b8 01 00 00 00       	mov    $0x1,%eax
 806d3fc:	e9 52 00 00 00       	jmpq   806d453 <decl0+0xcd6>
 806d401:	b8 3b 00 00 00       	mov    $0x3b,%eax
 806d406:	48 89 c7             	mov    %rax,%rdi
 806d409:	b8 00 00 00 00       	mov    $0x0,%eax
 806d40e:	e8 d0 3c fe ff       	callq  80510e3 <skip>
 806d413:	e9 2c 00 00 00       	jmpq   806d444 <decl0+0xcc7>
 806d418:	b8 00 00 00 00       	mov    $0x0,%eax
 806d41d:	e8 a8 b2 fe ff       	callq  80586ca <next>
 806d422:	b8 00 00 00 00       	mov    $0x0,%eax
 806d427:	48 89 c1             	mov    %rax,%rcx
 806d42a:	83 e1 1f             	and    $0x1f,%ecx
 806d42d:	c1 e1 03             	shl    $0x3,%ecx
 806d430:	8b 55 a0             	mov    -0x60(%rbp),%edx
 806d433:	81 e2 07 ff ff ff    	and    $0xffffff07,%edx
 806d439:	48 09 d1             	or     %rdx,%rcx
 806d43c:	89 4d a0             	mov    %ecx,-0x60(%rbp)
 806d43f:	e9 7d f4 ff ff       	jmpq   806c8c1 <decl0+0x144>
 806d444:	e9 47 f3 ff ff       	jmpq   806c790 <decl0+0x13>
 806d449:	b8 00 00 00 00       	mov    $0x0,%eax
 806d44e:	e9 00 00 00 00       	jmpq   806d453 <decl0+0xcd6>
 806d453:	c9                   	leaveq 
 806d454:	c3                   	retq   

000000000806d455 <decl>:
 806d455:	55                   	push   %rbp
 806d456:	48 89 e5             	mov    %rsp,%rbp
 806d459:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d464:	b8 00 00 00 00       	mov    $0x0,%eax
 806d469:	48 89 c6             	mov    %rax,%rsi
 806d46c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d46f:	48 89 c7             	mov    %rax,%rdi
 806d472:	b8 00 00 00 00       	mov    $0x0,%eax
 806d477:	e8 01 f3 ff ff       	callq  806c77d <decl0>
 806d47c:	c9                   	leaveq 
 806d47d:	c3                   	retq   

000000000806d47e <convert_parameter_type>:
 806d47e:	55                   	push   %rbp
 806d47f:	48 89 e5             	mov    %rsp,%rbp
 806d482:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d489:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d48d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d491:	8b 08                	mov    (%rax),%ecx
 806d493:	81 e1 ff e7 ff ff    	and    $0xffffe7ff,%ecx
 806d499:	89 08                	mov    %ecx,(%rax)
 806d49b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d49f:	8b 08                	mov    (%rax),%ecx
 806d4a1:	83 e1 df             	and    $0xffffffdf,%ecx
 806d4a4:	89 08                	mov    %ecx,(%rax)
 806d4a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d4aa:	8b 08                	mov    (%rax),%ecx
 806d4ac:	83 e1 0f             	and    $0xf,%ecx
 806d4af:	83 f9 06             	cmp    $0x6,%ecx
 806d4b2:	0f 85 11 00 00 00    	jne    806d4c9 <convert_parameter_type+0x4b>
 806d4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d4bc:	48 89 c7             	mov    %rax,%rdi
 806d4bf:	b8 00 00 00 00       	mov    $0x0,%eax
 806d4c4:	e8 25 3c ff ff       	callq  80610ee <mk_pointer>
 806d4c9:	c9                   	leaveq 
 806d4ca:	c3                   	retq   

000000000806d4cb <is_integer_btype>:
 806d4cb:	55                   	push   %rbp
 806d4cc:	48 89 e5             	mov    %rsp,%rbp
 806d4cf:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d4d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d4da:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d4dd:	83 f8 01             	cmp    $0x1,%eax
 806d4e0:	0f 84 2b 00 00 00    	je     806d511 <is_integer_btype+0x46>
 806d4e6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d4e9:	83 f8 02             	cmp    $0x2,%eax
 806d4ec:	0f 84 1f 00 00 00    	je     806d511 <is_integer_btype+0x46>
 806d4f2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d4f5:	83 f8 00             	cmp    $0x0,%eax
 806d4f8:	0f 84 13 00 00 00    	je     806d511 <is_integer_btype+0x46>
 806d4fe:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d501:	83 f8 0c             	cmp    $0xc,%eax
 806d504:	0f 84 07 00 00 00    	je     806d511 <is_integer_btype+0x46>
 806d50a:	b8 00 00 00 00       	mov    $0x0,%eax
 806d50f:	eb 05                	jmp    806d516 <is_integer_btype+0x4b>
 806d511:	b8 01 00 00 00       	mov    $0x1,%eax
 806d516:	e9 00 00 00 00       	jmpq   806d51b <is_integer_btype+0x50>
 806d51b:	c9                   	leaveq 
 806d51c:	c3                   	retq   

000000000806d51d <is_null_pointer>:
 806d51d:	55                   	push   %rbp
 806d51e:	48 89 e5             	mov    %rsp,%rbp
 806d521:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d52c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d530:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806d537:	00 00 00 
 806d53a:	48 01 c8             	add    %rcx,%rax
 806d53d:	0f b7 08             	movzwl (%rax),%ecx
 806d540:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 806d546:	83 f9 30             	cmp    $0x30,%ecx
 806d549:	0f 84 0a 00 00 00    	je     806d559 <is_null_pointer+0x3c>
 806d54f:	b8 00 00 00 00       	mov    $0x0,%eax
 806d554:	e9 c3 00 00 00       	jmpq   806d61c <is_null_pointer+0xff>
 806d559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d55d:	8b 08                	mov    (%rax),%ecx
 806d55f:	83 e1 0f             	and    $0xf,%ecx
 806d562:	83 f9 00             	cmp    $0x0,%ecx
 806d565:	0f 85 21 00 00 00    	jne    806d58c <is_null_pointer+0x6f>
 806d56b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d56f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806d576:	00 00 00 
 806d579:	48 01 c8             	add    %rcx,%rax
 806d57c:	8b 08                	mov    (%rax),%ecx
 806d57e:	83 f9 00             	cmp    $0x0,%ecx
 806d581:	0f 85 05 00 00 00    	jne    806d58c <is_null_pointer+0x6f>
 806d587:	e9 86 00 00 00       	jmpq   806d612 <is_null_pointer+0xf5>
 806d58c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d590:	8b 08                	mov    (%rax),%ecx
 806d592:	83 e1 0f             	and    $0xf,%ecx
 806d595:	83 f9 0c             	cmp    $0xc,%ecx
 806d598:	0f 85 2c 00 00 00    	jne    806d5ca <is_null_pointer+0xad>
 806d59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d5a2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806d5a9:	00 00 00 
 806d5ac:	48 01 c8             	add    %rcx,%rax
 806d5af:	48 8b 08             	mov    (%rax),%rcx
 806d5b2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806d5b9:	00 00 00 
 806d5bc:	48 39 c1             	cmp    %rax,%rcx
 806d5bf:	0f 85 05 00 00 00    	jne    806d5ca <is_null_pointer+0xad>
 806d5c5:	e9 48 00 00 00       	jmpq   806d612 <is_null_pointer+0xf5>
 806d5ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d5ce:	8b 08                	mov    (%rax),%ecx
 806d5d0:	83 e1 0f             	and    $0xf,%ecx
 806d5d3:	83 f9 04             	cmp    $0x4,%ecx
 806d5d6:	0f 85 2f 00 00 00    	jne    806d60b <is_null_pointer+0xee>
 806d5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d5e0:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806d5e7:	00 00 00 
 806d5ea:	48 01 c8             	add    %rcx,%rax
 806d5ed:	48 8b 08             	mov    (%rax),%rcx
 806d5f0:	48 89 c8             	mov    %rcx,%rax
 806d5f3:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806d5fa:	00 00 00 
 806d5fd:	48 39 c8             	cmp    %rcx,%rax
 806d600:	0f 85 05 00 00 00    	jne    806d60b <is_null_pointer+0xee>
 806d606:	e9 07 00 00 00       	jmpq   806d612 <is_null_pointer+0xf5>
 806d60b:	b8 00 00 00 00       	mov    $0x0,%eax
 806d610:	eb 05                	jmp    806d617 <is_null_pointer+0xfa>
 806d612:	b8 01 00 00 00       	mov    $0x1,%eax
 806d617:	e9 00 00 00 00       	jmpq   806d61c <is_null_pointer+0xff>
 806d61c:	c9                   	leaveq 
 806d61d:	c3                   	retq   

000000000806d61e <sym_malloc>:
 806d61e:	55                   	push   %rbp
 806d61f:	48 89 e5             	mov    %rsp,%rbp
 806d622:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d629:	48 8b 05 38 09 02 00 	mov    0x20938(%rip),%rax        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 806d630:	48 8b 00             	mov    (%rax),%rax
 806d633:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 806d637:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d63b:	85 c0                	test   %eax,%eax
 806d63d:	0f 84 05 00 00 00    	je     806d648 <sym_malloc+0x2a>
 806d643:	e9 0e 00 00 00       	jmpq   806d656 <sym_malloc+0x38>
 806d648:	b8 00 00 00 00       	mov    $0x0,%eax
 806d64d:	e8 af e6 fe ff       	callq  805bd01 <__sym_malloc>
 806d652:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 806d656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d65a:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806d661:	00 00 00 
 806d664:	48 01 c8             	add    %rcx,%rax
 806d667:	48 8b 08             	mov    (%rax),%rcx
 806d66a:	4c 8b 1d f7 08 02 00 	mov    0x208f7(%rip),%r11        # 808df68 <_GLOBAL_OFFSET_TABLE_+0x2e8>
 806d671:	49 89 0b             	mov    %rcx,(%r11)
 806d674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d678:	e9 00 00 00 00       	jmpq   806d67d <sym_malloc+0x5f>
 806d67d:	c9                   	leaveq 
 806d67e:	c3                   	retq   

000000000806d67f <pointed_type>:
 806d67f:	55                   	push   %rbp
 806d680:	48 89 e5             	mov    %rsp,%rbp
 806d683:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d68a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d68e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d692:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806d699:	00 00 00 
 806d69c:	48 01 c8             	add    %rcx,%rax
 806d69f:	48 8b 08             	mov    (%rax),%rcx
 806d6a2:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 806d6a9:	00 00 00 
 806d6ac:	48 01 c1             	add    %rax,%rcx
 806d6af:	48 89 c8             	mov    %rcx,%rax
 806d6b2:	e9 00 00 00 00       	jmpq   806d6b7 <pointed_type+0x38>
 806d6b7:	c9                   	leaveq 
 806d6b8:	c3                   	retq   
 806d6b9:	00 00                	add    %al,(%rax)
 806d6bb:	00 00                	add    %al,(%rax)
 806d6bd:	00 00                	add    %al,(%rax)
	...

000000000806d6c0 <__bswap_16>:
 806d6c0:	55                   	push   %rbp
 806d6c1:	48 89 e5             	mov    %rsp,%rbp
 806d6c4:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d6cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d6cf:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d6d2:	c1 f8 08             	sar    $0x8,%eax
 806d6d5:	81 e0 ff 00 00 00    	and    $0xff,%eax
 806d6db:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 806d6de:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 806d6e4:	c1 e1 08             	shl    $0x8,%ecx
 806d6e7:	48 09 c8             	or     %rcx,%rax
 806d6ea:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 806d6f0:	e9 00 00 00 00       	jmpq   806d6f5 <__bswap_16+0x35>
 806d6f5:	c9                   	leaveq 
 806d6f6:	c3                   	retq   

000000000806d6f7 <__bswap_32>:
 806d6f7:	55                   	push   %rbp
 806d6f8:	48 89 e5             	mov    %rsp,%rbp
 806d6fb:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d706:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806d709:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 806d70f:	c1 e8 18             	shr    $0x18,%eax
 806d712:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 806d715:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 806d71b:	c1 e9 08             	shr    $0x8,%ecx
 806d71e:	48 09 c8             	or     %rcx,%rax
 806d721:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 806d724:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 806d72a:	c1 e1 08             	shl    $0x8,%ecx
 806d72d:	48 09 c8             	or     %rcx,%rax
 806d730:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 806d733:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 806d739:	c1 e1 18             	shl    $0x18,%ecx
 806d73c:	48 09 c8             	or     %rcx,%rax
 806d73f:	e9 00 00 00 00       	jmpq   806d744 <__bswap_32+0x4d>
 806d744:	c9                   	leaveq 
 806d745:	c3                   	retq   

000000000806d746 <__bswap_64>:
 806d746:	55                   	push   %rbp
 806d747:	48 89 e5             	mov    %rsp,%rbp
 806d74a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806d751:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d759:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 806d760:	00 00 ff 
 806d763:	48 21 c8             	and    %rcx,%rax
 806d766:	48 89 c1             	mov    %rax,%rcx
 806d769:	48 c1 e9 38          	shr    $0x38,%rcx
 806d76d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d771:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 806d778:	00 ff 00 
 806d77b:	48 21 d0             	and    %rdx,%rax
 806d77e:	48 89 c2             	mov    %rax,%rdx
 806d781:	48 c1 ea 28          	shr    $0x28,%rdx
 806d785:	48 89 c8             	mov    %rcx,%rax
 806d788:	48 89 d1             	mov    %rdx,%rcx
 806d78b:	48 09 c8             	or     %rcx,%rax
 806d78e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806d792:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 806d799:	ff 00 00 
 806d79c:	48 21 d1             	and    %rdx,%rcx
 806d79f:	48 89 ca             	mov    %rcx,%rdx
 806d7a2:	48 c1 ea 18          	shr    $0x18,%rdx
 806d7a6:	48 89 c1             	mov    %rax,%rcx
 806d7a9:	48 89 d0             	mov    %rdx,%rax
 806d7ac:	48 09 c1             	or     %rax,%rcx
 806d7af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d7b3:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 806d7ba:	00 00 00 
 806d7bd:	48 21 d0             	and    %rdx,%rax
 806d7c0:	48 89 c2             	mov    %rax,%rdx
 806d7c3:	48 c1 ea 08          	shr    $0x8,%rdx
 806d7c7:	48 89 c8             	mov    %rcx,%rax
 806d7ca:	48 89 d1             	mov    %rdx,%rcx
 806d7cd:	48 09 c8             	or     %rcx,%rax
 806d7d0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806d7d4:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 806d7db:	00 00 00 
 806d7de:	48 21 d1             	and    %rdx,%rcx
 806d7e1:	48 89 ca             	mov    %rcx,%rdx
 806d7e4:	48 c1 e2 08          	shl    $0x8,%rdx
 806d7e8:	48 89 c1             	mov    %rax,%rcx
 806d7eb:	48 89 d0             	mov    %rdx,%rax
 806d7ee:	48 09 c1             	or     %rax,%rcx
 806d7f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d7f5:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 806d7fc:	00 00 00 
 806d7ff:	48 21 d0             	and    %rdx,%rax
 806d802:	48 89 c2             	mov    %rax,%rdx
 806d805:	48 c1 e2 18          	shl    $0x18,%rdx
 806d809:	48 89 c8             	mov    %rcx,%rax
 806d80c:	48 89 d1             	mov    %rdx,%rcx
 806d80f:	48 09 c8             	or     %rcx,%rax
 806d812:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806d816:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 806d81d:	00 00 00 
 806d820:	48 21 d1             	and    %rdx,%rcx
 806d823:	48 89 ca             	mov    %rcx,%rdx
 806d826:	48 c1 e2 28          	shl    $0x28,%rdx
 806d82a:	48 89 c1             	mov    %rax,%rcx
 806d82d:	48 89 d0             	mov    %rdx,%rax
 806d830:	48 09 c1             	or     %rax,%rcx
 806d833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d837:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 806d83e:	00 00 00 
 806d841:	48 21 d0             	and    %rdx,%rax
 806d844:	48 89 c2             	mov    %rax,%rdx
 806d847:	48 c1 e2 38          	shl    $0x38,%rdx
 806d84b:	48 89 c8             	mov    %rcx,%rax
 806d84e:	48 89 d1             	mov    %rdx,%rcx
 806d851:	48 09 c8             	or     %rcx,%rax
 806d854:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 806d858:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806d85c:	e9 00 00 00 00       	jmpq   806d861 <__bswap_64+0x11b>
 806d861:	c9                   	leaveq 
 806d862:	c3                   	retq   

000000000806d863 <put_elf_str>:
 806d863:	55                   	push   %rbp
 806d864:	48 89 e5             	mov    %rsp,%rbp
 806d867:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806d86e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d872:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806d876:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806d87a:	48 89 c7             	mov    %rax,%rdi
 806d87d:	b8 00 00 00 00       	mov    $0x0,%eax
 806d882:	e8 59 9a 01 00       	callq  80872e0 <strlen>
 806d887:	83 c0 01             	add    $0x1,%eax
 806d88a:	89 45 e8             	mov    %eax,-0x18(%rbp)
 806d88d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d891:	8b 08                	mov    (%rax),%ecx
 806d893:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 806d896:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806d899:	48 63 c0             	movslq %eax,%rax
 806d89c:	48 89 c1             	mov    %rax,%rcx
 806d89f:	48 89 ce             	mov    %rcx,%rsi
 806d8a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d8a6:	48 89 c7             	mov    %rax,%rdi
 806d8a9:	b8 00 00 00 00       	mov    $0x0,%eax
 806d8ae:	e8 b7 ef fd ff       	callq  804c86a <section_ptr_add>
 806d8b3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806d8b7:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806d8ba:	49 89 c2             	mov    %rax,%r10
 806d8bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806d8c1:	48 89 c6             	mov    %rax,%rsi
 806d8c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806d8c8:	48 89 c7             	mov    %rax,%rdi
 806d8cb:	4c 89 d2             	mov    %r10,%rdx
 806d8ce:	b8 00 00 00 00       	mov    $0x0,%eax
 806d8d3:	e8 98 93 01 00       	callq  8086c70 <memcpy>
 806d8d8:	8b 45 ec             	mov    -0x14(%rbp),%eax
 806d8db:	e9 00 00 00 00       	jmpq   806d8e0 <put_elf_str+0x7d>
 806d8e0:	c9                   	leaveq 
 806d8e1:	c3                   	retq   

000000000806d8e2 <elf_hash>:
 806d8e2:	55                   	push   %rbp
 806d8e3:	48 89 e5             	mov    %rsp,%rbp
 806d8e6:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806d8ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d8f1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806d8f8:	00 00 00 
 806d8fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 806d8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d903:	0f b6 08             	movzbl (%rax),%ecx
 806d906:	85 c9                	test   %ecx,%ecx
 806d908:	0f 84 b4 00 00 00    	je     806d9c2 <elf_hash+0xe0>
 806d90e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806d912:	48 c1 e0 04          	shl    $0x4,%rax
 806d916:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806d91a:	48 89 ca             	mov    %rcx,%rdx
 806d91d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806d921:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 806d928:	00 00 00 
 806d92b:	48 01 c1             	add    %rax,%rcx
 806d92e:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 806d932:	0f b6 02             	movzbl (%rdx),%eax
 806d935:	48 63 c0             	movslq %eax,%rax
 806d938:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806d93c:	48 89 c2             	mov    %rax,%rdx
 806d93f:	48 01 d1             	add    %rdx,%rcx
 806d942:	48 89 c8             	mov    %rcx,%rax
 806d945:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 806d949:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806d94d:	48 b9 00 00 00 f0 00 	movabs $0xf0000000,%rcx
 806d954:	00 00 00 
 806d957:	48 21 c8             	and    %rcx,%rax
 806d95a:	48 89 c1             	mov    %rax,%rcx
 806d95d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806d961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806d965:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806d96c:	00 00 00 
 806d96f:	48 39 c8             	cmp    %rcx,%rax
 806d972:	b8 00 00 00 00       	mov    $0x0,%eax
 806d977:	0f 95 c0             	setne  %al
 806d97a:	85 c0                	test   %eax,%eax
 806d97c:	0f 84 19 00 00 00    	je     806d99b <elf_hash+0xb9>
 806d982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806d986:	48 c1 e8 18          	shr    $0x18,%rax
 806d98a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806d98e:	48 89 c2             	mov    %rax,%rdx
 806d991:	48 31 d1             	xor    %rdx,%rcx
 806d994:	48 89 c8             	mov    %rcx,%rax
 806d997:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 806d99b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806d99f:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rcx
 806d9a6:	ff ff ff 
 806d9a9:	48 31 c8             	xor    %rcx,%rax
 806d9ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806d9b0:	48 89 c2             	mov    %rax,%rdx
 806d9b3:	48 21 d1             	and    %rdx,%rcx
 806d9b6:	48 89 c8             	mov    %rcx,%rax
 806d9b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 806d9bd:	e9 3d ff ff ff       	jmpq   806d8ff <elf_hash+0x1d>
 806d9c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806d9c6:	e9 00 00 00 00       	jmpq   806d9cb <elf_hash+0xe9>
 806d9cb:	c9                   	leaveq 
 806d9cc:	c3                   	retq   

000000000806d9cd <rebuild_hash>:
 806d9cd:	55                   	push   %rbp
 806d9ce:	48 89 e5             	mov    %rsp,%rbp
 806d9d1:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 806d9d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806d9dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806d9e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806d9e4:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806d9eb:	00 00 00 
 806d9ee:	48 01 c8             	add    %rcx,%rax
 806d9f1:	48 8b 08             	mov    (%rax),%rcx
 806d9f4:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 806d9fb:	00 00 00 
 806d9fe:	48 01 c1             	add    %rax,%rcx
 806da01:	48 8b 01             	mov    (%rcx),%rax
 806da04:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 806da08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806da0c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806da10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806da14:	48 8b 00             	mov    (%rax),%rax
 806da17:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806da1e:	00 00 00 
 806da21:	31 d2                	xor    %edx,%edx
 806da23:	f7 f1                	div    %ecx
 806da25:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 806da28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806da2c:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 806da33:	00 00 00 
 806da36:	48 01 c8             	add    %rcx,%rax
 806da39:	48 8b 08             	mov    (%rax),%rcx
 806da3c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806da43:	00 00 00 
 806da46:	48 89 01             	mov    %rax,(%rcx)
 806da49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806da4d:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 806da54:	00 00 00 
 806da57:	48 01 c8             	add    %rcx,%rax
 806da5a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 806da5d:	83 c1 02             	add    $0x2,%ecx
 806da60:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 806da63:	48 01 d1             	add    %rdx,%rcx
 806da66:	c1 e1 02             	shl    $0x2,%ecx
 806da69:	48 89 ca             	mov    %rcx,%rdx
 806da6c:	48 89 d6             	mov    %rdx,%rsi
 806da6f:	48 8b 08             	mov    (%rax),%rcx
 806da72:	48 89 cf             	mov    %rcx,%rdi
 806da75:	b8 00 00 00 00       	mov    $0x0,%eax
 806da7a:	e8 eb ed fd ff       	callq  804c86a <section_ptr_add>
 806da7f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806da83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806da87:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 806da8a:	89 08                	mov    %ecx,(%rax)
 806da8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806da90:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806da97:	00 00 00 
 806da9a:	48 01 c8             	add    %rcx,%rax
 806da9d:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 806daa0:	89 08                	mov    %ecx,(%rax)
 806daa2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806daa6:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806daad:	00 00 00 
 806dab0:	48 01 c8             	add    %rcx,%rax
 806dab3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806dab7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806dabb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 806dabf:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806dac2:	83 c0 01             	add    $0x1,%eax
 806dac5:	c1 e0 02             	shl    $0x2,%eax
 806dac8:	49 89 c2             	mov    %rax,%r10
 806dacb:	b8 00 00 00 00       	mov    $0x0,%eax
 806dad0:	48 89 c6             	mov    %rax,%rsi
 806dad3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806dad7:	48 89 c7             	mov    %rax,%rdi
 806dada:	4c 89 d2             	mov    %r10,%rdx
 806dadd:	b8 00 00 00 00       	mov    $0x0,%eax
 806dae2:	e8 c9 93 01 00       	callq  8086eb0 <memset>
 806dae7:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806daea:	83 c0 01             	add    $0x1,%eax
 806daed:	48 89 c1             	mov    %rax,%rcx
 806daf0:	48 c1 e1 02          	shl    $0x2,%rcx
 806daf4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806daf8:	48 89 ca             	mov    %rcx,%rdx
 806dafb:	48 01 d0             	add    %rdx,%rax
 806dafe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806db02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806db06:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806db0d:	00 00 00 
 806db10:	48 01 c8             	add    %rcx,%rax
 806db13:	48 8b 08             	mov    (%rax),%rcx
 806db16:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806db1d:	00 00 00 
 806db20:	48 01 c1             	add    %rax,%rcx
 806db23:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806db27:	b8 01 00 00 00       	mov    $0x1,%eax
 806db2c:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806db2f:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806db32:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 806db35:	39 c8                	cmp    %ecx,%eax
 806db37:	0f 8d ee 00 00 00    	jge    806dc2b <rebuild_hash+0x25e>
 806db3d:	e9 0e 00 00 00       	jmpq   806db50 <rebuild_hash+0x183>
 806db42:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806db45:	48 89 c1             	mov    %rax,%rcx
 806db48:	83 c0 01             	add    $0x1,%eax
 806db4b:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806db4e:	eb df                	jmp    806db2f <rebuild_hash+0x162>
 806db50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806db54:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806db5b:	00 00 00 
 806db5e:	48 01 c8             	add    %rcx,%rax
 806db61:	0f b6 08             	movzbl (%rax),%ecx
 806db64:	c1 f9 04             	sar    $0x4,%ecx
 806db67:	83 f9 00             	cmp    $0x0,%ecx
 806db6a:	0f 84 7b 00 00 00    	je     806dbeb <rebuild_hash+0x21e>
 806db70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806db74:	8b 08                	mov    (%rax),%ecx
 806db76:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806db7a:	48 89 ca             	mov    %rcx,%rdx
 806db7d:	48 01 d0             	add    %rdx,%rax
 806db80:	48 89 c7             	mov    %rax,%rdi
 806db83:	b8 00 00 00 00       	mov    $0x0,%eax
 806db88:	e8 55 fd ff ff       	callq  806d8e2 <elf_hash>
 806db8d:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 806db90:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 806db94:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806db98:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 806db9c:	31 d2                	xor    %edx,%edx
 806db9e:	f7 f1                	div    %ecx
 806dba0:	89 55 cc             	mov    %edx,-0x34(%rbp)
 806dba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806dba7:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806dbaa:	48 63 c9             	movslq %ecx,%rcx
 806dbad:	48 89 ca             	mov    %rcx,%rdx
 806dbb0:	48 c1 e2 02          	shl    $0x2,%rdx
 806dbb4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 806dbb8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 806dbbc:	48 89 d0             	mov    %rdx,%rax
 806dbbf:	48 01 c1             	add    %rax,%rcx
 806dbc2:	8b 01                	mov    (%rcx),%eax
 806dbc4:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 806dbc8:	89 01                	mov    %eax,(%rcx)
 806dbca:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806dbcd:	48 63 c0             	movslq %eax,%rax
 806dbd0:	48 89 c1             	mov    %rax,%rcx
 806dbd3:	48 c1 e1 02          	shl    $0x2,%rcx
 806dbd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806dbdb:	48 89 ca             	mov    %rcx,%rdx
 806dbde:	48 01 d0             	add    %rdx,%rax
 806dbe1:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806dbe4:	89 08                	mov    %ecx,(%rax)
 806dbe6:	e9 0b 00 00 00       	jmpq   806dbf6 <rebuild_hash+0x229>
 806dbeb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806dbef:	b9 00 00 00 00       	mov    $0x0,%ecx
 806dbf4:	89 08                	mov    %ecx,(%rax)
 806dbf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806dbfa:	48 89 c1             	mov    %rax,%rcx
 806dbfd:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 806dc04:	00 00 00 
 806dc07:	48 01 d0             	add    %rdx,%rax
 806dc0a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806dc0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806dc12:	48 89 c1             	mov    %rax,%rcx
 806dc15:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806dc1c:	00 00 00 
 806dc1f:	48 01 d0             	add    %rdx,%rax
 806dc22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806dc26:	e9 17 ff ff ff       	jmpq   806db42 <rebuild_hash+0x175>
 806dc2b:	c9                   	leaveq 
 806dc2c:	c3                   	retq   

000000000806dc2d <put_elf_sym>:
 806dc2d:	55                   	push   %rbp
 806dc2e:	48 89 e5             	mov    %rsp,%rbp
 806dc31:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 806dc38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806dc3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806dc40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806dc44:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806dc48:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806dc4c:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 806dc50:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806dc57:	00 00 00 
 806dc5a:	48 89 c6             	mov    %rax,%rsi
 806dc5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806dc61:	48 89 c7             	mov    %rax,%rdi
 806dc64:	b8 00 00 00 00       	mov    $0x0,%eax
 806dc69:	e8 fc eb fd ff       	callq  804c86a <section_ptr_add>
 806dc6e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806dc72:	48 8b 45 10          	mov    0x10(%rbp),%rax
 806dc76:	85 c0                	test   %eax,%eax
 806dc78:	0f 84 30 00 00 00    	je     806dcae <put_elf_sym+0x81>
 806dc7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806dc82:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806dc89:	00 00 00 
 806dc8c:	48 01 c8             	add    %rcx,%rax
 806dc8f:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
 806dc93:	48 89 ce             	mov    %rcx,%rsi
 806dc96:	48 8b 08             	mov    (%rax),%rcx
 806dc99:	48 89 cf             	mov    %rcx,%rdi
 806dc9c:	b8 00 00 00 00       	mov    $0x0,%eax
 806dca1:	e8 bd fb ff ff       	callq  806d863 <put_elf_str>
 806dca6:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806dca9:	e9 08 00 00 00       	jmpq   806dcb6 <put_elf_sym+0x89>
 806dcae:	b8 00 00 00 00       	mov    $0x0,%eax
 806dcb3:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806dcb6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806dcba:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 806dcbd:	89 08                	mov    %ecx,(%rax)
 806dcbf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806dcc3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806dcca:	00 00 00 
 806dccd:	48 01 c8             	add    %rcx,%rax
 806dcd0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806dcd4:	48 89 08             	mov    %rcx,(%rax)
 806dcd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806dcdb:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806dce2:	00 00 00 
 806dce5:	48 01 c8             	add    %rcx,%rax
 806dce8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806dcec:	48 89 08             	mov    %rcx,(%rax)
 806dcef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806dcf3:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806dcfa:	00 00 00 
 806dcfd:	48 01 c8             	add    %rcx,%rax
 806dd00:	0f b6 4d e0          	movzbl -0x20(%rbp),%ecx
 806dd04:	88 08                	mov    %cl,(%rax)
 806dd06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806dd0a:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 806dd11:	00 00 00 
 806dd14:	48 01 c8             	add    %rcx,%rax
 806dd17:	0f b6 4d d8          	movzbl -0x28(%rbp),%ecx
 806dd1b:	88 08                	mov    %cl,(%rax)
 806dd1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806dd21:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806dd28:	00 00 00 
 806dd2b:	48 01 c8             	add    %rcx,%rax
 806dd2e:	0f b7 4d d0          	movzwl -0x30(%rbp),%ecx
 806dd32:	66 89 08             	mov    %cx,(%rax)
 806dd35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806dd39:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806dd40:	00 00 00 
 806dd43:	48 01 c8             	add    %rcx,%rax
 806dd46:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806dd4a:	48 8b 10             	mov    (%rax),%rdx
 806dd4d:	48 29 d1             	sub    %rdx,%rcx
 806dd50:	48 89 c8             	mov    %rcx,%rax
 806dd53:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806dd5a:	00 00 00 
 806dd5d:	48 99                	cqto   
 806dd5f:	48 f7 f9             	idiv   %rcx
 806dd62:	48 89 c1             	mov    %rax,%rcx
 806dd65:	89 4d c8             	mov    %ecx,-0x38(%rbp)
 806dd68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806dd6c:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 806dd73:	00 00 00 
 806dd76:	48 01 c8             	add    %rcx,%rax
 806dd79:	48 8b 08             	mov    (%rax),%rcx
 806dd7c:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 806dd80:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806dd84:	85 c0                	test   %eax,%eax
 806dd86:	0f 84 67 01 00 00    	je     806def3 <put_elf_sym+0x2c6>
 806dd8c:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 806dd93:	00 00 00 
 806dd96:	48 89 c6             	mov    %rax,%rsi
 806dd99:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806dd9d:	48 89 c7             	mov    %rax,%rdi
 806dda0:	b8 00 00 00 00       	mov    $0x0,%eax
 806dda5:	e8 c0 ea fd ff       	callq  804c86a <section_ptr_add>
 806ddaa:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 806ddae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806ddb2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ddb9:	00 00 00 
 806ddbc:	48 01 c8             	add    %rcx,%rax
 806ddbf:	48 8b 08             	mov    (%rax),%rcx
 806ddc2:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 806ddc6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806ddc9:	81 e0 ff 00 00 00    	and    $0xff,%eax
 806ddcf:	c1 f8 04             	sar    $0x4,%eax
 806ddd2:	83 f8 00             	cmp    $0x0,%eax
 806ddd5:	0f 84 f2 00 00 00    	je     806decd <put_elf_sym+0x2a0>
 806dddb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806dddf:	8b 08                	mov    (%rax),%ecx
 806dde1:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
 806dde4:	48 8b 45 10          	mov    0x10(%rbp),%rax
 806dde8:	48 89 c7             	mov    %rax,%rdi
 806ddeb:	b8 00 00 00 00       	mov    $0x0,%eax
 806ddf0:	e8 ed fa ff ff       	callq  806d8e2 <elf_hash>
 806ddf5:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806ddf8:	48 63 c9             	movslq %ecx,%rcx
 806ddfb:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 806ddff:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 806de03:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 806de07:	31 d2                	xor    %edx,%edx
 806de09:	f7 f1                	div    %ecx
 806de0b:	89 55 c0             	mov    %edx,-0x40(%rbp)
 806de0e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 806de12:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 806de15:	83 c1 02             	add    $0x2,%ecx
 806de18:	48 63 c9             	movslq %ecx,%rcx
 806de1b:	48 89 ca             	mov    %rcx,%rdx
 806de1e:	48 c1 e2 02          	shl    $0x2,%rdx
 806de22:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 806de26:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 806de2a:	48 89 d0             	mov    %rdx,%rax
 806de2d:	48 01 c1             	add    %rax,%rcx
 806de30:	8b 01                	mov    (%rcx),%eax
 806de32:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 806de36:	89 01                	mov    %eax,(%rcx)
 806de38:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806de3b:	83 c0 02             	add    $0x2,%eax
 806de3e:	48 63 c0             	movslq %eax,%rax
 806de41:	48 89 c1             	mov    %rax,%rcx
 806de44:	48 c1 e1 02          	shl    $0x2,%rcx
 806de48:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806de4c:	48 89 ca             	mov    %rcx,%rdx
 806de4f:	48 01 d0             	add    %rdx,%rax
 806de52:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 806de55:	89 08                	mov    %ecx,(%rax)
 806de57:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806de5b:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806de62:	00 00 00 
 806de65:	48 01 c8             	add    %rcx,%rax
 806de68:	8b 08                	mov    (%rax),%ecx
 806de6a:	48 89 ca             	mov    %rcx,%rdx
 806de6d:	83 c1 01             	add    $0x1,%ecx
 806de70:	89 08                	mov    %ecx,(%rax)
 806de72:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806de76:	48 b9 50 00 00 00 00 	movabs $0x50,%rcx
 806de7d:	00 00 00 
 806de80:	48 01 c8             	add    %rcx,%rax
 806de83:	8b 08                	mov    (%rax),%ecx
 806de85:	48 89 ca             	mov    %rcx,%rdx
 806de88:	83 c1 01             	add    $0x1,%ecx
 806de8b:	89 08                	mov    %ecx,(%rax)
 806de8d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806de91:	48 b9 50 00 00 00 00 	movabs $0x50,%rcx
 806de98:	00 00 00 
 806de9b:	48 01 c8             	add    %rcx,%rax
 806de9e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806dea1:	c1 e1 01             	shl    $0x1,%ecx
 806dea4:	8b 10                	mov    (%rax),%edx
 806dea6:	39 ca                	cmp    %ecx,%edx
 806dea8:	0f 8e 1a 00 00 00    	jle    806dec8 <put_elf_sym+0x29b>
 806deae:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806deb1:	c1 e0 01             	shl    $0x1,%eax
 806deb4:	48 89 c6             	mov    %rax,%rsi
 806deb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806debb:	48 89 c7             	mov    %rax,%rdi
 806debe:	b8 00 00 00 00       	mov    $0x0,%eax
 806dec3:	e8 05 fb ff ff       	callq  806d9cd <rebuild_hash>
 806dec8:	e9 26 00 00 00       	jmpq   806def3 <put_elf_sym+0x2c6>
 806decd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 806ded1:	b9 00 00 00 00       	mov    $0x0,%ecx
 806ded6:	89 08                	mov    %ecx,(%rax)
 806ded8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806dedc:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806dee3:	00 00 00 
 806dee6:	48 01 c8             	add    %rcx,%rax
 806dee9:	8b 08                	mov    (%rax),%ecx
 806deeb:	48 89 ca             	mov    %rcx,%rdx
 806deee:	83 c1 01             	add    $0x1,%ecx
 806def1:	89 08                	mov    %ecx,(%rax)
 806def3:	8b 45 c8             	mov    -0x38(%rbp),%eax
 806def6:	e9 00 00 00 00       	jmpq   806defb <put_elf_sym+0x2ce>
 806defb:	c9                   	leaveq 
 806defc:	c3                   	retq   

000000000806defd <find_elf_sym>:
 806defd:	55                   	push   %rbp
 806defe:	48 89 e5             	mov    %rsp,%rbp
 806df01:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 806df08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806df0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806df10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806df14:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 806df1b:	00 00 00 
 806df1e:	48 01 c8             	add    %rcx,%rax
 806df21:	48 8b 08             	mov    (%rax),%rcx
 806df24:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806df28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806df2c:	85 c0                	test   %eax,%eax
 806df2e:	0f 84 05 00 00 00    	je     806df39 <find_elf_sym+0x3c>
 806df34:	e9 0a 00 00 00       	jmpq   806df43 <find_elf_sym+0x46>
 806df39:	b8 00 00 00 00       	mov    $0x0,%eax
 806df3e:	e9 58 01 00 00       	jmpq   806e09b <find_elf_sym+0x19e>
 806df43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806df47:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806df4e:	00 00 00 
 806df51:	48 01 c8             	add    %rcx,%rax
 806df54:	48 8b 08             	mov    (%rax),%rcx
 806df57:	8b 01                	mov    (%rcx),%eax
 806df59:	89 45 dc             	mov    %eax,-0x24(%rbp)
 806df5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806df60:	48 89 c7             	mov    %rax,%rdi
 806df63:	b8 00 00 00 00       	mov    $0x0,%eax
 806df68:	e8 75 f9 ff ff       	callq  806d8e2 <elf_hash>
 806df6d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806df70:	48 63 c9             	movslq %ecx,%rcx
 806df73:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 806df77:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 806df7b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806df7f:	31 d2                	xor    %edx,%edx
 806df81:	f7 f1                	div    %ecx
 806df83:	89 55 d4             	mov    %edx,-0x2c(%rbp)
 806df86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806df8a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806df91:	00 00 00 
 806df94:	48 01 c8             	add    %rcx,%rax
 806df97:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 806df9a:	83 c1 02             	add    $0x2,%ecx
 806df9d:	48 63 c9             	movslq %ecx,%rcx
 806dfa0:	48 89 ca             	mov    %rcx,%rdx
 806dfa3:	48 c1 e2 02          	shl    $0x2,%rdx
 806dfa7:	48 8b 08             	mov    (%rax),%rcx
 806dfaa:	48 89 d0             	mov    %rdx,%rax
 806dfad:	48 01 c1             	add    %rax,%rcx
 806dfb0:	8b 01                	mov    (%rcx),%eax
 806dfb2:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806dfb5:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806dfb8:	83 f8 00             	cmp    $0x0,%eax
 806dfbb:	0f 84 d0 00 00 00    	je     806e091 <find_elf_sym+0x194>
 806dfc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806dfc5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806dfcc:	00 00 00 
 806dfcf:	48 01 c8             	add    %rcx,%rax
 806dfd2:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 806dfd5:	48 63 c9             	movslq %ecx,%rcx
 806dfd8:	48 89 ca             	mov    %rcx,%rdx
 806dfdb:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806dfe2:	00 00 00 
 806dfe5:	48 0f af d1          	imul   %rcx,%rdx
 806dfe9:	48 8b 08             	mov    (%rax),%rcx
 806dfec:	48 89 d0             	mov    %rdx,%rax
 806dfef:	48 01 c1             	add    %rax,%rcx
 806dff2:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806dff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806dffa:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806e001:	00 00 00 
 806e004:	48 01 c8             	add    %rcx,%rax
 806e007:	48 8b 08             	mov    (%rax),%rcx
 806e00a:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 806e011:	00 00 00 
 806e014:	48 01 c1             	add    %rax,%rcx
 806e017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806e01b:	8b 10                	mov    (%rax),%edx
 806e01d:	48 8b 01             	mov    (%rcx),%rax
 806e020:	48 89 d1             	mov    %rdx,%rcx
 806e023:	48 01 c8             	add    %rcx,%rax
 806e026:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806e02a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e02e:	48 89 c6             	mov    %rax,%rsi
 806e031:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e035:	48 89 c7             	mov    %rax,%rdi
 806e038:	b8 00 00 00 00       	mov    $0x0,%eax
 806e03d:	e8 9e 91 01 00       	callq  80871e0 <strcmp>
 806e042:	85 c0                	test   %eax,%eax
 806e044:	0f 84 05 00 00 00    	je     806e04f <find_elf_sym+0x152>
 806e04a:	e9 08 00 00 00       	jmpq   806e057 <find_elf_sym+0x15a>
 806e04f:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806e052:	e9 44 00 00 00       	jmpq   806e09b <find_elf_sym+0x19e>
 806e057:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806e05b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806e062:	00 00 00 
 806e065:	48 01 c8             	add    %rcx,%rax
 806e068:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806e06b:	83 c1 02             	add    $0x2,%ecx
 806e06e:	8b 55 d8             	mov    -0x28(%rbp),%edx
 806e071:	48 01 d1             	add    %rdx,%rcx
 806e074:	48 63 c9             	movslq %ecx,%rcx
 806e077:	48 89 ca             	mov    %rcx,%rdx
 806e07a:	48 c1 e2 02          	shl    $0x2,%rdx
 806e07e:	48 8b 08             	mov    (%rax),%rcx
 806e081:	48 89 d0             	mov    %rdx,%rax
 806e084:	48 01 c1             	add    %rax,%rcx
 806e087:	8b 01                	mov    (%rcx),%eax
 806e089:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806e08c:	e9 24 ff ff ff       	jmpq   806dfb5 <find_elf_sym+0xb8>
 806e091:	b8 00 00 00 00       	mov    $0x0,%eax
 806e096:	e9 00 00 00 00       	jmpq   806e09b <find_elf_sym+0x19e>
 806e09b:	c9                   	leaveq 
 806e09c:	c3                   	retq   

000000000806e09d <get_elf_sym_addr>:
 806e09d:	55                   	push   %rbp
 806e09e:	48 89 e5             	mov    %rsp,%rbp
 806e0a1:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 806e0a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e0ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e0b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806e0b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e0b8:	48 b9 d0 00 00 00 00 	movabs $0xd0,%rcx
 806e0bf:	00 00 00 
 806e0c2:	48 01 c8             	add    %rcx,%rax
 806e0c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806e0c9:	48 89 ce             	mov    %rcx,%rsi
 806e0cc:	48 8b 08             	mov    (%rax),%rcx
 806e0cf:	48 89 cf             	mov    %rcx,%rdi
 806e0d2:	b8 00 00 00 00       	mov    $0x0,%eax
 806e0d7:	e8 21 fe ff ff       	callq  806defd <find_elf_sym>
 806e0dc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 806e0df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e0e3:	48 b9 d0 00 00 00 00 	movabs $0xd0,%rcx
 806e0ea:	00 00 00 
 806e0ed:	48 01 c8             	add    %rcx,%rax
 806e0f0:	48 8b 08             	mov    (%rax),%rcx
 806e0f3:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 806e0fa:	00 00 00 
 806e0fd:	48 01 c1             	add    %rax,%rcx
 806e100:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806e103:	48 63 c0             	movslq %eax,%rax
 806e106:	48 89 c2             	mov    %rax,%rdx
 806e109:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806e110:	00 00 00 
 806e113:	48 0f af d0          	imul   %rax,%rdx
 806e117:	48 8b 01             	mov    (%rcx),%rax
 806e11a:	48 89 d1             	mov    %rdx,%rcx
 806e11d:	48 01 c8             	add    %rcx,%rax
 806e120:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 806e124:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 806e127:	85 c0                	test   %eax,%eax
 806e129:	0f 84 22 00 00 00    	je     806e151 <get_elf_sym_addr+0xb4>
 806e12f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806e133:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806e13a:	00 00 00 
 806e13d:	48 01 c8             	add    %rcx,%rax
 806e140:	0f b7 08             	movzwl (%rax),%ecx
 806e143:	83 f9 00             	cmp    $0x0,%ecx
 806e146:	0f 84 05 00 00 00    	je     806e151 <get_elf_sym_addr+0xb4>
 806e14c:	e9 30 00 00 00       	jmpq   806e181 <get_elf_sym_addr+0xe4>
 806e151:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806e154:	85 c0                	test   %eax,%eax
 806e156:	0f 84 1b 00 00 00    	je     806e177 <get_elf_sym_addr+0xda>
 806e15c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e160:	48 89 c6             	mov    %rax,%rsi
 806e163:	48 8d 05 fe e2 01 00 	lea    0x1e2fe(%rip),%rax        # 808c468 <L.107>
 806e16a:	48 89 c7             	mov    %rax,%rdi
 806e16d:	b8 00 00 00 00       	mov    $0x0,%eax
 806e172:	e8 50 f5 fd ff       	callq  804d6c7 <tcc_error>
 806e177:	b8 00 00 00 00       	mov    $0x0,%eax
 806e17c:	e9 21 00 00 00       	jmpq   806e1a2 <get_elf_sym_addr+0x105>
 806e181:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806e185:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806e18c:	00 00 00 
 806e18f:	48 01 c8             	add    %rcx,%rax
 806e192:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806e196:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e19a:	48 8b 00             	mov    (%rax),%rax
 806e19d:	e9 00 00 00 00       	jmpq   806e1a2 <get_elf_sym_addr+0x105>
 806e1a2:	c9                   	leaveq 
 806e1a3:	c3                   	retq   

000000000806e1a4 <tcc_get_symbol>:
 806e1a4:	55                   	push   %rbp
 806e1a5:	48 89 e5             	mov    %rsp,%rbp
 806e1a8:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806e1af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e1b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e1b7:	b8 00 00 00 00       	mov    $0x0,%eax
 806e1bc:	49 89 c2             	mov    %rax,%r10
 806e1bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e1c3:	48 89 c6             	mov    %rax,%rsi
 806e1c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e1ca:	48 89 c7             	mov    %rax,%rdi
 806e1cd:	4c 89 d2             	mov    %r10,%rdx
 806e1d0:	b8 00 00 00 00       	mov    $0x0,%eax
 806e1d5:	e8 c3 fe ff ff       	callq  806e09d <get_elf_sym_addr>
 806e1da:	e9 00 00 00 00       	jmpq   806e1df <tcc_get_symbol+0x3b>
 806e1df:	c9                   	leaveq 
 806e1e0:	c3                   	retq   

000000000806e1e1 <tcc_get_symbol_err>:
 806e1e1:	55                   	push   %rbp
 806e1e2:	48 89 e5             	mov    %rsp,%rbp
 806e1e5:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 806e1ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e1f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e1f4:	b8 01 00 00 00       	mov    $0x1,%eax
 806e1f9:	49 89 c2             	mov    %rax,%r10
 806e1fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e200:	48 89 c6             	mov    %rax,%rsi
 806e203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e207:	48 89 c7             	mov    %rax,%rdi
 806e20a:	4c 89 d2             	mov    %r10,%rdx
 806e20d:	b8 00 00 00 00       	mov    $0x0,%eax
 806e212:	e8 86 fe ff ff       	callq  806e09d <get_elf_sym_addr>
 806e217:	e9 00 00 00 00       	jmpq   806e21c <tcc_get_symbol_err+0x3b>
 806e21c:	c9                   	leaveq 
 806e21d:	c3                   	retq   

000000000806e21e <add_elf_sym>:
 806e21e:	55                   	push   %rbp
 806e21f:	48 89 e5             	mov    %rsp,%rbp
 806e222:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 806e229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e22d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e231:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806e235:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806e239:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806e23d:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 806e241:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806e244:	81 e0 ff 00 00 00    	and    $0xff,%eax
 806e24a:	c1 f8 04             	sar    $0x4,%eax
 806e24d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 806e250:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806e253:	83 e0 0f             	and    $0xf,%eax
 806e256:	89 45 bc             	mov    %eax,-0x44(%rbp)
 806e259:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806e25c:	83 e0 03             	and    $0x3,%eax
 806e25f:	88 45 b7             	mov    %al,-0x49(%rbp)
 806e262:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806e265:	83 f8 00             	cmp    $0x0,%eax
 806e268:	0f 84 78 03 00 00    	je     806e5e6 <add_elf_sym+0x3c8>
 806e26e:	48 8b 45 10          	mov    0x10(%rbp),%rax
 806e272:	48 89 c6             	mov    %rax,%rsi
 806e275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e279:	48 89 c7             	mov    %rax,%rdi
 806e27c:	b8 00 00 00 00       	mov    $0x0,%eax
 806e281:	e8 77 fc ff ff       	callq  806defd <find_elf_sym>
 806e286:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806e289:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806e28c:	85 c0                	test   %eax,%eax
 806e28e:	0f 84 05 00 00 00    	je     806e299 <add_elf_sym+0x7b>
 806e294:	e9 05 00 00 00       	jmpq   806e29e <add_elf_sym+0x80>
 806e299:	e9 48 03 00 00       	jmpq   806e5e6 <add_elf_sym+0x3c8>
 806e29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e2a2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806e2a9:	00 00 00 
 806e2ac:	48 01 c8             	add    %rcx,%rax
 806e2af:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 806e2b2:	48 63 c9             	movslq %ecx,%rcx
 806e2b5:	48 89 ca             	mov    %rcx,%rdx
 806e2b8:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806e2bf:	00 00 00 
 806e2c2:	48 0f af d1          	imul   %rcx,%rdx
 806e2c6:	48 8b 08             	mov    (%rax),%rcx
 806e2c9:	48 89 d0             	mov    %rdx,%rax
 806e2cc:	48 01 c1             	add    %rax,%rcx
 806e2cf:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 806e2d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e2d7:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806e2de:	00 00 00 
 806e2e1:	48 01 c8             	add    %rcx,%rax
 806e2e4:	0f b7 08             	movzwl (%rax),%ecx
 806e2e7:	83 f9 00             	cmp    $0x0,%ecx
 806e2ea:	0f 84 61 02 00 00    	je     806e551 <add_elf_sym+0x333>
 806e2f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e2f4:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806e2fb:	00 00 00 
 806e2fe:	48 01 c8             	add    %rcx,%rax
 806e301:	0f b6 08             	movzbl (%rax),%ecx
 806e304:	c1 f9 04             	sar    $0x4,%ecx
 806e307:	89 4d b8             	mov    %ecx,-0x48(%rbp)
 806e30a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e30e:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 806e315:	00 00 00 
 806e318:	48 01 c8             	add    %rcx,%rax
 806e31b:	0f b6 08             	movzbl (%rax),%ecx
 806e31e:	83 e1 03             	and    $0x3,%ecx
 806e321:	88 4d b6             	mov    %cl,-0x4a(%rbp)
 806e324:	0f b6 45 b6          	movzbl -0x4a(%rbp),%eax
 806e328:	83 f8 00             	cmp    $0x0,%eax
 806e32b:	0f 85 0c 00 00 00    	jne    806e33d <add_elf_sym+0x11f>
 806e331:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
 806e335:	88 45 b5             	mov    %al,-0x4b(%rbp)
 806e338:	e9 48 00 00 00       	jmpq   806e385 <add_elf_sym+0x167>
 806e33d:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
 806e341:	83 f8 00             	cmp    $0x0,%eax
 806e344:	0f 85 0c 00 00 00    	jne    806e356 <add_elf_sym+0x138>
 806e34a:	0f b6 45 b6          	movzbl -0x4a(%rbp),%eax
 806e34e:	88 45 b5             	mov    %al,-0x4b(%rbp)
 806e351:	e9 2f 00 00 00       	jmpq   806e385 <add_elf_sym+0x167>
 806e356:	0f b6 45 b6          	movzbl -0x4a(%rbp),%eax
 806e35a:	0f b6 4d b7          	movzbl -0x49(%rbp),%ecx
 806e35e:	39 c8                	cmp    %ecx,%eax
 806e360:	b8 00 00 00 00       	mov    $0x0,%eax
 806e365:	0f 9c c0             	setl   %al
 806e368:	85 c0                	test   %eax,%eax
 806e36a:	0f 84 05 00 00 00    	je     806e375 <add_elf_sym+0x157>
 806e370:	e9 09 00 00 00       	jmpq   806e37e <add_elf_sym+0x160>
 806e375:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
 806e379:	e9 04 00 00 00       	jmpq   806e382 <add_elf_sym+0x164>
 806e37e:	0f b6 45 b6          	movzbl -0x4a(%rbp),%eax
 806e382:	88 45 b5             	mov    %al,-0x4b(%rbp)
 806e385:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e389:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 806e390:	00 00 00 
 806e393:	48 01 c8             	add    %rcx,%rax
 806e396:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806e39a:	48 ba 05 00 00 00 00 	movabs $0x5,%rdx
 806e3a1:	00 00 00 
 806e3a4:	48 01 d1             	add    %rdx,%rcx
 806e3a7:	0f b6 11             	movzbl (%rcx),%edx
 806e3aa:	83 e2 fc             	and    $0xfffffffc,%edx
 806e3ad:	0f b6 4d b5          	movzbl -0x4b(%rbp),%ecx
 806e3b1:	48 09 ca             	or     %rcx,%rdx
 806e3b4:	88 10                	mov    %dl,(%rax)
 806e3b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e3ba:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 806e3c1:	00 00 00 
 806e3c4:	48 01 c8             	add    %rcx,%rax
 806e3c7:	0f b6 08             	movzbl (%rax),%ecx
 806e3ca:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 806e3cd:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806e3d0:	83 f8 00             	cmp    $0x0,%eax
 806e3d3:	0f 85 05 00 00 00    	jne    806e3de <add_elf_sym+0x1c0>
 806e3d9:	e9 6e 01 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e3de:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806e3e1:	83 f8 01             	cmp    $0x1,%eax
 806e3e4:	0f 85 16 00 00 00    	jne    806e400 <add_elf_sym+0x1e2>
 806e3ea:	8b 45 b8             	mov    -0x48(%rbp),%eax
 806e3ed:	83 f8 02             	cmp    $0x2,%eax
 806e3f0:	0f 85 0a 00 00 00    	jne    806e400 <add_elf_sym+0x1e2>
 806e3f6:	e9 56 01 00 00       	jmpq   806e551 <add_elf_sym+0x333>
 806e3fb:	e9 4c 01 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e400:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806e403:	83 f8 02             	cmp    $0x2,%eax
 806e406:	0f 85 11 00 00 00    	jne    806e41d <add_elf_sym+0x1ff>
 806e40c:	8b 45 b8             	mov    -0x48(%rbp),%eax
 806e40f:	83 f8 01             	cmp    $0x1,%eax
 806e412:	0f 85 05 00 00 00    	jne    806e41d <add_elf_sym+0x1ff>
 806e418:	e9 2f 01 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e41d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806e420:	83 f8 02             	cmp    $0x2,%eax
 806e423:	0f 85 11 00 00 00    	jne    806e43a <add_elf_sym+0x21c>
 806e429:	8b 45 b8             	mov    -0x48(%rbp),%eax
 806e42c:	83 f8 02             	cmp    $0x2,%eax
 806e42f:	0f 85 05 00 00 00    	jne    806e43a <add_elf_sym+0x21c>
 806e435:	e9 12 01 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e43a:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
 806e43e:	83 f8 02             	cmp    $0x2,%eax
 806e441:	0f 84 12 00 00 00    	je     806e459 <add_elf_sym+0x23b>
 806e447:	0f b6 45 b7          	movzbl -0x49(%rbp),%eax
 806e44b:	83 f8 01             	cmp    $0x1,%eax
 806e44e:	0f 84 05 00 00 00    	je     806e459 <add_elf_sym+0x23b>
 806e454:	e9 05 00 00 00       	jmpq   806e45e <add_elf_sym+0x240>
 806e459:	e9 ee 00 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e45e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e462:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806e469:	00 00 00 
 806e46c:	48 01 c8             	add    %rcx,%rax
 806e46f:	0f b7 08             	movzwl (%rax),%ecx
 806e472:	81 f9 f2 ff 00 00    	cmp    $0xfff2,%ecx
 806e478:	0f 85 2d 00 00 00    	jne    806e4ab <add_elf_sym+0x28d>
 806e47e:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806e481:	81 f8 00 ff 00 00    	cmp    $0xff00,%eax
 806e487:	0f 8c 14 00 00 00    	jl     806e4a1 <add_elf_sym+0x283>
 806e48d:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806e490:	81 f8 f2 ff 00 00    	cmp    $0xfff2,%eax
 806e496:	0f 84 05 00 00 00    	je     806e4a1 <add_elf_sym+0x283>
 806e49c:	e9 0a 00 00 00       	jmpq   806e4ab <add_elf_sym+0x28d>
 806e4a1:	e9 ab 00 00 00       	jmpq   806e551 <add_elf_sym+0x333>
 806e4a6:	e9 a1 00 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e4ab:	48 8b 05 de f9 01 00 	mov    0x1f9de(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806e4b2:	48 8b 00             	mov    (%rax),%rax
 806e4b5:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 806e4bc:	00 00 00 
 806e4bf:	48 01 c8             	add    %rcx,%rax
 806e4c2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806e4c6:	48 8b 10             	mov    (%rax),%rdx
 806e4c9:	48 89 c8             	mov    %rcx,%rax
 806e4cc:	48 89 d1             	mov    %rdx,%rcx
 806e4cf:	48 39 c8             	cmp    %rcx,%rax
 806e4d2:	0f 85 05 00 00 00    	jne    806e4dd <add_elf_sym+0x2bf>
 806e4d8:	e9 6f 00 00 00       	jmpq   806e54c <add_elf_sym+0x32e>
 806e4dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e4e1:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806e4e8:	00 00 00 
 806e4eb:	48 01 c8             	add    %rcx,%rax
 806e4ee:	50                   	push   %rax
 806e4ef:	0f b6 4d b6          	movzbl -0x4a(%rbp),%ecx
 806e4f3:	51                   	push   %rcx
 806e4f4:	0f b7 08             	movzwl (%rax),%ecx
 806e4f7:	49 89 c9             	mov    %rcx,%r9
 806e4fa:	8b 45 b8             	mov    -0x48(%rbp),%eax
 806e4fd:	49 89 c0             	mov    %rax,%r8
 806e500:	0f b6 45 b5          	movzbl -0x4b(%rbp),%eax
 806e504:	49 89 c3             	mov    %rax,%r11
 806e507:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806e50a:	49 89 c2             	mov    %rax,%r10
 806e50d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806e510:	48 89 c6             	mov    %rax,%rsi
 806e513:	48 8d 05 5d df 01 00 	lea    0x1df5d(%rip),%rax        # 808c477 <L.108>
 806e51a:	48 89 c7             	mov    %rax,%rdi
 806e51d:	4c 89 d2             	mov    %r10,%rdx
 806e520:	4c 89 d9             	mov    %r11,%rcx
 806e523:	b8 00 00 00 00       	mov    $0x0,%eax
 806e528:	e8 93 95 01 00       	callq  8087ac0 <__preinit_array_end+0x20>
 806e52d:	48 83 c4 10          	add    $0x10,%rsp
 806e531:	48 8b 45 10          	mov    0x10(%rbp),%rax
 806e535:	48 89 c6             	mov    %rax,%rsi
 806e538:	48 8d 05 81 df 01 00 	lea    0x1df81(%rip),%rax        # 808c4c0 <L.109>
 806e53f:	48 89 c7             	mov    %rax,%rdi
 806e542:	b8 00 00 00 00       	mov    $0x0,%eax
 806e547:	e8 a1 ef fd ff       	callq  804d4ed <tcc_error_noabort>
 806e54c:	e9 90 00 00 00       	jmpq   806e5e1 <add_elf_sym+0x3c3>
 806e551:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e555:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806e55c:	00 00 00 
 806e55f:	48 01 c8             	add    %rcx,%rax
 806e562:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 806e565:	c1 e1 04             	shl    $0x4,%ecx
 806e568:	8b 55 bc             	mov    -0x44(%rbp),%edx
 806e56b:	83 e2 0f             	and    $0xf,%edx
 806e56e:	48 01 d1             	add    %rdx,%rcx
 806e571:	88 08                	mov    %cl,(%rax)
 806e573:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e577:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806e57e:	00 00 00 
 806e581:	48 01 c8             	add    %rcx,%rax
 806e584:	0f b7 4d d0          	movzwl -0x30(%rbp),%ecx
 806e588:	66 89 08             	mov    %cx,(%rax)
 806e58b:	b8 01 00 00 00       	mov    $0x1,%eax
 806e590:	4c 8b 1d c9 fa 01 00 	mov    0x1fac9(%rip),%r11        # 808e060 <_GLOBAL_OFFSET_TABLE_+0x3e0>
 806e597:	41 89 03             	mov    %eax,(%r11)
 806e59a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e59e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806e5a5:	00 00 00 
 806e5a8:	48 01 c8             	add    %rcx,%rax
 806e5ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806e5af:	48 89 08             	mov    %rcx,(%rax)
 806e5b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e5b6:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806e5bd:	00 00 00 
 806e5c0:	48 01 c8             	add    %rcx,%rax
 806e5c3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806e5c7:	48 89 08             	mov    %rcx,(%rax)
 806e5ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806e5ce:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 806e5d5:	00 00 00 
 806e5d8:	48 01 c8             	add    %rcx,%rax
 806e5db:	0f b6 4d d8          	movzbl -0x28(%rbp),%ecx
 806e5df:	88 08                	mov    %cl,(%rax)
 806e5e1:	e9 50 00 00 00       	jmpq   806e636 <add_elf_sym+0x418>
 806e5e6:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806e5e9:	c1 e0 04             	shl    $0x4,%eax
 806e5ec:	8b 4d bc             	mov    -0x44(%rbp),%ecx
 806e5ef:	83 e1 0f             	and    $0xf,%ecx
 806e5f2:	48 01 c8             	add    %rcx,%rax
 806e5f5:	50                   	push   %rax
 806e5f6:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
 806e5fa:	51                   	push   %rcx
 806e5fb:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806e5fe:	49 89 c9             	mov    %rcx,%r9
 806e601:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 806e604:	49 89 c8             	mov    %rcx,%r8
 806e607:	49 89 c3             	mov    %rax,%r11
 806e60a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806e60e:	49 89 c2             	mov    %rax,%r10
 806e611:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e615:	48 89 c6             	mov    %rax,%rsi
 806e618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e61c:	48 89 c7             	mov    %rax,%rdi
 806e61f:	4c 89 d2             	mov    %r10,%rdx
 806e622:	4c 89 d9             	mov    %r11,%rcx
 806e625:	b8 00 00 00 00       	mov    $0x0,%eax
 806e62a:	e8 fe f5 ff ff       	callq  806dc2d <put_elf_sym>
 806e62f:	48 83 c4 10          	add    $0x10,%rsp
 806e633:	89 45 c0             	mov    %eax,-0x40(%rbp)
 806e636:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806e639:	e9 00 00 00 00       	jmpq   806e63e <add_elf_sym+0x420>
 806e63e:	c9                   	leaveq 
 806e63f:	c3                   	retq   

000000000806e640 <put_elf_reloc>:
 806e640:	55                   	push   %rbp
 806e641:	48 89 e5             	mov    %rsp,%rbp
 806e644:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
 806e64b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e64f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e653:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806e657:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806e65b:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806e65f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e663:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 806e66a:	00 00 00 
 806e66d:	48 01 c8             	add    %rcx,%rax
 806e670:	48 8b 08             	mov    (%rax),%rcx
 806e673:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
 806e67a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 806e681:	85 c0                	test   %eax,%eax
 806e683:	0f 84 05 00 00 00    	je     806e68e <put_elf_reloc+0x4e>
 806e689:	e9 06 01 00 00       	jmpq   806e794 <put_elf_reloc+0x154>
 806e68e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e692:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 806e699:	00 00 00 
 806e69c:	48 01 c8             	add    %rcx,%rax
 806e69f:	49 89 c3             	mov    %rax,%r11
 806e6a2:	48 8d 05 2a de 01 00 	lea    0x1de2a(%rip),%rax        # 808c4d3 <L.110>
 806e6a9:	49 89 c2             	mov    %rax,%r10
 806e6ac:	b8 00 01 00 00       	mov    $0x100,%eax
 806e6b1:	48 89 c6             	mov    %rax,%rsi
 806e6b4:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
 806e6bb:	48 89 c7             	mov    %rax,%rdi
 806e6be:	4c 89 d2             	mov    %r10,%rdx
 806e6c1:	4c 89 d9             	mov    %r11,%rcx
 806e6c4:	b8 00 00 00 00       	mov    $0x0,%eax
 806e6c9:	e8 72 95 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 806e6ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e6d2:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 806e6d9:	00 00 00 
 806e6dc:	48 01 c8             	add    %rcx,%rax
 806e6df:	8b 08                	mov    (%rax),%ecx
 806e6e1:	49 89 cb             	mov    %rcx,%r11
 806e6e4:	b8 04 00 00 00       	mov    $0x4,%eax
 806e6e9:	49 89 c2             	mov    %rax,%r10
 806e6ec:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
 806e6f3:	48 89 c6             	mov    %rax,%rsi
 806e6f6:	48 8b 05 93 f7 01 00 	mov    0x1f793(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 806e6fd:	48 8b 00             	mov    (%rax),%rax
 806e700:	48 89 c7             	mov    %rax,%rdi
 806e703:	4c 89 d2             	mov    %r10,%rdx
 806e706:	4c 89 d9             	mov    %r11,%rcx
 806e709:	b8 00 00 00 00       	mov    $0x0,%eax
 806e70e:	e8 e5 dd fd ff       	callq  804c4f8 <new_section>
 806e713:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 806e71a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 806e721:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 806e728:	00 00 00 
 806e72b:	48 01 c8             	add    %rcx,%rax
 806e72e:	b9 18 00 00 00       	mov    $0x18,%ecx
 806e733:	89 08                	mov    %ecx,(%rax)
 806e735:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 806e73c:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806e743:	00 00 00 
 806e746:	48 01 c8             	add    %rcx,%rax
 806e749:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806e74d:	48 89 08             	mov    %rcx,(%rax)
 806e750:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 806e757:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 806e75e:	00 00 00 
 806e761:	48 01 c8             	add    %rcx,%rax
 806e764:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806e768:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 806e76f:	00 00 00 
 806e772:	48 01 d1             	add    %rdx,%rcx
 806e775:	8b 11                	mov    (%rcx),%edx
 806e777:	89 10                	mov    %edx,(%rax)
 806e779:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806e77d:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 806e784:	00 00 00 
 806e787:	48 01 c8             	add    %rcx,%rax
 806e78a:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
 806e791:	48 89 08             	mov    %rcx,(%rax)
 806e794:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806e79b:	00 00 00 
 806e79e:	48 89 c6             	mov    %rax,%rsi
 806e7a1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 806e7a8:	48 89 c7             	mov    %rax,%rdi
 806e7ab:	b8 00 00 00 00       	mov    $0x0,%eax
 806e7b0:	e8 b5 e0 fd ff       	callq  804c86a <section_ptr_add>
 806e7b5:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 806e7bc:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 806e7c3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806e7c7:	48 89 08             	mov    %rcx,(%rax)
 806e7ca:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 806e7d1:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806e7d8:	00 00 00 
 806e7db:	48 01 c8             	add    %rcx,%rax
 806e7de:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 806e7e1:	48 63 c9             	movslq %ecx,%rcx
 806e7e4:	48 89 ca             	mov    %rcx,%rdx
 806e7e7:	48 c1 e2 20          	shl    $0x20,%rdx
 806e7eb:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 806e7ee:	48 63 c9             	movslq %ecx,%rcx
 806e7f1:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
 806e7f8:	48 89 d0             	mov    %rdx,%rax
 806e7fb:	48 89 ca             	mov    %rcx,%rdx
 806e7fe:	48 01 d0             	add    %rdx,%rax
 806e801:	48 89 c1             	mov    %rax,%rcx
 806e804:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
 806e80b:	48 89 08             	mov    %rcx,(%rax)
 806e80e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 806e815:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806e81c:	00 00 00 
 806e81f:	48 01 c8             	add    %rcx,%rax
 806e822:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806e829:	00 00 00 
 806e82c:	48 89 08             	mov    %rcx,(%rax)
 806e82f:	c9                   	leaveq 
 806e830:	c3                   	retq   

000000000806e831 <put_stabs>:
 806e831:	55                   	push   %rbp
 806e832:	48 89 e5             	mov    %rsp,%rbp
 806e835:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 806e83c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e840:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e844:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806e848:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806e84c:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806e850:	48 b8 0c 00 00 00 00 	movabs $0xc,%rax
 806e857:	00 00 00 
 806e85a:	48 89 c6             	mov    %rax,%rsi
 806e85d:	48 8b 05 2c f7 01 00 	mov    0x1f72c(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 806e864:	48 8b 00             	mov    (%rax),%rax
 806e867:	48 89 c7             	mov    %rax,%rdi
 806e86a:	b8 00 00 00 00       	mov    $0x0,%eax
 806e86f:	e8 f6 df fd ff       	callq  804c86a <section_ptr_add>
 806e874:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806e878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e87c:	85 c0                	test   %eax,%eax
 806e87e:	0f 84 31 00 00 00    	je     806e8b5 <put_stabs+0x84>
 806e884:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e888:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806e88c:	48 89 ce             	mov    %rcx,%rsi
 806e88f:	48 8b 0d 02 f7 01 00 	mov    0x1f702(%rip),%rcx        # 808df98 <_GLOBAL_OFFSET_TABLE_+0x318>
 806e896:	48 8b 09             	mov    (%rcx),%rcx
 806e899:	48 89 cf             	mov    %rcx,%rdi
 806e89c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806e8a0:	b8 00 00 00 00       	mov    $0x0,%eax
 806e8a5:	e8 b9 ef ff ff       	callq  806d863 <put_elf_str>
 806e8aa:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806e8ae:	89 01                	mov    %eax,(%rcx)
 806e8b0:	e9 0b 00 00 00       	jmpq   806e8c0 <put_stabs+0x8f>
 806e8b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e8b9:	b9 00 00 00 00       	mov    $0x0,%ecx
 806e8be:	89 08                	mov    %ecx,(%rax)
 806e8c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e8c4:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806e8cb:	00 00 00 
 806e8ce:	48 01 c8             	add    %rcx,%rax
 806e8d1:	0f b6 4d f0          	movzbl -0x10(%rbp),%ecx
 806e8d5:	88 08                	mov    %cl,(%rax)
 806e8d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e8db:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 806e8e2:	00 00 00 
 806e8e5:	48 01 c8             	add    %rcx,%rax
 806e8e8:	0f b6 4d e8          	movzbl -0x18(%rbp),%ecx
 806e8ec:	88 08                	mov    %cl,(%rax)
 806e8ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e8f2:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806e8f9:	00 00 00 
 806e8fc:	48 01 c8             	add    %rcx,%rax
 806e8ff:	0f b7 4d e0          	movzwl -0x20(%rbp),%ecx
 806e903:	66 89 08             	mov    %cx,(%rax)
 806e906:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806e90a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806e911:	00 00 00 
 806e914:	48 01 c8             	add    %rcx,%rax
 806e917:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 806e91a:	89 08                	mov    %ecx,(%rax)
 806e91c:	c9                   	leaveq 
 806e91d:	c3                   	retq   

000000000806e91e <put_stabs_r>:
 806e91e:	55                   	push   %rbp
 806e91f:	48 89 e5             	mov    %rsp,%rbp
 806e922:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 806e929:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e92d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e931:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806e935:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806e939:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 806e93d:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 806e941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 806e945:	49 89 c0             	mov    %rax,%r8
 806e948:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806e94b:	49 89 c3             	mov    %rax,%r11
 806e94e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806e951:	49 89 c2             	mov    %rax,%r10
 806e954:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806e957:	48 89 c6             	mov    %rax,%rsi
 806e95a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806e95e:	48 89 c7             	mov    %rax,%rdi
 806e961:	4c 89 d2             	mov    %r10,%rdx
 806e964:	4c 89 d9             	mov    %r11,%rcx
 806e967:	b8 00 00 00 00       	mov    $0x0,%eax
 806e96c:	e8 c0 fe ff ff       	callq  806e831 <put_stabs>
 806e971:	48 8b 05 18 f6 01 00 	mov    0x1f618(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 806e978:	48 8b 00             	mov    (%rax),%rax
 806e97b:	48 8b 08             	mov    (%rax),%rcx
 806e97e:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 806e985:	00 00 00 
 806e988:	48 29 c1             	sub    %rax,%rcx
 806e98b:	8b 45 10             	mov    0x10(%rbp),%eax
 806e98e:	49 89 c0             	mov    %rax,%r8
 806e991:	b8 0a 00 00 00       	mov    $0xa,%eax
 806e996:	49 89 c3             	mov    %rax,%r11
 806e999:	48 89 c8             	mov    %rcx,%rax
 806e99c:	49 89 c2             	mov    %rax,%r10
 806e99f:	48 8b 05 ea f5 01 00 	mov    0x1f5ea(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 806e9a6:	48 8b 00             	mov    (%rax),%rax
 806e9a9:	48 89 c6             	mov    %rax,%rsi
 806e9ac:	48 8b 05 e5 f4 01 00 	mov    0x1f4e5(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806e9b3:	48 8b 00             	mov    (%rax),%rax
 806e9b6:	48 89 c7             	mov    %rax,%rdi
 806e9b9:	4c 89 d2             	mov    %r10,%rdx
 806e9bc:	4c 89 d9             	mov    %r11,%rcx
 806e9bf:	b8 00 00 00 00       	mov    $0x0,%eax
 806e9c4:	e8 77 fc ff ff       	callq  806e640 <put_elf_reloc>
 806e9c9:	c9                   	leaveq 
 806e9ca:	c3                   	retq   

000000000806e9cb <put_stabn>:
 806e9cb:	55                   	push   %rbp
 806e9cc:	48 89 e5             	mov    %rsp,%rbp
 806e9cf:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806e9d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806e9da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806e9de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806e9e2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806e9e6:	8b 45 e0             	mov    -0x20(%rbp),%eax
 806e9e9:	48 63 c0             	movslq %eax,%rax
 806e9ec:	48 89 c1             	mov    %rax,%rcx
 806e9ef:	49 89 c8             	mov    %rcx,%r8
 806e9f2:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806e9f5:	49 89 c3             	mov    %rax,%r11
 806e9f8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806e9fb:	49 89 c2             	mov    %rax,%r10
 806e9fe:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806ea01:	48 89 c6             	mov    %rax,%rsi
 806ea04:	b8 00 00 00 00       	mov    $0x0,%eax
 806ea09:	48 89 c7             	mov    %rax,%rdi
 806ea0c:	4c 89 d2             	mov    %r10,%rdx
 806ea0f:	4c 89 d9             	mov    %r11,%rcx
 806ea12:	b8 00 00 00 00       	mov    $0x0,%eax
 806ea17:	e8 15 fe ff ff       	callq  806e831 <put_stabs>
 806ea1c:	c9                   	leaveq 
 806ea1d:	c3                   	retq   

000000000806ea1e <put_stabd>:
 806ea1e:	55                   	push   %rbp
 806ea1f:	48 89 e5             	mov    %rsp,%rbp
 806ea22:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806ea29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806ea2d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806ea31:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 806ea35:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806ea3c:	00 00 00 
 806ea3f:	49 89 c0             	mov    %rax,%r8
 806ea42:	8b 45 e8             	mov    -0x18(%rbp),%eax
 806ea45:	49 89 c3             	mov    %rax,%r11
 806ea48:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806ea4b:	49 89 c2             	mov    %rax,%r10
 806ea4e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 806ea51:	48 89 c6             	mov    %rax,%rsi
 806ea54:	b8 00 00 00 00       	mov    $0x0,%eax
 806ea59:	48 89 c7             	mov    %rax,%rdi
 806ea5c:	4c 89 d2             	mov    %r10,%rdx
 806ea5f:	4c 89 d9             	mov    %r11,%rcx
 806ea62:	b8 00 00 00 00       	mov    $0x0,%eax
 806ea67:	e8 c5 fd ff ff       	callq  806e831 <put_stabs>
 806ea6c:	c9                   	leaveq 
 806ea6d:	c3                   	retq   

000000000806ea6e <sort_syms>:
 806ea6e:	55                   	push   %rbp
 806ea6f:	48 89 e5             	mov    %rsp,%rbp
 806ea72:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
 806ea79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806ea7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806ea81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ea85:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 806ea89:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 806ea8d:	48 8b 00             	mov    (%rax),%rax
 806ea90:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806ea97:	00 00 00 
 806ea9a:	31 d2                	xor    %edx,%edx
 806ea9c:	f7 f1                	div    %ecx
 806ea9e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 806eaa1:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806eaa4:	b9 18 00 00 00       	mov    $0x18,%ecx
 806eaa9:	48 0f af c1          	imul   %rcx,%rax
 806eaad:	48 89 c1             	mov    %rax,%rcx
 806eab0:	48 89 cf             	mov    %rcx,%rdi
 806eab3:	b8 00 00 00 00       	mov    $0x0,%eax
 806eab8:	e8 9b d4 fd ff       	callq  804bf58 <tcc_malloc>
 806eabd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806eac1:	8b 45 dc             	mov    -0x24(%rbp),%eax
 806eac4:	c1 e0 02             	shl    $0x2,%eax
 806eac7:	48 89 c1             	mov    %rax,%rcx
 806eaca:	48 89 cf             	mov    %rcx,%rdi
 806eacd:	b8 00 00 00 00       	mov    $0x0,%eax
 806ead2:	e8 81 d4 fd ff       	callq  804bf58 <tcc_malloc>
 806ead7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806eadb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806eadf:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806eae6:	00 00 00 
 806eae9:	48 01 c8             	add    %rcx,%rax
 806eaec:	48 8b 08             	mov    (%rax),%rcx
 806eaef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 806eaf3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806eaf7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806eafb:	b8 00 00 00 00       	mov    $0x0,%eax
 806eb00:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806eb03:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806eb06:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806eb09:	39 c8                	cmp    %ecx,%eax
 806eb0b:	0f 8d d0 00 00 00    	jge    806ebe1 <sort_syms+0x173>
 806eb11:	e9 0e 00 00 00       	jmpq   806eb24 <sort_syms+0xb6>
 806eb16:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806eb19:	48 89 c1             	mov    %rax,%rcx
 806eb1c:	83 c0 01             	add    $0x1,%eax
 806eb1f:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806eb22:	eb df                	jmp    806eb03 <sort_syms+0x95>
 806eb24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806eb28:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806eb2f:	00 00 00 
 806eb32:	48 01 c8             	add    %rcx,%rax
 806eb35:	0f b6 08             	movzbl (%rax),%ecx
 806eb38:	c1 f9 04             	sar    $0x4,%ecx
 806eb3b:	83 f9 00             	cmp    $0x0,%ecx
 806eb3e:	0f 85 80 00 00 00    	jne    806ebc4 <sort_syms+0x156>
 806eb44:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806eb47:	48 63 c0             	movslq %eax,%rax
 806eb4a:	48 89 c1             	mov    %rax,%rcx
 806eb4d:	48 c1 e1 02          	shl    $0x2,%rcx
 806eb51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806eb55:	48 89 ca             	mov    %rcx,%rdx
 806eb58:	48 01 d0             	add    %rdx,%rax
 806eb5b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806eb5f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 806eb63:	48 29 d1             	sub    %rdx,%rcx
 806eb66:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 806eb6a:	48 89 c8             	mov    %rcx,%rax
 806eb6d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806eb74:	00 00 00 
 806eb77:	48 99                	cqto   
 806eb79:	48 f7 f9             	idiv   %rcx
 806eb7c:	48 89 c1             	mov    %rax,%rcx
 806eb7f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806eb83:	89 08                	mov    %ecx,(%rax)
 806eb85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806eb89:	48 89 c1             	mov    %rax,%rcx
 806eb8c:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806eb93:	00 00 00 
 806eb96:	48 01 d0             	add    %rdx,%rax
 806eb99:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806eb9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806eba1:	ba 18 00 00 00       	mov    $0x18,%edx
 806eba6:	49 89 d2             	mov    %rdx,%r10
 806eba9:	48 89 c6             	mov    %rax,%rsi
 806ebac:	48 89 cf             	mov    %rcx,%rdi
 806ebaf:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
 806ebb3:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 806ebb7:	4c 89 d2             	mov    %r10,%rdx
 806ebba:	b8 00 00 00 00       	mov    $0x0,%eax
 806ebbf:	e8 ac 80 01 00       	callq  8086c70 <memcpy>
 806ebc4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806ebc8:	48 89 c1             	mov    %rax,%rcx
 806ebcb:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806ebd2:	00 00 00 
 806ebd5:	48 01 d0             	add    %rdx,%rax
 806ebd8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806ebdc:	e9 35 ff ff ff       	jmpq   806eb16 <sort_syms+0xa8>
 806ebe1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ebe5:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 806ebec:	00 00 00 
 806ebef:	48 01 c8             	add    %rcx,%rax
 806ebf2:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806ebf6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 806ebfa:	48 29 d1             	sub    %rdx,%rcx
 806ebfd:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 806ec01:	48 89 c8             	mov    %rcx,%rax
 806ec04:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806ec0b:	00 00 00 
 806ec0e:	48 99                	cqto   
 806ec10:	48 f7 f9             	idiv   %rcx
 806ec13:	48 89 c1             	mov    %rax,%rcx
 806ec16:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806ec1a:	89 08                	mov    %ecx,(%rax)
 806ec1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ec20:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ec27:	00 00 00 
 806ec2a:	48 01 c8             	add    %rcx,%rax
 806ec2d:	48 8b 08             	mov    (%rax),%rcx
 806ec30:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 806ec34:	b8 00 00 00 00       	mov    $0x0,%eax
 806ec39:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806ec3c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ec3f:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806ec42:	39 c8                	cmp    %ecx,%eax
 806ec44:	0f 8d dc 00 00 00    	jge    806ed26 <sort_syms+0x2b8>
 806ec4a:	e9 0e 00 00 00       	jmpq   806ec5d <sort_syms+0x1ef>
 806ec4f:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ec52:	48 89 c1             	mov    %rax,%rcx
 806ec55:	83 c0 01             	add    $0x1,%eax
 806ec58:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806ec5b:	eb df                	jmp    806ec3c <sort_syms+0x1ce>
 806ec5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806ec61:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806ec68:	00 00 00 
 806ec6b:	48 01 c8             	add    %rcx,%rax
 806ec6e:	0f b6 08             	movzbl (%rax),%ecx
 806ec71:	c1 f9 04             	sar    $0x4,%ecx
 806ec74:	83 f9 00             	cmp    $0x0,%ecx
 806ec77:	0f 84 8c 00 00 00    	je     806ed09 <sort_syms+0x29b>
 806ec7d:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ec80:	48 63 c0             	movslq %eax,%rax
 806ec83:	48 89 c1             	mov    %rax,%rcx
 806ec86:	48 c1 e1 02          	shl    $0x2,%rcx
 806ec8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806ec8e:	48 89 ca             	mov    %rcx,%rdx
 806ec91:	48 01 d0             	add    %rdx,%rax
 806ec94:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 806ec98:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 806ec9c:	48 29 d1             	sub    %rdx,%rcx
 806ec9f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 806eca6:	48 89 c8             	mov    %rcx,%rax
 806eca9:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806ecb0:	00 00 00 
 806ecb3:	48 99                	cqto   
 806ecb5:	48 f7 f9             	idiv   %rcx
 806ecb8:	48 89 c1             	mov    %rax,%rcx
 806ecbb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 806ecc2:	89 08                	mov    %ecx,(%rax)
 806ecc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806ecc8:	48 89 c1             	mov    %rax,%rcx
 806eccb:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806ecd2:	00 00 00 
 806ecd5:	48 01 d0             	add    %rdx,%rax
 806ecd8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 806ecdc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806ece0:	ba 18 00 00 00       	mov    $0x18,%edx
 806ece5:	49 89 d2             	mov    %rdx,%r10
 806ece8:	48 89 c6             	mov    %rax,%rsi
 806eceb:	48 89 cf             	mov    %rcx,%rdi
 806ecee:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
 806ecf5:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 806ecfc:	4c 89 d2             	mov    %r10,%rdx
 806ecff:	b8 00 00 00 00       	mov    $0x0,%eax
 806ed04:	e8 67 7f 01 00       	callq  8086c70 <memcpy>
 806ed09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806ed0d:	48 89 c1             	mov    %rax,%rcx
 806ed10:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806ed17:	00 00 00 
 806ed1a:	48 01 d0             	add    %rdx,%rax
 806ed1d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806ed21:	e9 29 ff ff ff       	jmpq   806ec4f <sort_syms+0x1e1>
 806ed26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ed2a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ed31:	00 00 00 
 806ed34:	48 01 c8             	add    %rcx,%rax
 806ed37:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806ed3a:	ba 18 00 00 00       	mov    $0x18,%edx
 806ed3f:	48 0f af ca          	imul   %rdx,%rcx
 806ed43:	49 89 ca             	mov    %rcx,%r10
 806ed46:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806ed4a:	48 89 ce             	mov    %rcx,%rsi
 806ed4d:	48 8b 08             	mov    (%rax),%rcx
 806ed50:	48 89 cf             	mov    %rcx,%rdi
 806ed53:	4c 89 d2             	mov    %r10,%rdx
 806ed56:	b8 00 00 00 00       	mov    $0x0,%eax
 806ed5b:	e8 10 7f 01 00       	callq  8086c70 <memcpy>
 806ed60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806ed64:	48 89 c7             	mov    %rax,%rdi
 806ed67:	b8 00 00 00 00       	mov    $0x0,%eax
 806ed6c:	e8 c5 d1 fd ff       	callq  804bf36 <tcc_free>
 806ed71:	b8 01 00 00 00       	mov    $0x1,%eax
 806ed76:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806ed79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806ed7d:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 806ed84:	00 00 00 
 806ed87:	48 01 c8             	add    %rcx,%rax
 806ed8a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 806ed8d:	8b 10                	mov    (%rax),%edx
 806ed8f:	39 d1                	cmp    %edx,%ecx
 806ed91:	0f 8d 9a 01 00 00    	jge    806ef31 <sort_syms+0x4c3>
 806ed97:	e9 0e 00 00 00       	jmpq   806edaa <sort_syms+0x33c>
 806ed9c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ed9f:	48 89 c1             	mov    %rax,%rcx
 806eda2:	83 c0 01             	add    $0x1,%eax
 806eda5:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806eda8:	eb cf                	jmp    806ed79 <sort_syms+0x30b>
 806edaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806edae:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 806edb5:	00 00 00 
 806edb8:	48 01 c8             	add    %rcx,%rax
 806edbb:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 806edbe:	48 63 c9             	movslq %ecx,%rcx
 806edc1:	48 89 ca             	mov    %rcx,%rdx
 806edc4:	48 c1 e2 03          	shl    $0x3,%rdx
 806edc8:	48 8b 08             	mov    (%rax),%rcx
 806edcb:	48 89 d0             	mov    %rdx,%rax
 806edce:	48 01 c1             	add    %rax,%rcx
 806edd1:	48 8b 01             	mov    (%rcx),%rax
 806edd4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 806edd8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806eddc:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 806ede3:	00 00 00 
 806ede6:	48 01 c8             	add    %rcx,%rax
 806ede9:	8b 08                	mov    (%rax),%ecx
 806edeb:	83 f9 04             	cmp    $0x4,%ecx
 806edee:	0f 85 38 01 00 00    	jne    806ef2c <sort_syms+0x4be>
 806edf4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806edf8:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806edff:	00 00 00 
 806ee02:	48 01 c8             	add    %rcx,%rax
 806ee05:	48 8b 08             	mov    (%rax),%rcx
 806ee08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ee0c:	48 89 ca             	mov    %rcx,%rdx
 806ee0f:	48 89 c1             	mov    %rax,%rcx
 806ee12:	48 39 ca             	cmp    %rcx,%rdx
 806ee15:	0f 85 11 01 00 00    	jne    806ef2c <sort_syms+0x4be>
 806ee1b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806ee1f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ee26:	00 00 00 
 806ee29:	48 01 c8             	add    %rcx,%rax
 806ee2c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806ee30:	48 8b 10             	mov    (%rax),%rdx
 806ee33:	48 8b 01             	mov    (%rcx),%rax
 806ee36:	48 01 c2             	add    %rax,%rdx
 806ee39:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 806ee3d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806ee41:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ee48:	00 00 00 
 806ee4b:	48 01 c8             	add    %rcx,%rax
 806ee4e:	48 8b 08             	mov    (%rax),%rcx
 806ee51:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 806ee55:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806ee59:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806ee5d:	48 89 c2             	mov    %rax,%rdx
 806ee60:	48 89 c8             	mov    %rcx,%rax
 806ee63:	48 39 c2             	cmp    %rax,%rdx
 806ee66:	0f 83 c0 00 00 00    	jae    806ef2c <sort_syms+0x4be>
 806ee6c:	e9 1a 00 00 00       	jmpq   806ee8b <sort_syms+0x41d>
 806ee71:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806ee75:	48 89 c1             	mov    %rax,%rcx
 806ee78:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806ee7f:	00 00 00 
 806ee82:	48 01 d0             	add    %rdx,%rax
 806ee85:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 806ee89:	eb ca                	jmp    806ee55 <sort_syms+0x3e7>
 806ee8b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806ee8f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ee96:	00 00 00 
 806ee99:	48 01 c8             	add    %rcx,%rax
 806ee9c:	48 8b 08             	mov    (%rax),%rcx
 806ee9f:	48 c1 e9 20          	shr    $0x20,%rcx
 806eea3:	89 4d a8             	mov    %ecx,-0x58(%rbp)
 806eea6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806eeaa:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806eeb1:	00 00 00 
 806eeb4:	48 01 c8             	add    %rcx,%rax
 806eeb7:	48 8b 08             	mov    (%rax),%rcx
 806eeba:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
 806eec1:	00 00 00 
 806eec4:	48 21 c1             	and    %rax,%rcx
 806eec7:	89 4d ac             	mov    %ecx,-0x54(%rbp)
 806eeca:	8b 45 a8             	mov    -0x58(%rbp),%eax
 806eecd:	48 63 c0             	movslq %eax,%rax
 806eed0:	48 89 c1             	mov    %rax,%rcx
 806eed3:	48 c1 e1 02          	shl    $0x2,%rcx
 806eed7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806eedb:	48 89 ca             	mov    %rcx,%rdx
 806eede:	48 01 d0             	add    %rdx,%rax
 806eee1:	8b 08                	mov    (%rax),%ecx
 806eee3:	89 4d a8             	mov    %ecx,-0x58(%rbp)
 806eee6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806eeea:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806eef1:	00 00 00 
 806eef4:	48 01 c8             	add    %rcx,%rax
 806eef7:	8b 4d a8             	mov    -0x58(%rbp),%ecx
 806eefa:	48 63 c9             	movslq %ecx,%rcx
 806eefd:	48 89 ca             	mov    %rcx,%rdx
 806ef00:	48 c1 e2 20          	shl    $0x20,%rdx
 806ef04:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 806ef07:	48 63 c9             	movslq %ecx,%rcx
 806ef0a:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 806ef11:	48 89 d0             	mov    %rdx,%rax
 806ef14:	48 89 ca             	mov    %rcx,%rdx
 806ef17:	48 01 d0             	add    %rdx,%rax
 806ef1a:	48 89 c1             	mov    %rax,%rcx
 806ef1d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 806ef24:	48 89 08             	mov    %rcx,(%rax)
 806ef27:	e9 45 ff ff ff       	jmpq   806ee71 <sort_syms+0x403>
 806ef2c:	e9 6b fe ff ff       	jmpq   806ed9c <sort_syms+0x32e>
 806ef31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806ef35:	48 89 c7             	mov    %rax,%rdi
 806ef38:	b8 00 00 00 00       	mov    $0x0,%eax
 806ef3d:	e8 f4 cf fd ff       	callq  804bf36 <tcc_free>
 806ef42:	c9                   	leaveq 
 806ef43:	c3                   	retq   

000000000806ef44 <relocate_common_syms>:
 806ef44:	55                   	push   %rbp
 806ef45:	48 89 e5             	mov    %rsp,%rbp
 806ef48:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806ef4f:	48 8b 05 42 ef 01 00 	mov    0x1ef42(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806ef56:	48 8b 00             	mov    (%rax),%rax
 806ef59:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ef60:	00 00 00 
 806ef63:	48 01 c8             	add    %rcx,%rax
 806ef66:	48 8b 0d 2b ef 01 00 	mov    0x1ef2b(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806ef6d:	48 8b 09             	mov    (%rcx),%rcx
 806ef70:	48 8b 10             	mov    (%rax),%rdx
 806ef73:	48 8b 01             	mov    (%rcx),%rax
 806ef76:	48 01 c2             	add    %rax,%rdx
 806ef79:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 806ef7d:	48 8b 05 14 ef 01 00 	mov    0x1ef14(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806ef84:	48 8b 00             	mov    (%rax),%rax
 806ef87:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806ef8e:	00 00 00 
 806ef91:	48 01 c8             	add    %rcx,%rax
 806ef94:	48 8b 08             	mov    (%rax),%rcx
 806ef97:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806ef9e:	00 00 00 
 806efa1:	48 01 c1             	add    %rax,%rcx
 806efa4:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
 806efa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806efac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806efb0:	48 89 c2             	mov    %rax,%rdx
 806efb3:	48 89 c8             	mov    %rcx,%rax
 806efb6:	48 39 c2             	cmp    %rax,%rdx
 806efb9:	0f 83 22 01 00 00    	jae    806f0e1 <relocate_common_syms+0x19d>
 806efbf:	e9 1a 00 00 00       	jmpq   806efde <relocate_common_syms+0x9a>
 806efc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806efc8:	48 89 c1             	mov    %rax,%rcx
 806efcb:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806efd2:	00 00 00 
 806efd5:	48 01 d0             	add    %rdx,%rax
 806efd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 806efdc:	eb ca                	jmp    806efa8 <relocate_common_syms+0x64>
 806efde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806efe2:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806efe9:	00 00 00 
 806efec:	48 01 c8             	add    %rcx,%rax
 806efef:	0f b7 08             	movzwl (%rax),%ecx
 806eff2:	81 f9 f2 ff 00 00    	cmp    $0xfff2,%ecx
 806eff8:	0f 85 de 00 00 00    	jne    806f0dc <relocate_common_syms+0x198>
 806effe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f002:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f009:	00 00 00 
 806f00c:	48 01 c8             	add    %rcx,%rax
 806f00f:	48 8b 08             	mov    (%rax),%rcx
 806f012:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806f016:	48 8b 05 63 ef 01 00 	mov    0x1ef63(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 806f01d:	48 8b 00             	mov    (%rax),%rax
 806f020:	48 8b 08             	mov    (%rax),%rcx
 806f023:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806f027:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f02b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806f02f:	48 01 c8             	add    %rcx,%rax
 806f032:	48 89 c1             	mov    %rax,%rcx
 806f035:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 806f03c:	00 00 00 
 806f03f:	48 29 c1             	sub    %rax,%rcx
 806f042:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 806f049:	00 00 00 
 806f04c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 806f050:	48 29 d0             	sub    %rdx,%rax
 806f053:	48 89 ca             	mov    %rcx,%rdx
 806f056:	48 89 c1             	mov    %rax,%rcx
 806f059:	48 21 ca             	and    %rcx,%rdx
 806f05c:	48 89 d0             	mov    %rdx,%rax
 806f05f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806f063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f067:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f06e:	00 00 00 
 806f071:	48 01 c8             	add    %rcx,%rax
 806f074:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806f078:	48 89 08             	mov    %rcx,(%rax)
 806f07b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f07f:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806f086:	00 00 00 
 806f089:	48 01 c8             	add    %rcx,%rax
 806f08c:	48 8b 0d ed ee 01 00 	mov    0x1eeed(%rip),%rcx        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 806f093:	48 8b 09             	mov    (%rcx),%rcx
 806f096:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 806f09d:	00 00 00 
 806f0a0:	48 01 d1             	add    %rdx,%rcx
 806f0a3:	0f b7 11             	movzwl (%rcx),%edx
 806f0a6:	66 89 10             	mov    %dx,(%rax)
 806f0a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f0ad:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806f0b4:	00 00 00 
 806f0b7:	48 01 c8             	add    %rcx,%rax
 806f0ba:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806f0be:	48 8b 10             	mov    (%rax),%rdx
 806f0c1:	48 01 d1             	add    %rdx,%rcx
 806f0c4:	48 89 c8             	mov    %rcx,%rax
 806f0c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806f0cb:	48 8b 05 ae ee 01 00 	mov    0x1eeae(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 806f0d2:	48 8b 00             	mov    (%rax),%rax
 806f0d5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806f0d9:	48 89 08             	mov    %rcx,(%rax)
 806f0dc:	e9 e3 fe ff ff       	jmpq   806efc4 <relocate_common_syms+0x80>
 806f0e1:	c9                   	leaveq 
 806f0e2:	c3                   	retq   

000000000806f0e3 <relocate_syms>:
 806f0e3:	55                   	push   %rbp
 806f0e4:	48 89 e5             	mov    %rsp,%rbp
 806f0e7:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 806f0ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806f0f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806f0f6:	48 8b 05 9b ed 01 00 	mov    0x1ed9b(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806f0fd:	48 8b 00             	mov    (%rax),%rax
 806f100:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f107:	00 00 00 
 806f10a:	48 01 c8             	add    %rcx,%rax
 806f10d:	48 8b 0d 84 ed 01 00 	mov    0x1ed84(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806f114:	48 8b 09             	mov    (%rcx),%rcx
 806f117:	48 8b 10             	mov    (%rax),%rdx
 806f11a:	48 8b 01             	mov    (%rcx),%rax
 806f11d:	48 01 c2             	add    %rax,%rdx
 806f120:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 806f124:	48 8b 05 6d ed 01 00 	mov    0x1ed6d(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806f12b:	48 8b 00             	mov    (%rax),%rax
 806f12e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f135:	00 00 00 
 806f138:	48 01 c8             	add    %rcx,%rax
 806f13b:	48 8b 08             	mov    (%rax),%rcx
 806f13e:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806f145:	00 00 00 
 806f148:	48 01 c1             	add    %rax,%rcx
 806f14b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806f14f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f153:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 806f157:	48 89 c2             	mov    %rax,%rdx
 806f15a:	48 89 c8             	mov    %rcx,%rax
 806f15d:	48 39 c2             	cmp    %rax,%rdx
 806f160:	0f 83 e0 02 00 00    	jae    806f446 <relocate_syms+0x363>
 806f166:	e9 1a 00 00 00       	jmpq   806f185 <relocate_syms+0xa2>
 806f16b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f16f:	48 89 c1             	mov    %rax,%rcx
 806f172:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806f179:	00 00 00 
 806f17c:	48 01 d0             	add    %rdx,%rax
 806f17f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806f183:	eb ca                	jmp    806f14f <relocate_syms+0x6c>
 806f185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f189:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806f190:	00 00 00 
 806f193:	48 01 c8             	add    %rcx,%rax
 806f196:	0f b7 08             	movzwl (%rax),%ecx
 806f199:	89 4d d0             	mov    %ecx,-0x30(%rbp)
 806f19c:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806f19f:	83 f8 00             	cmp    $0x0,%eax
 806f1a2:	0f 85 16 02 00 00    	jne    806f3be <relocate_syms+0x2db>
 806f1a8:	48 8b 05 d9 ed 01 00 	mov    0x1edd9(%rip),%rax        # 808df88 <_GLOBAL_OFFSET_TABLE_+0x308>
 806f1af:	48 8b 00             	mov    (%rax),%rax
 806f1b2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f1b9:	00 00 00 
 806f1bc:	48 01 c8             	add    %rcx,%rax
 806f1bf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806f1c3:	8b 11                	mov    (%rcx),%edx
 806f1c5:	48 8b 08             	mov    (%rax),%rcx
 806f1c8:	48 89 d0             	mov    %rdx,%rax
 806f1cb:	48 01 c1             	add    %rax,%rcx
 806f1ce:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 806f1d2:	8b 45 f0             	mov    -0x10(%rbp),%eax
 806f1d5:	85 c0                	test   %eax,%eax
 806f1d7:	0f 84 87 00 00 00    	je     806f264 <relocate_syms+0x181>
 806f1dd:	48 8b 05 b4 ec 01 00 	mov    0x1ecb4(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806f1e4:	48 8b 00             	mov    (%rax),%rax
 806f1e7:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806f1ee:	00 00 00 
 806f1f1:	48 01 c8             	add    %rcx,%rax
 806f1f4:	48 8b 08             	mov    (%rax),%rcx
 806f1f7:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 806f1fe:	00 00 00 
 806f201:	48 01 c1             	add    %rax,%rcx
 806f204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f208:	8b 10                	mov    (%rax),%edx
 806f20a:	48 8b 01             	mov    (%rcx),%rax
 806f20d:	48 89 d1             	mov    %rdx,%rcx
 806f210:	48 01 c8             	add    %rcx,%rax
 806f213:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 806f217:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806f21b:	48 89 c6             	mov    %rax,%rsi
 806f21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f222:	48 89 c7             	mov    %rax,%rdi
 806f225:	b8 00 00 00 00       	mov    $0x0,%eax
 806f22a:	e8 92 e7 00 00       	callq  807d9c1 <resolve_sym>
 806f22f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 806f233:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806f237:	85 c0                	test   %eax,%eax
 806f239:	0f 84 20 00 00 00    	je     806f25f <relocate_syms+0x17c>
 806f23f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f243:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f24a:	00 00 00 
 806f24d:	48 01 c8             	add    %rcx,%rax
 806f250:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806f254:	48 89 ca             	mov    %rcx,%rdx
 806f257:	48 89 10             	mov    %rdx,(%rax)
 806f25a:	e9 e2 01 00 00       	jmpq   806f441 <relocate_syms+0x35e>
 806f25f:	e9 c4 00 00 00       	jmpq   806f328 <relocate_syms+0x245>
 806f264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f268:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 806f26f:	00 00 00 
 806f272:	48 01 c8             	add    %rcx,%rax
 806f275:	48 8b 08             	mov    (%rax),%rcx
 806f278:	85 c9                	test   %ecx,%ecx
 806f27a:	0f 84 a8 00 00 00    	je     806f328 <relocate_syms+0x245>
 806f280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f284:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 806f28b:	00 00 00 
 806f28e:	48 01 c8             	add    %rcx,%rax
 806f291:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 806f295:	48 89 ce             	mov    %rcx,%rsi
 806f298:	48 8b 08             	mov    (%rax),%rcx
 806f29b:	48 89 cf             	mov    %rcx,%rdi
 806f29e:	b8 00 00 00 00       	mov    $0x0,%eax
 806f2a3:	e8 55 ec ff ff       	callq  806defd <find_elf_sym>
 806f2a8:	89 45 cc             	mov    %eax,-0x34(%rbp)
 806f2ab:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806f2ae:	85 c0                	test   %eax,%eax
 806f2b0:	0f 84 72 00 00 00    	je     806f328 <relocate_syms+0x245>
 806f2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f2ba:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 806f2c1:	00 00 00 
 806f2c4:	48 01 c8             	add    %rcx,%rax
 806f2c7:	48 8b 08             	mov    (%rax),%rcx
 806f2ca:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 806f2d1:	00 00 00 
 806f2d4:	48 01 c1             	add    %rax,%rcx
 806f2d7:	8b 45 cc             	mov    -0x34(%rbp),%eax
 806f2da:	48 63 c0             	movslq %eax,%rax
 806f2dd:	48 89 c2             	mov    %rax,%rdx
 806f2e0:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 806f2e7:	00 00 00 
 806f2ea:	48 0f af d0          	imul   %rax,%rdx
 806f2ee:	48 8b 01             	mov    (%rcx),%rax
 806f2f1:	48 89 d1             	mov    %rdx,%rcx
 806f2f4:	48 01 c8             	add    %rcx,%rax
 806f2f7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806f2fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f2ff:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f306:	00 00 00 
 806f309:	48 01 c8             	add    %rcx,%rax
 806f30c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806f310:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 806f317:	00 00 00 
 806f31a:	48 01 d1             	add    %rdx,%rcx
 806f31d:	48 8b 11             	mov    (%rcx),%rdx
 806f320:	48 89 10             	mov    %rdx,(%rax)
 806f323:	e9 19 01 00 00       	jmpq   806f441 <relocate_syms+0x35e>
 806f328:	48 8d 05 ac d1 01 00 	lea    0x1d1ac(%rip),%rax        # 808c4db <L.111>
 806f32f:	48 89 c6             	mov    %rax,%rsi
 806f332:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806f336:	48 89 c7             	mov    %rax,%rdi
 806f339:	b8 00 00 00 00       	mov    $0x0,%eax
 806f33e:	e8 9d 7e 01 00       	callq  80871e0 <strcmp>
 806f343:	85 c0                	test   %eax,%eax
 806f345:	0f 84 05 00 00 00    	je     806f350 <relocate_syms+0x26d>
 806f34b:	e9 05 00 00 00       	jmpq   806f355 <relocate_syms+0x272>
 806f350:	e9 ec 00 00 00       	jmpq   806f441 <relocate_syms+0x35e>
 806f355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f359:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806f360:	00 00 00 
 806f363:	48 01 c8             	add    %rcx,%rax
 806f366:	0f b6 08             	movzbl (%rax),%ecx
 806f369:	c1 f9 04             	sar    $0x4,%ecx
 806f36c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 806f36f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806f372:	83 f8 02             	cmp    $0x2,%eax
 806f375:	0f 85 23 00 00 00    	jne    806f39e <relocate_syms+0x2bb>
 806f37b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f37f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f386:	00 00 00 
 806f389:	48 01 c8             	add    %rcx,%rax
 806f38c:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 806f393:	00 00 00 
 806f396:	48 89 08             	mov    %rcx,(%rax)
 806f399:	e9 1b 00 00 00       	jmpq   806f3b9 <relocate_syms+0x2d6>
 806f39e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 806f3a2:	48 89 c6             	mov    %rax,%rsi
 806f3a5:	48 8d 05 36 d1 01 00 	lea    0x1d136(%rip),%rax        # 808c4e2 <L.112>
 806f3ac:	48 89 c7             	mov    %rax,%rdi
 806f3af:	b8 00 00 00 00       	mov    $0x0,%eax
 806f3b4:	e8 34 e1 fd ff       	callq  804d4ed <tcc_error_noabort>
 806f3b9:	e9 83 00 00 00       	jmpq   806f441 <relocate_syms+0x35e>
 806f3be:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806f3c1:	81 f8 00 ff 00 00    	cmp    $0xff00,%eax
 806f3c7:	0f 8d 74 00 00 00    	jge    806f441 <relocate_syms+0x35e>
 806f3cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f3d1:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f3d8:	00 00 00 
 806f3db:	48 01 c8             	add    %rcx,%rax
 806f3de:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806f3e2:	48 ba 78 00 00 00 00 	movabs $0x78,%rdx
 806f3e9:	00 00 00 
 806f3ec:	48 01 d1             	add    %rdx,%rcx
 806f3ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 806f3f3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 806f3f7:	48 b8 06 00 00 00 00 	movabs $0x6,%rax
 806f3fe:	00 00 00 
 806f401:	48 01 c2             	add    %rax,%rdx
 806f404:	0f b7 02             	movzwl (%rdx),%eax
 806f407:	48 63 c0             	movslq %eax,%rax
 806f40a:	48 89 c2             	mov    %rax,%rdx
 806f40d:	48 c1 e2 03          	shl    $0x3,%rdx
 806f411:	48 8b 01             	mov    (%rcx),%rax
 806f414:	48 89 d1             	mov    %rdx,%rcx
 806f417:	48 01 c8             	add    %rcx,%rax
 806f41a:	48 8b 08             	mov    (%rax),%rcx
 806f41d:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 806f424:	00 00 00 
 806f427:	48 01 c1             	add    %rax,%rcx
 806f42a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806f42e:	48 8b 00             	mov    (%rax),%rax
 806f431:	48 8b 11             	mov    (%rcx),%rdx
 806f434:	48 01 d0             	add    %rdx,%rax
 806f437:	48 89 c1             	mov    %rax,%rcx
 806f43a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806f43e:	48 89 08             	mov    %rcx,(%rax)
 806f441:	e9 25 fd ff ff       	jmpq   806f16b <relocate_syms+0x88>
 806f446:	c9                   	leaveq 
 806f447:	c3                   	retq   

000000000806f448 <add_jmp_table>:
 806f448:	55                   	push   %rbp
 806f449:	48 89 e5             	mov    %rsp,%rbp
 806f44c:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806f453:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806f457:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806f45b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f45f:	48 b9 a8 0c 00 00 00 	movabs $0xca8,%rcx
 806f466:	00 00 00 
 806f469:	48 01 c8             	add    %rcx,%rax
 806f46c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806f470:	48 ba b0 0c 00 00 00 	movabs $0xcb0,%rdx
 806f477:	00 00 00 
 806f47a:	48 01 d1             	add    %rdx,%rcx
 806f47d:	8b 11                	mov    (%rcx),%edx
 806f47f:	48 8b 08             	mov    (%rax),%rcx
 806f482:	48 89 d0             	mov    %rdx,%rax
 806f485:	48 01 c1             	add    %rax,%rcx
 806f488:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806f48c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f490:	48 b9 b0 0c 00 00 00 	movabs $0xcb0,%rcx
 806f497:	00 00 00 
 806f49a:	48 01 c8             	add    %rcx,%rax
 806f49d:	8b 08                	mov    (%rax),%ecx
 806f49f:	83 c1 0e             	add    $0xe,%ecx
 806f4a2:	89 08                	mov    %ecx,(%rax)
 806f4a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f4a8:	b9 ff 00 00 00       	mov    $0xff,%ecx
 806f4ad:	88 08                	mov    %cl,(%rax)
 806f4af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f4b3:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 806f4ba:	00 00 00 
 806f4bd:	48 01 c8             	add    %rcx,%rax
 806f4c0:	b9 25 00 00 00       	mov    $0x25,%ecx
 806f4c5:	88 08                	mov    %cl,(%rax)
 806f4c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f4cb:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 806f4d2:	00 00 00 
 806f4d5:	48 01 c8             	add    %rcx,%rax
 806f4d8:	b9 00 00 00 00       	mov    $0x0,%ecx
 806f4dd:	89 08                	mov    %ecx,(%rax)
 806f4df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f4e3:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 806f4ea:	00 00 00 
 806f4ed:	48 01 c8             	add    %rcx,%rax
 806f4f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806f4f4:	48 89 08             	mov    %rcx,(%rax)
 806f4f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f4fb:	e9 00 00 00 00       	jmpq   806f500 <add_jmp_table+0xb8>
 806f500:	c9                   	leaveq 
 806f501:	c3                   	retq   

000000000806f502 <add_got_table>:
 806f502:	55                   	push   %rbp
 806f503:	48 89 e5             	mov    %rsp,%rbp
 806f506:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 806f50d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806f511:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806f515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f519:	48 b9 a8 0c 00 00 00 	movabs $0xca8,%rcx
 806f520:	00 00 00 
 806f523:	48 01 c8             	add    %rcx,%rax
 806f526:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806f52a:	48 ba b0 0c 00 00 00 	movabs $0xcb0,%rdx
 806f531:	00 00 00 
 806f534:	48 01 d1             	add    %rdx,%rcx
 806f537:	8b 11                	mov    (%rcx),%edx
 806f539:	48 8b 08             	mov    (%rax),%rcx
 806f53c:	48 89 d0             	mov    %rdx,%rax
 806f53f:	48 01 c1             	add    %rax,%rcx
 806f542:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806f546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f54a:	48 b9 b0 0c 00 00 00 	movabs $0xcb0,%rcx
 806f551:	00 00 00 
 806f554:	48 01 c8             	add    %rcx,%rax
 806f557:	8b 08                	mov    (%rax),%ecx
 806f559:	83 c1 08             	add    $0x8,%ecx
 806f55c:	89 08                	mov    %ecx,(%rax)
 806f55e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f562:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806f566:	48 89 08             	mov    %rcx,(%rax)
 806f569:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f56d:	e9 00 00 00 00       	jmpq   806f572 <add_got_table+0x70>
 806f572:	c9                   	leaveq 
 806f573:	c3                   	retq   

000000000806f574 <relocate_section>:
 806f574:	55                   	push   %rbp
 806f575:	48 89 e5             	mov    %rsp,%rbp
 806f578:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
 806f57f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806f583:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806f587:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806f58b:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 806f592:	00 00 00 
 806f595:	48 01 c8             	add    %rcx,%rax
 806f598:	48 8b 08             	mov    (%rax),%rcx
 806f59b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806f59f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f5a3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f5aa:	00 00 00 
 806f5ad:	48 01 c8             	add    %rcx,%rax
 806f5b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806f5b4:	48 8b 10             	mov    (%rax),%rdx
 806f5b7:	48 8b 01             	mov    (%rcx),%rax
 806f5ba:	48 01 c2             	add    %rax,%rdx
 806f5bd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 806f5c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806f5c5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f5cc:	00 00 00 
 806f5cf:	48 01 c8             	add    %rcx,%rax
 806f5d2:	48 8b 08             	mov    (%rax),%rcx
 806f5d5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 806f5d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f5dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806f5e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806f5e5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 806f5e9:	48 89 c2             	mov    %rax,%rdx
 806f5ec:	48 89 c8             	mov    %rcx,%rax
 806f5ef:	48 39 c2             	cmp    %rax,%rdx
 806f5f2:	0f 83 dd 06 00 00    	jae    806fcd5 <relocate_section+0x761>
 806f5f8:	e9 1a 00 00 00       	jmpq   806f617 <relocate_section+0xa3>
 806f5fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806f601:	48 89 c1             	mov    %rax,%rcx
 806f604:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806f60b:	00 00 00 
 806f60e:	48 01 d0             	add    %rdx,%rax
 806f611:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806f615:	eb ca                	jmp    806f5e1 <relocate_section+0x6d>
 806f617:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806f61b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f622:	00 00 00 
 806f625:	48 01 c8             	add    %rcx,%rax
 806f628:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806f62c:	48 8b 10             	mov    (%rax),%rdx
 806f62f:	48 8b 01             	mov    (%rcx),%rax
 806f632:	48 01 c2             	add    %rax,%rdx
 806f635:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 806f639:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806f63d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f644:	00 00 00 
 806f647:	48 01 c8             	add    %rcx,%rax
 806f64a:	48 8b 08             	mov    (%rax),%rcx
 806f64d:	48 c1 e9 20          	shr    $0x20,%rcx
 806f651:	89 4d c0             	mov    %ecx,-0x40(%rbp)
 806f654:	48 8b 05 3d e8 01 00 	mov    0x1e83d(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 806f65b:	48 8b 00             	mov    (%rax),%rax
 806f65e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f665:	00 00 00 
 806f668:	48 01 c8             	add    %rcx,%rax
 806f66b:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 806f66e:	48 63 c9             	movslq %ecx,%rcx
 806f671:	48 89 ca             	mov    %rcx,%rdx
 806f674:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 806f67b:	00 00 00 
 806f67e:	48 0f af d1          	imul   %rcx,%rdx
 806f682:	48 8b 08             	mov    (%rax),%rcx
 806f685:	48 89 d0             	mov    %rdx,%rax
 806f688:	48 01 c1             	add    %rax,%rcx
 806f68b:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 806f68f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 806f693:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f69a:	00 00 00 
 806f69d:	48 01 c8             	add    %rcx,%rax
 806f6a0:	48 8b 08             	mov    (%rax),%rcx
 806f6a3:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 806f6a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806f6ab:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806f6b2:	00 00 00 
 806f6b5:	48 01 c8             	add    %rcx,%rax
 806f6b8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806f6bc:	48 8b 10             	mov    (%rax),%rdx
 806f6bf:	48 01 d1             	add    %rdx,%rcx
 806f6c2:	48 89 c8             	mov    %rcx,%rax
 806f6c5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 806f6c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806f6cd:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f6d4:	00 00 00 
 806f6d7:	48 01 c8             	add    %rcx,%rax
 806f6da:	48 8b 08             	mov    (%rax),%rcx
 806f6dd:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
 806f6e4:	00 00 00 
 806f6e7:	48 21 c1             	and    %rax,%rcx
 806f6ea:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
 806f6ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806f6f1:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 806f6f8:	00 00 00 
 806f6fb:	48 01 c8             	add    %rcx,%rax
 806f6fe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806f702:	48 8b 10             	mov    (%rax),%rdx
 806f705:	48 8b 01             	mov    (%rcx),%rax
 806f708:	48 01 c2             	add    %rax,%rdx
 806f70b:	48 89 d0             	mov    %rdx,%rax
 806f70e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 806f712:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 806f715:	e9 05 00 00 00       	jmpq   806f71f <relocate_section+0x1ab>
 806f71a:	e9 09 00 00 00       	jmpq   806f728 <relocate_section+0x1b4>
 806f71f:	83 f8 01             	cmp    $0x1,%eax
 806f722:	0f 85 8e 00 00 00    	jne    806f7b6 <relocate_section+0x242>
 806f728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f72c:	8b 08                	mov    (%rax),%ecx
 806f72e:	c1 e1 18             	shl    $0x18,%ecx
 806f731:	c1 e9 18             	shr    $0x18,%ecx
 806f734:	83 f9 02             	cmp    $0x2,%ecx
 806f737:	0f 85 5b 00 00 00    	jne    806f798 <relocate_section+0x224>
 806f73d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f741:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f748:	00 00 00 
 806f74b:	48 01 c8             	add    %rcx,%rax
 806f74e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f755:	00 00 00 
 806f758:	48 89 08             	mov    %rcx,(%rax)
 806f75b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f75f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806f766:	00 00 00 
 806f769:	48 01 c8             	add    %rcx,%rax
 806f76c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806f770:	48 8b 11             	mov    (%rcx),%rdx
 806f773:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806f777:	48 01 ca             	add    %rcx,%rdx
 806f77a:	48 89 d1             	mov    %rdx,%rcx
 806f77d:	48 89 08             	mov    %rcx,(%rax)
 806f780:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f784:	48 89 c1             	mov    %rax,%rcx
 806f787:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806f78e:	00 00 00 
 806f791:	48 01 d0             	add    %rdx,%rax
 806f794:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806f798:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806f79c:	48 8b 08             	mov    (%rax),%rcx
 806f79f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
 806f7a3:	48 01 d1             	add    %rdx,%rcx
 806f7a6:	48 89 ca             	mov    %rcx,%rdx
 806f7a9:	48 89 10             	mov    %rdx,(%rax)
 806f7ac:	e9 1f 05 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806f7b1:	e9 09 00 00 00       	jmpq   806f7bf <relocate_section+0x24b>
 806f7b6:	83 f8 0a             	cmp    $0xa,%eax
 806f7b9:	0f 85 05 00 00 00    	jne    806f7c4 <relocate_section+0x250>
 806f7bf:	e9 09 00 00 00       	jmpq   806f7cd <relocate_section+0x259>
 806f7c4:	83 f8 0b             	cmp    $0xb,%eax
 806f7c7:	0f 85 94 00 00 00    	jne    806f861 <relocate_section+0x2ed>
 806f7cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f7d1:	8b 08                	mov    (%rax),%ecx
 806f7d3:	c1 e1 18             	shl    $0x18,%ecx
 806f7d6:	c1 e9 18             	shr    $0x18,%ecx
 806f7d9:	83 f9 02             	cmp    $0x2,%ecx
 806f7dc:	0f 85 60 00 00 00    	jne    806f842 <relocate_section+0x2ce>
 806f7e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f7e6:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f7ed:	00 00 00 
 806f7f0:	48 01 c8             	add    %rcx,%rax
 806f7f3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f7fa:	00 00 00 
 806f7fd:	48 89 08             	mov    %rcx,(%rax)
 806f800:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f804:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806f80b:	00 00 00 
 806f80e:	48 01 c8             	add    %rcx,%rax
 806f811:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806f815:	8b 11                	mov    (%rcx),%edx
 806f817:	48 63 d2             	movslq %edx,%rdx
 806f81a:	48 89 d1             	mov    %rdx,%rcx
 806f81d:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
 806f821:	48 01 d1             	add    %rdx,%rcx
 806f824:	48 89 ca             	mov    %rcx,%rdx
 806f827:	48 89 10             	mov    %rdx,(%rax)
 806f82a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f82e:	48 89 c1             	mov    %rax,%rcx
 806f831:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806f838:	00 00 00 
 806f83b:	48 01 d0             	add    %rdx,%rax
 806f83e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806f842:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806f846:	8b 08                	mov    (%rax),%ecx
 806f848:	48 63 c9             	movslq %ecx,%rcx
 806f84b:	48 89 ca             	mov    %rcx,%rdx
 806f84e:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806f852:	48 01 ca             	add    %rcx,%rdx
 806f855:	89 10                	mov    %edx,(%rax)
 806f857:	e9 74 04 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806f85c:	e9 09 00 00 00       	jmpq   806f86a <relocate_section+0x2f6>
 806f861:	83 f8 02             	cmp    $0x2,%eax
 806f864:	0f 85 d0 00 00 00    	jne    806f93a <relocate_section+0x3c6>
 806f86a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f86e:	8b 08                	mov    (%rax),%ecx
 806f870:	c1 e1 18             	shl    $0x18,%ecx
 806f873:	c1 e9 18             	shr    $0x18,%ecx
 806f876:	83 f9 02             	cmp    $0x2,%ecx
 806f879:	0f 85 b6 00 00 00    	jne    806f935 <relocate_section+0x3c1>
 806f87f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f883:	48 b9 b8 00 00 00 00 	movabs $0xb8,%rcx
 806f88a:	00 00 00 
 806f88d:	48 01 c8             	add    %rcx,%rax
 806f890:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 806f893:	48 63 c9             	movslq %ecx,%rcx
 806f896:	48 89 ca             	mov    %rcx,%rdx
 806f899:	48 c1 e2 02          	shl    $0x2,%rdx
 806f89d:	48 8b 08             	mov    (%rax),%rcx
 806f8a0:	48 89 d0             	mov    %rdx,%rax
 806f8a3:	48 01 c1             	add    %rax,%rcx
 806f8a6:	8b 01                	mov    (%rcx),%eax
 806f8a8:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 806f8ab:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 806f8ae:	85 c0                	test   %eax,%eax
 806f8b0:	0f 84 7f 00 00 00    	je     806f935 <relocate_section+0x3c1>
 806f8b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f8ba:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806f8be:	48 8b 11             	mov    (%rcx),%rdx
 806f8c1:	48 89 10             	mov    %rdx,(%rax)
 806f8c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f8c8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806f8cf:	00 00 00 
 806f8d2:	48 01 c8             	add    %rcx,%rax
 806f8d5:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
 806f8d8:	48 63 c9             	movslq %ecx,%rcx
 806f8db:	48 89 ca             	mov    %rcx,%rdx
 806f8de:	48 c1 e2 20          	shl    $0x20,%rdx
 806f8e2:	48 89 d1             	mov    %rdx,%rcx
 806f8e5:	48 ba 02 00 00 00 00 	movabs $0x2,%rdx
 806f8ec:	00 00 00 
 806f8ef:	48 01 d1             	add    %rdx,%rcx
 806f8f2:	48 89 ca             	mov    %rcx,%rdx
 806f8f5:	48 89 10             	mov    %rdx,(%rax)
 806f8f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f8fc:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806f903:	00 00 00 
 806f906:	48 01 c8             	add    %rcx,%rax
 806f909:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 806f90d:	8b 11                	mov    (%rcx),%edx
 806f90f:	48 63 d2             	movslq %edx,%rdx
 806f912:	48 89 d1             	mov    %rdx,%rcx
 806f915:	48 89 08             	mov    %rcx,(%rax)
 806f918:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 806f91c:	48 89 c1             	mov    %rax,%rcx
 806f91f:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806f926:	00 00 00 
 806f929:	48 01 d0             	add    %rdx,%rax
 806f92c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806f930:	e9 9b 03 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806f935:	e9 09 00 00 00       	jmpq   806f943 <relocate_section+0x3cf>
 806f93a:	83 f8 04             	cmp    $0x4,%eax
 806f93d:	0f 85 2d 01 00 00    	jne    806fa70 <relocate_section+0x4fc>
 806f943:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806f947:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 806f94b:	48 29 c8             	sub    %rcx,%rax
 806f94e:	48 89 c1             	mov    %rax,%rcx
 806f951:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 806f955:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806f959:	48 b9 01 00 00 80 ff 	movabs $0xffffffff80000001,%rcx
 806f960:	ff ff ff 
 806f963:	48 39 c8             	cmp    %rcx,%rax
 806f966:	0f 8e 1c 00 00 00    	jle    806f988 <relocate_section+0x414>
 806f96c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806f970:	48 b9 ff ff ff 7f 00 	movabs $0x7fffffff,%rcx
 806f977:	00 00 00 
 806f97a:	48 39 c8             	cmp    %rcx,%rax
 806f97d:	0f 8f 05 00 00 00    	jg     806f988 <relocate_section+0x414>
 806f983:	e9 c6 00 00 00       	jmpq   806fa4e <relocate_section+0x4da>
 806f988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f98c:	8b 08                	mov    (%rax),%ecx
 806f98e:	c1 e1 18             	shl    $0x18,%ecx
 806f991:	c1 e9 18             	shr    $0x18,%ecx
 806f994:	83 f9 00             	cmp    $0x0,%ecx
 806f997:	0f 85 6a 00 00 00    	jne    806fa07 <relocate_section+0x493>
 806f99d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806f9a1:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806f9a8:	00 00 00 
 806f9ab:	48 01 c8             	add    %rcx,%rax
 806f9ae:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806f9b2:	48 8b 10             	mov    (%rax),%rdx
 806f9b5:	48 29 d1             	sub    %rdx,%rcx
 806f9b8:	48 89 c8             	mov    %rcx,%rax
 806f9bb:	48 89 c6             	mov    %rax,%rsi
 806f9be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806f9c2:	48 89 c7             	mov    %rax,%rdi
 806f9c5:	b8 00 00 00 00       	mov    $0x0,%eax
 806f9ca:	e8 79 fa ff ff       	callq  806f448 <add_jmp_table>
 806f9cf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806f9d3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 806f9d7:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 806f9de:	00 00 00 
 806f9e1:	48 01 c1             	add    %rax,%rcx
 806f9e4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 806f9e8:	48 8b 11             	mov    (%rcx),%rdx
 806f9eb:	48 01 d0             	add    %rdx,%rax
 806f9ee:	48 89 c1             	mov    %rax,%rcx
 806f9f1:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 806f9f5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 806f9f9:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 806f9fd:	48 29 c8             	sub    %rcx,%rax
 806fa00:	48 89 c1             	mov    %rax,%rcx
 806fa03:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 806fa07:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806fa0b:	48 b9 01 00 00 80 ff 	movabs $0xffffffff80000001,%rcx
 806fa12:	ff ff ff 
 806fa15:	48 39 c8             	cmp    %rcx,%rax
 806fa18:	0f 8e 1c 00 00 00    	jle    806fa3a <relocate_section+0x4c6>
 806fa1e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 806fa22:	48 b9 ff ff ff 7f 00 	movabs $0x7fffffff,%rcx
 806fa29:	00 00 00 
 806fa2c:	48 39 c8             	cmp    %rcx,%rax
 806fa2f:	0f 8f 05 00 00 00    	jg     806fa3a <relocate_section+0x4c6>
 806fa35:	e9 14 00 00 00       	jmpq   806fa4e <relocate_section+0x4da>
 806fa3a:	48 8d 05 b7 ca 01 00 	lea    0x1cab7(%rip),%rax        # 808c4f8 <L.113>
 806fa41:	48 89 c7             	mov    %rax,%rdi
 806fa44:	b8 00 00 00 00       	mov    $0x0,%eax
 806fa49:	e8 79 dc fd ff       	callq  804d6c7 <tcc_error>
 806fa4e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806fa52:	8b 08                	mov    (%rax),%ecx
 806fa54:	48 63 c9             	movslq %ecx,%rcx
 806fa57:	48 89 ca             	mov    %rcx,%rdx
 806fa5a:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 806fa5e:	48 01 ca             	add    %rcx,%rdx
 806fa61:	48 89 d1             	mov    %rdx,%rcx
 806fa64:	89 08                	mov    %ecx,(%rax)
 806fa66:	e9 65 02 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806fa6b:	e9 09 00 00 00       	jmpq   806fa79 <relocate_section+0x505>
 806fa70:	83 f8 06             	cmp    $0x6,%eax
 806fa73:	0f 85 05 00 00 00    	jne    806fa7e <relocate_section+0x50a>
 806fa79:	e9 09 00 00 00       	jmpq   806fa87 <relocate_section+0x513>
 806fa7e:	83 f8 07             	cmp    $0x7,%eax
 806fa81:	0f 85 33 00 00 00    	jne    806faba <relocate_section+0x546>
 806fa87:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806fa8b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806fa8f:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 806fa96:	00 00 00 
 806fa99:	48 01 d1             	add    %rdx,%rcx
 806fa9c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
 806faa0:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 806faa4:	48 8b 01             	mov    (%rcx),%rax
 806faa7:	48 29 c2             	sub    %rax,%rdx
 806faaa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 806faae:	89 10                	mov    %edx,(%rax)
 806fab0:	e9 1b 02 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806fab5:	e9 09 00 00 00       	jmpq   806fac3 <relocate_section+0x54f>
 806faba:	83 f8 09             	cmp    $0x9,%eax
 806fabd:	0f 85 48 01 00 00    	jne    806fc0b <relocate_section+0x697>
 806fac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806fac7:	8b 08                	mov    (%rax),%ecx
 806fac9:	c1 e1 18             	shl    $0x18,%ecx
 806facc:	c1 e9 18             	shr    $0x18,%ecx
 806facf:	83 f9 00             	cmp    $0x0,%ecx
 806fad2:	0f 85 8a 00 00 00    	jne    806fb62 <relocate_section+0x5ee>
 806fad8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806fadc:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 806fae3:	00 00 00 
 806fae6:	48 01 c8             	add    %rcx,%rax
 806fae9:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806faed:	48 8b 10             	mov    (%rax),%rdx
 806faf0:	48 29 d1             	sub    %rdx,%rcx
 806faf3:	48 89 c8             	mov    %rcx,%rax
 806faf6:	48 89 c6             	mov    %rax,%rsi
 806faf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806fafd:	48 89 c7             	mov    %rax,%rdi
 806fb00:	b8 00 00 00 00       	mov    $0x0,%eax
 806fb05:	e8 f8 f9 ff ff       	callq  806f502 <add_got_table>
 806fb0a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806fb0e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 806fb12:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 806fb19:	00 00 00 
 806fb1c:	48 01 c1             	add    %rax,%rcx
 806fb1f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 806fb23:	48 8b 11             	mov    (%rcx),%rdx
 806fb26:	48 01 d0             	add    %rdx,%rax
 806fb29:	48 89 c1             	mov    %rax,%rcx
 806fb2c:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 806fb30:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806fb34:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806fb38:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 806fb3c:	48 29 d1             	sub    %rdx,%rcx
 806fb3f:	8b 10                	mov    (%rax),%edx
 806fb41:	48 63 d2             	movslq %edx,%rdx
 806fb44:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 806fb4b:	48 89 d0             	mov    %rdx,%rax
 806fb4e:	48 89 ca             	mov    %rcx,%rdx
 806fb51:	48 01 d0             	add    %rdx,%rax
 806fb54:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
 806fb5b:	89 01                	mov    %eax,(%rcx)
 806fb5d:	e9 6e 01 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806fb62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806fb66:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806fb6a:	48 ba 98 00 00 00 00 	movabs $0x98,%rdx
 806fb71:	00 00 00 
 806fb74:	48 01 d1             	add    %rdx,%rcx
 806fb77:	48 8b 11             	mov    (%rcx),%rdx
 806fb7a:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 806fb81:	00 00 00 
 806fb84:	48 01 ca             	add    %rcx,%rdx
 806fb87:	48 8b 0a             	mov    (%rdx),%rcx
 806fb8a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 806fb8e:	48 29 d1             	sub    %rdx,%rcx
 806fb91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 806fb95:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 806fb9c:	48 b8 a8 00 00 00 00 	movabs $0xa8,%rax
 806fba3:	00 00 00 
 806fba6:	48 01 c2             	add    %rax,%rdx
 806fba9:	8b 45 c0             	mov    -0x40(%rbp),%eax
 806fbac:	48 63 c0             	movslq %eax,%rax
 806fbaf:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 806fbb6:	48 89 c1             	mov    %rax,%rcx
 806fbb9:	48 c1 e1 03          	shl    $0x3,%rcx
 806fbbd:	48 8b 02             	mov    (%rdx),%rax
 806fbc0:	48 89 ca             	mov    %rcx,%rdx
 806fbc3:	48 01 d0             	add    %rdx,%rax
 806fbc6:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
 806fbcd:	48 8b 10             	mov    (%rax),%rdx
 806fbd0:	48 01 d1             	add    %rdx,%rcx
 806fbd3:	48 89 c8             	mov    %rcx,%rax
 806fbd6:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 806fbdd:	00 00 00 
 806fbe0:	48 29 c8             	sub    %rcx,%rax
 806fbe3:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
 806fbea:	8b 09                	mov    (%rcx),%ecx
 806fbec:	48 63 c9             	movslq %ecx,%rcx
 806fbef:	48 89 ca             	mov    %rcx,%rdx
 806fbf2:	48 89 c1             	mov    %rax,%rcx
 806fbf5:	48 01 ca             	add    %rcx,%rdx
 806fbf8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 806fbff:	89 10                	mov    %edx,(%rax)
 806fc01:	e9 ca 00 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806fc06:	e9 09 00 00 00       	jmpq   806fc14 <relocate_section+0x6a0>
 806fc0b:	83 f8 16             	cmp    $0x16,%eax
 806fc0e:	0f 85 5e 00 00 00    	jne    806fc72 <relocate_section+0x6fe>
 806fc14:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806fc18:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806fc1c:	48 ba 98 00 00 00 00 	movabs $0x98,%rdx
 806fc23:	00 00 00 
 806fc26:	48 01 d1             	add    %rdx,%rcx
 806fc29:	48 8b 11             	mov    (%rcx),%rdx
 806fc2c:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 806fc33:	00 00 00 
 806fc36:	48 01 ca             	add    %rcx,%rdx
 806fc39:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 806fc3d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 806fc44:	48 8b 02             	mov    (%rdx),%rax
 806fc47:	48 29 c1             	sub    %rax,%rcx
 806fc4a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 806fc51:	8b 00                	mov    (%rax),%eax
 806fc53:	48 63 c0             	movslq %eax,%rax
 806fc56:	48 89 c2             	mov    %rax,%rdx
 806fc59:	48 89 c8             	mov    %rcx,%rax
 806fc5c:	48 01 c2             	add    %rax,%rdx
 806fc5f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 806fc66:	89 10                	mov    %edx,(%rax)
 806fc68:	e9 63 00 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806fc6d:	e9 09 00 00 00       	jmpq   806fc7b <relocate_section+0x707>
 806fc72:	83 f8 03             	cmp    $0x3,%eax
 806fc75:	0f 85 55 00 00 00    	jne    806fcd0 <relocate_section+0x75c>
 806fc7b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 806fc7f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806fc83:	48 ba a8 00 00 00 00 	movabs $0xa8,%rdx
 806fc8a:	00 00 00 
 806fc8d:	48 01 d1             	add    %rdx,%rcx
 806fc90:	8b 55 c0             	mov    -0x40(%rbp),%edx
 806fc93:	48 63 d2             	movslq %edx,%rdx
 806fc96:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 806fc9d:	48 89 d0             	mov    %rdx,%rax
 806fca0:	48 c1 e0 03          	shl    $0x3,%rax
 806fca4:	48 8b 11             	mov    (%rcx),%rdx
 806fca7:	48 89 c1             	mov    %rax,%rcx
 806fcaa:	48 01 ca             	add    %rcx,%rdx
 806fcad:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806fcb4:	8b 00                	mov    (%rax),%eax
 806fcb6:	48 63 c0             	movslq %eax,%rax
 806fcb9:	48 89 c1             	mov    %rax,%rcx
 806fcbc:	48 8b 02             	mov    (%rdx),%rax
 806fcbf:	48 01 c1             	add    %rax,%rcx
 806fcc2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 806fcc9:	89 08                	mov    %ecx,(%rax)
 806fccb:	e9 00 00 00 00       	jmpq   806fcd0 <relocate_section+0x75c>
 806fcd0:	e9 28 f9 ff ff       	jmpq   806f5fd <relocate_section+0x89>
 806fcd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806fcd9:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 806fce0:	00 00 00 
 806fce3:	48 01 c8             	add    %rcx,%rax
 806fce6:	8b 08                	mov    (%rax),%ecx
 806fce8:	83 e1 02             	and    $0x2,%ecx
 806fceb:	85 c9                	test   %ecx,%ecx
 806fced:	0f 84 28 00 00 00    	je     806fd1b <relocate_section+0x7a7>
 806fcf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806fcf7:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 806fcfe:	00 00 00 
 806fd01:	48 01 c8             	add    %rcx,%rax
 806fd04:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 806fd08:	48 ba c8 00 00 00 00 	movabs $0xc8,%rdx
 806fd0f:	00 00 00 
 806fd12:	48 01 d1             	add    %rdx,%rcx
 806fd15:	48 8b 11             	mov    (%rcx),%rdx
 806fd18:	48 89 10             	mov    %rdx,(%rax)
 806fd1b:	c9                   	leaveq 
 806fd1c:	c3                   	retq   

000000000806fd1d <relocate_rel>:
 806fd1d:	55                   	push   %rbp
 806fd1e:	48 89 e5             	mov    %rsp,%rbp
 806fd21:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 806fd28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806fd2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806fd30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806fd34:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 806fd3b:	00 00 00 
 806fd3e:	48 01 c8             	add    %rcx,%rax
 806fd41:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806fd45:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 806fd4c:	00 00 00 
 806fd4f:	48 01 d1             	add    %rdx,%rcx
 806fd52:	8b 11                	mov    (%rcx),%edx
 806fd54:	48 63 d2             	movslq %edx,%rdx
 806fd57:	48 89 d1             	mov    %rdx,%rcx
 806fd5a:	48 c1 e1 03          	shl    $0x3,%rcx
 806fd5e:	48 8b 10             	mov    (%rax),%rdx
 806fd61:	48 89 c8             	mov    %rcx,%rax
 806fd64:	48 01 c2             	add    %rax,%rdx
 806fd67:	48 8b 02             	mov    (%rdx),%rax
 806fd6a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806fd6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806fd72:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806fd79:	00 00 00 
 806fd7c:	48 01 c8             	add    %rcx,%rax
 806fd7f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806fd83:	48 8b 10             	mov    (%rax),%rdx
 806fd86:	48 8b 01             	mov    (%rcx),%rax
 806fd89:	48 01 c2             	add    %rax,%rdx
 806fd8c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 806fd90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806fd94:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806fd9b:	00 00 00 
 806fd9e:	48 01 c8             	add    %rcx,%rax
 806fda1:	48 8b 08             	mov    (%rax),%rcx
 806fda4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 806fda8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806fdac:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 806fdb0:	48 89 c2             	mov    %rax,%rdx
 806fdb3:	48 89 c8             	mov    %rcx,%rax
 806fdb6:	48 39 c2             	cmp    %rax,%rdx
 806fdb9:	0f 83 4d 00 00 00    	jae    806fe0c <relocate_rel+0xef>
 806fdbf:	e9 1a 00 00 00       	jmpq   806fdde <relocate_rel+0xc1>
 806fdc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806fdc8:	48 89 c1             	mov    %rax,%rcx
 806fdcb:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806fdd2:	00 00 00 
 806fdd5:	48 01 d0             	add    %rdx,%rax
 806fdd8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 806fddc:	eb ca                	jmp    806fda8 <relocate_rel+0x8b>
 806fdde:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 806fde2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 806fde6:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 806fded:	00 00 00 
 806fdf0:	48 01 d1             	add    %rdx,%rcx
 806fdf3:	48 8b 10             	mov    (%rax),%rdx
 806fdf6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 806fdfa:	48 8b 01             	mov    (%rcx),%rax
 806fdfd:	48 01 c2             	add    %rax,%rdx
 806fe00:	48 89 d0             	mov    %rdx,%rax
 806fe03:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 806fe07:	48 89 01             	mov    %rax,(%rcx)
 806fe0a:	eb b8                	jmp    806fdc4 <relocate_rel+0xa7>
 806fe0c:	c9                   	leaveq 
 806fe0d:	c3                   	retq   

000000000806fe0e <prepare_dynamic_rel>:
 806fe0e:	55                   	push   %rbp
 806fe0f:	48 89 e5             	mov    %rsp,%rbp
 806fe12:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 806fe19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806fe1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806fe21:	b8 00 00 00 00       	mov    $0x0,%eax
 806fe26:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806fe29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806fe2d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806fe34:	00 00 00 
 806fe37:	48 01 c8             	add    %rcx,%rax
 806fe3a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 806fe3e:	48 8b 10             	mov    (%rax),%rdx
 806fe41:	48 8b 01             	mov    (%rcx),%rax
 806fe44:	48 01 c2             	add    %rax,%rdx
 806fe47:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 806fe4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806fe4f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806fe56:	00 00 00 
 806fe59:	48 01 c8             	add    %rcx,%rax
 806fe5c:	48 8b 08             	mov    (%rax),%rcx
 806fe5f:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 806fe63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806fe67:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 806fe6b:	48 89 c2             	mov    %rax,%rdx
 806fe6e:	48 89 c8             	mov    %rcx,%rax
 806fe71:	48 39 c2             	cmp    %rax,%rdx
 806fe74:	0f 83 01 01 00 00    	jae    806ff7b <prepare_dynamic_rel+0x16d>
 806fe7a:	e9 1a 00 00 00       	jmpq   806fe99 <prepare_dynamic_rel+0x8b>
 806fe7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806fe83:	48 89 c1             	mov    %rax,%rcx
 806fe86:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 806fe8d:	00 00 00 
 806fe90:	48 01 d0             	add    %rdx,%rax
 806fe93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 806fe97:	eb ca                	jmp    806fe63 <prepare_dynamic_rel+0x55>
 806fe99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806fe9d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806fea4:	00 00 00 
 806fea7:	48 01 c8             	add    %rcx,%rax
 806feaa:	48 8b 08             	mov    (%rax),%rcx
 806fead:	48 c1 e9 20          	shr    $0x20,%rcx
 806feb1:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 806feb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 806feb8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 806febf:	00 00 00 
 806fec2:	48 01 c8             	add    %rcx,%rax
 806fec5:	48 8b 08             	mov    (%rax),%rcx
 806fec8:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
 806fecf:	00 00 00 
 806fed2:	48 21 c1             	and    %rax,%rcx
 806fed5:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 806fed8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 806fedb:	e9 05 00 00 00       	jmpq   806fee5 <prepare_dynamic_rel+0xd7>
 806fee0:	e9 09 00 00 00       	jmpq   806feee <prepare_dynamic_rel+0xe0>
 806fee5:	83 f8 0a             	cmp    $0xa,%eax
 806fee8:	0f 85 05 00 00 00    	jne    806fef3 <prepare_dynamic_rel+0xe5>
 806feee:	e9 09 00 00 00       	jmpq   806fefc <prepare_dynamic_rel+0xee>
 806fef3:	83 f8 0b             	cmp    $0xb,%eax
 806fef6:	0f 85 05 00 00 00    	jne    806ff01 <prepare_dynamic_rel+0xf3>
 806fefc:	e9 09 00 00 00       	jmpq   806ff0a <prepare_dynamic_rel+0xfc>
 806ff01:	83 f8 01             	cmp    $0x1,%eax
 806ff04:	0f 85 16 00 00 00    	jne    806ff20 <prepare_dynamic_rel+0x112>
 806ff0a:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ff0d:	48 89 c1             	mov    %rax,%rcx
 806ff10:	83 c0 01             	add    $0x1,%eax
 806ff13:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806ff16:	e9 5b 00 00 00       	jmpq   806ff76 <prepare_dynamic_rel+0x168>
 806ff1b:	e9 09 00 00 00       	jmpq   806ff29 <prepare_dynamic_rel+0x11b>
 806ff20:	83 f8 02             	cmp    $0x2,%eax
 806ff23:	0f 85 48 00 00 00    	jne    806ff71 <prepare_dynamic_rel+0x163>
 806ff29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806ff2d:	48 b9 b8 00 00 00 00 	movabs $0xb8,%rcx
 806ff34:	00 00 00 
 806ff37:	48 01 c8             	add    %rcx,%rax
 806ff3a:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 806ff3d:	48 63 c9             	movslq %ecx,%rcx
 806ff40:	48 89 ca             	mov    %rcx,%rdx
 806ff43:	48 c1 e2 02          	shl    $0x2,%rdx
 806ff47:	48 8b 08             	mov    (%rax),%rcx
 806ff4a:	48 89 d0             	mov    %rdx,%rax
 806ff4d:	48 01 c1             	add    %rax,%rcx
 806ff50:	8b 01                	mov    (%rcx),%eax
 806ff52:	89 45 d8             	mov    %eax,-0x28(%rbp)
 806ff55:	8b 45 d8             	mov    -0x28(%rbp),%eax
 806ff58:	85 c0                	test   %eax,%eax
 806ff5a:	0f 84 0c 00 00 00    	je     806ff6c <prepare_dynamic_rel+0x15e>
 806ff60:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ff63:	48 89 c1             	mov    %rax,%rcx
 806ff66:	83 c0 01             	add    $0x1,%eax
 806ff69:	89 45 d0             	mov    %eax,-0x30(%rbp)
 806ff6c:	e9 05 00 00 00       	jmpq   806ff76 <prepare_dynamic_rel+0x168>
 806ff71:	e9 00 00 00 00       	jmpq   806ff76 <prepare_dynamic_rel+0x168>
 806ff76:	e9 04 ff ff ff       	jmpq   806fe7f <prepare_dynamic_rel+0x71>
 806ff7b:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ff7e:	85 c0                	test   %eax,%eax
 806ff80:	0f 84 3b 00 00 00    	je     806ffc1 <prepare_dynamic_rel+0x1b3>
 806ff86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ff8a:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 806ff91:	00 00 00 
 806ff94:	48 01 c8             	add    %rcx,%rax
 806ff97:	8b 08                	mov    (%rax),%ecx
 806ff99:	83 c9 02             	or     $0x2,%ecx
 806ff9c:	89 08                	mov    %ecx,(%rax)
 806ff9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 806ffa2:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 806ffa9:	00 00 00 
 806ffac:	48 01 c8             	add    %rcx,%rax
 806ffaf:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 806ffb2:	ba 18 00 00 00       	mov    $0x18,%edx
 806ffb7:	48 0f af ca          	imul   %rdx,%rcx
 806ffbb:	48 89 ca             	mov    %rcx,%rdx
 806ffbe:	48 89 10             	mov    %rdx,(%rax)
 806ffc1:	8b 45 d0             	mov    -0x30(%rbp),%eax
 806ffc4:	e9 00 00 00 00       	jmpq   806ffc9 <prepare_dynamic_rel+0x1bb>
 806ffc9:	c9                   	leaveq 
 806ffca:	c3                   	retq   

000000000806ffcb <alloc_sym_attr>:
 806ffcb:	55                   	push   %rbp
 806ffcc:	48 89 e5             	mov    %rsp,%rbp
 806ffcf:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 806ffd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 806ffda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 806ffde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 806ffe2:	48 b9 b0 00 00 00 00 	movabs $0xb0,%rcx
 806ffe9:	00 00 00 
 806ffec:	48 01 c8             	add    %rcx,%rax
 806ffef:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 806fff2:	8b 10                	mov    (%rax),%edx
 806fff4:	39 d1                	cmp    %edx,%ecx
 806fff6:	0f 8c f6 00 00 00    	jl     80700f2 <alloc_sym_attr+0x127>
 806fffc:	b8 01 00 00 00       	mov    $0x1,%eax
 8070001:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8070004:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8070007:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 807000a:	39 c8                	cmp    %ecx,%eax
 807000c:	0f 8c 0b 00 00 00    	jl     807001d <alloc_sym_attr+0x52>
 8070012:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8070015:	c1 e0 01             	shl    $0x1,%eax
 8070018:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807001b:	eb e7                	jmp    8070004 <alloc_sym_attr+0x39>
 807001d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070021:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 8070028:	00 00 00 
 807002b:	48 01 c8             	add    %rcx,%rax
 807002e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8070031:	c1 e1 03             	shl    $0x3,%ecx
 8070034:	48 89 ca             	mov    %rcx,%rdx
 8070037:	48 89 d6             	mov    %rdx,%rsi
 807003a:	48 8b 08             	mov    (%rax),%rcx
 807003d:	48 89 cf             	mov    %rcx,%rdi
 8070040:	b8 00 00 00 00       	mov    $0x0,%eax
 8070045:	e8 d3 bf fd ff       	callq  804c01d <tcc_realloc>
 807004a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807004e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070052:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 8070059:	00 00 00 
 807005c:	48 01 c8             	add    %rcx,%rax
 807005f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8070063:	48 89 08             	mov    %rcx,(%rax)
 8070066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807006a:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 8070071:	00 00 00 
 8070074:	48 01 c8             	add    %rcx,%rax
 8070077:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807007b:	48 ba b0 00 00 00 00 	movabs $0xb0,%rdx
 8070082:	00 00 00 
 8070085:	48 01 d1             	add    %rdx,%rcx
 8070088:	8b 11                	mov    (%rcx),%edx
 807008a:	48 63 d2             	movslq %edx,%rdx
 807008d:	48 89 d1             	mov    %rdx,%rcx
 8070090:	48 c1 e1 03          	shl    $0x3,%rcx
 8070094:	48 8b 10             	mov    (%rax),%rdx
 8070097:	48 89 c8             	mov    %rcx,%rax
 807009a:	48 01 c2             	add    %rax,%rdx
 807009d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80700a1:	48 b9 b0 00 00 00 00 	movabs $0xb0,%rcx
 80700a8:	00 00 00 
 80700ab:	48 01 c8             	add    %rcx,%rax
 80700ae:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80700b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 80700b5:	8b 10                	mov    (%rax),%edx
 80700b7:	48 29 d1             	sub    %rdx,%rcx
 80700ba:	c1 e1 03             	shl    $0x3,%ecx
 80700bd:	49 89 ca             	mov    %rcx,%r10
 80700c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80700c5:	48 89 c6             	mov    %rax,%rsi
 80700c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80700cc:	48 89 c7             	mov    %rax,%rdi
 80700cf:	4c 89 d2             	mov    %r10,%rdx
 80700d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80700d7:	e8 d4 6d 01 00       	callq  8086eb0 <memset>
 80700dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80700e0:	48 b9 b0 00 00 00 00 	movabs $0xb0,%rcx
 80700e7:	00 00 00 
 80700ea:	48 01 c8             	add    %rcx,%rax
 80700ed:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80700f0:	89 08                	mov    %ecx,(%rax)
 80700f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80700f6:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 80700fd:	00 00 00 
 8070100:	48 01 c8             	add    %rcx,%rax
 8070103:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8070106:	48 63 c9             	movslq %ecx,%rcx
 8070109:	48 89 ca             	mov    %rcx,%rdx
 807010c:	48 c1 e2 03          	shl    $0x3,%rdx
 8070110:	48 8b 08             	mov    (%rax),%rcx
 8070113:	48 89 d0             	mov    %rdx,%rax
 8070116:	48 01 c1             	add    %rax,%rcx
 8070119:	48 89 c8             	mov    %rcx,%rax
 807011c:	e9 00 00 00 00       	jmpq   8070121 <alloc_sym_attr+0x156>
 8070121:	c9                   	leaveq 
 8070122:	c3                   	retq   

0000000008070123 <put32>:
 8070123:	55                   	push   %rbp
 8070124:	48 89 e5             	mov    %rsp,%rbp
 8070127:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807012e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8070132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8070136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807013a:	0f b6 4d f0          	movzbl -0x10(%rbp),%ecx
 807013e:	88 08                	mov    %cl,(%rax)
 8070140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070144:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 807014b:	00 00 00 
 807014e:	48 01 c8             	add    %rcx,%rax
 8070151:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8070154:	c1 e9 08             	shr    $0x8,%ecx
 8070157:	88 08                	mov    %cl,(%rax)
 8070159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807015d:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 8070164:	00 00 00 
 8070167:	48 01 c8             	add    %rcx,%rax
 807016a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 807016d:	c1 e9 10             	shr    $0x10,%ecx
 8070170:	88 08                	mov    %cl,(%rax)
 8070172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070176:	48 b9 03 00 00 00 00 	movabs $0x3,%rcx
 807017d:	00 00 00 
 8070180:	48 01 c8             	add    %rcx,%rax
 8070183:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8070186:	c1 e9 18             	shr    $0x18,%ecx
 8070189:	88 08                	mov    %cl,(%rax)
 807018b:	c9                   	leaveq 
 807018c:	c3                   	retq   

000000000807018d <get32>:
 807018d:	55                   	push   %rbp
 807018e:	48 89 e5             	mov    %rsp,%rbp
 8070191:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8070198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807019c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80701a0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80701a4:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80701ab:	00 00 00 
 80701ae:	48 01 d1             	add    %rdx,%rcx
 80701b1:	0f b6 11             	movzbl (%rcx),%edx
 80701b4:	c1 e2 08             	shl    $0x8,%edx
 80701b7:	0f b6 08             	movzbl (%rax),%ecx
 80701ba:	48 09 d1             	or     %rdx,%rcx
 80701bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80701c1:	48 ba 02 00 00 00 00 	movabs $0x2,%rdx
 80701c8:	00 00 00 
 80701cb:	48 01 d0             	add    %rdx,%rax
 80701ce:	0f b6 10             	movzbl (%rax),%edx
 80701d1:	c1 e2 10             	shl    $0x10,%edx
 80701d4:	48 09 d1             	or     %rdx,%rcx
 80701d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80701db:	48 ba 03 00 00 00 00 	movabs $0x3,%rdx
 80701e2:	00 00 00 
 80701e5:	48 01 d0             	add    %rdx,%rax
 80701e8:	0f b6 10             	movzbl (%rax),%edx
 80701eb:	c1 e2 18             	shl    $0x18,%edx
 80701ee:	48 09 d1             	or     %rdx,%rcx
 80701f1:	48 89 c8             	mov    %rcx,%rax
 80701f4:	e9 00 00 00 00       	jmpq   80701f9 <get32+0x6c>
 80701f9:	c9                   	leaveq 
 80701fa:	c3                   	retq   

00000000080701fb <build_got>:
 80701fb:	55                   	push   %rbp
 80701fc:	48 89 e5             	mov    %rsp,%rbp
 80701ff:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8070206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807020a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807020e:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 8070215:	00 00 00 
 8070218:	48 01 c8             	add    %rcx,%rax
 807021b:	b9 03 00 00 00       	mov    $0x3,%ecx
 8070220:	49 89 cb             	mov    %rcx,%r11
 8070223:	b9 01 00 00 00       	mov    $0x1,%ecx
 8070228:	49 89 ca             	mov    %rcx,%r10
 807022b:	48 8d 0d e8 c2 01 00 	lea    0x1c2e8(%rip),%rcx        # 808c51a <L.114>
 8070232:	48 89 ce             	mov    %rcx,%rsi
 8070235:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8070239:	48 89 cf             	mov    %rcx,%rdi
 807023c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8070240:	4c 89 d2             	mov    %r10,%rdx
 8070243:	4c 89 d9             	mov    %r11,%rcx
 8070246:	b8 00 00 00 00       	mov    $0x0,%eax
 807024b:	e8 a8 c2 fd ff       	callq  804c4f8 <new_section>
 8070250:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8070254:	48 89 01             	mov    %rax,(%rcx)
 8070257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807025b:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 8070262:	00 00 00 
 8070265:	48 01 c8             	add    %rcx,%rax
 8070268:	48 8b 08             	mov    (%rax),%rcx
 807026b:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 8070272:	00 00 00 
 8070275:	48 01 c1             	add    %rax,%rcx
 8070278:	b8 04 00 00 00       	mov    $0x4,%eax
 807027d:	89 01                	mov    %eax,(%rcx)
 807027f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070283:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 807028a:	00 00 00 
 807028d:	48 01 c8             	add    %rcx,%rax
 8070290:	48 8b 08             	mov    (%rax),%rcx
 8070293:	48 b8 1c 00 00 00 00 	movabs $0x1c,%rax
 807029a:	00 00 00 
 807029d:	48 01 c1             	add    %rax,%rcx
 80702a0:	50                   	push   %rax
 80702a1:	48 8d 05 77 c2 01 00 	lea    0x1c277(%rip),%rax        # 808c51f <L.115>
 80702a8:	50                   	push   %rax
 80702a9:	8b 01                	mov    (%rcx),%eax
 80702ab:	49 89 c1             	mov    %rax,%r9
 80702ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80702b3:	49 89 c0             	mov    %rax,%r8
 80702b6:	b8 11 00 00 00       	mov    $0x11,%eax
 80702bb:	49 89 c3             	mov    %rax,%r11
 80702be:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 80702c5:	00 00 00 
 80702c8:	49 89 c2             	mov    %rax,%r10
 80702cb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80702d2:	00 00 00 
 80702d5:	48 89 c6             	mov    %rax,%rsi
 80702d8:	48 8b 05 b9 db 01 00 	mov    0x1dbb9(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80702df:	48 8b 00             	mov    (%rax),%rax
 80702e2:	48 89 c7             	mov    %rax,%rdi
 80702e5:	4c 89 d2             	mov    %r10,%rdx
 80702e8:	4c 89 d9             	mov    %r11,%rcx
 80702eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80702f0:	e8 29 df ff ff       	callq  806e21e <add_elf_sym>
 80702f5:	48 83 c4 10          	add    $0x10,%rsp
 80702f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80702fd:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 8070304:	00 00 00 
 8070307:	48 01 c8             	add    %rcx,%rax
 807030a:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8070311:	00 00 00 
 8070314:	48 89 ce             	mov    %rcx,%rsi
 8070317:	48 8b 08             	mov    (%rax),%rcx
 807031a:	48 89 cf             	mov    %rcx,%rdi
 807031d:	b8 00 00 00 00       	mov    $0x0,%eax
 8070322:	e8 43 c5 fd ff       	callq  804c86a <section_ptr_add>
 8070327:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 807032b:	b8 00 00 00 00       	mov    $0x0,%eax
 8070330:	48 89 c6             	mov    %rax,%rsi
 8070333:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070337:	48 89 c7             	mov    %rax,%rdi
 807033a:	b8 00 00 00 00       	mov    $0x0,%eax
 807033f:	e8 df fd ff ff       	callq  8070123 <put32>
 8070344:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070348:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807034f:	00 00 00 
 8070352:	48 01 c8             	add    %rcx,%rax
 8070355:	b9 00 00 00 00       	mov    $0x0,%ecx
 807035a:	48 89 ce             	mov    %rcx,%rsi
 807035d:	48 89 c7             	mov    %rax,%rdi
 8070360:	b8 00 00 00 00       	mov    $0x0,%eax
 8070365:	e8 b9 fd ff ff       	callq  8070123 <put32>
 807036a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807036e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070375:	00 00 00 
 8070378:	48 01 c8             	add    %rcx,%rax
 807037b:	b9 00 00 00 00       	mov    $0x0,%ecx
 8070380:	48 89 ce             	mov    %rcx,%rsi
 8070383:	48 89 c7             	mov    %rax,%rdi
 8070386:	b8 00 00 00 00       	mov    $0x0,%eax
 807038b:	e8 93 fd ff ff       	callq  8070123 <put32>
 8070390:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070394:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 807039b:	00 00 00 
 807039e:	48 01 c8             	add    %rcx,%rax
 80703a1:	b9 00 00 00 00       	mov    $0x0,%ecx
 80703a6:	48 89 ce             	mov    %rcx,%rsi
 80703a9:	48 89 c7             	mov    %rax,%rdi
 80703ac:	b8 00 00 00 00       	mov    $0x0,%eax
 80703b1:	e8 6d fd ff ff       	callq  8070123 <put32>
 80703b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80703ba:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80703c1:	00 00 00 
 80703c4:	48 01 c8             	add    %rcx,%rax
 80703c7:	b9 00 00 00 00       	mov    $0x0,%ecx
 80703cc:	48 89 ce             	mov    %rcx,%rsi
 80703cf:	48 89 c7             	mov    %rax,%rdi
 80703d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80703d7:	e8 47 fd ff ff       	callq  8070123 <put32>
 80703dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80703e0:	48 b9 14 00 00 00 00 	movabs $0x14,%rcx
 80703e7:	00 00 00 
 80703ea:	48 01 c8             	add    %rcx,%rax
 80703ed:	b9 00 00 00 00       	mov    $0x0,%ecx
 80703f2:	48 89 ce             	mov    %rcx,%rsi
 80703f5:	48 89 c7             	mov    %rax,%rdi
 80703f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80703fd:	e8 21 fd ff ff       	callq  8070123 <put32>
 8070402:	c9                   	leaveq 
 8070403:	c3                   	retq   

0000000008070404 <put_got_entry>:
 8070404:	55                   	push   %rbp
 8070405:	48 89 e5             	mov    %rsp,%rbp
 8070408:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 807040f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8070413:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8070417:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807041b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807041f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8070423:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070427:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 807042e:	00 00 00 
 8070431:	48 01 c8             	add    %rcx,%rax
 8070434:	48 8b 08             	mov    (%rax),%rcx
 8070437:	85 c9                	test   %ecx,%ecx
 8070439:	0f 84 05 00 00 00    	je     8070444 <put_got_entry+0x40>
 807043f:	e9 11 00 00 00       	jmpq   8070455 <put_got_entry+0x51>
 8070444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070448:	48 89 c7             	mov    %rax,%rdi
 807044b:	b8 00 00 00 00       	mov    $0x0,%eax
 8070450:	e8 a6 fd ff ff       	callq  80701fb <build_got>
 8070455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070459:	48 b9 b0 00 00 00 00 	movabs $0xb0,%rcx
 8070460:	00 00 00 
 8070463:	48 01 c8             	add    %rcx,%rax
 8070466:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8070469:	8b 10                	mov    (%rax),%edx
 807046b:	39 d1                	cmp    %edx,%ecx
 807046d:	0f 8d 4c 00 00 00    	jge    80704bf <put_got_entry+0xbb>
 8070473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070477:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 807047e:	00 00 00 
 8070481:	48 01 c8             	add    %rcx,%rax
 8070484:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8070487:	48 63 c9             	movslq %ecx,%rcx
 807048a:	48 89 ca             	mov    %rcx,%rdx
 807048d:	48 c1 e2 03          	shl    $0x3,%rdx
 8070491:	48 8b 08             	mov    (%rax),%rcx
 8070494:	48 89 d0             	mov    %rdx,%rax
 8070497:	48 01 c1             	add    %rax,%rcx
 807049a:	48 8b 01             	mov    (%rcx),%rax
 807049d:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80704a4:	00 00 00 
 80704a7:	48 39 c8             	cmp    %rcx,%rax
 80704aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80704af:	0f 95 c0             	setne  %al
 80704b2:	85 c0                	test   %eax,%eax
 80704b4:	0f 84 05 00 00 00    	je     80704bf <put_got_entry+0xbb>
 80704ba:	e9 30 04 00 00       	jmpq   80708ef <put_got_entry+0x4eb>
 80704bf:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80704c2:	48 89 c6             	mov    %rax,%rsi
 80704c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80704c9:	48 89 c7             	mov    %rax,%rdi
 80704cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80704d1:	e8 f5 fa ff ff       	callq  806ffcb <alloc_sym_attr>
 80704d6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80704da:	48 ba 98 00 00 00 00 	movabs $0x98,%rdx
 80704e1:	00 00 00 
 80704e4:	48 01 d1             	add    %rdx,%rcx
 80704e7:	48 8b 11             	mov    (%rcx),%rdx
 80704ea:	48 8b 0a             	mov    (%rdx),%rcx
 80704ed:	48 89 08             	mov    %rcx,(%rax)
 80704f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80704f4:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 80704fb:	00 00 00 
 80704fe:	48 01 c8             	add    %rcx,%rax
 8070501:	48 8b 08             	mov    (%rax),%rcx
 8070504:	85 c9                	test   %ecx,%ecx
 8070506:	0f 84 a6 03 00 00    	je     80708b2 <put_got_entry+0x4ae>
 807050c:	48 8b 05 85 d9 01 00 	mov    0x1d985(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8070513:	48 8b 00             	mov    (%rax),%rax
 8070516:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807051d:	00 00 00 
 8070520:	48 01 c8             	add    %rcx,%rax
 8070523:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8070526:	48 63 c9             	movslq %ecx,%rcx
 8070529:	48 89 ca             	mov    %rcx,%rdx
 807052c:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8070533:	00 00 00 
 8070536:	48 0f af d1          	imul   %rcx,%rdx
 807053a:	48 8b 08             	mov    (%rax),%rcx
 807053d:	48 89 d0             	mov    %rdx,%rax
 8070540:	48 01 c1             	add    %rax,%rcx
 8070543:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8070547:	48 8b 05 4a d9 01 00 	mov    0x1d94a(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807054e:	48 8b 00             	mov    (%rax),%rax
 8070551:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8070558:	00 00 00 
 807055b:	48 01 c8             	add    %rcx,%rax
 807055e:	48 8b 08             	mov    (%rax),%rcx
 8070561:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8070568:	00 00 00 
 807056b:	48 01 c1             	add    %rax,%rcx
 807056e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8070572:	8b 10                	mov    (%rax),%edx
 8070574:	48 8b 01             	mov    (%rcx),%rax
 8070577:	48 89 d1             	mov    %rdx,%rcx
 807057a:	48 01 c8             	add    %rcx,%rax
 807057d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8070581:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8070585:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807058c:	00 00 00 
 807058f:	48 01 c8             	add    %rcx,%rax
 8070592:	48 8b 08             	mov    (%rax),%rcx
 8070595:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 8070599:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807059c:	83 f8 07             	cmp    $0x7,%eax
 807059f:	0f 85 3a 02 00 00    	jne    80707df <put_got_entry+0x3db>
 80705a5:	b8 25 00 00 00       	mov    $0x25,%eax
 80705aa:	89 45 9c             	mov    %eax,-0x64(%rbp)
 80705ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80705b1:	48 b9 a0 00 00 00 00 	movabs $0xa0,%rcx
 80705b8:	00 00 00 
 80705bb:	48 01 c8             	add    %rcx,%rax
 80705be:	48 8b 08             	mov    (%rax),%rcx
 80705c1:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
 80705c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80705c9:	48 8b 08             	mov    (%rax),%rcx
 80705cc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80705d3:	00 00 00 
 80705d6:	48 39 c1             	cmp    %rax,%rcx
 80705d9:	0f 85 c1 00 00 00    	jne    80706a0 <put_got_entry+0x29c>
 80705df:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80705e6:	00 00 00 
 80705e9:	48 89 c6             	mov    %rax,%rsi
 80705ec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80705f0:	48 89 c7             	mov    %rax,%rdi
 80705f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80705f8:	e8 6d c2 fd ff       	callq  804c86a <section_ptr_add>
 80705fd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8070601:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8070605:	b9 ff 00 00 00       	mov    $0xff,%ecx
 807060a:	88 08                	mov    %cl,(%rax)
 807060c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8070610:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8070617:	00 00 00 
 807061a:	48 01 c8             	add    %rcx,%rax
 807061d:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
 8070620:	83 c1 10             	add    $0x10,%ecx
 8070623:	88 08                	mov    %cl,(%rax)
 8070625:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8070629:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 8070630:	00 00 00 
 8070633:	48 01 c8             	add    %rcx,%rax
 8070636:	b9 08 00 00 00       	mov    $0x8,%ecx
 807063b:	48 89 ce             	mov    %rcx,%rsi
 807063e:	48 89 c7             	mov    %rax,%rdi
 8070641:	b8 00 00 00 00       	mov    $0x0,%eax
 8070646:	e8 d8 fa ff ff       	callq  8070123 <put32>
 807064b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 807064f:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8070656:	00 00 00 
 8070659:	48 01 c8             	add    %rcx,%rax
 807065c:	b9 ff 00 00 00       	mov    $0xff,%ecx
 8070661:	88 08                	mov    %cl,(%rax)
 8070663:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8070667:	48 b9 07 00 00 00 00 	movabs $0x7,%rcx
 807066e:	00 00 00 
 8070671:	48 01 c8             	add    %rcx,%rax
 8070674:	0f b6 4d 9c          	movzbl -0x64(%rbp),%ecx
 8070678:	88 08                	mov    %cl,(%rax)
 807067a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 807067e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070685:	00 00 00 
 8070688:	48 01 c8             	add    %rcx,%rax
 807068b:	b9 10 00 00 00       	mov    $0x10,%ecx
 8070690:	48 89 ce             	mov    %rcx,%rsi
 8070693:	48 89 c7             	mov    %rax,%rdi
 8070696:	b8 00 00 00 00       	mov    $0x0,%eax
 807069b:	e8 83 fa ff ff       	callq  8070123 <put32>
 80706a0:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80706a7:	00 00 00 
 80706aa:	48 89 c6             	mov    %rax,%rsi
 80706ad:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80706b1:	48 89 c7             	mov    %rax,%rdi
 80706b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80706b9:	e8 ac c1 fd ff       	callq  804c86a <section_ptr_add>
 80706be:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 80706c2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80706c6:	b9 ff 00 00 00       	mov    $0xff,%ecx
 80706cb:	88 08                	mov    %cl,(%rax)
 80706cd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80706d1:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 80706d8:	00 00 00 
 80706db:	48 01 c8             	add    %rcx,%rax
 80706de:	0f b6 4d 9c          	movzbl -0x64(%rbp),%ecx
 80706e2:	88 08                	mov    %cl,(%rax)
 80706e4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80706e8:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 80706ef:	00 00 00 
 80706f2:	48 01 c8             	add    %rcx,%rax
 80706f5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80706f9:	48 ba 98 00 00 00 00 	movabs $0x98,%rdx
 8070700:	00 00 00 
 8070703:	48 01 d1             	add    %rdx,%rcx
 8070706:	48 8b 11             	mov    (%rcx),%rdx
 8070709:	8b 0a                	mov    (%rdx),%ecx
 807070b:	48 89 ce             	mov    %rcx,%rsi
 807070e:	48 89 c7             	mov    %rax,%rdi
 8070711:	b8 00 00 00 00       	mov    $0x0,%eax
 8070716:	e8 08 fa ff ff       	callq  8070123 <put32>
 807071b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 807071f:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8070726:	00 00 00 
 8070729:	48 01 c8             	add    %rcx,%rax
 807072c:	b9 68 00 00 00       	mov    $0x68,%ecx
 8070731:	88 08                	mov    %cl,(%rax)
 8070733:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8070737:	48 b9 07 00 00 00 00 	movabs $0x7,%rcx
 807073e:	00 00 00 
 8070741:	48 01 c8             	add    %rcx,%rax
 8070744:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 8070748:	48 8b 11             	mov    (%rcx),%rdx
 807074b:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8070752:	00 00 00 
 8070755:	48 29 ca             	sub    %rcx,%rdx
 8070758:	48 89 d1             	mov    %rdx,%rcx
 807075b:	48 c1 e9 01          	shr    $0x1,%rcx
 807075f:	48 89 ce             	mov    %rcx,%rsi
 8070762:	48 89 c7             	mov    %rax,%rdi
 8070765:	b8 00 00 00 00       	mov    $0x0,%eax
 807076a:	e8 b4 f9 ff ff       	callq  8070123 <put32>
 807076f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8070773:	48 b9 0b 00 00 00 00 	movabs $0xb,%rcx
 807077a:	00 00 00 
 807077d:	48 01 c8             	add    %rcx,%rax
 8070780:	b9 e9 00 00 00       	mov    $0xe9,%ecx
 8070785:	88 08                	mov    %cl,(%rax)
 8070787:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 807078b:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 8070792:	00 00 00 
 8070795:	48 01 c8             	add    %rcx,%rax
 8070798:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 807079c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 80707a3:	00 00 00 
 80707a6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 80707aa:	48 8b 01             	mov    (%rcx),%rax
 80707ad:	48 29 c2             	sub    %rax,%rdx
 80707b0:	48 89 d6             	mov    %rdx,%rsi
 80707b3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80707b7:	48 89 c7             	mov    %rax,%rdi
 80707ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80707bf:	e8 5f f9 ff ff       	callq  8070123 <put32>
 80707c4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 80707c8:	48 8b 08             	mov    (%rax),%rcx
 80707cb:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80707d2:	00 00 00 
 80707d5:	48 29 c1             	sub    %rax,%rcx
 80707d8:	48 89 c8             	mov    %rcx,%rax
 80707db:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 80707df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80707e3:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 80707ea:	00 00 00 
 80707ed:	48 01 c8             	add    %rcx,%rax
 80707f0:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 80707f4:	48 ba 06 00 00 00 00 	movabs $0x6,%rdx
 80707fb:	00 00 00 
 80707fe:	48 01 d1             	add    %rdx,%rcx
 8070801:	50                   	push   %rax
 8070802:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 8070806:	52                   	push   %rdx
 8070807:	0f b7 11             	movzwl (%rcx),%edx
 807080a:	49 89 d1             	mov    %rdx,%r9
 807080d:	b9 00 00 00 00       	mov    $0x0,%ecx
 8070812:	49 89 c8             	mov    %rcx,%r8
 8070815:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8070818:	49 89 cb             	mov    %rcx,%r11
 807081b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 807081f:	49 89 ca             	mov    %rcx,%r10
 8070822:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 8070826:	48 89 ce             	mov    %rcx,%rsi
 8070829:	48 8b 08             	mov    (%rax),%rcx
 807082c:	48 89 cf             	mov    %rcx,%rdi
 807082f:	4c 89 d2             	mov    %r10,%rdx
 8070832:	4c 89 d9             	mov    %r11,%rcx
 8070835:	b8 00 00 00 00       	mov    $0x0,%eax
 807083a:	e8 ee d3 ff ff       	callq  806dc2d <put_elf_sym>
 807083f:	48 83 c4 10          	add    $0x10,%rsp
 8070843:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8070846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807084a:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8070851:	00 00 00 
 8070854:	48 01 c8             	add    %rcx,%rax
 8070857:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807085b:	48 ba 98 00 00 00 00 	movabs $0x98,%rdx
 8070862:	00 00 00 
 8070865:	48 01 d1             	add    %rdx,%rcx
 8070868:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 807086c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 8070870:	48 b8 98 00 00 00 00 	movabs $0x98,%rax
 8070877:	00 00 00 
 807087a:	48 01 c2             	add    %rax,%rdx
 807087d:	48 8b 02             	mov    (%rdx),%rax
 8070880:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 8070883:	49 89 d0             	mov    %rdx,%r8
 8070886:	8b 55 f0             	mov    -0x10(%rbp),%edx
 8070889:	49 89 d3             	mov    %rdx,%r11
 807088c:	48 8b 10             	mov    (%rax),%rdx
 807088f:	49 89 d2             	mov    %rdx,%r10
 8070892:	48 8b 01             	mov    (%rcx),%rax
 8070895:	48 89 c6             	mov    %rax,%rsi
 8070898:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 807089c:	48 8b 00             	mov    (%rax),%rax
 807089f:	48 89 c7             	mov    %rax,%rdi
 80708a2:	4c 89 d2             	mov    %r10,%rdx
 80708a5:	4c 89 d9             	mov    %r11,%rcx
 80708a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80708ad:	e8 8e dd ff ff       	callq  806e640 <put_elf_reloc>
 80708b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80708b6:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 80708bd:	00 00 00 
 80708c0:	48 01 c8             	add    %rcx,%rax
 80708c3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80708ca:	00 00 00 
 80708cd:	48 89 ce             	mov    %rcx,%rsi
 80708d0:	48 8b 08             	mov    (%rax),%rcx
 80708d3:	48 89 cf             	mov    %rcx,%rdi
 80708d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80708db:	e8 8a bf fd ff       	callq  804c86a <section_ptr_add>
 80708e0:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 80708e4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 80708e8:	b9 00 00 00 00       	mov    $0x0,%ecx
 80708ed:	89 08                	mov    %ecx,(%rax)
 80708ef:	c9                   	leaveq 
 80708f0:	c3                   	retq   

00000000080708f1 <build_got_entries>:
 80708f1:	55                   	push   %rbp
 80708f2:	48 89 e5             	mov    %rsp,%rbp
 80708f5:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 80708fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8070900:	b8 01 00 00 00       	mov    $0x1,%eax
 8070905:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8070908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807090c:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8070913:	00 00 00 
 8070916:	48 01 c8             	add    %rcx,%rax
 8070919:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 807091c:	8b 10                	mov    (%rax),%edx
 807091e:	39 d1                	cmp    %edx,%ecx
 8070920:	0f 8d b0 02 00 00    	jge    8070bd6 <build_got_entries+0x2e5>
 8070926:	e9 0e 00 00 00       	jmpq   8070939 <build_got_entries+0x48>
 807092b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807092e:	48 89 c1             	mov    %rax,%rcx
 8070931:	83 c0 01             	add    $0x1,%eax
 8070934:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8070937:	eb cf                	jmp    8070908 <build_got_entries+0x17>
 8070939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807093d:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8070944:	00 00 00 
 8070947:	48 01 c8             	add    %rcx,%rax
 807094a:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 807094d:	48 63 c9             	movslq %ecx,%rcx
 8070950:	48 89 ca             	mov    %rcx,%rdx
 8070953:	48 c1 e2 03          	shl    $0x3,%rdx
 8070957:	48 8b 08             	mov    (%rax),%rcx
 807095a:	48 89 d0             	mov    %rdx,%rax
 807095d:	48 01 c1             	add    %rax,%rcx
 8070960:	48 8b 01             	mov    (%rcx),%rax
 8070963:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8070967:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807096b:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8070972:	00 00 00 
 8070975:	48 01 c8             	add    %rcx,%rax
 8070978:	8b 08                	mov    (%rax),%ecx
 807097a:	83 f9 04             	cmp    $0x4,%ecx
 807097d:	0f 84 05 00 00 00    	je     8070988 <build_got_entries+0x97>
 8070983:	e9 a3 ff ff ff       	jmpq   807092b <build_got_entries+0x3a>
 8070988:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807098c:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8070993:	00 00 00 
 8070996:	48 01 c8             	add    %rcx,%rax
 8070999:	48 8b 08             	mov    (%rax),%rcx
 807099c:	48 8b 05 f5 d4 01 00 	mov    0x1d4f5(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80709a3:	48 8b 00             	mov    (%rax),%rax
 80709a6:	48 89 ca             	mov    %rcx,%rdx
 80709a9:	48 89 c1             	mov    %rax,%rcx
 80709ac:	48 39 ca             	cmp    %rcx,%rdx
 80709af:	0f 84 05 00 00 00    	je     80709ba <build_got_entries+0xc9>
 80709b5:	e9 71 ff ff ff       	jmpq   807092b <build_got_entries+0x3a>
 80709ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80709be:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80709c5:	00 00 00 
 80709c8:	48 01 c8             	add    %rcx,%rax
 80709cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 80709cf:	48 8b 10             	mov    (%rax),%rdx
 80709d2:	48 8b 01             	mov    (%rcx),%rax
 80709d5:	48 01 c2             	add    %rax,%rdx
 80709d8:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 80709dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80709e0:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80709e7:	00 00 00 
 80709ea:	48 01 c8             	add    %rcx,%rax
 80709ed:	48 8b 08             	mov    (%rax),%rcx
 80709f0:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 80709f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80709f8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80709fc:	48 89 c2             	mov    %rax,%rdx
 80709ff:	48 89 c8             	mov    %rcx,%rax
 8070a02:	48 39 c2             	cmp    %rax,%rdx
 8070a05:	0f 83 c6 01 00 00    	jae    8070bd1 <build_got_entries+0x2e0>
 8070a0b:	e9 1a 00 00 00       	jmpq   8070a2a <build_got_entries+0x139>
 8070a10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070a14:	48 89 c1             	mov    %rax,%rcx
 8070a17:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8070a1e:	00 00 00 
 8070a21:	48 01 d0             	add    %rdx,%rax
 8070a24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8070a28:	eb ca                	jmp    80709f4 <build_got_entries+0x103>
 8070a2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070a2e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070a35:	00 00 00 
 8070a38:	48 01 c8             	add    %rcx,%rax
 8070a3b:	48 8b 08             	mov    (%rax),%rcx
 8070a3e:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
 8070a45:	00 00 00 
 8070a48:	48 21 c1             	and    %rax,%rcx
 8070a4b:	89 4d d0             	mov    %ecx,-0x30(%rbp)
 8070a4e:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8070a51:	e9 05 00 00 00       	jmpq   8070a5b <build_got_entries+0x16a>
 8070a56:	e9 09 00 00 00       	jmpq   8070a64 <build_got_entries+0x173>
 8070a5b:	83 f8 03             	cmp    $0x3,%eax
 8070a5e:	0f 85 05 00 00 00    	jne    8070a69 <build_got_entries+0x178>
 8070a64:	e9 09 00 00 00       	jmpq   8070a72 <build_got_entries+0x181>
 8070a69:	83 f8 16             	cmp    $0x16,%eax
 8070a6c:	0f 85 05 00 00 00    	jne    8070a77 <build_got_entries+0x186>
 8070a72:	e9 09 00 00 00       	jmpq   8070a80 <build_got_entries+0x18f>
 8070a77:	83 f8 09             	cmp    $0x9,%eax
 8070a7a:	0f 85 05 00 00 00    	jne    8070a85 <build_got_entries+0x194>
 8070a80:	e9 09 00 00 00       	jmpq   8070a8e <build_got_entries+0x19d>
 8070a85:	83 f8 04             	cmp    $0x4,%eax
 8070a88:	0f 85 39 01 00 00    	jne    8070bc7 <build_got_entries+0x2d6>
 8070a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070a92:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 8070a99:	00 00 00 
 8070a9c:	48 01 c8             	add    %rcx,%rax
 8070a9f:	48 8b 08             	mov    (%rax),%rcx
 8070aa2:	85 c9                	test   %ecx,%ecx
 8070aa4:	0f 84 05 00 00 00    	je     8070aaf <build_got_entries+0x1be>
 8070aaa:	e9 11 00 00 00       	jmpq   8070ac0 <build_got_entries+0x1cf>
 8070aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070ab3:	48 89 c7             	mov    %rax,%rdi
 8070ab6:	b8 00 00 00 00       	mov    $0x0,%eax
 8070abb:	e8 3b f7 ff ff       	callq  80701fb <build_got>
 8070ac0:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8070ac3:	83 f8 03             	cmp    $0x3,%eax
 8070ac6:	0f 84 1d 00 00 00    	je     8070ae9 <build_got_entries+0x1f8>
 8070acc:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8070acf:	83 f8 09             	cmp    $0x9,%eax
 8070ad2:	0f 84 11 00 00 00    	je     8070ae9 <build_got_entries+0x1f8>
 8070ad8:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8070adb:	83 f8 04             	cmp    $0x4,%eax
 8070ade:	0f 84 05 00 00 00    	je     8070ae9 <build_got_entries+0x1f8>
 8070ae4:	e9 d9 00 00 00       	jmpq   8070bc2 <build_got_entries+0x2d1>
 8070ae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070aed:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070af4:	00 00 00 
 8070af7:	48 01 c8             	add    %rcx,%rax
 8070afa:	48 8b 08             	mov    (%rax),%rcx
 8070afd:	48 c1 e9 20          	shr    $0x20,%rcx
 8070b01:	89 4d c8             	mov    %ecx,-0x38(%rbp)
 8070b04:	48 8b 05 8d d3 01 00 	mov    0x1d38d(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8070b0b:	48 8b 00             	mov    (%rax),%rax
 8070b0e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070b15:	00 00 00 
 8070b18:	48 01 c8             	add    %rcx,%rax
 8070b1b:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8070b1e:	48 63 c9             	movslq %ecx,%rcx
 8070b21:	48 89 ca             	mov    %rcx,%rdx
 8070b24:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8070b2b:	00 00 00 
 8070b2e:	48 0f af d1          	imul   %rcx,%rdx
 8070b32:	48 8b 08             	mov    (%rax),%rcx
 8070b35:	48 89 d0             	mov    %rdx,%rax
 8070b38:	48 01 c1             	add    %rax,%rcx
 8070b3b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8070b3f:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8070b42:	83 f8 03             	cmp    $0x3,%eax
 8070b45:	0f 84 11 00 00 00    	je     8070b5c <build_got_entries+0x26b>
 8070b4b:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8070b4e:	83 f8 09             	cmp    $0x9,%eax
 8070b51:	0f 84 05 00 00 00    	je     8070b5c <build_got_entries+0x26b>
 8070b57:	e9 0d 00 00 00       	jmpq   8070b69 <build_got_entries+0x278>
 8070b5c:	b8 06 00 00 00       	mov    $0x6,%eax
 8070b61:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8070b64:	e9 08 00 00 00       	jmpq   8070b71 <build_got_entries+0x280>
 8070b69:	b8 07 00 00 00       	mov    $0x7,%eax
 8070b6e:	89 45 cc             	mov    %eax,-0x34(%rbp)
 8070b71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8070b75:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8070b7c:	00 00 00 
 8070b7f:	48 01 c8             	add    %rcx,%rax
 8070b82:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8070b86:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8070b8d:	00 00 00 
 8070b90:	48 01 d1             	add    %rdx,%rcx
 8070b93:	8b 55 c8             	mov    -0x38(%rbp),%edx
 8070b96:	49 89 d0             	mov    %rdx,%r8
 8070b99:	0f b6 11             	movzbl (%rcx),%edx
 8070b9c:	49 89 d3             	mov    %rdx,%r11
 8070b9f:	48 8b 08             	mov    (%rax),%rcx
 8070ba2:	49 89 ca             	mov    %rcx,%r10
 8070ba5:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8070ba8:	48 89 c6             	mov    %rax,%rsi
 8070bab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070baf:	48 89 c7             	mov    %rax,%rdi
 8070bb2:	4c 89 d2             	mov    %r10,%rdx
 8070bb5:	4c 89 d9             	mov    %r11,%rcx
 8070bb8:	b8 00 00 00 00       	mov    $0x0,%eax
 8070bbd:	e8 42 f8 ff ff       	callq  8070404 <put_got_entry>
 8070bc2:	e9 05 00 00 00       	jmpq   8070bcc <build_got_entries+0x2db>
 8070bc7:	e9 00 00 00 00       	jmpq   8070bcc <build_got_entries+0x2db>
 8070bcc:	e9 3f fe ff ff       	jmpq   8070a10 <build_got_entries+0x11f>
 8070bd1:	e9 55 fd ff ff       	jmpq   807092b <build_got_entries+0x3a>
 8070bd6:	c9                   	leaveq 
 8070bd7:	c3                   	retq   

0000000008070bd8 <new_symtab>:
 8070bd8:	55                   	push   %rbp
 8070bd9:	48 89 e5             	mov    %rsp,%rbp
 8070bdc:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 8070be3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8070be7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8070beb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8070bef:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8070bf3:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8070bf7:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 8070bfb:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8070bfe:	49 89 c3             	mov    %rax,%r11
 8070c01:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8070c04:	49 89 c2             	mov    %rax,%r10
 8070c07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070c0b:	48 89 c6             	mov    %rax,%rsi
 8070c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070c12:	48 89 c7             	mov    %rax,%rdi
 8070c15:	4c 89 d2             	mov    %r10,%rdx
 8070c18:	4c 89 d9             	mov    %r11,%rcx
 8070c1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8070c20:	e8 d3 b8 fd ff       	callq  804c4f8 <new_section>
 8070c25:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8070c29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8070c2d:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8070c34:	00 00 00 
 8070c37:	48 01 c8             	add    %rcx,%rax
 8070c3a:	b9 18 00 00 00       	mov    $0x18,%ecx
 8070c3f:	89 08                	mov    %ecx,(%rax)
 8070c41:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8070c44:	49 89 c3             	mov    %rax,%r11
 8070c47:	b8 03 00 00 00       	mov    $0x3,%eax
 8070c4c:	49 89 c2             	mov    %rax,%r10
 8070c4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8070c53:	48 89 c6             	mov    %rax,%rsi
 8070c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070c5a:	48 89 c7             	mov    %rax,%rdi
 8070c5d:	4c 89 d2             	mov    %r10,%rdx
 8070c60:	4c 89 d9             	mov    %r11,%rcx
 8070c63:	b8 00 00 00 00       	mov    $0x0,%eax
 8070c68:	e8 8b b8 fd ff       	callq  804c4f8 <new_section>
 8070c6d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8070c71:	48 8d 05 bd b8 01 00 	lea    0x1b8bd(%rip),%rax        # 808c535 <L.116>
 8070c78:	48 89 c6             	mov    %rax,%rsi
 8070c7b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8070c7f:	48 89 c7             	mov    %rax,%rdi
 8070c82:	b8 00 00 00 00       	mov    $0x0,%eax
 8070c87:	e8 d7 cb ff ff       	callq  806d863 <put_elf_str>
 8070c8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8070c90:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8070c97:	00 00 00 
 8070c9a:	48 01 c8             	add    %rcx,%rax
 8070c9d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 8070ca1:	48 89 08             	mov    %rcx,(%rax)
 8070ca4:	50                   	push   %rax
 8070ca5:	b8 00 00 00 00       	mov    $0x0,%eax
 8070caa:	50                   	push   %rax
 8070cab:	b8 00 00 00 00       	mov    $0x0,%eax
 8070cb0:	49 89 c1             	mov    %rax,%r9
 8070cb3:	b8 00 00 00 00       	mov    $0x0,%eax
 8070cb8:	49 89 c0             	mov    %rax,%r8
 8070cbb:	b8 00 00 00 00       	mov    $0x0,%eax
 8070cc0:	49 89 c3             	mov    %rax,%r11
 8070cc3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8070cca:	00 00 00 
 8070ccd:	49 89 c2             	mov    %rax,%r10
 8070cd0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8070cd7:	00 00 00 
 8070cda:	48 89 c6             	mov    %rax,%rsi
 8070cdd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8070ce1:	48 89 c7             	mov    %rax,%rdi
 8070ce4:	4c 89 d2             	mov    %r10,%rdx
 8070ce7:	4c 89 d9             	mov    %r11,%rcx
 8070cea:	b8 00 00 00 00       	mov    $0x0,%eax
 8070cef:	e8 39 cf ff ff       	callq  806dc2d <put_elf_sym>
 8070cf4:	48 83 c4 10          	add    $0x10,%rsp
 8070cf8:	b8 01 00 00 00       	mov    $0x1,%eax
 8070cfd:	89 45 ac             	mov    %eax,-0x54(%rbp)
 8070d00:	8b 45 10             	mov    0x10(%rbp),%eax
 8070d03:	49 89 c3             	mov    %rax,%r11
 8070d06:	b8 05 00 00 00       	mov    $0x5,%eax
 8070d0b:	49 89 c2             	mov    %rax,%r10
 8070d0e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8070d12:	48 89 c6             	mov    %rax,%rsi
 8070d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070d19:	48 89 c7             	mov    %rax,%rdi
 8070d1c:	4c 89 d2             	mov    %r10,%rdx
 8070d1f:	4c 89 d9             	mov    %r11,%rcx
 8070d22:	b8 00 00 00 00       	mov    $0x0,%eax
 8070d27:	e8 cc b7 fd ff       	callq  804c4f8 <new_section>
 8070d2c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8070d30:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8070d34:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8070d3b:	00 00 00 
 8070d3e:	48 01 c8             	add    %rcx,%rax
 8070d41:	b9 04 00 00 00       	mov    $0x4,%ecx
 8070d46:	89 08                	mov    %ecx,(%rax)
 8070d48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8070d4c:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 8070d53:	00 00 00 
 8070d56:	48 01 c8             	add    %rcx,%rax
 8070d59:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 8070d5d:	48 89 08             	mov    %rcx,(%rax)
 8070d60:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8070d64:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8070d6b:	00 00 00 
 8070d6e:	48 01 c8             	add    %rcx,%rax
 8070d71:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 8070d75:	48 89 08             	mov    %rcx,(%rax)
 8070d78:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8070d7b:	83 c0 02             	add    $0x2,%eax
 8070d7e:	83 c0 01             	add    $0x1,%eax
 8070d81:	c1 e0 02             	shl    $0x2,%eax
 8070d84:	48 89 c1             	mov    %rax,%rcx
 8070d87:	48 89 ce             	mov    %rcx,%rsi
 8070d8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8070d8e:	48 89 c7             	mov    %rax,%rdi
 8070d91:	b8 00 00 00 00       	mov    $0x0,%eax
 8070d96:	e8 cf ba fd ff       	callq  804c86a <section_ptr_add>
 8070d9b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8070d9f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8070da3:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 8070da6:	89 08                	mov    %ecx,(%rax)
 8070da8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8070dac:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8070db3:	00 00 00 
 8070db6:	48 01 c8             	add    %rcx,%rax
 8070db9:	b9 01 00 00 00       	mov    $0x1,%ecx
 8070dbe:	89 08                	mov    %ecx,(%rax)
 8070dc0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8070dc4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070dcb:	00 00 00 
 8070dce:	48 01 c8             	add    %rcx,%rax
 8070dd1:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 8070dd4:	83 c1 01             	add    $0x1,%ecx
 8070dd7:	c1 e1 02             	shl    $0x2,%ecx
 8070dda:	49 89 ca             	mov    %rcx,%r10
 8070ddd:	b9 00 00 00 00       	mov    $0x0,%ecx
 8070de2:	48 89 ce             	mov    %rcx,%rsi
 8070de5:	48 89 c7             	mov    %rax,%rdi
 8070de8:	4c 89 d2             	mov    %r10,%rdx
 8070deb:	b8 00 00 00 00       	mov    $0x0,%eax
 8070df0:	e8 bb 60 01 00       	callq  8086eb0 <memset>
 8070df5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8070df9:	e9 00 00 00 00       	jmpq   8070dfe <new_symtab+0x226>
 8070dfe:	c9                   	leaveq 
 8070dff:	c3                   	retq   

0000000008070e00 <put_dt>:
 8070e00:	55                   	push   %rbp
 8070e01:	48 89 e5             	mov    %rsp,%rbp
 8070e04:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8070e0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8070e0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8070e13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8070e17:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 8070e1e:	00 00 00 
 8070e21:	48 89 c6             	mov    %rax,%rsi
 8070e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070e28:	48 89 c7             	mov    %rax,%rdi
 8070e2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8070e30:	e8 35 ba fd ff       	callq  804c86a <section_ptr_add>
 8070e35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8070e39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8070e3d:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8070e40:	48 63 c9             	movslq %ecx,%rcx
 8070e43:	48 89 ca             	mov    %rcx,%rdx
 8070e46:	48 89 10             	mov    %rdx,(%rax)
 8070e49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8070e4d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8070e54:	00 00 00 
 8070e57:	48 01 c8             	add    %rcx,%rax
 8070e5a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8070e5e:	48 89 08             	mov    %rcx,(%rax)
 8070e61:	c9                   	leaveq 
 8070e62:	c3                   	retq   

0000000008070e63 <add_init_array_defines>:
 8070e63:	55                   	push   %rbp
 8070e64:	48 89 e5             	mov    %rsp,%rbp
 8070e67:	48 81 ec 20 08 00 00 	sub    $0x820,%rsp
 8070e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8070e72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8070e76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070e7a:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8070e81:	00 00 00 
 8070e84:	48 01 c8             	add    %rcx,%rax
 8070e87:	49 89 c3             	mov    %rax,%r11
 8070e8a:	48 8d 05 a5 b6 01 00 	lea    0x1b6a5(%rip),%rax        # 808c536 <L.117>
 8070e91:	49 89 c2             	mov    %rax,%r10
 8070e94:	b8 00 04 00 00       	mov    $0x400,%eax
 8070e99:	48 89 c6             	mov    %rax,%rsi
 8070e9c:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
 8070ea3:	48 89 c7             	mov    %rax,%rdi
 8070ea6:	4c 89 d2             	mov    %r10,%rdx
 8070ea9:	4c 89 d9             	mov    %r11,%rcx
 8070eac:	b8 00 00 00 00       	mov    $0x0,%eax
 8070eb1:	e8 8a 6d 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8070eb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070eba:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8070ec1:	00 00 00 
 8070ec4:	48 01 c8             	add    %rcx,%rax
 8070ec7:	49 89 c3             	mov    %rax,%r11
 8070eca:	48 8d 05 70 b6 01 00 	lea    0x1b670(%rip),%rax        # 808c541 <L.118>
 8070ed1:	49 89 c2             	mov    %rax,%r10
 8070ed4:	b8 00 04 00 00       	mov    $0x400,%eax
 8070ed9:	48 89 c6             	mov    %rax,%rsi
 8070edc:	48 8d 85 e0 f7 ff ff 	lea    -0x820(%rbp),%rax
 8070ee3:	48 89 c7             	mov    %rax,%rdi
 8070ee6:	4c 89 d2             	mov    %r10,%rdx
 8070ee9:	4c 89 d9             	mov    %r11,%rcx
 8070eec:	b8 00 00 00 00       	mov    $0x0,%eax
 8070ef1:	e8 4a 6d 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8070ef6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8070efa:	48 89 c6             	mov    %rax,%rsi
 8070efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8070f01:	48 89 c7             	mov    %rax,%rdi
 8070f04:	b8 00 00 00 00       	mov    $0x0,%eax
 8070f09:	e8 62 ba fd ff       	callq  804c970 <find_section>
 8070f0e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8070f12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070f16:	85 c0                	test   %eax,%eax
 8070f18:	0f 84 05 00 00 00    	je     8070f23 <add_init_array_defines+0xc0>
 8070f1e:	e9 21 00 00 00       	jmpq   8070f44 <add_init_array_defines+0xe1>
 8070f23:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8070f2a:	00 00 00 
 8070f2d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8070f31:	48 8b 05 40 d0 01 00 	mov    0x1d040(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 8070f38:	48 8b 00             	mov    (%rax),%rax
 8070f3b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8070f3f:	e9 0b 00 00 00       	jmpq   8070f4f <add_init_array_defines+0xec>
 8070f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070f48:	48 8b 08             	mov    (%rax),%rcx
 8070f4b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8070f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070f53:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 8070f5a:	00 00 00 
 8070f5d:	48 01 c8             	add    %rcx,%rax
 8070f60:	50                   	push   %rax
 8070f61:	48 8d 8d e0 fb ff ff 	lea    -0x420(%rbp),%rcx
 8070f68:	51                   	push   %rcx
 8070f69:	8b 08                	mov    (%rax),%ecx
 8070f6b:	49 89 c9             	mov    %rcx,%r9
 8070f6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8070f73:	49 89 c0             	mov    %rax,%r8
 8070f76:	b8 10 00 00 00       	mov    $0x10,%eax
 8070f7b:	49 89 c3             	mov    %rax,%r11
 8070f7e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8070f85:	00 00 00 
 8070f88:	49 89 c2             	mov    %rax,%r10
 8070f8b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8070f92:	00 00 00 
 8070f95:	48 89 c6             	mov    %rax,%rsi
 8070f98:	48 8b 05 f9 ce 01 00 	mov    0x1cef9(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8070f9f:	48 8b 00             	mov    (%rax),%rax
 8070fa2:	48 89 c7             	mov    %rax,%rdi
 8070fa5:	4c 89 d2             	mov    %r10,%rdx
 8070fa8:	4c 89 d9             	mov    %r11,%rcx
 8070fab:	b8 00 00 00 00       	mov    $0x0,%eax
 8070fb0:	e8 69 d2 ff ff       	callq  806e21e <add_elf_sym>
 8070fb5:	48 83 c4 10          	add    $0x10,%rsp
 8070fb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8070fbd:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 8070fc4:	00 00 00 
 8070fc7:	48 01 c8             	add    %rcx,%rax
 8070fca:	50                   	push   %rax
 8070fcb:	48 8d 8d e0 f7 ff ff 	lea    -0x820(%rbp),%rcx
 8070fd2:	51                   	push   %rcx
 8070fd3:	8b 08                	mov    (%rax),%ecx
 8070fd5:	49 89 c9             	mov    %rcx,%r9
 8070fd8:	b8 00 00 00 00       	mov    $0x0,%eax
 8070fdd:	49 89 c0             	mov    %rax,%r8
 8070fe0:	b8 10 00 00 00       	mov    $0x10,%eax
 8070fe5:	49 89 c3             	mov    %rax,%r11
 8070fe8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8070fef:	00 00 00 
 8070ff2:	49 89 c2             	mov    %rax,%r10
 8070ff5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8070ff9:	48 89 c6             	mov    %rax,%rsi
 8070ffc:	48 8b 05 95 ce 01 00 	mov    0x1ce95(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8071003:	48 8b 00             	mov    (%rax),%rax
 8071006:	48 89 c7             	mov    %rax,%rdi
 8071009:	4c 89 d2             	mov    %r10,%rdx
 807100c:	4c 89 d9             	mov    %r11,%rcx
 807100f:	b8 00 00 00 00       	mov    $0x0,%eax
 8071014:	e8 05 d2 ff ff       	callq  806e21e <add_elf_sym>
 8071019:	48 83 c4 10          	add    $0x10,%rsp
 807101d:	c9                   	leaveq 
 807101e:	c3                   	retq   

000000000807101f <tcc_add_support>:
 807101f:	55                   	push   %rbp
 8071020:	48 89 e5             	mov    %rsp,%rbp
 8071023:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
 807102a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807102e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8071032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071036:	48 b9 50 01 00 00 00 	movabs $0x150,%rcx
 807103d:	00 00 00 
 8071040:	48 01 c8             	add    %rcx,%rax
 8071043:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8071047:	49 89 c8             	mov    %rcx,%r8
 807104a:	48 8b 08             	mov    (%rax),%rcx
 807104d:	49 89 cb             	mov    %rcx,%r11
 8071050:	48 8d 05 f3 b4 01 00 	lea    0x1b4f3(%rip),%rax        # 808c54a <L.119>
 8071057:	49 89 c2             	mov    %rax,%r10
 807105a:	b8 00 04 00 00       	mov    $0x400,%eax
 807105f:	48 89 c6             	mov    %rax,%rsi
 8071062:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 8071069:	48 89 c7             	mov    %rax,%rdi
 807106c:	4c 89 d2             	mov    %r10,%rdx
 807106f:	4c 89 d9             	mov    %r11,%rcx
 8071072:	b8 00 00 00 00       	mov    $0x0,%eax
 8071077:	e8 c4 6b 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 807107c:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 8071083:	48 89 c6             	mov    %rax,%rsi
 8071086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807108a:	48 89 c7             	mov    %rax,%rdi
 807108d:	b8 00 00 00 00       	mov    $0x0,%eax
 8071092:	e8 d6 e7 fd ff       	callq  804f86d <tcc_add_file>
 8071097:	e9 00 00 00 00       	jmpq   807109c <tcc_add_support+0x7d>
 807109c:	c9                   	leaveq 
 807109d:	c3                   	retq   

000000000807109e <tcc_add_bcheck>:
 807109e:	55                   	push   %rbp
 807109f:	48 89 e5             	mov    %rsp,%rbp
 80710a2:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80710a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80710ad:	c9                   	leaveq 
 80710ae:	c3                   	retq   

00000000080710af <tcc_add_runtime>:
 80710af:	55                   	push   %rbp
 80710b0:	48 89 e5             	mov    %rsp,%rbp
 80710b3:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80710ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80710be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80710c2:	48 89 c7             	mov    %rax,%rdi
 80710c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80710ca:	e8 cf ff ff ff       	callq  807109e <tcc_add_bcheck>
 80710cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80710d3:	48 b9 dc 00 00 00 00 	movabs $0xdc,%rcx
 80710da:	00 00 00 
 80710dd:	48 01 c8             	add    %rcx,%rax
 80710e0:	8b 08                	mov    (%rax),%ecx
 80710e2:	85 c9                	test   %ecx,%ecx
 80710e4:	0f 84 05 00 00 00    	je     80710ef <tcc_add_runtime+0x40>
 80710ea:	e9 66 00 00 00       	jmpq   8071155 <tcc_add_runtime+0xa6>
 80710ef:	48 8d 05 5a b4 01 00 	lea    0x1b45a(%rip),%rax        # 808c550 <L.120>
 80710f6:	48 89 c6             	mov    %rax,%rsi
 80710f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80710fd:	48 89 c7             	mov    %rax,%rdi
 8071100:	b8 00 00 00 00       	mov    $0x0,%eax
 8071105:	e8 54 ea fd ff       	callq  804fb5e <tcc_add_library>
 807110a:	48 8d 05 41 b4 01 00 	lea    0x1b441(%rip),%rax        # 808c552 <L.121>
 8071111:	48 89 c6             	mov    %rax,%rsi
 8071114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071118:	48 89 c7             	mov    %rax,%rdi
 807111b:	b8 00 00 00 00       	mov    $0x0,%eax
 8071120:	e8 fa fe ff ff       	callq  807101f <tcc_add_support>
 8071125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071129:	8b 08                	mov    (%rax),%ecx
 807112b:	c1 e1 18             	shl    $0x18,%ecx
 807112e:	c1 e9 18             	shr    $0x18,%ecx
 8071131:	83 f9 00             	cmp    $0x0,%ecx
 8071134:	0f 84 1b 00 00 00    	je     8071155 <tcc_add_runtime+0xa6>
 807113a:	48 8d 05 1b b4 01 00 	lea    0x1b41b(%rip),%rax        # 808c55c <L.122>
 8071141:	48 89 c6             	mov    %rax,%rsi
 8071144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071148:	48 89 c7             	mov    %rax,%rdi
 807114b:	b8 00 00 00 00       	mov    $0x0,%eax
 8071150:	e8 65 e9 fd ff       	callq  804faba <tcc_add_crt>
 8071155:	c9                   	leaveq 
 8071156:	c3                   	retq   

0000000008071157 <tcc_add_linker_symbols>:
 8071157:	55                   	push   %rbp
 8071158:	48 89 e5             	mov    %rsp,%rbp
 807115b:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
 8071162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8071166:	48 8b 05 63 cd 01 00 	mov    0x1cd63(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 807116d:	48 8b 00             	mov    (%rax),%rax
 8071170:	48 8b 0d 59 cd 01 00 	mov    0x1cd59(%rip),%rcx        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 8071177:	48 8b 09             	mov    (%rcx),%rcx
 807117a:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 8071181:	00 00 00 
 8071184:	48 01 d1             	add    %rdx,%rcx
 8071187:	50                   	push   %rax
 8071188:	48 8d 15 d4 b3 01 00 	lea    0x1b3d4(%rip),%rdx        # 808c563 <L.123>
 807118f:	52                   	push   %rdx
 8071190:	8b 11                	mov    (%rcx),%edx
 8071192:	49 89 d1             	mov    %rdx,%r9
 8071195:	b9 00 00 00 00       	mov    $0x0,%ecx
 807119a:	49 89 c8             	mov    %rcx,%r8
 807119d:	b9 10 00 00 00       	mov    $0x10,%ecx
 80711a2:	49 89 cb             	mov    %rcx,%r11
 80711a5:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80711ac:	00 00 00 
 80711af:	49 89 ca             	mov    %rcx,%r10
 80711b2:	48 8b 08             	mov    (%rax),%rcx
 80711b5:	48 89 ce             	mov    %rcx,%rsi
 80711b8:	48 8b 05 d9 cc 01 00 	mov    0x1ccd9(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80711bf:	48 8b 00             	mov    (%rax),%rax
 80711c2:	48 89 c7             	mov    %rax,%rdi
 80711c5:	4c 89 d2             	mov    %r10,%rdx
 80711c8:	4c 89 d9             	mov    %r11,%rcx
 80711cb:	b8 00 00 00 00       	mov    $0x0,%eax
 80711d0:	e8 49 d0 ff ff       	callq  806e21e <add_elf_sym>
 80711d5:	48 83 c4 10          	add    $0x10,%rsp
 80711d9:	48 8b 05 98 cd 01 00 	mov    0x1cd98(%rip),%rax        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 80711e0:	48 8b 00             	mov    (%rax),%rax
 80711e3:	48 8b 0d 8e cd 01 00 	mov    0x1cd8e(%rip),%rcx        # 808df78 <_GLOBAL_OFFSET_TABLE_+0x2f8>
 80711ea:	48 8b 09             	mov    (%rcx),%rcx
 80711ed:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 80711f4:	00 00 00 
 80711f7:	48 01 d1             	add    %rdx,%rcx
 80711fa:	50                   	push   %rax
 80711fb:	48 8d 15 68 b3 01 00 	lea    0x1b368(%rip),%rdx        # 808c56a <L.124>
 8071202:	52                   	push   %rdx
 8071203:	8b 11                	mov    (%rcx),%edx
 8071205:	49 89 d1             	mov    %rdx,%r9
 8071208:	b9 00 00 00 00       	mov    $0x0,%ecx
 807120d:	49 89 c8             	mov    %rcx,%r8
 8071210:	b9 10 00 00 00       	mov    $0x10,%ecx
 8071215:	49 89 cb             	mov    %rcx,%r11
 8071218:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 807121f:	00 00 00 
 8071222:	49 89 ca             	mov    %rcx,%r10
 8071225:	48 8b 08             	mov    (%rax),%rcx
 8071228:	48 89 ce             	mov    %rcx,%rsi
 807122b:	48 8b 05 66 cc 01 00 	mov    0x1cc66(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8071232:	48 8b 00             	mov    (%rax),%rax
 8071235:	48 89 c7             	mov    %rax,%rdi
 8071238:	4c 89 d2             	mov    %r10,%rdx
 807123b:	4c 89 d9             	mov    %r11,%rcx
 807123e:	b8 00 00 00 00       	mov    $0x0,%eax
 8071243:	e8 d6 cf ff ff       	callq  806e21e <add_elf_sym>
 8071248:	48 83 c4 10          	add    $0x10,%rsp
 807124c:	48 8b 05 2d cd 01 00 	mov    0x1cd2d(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 8071253:	48 8b 00             	mov    (%rax),%rax
 8071256:	48 8b 0d 23 cd 01 00 	mov    0x1cd23(%rip),%rcx        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 807125d:	48 8b 09             	mov    (%rcx),%rcx
 8071260:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 8071267:	00 00 00 
 807126a:	48 01 d1             	add    %rdx,%rcx
 807126d:	50                   	push   %rax
 807126e:	48 8d 15 fc b2 01 00 	lea    0x1b2fc(%rip),%rdx        # 808c571 <L.125>
 8071275:	52                   	push   %rdx
 8071276:	8b 11                	mov    (%rcx),%edx
 8071278:	49 89 d1             	mov    %rdx,%r9
 807127b:	b9 00 00 00 00       	mov    $0x0,%ecx
 8071280:	49 89 c8             	mov    %rcx,%r8
 8071283:	b9 10 00 00 00       	mov    $0x10,%ecx
 8071288:	49 89 cb             	mov    %rcx,%r11
 807128b:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8071292:	00 00 00 
 8071295:	49 89 ca             	mov    %rcx,%r10
 8071298:	48 8b 08             	mov    (%rax),%rcx
 807129b:	48 89 ce             	mov    %rcx,%rsi
 807129e:	48 8b 05 f3 cb 01 00 	mov    0x1cbf3(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80712a5:	48 8b 00             	mov    (%rax),%rax
 80712a8:	48 89 c7             	mov    %rax,%rdi
 80712ab:	4c 89 d2             	mov    %r10,%rdx
 80712ae:	4c 89 d9             	mov    %r11,%rcx
 80712b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80712b6:	e8 63 cf ff ff       	callq  806e21e <add_elf_sym>
 80712bb:	48 83 c4 10          	add    $0x10,%rsp
 80712bf:	48 8d 05 b0 b2 01 00 	lea    0x1b2b0(%rip),%rax        # 808c576 <L.126>
 80712c6:	48 89 c6             	mov    %rax,%rsi
 80712c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80712cd:	48 89 c7             	mov    %rax,%rdi
 80712d0:	b8 00 00 00 00       	mov    $0x0,%eax
 80712d5:	e8 89 fb ff ff       	callq  8070e63 <add_init_array_defines>
 80712da:	48 8d 05 a4 b2 01 00 	lea    0x1b2a4(%rip),%rax        # 808c585 <L.127>
 80712e1:	48 89 c6             	mov    %rax,%rsi
 80712e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80712e8:	48 89 c7             	mov    %rax,%rdi
 80712eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80712f0:	e8 6e fb ff ff       	callq  8070e63 <add_init_array_defines>
 80712f5:	48 8d 05 95 b2 01 00 	lea    0x1b295(%rip),%rax        # 808c591 <L.128>
 80712fc:	48 89 c6             	mov    %rax,%rsi
 80712ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071303:	48 89 c7             	mov    %rax,%rdi
 8071306:	b8 00 00 00 00       	mov    $0x0,%eax
 807130b:	e8 53 fb ff ff       	callq  8070e63 <add_init_array_defines>
 8071310:	b8 01 00 00 00       	mov    $0x1,%eax
 8071315:	89 85 f4 fb ff ff    	mov    %eax,-0x40c(%rbp)
 807131b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807131f:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8071326:	00 00 00 
 8071329:	48 01 c8             	add    %rcx,%rax
 807132c:	8b 8d f4 fb ff ff    	mov    -0x40c(%rbp),%ecx
 8071332:	8b 10                	mov    (%rax),%edx
 8071334:	39 d1                	cmp    %edx,%ecx
 8071336:	0f 8d 9d 02 00 00    	jge    80715d9 <tcc_add_linker_symbols+0x482>
 807133c:	e9 14 00 00 00       	jmpq   8071355 <tcc_add_linker_symbols+0x1fe>
 8071341:	8b 85 f4 fb ff ff    	mov    -0x40c(%rbp),%eax
 8071347:	48 89 c1             	mov    %rax,%rcx
 807134a:	83 c0 01             	add    $0x1,%eax
 807134d:	89 85 f4 fb ff ff    	mov    %eax,-0x40c(%rbp)
 8071353:	eb c6                	jmp    807131b <tcc_add_linker_symbols+0x1c4>
 8071355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071359:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8071360:	00 00 00 
 8071363:	48 01 c8             	add    %rcx,%rax
 8071366:	8b 8d f4 fb ff ff    	mov    -0x40c(%rbp),%ecx
 807136c:	48 63 c9             	movslq %ecx,%rcx
 807136f:	48 89 ca             	mov    %rcx,%rdx
 8071372:	48 c1 e2 03          	shl    $0x3,%rdx
 8071376:	48 8b 08             	mov    (%rax),%rcx
 8071379:	48 89 d0             	mov    %rdx,%rax
 807137c:	48 01 c1             	add    %rax,%rcx
 807137f:	48 8b 01             	mov    (%rcx),%rax
 8071382:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
 8071389:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 8071390:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8071397:	00 00 00 
 807139a:	48 01 c8             	add    %rcx,%rax
 807139d:	8b 08                	mov    (%rax),%ecx
 807139f:	83 f9 01             	cmp    $0x1,%ecx
 80713a2:	0f 85 2c 02 00 00    	jne    80715d4 <tcc_add_linker_symbols+0x47d>
 80713a8:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 80713af:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 80713b6:	00 00 00 
 80713b9:	48 01 c8             	add    %rcx,%rax
 80713bc:	8b 08                	mov    (%rax),%ecx
 80713be:	83 e1 02             	and    $0x2,%ecx
 80713c1:	85 c9                	test   %ecx,%ecx
 80713c3:	0f 84 0b 02 00 00    	je     80715d4 <tcc_add_linker_symbols+0x47d>
 80713c9:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 80713d0:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 80713d7:	00 00 00 
 80713da:	48 01 c8             	add    %rcx,%rax
 80713dd:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
 80713e4:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
 80713eb:	0f be 08             	movsbl (%rax),%ecx
 80713ee:	89 8d dc fb ff ff    	mov    %ecx,-0x424(%rbp)
 80713f4:	8b 85 dc fb ff ff    	mov    -0x424(%rbp),%eax
 80713fa:	85 c0                	test   %eax,%eax
 80713fc:	0f 84 05 00 00 00    	je     8071407 <tcc_add_linker_symbols+0x2b0>
 8071402:	e9 05 00 00 00       	jmpq   807140c <tcc_add_linker_symbols+0x2b5>
 8071407:	e9 68 00 00 00       	jmpq   8071474 <tcc_add_linker_symbols+0x31d>
 807140c:	8b 85 dc fb ff ff    	mov    -0x424(%rbp),%eax
 8071412:	48 89 c7             	mov    %rax,%rdi
 8071415:	b8 00 00 00 00       	mov    $0x0,%eax
 807141a:	e8 66 73 00 00       	callq  8078785 <isid>
 807141f:	85 c0                	test   %eax,%eax
 8071421:	0f 84 05 00 00 00    	je     807142c <tcc_add_linker_symbols+0x2d5>
 8071427:	e9 25 00 00 00       	jmpq   8071451 <tcc_add_linker_symbols+0x2fa>
 807142c:	8b 85 dc fb ff ff    	mov    -0x424(%rbp),%eax
 8071432:	48 89 c7             	mov    %rax,%rdi
 8071435:	b8 00 00 00 00       	mov    $0x0,%eax
 807143a:	e8 0c 73 00 00       	callq  807874b <isnum>
 807143f:	85 c0                	test   %eax,%eax
 8071441:	0f 84 05 00 00 00    	je     807144c <tcc_add_linker_symbols+0x2f5>
 8071447:	e9 05 00 00 00       	jmpq   8071451 <tcc_add_linker_symbols+0x2fa>
 807144c:	e9 83 01 00 00       	jmpq   80715d4 <tcc_add_linker_symbols+0x47d>
 8071451:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
 8071458:	48 89 c1             	mov    %rax,%rcx
 807145b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8071462:	00 00 00 
 8071465:	48 01 d0             	add    %rdx,%rax
 8071468:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
 807146f:	e9 70 ff ff ff       	jmpq   80713e4 <tcc_add_linker_symbols+0x28d>
 8071474:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 807147b:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8071482:	00 00 00 
 8071485:	48 01 c8             	add    %rcx,%rax
 8071488:	49 89 c3             	mov    %rax,%r11
 807148b:	48 8d 05 0b b1 01 00 	lea    0x1b10b(%rip),%rax        # 808c59d <L.129>
 8071492:	49 89 c2             	mov    %rax,%r10
 8071495:	b8 00 04 00 00       	mov    $0x400,%eax
 807149a:	48 89 c6             	mov    %rax,%rsi
 807149d:	48 8d 85 f8 fb ff ff 	lea    -0x408(%rbp),%rax
 80714a4:	48 89 c7             	mov    %rax,%rdi
 80714a7:	4c 89 d2             	mov    %r10,%rdx
 80714aa:	4c 89 d9             	mov    %r11,%rcx
 80714ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80714b2:	e8 89 67 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 80714b7:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 80714be:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 80714c5:	00 00 00 
 80714c8:	48 01 c8             	add    %rcx,%rax
 80714cb:	50                   	push   %rax
 80714cc:	48 8d 8d f8 fb ff ff 	lea    -0x408(%rbp),%rcx
 80714d3:	51                   	push   %rcx
 80714d4:	8b 08                	mov    (%rax),%ecx
 80714d6:	49 89 c9             	mov    %rcx,%r9
 80714d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80714de:	49 89 c0             	mov    %rax,%r8
 80714e1:	b8 10 00 00 00       	mov    $0x10,%eax
 80714e6:	49 89 c3             	mov    %rax,%r11
 80714e9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80714f0:	00 00 00 
 80714f3:	49 89 c2             	mov    %rax,%r10
 80714f6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80714fd:	00 00 00 
 8071500:	48 89 c6             	mov    %rax,%rsi
 8071503:	48 8b 05 8e c9 01 00 	mov    0x1c98e(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807150a:	48 8b 00             	mov    (%rax),%rax
 807150d:	48 89 c7             	mov    %rax,%rdi
 8071510:	4c 89 d2             	mov    %r10,%rdx
 8071513:	4c 89 d9             	mov    %r11,%rcx
 8071516:	b8 00 00 00 00       	mov    $0x0,%eax
 807151b:	e8 fe cc ff ff       	callq  806e21e <add_elf_sym>
 8071520:	48 83 c4 10          	add    $0x10,%rsp
 8071524:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 807152b:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8071532:	00 00 00 
 8071535:	48 01 c8             	add    %rcx,%rax
 8071538:	49 89 c3             	mov    %rax,%r11
 807153b:	48 8d 05 66 b0 01 00 	lea    0x1b066(%rip),%rax        # 808c5a8 <L.130>
 8071542:	49 89 c2             	mov    %rax,%r10
 8071545:	b8 00 04 00 00       	mov    $0x400,%eax
 807154a:	48 89 c6             	mov    %rax,%rsi
 807154d:	48 8d 85 f8 fb ff ff 	lea    -0x408(%rbp),%rax
 8071554:	48 89 c7             	mov    %rax,%rdi
 8071557:	4c 89 d2             	mov    %r10,%rdx
 807155a:	4c 89 d9             	mov    %r11,%rcx
 807155d:	b8 00 00 00 00       	mov    $0x0,%eax
 8071562:	e8 d9 66 01 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8071567:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 807156e:	48 8b 8d e8 fb ff ff 	mov    -0x418(%rbp),%rcx
 8071575:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 807157c:	00 00 00 
 807157f:	48 01 d1             	add    %rdx,%rcx
 8071582:	50                   	push   %rax
 8071583:	48 8d 95 f8 fb ff ff 	lea    -0x408(%rbp),%rdx
 807158a:	52                   	push   %rdx
 807158b:	8b 11                	mov    (%rcx),%edx
 807158d:	49 89 d1             	mov    %rdx,%r9
 8071590:	b9 00 00 00 00       	mov    $0x0,%ecx
 8071595:	49 89 c8             	mov    %rcx,%r8
 8071598:	b9 10 00 00 00       	mov    $0x10,%ecx
 807159d:	49 89 cb             	mov    %rcx,%r11
 80715a0:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80715a7:	00 00 00 
 80715aa:	49 89 ca             	mov    %rcx,%r10
 80715ad:	48 8b 08             	mov    (%rax),%rcx
 80715b0:	48 89 ce             	mov    %rcx,%rsi
 80715b3:	48 8b 05 de c8 01 00 	mov    0x1c8de(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80715ba:	48 8b 00             	mov    (%rax),%rax
 80715bd:	48 89 c7             	mov    %rax,%rdi
 80715c0:	4c 89 d2             	mov    %r10,%rdx
 80715c3:	4c 89 d9             	mov    %r11,%rcx
 80715c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80715cb:	e8 4e cc ff ff       	callq  806e21e <add_elf_sym>
 80715d0:	48 83 c4 10          	add    $0x10,%rsp
 80715d4:	e9 68 fd ff ff       	jmpq   8071341 <tcc_add_linker_symbols+0x1ea>
 80715d9:	c9                   	leaveq 
 80715da:	c3                   	retq   

00000000080715db <tcc_output_binary>:
 80715db:	55                   	push   %rbp
 80715dc:	48 89 e5             	mov    %rsp,%rbp
 80715df:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 80715e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80715ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80715ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80715f2:	b8 00 00 00 00       	mov    $0x0,%eax
 80715f7:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80715fa:	b8 01 00 00 00       	mov    $0x1,%eax
 80715ff:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8071602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071606:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 807160d:	00 00 00 
 8071610:	48 01 c8             	add    %rcx,%rax
 8071613:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8071616:	8b 10                	mov    (%rax),%edx
 8071618:	39 d1                	cmp    %edx,%ecx
 807161a:	0f 8d 49 01 00 00    	jge    8071769 <tcc_output_binary+0x18e>
 8071620:	e9 0e 00 00 00       	jmpq   8071633 <tcc_output_binary+0x58>
 8071625:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8071628:	48 89 c1             	mov    %rax,%rcx
 807162b:	83 c0 01             	add    $0x1,%eax
 807162e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8071631:	eb cf                	jmp    8071602 <tcc_output_binary+0x27>
 8071633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071637:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 807163e:	00 00 00 
 8071641:	48 01 c8             	add    %rcx,%rax
 8071644:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8071647:	48 63 c9             	movslq %ecx,%rcx
 807164a:	48 89 ca             	mov    %rcx,%rdx
 807164d:	48 c1 e2 02          	shl    $0x2,%rdx
 8071651:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8071655:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8071659:	48 89 d0             	mov    %rdx,%rax
 807165c:	48 01 c1             	add    %rax,%rcx
 807165f:	8b 01                	mov    (%rcx),%eax
 8071661:	48 63 c0             	movslq %eax,%rax
 8071664:	48 89 c1             	mov    %rax,%rcx
 8071667:	48 c1 e1 03          	shl    $0x3,%rcx
 807166b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 807166f:	48 8b 00             	mov    (%rax),%rax
 8071672:	48 89 ca             	mov    %rcx,%rdx
 8071675:	48 01 d0             	add    %rdx,%rax
 8071678:	48 8b 08             	mov    (%rax),%rcx
 807167b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807167f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8071683:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807168a:	00 00 00 
 807168d:	48 01 c8             	add    %rcx,%rax
 8071690:	8b 08                	mov    (%rax),%ecx
 8071692:	83 f9 08             	cmp    $0x8,%ecx
 8071695:	0f 84 c9 00 00 00    	je     8071764 <tcc_output_binary+0x189>
 807169b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807169f:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 80716a6:	00 00 00 
 80716a9:	48 01 c8             	add    %rcx,%rax
 80716ac:	8b 08                	mov    (%rax),%ecx
 80716ae:	83 e1 02             	and    $0x2,%ecx
 80716b1:	85 c9                	test   %ecx,%ecx
 80716b3:	0f 84 ab 00 00 00    	je     8071764 <tcc_output_binary+0x189>
 80716b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80716bd:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 80716c4:	00 00 00 
 80716c7:	48 01 c8             	add    %rcx,%rax
 80716ca:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 80716cd:	48 63 c9             	movslq %ecx,%rcx
 80716d0:	48 89 ca             	mov    %rcx,%rdx
 80716d3:	48 8b 08             	mov    (%rax),%rcx
 80716d6:	48 39 ca             	cmp    %rcx,%rdx
 80716d9:	0f 83 27 00 00 00    	jae    8071706 <tcc_output_binary+0x12b>
 80716df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80716e3:	48 89 c6             	mov    %rax,%rsi
 80716e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80716eb:	48 89 c7             	mov    %rax,%rdi
 80716ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80716f3:	e8 e8 65 01 00       	callq  8087ce0 <__preinit_array_end+0x240>
 80716f8:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80716fb:	48 89 c1             	mov    %rax,%rcx
 80716fe:	83 c0 01             	add    $0x1,%eax
 8071701:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8071704:	eb b3                	jmp    80716b9 <tcc_output_binary+0xde>
 8071706:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807170a:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8071711:	00 00 00 
 8071714:	48 01 c8             	add    %rcx,%rax
 8071717:	8b 08                	mov    (%rax),%ecx
 8071719:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
 807171c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8071720:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071727:	00 00 00 
 807172a:	48 01 c8             	add    %rcx,%rax
 807172d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8071731:	49 89 cb             	mov    %rcx,%r11
 8071734:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 8071737:	49 89 ca             	mov    %rcx,%r10
 807173a:	b9 01 00 00 00       	mov    $0x1,%ecx
 807173f:	48 89 ce             	mov    %rcx,%rsi
 8071742:	48 8b 08             	mov    (%rax),%rcx
 8071745:	48 89 cf             	mov    %rcx,%rdi
 8071748:	4c 89 d2             	mov    %r10,%rdx
 807174b:	4c 89 d9             	mov    %r11,%rcx
 807174e:	b8 00 00 00 00       	mov    $0x0,%eax
 8071753:	e8 98 65 01 00       	callq  8087cf0 <__preinit_array_end+0x250>
 8071758:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807175b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 807175e:	48 01 c8             	add    %rcx,%rax
 8071761:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8071764:	e9 bc fe ff ff       	jmpq   8071625 <tcc_output_binary+0x4a>
 8071769:	c9                   	leaveq 
 807176a:	c3                   	retq   

000000000807176b <patch_dynsym_undef>:
 807176b:	55                   	push   %rbp
 807176c:	48 89 e5             	mov    %rsp,%rbp
 807176f:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8071776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807177a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807177e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8071782:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071789:	00 00 00 
 807178c:	48 01 c8             	add    %rcx,%rax
 807178f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8071793:	48 8b 10             	mov    (%rax),%rdx
 8071796:	48 8b 01             	mov    (%rcx),%rax
 8071799:	48 01 c2             	add    %rax,%rdx
 807179c:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 80717a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80717a4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80717ab:	00 00 00 
 80717ae:	48 01 c8             	add    %rcx,%rax
 80717b1:	48 8b 08             	mov    (%rax),%rcx
 80717b4:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80717bb:	00 00 00 
 80717be:	48 01 c1             	add    %rax,%rcx
 80717c1:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 80717c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80717c9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80717cd:	48 89 c2             	mov    %rax,%rdx
 80717d0:	48 89 c8             	mov    %rcx,%rax
 80717d3:	48 39 c2             	cmp    %rax,%rdx
 80717d6:	0f 83 7c 00 00 00    	jae    8071858 <patch_dynsym_undef+0xed>
 80717dc:	e9 1a 00 00 00       	jmpq   80717fb <patch_dynsym_undef+0x90>
 80717e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80717e5:	48 89 c1             	mov    %rax,%rcx
 80717e8:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80717ef:	00 00 00 
 80717f2:	48 01 d0             	add    %rdx,%rax
 80717f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 80717f9:	eb ca                	jmp    80717c5 <patch_dynsym_undef+0x5a>
 80717fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80717ff:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8071806:	00 00 00 
 8071809:	48 01 c8             	add    %rcx,%rax
 807180c:	0f b7 08             	movzwl (%rax),%ecx
 807180f:	83 f9 00             	cmp    $0x0,%ecx
 8071812:	0f 85 3e 00 00 00    	jne    8071856 <patch_dynsym_undef+0xeb>
 8071818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807181c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8071823:	00 00 00 
 8071826:	48 01 c8             	add    %rcx,%rax
 8071829:	0f b6 08             	movzbl (%rax),%ecx
 807182c:	c1 f9 04             	sar    $0x4,%ecx
 807182f:	83 f9 02             	cmp    $0x2,%ecx
 8071832:	0f 85 1e 00 00 00    	jne    8071856 <patch_dynsym_undef+0xeb>
 8071838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807183c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071843:	00 00 00 
 8071846:	48 01 c8             	add    %rcx,%rax
 8071849:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8071850:	00 00 00 
 8071853:	48 89 08             	mov    %rcx,(%rax)
 8071856:	eb 89                	jmp    80717e1 <patch_dynsym_undef+0x76>
 8071858:	c9                   	leaveq 
 8071859:	c3                   	retq   

000000000807185a <fill_got_entry>:
 807185a:	55                   	push   %rbp
 807185b:	48 89 e5             	mov    %rsp,%rbp
 807185e:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8071865:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8071869:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807186d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8071871:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071878:	00 00 00 
 807187b:	48 01 c8             	add    %rcx,%rax
 807187e:	48 8b 08             	mov    (%rax),%rcx
 8071881:	48 c1 e9 20          	shr    $0x20,%rcx
 8071885:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8071888:	48 8b 05 09 c6 01 00 	mov    0x1c609(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807188f:	48 8b 00             	mov    (%rax),%rax
 8071892:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071899:	00 00 00 
 807189c:	48 01 c8             	add    %rcx,%rax
 807189f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80718a2:	48 63 c9             	movslq %ecx,%rcx
 80718a5:	48 89 ca             	mov    %rcx,%rdx
 80718a8:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80718af:	00 00 00 
 80718b2:	48 0f af d1          	imul   %rcx,%rdx
 80718b6:	48 8b 08             	mov    (%rax),%rcx
 80718b9:	48 89 d0             	mov    %rdx,%rax
 80718bc:	48 01 c1             	add    %rax,%rcx
 80718bf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 80718c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80718c7:	48 b9 b0 00 00 00 00 	movabs $0xb0,%rcx
 80718ce:	00 00 00 
 80718d1:	48 01 c8             	add    %rcx,%rax
 80718d4:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80718d7:	8b 10                	mov    (%rax),%edx
 80718d9:	39 d1                	cmp    %edx,%ecx
 80718db:	0f 8c 05 00 00 00    	jl     80718e6 <fill_got_entry+0x8c>
 80718e1:	e9 22 01 00 00       	jmpq   8071a08 <fill_got_entry+0x1ae>
 80718e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80718ea:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 80718f1:	00 00 00 
 80718f4:	48 01 c8             	add    %rcx,%rax
 80718f7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80718fa:	48 63 c9             	movslq %ecx,%rcx
 80718fd:	48 89 ca             	mov    %rcx,%rdx
 8071900:	48 c1 e2 03          	shl    $0x3,%rdx
 8071904:	48 8b 08             	mov    (%rax),%rcx
 8071907:	48 89 d0             	mov    %rdx,%rax
 807190a:	48 01 c1             	add    %rax,%rcx
 807190d:	48 8b 01             	mov    (%rcx),%rax
 8071910:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8071914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071918:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 807191f:	00 00 00 
 8071922:	48 01 c8             	add    %rcx,%rax
 8071925:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8071929:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8071930:	00 00 00 
 8071933:	48 01 d1             	add    %rdx,%rcx
 8071936:	48 89 ca             	mov    %rcx,%rdx
 8071939:	48 89 d6             	mov    %rdx,%rsi
 807193c:	48 8b 08             	mov    (%rax),%rcx
 807193f:	48 89 cf             	mov    %rcx,%rdi
 8071942:	b8 00 00 00 00       	mov    $0x0,%eax
 8071947:	e8 b7 af fd ff       	callq  804c903 <section_reserve>
 807194c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071950:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 8071957:	00 00 00 
 807195a:	48 01 c8             	add    %rcx,%rax
 807195d:	48 8b 08             	mov    (%rax),%rcx
 8071960:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8071967:	00 00 00 
 807196a:	48 01 c1             	add    %rax,%rcx
 807196d:	48 8b 01             	mov    (%rcx),%rax
 8071970:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 8071974:	48 01 c8             	add    %rcx,%rax
 8071977:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807197e:	00 00 00 
 8071981:	48 01 c8             	add    %rcx,%rax
 8071984:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8071988:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 807198f:	00 00 00 
 8071992:	48 01 d1             	add    %rdx,%rcx
 8071995:	48 8b 11             	mov    (%rcx),%rdx
 8071998:	48 c1 ea 20          	shr    $0x20,%rdx
 807199c:	48 89 d6             	mov    %rdx,%rsi
 807199f:	48 89 c7             	mov    %rax,%rdi
 80719a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80719a7:	e8 77 e7 ff ff       	callq  8070123 <put32>
 80719ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80719b0:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 80719b7:	00 00 00 
 80719ba:	48 01 c8             	add    %rcx,%rax
 80719bd:	48 8b 08             	mov    (%rax),%rcx
 80719c0:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80719c7:	00 00 00 
 80719ca:	48 01 c1             	add    %rax,%rcx
 80719cd:	48 8b 01             	mov    (%rcx),%rax
 80719d0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 80719d4:	48 01 c8             	add    %rcx,%rax
 80719d7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 80719db:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80719e2:	00 00 00 
 80719e5:	48 01 d1             	add    %rdx,%rcx
 80719e8:	48 8b 11             	mov    (%rcx),%rdx
 80719eb:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
 80719f2:	00 00 00 
 80719f5:	48 21 ca             	and    %rcx,%rdx
 80719f8:	48 89 d6             	mov    %rdx,%rsi
 80719fb:	48 89 c7             	mov    %rax,%rdi
 80719fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8071a03:	e8 1b e7 ff ff       	callq  8070123 <put32>
 8071a08:	c9                   	leaveq 
 8071a09:	c3                   	retq   

0000000008071a0a <fill_got>:
 8071a0a:	55                   	push   %rbp
 8071a0b:	48 89 e5             	mov    %rsp,%rbp
 8071a0e:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8071a15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8071a19:	b8 01 00 00 00       	mov    $0x1,%eax
 8071a1e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8071a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071a25:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8071a2c:	00 00 00 
 8071a2f:	48 01 c8             	add    %rcx,%rax
 8071a32:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8071a35:	8b 10                	mov    (%rax),%edx
 8071a37:	39 d1                	cmp    %edx,%ecx
 8071a39:	0f 8d 7e 01 00 00    	jge    8071bbd <fill_got+0x1b3>
 8071a3f:	e9 0e 00 00 00       	jmpq   8071a52 <fill_got+0x48>
 8071a44:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8071a47:	48 89 c1             	mov    %rax,%rcx
 8071a4a:	83 c0 01             	add    $0x1,%eax
 8071a4d:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8071a50:	eb cf                	jmp    8071a21 <fill_got+0x17>
 8071a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071a56:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8071a5d:	00 00 00 
 8071a60:	48 01 c8             	add    %rcx,%rax
 8071a63:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8071a66:	48 63 c9             	movslq %ecx,%rcx
 8071a69:	48 89 ca             	mov    %rcx,%rdx
 8071a6c:	48 c1 e2 03          	shl    $0x3,%rdx
 8071a70:	48 8b 08             	mov    (%rax),%rcx
 8071a73:	48 89 d0             	mov    %rdx,%rax
 8071a76:	48 01 c1             	add    %rax,%rcx
 8071a79:	48 8b 01             	mov    (%rcx),%rax
 8071a7c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8071a80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8071a84:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8071a8b:	00 00 00 
 8071a8e:	48 01 c8             	add    %rcx,%rax
 8071a91:	8b 08                	mov    (%rax),%ecx
 8071a93:	83 f9 04             	cmp    $0x4,%ecx
 8071a96:	0f 84 05 00 00 00    	je     8071aa1 <fill_got+0x97>
 8071a9c:	e9 a3 ff ff ff       	jmpq   8071a44 <fill_got+0x3a>
 8071aa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8071aa5:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8071aac:	00 00 00 
 8071aaf:	48 01 c8             	add    %rcx,%rax
 8071ab2:	48 8b 08             	mov    (%rax),%rcx
 8071ab5:	48 8b 05 dc c3 01 00 	mov    0x1c3dc(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8071abc:	48 8b 00             	mov    (%rax),%rax
 8071abf:	48 89 ca             	mov    %rcx,%rdx
 8071ac2:	48 89 c1             	mov    %rax,%rcx
 8071ac5:	48 39 ca             	cmp    %rcx,%rdx
 8071ac8:	0f 84 05 00 00 00    	je     8071ad3 <fill_got+0xc9>
 8071ace:	e9 71 ff ff ff       	jmpq   8071a44 <fill_got+0x3a>
 8071ad3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8071ad7:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071ade:	00 00 00 
 8071ae1:	48 01 c8             	add    %rcx,%rax
 8071ae4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8071ae8:	48 8b 10             	mov    (%rax),%rdx
 8071aeb:	48 8b 01             	mov    (%rcx),%rax
 8071aee:	48 01 c2             	add    %rax,%rdx
 8071af1:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 8071af5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8071af9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071b00:	00 00 00 
 8071b03:	48 01 c8             	add    %rcx,%rax
 8071b06:	48 8b 08             	mov    (%rax),%rcx
 8071b09:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8071b0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8071b11:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8071b15:	48 89 c2             	mov    %rax,%rdx
 8071b18:	48 89 c8             	mov    %rcx,%rax
 8071b1b:	48 39 c2             	cmp    %rax,%rdx
 8071b1e:	0f 83 94 00 00 00    	jae    8071bb8 <fill_got+0x1ae>
 8071b24:	e9 1a 00 00 00       	jmpq   8071b43 <fill_got+0x139>
 8071b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8071b2d:	48 89 c1             	mov    %rax,%rcx
 8071b30:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8071b37:	00 00 00 
 8071b3a:	48 01 d0             	add    %rdx,%rax
 8071b3d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8071b41:	eb ca                	jmp    8071b0d <fill_got+0x103>
 8071b43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8071b47:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071b4e:	00 00 00 
 8071b51:	48 01 c8             	add    %rcx,%rax
 8071b54:	48 8b 08             	mov    (%rax),%rcx
 8071b57:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
 8071b5e:	00 00 00 
 8071b61:	48 21 c1             	and    %rax,%rcx
 8071b64:	48 89 c8             	mov    %rcx,%rax
 8071b67:	e9 05 00 00 00       	jmpq   8071b71 <fill_got+0x167>
 8071b6c:	e9 09 00 00 00       	jmpq   8071b7a <fill_got+0x170>
 8071b71:	83 f8 03             	cmp    $0x3,%eax
 8071b74:	0f 85 05 00 00 00    	jne    8071b7f <fill_got+0x175>
 8071b7a:	e9 09 00 00 00       	jmpq   8071b88 <fill_got+0x17e>
 8071b7f:	83 f8 09             	cmp    $0x9,%eax
 8071b82:	0f 85 05 00 00 00    	jne    8071b8d <fill_got+0x183>
 8071b88:	e9 09 00 00 00       	jmpq   8071b96 <fill_got+0x18c>
 8071b8d:	83 f8 04             	cmp    $0x4,%eax
 8071b90:	0f 85 1d 00 00 00    	jne    8071bb3 <fill_got+0x1a9>
 8071b96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8071b9a:	48 89 c6             	mov    %rax,%rsi
 8071b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071ba1:	48 89 c7             	mov    %rax,%rdi
 8071ba4:	b8 00 00 00 00       	mov    $0x0,%eax
 8071ba9:	e8 ac fc ff ff       	callq  807185a <fill_got_entry>
 8071bae:	e9 00 00 00 00       	jmpq   8071bb3 <fill_got+0x1a9>
 8071bb3:	e9 71 ff ff ff       	jmpq   8071b29 <fill_got+0x11f>
 8071bb8:	e9 87 fe ff ff       	jmpq   8071a44 <fill_got+0x3a>
 8071bbd:	c9                   	leaveq 
 8071bbe:	c3                   	retq   

0000000008071bbf <elf_output_file>:
 8071bbf:	55                   	push   %rbp
 8071bc0:	48 89 e5             	mov    %rsp,%rbp
 8071bc3:	48 81 ec e0 02 00 00 	sub    $0x2e0,%rsp
 8071bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8071bce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8071bd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071bd6:	8b 08                	mov    (%rax),%ecx
 8071bd8:	c1 e1 18             	shl    $0x18,%ecx
 8071bdb:	c1 e9 18             	shr    $0x18,%ecx
 8071bde:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
 8071be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071be8:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 8071bef:	00 00 00 
 8071bf2:	48 01 c8             	add    %rcx,%rax
 8071bf5:	b9 00 00 00 00       	mov    $0x0,%ecx
 8071bfa:	89 08                	mov    %ecx,(%rax)
 8071bfc:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8071c02:	83 f8 03             	cmp    $0x3,%eax
 8071c05:	0f 84 11 00 00 00    	je     8071c1c <elf_output_file+0x5d>
 8071c0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071c0f:	48 89 c7             	mov    %rax,%rdi
 8071c12:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c17:	e8 93 f4 ff ff       	callq  80710af <tcc_add_runtime>
 8071c1c:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c21:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 8071c28:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c2d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 8071c31:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c36:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
 8071c3d:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c42:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 8071c49:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c4e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
 8071c55:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8071c5c:	00 00 00 
 8071c5f:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 8071c66:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8071c6c:	83 f8 03             	cmp    $0x3,%eax
 8071c6f:	0f 84 dc 14 00 00    	je     8073151 <elf_output_file+0x1592>
 8071c75:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c7a:	e8 c5 d2 ff ff       	callq  806ef44 <relocate_common_syms>
 8071c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071c83:	48 89 c7             	mov    %rax,%rdi
 8071c86:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c8b:	e8 c7 f4 ff ff       	callq  8071157 <tcc_add_linker_symbols>
 8071c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071c94:	48 b9 e4 00 00 00 00 	movabs $0xe4,%rcx
 8071c9b:	00 00 00 
 8071c9e:	48 01 c8             	add    %rcx,%rax
 8071ca1:	8b 08                	mov    (%rax),%ecx
 8071ca3:	85 c9                	test   %ecx,%ecx
 8071ca5:	0f 84 05 00 00 00    	je     8071cb0 <elf_output_file+0xf1>
 8071cab:	e9 90 14 00 00       	jmpq   8073140 <elf_output_file+0x1581>
 8071cb0:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8071cb6:	83 f8 01             	cmp    $0x1,%eax
 8071cb9:	0f 85 ef 00 00 00    	jne    8071dae <elf_output_file+0x1ef>
 8071cbf:	48 8d 05 ec a8 01 00 	lea    0x1a8ec(%rip),%rax        # 808c5b2 <L.131>
 8071cc6:	48 89 c7             	mov    %rax,%rdi
 8071cc9:	b8 00 00 00 00       	mov    $0x0,%eax
 8071cce:	e8 2d 60 01 00       	callq  8087d00 <__preinit_array_end+0x260>
 8071cd3:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
 8071cda:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
 8071ce1:	48 89 c1             	mov    %rax,%rcx
 8071ce4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8071ceb:	00 00 00 
 8071cee:	48 39 c1             	cmp    %rax,%rcx
 8071cf1:	0f 85 0e 00 00 00    	jne    8071d05 <elf_output_file+0x146>
 8071cf7:	48 8d 05 ba a8 01 00 	lea    0x1a8ba(%rip),%rax        # 808c5b8 <L.132>
 8071cfe:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
 8071d05:	b8 02 00 00 00       	mov    $0x2,%eax
 8071d0a:	49 89 c3             	mov    %rax,%r11
 8071d0d:	b8 01 00 00 00       	mov    $0x1,%eax
 8071d12:	49 89 c2             	mov    %rax,%r10
 8071d15:	48 8d 05 b8 a8 01 00 	lea    0x1a8b8(%rip),%rax        # 808c5d4 <L.133>
 8071d1c:	48 89 c6             	mov    %rax,%rsi
 8071d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071d23:	48 89 c7             	mov    %rax,%rdi
 8071d26:	4c 89 d2             	mov    %r10,%rdx
 8071d29:	4c 89 d9             	mov    %r11,%rcx
 8071d2c:	b8 00 00 00 00       	mov    $0x0,%eax
 8071d31:	e8 c2 a7 fd ff       	callq  804c4f8 <new_section>
 8071d36:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
 8071d3d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 8071d44:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8071d4b:	00 00 00 
 8071d4e:	48 01 c8             	add    %rcx,%rax
 8071d51:	b9 01 00 00 00       	mov    $0x1,%ecx
 8071d56:	89 08                	mov    %ecx,(%rax)
 8071d58:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
 8071d5f:	48 89 c7             	mov    %rax,%rdi
 8071d62:	b8 00 00 00 00       	mov    $0x0,%eax
 8071d67:	e8 74 55 01 00       	callq  80872e0 <strlen>
 8071d6c:	83 c0 01             	add    $0x1,%eax
 8071d6f:	48 89 c1             	mov    %rax,%rcx
 8071d72:	48 89 ce             	mov    %rcx,%rsi
 8071d75:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 8071d7c:	48 89 c7             	mov    %rax,%rdi
 8071d7f:	b8 00 00 00 00       	mov    $0x0,%eax
 8071d84:	e8 e1 aa fd ff       	callq  804c86a <section_ptr_add>
 8071d89:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
 8071d90:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
 8071d97:	48 89 c6             	mov    %rax,%rsi
 8071d9a:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
 8071da1:	48 89 c7             	mov    %rax,%rdi
 8071da4:	b8 00 00 00 00       	mov    $0x0,%eax
 8071da9:	e8 b2 54 01 00       	callq  8087260 <strcpy>
 8071dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071db2:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8071db9:	00 00 00 
 8071dbc:	48 01 c8             	add    %rcx,%rax
 8071dbf:	50                   	push   %rax
 8071dc0:	b9 02 00 00 00       	mov    $0x2,%ecx
 8071dc5:	51                   	push   %rcx
 8071dc6:	48 8d 0d 1f a8 01 00 	lea    0x1a81f(%rip),%rcx        # 808c5ec <L.136>
 8071dcd:	49 89 c9             	mov    %rcx,%r9
 8071dd0:	48 8d 0d 0d a8 01 00 	lea    0x1a80d(%rip),%rcx        # 808c5e4 <L.135>
 8071dd7:	49 89 c8             	mov    %rcx,%r8
 8071dda:	b9 02 00 00 00       	mov    $0x2,%ecx
 8071ddf:	49 89 cb             	mov    %rcx,%r11
 8071de2:	b9 0b 00 00 00       	mov    $0xb,%ecx
 8071de7:	49 89 ca             	mov    %rcx,%r10
 8071dea:	48 8d 0d eb a7 01 00 	lea    0x1a7eb(%rip),%rcx        # 808c5dc <L.134>
 8071df1:	48 89 ce             	mov    %rcx,%rsi
 8071df4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8071df8:	48 89 cf             	mov    %rcx,%rdi
 8071dfb:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
 8071e02:	4c 89 d2             	mov    %r10,%rdx
 8071e05:	4c 89 d9             	mov    %r11,%rcx
 8071e08:	b8 00 00 00 00       	mov    $0x0,%eax
 8071e0d:	e8 c6 ed ff ff       	callq  8070bd8 <new_symtab>
 8071e12:	48 83 c4 10          	add    $0x10,%rsp
 8071e16:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
 8071e1d:	48 89 01             	mov    %rax,(%rcx)
 8071e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071e24:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8071e2b:	00 00 00 
 8071e2e:	48 01 c8             	add    %rcx,%rax
 8071e31:	48 8b 08             	mov    (%rax),%rcx
 8071e34:	48 b8 58 00 00 00 00 	movabs $0x58,%rax
 8071e3b:	00 00 00 
 8071e3e:	48 01 c1             	add    %rax,%rcx
 8071e41:	48 8b 01             	mov    (%rcx),%rax
 8071e44:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
 8071e4b:	b8 03 00 00 00       	mov    $0x3,%eax
 8071e50:	49 89 c3             	mov    %rax,%r11
 8071e53:	b8 06 00 00 00       	mov    $0x6,%eax
 8071e58:	49 89 c2             	mov    %rax,%r10
 8071e5b:	48 8d 05 90 a7 01 00 	lea    0x1a790(%rip),%rax        # 808c5f2 <L.137>
 8071e62:	48 89 c6             	mov    %rax,%rsi
 8071e65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071e69:	48 89 c7             	mov    %rax,%rdi
 8071e6c:	4c 89 d2             	mov    %r10,%rdx
 8071e6f:	4c 89 d9             	mov    %r11,%rcx
 8071e72:	b8 00 00 00 00       	mov    $0x0,%eax
 8071e77:	e8 7c a6 fd ff       	callq  804c4f8 <new_section>
 8071e7c:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 8071e83:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8071e8a:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8071e91:	00 00 00 
 8071e94:	48 01 c8             	add    %rcx,%rax
 8071e97:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
 8071e9e:	48 89 08             	mov    %rcx,(%rax)
 8071ea1:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8071ea8:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8071eaf:	00 00 00 
 8071eb2:	48 01 c8             	add    %rcx,%rax
 8071eb5:	b9 10 00 00 00       	mov    $0x10,%ecx
 8071eba:	89 08                	mov    %ecx,(%rax)
 8071ebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071ec0:	48 b9 a0 00 00 00 00 	movabs $0xa0,%rcx
 8071ec7:	00 00 00 
 8071eca:	48 01 c8             	add    %rcx,%rax
 8071ecd:	b9 06 00 00 00       	mov    $0x6,%ecx
 8071ed2:	49 89 cb             	mov    %rcx,%r11
 8071ed5:	b9 01 00 00 00       	mov    $0x1,%ecx
 8071eda:	49 89 ca             	mov    %rcx,%r10
 8071edd:	48 8d 0d 17 a7 01 00 	lea    0x1a717(%rip),%rcx        # 808c5fb <L.138>
 8071ee4:	48 89 ce             	mov    %rcx,%rsi
 8071ee7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8071eeb:	48 89 cf             	mov    %rcx,%rdi
 8071eee:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
 8071ef5:	4c 89 d2             	mov    %r10,%rdx
 8071ef8:	4c 89 d9             	mov    %r11,%rcx
 8071efb:	b8 00 00 00 00       	mov    $0x0,%eax
 8071f00:	e8 f3 a5 fd ff       	callq  804c4f8 <new_section>
 8071f05:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
 8071f0c:	48 89 01             	mov    %rax,(%rcx)
 8071f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071f13:	48 b9 a0 00 00 00 00 	movabs $0xa0,%rcx
 8071f1a:	00 00 00 
 8071f1d:	48 01 c8             	add    %rcx,%rax
 8071f20:	48 8b 08             	mov    (%rax),%rcx
 8071f23:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 8071f2a:	00 00 00 
 8071f2d:	48 01 c1             	add    %rax,%rcx
 8071f30:	b8 04 00 00 00       	mov    $0x4,%eax
 8071f35:	89 01                	mov    %eax,(%rcx)
 8071f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8071f3b:	48 89 c7             	mov    %rax,%rdi
 8071f3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8071f43:	e8 b3 e2 ff ff       	callq  80701fb <build_got>
 8071f48:	48 8b 05 49 bf 01 00 	mov    0x1bf49(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8071f4f:	48 8b 00             	mov    (%rax),%rax
 8071f52:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071f59:	00 00 00 
 8071f5c:	48 01 c8             	add    %rcx,%rax
 8071f5f:	48 8b 0d 32 bf 01 00 	mov    0x1bf32(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8071f66:	48 8b 09             	mov    (%rcx),%rcx
 8071f69:	48 8b 10             	mov    (%rax),%rdx
 8071f6c:	48 8b 01             	mov    (%rcx),%rax
 8071f6f:	48 01 c2             	add    %rax,%rdx
 8071f72:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
 8071f79:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8071f7f:	83 f8 01             	cmp    $0x1,%eax
 8071f82:	0f 85 d5 0a 00 00    	jne    8072a5d <elf_output_file+0xe9e>
 8071f88:	48 8b 05 09 bf 01 00 	mov    0x1bf09(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8071f8f:	48 8b 00             	mov    (%rax),%rax
 8071f92:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8071f99:	00 00 00 
 8071f9c:	48 01 c8             	add    %rcx,%rax
 8071f9f:	48 8b 08             	mov    (%rax),%rcx
 8071fa2:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8071fa9:	00 00 00 
 8071fac:	48 01 c1             	add    %rax,%rcx
 8071faf:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
 8071fb6:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8071fbd:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
 8071fc4:	48 89 c2             	mov    %rax,%rdx
 8071fc7:	48 89 c8             	mov    %rcx,%rax
 8071fca:	48 39 c2             	cmp    %rax,%rdx
 8071fcd:	0f 83 a8 07 00 00    	jae    807277b <elf_output_file+0xbbc>
 8071fd3:	e9 20 00 00 00       	jmpq   8071ff8 <elf_output_file+0x439>
 8071fd8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8071fdf:	48 89 c1             	mov    %rax,%rcx
 8071fe2:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8071fe9:	00 00 00 
 8071fec:	48 01 d0             	add    %rdx,%rax
 8071fef:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 8071ff6:	eb be                	jmp    8071fb6 <elf_output_file+0x3f7>
 8071ff8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8071fff:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8072006:	00 00 00 
 8072009:	48 01 c8             	add    %rcx,%rax
 807200c:	0f b7 08             	movzwl (%rax),%ecx
 807200f:	83 f9 00             	cmp    $0x0,%ecx
 8072012:	0f 85 12 06 00 00    	jne    807262a <elf_output_file+0xa6b>
 8072018:	48 8b 05 79 be 01 00 	mov    0x1be79(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807201f:	48 8b 00             	mov    (%rax),%rax
 8072022:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8072029:	00 00 00 
 807202c:	48 01 c8             	add    %rcx,%rax
 807202f:	48 8b 08             	mov    (%rax),%rcx
 8072032:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8072039:	00 00 00 
 807203c:	48 01 c1             	add    %rax,%rcx
 807203f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072046:	8b 10                	mov    (%rax),%edx
 8072048:	48 8b 01             	mov    (%rcx),%rax
 807204b:	48 89 d1             	mov    %rdx,%rcx
 807204e:	48 01 c8             	add    %rcx,%rax
 8072051:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
 8072058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807205c:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 8072063:	00 00 00 
 8072066:	48 01 c8             	add    %rcx,%rax
 8072069:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
 8072070:	48 89 ce             	mov    %rcx,%rsi
 8072073:	48 8b 08             	mov    (%rax),%rcx
 8072076:	48 89 cf             	mov    %rcx,%rdi
 8072079:	b8 00 00 00 00       	mov    $0x0,%eax
 807207e:	e8 7a be ff ff       	callq  806defd <find_elf_sym>
 8072083:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
 8072089:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
 807208f:	85 c0                	test   %eax,%eax
 8072091:	0f 84 1d 05 00 00    	je     80725b4 <elf_output_file+0x9f5>
 8072097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807209b:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 80720a2:	00 00 00 
 80720a5:	48 01 c8             	add    %rcx,%rax
 80720a8:	48 8b 08             	mov    (%rax),%rcx
 80720ab:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80720b2:	00 00 00 
 80720b5:	48 01 c1             	add    %rax,%rcx
 80720b8:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
 80720be:	48 63 c0             	movslq %eax,%rax
 80720c1:	48 89 c2             	mov    %rax,%rdx
 80720c4:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80720cb:	00 00 00 
 80720ce:	48 0f af d0          	imul   %rax,%rdx
 80720d2:	48 8b 01             	mov    (%rcx),%rax
 80720d5:	48 89 d1             	mov    %rdx,%rcx
 80720d8:	48 01 c8             	add    %rcx,%rax
 80720db:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 80720e2:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 80720e9:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80720f0:	00 00 00 
 80720f3:	48 01 c8             	add    %rcx,%rax
 80720f6:	0f b6 08             	movzbl (%rax),%ecx
 80720f9:	83 e1 0f             	and    $0xf,%ecx
 80720fc:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
 8072102:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
 8072108:	83 f8 02             	cmp    $0x2,%eax
 807210b:	0f 84 14 00 00 00    	je     8072125 <elf_output_file+0x566>
 8072111:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
 8072117:	83 f8 0a             	cmp    $0xa,%eax
 807211a:	0f 84 05 00 00 00    	je     8072125 <elf_output_file+0x566>
 8072120:	e9 a1 00 00 00       	jmpq   80721c6 <elf_output_file+0x607>
 8072125:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 807212c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8072133:	00 00 00 
 8072136:	48 01 c8             	add    %rcx,%rax
 8072139:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
 807213f:	83 e1 0f             	and    $0xf,%ecx
 8072142:	83 c1 10             	add    $0x10,%ecx
 8072145:	48 8b 15 4c bd 01 00 	mov    0x1bd4c(%rip),%rdx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807214c:	48 8b 12             	mov    (%rdx),%rdx
 807214f:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
 8072156:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 807215d:	00 00 00 
 8072160:	48 01 c2             	add    %rax,%rdx
 8072163:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 807216a:	48 89 8d 60 fe ff ff 	mov    %rcx,-0x1a0(%rbp)
 8072171:	48 8b 0a             	mov    (%rdx),%rcx
 8072174:	48 29 c8             	sub    %rcx,%rax
 8072177:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807217e:	00 00 00 
 8072181:	48 99                	cqto   
 8072183:	48 f7 f9             	idiv   %rcx
 8072186:	48 89 c1             	mov    %rax,%rcx
 8072189:	49 89 c8             	mov    %rcx,%r8
 807218c:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
 8072192:	49 89 c3             	mov    %rax,%r11
 8072195:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
 807219c:	48 8b 00             	mov    (%rax),%rax
 807219f:	49 89 c2             	mov    %rax,%r10
 80721a2:	b8 07 00 00 00       	mov    $0x7,%eax
 80721a7:	48 89 c6             	mov    %rax,%rsi
 80721aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80721ae:	48 89 c7             	mov    %rax,%rdi
 80721b1:	4c 89 d2             	mov    %r10,%rdx
 80721b4:	4c 89 d9             	mov    %r11,%rcx
 80721b7:	b8 00 00 00 00       	mov    $0x0,%eax
 80721bc:	e8 43 e2 ff ff       	callq  8070404 <put_got_entry>
 80721c1:	e9 e9 03 00 00       	jmpq   80725af <elf_output_file+0x9f0>
 80721c6:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
 80721cc:	83 f8 01             	cmp    $0x1,%eax
 80721cf:	0f 85 da 03 00 00    	jne    80725af <elf_output_file+0x9f0>
 80721d5:	48 8b 05 a4 bd 01 00 	mov    0x1bda4(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 80721dc:	48 8b 00             	mov    (%rax),%rax
 80721df:	48 8b 08             	mov    (%rax),%rcx
 80721e2:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
 80721e9:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
 80721f0:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80721f7:	00 00 00 
 80721fa:	48 01 c8             	add    %rcx,%rax
 80721fd:	48 89 c1             	mov    %rax,%rcx
 8072200:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8072207:	00 00 00 
 807220a:	48 29 c1             	sub    %rax,%rcx
 807220d:	48 89 c8             	mov    %rcx,%rax
 8072210:	48 b9 f0 ff ff ff ff 	movabs $0xfffffffffffffff0,%rcx
 8072217:	ff ff ff 
 807221a:	48 21 c8             	and    %rcx,%rax
 807221d:	48 89 c1             	mov    %rax,%rcx
 8072220:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
 8072227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807222b:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8072232:	00 00 00 
 8072235:	48 01 c8             	add    %rcx,%rax
 8072238:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
 807223f:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8072246:	00 00 00 
 8072249:	48 01 d1             	add    %rdx,%rcx
 807224c:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
 8072253:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
 807225a:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 8072261:	00 00 00 
 8072264:	48 01 c2             	add    %rax,%rdx
 8072267:	48 8b 05 12 bd 01 00 	mov    0x1bd12(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 807226e:	48 8b 00             	mov    (%rax),%rax
 8072271:	48 89 8d 38 fe ff ff 	mov    %rcx,-0x1c8(%rbp)
 8072278:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 807227f:	00 00 00 
 8072282:	48 01 c8             	add    %rcx,%rax
 8072285:	50                   	push   %rax
 8072286:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
 807228d:	51                   	push   %rcx
 807228e:	8b 08                	mov    (%rax),%ecx
 8072290:	49 89 c9             	mov    %rcx,%r9
 8072293:	b8 00 00 00 00       	mov    $0x0,%eax
 8072298:	49 89 c0             	mov    %rax,%r8
 807229b:	0f b6 02             	movzbl (%rdx),%eax
 807229e:	49 89 c3             	mov    %rax,%r11
 80722a1:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
 80722a8:	48 8b 00             	mov    (%rax),%rax
 80722ab:	49 89 c2             	mov    %rax,%r10
 80722ae:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
 80722b5:	48 89 c6             	mov    %rax,%rsi
 80722b8:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
 80722bf:	48 8b 00             	mov    (%rax),%rax
 80722c2:	48 89 c7             	mov    %rax,%rdi
 80722c5:	4c 89 d2             	mov    %r10,%rdx
 80722c8:	4c 89 d9             	mov    %r11,%rcx
 80722cb:	b8 00 00 00 00       	mov    $0x0,%eax
 80722d0:	e8 58 b9 ff ff       	callq  806dc2d <put_elf_sym>
 80722d5:	48 83 c4 10          	add    $0x10,%rsp
 80722d9:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
 80722df:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 80722e6:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80722ed:	00 00 00 
 80722f0:	48 01 c8             	add    %rcx,%rax
 80722f3:	0f b6 08             	movzbl (%rax),%ecx
 80722f6:	c1 f9 04             	sar    $0x4,%ecx
 80722f9:	83 f9 02             	cmp    $0x2,%ecx
 80722fc:	0f 85 1f 02 00 00    	jne    8072521 <elf_output_file+0x962>
 8072302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072306:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 807230d:	00 00 00 
 8072310:	48 01 c8             	add    %rcx,%rax
 8072313:	48 8b 08             	mov    (%rax),%rcx
 8072316:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 807231d:	00 00 00 
 8072320:	48 01 c1             	add    %rax,%rcx
 8072323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072327:	48 ba c0 00 00 00 00 	movabs $0xc0,%rdx
 807232e:	00 00 00 
 8072331:	48 01 d0             	add    %rdx,%rax
 8072334:	48 8b 10             	mov    (%rax),%rdx
 8072337:	48 8b 01             	mov    (%rcx),%rax
 807233a:	48 8b 0a             	mov    (%rdx),%rcx
 807233d:	48 01 c8             	add    %rcx,%rax
 8072340:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
 8072347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807234b:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 8072352:	00 00 00 
 8072355:	48 01 c8             	add    %rcx,%rax
 8072358:	48 8b 08             	mov    (%rax),%rcx
 807235b:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8072362:	00 00 00 
 8072365:	48 01 c1             	add    %rax,%rcx
 8072368:	48 8b 01             	mov    (%rcx),%rax
 807236b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8072372:	00 00 00 
 8072375:	48 01 c8             	add    %rcx,%rax
 8072378:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
 807237f:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
 8072386:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
 807238d:	48 89 c2             	mov    %rax,%rdx
 8072390:	48 89 c8             	mov    %rcx,%rax
 8072393:	48 39 c2             	cmp    %rax,%rdx
 8072396:	0f 83 85 01 00 00    	jae    8072521 <elf_output_file+0x962>
 807239c:	e9 20 00 00 00       	jmpq   80723c1 <elf_output_file+0x802>
 80723a1:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
 80723a8:	48 89 c1             	mov    %rax,%rcx
 80723ab:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80723b2:	00 00 00 
 80723b5:	48 01 d0             	add    %rdx,%rax
 80723b8:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
 80723bf:	eb be                	jmp    807237f <elf_output_file+0x7c0>
 80723c1:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
 80723c8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80723cf:	00 00 00 
 80723d2:	48 01 c8             	add    %rcx,%rax
 80723d5:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
 80723dc:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80723e3:	00 00 00 
 80723e6:	48 01 d1             	add    %rdx,%rcx
 80723e9:	48 8b 10             	mov    (%rax),%rdx
 80723ec:	48 8b 01             	mov    (%rcx),%rax
 80723ef:	48 39 c2             	cmp    %rax,%rdx
 80723f2:	0f 85 24 01 00 00    	jne    807251c <elf_output_file+0x95d>
 80723f8:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
 80723ff:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072406:	00 00 00 
 8072409:	48 01 c8             	add    %rcx,%rax
 807240c:	0f b6 08             	movzbl (%rax),%ecx
 807240f:	c1 f9 04             	sar    $0x4,%ecx
 8072412:	83 f9 01             	cmp    $0x1,%ecx
 8072415:	0f 85 01 01 00 00    	jne    807251c <elf_output_file+0x95d>
 807241b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807241f:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 8072426:	00 00 00 
 8072429:	48 01 c8             	add    %rcx,%rax
 807242c:	48 8b 08             	mov    (%rax),%rcx
 807242f:	48 b8 58 00 00 00 00 	movabs $0x58,%rax
 8072436:	00 00 00 
 8072439:	48 01 c1             	add    %rax,%rcx
 807243c:	48 8b 01             	mov    (%rcx),%rax
 807243f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8072446:	00 00 00 
 8072449:	48 01 c8             	add    %rcx,%rax
 807244c:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
 8072453:	8b 11                	mov    (%rcx),%edx
 8072455:	48 8b 08             	mov    (%rax),%rcx
 8072458:	48 89 d0             	mov    %rdx,%rax
 807245b:	48 01 c1             	add    %rax,%rcx
 807245e:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
 8072465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072469:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8072470:	00 00 00 
 8072473:	48 01 c8             	add    %rcx,%rax
 8072476:	48 8b 8d 50 fe ff ff 	mov    -0x1b0(%rbp),%rcx
 807247d:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8072484:	00 00 00 
 8072487:	48 01 d1             	add    %rdx,%rcx
 807248a:	48 8b 95 50 fe ff ff 	mov    -0x1b0(%rbp),%rdx
 8072491:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
 8072498:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 807249f:	00 00 00 
 80724a2:	48 01 c2             	add    %rax,%rdx
 80724a5:	48 8b 05 d4 ba 01 00 	mov    0x1bad4(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 80724ac:	48 8b 00             	mov    (%rax),%rax
 80724af:	48 89 8d 20 fe ff ff 	mov    %rcx,-0x1e0(%rbp)
 80724b6:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 80724bd:	00 00 00 
 80724c0:	48 01 c8             	add    %rcx,%rax
 80724c3:	50                   	push   %rax
 80724c4:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
 80724cb:	51                   	push   %rcx
 80724cc:	8b 08                	mov    (%rax),%ecx
 80724ce:	49 89 c9             	mov    %rcx,%r9
 80724d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80724d6:	49 89 c0             	mov    %rax,%r8
 80724d9:	0f b6 02             	movzbl (%rdx),%eax
 80724dc:	49 89 c3             	mov    %rax,%r11
 80724df:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
 80724e6:	48 8b 00             	mov    (%rax),%rax
 80724e9:	49 89 c2             	mov    %rax,%r10
 80724ec:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
 80724f3:	48 89 c6             	mov    %rax,%rsi
 80724f6:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
 80724fd:	48 8b 00             	mov    (%rax),%rax
 8072500:	48 89 c7             	mov    %rax,%rdi
 8072503:	4c 89 d2             	mov    %r10,%rdx
 8072506:	4c 89 d9             	mov    %r11,%rcx
 8072509:	b8 00 00 00 00       	mov    $0x0,%eax
 807250e:	e8 1a b7 ff ff       	callq  806dc2d <put_elf_sym>
 8072513:	48 83 c4 10          	add    $0x10,%rsp
 8072517:	e9 05 00 00 00       	jmpq   8072521 <elf_output_file+0x962>
 807251c:	e9 80 fe ff ff       	jmpq   80723a1 <elf_output_file+0x7e2>
 8072521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072525:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 807252c:	00 00 00 
 807252f:	48 01 c8             	add    %rcx,%rax
 8072532:	8b 8d a0 fe ff ff    	mov    -0x160(%rbp),%ecx
 8072538:	49 89 c8             	mov    %rcx,%r8
 807253b:	b9 05 00 00 00       	mov    $0x5,%ecx
 8072540:	49 89 cb             	mov    %rcx,%r11
 8072543:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
 807254a:	49 89 ca             	mov    %rcx,%r10
 807254d:	48 8b 0d 2c ba 01 00 	mov    0x1ba2c(%rip),%rcx        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 8072554:	48 8b 09             	mov    (%rcx),%rcx
 8072557:	48 89 ce             	mov    %rcx,%rsi
 807255a:	48 8b 08             	mov    (%rax),%rcx
 807255d:	48 89 cf             	mov    %rcx,%rdi
 8072560:	4c 89 d2             	mov    %r10,%rdx
 8072563:	4c 89 d9             	mov    %r11,%rcx
 8072566:	b8 00 00 00 00       	mov    $0x0,%eax
 807256b:	e8 d0 c0 ff ff       	callq  806e640 <put_elf_reloc>
 8072570:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 8072577:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807257e:	00 00 00 
 8072581:	48 01 c8             	add    %rcx,%rax
 8072584:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
 807258b:	48 8b 10             	mov    (%rax),%rdx
 807258e:	48 01 d1             	add    %rdx,%rcx
 8072591:	48 89 c8             	mov    %rcx,%rax
 8072594:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
 807259b:	48 8b 05 de b9 01 00 	mov    0x1b9de(%rip),%rax        # 808df80 <_GLOBAL_OFFSET_TABLE_+0x300>
 80725a2:	48 8b 00             	mov    (%rax),%rax
 80725a5:	48 8b 8d 58 fe ff ff 	mov    -0x1a8(%rbp),%rcx
 80725ac:	48 89 08             	mov    %rcx,(%rax)
 80725af:	e9 71 00 00 00       	jmpq   8072625 <elf_output_file+0xa66>
 80725b4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 80725bb:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80725c2:	00 00 00 
 80725c5:	48 01 c8             	add    %rcx,%rax
 80725c8:	0f b6 08             	movzbl (%rax),%ecx
 80725cb:	c1 f9 04             	sar    $0x4,%ecx
 80725ce:	83 f9 02             	cmp    $0x2,%ecx
 80725d1:	0f 84 2b 00 00 00    	je     8072602 <elf_output_file+0xa43>
 80725d7:	48 8d 05 22 a0 01 00 	lea    0x1a022(%rip),%rax        # 808c600 <L.139>
 80725de:	48 89 c6             	mov    %rax,%rsi
 80725e1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 80725e8:	48 89 c7             	mov    %rax,%rdi
 80725eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80725f0:	e8 eb 4b 01 00       	callq  80871e0 <strcmp>
 80725f5:	85 c0                	test   %eax,%eax
 80725f7:	0f 84 05 00 00 00    	je     8072602 <elf_output_file+0xa43>
 80725fd:	e9 05 00 00 00       	jmpq   8072607 <elf_output_file+0xa48>
 8072602:	e9 1e 00 00 00       	jmpq   8072625 <elf_output_file+0xa66>
 8072607:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 807260e:	48 89 c6             	mov    %rax,%rsi
 8072611:	48 8d 05 ef 9f 01 00 	lea    0x19fef(%rip),%rax        # 808c607 <L.140>
 8072618:	48 89 c7             	mov    %rax,%rdi
 807261b:	b8 00 00 00 00       	mov    $0x0,%eax
 8072620:	e8 c8 ae fd ff       	callq  804d4ed <tcc_error_noabort>
 8072625:	e9 4c 01 00 00       	jmpq   8072776 <elf_output_file+0xbb7>
 807262a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807262e:	48 b9 f8 00 00 00 00 	movabs $0xf8,%rcx
 8072635:	00 00 00 
 8072638:	48 01 c8             	add    %rcx,%rax
 807263b:	8b 08                	mov    (%rax),%ecx
 807263d:	85 c9                	test   %ecx,%ecx
 807263f:	0f 84 31 01 00 00    	je     8072776 <elf_output_file+0xbb7>
 8072645:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 807264c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072653:	00 00 00 
 8072656:	48 01 c8             	add    %rcx,%rax
 8072659:	0f b6 08             	movzbl (%rax),%ecx
 807265c:	c1 f9 04             	sar    $0x4,%ecx
 807265f:	83 f9 00             	cmp    $0x0,%ecx
 8072662:	0f 84 0e 01 00 00    	je     8072776 <elf_output_file+0xbb7>
 8072668:	48 8b 05 29 b8 01 00 	mov    0x1b829(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807266f:	48 8b 00             	mov    (%rax),%rax
 8072672:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8072679:	00 00 00 
 807267c:	48 01 c8             	add    %rcx,%rax
 807267f:	48 8b 08             	mov    (%rax),%rcx
 8072682:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8072689:	00 00 00 
 807268c:	48 01 c1             	add    %rax,%rcx
 807268f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072696:	8b 10                	mov    (%rax),%edx
 8072698:	48 8b 01             	mov    (%rcx),%rax
 807269b:	48 89 d1             	mov    %rdx,%rcx
 807269e:	48 01 c8             	add    %rcx,%rax
 80726a1:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
 80726a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80726ac:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 80726b3:	00 00 00 
 80726b6:	48 01 c8             	add    %rcx,%rax
 80726b9:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 80726c0:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80726c7:	00 00 00 
 80726ca:	48 01 d1             	add    %rdx,%rcx
 80726cd:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 80726d4:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
 80726db:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80726e2:	00 00 00 
 80726e5:	48 01 c2             	add    %rax,%rdx
 80726e8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 80726ef:	48 89 8d 10 fe ff ff 	mov    %rcx,-0x1f0(%rbp)
 80726f6:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80726fd:	00 00 00 
 8072700:	48 01 c8             	add    %rcx,%rax
 8072703:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 807270a:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
 8072711:	48 ba 06 00 00 00 00 	movabs $0x6,%rdx
 8072718:	00 00 00 
 807271b:	48 01 d1             	add    %rdx,%rcx
 807271e:	50                   	push   %rax
 807271f:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 8072726:	52                   	push   %rdx
 8072727:	0f b7 11             	movzwl (%rcx),%edx
 807272a:	49 89 d1             	mov    %rdx,%r9
 807272d:	b9 00 00 00 00       	mov    $0x0,%ecx
 8072732:	49 89 c8             	mov    %rcx,%r8
 8072735:	0f b6 08             	movzbl (%rax),%ecx
 8072738:	49 89 cb             	mov    %rcx,%r11
 807273b:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
 8072742:	48 8b 00             	mov    (%rax),%rax
 8072745:	49 89 c2             	mov    %rax,%r10
 8072748:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
 807274f:	48 8b 00             	mov    (%rax),%rax
 8072752:	48 89 c6             	mov    %rax,%rsi
 8072755:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax
 807275c:	48 8b 00             	mov    (%rax),%rax
 807275f:	48 89 c7             	mov    %rax,%rdi
 8072762:	4c 89 d2             	mov    %r10,%rdx
 8072765:	4c 89 d9             	mov    %r11,%rcx
 8072768:	b8 00 00 00 00       	mov    $0x0,%eax
 807276d:	e8 bb b4 ff ff       	callq  806dc2d <put_elf_sym>
 8072772:	48 83 c4 10          	add    $0x10,%rsp
 8072776:	e9 5d f8 ff ff       	jmpq   8071fd8 <elf_output_file+0x419>
 807277b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807277f:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 8072786:	00 00 00 
 8072789:	48 01 c8             	add    %rcx,%rax
 807278c:	8b 08                	mov    (%rax),%ecx
 807278e:	85 c9                	test   %ecx,%ecx
 8072790:	0f 84 05 00 00 00    	je     807279b <elf_output_file+0xbdc>
 8072796:	e9 08 23 00 00       	jmpq   8074aa3 <elf_output_file+0x2ee4>
 807279b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807279f:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 80727a6:	00 00 00 
 80727a9:	48 01 c8             	add    %rcx,%rax
 80727ac:	48 8b 08             	mov    (%rax),%rcx
 80727af:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80727b6:	00 00 00 
 80727b9:	48 01 c1             	add    %rax,%rcx
 80727bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80727c0:	48 ba c0 00 00 00 00 	movabs $0xc0,%rdx
 80727c7:	00 00 00 
 80727ca:	48 01 d0             	add    %rdx,%rax
 80727cd:	48 8b 10             	mov    (%rax),%rdx
 80727d0:	48 8b 01             	mov    (%rcx),%rax
 80727d3:	48 8b 0a             	mov    (%rdx),%rcx
 80727d6:	48 01 c8             	add    %rcx,%rax
 80727d9:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
 80727e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80727e4:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 80727eb:	00 00 00 
 80727ee:	48 01 c8             	add    %rcx,%rax
 80727f1:	48 8b 08             	mov    (%rax),%rcx
 80727f4:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80727fb:	00 00 00 
 80727fe:	48 01 c1             	add    %rax,%rcx
 8072801:	48 8b 01             	mov    (%rcx),%rax
 8072804:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807280b:	00 00 00 
 807280e:	48 01 c8             	add    %rcx,%rax
 8072811:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 8072818:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 807281f:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
 8072826:	48 89 c2             	mov    %rax,%rdx
 8072829:	48 89 c8             	mov    %rcx,%rax
 807282c:	48 39 c2             	cmp    %rax,%rdx
 807282f:	0f 83 23 02 00 00    	jae    8072a58 <elf_output_file+0xe99>
 8072835:	e9 20 00 00 00       	jmpq   807285a <elf_output_file+0xc9b>
 807283a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 8072841:	48 89 c1             	mov    %rax,%rcx
 8072844:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 807284b:	00 00 00 
 807284e:	48 01 d0             	add    %rdx,%rax
 8072851:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 8072858:	eb be                	jmp    8072818 <elf_output_file+0xc59>
 807285a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 8072861:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8072868:	00 00 00 
 807286b:	48 01 c8             	add    %rcx,%rax
 807286e:	0f b7 08             	movzwl (%rax),%ecx
 8072871:	83 f9 00             	cmp    $0x0,%ecx
 8072874:	0f 85 d9 01 00 00    	jne    8072a53 <elf_output_file+0xe94>
 807287a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807287e:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 8072885:	00 00 00 
 8072888:	48 01 c8             	add    %rcx,%rax
 807288b:	48 8b 08             	mov    (%rax),%rcx
 807288e:	48 b8 58 00 00 00 00 	movabs $0x58,%rax
 8072895:	00 00 00 
 8072898:	48 01 c1             	add    %rax,%rcx
 807289b:	48 8b 01             	mov    (%rcx),%rax
 807289e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80728a5:	00 00 00 
 80728a8:	48 01 c8             	add    %rcx,%rax
 80728ab:	48 8b 8d 98 fe ff ff 	mov    -0x168(%rbp),%rcx
 80728b2:	8b 11                	mov    (%rcx),%edx
 80728b4:	48 8b 08             	mov    (%rax),%rcx
 80728b7:	48 89 d0             	mov    %rdx,%rax
 80728ba:	48 01 c1             	add    %rax,%rcx
 80728bd:	48 89 8d a8 fe ff ff 	mov    %rcx,-0x158(%rbp)
 80728c4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 80728cb:	48 89 c6             	mov    %rax,%rsi
 80728ce:	48 8b 05 c3 b5 01 00 	mov    0x1b5c3(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80728d5:	48 8b 00             	mov    (%rax),%rax
 80728d8:	48 89 c7             	mov    %rax,%rdi
 80728db:	b8 00 00 00 00       	mov    $0x0,%eax
 80728e0:	e8 18 b6 ff ff       	callq  806defd <find_elf_sym>
 80728e5:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
 80728eb:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
 80728f1:	85 c0                	test   %eax,%eax
 80728f3:	0f 84 14 01 00 00    	je     8072a0d <elf_output_file+0xe4e>
 80728f9:	48 8b 05 98 b5 01 00 	mov    0x1b598(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072900:	48 8b 00             	mov    (%rax),%rax
 8072903:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807290a:	00 00 00 
 807290d:	48 01 c8             	add    %rcx,%rax
 8072910:	8b 8d a4 fe ff ff    	mov    -0x15c(%rbp),%ecx
 8072916:	48 63 c9             	movslq %ecx,%rcx
 8072919:	48 89 ca             	mov    %rcx,%rdx
 807291c:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8072923:	00 00 00 
 8072926:	48 0f af d1          	imul   %rcx,%rdx
 807292a:	48 8b 08             	mov    (%rax),%rcx
 807292d:	48 89 d0             	mov    %rdx,%rax
 8072930:	48 01 c1             	add    %rax,%rcx
 8072933:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
 807293a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807293e:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8072945:	00 00 00 
 8072948:	48 01 c8             	add    %rcx,%rax
 807294b:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 8072952:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8072959:	00 00 00 
 807295c:	48 01 d1             	add    %rdx,%rcx
 807295f:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 8072966:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
 807296d:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 8072974:	00 00 00 
 8072977:	48 01 c2             	add    %rax,%rdx
 807297a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072981:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
 8072988:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807298f:	00 00 00 
 8072992:	48 01 c8             	add    %rcx,%rax
 8072995:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 807299c:	48 89 95 f0 fd ff ff 	mov    %rdx,-0x210(%rbp)
 80729a3:	48 ba 06 00 00 00 00 	movabs $0x6,%rdx
 80729aa:	00 00 00 
 80729ad:	48 01 d1             	add    %rdx,%rcx
 80729b0:	50                   	push   %rax
 80729b1:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 80729b8:	52                   	push   %rdx
 80729b9:	0f b7 11             	movzwl (%rcx),%edx
 80729bc:	49 89 d1             	mov    %rdx,%r9
 80729bf:	b9 00 00 00 00       	mov    $0x0,%ecx
 80729c4:	49 89 c8             	mov    %rcx,%r8
 80729c7:	0f b6 08             	movzbl (%rax),%ecx
 80729ca:	49 89 cb             	mov    %rcx,%r11
 80729cd:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
 80729d4:	48 8b 00             	mov    (%rax),%rax
 80729d7:	49 89 c2             	mov    %rax,%r10
 80729da:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
 80729e1:	48 8b 00             	mov    (%rax),%rax
 80729e4:	48 89 c6             	mov    %rax,%rsi
 80729e7:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
 80729ee:	48 8b 00             	mov    (%rax),%rax
 80729f1:	48 89 c7             	mov    %rax,%rdi
 80729f4:	4c 89 d2             	mov    %r10,%rdx
 80729f7:	4c 89 d9             	mov    %r11,%rcx
 80729fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80729ff:	e8 29 b2 ff ff       	callq  806dc2d <put_elf_sym>
 8072a04:	48 83 c4 10          	add    $0x10,%rsp
 8072a08:	e9 46 00 00 00       	jmpq   8072a53 <elf_output_file+0xe94>
 8072a0d:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 8072a14:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072a1b:	00 00 00 
 8072a1e:	48 01 c8             	add    %rcx,%rax
 8072a21:	0f b6 08             	movzbl (%rax),%ecx
 8072a24:	c1 f9 04             	sar    $0x4,%ecx
 8072a27:	83 f9 02             	cmp    $0x2,%ecx
 8072a2a:	0f 85 05 00 00 00    	jne    8072a35 <elf_output_file+0xe76>
 8072a30:	e9 1e 00 00 00       	jmpq   8072a53 <elf_output_file+0xe94>
 8072a35:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 8072a3c:	48 89 c6             	mov    %rax,%rsi
 8072a3f:	48 8d 05 d7 9b 01 00 	lea    0x19bd7(%rip),%rax        # 808c61d <L.141>
 8072a46:	48 89 c7             	mov    %rax,%rdi
 8072a49:	b8 00 00 00 00       	mov    $0x0,%eax
 8072a4e:	e8 ac ae fd ff       	callq  804d8ff <tcc_warning>
 8072a53:	e9 e2 fd ff ff       	jmpq   807283a <elf_output_file+0xc7b>
 8072a58:	e9 6b 04 00 00       	jmpq   8072ec8 <elf_output_file+0x1309>
 8072a5d:	48 8b 05 34 b4 01 00 	mov    0x1b434(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072a64:	48 8b 00             	mov    (%rax),%rax
 8072a67:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
 8072a6e:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
 8072a75:	48 8b 00             	mov    (%rax),%rax
 8072a78:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8072a7f:	00 00 00 
 8072a82:	31 d2                	xor    %edx,%edx
 8072a84:	f7 f1                	div    %ecx
 8072a86:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
 8072a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072a90:	48 b9 b8 00 00 00 00 	movabs $0xb8,%rcx
 8072a97:	00 00 00 
 8072a9a:	48 01 c8             	add    %rcx,%rax
 8072a9d:	8b 8d ec fd ff ff    	mov    -0x214(%rbp),%ecx
 8072aa3:	c1 e1 02             	shl    $0x2,%ecx
 8072aa6:	48 89 ca             	mov    %rcx,%rdx
 8072aa9:	48 89 d7             	mov    %rdx,%rdi
 8072aac:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
 8072ab3:	b8 00 00 00 00       	mov    $0x0,%eax
 8072ab8:	e8 0f 95 fd ff       	callq  804bfcc <tcc_mallocz>
 8072abd:	48 8b 8d d8 fd ff ff 	mov    -0x228(%rbp),%rcx
 8072ac4:	48 89 01             	mov    %rax,(%rcx)
 8072ac7:	48 8b 05 ca b3 01 00 	mov    0x1b3ca(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072ace:	48 8b 00             	mov    (%rax),%rax
 8072ad1:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8072ad8:	00 00 00 
 8072adb:	48 01 c8             	add    %rcx,%rax
 8072ade:	48 8b 08             	mov    (%rax),%rcx
 8072ae1:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8072ae8:	00 00 00 
 8072aeb:	48 01 c1             	add    %rax,%rcx
 8072aee:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
 8072af5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072afc:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
 8072b03:	48 89 c2             	mov    %rax,%rdx
 8072b06:	48 89 c8             	mov    %rcx,%rax
 8072b09:	48 39 c2             	cmp    %rax,%rdx
 8072b0c:	0f 83 b6 03 00 00    	jae    8072ec8 <elf_output_file+0x1309>
 8072b12:	e9 20 00 00 00       	jmpq   8072b37 <elf_output_file+0xf78>
 8072b17:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072b1e:	48 89 c1             	mov    %rax,%rcx
 8072b21:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8072b28:	00 00 00 
 8072b2b:	48 01 d0             	add    %rdx,%rax
 8072b2e:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 8072b35:	eb be                	jmp    8072af5 <elf_output_file+0xf36>
 8072b37:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072b3e:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072b45:	00 00 00 
 8072b48:	48 01 c8             	add    %rcx,%rax
 8072b4b:	0f b6 08             	movzbl (%rax),%ecx
 8072b4e:	c1 f9 04             	sar    $0x4,%ecx
 8072b51:	83 f9 00             	cmp    $0x0,%ecx
 8072b54:	0f 84 69 03 00 00    	je     8072ec3 <elf_output_file+0x1304>
 8072b5a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072b61:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072b68:	00 00 00 
 8072b6b:	48 01 c8             	add    %rcx,%rax
 8072b6e:	0f b6 08             	movzbl (%rax),%ecx
 8072b71:	83 e1 0f             	and    $0xf,%ecx
 8072b74:	83 f9 02             	cmp    $0x2,%ecx
 8072b77:	0f 84 28 00 00 00    	je     8072ba5 <elf_output_file+0xfe6>
 8072b7d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072b84:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072b8b:	00 00 00 
 8072b8e:	48 01 c8             	add    %rcx,%rax
 8072b91:	0f b6 08             	movzbl (%rax),%ecx
 8072b94:	83 e1 0f             	and    $0xf,%ecx
 8072b97:	83 f9 0a             	cmp    $0xa,%ecx
 8072b9a:	0f 84 05 00 00 00    	je     8072ba5 <elf_output_file+0xfe6>
 8072ba0:	e9 cd 00 00 00       	jmpq   8072c72 <elf_output_file+0x10b3>
 8072ba5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072bac:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8072bb3:	00 00 00 
 8072bb6:	48 01 c8             	add    %rcx,%rax
 8072bb9:	0f b7 08             	movzwl (%rax),%ecx
 8072bbc:	83 f9 00             	cmp    $0x0,%ecx
 8072bbf:	0f 85 ad 00 00 00    	jne    8072c72 <elf_output_file+0x10b3>
 8072bc5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072bcc:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8072bd3:	00 00 00 
 8072bd6:	48 01 c8             	add    %rcx,%rax
 8072bd9:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 8072be0:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8072be7:	00 00 00 
 8072bea:	48 01 d1             	add    %rdx,%rcx
 8072bed:	48 8b 15 a4 b2 01 00 	mov    0x1b2a4(%rip),%rdx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072bf4:	48 8b 12             	mov    (%rdx),%rdx
 8072bf7:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
 8072bfe:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8072c05:	00 00 00 
 8072c08:	48 01 c2             	add    %rax,%rdx
 8072c0b:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072c12:	48 89 8d c8 fd ff ff 	mov    %rcx,-0x238(%rbp)
 8072c19:	48 8b 0a             	mov    (%rdx),%rcx
 8072c1c:	48 29 c8             	sub    %rcx,%rax
 8072c1f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8072c26:	00 00 00 
 8072c29:	48 99                	cqto   
 8072c2b:	48 f7 f9             	idiv   %rcx
 8072c2e:	48 89 c1             	mov    %rax,%rcx
 8072c31:	49 89 c8             	mov    %rcx,%r8
 8072c34:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
 8072c3b:	0f b6 00             	movzbl (%rax),%eax
 8072c3e:	49 89 c3             	mov    %rax,%r11
 8072c41:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
 8072c48:	48 8b 00             	mov    (%rax),%rax
 8072c4b:	49 89 c2             	mov    %rax,%r10
 8072c4e:	b8 07 00 00 00       	mov    $0x7,%eax
 8072c53:	48 89 c6             	mov    %rax,%rsi
 8072c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072c5a:	48 89 c7             	mov    %rax,%rdi
 8072c5d:	4c 89 d2             	mov    %r10,%rdx
 8072c60:	4c 89 d9             	mov    %r11,%rcx
 8072c63:	b8 00 00 00 00       	mov    $0x0,%eax
 8072c68:	e8 97 d7 ff ff       	callq  8070404 <put_got_entry>
 8072c6d:	e9 51 02 00 00       	jmpq   8072ec3 <elf_output_file+0x1304>
 8072c72:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072c79:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072c80:	00 00 00 
 8072c83:	48 01 c8             	add    %rcx,%rax
 8072c86:	0f b6 08             	movzbl (%rax),%ecx
 8072c89:	83 e1 0f             	and    $0xf,%ecx
 8072c8c:	83 f9 01             	cmp    $0x1,%ecx
 8072c8f:	0f 85 ad 00 00 00    	jne    8072d42 <elf_output_file+0x1183>
 8072c95:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072c9c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8072ca3:	00 00 00 
 8072ca6:	48 01 c8             	add    %rcx,%rax
 8072ca9:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 8072cb0:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 8072cb7:	00 00 00 
 8072cba:	48 01 d1             	add    %rdx,%rcx
 8072cbd:	48 8b 15 d4 b1 01 00 	mov    0x1b1d4(%rip),%rdx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072cc4:	48 8b 12             	mov    (%rdx),%rdx
 8072cc7:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
 8072cce:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8072cd5:	00 00 00 
 8072cd8:	48 01 c2             	add    %rax,%rdx
 8072cdb:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072ce2:	48 89 8d b8 fd ff ff 	mov    %rcx,-0x248(%rbp)
 8072ce9:	48 8b 0a             	mov    (%rdx),%rcx
 8072cec:	48 29 c8             	sub    %rcx,%rax
 8072cef:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8072cf6:	00 00 00 
 8072cf9:	48 99                	cqto   
 8072cfb:	48 f7 f9             	idiv   %rcx
 8072cfe:	48 89 c1             	mov    %rax,%rcx
 8072d01:	49 89 c8             	mov    %rcx,%r8
 8072d04:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
 8072d0b:	0f b6 00             	movzbl (%rax),%eax
 8072d0e:	49 89 c3             	mov    %rax,%r11
 8072d11:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 8072d18:	48 8b 00             	mov    (%rax),%rax
 8072d1b:	49 89 c2             	mov    %rax,%r10
 8072d1e:	b8 06 00 00 00       	mov    $0x6,%eax
 8072d23:	48 89 c6             	mov    %rax,%rsi
 8072d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072d2a:	48 89 c7             	mov    %rax,%rdi
 8072d2d:	4c 89 d2             	mov    %r10,%rdx
 8072d30:	4c 89 d9             	mov    %r11,%rcx
 8072d33:	b8 00 00 00 00       	mov    $0x0,%eax
 8072d38:	e8 c7 d6 ff ff       	callq  8070404 <put_got_entry>
 8072d3d:	e9 81 01 00 00       	jmpq   8072ec3 <elf_output_file+0x1304>
 8072d42:	48 8b 05 4f b1 01 00 	mov    0x1b14f(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072d49:	48 8b 00             	mov    (%rax),%rax
 8072d4c:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8072d53:	00 00 00 
 8072d56:	48 01 c8             	add    %rcx,%rax
 8072d59:	48 8b 08             	mov    (%rax),%rcx
 8072d5c:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8072d63:	00 00 00 
 8072d66:	48 01 c1             	add    %rax,%rcx
 8072d69:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072d70:	8b 10                	mov    (%rax),%edx
 8072d72:	48 8b 01             	mov    (%rcx),%rax
 8072d75:	48 89 d1             	mov    %rdx,%rcx
 8072d78:	48 01 c8             	add    %rcx,%rax
 8072d7b:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
 8072d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072d86:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8072d8d:	00 00 00 
 8072d90:	48 01 c8             	add    %rcx,%rax
 8072d93:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 8072d9a:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8072da1:	00 00 00 
 8072da4:	48 01 d1             	add    %rdx,%rcx
 8072da7:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 8072dae:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
 8072db5:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 8072dbc:	00 00 00 
 8072dbf:	48 01 c2             	add    %rax,%rdx
 8072dc2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8072dc9:	48 89 8d a8 fd ff ff 	mov    %rcx,-0x258(%rbp)
 8072dd0:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8072dd7:	00 00 00 
 8072dda:	48 01 c8             	add    %rcx,%rax
 8072ddd:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
 8072de4:	48 89 95 a0 fd ff ff 	mov    %rdx,-0x260(%rbp)
 8072deb:	48 ba 06 00 00 00 00 	movabs $0x6,%rdx
 8072df2:	00 00 00 
 8072df5:	48 01 d1             	add    %rdx,%rcx
 8072df8:	50                   	push   %rax
 8072df9:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 8072e00:	52                   	push   %rdx
 8072e01:	0f b7 11             	movzwl (%rcx),%edx
 8072e04:	49 89 d1             	mov    %rdx,%r9
 8072e07:	b9 00 00 00 00       	mov    $0x0,%ecx
 8072e0c:	49 89 c8             	mov    %rcx,%r8
 8072e0f:	0f b6 08             	movzbl (%rax),%ecx
 8072e12:	49 89 cb             	mov    %rcx,%r11
 8072e15:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 8072e1c:	48 8b 00             	mov    (%rax),%rax
 8072e1f:	49 89 c2             	mov    %rax,%r10
 8072e22:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
 8072e29:	48 8b 00             	mov    (%rax),%rax
 8072e2c:	48 89 c6             	mov    %rax,%rsi
 8072e2f:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
 8072e36:	48 8b 00             	mov    (%rax),%rax
 8072e39:	48 89 c7             	mov    %rax,%rdi
 8072e3c:	4c 89 d2             	mov    %r10,%rdx
 8072e3f:	4c 89 d9             	mov    %r11,%rcx
 8072e42:	b8 00 00 00 00       	mov    $0x0,%eax
 8072e47:	e8 e1 ad ff ff       	callq  806dc2d <put_elf_sym>
 8072e4c:	48 83 c4 10          	add    $0x10,%rsp
 8072e50:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
 8072e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072e5a:	48 b9 b8 00 00 00 00 	movabs $0xb8,%rcx
 8072e61:	00 00 00 
 8072e64:	48 01 c8             	add    %rcx,%rax
 8072e67:	48 8b 0d 2a b0 01 00 	mov    0x1b02a(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8072e6e:	48 8b 09             	mov    (%rcx),%rcx
 8072e71:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8072e78:	00 00 00 
 8072e7b:	48 01 d1             	add    %rdx,%rcx
 8072e7e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 8072e85:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
 8072e8c:	48 8b 01             	mov    (%rcx),%rax
 8072e8f:	48 29 c2             	sub    %rax,%rdx
 8072e92:	48 89 d0             	mov    %rdx,%rax
 8072e95:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8072e9c:	00 00 00 
 8072e9f:	48 99                	cqto   
 8072ea1:	48 f7 f9             	idiv   %rcx
 8072ea4:	48 89 c1             	mov    %rax,%rcx
 8072ea7:	48 c1 e1 02          	shl    $0x2,%rcx
 8072eab:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
 8072eb2:	48 8b 00             	mov    (%rax),%rax
 8072eb5:	48 89 ca             	mov    %rcx,%rdx
 8072eb8:	48 01 d0             	add    %rdx,%rax
 8072ebb:	8b 8d a0 fe ff ff    	mov    -0x160(%rbp),%ecx
 8072ec1:	89 08                	mov    %ecx,(%rax)
 8072ec3:	e9 4f fc ff ff       	jmpq   8072b17 <elf_output_file+0xf58>
 8072ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072ecc:	48 89 c7             	mov    %rax,%rdi
 8072ecf:	b8 00 00 00 00       	mov    $0x0,%eax
 8072ed4:	e8 18 da ff ff       	callq  80708f1 <build_got_entries>
 8072ed9:	b8 00 00 00 00       	mov    $0x0,%eax
 8072ede:	89 45 88             	mov    %eax,-0x78(%rbp)
 8072ee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072ee5:	48 b9 70 00 00 00 00 	movabs $0x70,%rcx
 8072eec:	00 00 00 
 8072eef:	48 01 c8             	add    %rcx,%rax
 8072ef2:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8072ef5:	8b 10                	mov    (%rax),%edx
 8072ef7:	39 d1                	cmp    %edx,%ecx
 8072ef9:	0f 8d ae 00 00 00    	jge    8072fad <elf_output_file+0x13ee>
 8072eff:	e9 0e 00 00 00       	jmpq   8072f12 <elf_output_file+0x1353>
 8072f04:	8b 45 88             	mov    -0x78(%rbp),%eax
 8072f07:	48 89 c1             	mov    %rax,%rcx
 8072f0a:	83 c0 01             	add    $0x1,%eax
 8072f0d:	89 45 88             	mov    %eax,-0x78(%rbp)
 8072f10:	eb cf                	jmp    8072ee1 <elf_output_file+0x1322>
 8072f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072f16:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 8072f1d:	00 00 00 
 8072f20:	48 01 c8             	add    %rcx,%rax
 8072f23:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8072f26:	48 63 c9             	movslq %ecx,%rcx
 8072f29:	48 89 ca             	mov    %rcx,%rdx
 8072f2c:	48 c1 e2 03          	shl    $0x3,%rdx
 8072f30:	48 8b 08             	mov    (%rax),%rcx
 8072f33:	48 89 d0             	mov    %rdx,%rax
 8072f36:	48 01 c1             	add    %rax,%rcx
 8072f39:	48 8b 01             	mov    (%rcx),%rax
 8072f3c:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
 8072f43:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 8072f4a:	8b 08                	mov    (%rax),%ecx
 8072f4c:	83 f9 00             	cmp    $0x0,%ecx
 8072f4f:	0f 85 53 00 00 00    	jne    8072fa8 <elf_output_file+0x13e9>
 8072f55:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 8072f5c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8072f63:	00 00 00 
 8072f66:	48 01 c8             	add    %rcx,%rax
 8072f69:	48 89 c6             	mov    %rax,%rsi
 8072f6c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 8072f73:	48 89 c7             	mov    %rax,%rdi
 8072f76:	b8 00 00 00 00       	mov    $0x0,%eax
 8072f7b:	e8 e3 a8 ff ff       	callq  806d863 <put_elf_str>
 8072f80:	48 63 c0             	movslq %eax,%rax
 8072f83:	48 89 c1             	mov    %rax,%rcx
 8072f86:	49 89 ca             	mov    %rcx,%r10
 8072f89:	b8 01 00 00 00       	mov    $0x1,%eax
 8072f8e:	48 89 c6             	mov    %rax,%rsi
 8072f91:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8072f98:	48 89 c7             	mov    %rax,%rdi
 8072f9b:	4c 89 d2             	mov    %r10,%rdx
 8072f9e:	b8 00 00 00 00       	mov    $0x0,%eax
 8072fa3:	e8 58 de ff ff       	callq  8070e00 <put_dt>
 8072fa8:	e9 57 ff ff ff       	jmpq   8072f04 <elf_output_file+0x1345>
 8072fad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072fb1:	48 b9 f0 00 00 00 00 	movabs $0xf0,%rcx
 8072fb8:	00 00 00 
 8072fbb:	48 01 c8             	add    %rcx,%rax
 8072fbe:	48 8b 08             	mov    (%rax),%rcx
 8072fc1:	85 c9                	test   %ecx,%ecx
 8072fc3:	0f 84 53 00 00 00    	je     807301c <elf_output_file+0x145d>
 8072fc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8072fcd:	48 b9 f0 00 00 00 00 	movabs $0xf0,%rcx
 8072fd4:	00 00 00 
 8072fd7:	48 01 c8             	add    %rcx,%rax
 8072fda:	48 8b 08             	mov    (%rax),%rcx
 8072fdd:	48 89 ce             	mov    %rcx,%rsi
 8072fe0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 8072fe7:	48 89 c7             	mov    %rax,%rdi
 8072fea:	b8 00 00 00 00       	mov    $0x0,%eax
 8072fef:	e8 6f a8 ff ff       	callq  806d863 <put_elf_str>
 8072ff4:	48 63 c0             	movslq %eax,%rax
 8072ff7:	48 89 c1             	mov    %rax,%rcx
 8072ffa:	49 89 ca             	mov    %rcx,%r10
 8072ffd:	b8 0f 00 00 00       	mov    $0xf,%eax
 8073002:	48 89 c6             	mov    %rax,%rsi
 8073005:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 807300c:	48 89 c7             	mov    %rax,%rdi
 807300f:	4c 89 d2             	mov    %r10,%rdx
 8073012:	b8 00 00 00 00       	mov    $0x0,%eax
 8073017:	e8 e4 dd ff ff       	callq  8070e00 <put_dt>
 807301c:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8073022:	83 f8 02             	cmp    $0x2,%eax
 8073025:	0f 85 9b 00 00 00    	jne    80730c6 <elf_output_file+0x1507>
 807302b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807302f:	48 b9 e8 00 00 00 00 	movabs $0xe8,%rcx
 8073036:	00 00 00 
 8073039:	48 01 c8             	add    %rcx,%rax
 807303c:	48 8b 08             	mov    (%rax),%rcx
 807303f:	85 c9                	test   %ecx,%ecx
 8073041:	0f 84 53 00 00 00    	je     807309a <elf_output_file+0x14db>
 8073047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807304b:	48 b9 e8 00 00 00 00 	movabs $0xe8,%rcx
 8073052:	00 00 00 
 8073055:	48 01 c8             	add    %rcx,%rax
 8073058:	48 8b 08             	mov    (%rax),%rcx
 807305b:	48 89 ce             	mov    %rcx,%rsi
 807305e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 8073065:	48 89 c7             	mov    %rax,%rdi
 8073068:	b8 00 00 00 00       	mov    $0x0,%eax
 807306d:	e8 f1 a7 ff ff       	callq  806d863 <put_elf_str>
 8073072:	48 63 c0             	movslq %eax,%rax
 8073075:	48 89 c1             	mov    %rax,%rcx
 8073078:	49 89 ca             	mov    %rcx,%r10
 807307b:	b8 0e 00 00 00       	mov    $0xe,%eax
 8073080:	48 89 c6             	mov    %rax,%rsi
 8073083:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 807308a:	48 89 c7             	mov    %rax,%rdi
 807308d:	4c 89 d2             	mov    %r10,%rdx
 8073090:	b8 00 00 00 00       	mov    $0x0,%eax
 8073095:	e8 66 dd ff ff       	callq  8070e00 <put_dt>
 807309a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80730a1:	00 00 00 
 80730a4:	49 89 c2             	mov    %rax,%r10
 80730a7:	b8 16 00 00 00       	mov    $0x16,%eax
 80730ac:	48 89 c6             	mov    %rax,%rsi
 80730af:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80730b6:	48 89 c7             	mov    %rax,%rdi
 80730b9:	4c 89 d2             	mov    %r10,%rdx
 80730bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80730c1:	e8 3a dd ff ff       	callq  8070e00 <put_dt>
 80730c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80730ca:	48 b9 fc 00 00 00 00 	movabs $0xfc,%rcx
 80730d1:	00 00 00 
 80730d4:	48 01 c8             	add    %rcx,%rax
 80730d7:	8b 08                	mov    (%rax),%ecx
 80730d9:	85 c9                	test   %ecx,%ecx
 80730db:	0f 84 2c 00 00 00    	je     807310d <elf_output_file+0x154e>
 80730e1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80730e8:	00 00 00 
 80730eb:	49 89 c2             	mov    %rax,%r10
 80730ee:	b8 10 00 00 00       	mov    $0x10,%eax
 80730f3:	48 89 c6             	mov    %rax,%rsi
 80730f6:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80730fd:	48 89 c7             	mov    %rax,%rdi
 8073100:	4c 89 d2             	mov    %r10,%rdx
 8073103:	b8 00 00 00 00       	mov    $0x0,%eax
 8073108:	e8 f3 dc ff ff       	callq  8070e00 <put_dt>
 807310d:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8073114:	48 8b 08             	mov    (%rax),%rcx
 8073117:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
 807311e:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8073125:	48 8b 08             	mov    (%rax),%rcx
 8073128:	48 ba 90 00 00 00 00 	movabs $0x90,%rdx
 807312f:	00 00 00 
 8073132:	48 01 d1             	add    %rdx,%rcx
 8073135:	48 89 ca             	mov    %rcx,%rdx
 8073138:	48 89 10             	mov    %rdx,(%rax)
 807313b:	e9 11 00 00 00       	jmpq   8073151 <elf_output_file+0x1592>
 8073140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073144:	48 89 c7             	mov    %rax,%rdi
 8073147:	b8 00 00 00 00       	mov    $0x0,%eax
 807314c:	e8 a0 d7 ff ff       	callq  80708f1 <build_got_entries>
 8073151:	b8 40 00 00 00       	mov    $0x40,%eax
 8073156:	49 89 c2             	mov    %rax,%r10
 8073159:	b8 00 00 00 00       	mov    $0x0,%eax
 807315e:	48 89 c6             	mov    %rax,%rsi
 8073161:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 8073165:	48 89 c7             	mov    %rax,%rdi
 8073168:	4c 89 d2             	mov    %r10,%rdx
 807316b:	b8 00 00 00 00       	mov    $0x0,%eax
 8073170:	e8 3b 3d 01 00       	callq  8086eb0 <memset>
 8073175:	b8 00 00 00 00       	mov    $0x0,%eax
 807317a:	49 89 c3             	mov    %rax,%r11
 807317d:	b8 03 00 00 00       	mov    $0x3,%eax
 8073182:	49 89 c2             	mov    %rax,%r10
 8073185:	48 8d 05 af 94 01 00 	lea    0x194af(%rip),%rax        # 808c63b <L.142>
 807318c:	48 89 c6             	mov    %rax,%rsi
 807318f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073193:	48 89 c7             	mov    %rax,%rdi
 8073196:	4c 89 d2             	mov    %r10,%rdx
 8073199:	4c 89 d9             	mov    %r11,%rcx
 807319c:	b8 00 00 00 00       	mov    $0x0,%eax
 80731a1:	e8 52 93 fd ff       	callq  804c4f8 <new_section>
 80731a6:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 80731ad:	48 8d 05 91 94 01 00 	lea    0x19491(%rip),%rax        # 808c645 <L.143>
 80731b4:	48 89 c6             	mov    %rax,%rsi
 80731b7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 80731be:	48 89 c7             	mov    %rax,%rdi
 80731c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80731c6:	e8 98 a6 ff ff       	callq  806d863 <put_elf_str>
 80731cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80731cf:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 80731d6:	00 00 00 
 80731d9:	48 01 c8             	add    %rcx,%rax
 80731dc:	8b 08                	mov    (%rax),%ecx
 80731de:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
 80731e1:	8b 45 8c             	mov    -0x74(%rbp),%eax
 80731e4:	c1 e0 02             	shl    $0x2,%eax
 80731e7:	48 89 c1             	mov    %rax,%rcx
 80731ea:	48 89 cf             	mov    %rcx,%rdi
 80731ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80731f2:	e8 61 8d fd ff       	callq  804bf58 <tcc_malloc>
 80731f7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 80731fb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80731ff:	b9 00 00 00 00       	mov    $0x0,%ecx
 8073204:	89 08                	mov    %ecx,(%rax)
 8073206:	b8 01 00 00 00       	mov    $0x1,%eax
 807320b:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 8073211:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8073217:	e9 05 00 00 00       	jmpq   8073221 <elf_output_file+0x1662>
 807321c:	e9 09 00 00 00       	jmpq   807322a <elf_output_file+0x166b>
 8073221:	83 f8 03             	cmp    $0x3,%eax
 8073224:	0f 85 12 00 00 00    	jne    807323c <elf_output_file+0x167d>
 807322a:	b8 00 00 00 00       	mov    $0x0,%eax
 807322f:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8073232:	e9 63 00 00 00       	jmpq   807329a <elf_output_file+0x16db>
 8073237:	e9 09 00 00 00       	jmpq   8073245 <elf_output_file+0x1686>
 807323c:	83 f8 01             	cmp    $0x1,%eax
 807323f:	0f 85 3f 00 00 00    	jne    8073284 <elf_output_file+0x16c5>
 8073245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073249:	48 b9 e4 00 00 00 00 	movabs $0xe4,%rcx
 8073250:	00 00 00 
 8073253:	48 01 c8             	add    %rcx,%rax
 8073256:	8b 08                	mov    (%rax),%ecx
 8073258:	85 c9                	test   %ecx,%ecx
 807325a:	0f 84 05 00 00 00    	je     8073265 <elf_output_file+0x16a6>
 8073260:	e9 0d 00 00 00       	jmpq   8073272 <elf_output_file+0x16b3>
 8073265:	b8 04 00 00 00       	mov    $0x4,%eax
 807326a:	89 45 84             	mov    %eax,-0x7c(%rbp)
 807326d:	e9 08 00 00 00       	jmpq   807327a <elf_output_file+0x16bb>
 8073272:	b8 02 00 00 00       	mov    $0x2,%eax
 8073277:	89 45 84             	mov    %eax,-0x7c(%rbp)
 807327a:	e9 1b 00 00 00       	jmpq   807329a <elf_output_file+0x16db>
 807327f:	e9 09 00 00 00       	jmpq   807328d <elf_output_file+0x16ce>
 8073284:	83 f8 02             	cmp    $0x2,%eax
 8073287:	0f 85 8f ff ff ff    	jne    807321c <elf_output_file+0x165d>
 807328d:	b8 03 00 00 00       	mov    $0x3,%eax
 8073292:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8073295:	e9 00 00 00 00       	jmpq   807329a <elf_output_file+0x16db>
 807329a:	b8 01 00 00 00       	mov    $0x1,%eax
 807329f:	89 45 88             	mov    %eax,-0x78(%rbp)
 80732a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80732a6:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 80732ad:	00 00 00 
 80732b0:	48 01 c8             	add    %rcx,%rax
 80732b3:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 80732b6:	8b 10                	mov    (%rax),%edx
 80732b8:	39 d1                	cmp    %edx,%ecx
 80732ba:	0f 8d 36 02 00 00    	jge    80734f6 <elf_output_file+0x1937>
 80732c0:	e9 0e 00 00 00       	jmpq   80732d3 <elf_output_file+0x1714>
 80732c5:	8b 45 88             	mov    -0x78(%rbp),%eax
 80732c8:	48 89 c1             	mov    %rax,%rcx
 80732cb:	83 c0 01             	add    $0x1,%eax
 80732ce:	89 45 88             	mov    %eax,-0x78(%rbp)
 80732d1:	eb cf                	jmp    80732a2 <elf_output_file+0x16e3>
 80732d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80732d7:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 80732de:	00 00 00 
 80732e1:	48 01 c8             	add    %rcx,%rax
 80732e4:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 80732e7:	48 63 c9             	movslq %ecx,%rcx
 80732ea:	48 89 ca             	mov    %rcx,%rdx
 80732ed:	48 c1 e2 03          	shl    $0x3,%rdx
 80732f1:	48 8b 08             	mov    (%rax),%rcx
 80732f4:	48 89 d0             	mov    %rdx,%rax
 80732f7:	48 01 c1             	add    %rax,%rcx
 80732fa:	48 8b 01             	mov    (%rcx),%rax
 80732fd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8073304:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807330b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8073312:	00 00 00 
 8073315:	48 01 c8             	add    %rcx,%rax
 8073318:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 807331f:	48 ba 78 00 00 00 00 	movabs $0x78,%rdx
 8073326:	00 00 00 
 8073329:	48 01 d1             	add    %rdx,%rcx
 807332c:	48 89 ce             	mov    %rcx,%rsi
 807332f:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
 8073336:	48 89 cf             	mov    %rcx,%rdi
 8073339:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
 8073340:	b8 00 00 00 00       	mov    $0x0,%eax
 8073345:	e8 19 a5 ff ff       	callq  806d863 <put_elf_str>
 807334a:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
 8073351:	89 01                	mov    %eax,(%rcx)
 8073353:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8073359:	83 f8 02             	cmp    $0x2,%eax
 807335c:	0f 85 fd 00 00 00    	jne    807345f <elf_output_file+0x18a0>
 8073362:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073369:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073370:	00 00 00 
 8073373:	48 01 c8             	add    %rcx,%rax
 8073376:	8b 08                	mov    (%rax),%ecx
 8073378:	83 f9 04             	cmp    $0x4,%ecx
 807337b:	0f 85 de 00 00 00    	jne    807345f <elf_output_file+0x18a0>
 8073381:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073388:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 807338f:	00 00 00 
 8073392:	48 01 c8             	add    %rcx,%rax
 8073395:	8b 08                	mov    (%rax),%ecx
 8073397:	83 e1 02             	and    $0x2,%ecx
 807339a:	85 c9                	test   %ecx,%ecx
 807339c:	0f 84 05 00 00 00    	je     80733a7 <elf_output_file+0x17e8>
 80733a2:	e9 b8 00 00 00       	jmpq   807345f <elf_output_file+0x18a0>
 80733a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80733ab:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 80733b2:	00 00 00 
 80733b5:	48 01 c8             	add    %rcx,%rax
 80733b8:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80733bf:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 80733c6:	00 00 00 
 80733c9:	48 01 d1             	add    %rdx,%rcx
 80733cc:	8b 11                	mov    (%rcx),%edx
 80733ce:	48 63 d2             	movslq %edx,%rdx
 80733d1:	48 89 d1             	mov    %rdx,%rcx
 80733d4:	48 c1 e1 03          	shl    $0x3,%rcx
 80733d8:	48 8b 10             	mov    (%rax),%rdx
 80733db:	48 89 c8             	mov    %rcx,%rax
 80733de:	48 01 c2             	add    %rax,%rdx
 80733e1:	48 8b 02             	mov    (%rdx),%rax
 80733e4:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 80733eb:	00 00 00 
 80733ee:	48 01 c8             	add    %rcx,%rax
 80733f1:	8b 08                	mov    (%rax),%ecx
 80733f3:	83 e1 02             	and    $0x2,%ecx
 80733f6:	85 c9                	test   %ecx,%ecx
 80733f8:	0f 84 20 00 00 00    	je     807341e <elf_output_file+0x185f>
 80733fe:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073405:	48 89 c6             	mov    %rax,%rsi
 8073408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807340c:	48 89 c7             	mov    %rax,%rdi
 807340f:	b8 00 00 00 00       	mov    $0x0,%eax
 8073414:	e8 f5 c9 ff ff       	callq  806fe0e <prepare_dynamic_rel>
 8073419:	e9 3c 00 00 00       	jmpq   807345a <elf_output_file+0x189b>
 807341e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073422:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 8073429:	00 00 00 
 807342c:	48 01 c8             	add    %rcx,%rax
 807342f:	8b 08                	mov    (%rax),%ecx
 8073431:	85 c9                	test   %ecx,%ecx
 8073433:	0f 84 21 00 00 00    	je     807345a <elf_output_file+0x189b>
 8073439:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073440:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8073447:	00 00 00 
 807344a:	48 01 c8             	add    %rcx,%rax
 807344d:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8073454:	48 8b 11             	mov    (%rcx),%rdx
 8073457:	48 89 10             	mov    %rdx,(%rax)
 807345a:	e9 92 00 00 00       	jmpq   80734f1 <elf_output_file+0x1932>
 807345f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073463:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 807346a:	00 00 00 
 807346d:	48 01 c8             	add    %rcx,%rax
 8073470:	8b 08                	mov    (%rax),%ecx
 8073472:	85 c9                	test   %ecx,%ecx
 8073474:	0f 85 56 00 00 00    	jne    80734d0 <elf_output_file+0x1911>
 807347a:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8073480:	83 f8 03             	cmp    $0x3,%eax
 8073483:	0f 84 47 00 00 00    	je     80734d0 <elf_output_file+0x1911>
 8073489:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073490:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8073497:	00 00 00 
 807349a:	48 01 c8             	add    %rcx,%rax
 807349d:	8b 08                	mov    (%rax),%ecx
 807349f:	83 e1 02             	and    $0x2,%ecx
 80734a2:	85 c9                	test   %ecx,%ecx
 80734a4:	0f 85 26 00 00 00    	jne    80734d0 <elf_output_file+0x1911>
 80734aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80734ae:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 80734b5:	00 00 00 
 80734b8:	48 01 c8             	add    %rcx,%rax
 80734bb:	8b 08                	mov    (%rax),%ecx
 80734bd:	83 e9 01             	sub    $0x1,%ecx
 80734c0:	8b 45 88             	mov    -0x78(%rbp),%eax
 80734c3:	39 c8                	cmp    %ecx,%eax
 80734c5:	0f 84 05 00 00 00    	je     80734d0 <elf_output_file+0x1911>
 80734cb:	e9 21 00 00 00       	jmpq   80734f1 <elf_output_file+0x1932>
 80734d0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80734d7:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80734de:	00 00 00 
 80734e1:	48 01 c8             	add    %rcx,%rax
 80734e4:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80734eb:	48 8b 11             	mov    (%rcx),%rdx
 80734ee:	48 89 10             	mov    %rdx,(%rax)
 80734f1:	e9 cf fd ff ff       	jmpq   80732c5 <elf_output_file+0x1706>
 80734f6:	8b 45 84             	mov    -0x7c(%rbp),%eax
 80734f9:	b9 38 00 00 00       	mov    $0x38,%ecx
 80734fe:	48 0f af c1          	imul   %rcx,%rax
 8073502:	48 89 c1             	mov    %rax,%rcx
 8073505:	48 89 cf             	mov    %rcx,%rdi
 8073508:	b8 00 00 00 00       	mov    $0x0,%eax
 807350d:	e8 ba 8a fd ff       	callq  804bfcc <tcc_mallocz>
 8073512:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 8073519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807351d:	48 b9 28 01 00 00 00 	movabs $0x128,%rcx
 8073524:	00 00 00 
 8073527:	48 01 c8             	add    %rcx,%rax
 807352a:	8b 08                	mov    (%rax),%ecx
 807352c:	83 f9 00             	cmp    $0x0,%ecx
 807352f:	0f 85 17 00 00 00    	jne    807354c <elf_output_file+0x198d>
 8073535:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8073538:	b9 38 00 00 00       	mov    $0x38,%ecx
 807353d:	48 0f af c1          	imul   %rcx,%rax
 8073541:	83 c0 40             	add    $0x40,%eax
 8073544:	89 45 80             	mov    %eax,-0x80(%rbp)
 8073547:	e9 08 00 00 00       	jmpq   8073554 <elf_output_file+0x1995>
 807354c:	b8 00 00 00 00       	mov    $0x0,%eax
 8073551:	89 45 80             	mov    %eax,-0x80(%rbp)
 8073554:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8073557:	83 f8 00             	cmp    $0x0,%eax
 807355a:	0f 8e 8d 13 00 00    	jle    80748ed <elf_output_file+0x2d2e>
 8073560:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073564:	48 b9 10 01 00 00 00 	movabs $0x110,%rcx
 807356b:	00 00 00 
 807356e:	48 01 c8             	add    %rcx,%rax
 8073571:	8b 08                	mov    (%rax),%ecx
 8073573:	85 c9                	test   %ecx,%ecx
 8073575:	0f 84 df 00 00 00    	je     807365a <elf_output_file+0x1a9b>
 807357b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807357f:	48 b9 08 01 00 00 00 	movabs $0x108,%rcx
 8073586:	00 00 00 
 8073589:	48 01 c8             	add    %rcx,%rax
 807358c:	48 8b 08             	mov    (%rax),%rcx
 807358f:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 8073596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807359a:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 80735a1:	00 00 00 
 80735a4:	48 01 c8             	add    %rcx,%rax
 80735a7:	48 8b 08             	mov    (%rax),%rcx
 80735aa:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 80735b1:	00 00 00 
 80735b4:	48 29 c1             	sub    %rax,%rcx
 80735b7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 80735be:	48 89 ca             	mov    %rcx,%rdx
 80735c1:	48 21 d0             	and    %rdx,%rax
 80735c4:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%rbp)
 80735ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80735ce:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 80735d5:	00 00 00 
 80735d8:	48 01 c8             	add    %rcx,%rax
 80735db:	48 8b 08             	mov    (%rax),%rcx
 80735de:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 80735e5:	00 00 00 
 80735e8:	48 29 c1             	sub    %rax,%rcx
 80735eb:	8b 45 80             	mov    -0x80(%rbp),%eax
 80735ee:	48 63 c0             	movslq %eax,%rax
 80735f1:	48 89 c2             	mov    %rax,%rdx
 80735f4:	48 89 c8             	mov    %rcx,%rax
 80735f7:	48 21 c2             	and    %rax,%rdx
 80735fa:	89 95 80 fd ff ff    	mov    %edx,-0x280(%rbp)
 8073600:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
 8073606:	8b 8d 80 fd ff ff    	mov    -0x280(%rbp),%ecx
 807360c:	39 c8                	cmp    %ecx,%eax
 807360e:	0f 8d 29 00 00 00    	jge    807363d <elf_output_file+0x1a7e>
 8073614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073618:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 807361f:	00 00 00 
 8073622:	48 01 c8             	add    %rcx,%rax
 8073625:	8b 8d 84 fd ff ff    	mov    -0x27c(%rbp),%ecx
 807362b:	48 63 c9             	movslq %ecx,%rcx
 807362e:	48 89 ca             	mov    %rcx,%rdx
 8073631:	48 8b 08             	mov    (%rax),%rcx
 8073634:	48 01 ca             	add    %rcx,%rdx
 8073637:	89 95 84 fd ff ff    	mov    %edx,-0x27c(%rbp)
 807363d:	8b 85 84 fd ff ff    	mov    -0x27c(%rbp),%eax
 8073643:	8b 8d 80 fd ff ff    	mov    -0x280(%rbp),%ecx
 8073649:	48 29 c8             	sub    %rcx,%rax
 807364c:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 807364f:	48 01 c1             	add    %rax,%rcx
 8073652:	89 4d 80             	mov    %ecx,-0x80(%rbp)
 8073655:	e9 7d 00 00 00       	jmpq   80736d7 <elf_output_file+0x1b18>
 807365a:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8073660:	83 f8 02             	cmp    $0x2,%eax
 8073663:	0f 85 16 00 00 00    	jne    807367f <elf_output_file+0x1ac0>
 8073669:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8073670:	00 00 00 
 8073673:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 807367a:	e9 11 00 00 00       	jmpq   8073690 <elf_output_file+0x1ad1>
 807367f:	48 b8 00 80 04 08 00 	movabs $0x8048000,%rax
 8073686:	00 00 00 
 8073689:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8073690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073694:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 807369b:	00 00 00 
 807369e:	48 01 c8             	add    %rcx,%rax
 80736a1:	48 8b 08             	mov    (%rax),%rcx
 80736a4:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 80736ab:	00 00 00 
 80736ae:	48 29 c1             	sub    %rax,%rcx
 80736b1:	8b 45 80             	mov    -0x80(%rbp),%eax
 80736b4:	48 63 c0             	movslq %eax,%rax
 80736b7:	48 89 c2             	mov    %rax,%rdx
 80736ba:	48 89 c8             	mov    %rcx,%rax
 80736bd:	48 21 c2             	and    %rax,%rdx
 80736c0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 80736c7:	48 89 d1             	mov    %rdx,%rcx
 80736ca:	48 01 c8             	add    %rcx,%rax
 80736cd:	48 89 c1             	mov    %rax,%rcx
 80736d0:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 80736d7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80736de:	00 00 00 
 80736e1:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
 80736e8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80736ef:	00 00 00 
 80736f2:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 80736f9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8073700:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8073707:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 807370e:	85 c0                	test   %eax,%eax
 8073710:	0f 84 1b 00 00 00    	je     8073731 <elf_output_file+0x1b72>
 8073716:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 807371d:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8073724:	00 00 00 
 8073727:	48 01 c8             	add    %rcx,%rax
 807372a:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8073731:	b8 00 00 00 00       	mov    $0x0,%eax
 8073736:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 807373c:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 8073742:	83 f8 02             	cmp    $0x2,%eax
 8073745:	0f 8d 7d 07 00 00    	jge    8073ec8 <elf_output_file+0x2309>
 807374b:	e9 14 00 00 00       	jmpq   8073764 <elf_output_file+0x1ba5>
 8073750:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 8073756:	48 89 c1             	mov    %rax,%rcx
 8073759:	83 c0 01             	add    $0x1,%eax
 807375c:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 8073762:	eb d8                	jmp    807373c <elf_output_file+0x1b7d>
 8073764:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 807376b:	b9 01 00 00 00       	mov    $0x1,%ecx
 8073770:	89 08                	mov    %ecx,(%rax)
 8073772:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 8073778:	83 f8 00             	cmp    $0x0,%eax
 807377b:	0f 85 20 00 00 00    	jne    80737a1 <elf_output_file+0x1be2>
 8073781:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073788:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807378f:	00 00 00 
 8073792:	48 01 c8             	add    %rcx,%rax
 8073795:	b9 05 00 00 00       	mov    $0x5,%ecx
 807379a:	89 08                	mov    %ecx,(%rax)
 807379c:	e9 1b 00 00 00       	jmpq   80737bc <elf_output_file+0x1bfd>
 80737a1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 80737a8:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80737af:	00 00 00 
 80737b2:	48 01 c8             	add    %rcx,%rax
 80737b5:	b9 06 00 00 00       	mov    $0x6,%ecx
 80737ba:	89 08                	mov    %ecx,(%rax)
 80737bc:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 80737c3:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80737ca:	00 00 00 
 80737cd:	48 01 c8             	add    %rcx,%rax
 80737d0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80737d4:	48 ba a0 0c 00 00 00 	movabs $0xca0,%rdx
 80737db:	00 00 00 
 80737de:	48 01 d1             	add    %rdx,%rcx
 80737e1:	48 8b 11             	mov    (%rcx),%rdx
 80737e4:	48 89 10             	mov    %rdx,(%rax)
 80737e7:	b8 00 00 00 00       	mov    $0x0,%eax
 80737ec:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
 80737f2:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 80737f8:	83 f8 05             	cmp    $0x5,%eax
 80737fb:	0f 8d 95 04 00 00    	jge    8073c96 <elf_output_file+0x20d7>
 8073801:	e9 14 00 00 00       	jmpq   807381a <elf_output_file+0x1c5b>
 8073806:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 807380c:	48 89 c1             	mov    %rax,%rcx
 807380f:	83 c0 01             	add    $0x1,%eax
 8073812:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
 8073818:	eb d8                	jmp    80737f2 <elf_output_file+0x1c33>
 807381a:	b8 01 00 00 00       	mov    $0x1,%eax
 807381f:	89 45 88             	mov    %eax,-0x78(%rbp)
 8073822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073826:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 807382d:	00 00 00 
 8073830:	48 01 c8             	add    %rcx,%rax
 8073833:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8073836:	8b 10                	mov    (%rax),%edx
 8073838:	39 d1                	cmp    %edx,%ecx
 807383a:	0f 8d 51 04 00 00    	jge    8073c91 <elf_output_file+0x20d2>
 8073840:	e9 0e 00 00 00       	jmpq   8073853 <elf_output_file+0x1c94>
 8073845:	8b 45 88             	mov    -0x78(%rbp),%eax
 8073848:	48 89 c1             	mov    %rax,%rcx
 807384b:	83 c0 01             	add    $0x1,%eax
 807384e:	89 45 88             	mov    %eax,-0x78(%rbp)
 8073851:	eb cf                	jmp    8073822 <elf_output_file+0x1c63>
 8073853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073857:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 807385e:	00 00 00 
 8073861:	48 01 c8             	add    %rcx,%rax
 8073864:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8073867:	48 63 c9             	movslq %ecx,%rcx
 807386a:	48 89 ca             	mov    %rcx,%rdx
 807386d:	48 c1 e2 03          	shl    $0x3,%rdx
 8073871:	48 8b 08             	mov    (%rax),%rcx
 8073874:	48 89 d0             	mov    %rdx,%rax
 8073877:	48 01 c1             	add    %rax,%rcx
 807387a:	48 8b 01             	mov    (%rcx),%rax
 807387d:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8073884:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 807388a:	83 f8 00             	cmp    $0x0,%eax
 807388d:	0f 85 2c 00 00 00    	jne    80738bf <elf_output_file+0x1d00>
 8073893:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807389a:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 80738a1:	00 00 00 
 80738a4:	48 01 c8             	add    %rcx,%rax
 80738a7:	8b 08                	mov    (%rax),%ecx
 80738a9:	83 e1 03             	and    $0x3,%ecx
 80738ac:	83 f9 02             	cmp    $0x2,%ecx
 80738af:	0f 84 05 00 00 00    	je     80738ba <elf_output_file+0x1cfb>
 80738b5:	e9 8b ff ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 80738ba:	e9 27 00 00 00       	jmpq   80738e6 <elf_output_file+0x1d27>
 80738bf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80738c6:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 80738cd:	00 00 00 
 80738d0:	48 01 c8             	add    %rcx,%rax
 80738d3:	8b 08                	mov    (%rax),%ecx
 80738d5:	83 e1 03             	and    $0x3,%ecx
 80738d8:	83 f9 03             	cmp    $0x3,%ecx
 80738db:	0f 84 05 00 00 00    	je     80738e6 <elf_output_file+0x1d27>
 80738e1:	e9 5f ff ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 80738e6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80738ed:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 80738f4:	48 89 c2             	mov    %rax,%rdx
 80738f7:	48 89 c8             	mov    %rcx,%rax
 80738fa:	48 39 c2             	cmp    %rax,%rdx
 80738fd:	0f 85 19 00 00 00    	jne    807391c <elf_output_file+0x1d5d>
 8073903:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 8073909:	83 f8 00             	cmp    $0x0,%eax
 807390c:	0f 84 05 00 00 00    	je     8073917 <elf_output_file+0x1d58>
 8073912:	e9 2e ff ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 8073917:	e9 ff 00 00 00       	jmpq   8073a1b <elf_output_file+0x1e5c>
 807391c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073923:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807392a:	00 00 00 
 807392d:	48 01 c8             	add    %rcx,%rax
 8073930:	8b 08                	mov    (%rax),%ecx
 8073932:	83 f9 0b             	cmp    $0xb,%ecx
 8073935:	0f 84 43 00 00 00    	je     807397e <elf_output_file+0x1dbf>
 807393b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073942:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073949:	00 00 00 
 807394c:	48 01 c8             	add    %rcx,%rax
 807394f:	8b 08                	mov    (%rax),%ecx
 8073951:	83 f9 03             	cmp    $0x3,%ecx
 8073954:	0f 84 24 00 00 00    	je     807397e <elf_output_file+0x1dbf>
 807395a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073961:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073968:	00 00 00 
 807396b:	48 01 c8             	add    %rcx,%rax
 807396e:	8b 08                	mov    (%rax),%ecx
 8073970:	83 f9 05             	cmp    $0x5,%ecx
 8073973:	0f 84 05 00 00 00    	je     807397e <elf_output_file+0x1dbf>
 8073979:	e9 19 00 00 00       	jmpq   8073997 <elf_output_file+0x1dd8>
 807397e:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 8073984:	83 f8 01             	cmp    $0x1,%eax
 8073987:	0f 84 05 00 00 00    	je     8073992 <elf_output_file+0x1dd3>
 807398d:	e9 b3 fe ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 8073992:	e9 84 00 00 00       	jmpq   8073a1b <elf_output_file+0x1e5c>
 8073997:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807399e:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80739a5:	00 00 00 
 80739a8:	48 01 c8             	add    %rcx,%rax
 80739ab:	8b 08                	mov    (%rax),%ecx
 80739ad:	83 f9 04             	cmp    $0x4,%ecx
 80739b0:	0f 85 19 00 00 00    	jne    80739cf <elf_output_file+0x1e10>
 80739b6:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 80739bc:	83 f8 02             	cmp    $0x2,%eax
 80739bf:	0f 84 05 00 00 00    	je     80739ca <elf_output_file+0x1e0b>
 80739c5:	e9 7b fe ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 80739ca:	e9 4c 00 00 00       	jmpq   8073a1b <elf_output_file+0x1e5c>
 80739cf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80739d6:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80739dd:	00 00 00 
 80739e0:	48 01 c8             	add    %rcx,%rax
 80739e3:	8b 08                	mov    (%rax),%ecx
 80739e5:	83 f9 08             	cmp    $0x8,%ecx
 80739e8:	0f 85 19 00 00 00    	jne    8073a07 <elf_output_file+0x1e48>
 80739ee:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 80739f4:	83 f8 04             	cmp    $0x4,%eax
 80739f7:	0f 84 05 00 00 00    	je     8073a02 <elf_output_file+0x1e43>
 80739fd:	e9 43 fe ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 8073a02:	e9 14 00 00 00       	jmpq   8073a1b <elf_output_file+0x1e5c>
 8073a07:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 8073a0d:	83 f8 03             	cmp    $0x3,%eax
 8073a10:	0f 84 05 00 00 00    	je     8073a1b <elf_output_file+0x1e5c>
 8073a16:	e9 2a fe ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 8073a1b:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 8073a21:	48 89 c1             	mov    %rax,%rcx
 8073a24:	83 c0 01             	add    $0x1,%eax
 8073a27:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 8073a2d:	48 63 c9             	movslq %ecx,%rcx
 8073a30:	48 89 c8             	mov    %rcx,%rax
 8073a33:	48 c1 e0 02          	shl    $0x2,%rax
 8073a37:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 8073a3b:	48 89 c2             	mov    %rax,%rdx
 8073a3e:	48 01 d1             	add    %rdx,%rcx
 8073a41:	8b 45 88             	mov    -0x78(%rbp),%eax
 8073a44:	89 01                	mov    %eax,(%rcx)
 8073a46:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8073a4d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 8073a54:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073a5b:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8073a62:	00 00 00 
 8073a65:	48 01 c8             	add    %rcx,%rax
 8073a68:	8b 08                	mov    (%rax),%ecx
 8073a6a:	48 63 c9             	movslq %ecx,%rcx
 8073a6d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8073a74:	48 89 ca             	mov    %rcx,%rdx
 8073a77:	48 01 d0             	add    %rdx,%rax
 8073a7a:	48 89 c1             	mov    %rax,%rcx
 8073a7d:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8073a84:	00 00 00 
 8073a87:	48 29 c1             	sub    %rax,%rcx
 8073a8a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073a91:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 8073a98:	00 00 00 
 8073a9b:	48 01 d0             	add    %rdx,%rax
 8073a9e:	8b 10                	mov    (%rax),%edx
 8073aa0:	83 ea 01             	sub    $0x1,%edx
 8073aa3:	83 f2 ff             	xor    $0xffffffff,%edx
 8073aa6:	48 63 d2             	movslq %edx,%rdx
 8073aa9:	48 89 c8             	mov    %rcx,%rax
 8073aac:	48 89 d1             	mov    %rdx,%rcx
 8073aaf:	48 21 c8             	and    %rcx,%rax
 8073ab2:	48 89 c1             	mov    %rax,%rcx
 8073ab5:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 8073abc:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8073ac3:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
 8073aca:	48 29 c8             	sub    %rcx,%rax
 8073acd:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8073ad0:	48 01 c1             	add    %rax,%rcx
 8073ad3:	89 4d 80             	mov    %ecx,-0x80(%rbp)
 8073ad6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073add:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 8073ae4:	00 00 00 
 8073ae7:	48 01 c8             	add    %rcx,%rax
 8073aea:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8073aed:	48 63 c9             	movslq %ecx,%rcx
 8073af0:	48 89 ca             	mov    %rcx,%rdx
 8073af3:	48 89 10             	mov    %rdx,(%rax)
 8073af6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073afd:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8073b04:	00 00 00 
 8073b07:	48 01 c8             	add    %rcx,%rax
 8073b0a:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8073b11:	48 89 08             	mov    %rcx,(%rax)
 8073b14:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073b1b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8073b22:	00 00 00 
 8073b25:	48 01 c8             	add    %rcx,%rax
 8073b28:	48 8b 08             	mov    (%rax),%rcx
 8073b2b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8073b32:	00 00 00 
 8073b35:	48 39 c1             	cmp    %rax,%rcx
 8073b38:	0f 85 6c 00 00 00    	jne    8073baa <elf_output_file+0x1feb>
 8073b3e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073b45:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8073b4c:	00 00 00 
 8073b4f:	48 01 c8             	add    %rcx,%rax
 8073b52:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8073b55:	48 63 c9             	movslq %ecx,%rcx
 8073b58:	48 89 ca             	mov    %rcx,%rdx
 8073b5b:	48 89 10             	mov    %rdx,(%rax)
 8073b5e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073b65:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8073b6c:	00 00 00 
 8073b6f:	48 01 c8             	add    %rcx,%rax
 8073b72:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8073b79:	48 89 08             	mov    %rcx,(%rax)
 8073b7c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073b83:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8073b8a:	00 00 00 
 8073b8d:	48 01 c8             	add    %rcx,%rax
 8073b90:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
 8073b97:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8073b9e:	00 00 00 
 8073ba1:	48 01 d1             	add    %rdx,%rcx
 8073ba4:	48 8b 11             	mov    (%rcx),%rdx
 8073ba7:	48 89 10             	mov    %rdx,(%rax)
 8073baa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073bb1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073bb8:	00 00 00 
 8073bbb:	48 01 c8             	add    %rcx,%rax
 8073bbe:	8b 08                	mov    (%rax),%ecx
 8073bc0:	83 f9 04             	cmp    $0x4,%ecx
 8073bc3:	0f 85 53 00 00 00    	jne    8073c1c <elf_output_file+0x205d>
 8073bc9:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
 8073bd0:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8073bd7:	00 00 00 
 8073bda:	48 39 c8             	cmp    %rcx,%rax
 8073bdd:	0f 85 0e 00 00 00    	jne    8073bf1 <elf_output_file+0x2032>
 8073be3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8073bea:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 8073bf1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073bf8:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8073bff:	00 00 00 
 8073c02:	48 01 c8             	add    %rcx,%rax
 8073c05:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
 8073c0c:	48 8b 10             	mov    (%rax),%rdx
 8073c0f:	48 01 d1             	add    %rdx,%rcx
 8073c12:	48 89 c8             	mov    %rcx,%rax
 8073c15:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
 8073c1c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073c23:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8073c2a:	00 00 00 
 8073c2d:	48 01 c8             	add    %rcx,%rax
 8073c30:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8073c37:	48 8b 10             	mov    (%rax),%rdx
 8073c3a:	48 01 d1             	add    %rdx,%rcx
 8073c3d:	48 89 c8             	mov    %rcx,%rax
 8073c40:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8073c47:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073c4e:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073c55:	00 00 00 
 8073c58:	48 01 c8             	add    %rcx,%rax
 8073c5b:	8b 08                	mov    (%rax),%ecx
 8073c5d:	83 f9 08             	cmp    $0x8,%ecx
 8073c60:	0f 84 26 00 00 00    	je     8073c8c <elf_output_file+0x20cd>
 8073c66:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8073c6d:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8073c74:	00 00 00 
 8073c77:	48 01 c8             	add    %rcx,%rax
 8073c7a:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8073c7d:	48 63 c9             	movslq %ecx,%rcx
 8073c80:	48 89 ca             	mov    %rcx,%rdx
 8073c83:	48 8b 08             	mov    (%rax),%rcx
 8073c86:	48 01 ca             	add    %rcx,%rdx
 8073c89:	89 55 80             	mov    %edx,-0x80(%rbp)
 8073c8c:	e9 b4 fb ff ff       	jmpq   8073845 <elf_output_file+0x1c86>
 8073c91:	e9 70 fb ff ff       	jmpq   8073806 <elf_output_file+0x1c47>
 8073c96:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073c9d:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073ca4:	00 00 00 
 8073ca7:	48 01 c8             	add    %rcx,%rax
 8073caa:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
 8073cb1:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8073cb8:	00 00 00 
 8073cbb:	48 01 d1             	add    %rdx,%rcx
 8073cbe:	8b 55 80             	mov    -0x80(%rbp),%edx
 8073cc1:	48 63 d2             	movslq %edx,%rdx
 8073cc4:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
 8073ccb:	48 89 d0             	mov    %rdx,%rax
 8073cce:	48 8b 11             	mov    (%rcx),%rdx
 8073cd1:	48 29 d0             	sub    %rdx,%rax
 8073cd4:	48 89 c1             	mov    %rax,%rcx
 8073cd7:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
 8073cde:	48 89 08             	mov    %rcx,(%rax)
 8073ce1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073ce8:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8073cef:	00 00 00 
 8073cf2:	48 01 c8             	add    %rcx,%rax
 8073cf5:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
 8073cfc:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8073d03:	00 00 00 
 8073d06:	48 01 d1             	add    %rdx,%rcx
 8073d09:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
 8073d10:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
 8073d17:	48 8b 01             	mov    (%rcx),%rax
 8073d1a:	48 29 c2             	sub    %rax,%rdx
 8073d1d:	48 89 d0             	mov    %rdx,%rax
 8073d20:	48 8b 8d 70 fd ff ff 	mov    -0x290(%rbp),%rcx
 8073d27:	48 89 01             	mov    %rax,(%rcx)
 8073d2a:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073d31:	48 89 c1             	mov    %rax,%rcx
 8073d34:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 8073d3b:	00 00 00 
 8073d3e:	48 01 d0             	add    %rdx,%rax
 8073d41:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8073d48:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 8073d4e:	83 f8 00             	cmp    $0x0,%eax
 8073d51:	0f 85 6c 01 00 00    	jne    8073ec3 <elf_output_file+0x2304>
 8073d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073d5b:	48 b9 28 01 00 00 00 	movabs $0x128,%rcx
 8073d62:	00 00 00 
 8073d65:	48 01 c8             	add    %rcx,%rax
 8073d68:	8b 08                	mov    (%rax),%ecx
 8073d6a:	83 f9 00             	cmp    $0x0,%ecx
 8073d6d:	0f 85 71 00 00 00    	jne    8073de4 <elf_output_file+0x2225>
 8073d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073d77:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 8073d7e:	00 00 00 
 8073d81:	48 01 c8             	add    %rcx,%rax
 8073d84:	48 8b 08             	mov    (%rax),%rcx
 8073d87:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8073d8e:	00 00 00 
 8073d91:	48 29 c1             	sub    %rax,%rcx
 8073d94:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8073d9b:	48 89 ca             	mov    %rcx,%rdx
 8073d9e:	48 21 d0             	and    %rdx,%rax
 8073da1:	48 89 c1             	mov    %rax,%rcx
 8073da4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8073dab:	00 00 00 
 8073dae:	48 39 c1             	cmp    %rax,%rcx
 8073db1:	0f 84 28 00 00 00    	je     8073ddf <elf_output_file+0x2220>
 8073db7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073dbb:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 8073dc2:	00 00 00 
 8073dc5:	48 01 c8             	add    %rcx,%rax
 8073dc8:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8073dcf:	48 8b 10             	mov    (%rax),%rdx
 8073dd2:	48 01 d1             	add    %rdx,%rcx
 8073dd5:	48 89 c8             	mov    %rcx,%rax
 8073dd8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8073ddf:	e9 df 00 00 00       	jmpq   8073ec3 <elf_output_file+0x2304>
 8073de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073de8:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 8073def:	00 00 00 
 8073df2:	48 01 c8             	add    %rcx,%rax
 8073df5:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8073dfc:	48 8b 10             	mov    (%rax),%rdx
 8073dff:	48 01 d1             	add    %rdx,%rcx
 8073e02:	48 89 c8             	mov    %rcx,%rax
 8073e05:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8073e0c:	00 00 00 
 8073e0f:	48 29 c8             	sub    %rcx,%rax
 8073e12:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8073e16:	48 ba a0 0c 00 00 00 	movabs $0xca0,%rdx
 8073e1d:	00 00 00 
 8073e20:	48 01 d1             	add    %rdx,%rcx
 8073e23:	48 8b 11             	mov    (%rcx),%rdx
 8073e26:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8073e2d:	00 00 00 
 8073e30:	48 29 ca             	sub    %rcx,%rdx
 8073e33:	48 89 d1             	mov    %rdx,%rcx
 8073e36:	48 ba ff ff ff ff ff 	movabs $0xffffffffffffffff,%rdx
 8073e3d:	ff ff ff 
 8073e40:	48 31 d1             	xor    %rdx,%rcx
 8073e43:	48 89 c2             	mov    %rax,%rdx
 8073e46:	48 89 c8             	mov    %rcx,%rax
 8073e49:	48 21 c2             	and    %rax,%rdx
 8073e4c:	48 89 d0             	mov    %rdx,%rax
 8073e4f:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8073e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8073e5a:	48 b9 a0 0c 00 00 00 	movabs $0xca0,%rcx
 8073e61:	00 00 00 
 8073e64:	48 01 c8             	add    %rcx,%rax
 8073e67:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8073e6a:	48 63 c9             	movslq %ecx,%rcx
 8073e6d:	48 89 ca             	mov    %rcx,%rdx
 8073e70:	48 8b 08             	mov    (%rax),%rcx
 8073e73:	48 01 ca             	add    %rcx,%rdx
 8073e76:	48 89 d0             	mov    %rdx,%rax
 8073e79:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8073e80:	00 00 00 
 8073e83:	48 29 c8             	sub    %rcx,%rax
 8073e86:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8073e8a:	48 ba a0 0c 00 00 00 	movabs $0xca0,%rdx
 8073e91:	00 00 00 
 8073e94:	48 01 d1             	add    %rdx,%rcx
 8073e97:	48 8b 11             	mov    (%rcx),%rdx
 8073e9a:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8073ea1:	00 00 00 
 8073ea4:	48 29 ca             	sub    %rcx,%rdx
 8073ea7:	48 89 d1             	mov    %rdx,%rcx
 8073eaa:	48 ba ff ff ff ff ff 	movabs $0xffffffffffffffff,%rdx
 8073eb1:	ff ff ff 
 8073eb4:	48 31 d1             	xor    %rdx,%rcx
 8073eb7:	48 89 c2             	mov    %rax,%rdx
 8073eba:	48 89 c8             	mov    %rcx,%rax
 8073ebd:	48 21 c2             	and    %rax,%rdx
 8073ec0:	89 55 80             	mov    %edx,-0x80(%rbp)
 8073ec3:	e9 88 f8 ff ff       	jmpq   8073750 <elf_output_file+0x1b91>
 8073ec8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 8073ecf:	85 c0                	test   %eax,%eax
 8073ed1:	0f 84 50 01 00 00    	je     8074027 <elf_output_file+0x2468>
 8073ed7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8073ede:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8073ee5:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073eec:	b9 03 00 00 00       	mov    $0x3,%ecx
 8073ef1:	89 08                	mov    %ecx,(%rax)
 8073ef3:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073efa:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8073f01:	00 00 00 
 8073f04:	48 01 c8             	add    %rcx,%rax
 8073f07:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 8073f0e:	48 ba 48 00 00 00 00 	movabs $0x48,%rdx
 8073f15:	00 00 00 
 8073f18:	48 01 d1             	add    %rdx,%rcx
 8073f1b:	48 8b 11             	mov    (%rcx),%rdx
 8073f1e:	48 89 10             	mov    %rdx,(%rax)
 8073f21:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073f28:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8073f2f:	00 00 00 
 8073f32:	48 01 c8             	add    %rcx,%rax
 8073f35:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 8073f3c:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 8073f43:	00 00 00 
 8073f46:	48 01 d1             	add    %rdx,%rcx
 8073f49:	48 8b 11             	mov    (%rcx),%rdx
 8073f4c:	48 89 10             	mov    %rdx,(%rax)
 8073f4f:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073f56:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8073f5d:	00 00 00 
 8073f60:	48 01 c8             	add    %rcx,%rax
 8073f63:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
 8073f6a:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 8073f71:	00 00 00 
 8073f74:	48 01 d1             	add    %rdx,%rcx
 8073f77:	48 8b 11             	mov    (%rcx),%rdx
 8073f7a:	48 89 10             	mov    %rdx,(%rax)
 8073f7d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073f84:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8073f8b:	00 00 00 
 8073f8e:	48 01 c8             	add    %rcx,%rax
 8073f91:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 8073f98:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 8073f9f:	00 00 00 
 8073fa2:	48 01 d1             	add    %rdx,%rcx
 8073fa5:	48 8b 11             	mov    (%rcx),%rdx
 8073fa8:	48 89 10             	mov    %rdx,(%rax)
 8073fab:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073fb2:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8073fb9:	00 00 00 
 8073fbc:	48 01 c8             	add    %rcx,%rax
 8073fbf:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 8073fc6:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 8073fcd:	00 00 00 
 8073fd0:	48 01 d1             	add    %rdx,%rcx
 8073fd3:	48 8b 11             	mov    (%rcx),%rdx
 8073fd6:	48 89 10             	mov    %rdx,(%rax)
 8073fd9:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073fe0:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8073fe7:	00 00 00 
 8073fea:	48 01 c8             	add    %rcx,%rax
 8073fed:	b9 04 00 00 00       	mov    $0x4,%ecx
 8073ff2:	89 08                	mov    %ecx,(%rax)
 8073ff4:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8073ffb:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8074002:	00 00 00 
 8074005:	48 01 c8             	add    %rcx,%rax
 8074008:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 807400f:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 8074016:	00 00 00 
 8074019:	48 01 d1             	add    %rdx,%rcx
 807401c:	8b 11                	mov    (%rcx),%edx
 807401e:	48 63 d2             	movslq %edx,%rdx
 8074021:	48 89 d1             	mov    %rdx,%rcx
 8074024:	48 89 08             	mov    %rcx,(%rax)
 8074027:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 807402e:	85 c0                	test   %eax,%eax
 8074030:	0f 84 98 08 00 00    	je     80748ce <elf_output_file+0x2d0f>
 8074036:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8074039:	83 e8 01             	sub    $0x1,%eax
 807403c:	48 63 c0             	movslq %eax,%rax
 807403f:	48 89 c1             	mov    %rax,%rcx
 8074042:	48 b8 38 00 00 00 00 	movabs $0x38,%rax
 8074049:	00 00 00 
 807404c:	48 0f af c8          	imul   %rax,%rcx
 8074050:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8074057:	48 89 ca             	mov    %rcx,%rdx
 807405a:	48 01 d0             	add    %rdx,%rax
 807405d:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8074064:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 807406b:	b9 02 00 00 00       	mov    $0x2,%ecx
 8074070:	89 08                	mov    %ecx,(%rax)
 8074072:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8074079:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8074080:	00 00 00 
 8074083:	48 01 c8             	add    %rcx,%rax
 8074086:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 807408d:	48 ba 48 00 00 00 00 	movabs $0x48,%rdx
 8074094:	00 00 00 
 8074097:	48 01 d1             	add    %rdx,%rcx
 807409a:	48 8b 11             	mov    (%rcx),%rdx
 807409d:	48 89 10             	mov    %rdx,(%rax)
 80740a0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 80740a7:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80740ae:	00 00 00 
 80740b1:	48 01 c8             	add    %rcx,%rax
 80740b4:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 80740bb:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 80740c2:	00 00 00 
 80740c5:	48 01 d1             	add    %rdx,%rcx
 80740c8:	48 8b 11             	mov    (%rcx),%rdx
 80740cb:	48 89 10             	mov    %rdx,(%rax)
 80740ce:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 80740d5:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80740dc:	00 00 00 
 80740df:	48 01 c8             	add    %rcx,%rax
 80740e2:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
 80740e9:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 80740f0:	00 00 00 
 80740f3:	48 01 d1             	add    %rdx,%rcx
 80740f6:	48 8b 11             	mov    (%rcx),%rdx
 80740f9:	48 89 10             	mov    %rdx,(%rax)
 80740fc:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8074103:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807410a:	00 00 00 
 807410d:	48 01 c8             	add    %rcx,%rax
 8074110:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 8074117:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 807411e:	00 00 00 
 8074121:	48 01 d1             	add    %rdx,%rcx
 8074124:	48 8b 11             	mov    (%rcx),%rdx
 8074127:	48 89 10             	mov    %rdx,(%rax)
 807412a:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8074131:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8074138:	00 00 00 
 807413b:	48 01 c8             	add    %rcx,%rax
 807413e:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 8074145:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 807414c:	00 00 00 
 807414f:	48 01 d1             	add    %rdx,%rcx
 8074152:	48 8b 11             	mov    (%rcx),%rdx
 8074155:	48 89 10             	mov    %rdx,(%rax)
 8074158:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 807415f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8074166:	00 00 00 
 8074169:	48 01 c8             	add    %rcx,%rax
 807416c:	b9 06 00 00 00       	mov    $0x6,%ecx
 8074171:	89 08                	mov    %ecx,(%rax)
 8074173:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 807417a:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8074181:	00 00 00 
 8074184:	48 01 c8             	add    %rcx,%rax
 8074187:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 807418e:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 8074195:	00 00 00 
 8074198:	48 01 d1             	add    %rdx,%rcx
 807419b:	8b 11                	mov    (%rcx),%edx
 807419d:	48 63 d2             	movslq %edx,%rdx
 80741a0:	48 89 d1             	mov    %rdx,%rcx
 80741a3:	48 89 08             	mov    %rcx,(%rax)
 80741a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80741aa:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 80741b1:	00 00 00 
 80741b4:	48 01 c8             	add    %rcx,%rax
 80741b7:	48 8b 08             	mov    (%rax),%rcx
 80741ba:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80741c1:	00 00 00 
 80741c4:	48 01 c1             	add    %rax,%rcx
 80741c7:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80741ce:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 80741d5:	00 00 00 
 80741d8:	48 01 d0             	add    %rdx,%rax
 80741db:	8b 10                	mov    (%rax),%edx
 80741dd:	48 89 d6             	mov    %rdx,%rsi
 80741e0:	48 8b 01             	mov    (%rcx),%rax
 80741e3:	48 89 c7             	mov    %rax,%rdi
 80741e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80741eb:	e8 33 bf ff ff       	callq  8070123 <put32>
 80741f0:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 80741f6:	83 f8 01             	cmp    $0x1,%eax
 80741f9:	0f 84 14 00 00 00    	je     8074213 <elf_output_file+0x2654>
 80741ff:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8074205:	83 f8 02             	cmp    $0x2,%eax
 8074208:	0f 84 05 00 00 00    	je     8074213 <elf_output_file+0x2654>
 807420e:	e9 77 02 00 00       	jmpq   807448a <elf_output_file+0x28cb>
 8074213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074217:	48 b9 a0 00 00 00 00 	movabs $0xa0,%rcx
 807421e:	00 00 00 
 8074221:	48 01 c8             	add    %rcx,%rax
 8074224:	48 8b 08             	mov    (%rax),%rcx
 8074227:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 807422e:	00 00 00 
 8074231:	48 01 c1             	add    %rax,%rcx
 8074234:	48 8b 01             	mov    (%rcx),%rax
 8074237:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
 807423e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074242:	48 b9 a0 00 00 00 00 	movabs $0xa0,%rcx
 8074249:	00 00 00 
 807424c:	48 01 c8             	add    %rcx,%rax
 807424f:	48 8b 08             	mov    (%rax),%rcx
 8074252:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 8074259:	48 8b 11             	mov    (%rcx),%rdx
 807425c:	48 01 d0             	add    %rdx,%rax
 807425f:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
 8074266:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 807426d:	48 8b 8d 58 fd ff ff 	mov    -0x2a8(%rbp),%rcx
 8074274:	48 89 c2             	mov    %rax,%rdx
 8074277:	48 89 c8             	mov    %rcx,%rax
 807427a:	48 39 c2             	cmp    %rax,%rdx
 807427d:	0f 83 07 02 00 00    	jae    807448a <elf_output_file+0x28cb>
 8074283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074287:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 807428e:	00 00 00 
 8074291:	48 01 c8             	add    %rcx,%rax
 8074294:	48 8b 08             	mov    (%rax),%rcx
 8074297:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 807429e:	00 00 00 
 80742a1:	48 01 c1             	add    %rax,%rcx
 80742a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80742a8:	48 ba a0 00 00 00 00 	movabs $0xa0,%rdx
 80742af:	00 00 00 
 80742b2:	48 01 d0             	add    %rdx,%rax
 80742b5:	48 8b 10             	mov    (%rax),%rdx
 80742b8:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 80742bf:	00 00 00 
 80742c2:	48 01 c2             	add    %rax,%rdx
 80742c5:	48 8b 01             	mov    (%rcx),%rax
 80742c8:	48 8b 0a             	mov    (%rdx),%rcx
 80742cb:	48 29 c8             	sub    %rcx,%rax
 80742ce:	48 89 c1             	mov    %rax,%rcx
 80742d1:	48 b8 06 00 00 00 00 	movabs $0x6,%rax
 80742d8:	00 00 00 
 80742db:	48 29 c1             	sub    %rax,%rcx
 80742de:	89 8d 54 fd ff ff    	mov    %ecx,-0x2ac(%rbp)
 80742e4:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 80742eb:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 80742f2:	00 00 00 
 80742f5:	48 01 c8             	add    %rcx,%rax
 80742f8:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
 80742ff:	48 ba 02 00 00 00 00 	movabs $0x2,%rdx
 8074306:	00 00 00 
 8074309:	48 01 d1             	add    %rdx,%rcx
 807430c:	48 89 cf             	mov    %rcx,%rdi
 807430f:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
 8074316:	b8 00 00 00 00       	mov    $0x0,%eax
 807431b:	e8 6d be ff ff       	callq  807018d <get32>
 8074320:	8b 8d 54 fd ff ff    	mov    -0x2ac(%rbp),%ecx
 8074326:	48 01 c8             	add    %rcx,%rax
 8074329:	48 89 c6             	mov    %rax,%rsi
 807432c:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
 8074333:	48 89 c7             	mov    %rax,%rdi
 8074336:	b8 00 00 00 00       	mov    $0x0,%eax
 807433b:	e8 e3 bd ff ff       	callq  8070123 <put32>
 8074340:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 8074347:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807434e:	00 00 00 
 8074351:	48 01 c8             	add    %rcx,%rax
 8074354:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
 807435b:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8074362:	00 00 00 
 8074365:	48 01 d1             	add    %rdx,%rcx
 8074368:	48 89 cf             	mov    %rcx,%rdi
 807436b:	48 89 85 40 fd ff ff 	mov    %rax,-0x2c0(%rbp)
 8074372:	b8 00 00 00 00       	mov    $0x0,%eax
 8074377:	e8 11 be ff ff       	callq  807018d <get32>
 807437c:	8b 8d 54 fd ff ff    	mov    -0x2ac(%rbp),%ecx
 8074382:	48 01 c8             	add    %rcx,%rax
 8074385:	83 e8 06             	sub    $0x6,%eax
 8074388:	48 89 c6             	mov    %rax,%rsi
 807438b:	48 8b 85 40 fd ff ff 	mov    -0x2c0(%rbp),%rax
 8074392:	48 89 c7             	mov    %rax,%rdi
 8074395:	b8 00 00 00 00       	mov    $0x0,%eax
 807439a:	e8 84 bd ff ff       	callq  8070123 <put32>
 807439f:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 80743a6:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80743ad:	00 00 00 
 80743b0:	48 01 c8             	add    %rcx,%rax
 80743b3:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
 80743ba:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 80743c1:	48 8b 8d 58 fd ff ff 	mov    -0x2a8(%rbp),%rcx
 80743c8:	48 89 c2             	mov    %rax,%rdx
 80743cb:	48 89 c8             	mov    %rcx,%rax
 80743ce:	48 39 c2             	cmp    %rax,%rdx
 80743d1:	0f 83 b3 00 00 00    	jae    807448a <elf_output_file+0x28cb>
 80743d7:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 80743de:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 80743e5:	00 00 00 
 80743e8:	48 01 c8             	add    %rcx,%rax
 80743eb:	48 8b 8d 60 fd ff ff 	mov    -0x2a0(%rbp),%rcx
 80743f2:	48 ba 02 00 00 00 00 	movabs $0x2,%rdx
 80743f9:	00 00 00 
 80743fc:	48 01 d1             	add    %rdx,%rcx
 80743ff:	48 89 cf             	mov    %rcx,%rdi
 8074402:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)
 8074409:	b8 00 00 00 00       	mov    $0x0,%eax
 807440e:	e8 7a bd ff ff       	callq  807018d <get32>
 8074413:	8b 8d 54 fd ff ff    	mov    -0x2ac(%rbp),%ecx
 8074419:	48 01 c8             	add    %rcx,%rax
 807441c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8074420:	48 ba a0 00 00 00 00 	movabs $0xa0,%rdx
 8074427:	00 00 00 
 807442a:	48 01 d1             	add    %rdx,%rcx
 807442d:	48 8b 11             	mov    (%rcx),%rdx
 8074430:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8074437:	00 00 00 
 807443a:	48 01 ca             	add    %rcx,%rdx
 807443d:	48 8b 0a             	mov    (%rdx),%rcx
 8074440:	48 89 c2             	mov    %rax,%rdx
 8074443:	48 01 d1             	add    %rdx,%rcx
 8074446:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 807444d:	48 29 c1             	sub    %rax,%rcx
 8074450:	48 89 c8             	mov    %rcx,%rax
 8074453:	48 89 c6             	mov    %rax,%rsi
 8074456:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
 807445d:	48 89 c7             	mov    %rax,%rdi
 8074460:	b8 00 00 00 00       	mov    $0x0,%eax
 8074465:	e8 b9 bc ff ff       	callq  8070123 <put32>
 807446a:	48 8b 85 60 fd ff ff 	mov    -0x2a0(%rbp),%rax
 8074471:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8074478:	00 00 00 
 807447b:	48 01 c8             	add    %rcx,%rax
 807447e:	48 89 85 60 fd ff ff 	mov    %rax,-0x2a0(%rbp)
 8074485:	e9 30 ff ff ff       	jmpq   80743ba <elf_output_file+0x27fb>
 807448a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807448e:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 8074495:	00 00 00 
 8074498:	48 01 c8             	add    %rcx,%rax
 807449b:	48 8b 08             	mov    (%rax),%rcx
 807449e:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80744a5:	00 00 00 
 80744a8:	48 01 c1             	add    %rax,%rcx
 80744ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80744af:	48 ba c8 00 00 00 00 	movabs $0xc8,%rdx
 80744b6:	00 00 00 
 80744b9:	48 01 d0             	add    %rdx,%rax
 80744bc:	48 8b 10             	mov    (%rax),%rdx
 80744bf:	48 8b 01             	mov    (%rcx),%rax
 80744c2:	48 8b 0a             	mov    (%rdx),%rcx
 80744c5:	48 01 c8             	add    %rcx,%rax
 80744c8:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)
 80744cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80744d3:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 80744da:	00 00 00 
 80744dd:	48 01 c8             	add    %rcx,%rax
 80744e0:	48 8b 08             	mov    (%rax),%rcx
 80744e3:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80744ea:	00 00 00 
 80744ed:	48 01 c1             	add    %rax,%rcx
 80744f0:	48 8b 01             	mov    (%rcx),%rax
 80744f3:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80744fa:	00 00 00 
 80744fd:	48 01 c8             	add    %rcx,%rax
 8074500:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 8074507:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 807450e:	48 8b 8d 68 fd ff ff 	mov    -0x298(%rbp),%rcx
 8074515:	48 89 c2             	mov    %rax,%rdx
 8074518:	48 89 c8             	mov    %rcx,%rax
 807451b:	48 39 c2             	cmp    %rax,%rdx
 807451e:	0f 83 7b 01 00 00    	jae    807469f <elf_output_file+0x2ae0>
 8074524:	e9 20 00 00 00       	jmpq   8074549 <elf_output_file+0x298a>
 8074529:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8074530:	48 89 c1             	mov    %rax,%rcx
 8074533:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 807453a:	00 00 00 
 807453d:	48 01 d0             	add    %rdx,%rax
 8074540:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 8074547:	eb be                	jmp    8074507 <elf_output_file+0x2948>
 8074549:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8074550:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8074557:	00 00 00 
 807455a:	48 01 c8             	add    %rcx,%rax
 807455d:	0f b7 08             	movzwl (%rax),%ecx
 8074560:	83 f9 00             	cmp    $0x0,%ecx
 8074563:	0f 85 8b 00 00 00    	jne    80745f4 <elf_output_file+0x2a35>
 8074569:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 8074570:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8074577:	00 00 00 
 807457a:	48 01 c8             	add    %rcx,%rax
 807457d:	48 8b 08             	mov    (%rax),%rcx
 8074580:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8074587:	00 00 00 
 807458a:	48 39 c1             	cmp    %rax,%rcx
 807458d:	b8 00 00 00 00       	mov    $0x0,%eax
 8074592:	0f 95 c0             	setne  %al
 8074595:	85 c0                	test   %eax,%eax
 8074597:	0f 84 52 00 00 00    	je     80745ef <elf_output_file+0x2a30>
 807459d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 80745a4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80745ab:	00 00 00 
 80745ae:	48 01 c8             	add    %rcx,%rax
 80745b1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80745b5:	48 ba a0 00 00 00 00 	movabs $0xa0,%rdx
 80745bc:	00 00 00 
 80745bf:	48 01 d1             	add    %rdx,%rcx
 80745c2:	48 8b 11             	mov    (%rcx),%rdx
 80745c5:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 80745cc:	00 00 00 
 80745cf:	48 01 ca             	add    %rcx,%rdx
 80745d2:	48 8b 08             	mov    (%rax),%rcx
 80745d5:	48 89 85 30 fd ff ff 	mov    %rax,-0x2d0(%rbp)
 80745dc:	48 8b 02             	mov    (%rdx),%rax
 80745df:	48 01 c1             	add    %rax,%rcx
 80745e2:	48 89 c8             	mov    %rcx,%rax
 80745e5:	48 8b 8d 30 fd ff ff 	mov    -0x2d0(%rbp),%rcx
 80745ec:	48 89 01             	mov    %rax,(%rcx)
 80745ef:	e9 a6 00 00 00       	jmpq   807469a <elf_output_file+0x2adb>
 80745f4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 80745fb:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8074602:	00 00 00 
 8074605:	48 01 c8             	add    %rcx,%rax
 8074608:	0f b7 08             	movzwl (%rax),%ecx
 807460b:	81 f9 00 ff 00 00    	cmp    $0xff00,%ecx
 8074611:	0f 8d 83 00 00 00    	jge    807469a <elf_output_file+0x2adb>
 8074617:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 807461e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8074625:	00 00 00 
 8074628:	48 01 c8             	add    %rcx,%rax
 807462b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807462f:	48 ba 78 00 00 00 00 	movabs $0x78,%rdx
 8074636:	00 00 00 
 8074639:	48 01 d1             	add    %rdx,%rcx
 807463c:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 8074643:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
 807464a:	48 b8 06 00 00 00 00 	movabs $0x6,%rax
 8074651:	00 00 00 
 8074654:	48 01 c2             	add    %rax,%rdx
 8074657:	0f b7 02             	movzwl (%rdx),%eax
 807465a:	48 63 c0             	movslq %eax,%rax
 807465d:	48 89 c2             	mov    %rax,%rdx
 8074660:	48 c1 e2 03          	shl    $0x3,%rdx
 8074664:	48 8b 01             	mov    (%rcx),%rax
 8074667:	48 89 d1             	mov    %rdx,%rcx
 807466a:	48 01 c8             	add    %rcx,%rax
 807466d:	48 8b 08             	mov    (%rax),%rcx
 8074670:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 8074677:	00 00 00 
 807467a:	48 01 c1             	add    %rax,%rcx
 807467d:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
 8074684:	48 8b 00             	mov    (%rax),%rax
 8074687:	48 8b 11             	mov    (%rcx),%rdx
 807468a:	48 01 d0             	add    %rdx,%rax
 807468d:	48 89 c1             	mov    %rax,%rcx
 8074690:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
 8074697:	48 89 08             	mov    %rcx,(%rax)
 807469a:	e9 8a fe ff ff       	jmpq   8074529 <elf_output_file+0x296a>
 807469f:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80746a6:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
 80746ad:	48 89 08             	mov    %rcx,(%rax)
 80746b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80746b4:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 80746bb:	00 00 00 
 80746be:	48 01 c8             	add    %rcx,%rax
 80746c1:	48 8b 08             	mov    (%rax),%rcx
 80746c4:	48 b8 68 00 00 00 00 	movabs $0x68,%rax
 80746cb:	00 00 00 
 80746ce:	48 01 c1             	add    %rax,%rcx
 80746d1:	48 8b 01             	mov    (%rcx),%rax
 80746d4:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 80746db:	00 00 00 
 80746de:	48 01 c8             	add    %rcx,%rax
 80746e1:	48 8b 08             	mov    (%rax),%rcx
 80746e4:	49 89 ca             	mov    %rcx,%r10
 80746e7:	b8 04 00 00 00       	mov    $0x4,%eax
 80746ec:	48 89 c6             	mov    %rax,%rsi
 80746ef:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80746f6:	48 89 c7             	mov    %rax,%rdi
 80746f9:	4c 89 d2             	mov    %r10,%rdx
 80746fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8074701:	e8 fa c6 ff ff       	callq  8070e00 <put_dt>
 8074706:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 807470d:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8074714:	00 00 00 
 8074717:	48 01 c8             	add    %rcx,%rax
 807471a:	48 8b 08             	mov    (%rax),%rcx
 807471d:	49 89 ca             	mov    %rcx,%r10
 8074720:	b8 05 00 00 00       	mov    $0x5,%eax
 8074725:	48 89 c6             	mov    %rax,%rsi
 8074728:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 807472f:	48 89 c7             	mov    %rax,%rdi
 8074732:	4c 89 d2             	mov    %r10,%rdx
 8074735:	b8 00 00 00 00       	mov    $0x0,%eax
 807473a:	e8 c1 c6 ff ff       	callq  8070e00 <put_dt>
 807473f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074743:	48 b9 c8 00 00 00 00 	movabs $0xc8,%rcx
 807474a:	00 00 00 
 807474d:	48 01 c8             	add    %rcx,%rax
 8074750:	48 8b 08             	mov    (%rax),%rcx
 8074753:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 807475a:	00 00 00 
 807475d:	48 01 c1             	add    %rax,%rcx
 8074760:	48 8b 01             	mov    (%rcx),%rax
 8074763:	49 89 c2             	mov    %rax,%r10
 8074766:	b8 06 00 00 00       	mov    $0x6,%eax
 807476b:	48 89 c6             	mov    %rax,%rsi
 807476e:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8074775:	48 89 c7             	mov    %rax,%rdi
 8074778:	4c 89 d2             	mov    %r10,%rdx
 807477b:	b8 00 00 00 00       	mov    $0x0,%eax
 8074780:	e8 7b c6 ff ff       	callq  8070e00 <put_dt>
 8074785:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 807478c:	48 8b 08             	mov    (%rax),%rcx
 807478f:	49 89 ca             	mov    %rcx,%r10
 8074792:	b8 0a 00 00 00       	mov    $0xa,%eax
 8074797:	48 89 c6             	mov    %rax,%rsi
 807479a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80747a1:	48 89 c7             	mov    %rax,%rdi
 80747a4:	4c 89 d2             	mov    %r10,%rdx
 80747a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80747ac:	e8 4f c6 ff ff       	callq  8070e00 <put_dt>
 80747b1:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80747b8:	00 00 00 
 80747bb:	49 89 c2             	mov    %rax,%r10
 80747be:	b8 0b 00 00 00       	mov    $0xb,%eax
 80747c3:	48 89 c6             	mov    %rax,%rsi
 80747c6:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80747cd:	48 89 c7             	mov    %rax,%rdi
 80747d0:	4c 89 d2             	mov    %r10,%rdx
 80747d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80747d8:	e8 23 c6 ff ff       	callq  8070e00 <put_dt>
 80747dd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
 80747e4:	49 89 c2             	mov    %rax,%r10
 80747e7:	b8 07 00 00 00       	mov    $0x7,%eax
 80747ec:	48 89 c6             	mov    %rax,%rsi
 80747ef:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80747f6:	48 89 c7             	mov    %rax,%rdi
 80747f9:	4c 89 d2             	mov    %r10,%rdx
 80747fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8074801:	e8 fa c5 ff ff       	callq  8070e00 <put_dt>
 8074806:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
 807480d:	49 89 c2             	mov    %rax,%r10
 8074810:	b8 08 00 00 00       	mov    $0x8,%eax
 8074815:	48 89 c6             	mov    %rax,%rsi
 8074818:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 807481f:	48 89 c7             	mov    %rax,%rdi
 8074822:	4c 89 d2             	mov    %r10,%rdx
 8074825:	b8 00 00 00 00       	mov    $0x0,%eax
 807482a:	e8 d1 c5 ff ff       	callq  8070e00 <put_dt>
 807482f:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8074836:	00 00 00 
 8074839:	49 89 c2             	mov    %rax,%r10
 807483c:	b8 09 00 00 00       	mov    $0x9,%eax
 8074841:	48 89 c6             	mov    %rax,%rsi
 8074844:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 807484b:	48 89 c7             	mov    %rax,%rdi
 807484e:	4c 89 d2             	mov    %r10,%rdx
 8074851:	b8 00 00 00 00       	mov    $0x0,%eax
 8074856:	e8 a5 c5 ff ff       	callq  8070e00 <put_dt>
 807485b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807485f:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 8074866:	00 00 00 
 8074869:	48 01 c8             	add    %rcx,%rax
 807486c:	8b 08                	mov    (%rax),%ecx
 807486e:	85 c9                	test   %ecx,%ecx
 8074870:	0f 84 2c 00 00 00    	je     80748a2 <elf_output_file+0x2ce3>
 8074876:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807487d:	00 00 00 
 8074880:	49 89 c2             	mov    %rax,%r10
 8074883:	b8 15 00 00 00       	mov    $0x15,%eax
 8074888:	48 89 c6             	mov    %rax,%rsi
 807488b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 8074892:	48 89 c7             	mov    %rax,%rdi
 8074895:	4c 89 d2             	mov    %r10,%rdx
 8074898:	b8 00 00 00 00       	mov    $0x0,%eax
 807489d:	e8 5e c5 ff ff       	callq  8070e00 <put_dt>
 80748a2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80748a9:	00 00 00 
 80748ac:	49 89 c2             	mov    %rax,%r10
 80748af:	b8 00 00 00 00       	mov    $0x0,%eax
 80748b4:	48 89 c6             	mov    %rax,%rsi
 80748b7:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 80748be:	48 89 c7             	mov    %rax,%rdi
 80748c1:	4c 89 d2             	mov    %r10,%rdx
 80748c4:	b8 00 00 00 00       	mov    $0x0,%eax
 80748c9:	e8 32 c5 ff ff       	callq  8070e00 <put_dt>
 80748ce:	b8 38 00 00 00       	mov    $0x38,%eax
 80748d3:	66 89 45 e6          	mov    %ax,-0x1a(%rbp)
 80748d7:	0f b7 45 84          	movzwl -0x7c(%rbp),%eax
 80748db:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
 80748df:	48 b8 40 00 00 00 00 	movabs $0x40,%rax
 80748e6:	00 00 00 
 80748e9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80748ed:	b8 01 00 00 00       	mov    $0x1,%eax
 80748f2:	89 45 88             	mov    %eax,-0x78(%rbp)
 80748f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80748f9:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8074900:	00 00 00 
 8074903:	48 01 c8             	add    %rcx,%rax
 8074906:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074909:	8b 10                	mov    (%rax),%edx
 807490b:	39 d1                	cmp    %edx,%ecx
 807490d:	0f 8d 4c 01 00 00    	jge    8074a5f <elf_output_file+0x2ea0>
 8074913:	e9 0e 00 00 00       	jmpq   8074926 <elf_output_file+0x2d67>
 8074918:	8b 45 88             	mov    -0x78(%rbp),%eax
 807491b:	48 89 c1             	mov    %rax,%rcx
 807491e:	83 c0 01             	add    $0x1,%eax
 8074921:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074924:	eb cf                	jmp    80748f5 <elf_output_file+0x2d36>
 8074926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807492a:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8074931:	00 00 00 
 8074934:	48 01 c8             	add    %rcx,%rax
 8074937:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 807493a:	48 63 c9             	movslq %ecx,%rcx
 807493d:	48 89 ca             	mov    %rcx,%rdx
 8074940:	48 c1 e2 03          	shl    $0x3,%rdx
 8074944:	48 8b 08             	mov    (%rax),%rcx
 8074947:	48 89 d0             	mov    %rdx,%rax
 807494a:	48 01 c1             	add    %rax,%rcx
 807494d:	48 8b 01             	mov    (%rcx),%rax
 8074950:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8074957:	8b 45 84             	mov    -0x7c(%rbp),%eax
 807495a:	83 f8 00             	cmp    $0x0,%eax
 807495d:	0f 8e 26 00 00 00    	jle    8074989 <elf_output_file+0x2dca>
 8074963:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807496a:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8074971:	00 00 00 
 8074974:	48 01 c8             	add    %rcx,%rax
 8074977:	8b 08                	mov    (%rax),%ecx
 8074979:	83 e1 02             	and    $0x2,%ecx
 807497c:	85 c9                	test   %ecx,%ecx
 807497e:	0f 84 05 00 00 00    	je     8074989 <elf_output_file+0x2dca>
 8074984:	e9 8f ff ff ff       	jmpq   8074918 <elf_output_file+0x2d59>
 8074989:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 807498f:	48 89 c1             	mov    %rax,%rcx
 8074992:	83 c0 01             	add    $0x1,%eax
 8074995:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 807499b:	48 63 c9             	movslq %ecx,%rcx
 807499e:	48 89 c8             	mov    %rcx,%rax
 80749a1:	48 c1 e0 02          	shl    $0x2,%rax
 80749a5:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 80749a9:	48 89 c2             	mov    %rax,%rdx
 80749ac:	48 01 d1             	add    %rdx,%rcx
 80749af:	8b 45 88             	mov    -0x78(%rbp),%eax
 80749b2:	89 01                	mov    %eax,(%rcx)
 80749b4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80749bb:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 80749c2:	00 00 00 
 80749c5:	48 01 c8             	add    %rcx,%rax
 80749c8:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 80749cb:	8b 10                	mov    (%rax),%edx
 80749cd:	48 01 d1             	add    %rdx,%rcx
 80749d0:	83 e9 01             	sub    $0x1,%ecx
 80749d3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80749da:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 80749e1:	00 00 00 
 80749e4:	48 01 d0             	add    %rdx,%rax
 80749e7:	8b 10                	mov    (%rax),%edx
 80749e9:	83 ea 01             	sub    $0x1,%edx
 80749ec:	83 f2 ff             	xor    $0xffffffff,%edx
 80749ef:	48 21 d1             	and    %rdx,%rcx
 80749f2:	89 4d 80             	mov    %ecx,-0x80(%rbp)
 80749f5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80749fc:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 8074a03:	00 00 00 
 8074a06:	48 01 c8             	add    %rcx,%rax
 8074a09:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8074a0c:	48 63 c9             	movslq %ecx,%rcx
 8074a0f:	48 89 ca             	mov    %rcx,%rdx
 8074a12:	48 89 10             	mov    %rdx,(%rax)
 8074a15:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074a1c:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8074a23:	00 00 00 
 8074a26:	48 01 c8             	add    %rcx,%rax
 8074a29:	8b 08                	mov    (%rax),%ecx
 8074a2b:	83 f9 08             	cmp    $0x8,%ecx
 8074a2e:	0f 84 26 00 00 00    	je     8074a5a <elf_output_file+0x2e9b>
 8074a34:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074a3b:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8074a42:	00 00 00 
 8074a45:	48 01 c8             	add    %rcx,%rax
 8074a48:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8074a4b:	48 63 c9             	movslq %ecx,%rcx
 8074a4e:	48 89 ca             	mov    %rcx,%rdx
 8074a51:	48 8b 08             	mov    (%rax),%rcx
 8074a54:	48 01 ca             	add    %rcx,%rdx
 8074a57:	89 55 80             	mov    %edx,-0x80(%rbp)
 8074a5a:	e9 b9 fe ff ff       	jmpq   8074918 <elf_output_file+0x2d59>
 8074a5f:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8074a65:	83 f8 03             	cmp    $0x3,%eax
 8074a68:	0f 84 54 02 00 00    	je     8074cc2 <elf_output_file+0x3103>
 8074a6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8074a73:	48 89 c6             	mov    %rax,%rsi
 8074a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074a7a:	48 89 c7             	mov    %rax,%rdi
 8074a7d:	b8 00 00 00 00       	mov    $0x0,%eax
 8074a82:	e8 5c a6 ff ff       	callq  806f0e3 <relocate_syms>
 8074a87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074a8b:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 8074a92:	00 00 00 
 8074a95:	48 01 c8             	add    %rcx,%rax
 8074a98:	8b 08                	mov    (%rax),%ecx
 8074a9a:	83 f9 00             	cmp    $0x0,%ecx
 8074a9d:	0f 84 0d 00 00 00    	je     8074ab0 <elf_output_file+0x2ef1>
 8074aa3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8074aa8:	89 45 9c             	mov    %eax,-0x64(%rbp)
 8074aab:	e9 d8 09 00 00       	jmpq   8075488 <elf_output_file+0x38c9>
 8074ab0:	b8 01 00 00 00       	mov    $0x1,%eax
 8074ab5:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074abc:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8074ac3:	00 00 00 
 8074ac6:	48 01 c8             	add    %rcx,%rax
 8074ac9:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074acc:	8b 10                	mov    (%rax),%edx
 8074ace:	39 d1                	cmp    %edx,%ecx
 8074ad0:	0f 8d ce 00 00 00    	jge    8074ba4 <elf_output_file+0x2fe5>
 8074ad6:	e9 0e 00 00 00       	jmpq   8074ae9 <elf_output_file+0x2f2a>
 8074adb:	8b 45 88             	mov    -0x78(%rbp),%eax
 8074ade:	48 89 c1             	mov    %rax,%rcx
 8074ae1:	83 c0 01             	add    $0x1,%eax
 8074ae4:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074ae7:	eb cf                	jmp    8074ab8 <elf_output_file+0x2ef9>
 8074ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074aed:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8074af4:	00 00 00 
 8074af7:	48 01 c8             	add    %rcx,%rax
 8074afa:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074afd:	48 63 c9             	movslq %ecx,%rcx
 8074b00:	48 89 ca             	mov    %rcx,%rdx
 8074b03:	48 c1 e2 03          	shl    $0x3,%rdx
 8074b07:	48 8b 08             	mov    (%rax),%rcx
 8074b0a:	48 89 d0             	mov    %rdx,%rax
 8074b0d:	48 01 c1             	add    %rax,%rcx
 8074b10:	48 8b 01             	mov    (%rcx),%rax
 8074b13:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8074b1a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074b21:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 8074b28:	00 00 00 
 8074b2b:	48 01 c8             	add    %rcx,%rax
 8074b2e:	48 8b 08             	mov    (%rax),%rcx
 8074b31:	85 c9                	test   %ecx,%ecx
 8074b33:	0f 84 66 00 00 00    	je     8074b9f <elf_output_file+0x2fe0>
 8074b39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074b3d:	48 b9 98 00 00 00 00 	movabs $0x98,%rcx
 8074b44:	00 00 00 
 8074b47:	48 01 c8             	add    %rcx,%rax
 8074b4a:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8074b51:	48 8b 10             	mov    (%rax),%rdx
 8074b54:	48 89 c8             	mov    %rcx,%rax
 8074b57:	48 89 d1             	mov    %rdx,%rcx
 8074b5a:	48 39 c8             	cmp    %rcx,%rax
 8074b5d:	0f 84 3c 00 00 00    	je     8074b9f <elf_output_file+0x2fe0>
 8074b63:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074b6a:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8074b71:	00 00 00 
 8074b74:	48 01 c8             	add    %rcx,%rax
 8074b77:	8b 08                	mov    (%rax),%ecx
 8074b79:	83 e1 02             	and    $0x2,%ecx
 8074b7c:	85 c9                	test   %ecx,%ecx
 8074b7e:	0f 84 1b 00 00 00    	je     8074b9f <elf_output_file+0x2fe0>
 8074b84:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074b8b:	48 89 c6             	mov    %rax,%rsi
 8074b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074b92:	48 89 c7             	mov    %rax,%rdi
 8074b95:	b8 00 00 00 00       	mov    $0x0,%eax
 8074b9a:	e8 d5 a9 ff ff       	callq  806f574 <relocate_section>
 8074b9f:	e9 37 ff ff ff       	jmpq   8074adb <elf_output_file+0x2f1c>
 8074ba4:	b8 01 00 00 00       	mov    $0x1,%eax
 8074ba9:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074bb0:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8074bb7:	00 00 00 
 8074bba:	48 01 c8             	add    %rcx,%rax
 8074bbd:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074bc0:	8b 10                	mov    (%rax),%edx
 8074bc2:	39 d1                	cmp    %edx,%ecx
 8074bc4:	0f 8d a4 00 00 00    	jge    8074c6e <elf_output_file+0x30af>
 8074bca:	e9 0e 00 00 00       	jmpq   8074bdd <elf_output_file+0x301e>
 8074bcf:	8b 45 88             	mov    -0x78(%rbp),%eax
 8074bd2:	48 89 c1             	mov    %rax,%rcx
 8074bd5:	83 c0 01             	add    $0x1,%eax
 8074bd8:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074bdb:	eb cf                	jmp    8074bac <elf_output_file+0x2fed>
 8074bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074be1:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8074be8:	00 00 00 
 8074beb:	48 01 c8             	add    %rcx,%rax
 8074bee:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074bf1:	48 63 c9             	movslq %ecx,%rcx
 8074bf4:	48 89 ca             	mov    %rcx,%rdx
 8074bf7:	48 c1 e2 03          	shl    $0x3,%rdx
 8074bfb:	48 8b 08             	mov    (%rax),%rcx
 8074bfe:	48 89 d0             	mov    %rdx,%rax
 8074c01:	48 01 c1             	add    %rax,%rcx
 8074c04:	48 8b 01             	mov    (%rcx),%rax
 8074c07:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8074c0e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074c15:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 8074c1c:	00 00 00 
 8074c1f:	48 01 c8             	add    %rcx,%rax
 8074c22:	8b 08                	mov    (%rax),%ecx
 8074c24:	83 e1 02             	and    $0x2,%ecx
 8074c27:	85 c9                	test   %ecx,%ecx
 8074c29:	0f 84 3a 00 00 00    	je     8074c69 <elf_output_file+0x30aa>
 8074c2f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074c36:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8074c3d:	00 00 00 
 8074c40:	48 01 c8             	add    %rcx,%rax
 8074c43:	8b 08                	mov    (%rax),%ecx
 8074c45:	83 f9 04             	cmp    $0x4,%ecx
 8074c48:	0f 85 1b 00 00 00    	jne    8074c69 <elf_output_file+0x30aa>
 8074c4e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8074c55:	48 89 c6             	mov    %rax,%rsi
 8074c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074c5c:	48 89 c7             	mov    %rax,%rdi
 8074c5f:	b8 00 00 00 00       	mov    $0x0,%eax
 8074c64:	e8 b4 b0 ff ff       	callq  806fd1d <relocate_rel>
 8074c69:	e9 61 ff ff ff       	jmpq   8074bcf <elf_output_file+0x3010>
 8074c6e:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8074c74:	83 f8 01             	cmp    $0x1,%eax
 8074c77:	0f 85 27 00 00 00    	jne    8074ca4 <elf_output_file+0x30e5>
 8074c7d:	48 8d 05 c2 79 01 00 	lea    0x179c2(%rip),%rax        # 808c646 <L.144>
 8074c84:	48 89 c6             	mov    %rax,%rsi
 8074c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074c8b:	48 89 c7             	mov    %rax,%rdi
 8074c8e:	b8 00 00 00 00       	mov    $0x0,%eax
 8074c93:	e8 49 95 ff ff       	callq  806e1e1 <tcc_get_symbol_err>
 8074c98:	48 89 c1             	mov    %rax,%rcx
 8074c9b:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 8074c9f:	e9 1e 00 00 00       	jmpq   8074cc2 <elf_output_file+0x3103>
 8074ca4:	48 8b 05 25 92 01 00 	mov    0x19225(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 8074cab:	48 8b 00             	mov    (%rax),%rax
 8074cae:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8074cb5:	00 00 00 
 8074cb8:	48 01 c8             	add    %rcx,%rax
 8074cbb:	48 8b 08             	mov    (%rax),%rcx
 8074cbe:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
 8074cc2:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8074cc8:	83 f8 01             	cmp    $0x1,%eax
 8074ccb:	0f 85 2c 00 00 00    	jne    8074cfd <elf_output_file+0x313e>
 8074cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074cd5:	48 b9 e4 00 00 00 00 	movabs $0xe4,%rcx
 8074cdc:	00 00 00 
 8074cdf:	48 01 c8             	add    %rcx,%rax
 8074ce2:	8b 08                	mov    (%rax),%ecx
 8074ce4:	85 c9                	test   %ecx,%ecx
 8074ce6:	0f 84 11 00 00 00    	je     8074cfd <elf_output_file+0x313e>
 8074cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074cf0:	48 89 c7             	mov    %rax,%rdi
 8074cf3:	b8 00 00 00 00       	mov    $0x0,%eax
 8074cf8:	e8 0d cd ff ff       	callq  8071a0a <fill_got>
 8074cfd:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8074d03:	83 f8 03             	cmp    $0x3,%eax
 8074d06:	0f 85 0d 00 00 00    	jne    8074d19 <elf_output_file+0x315a>
 8074d0c:	b8 b6 01 00 00       	mov    $0x1b6,%eax
 8074d11:	89 45 a0             	mov    %eax,-0x60(%rbp)
 8074d14:	e9 08 00 00 00       	jmpq   8074d21 <elf_output_file+0x3162>
 8074d19:	b8 ff 01 00 00       	mov    $0x1ff,%eax
 8074d1e:	89 45 a0             	mov    %eax,-0x60(%rbp)
 8074d21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8074d25:	48 89 c7             	mov    %rax,%rdi
 8074d28:	b8 00 00 00 00       	mov    $0x0,%eax
 8074d2d:	e8 de 2f 01 00       	callq  8087d10 <__preinit_array_end+0x270>
 8074d32:	8b 45 a0             	mov    -0x60(%rbp),%eax
 8074d35:	49 89 c2             	mov    %rax,%r10
 8074d38:	b8 41 02 00 00       	mov    $0x241,%eax
 8074d3d:	48 89 c6             	mov    %rax,%rsi
 8074d40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8074d44:	48 89 c7             	mov    %rax,%rdi
 8074d47:	4c 89 d2             	mov    %r10,%rdx
 8074d4a:	b8 00 00 00 00       	mov    $0x0,%eax
 8074d4f:	e8 5c 2e 01 00       	callq  8087bb0 <__preinit_array_end+0x110>
 8074d54:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 8074d57:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8074d5a:	83 f8 00             	cmp    $0x0,%eax
 8074d5d:	0f 8d 20 00 00 00    	jge    8074d83 <elf_output_file+0x31c4>
 8074d63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8074d67:	48 89 c6             	mov    %rax,%rsi
 8074d6a:	48 8d 05 dc 78 01 00 	lea    0x178dc(%rip),%rax        # 808c64d <L.145>
 8074d71:	48 89 c7             	mov    %rax,%rdi
 8074d74:	b8 00 00 00 00       	mov    $0x0,%eax
 8074d79:	e8 6f 87 fd ff       	callq  804d4ed <tcc_error_noabort>
 8074d7e:	e9 20 fd ff ff       	jmpq   8074aa3 <elf_output_file+0x2ee4>
 8074d83:	48 8d 05 d8 78 01 00 	lea    0x178d8(%rip),%rax        # 808c662 <L.146>
 8074d8a:	48 89 c6             	mov    %rax,%rsi
 8074d8d:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8074d90:	48 89 c7             	mov    %rax,%rdi
 8074d93:	b8 00 00 00 00       	mov    $0x0,%eax
 8074d98:	e8 83 2f 01 00       	callq  8087d20 <__preinit_array_end+0x280>
 8074d9d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 8074da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074da5:	48 b9 48 01 00 00 00 	movabs $0x148,%rcx
 8074dac:	00 00 00 
 8074daf:	48 01 c8             	add    %rcx,%rax
 8074db2:	8b 08                	mov    (%rax),%ecx
 8074db4:	85 c9                	test   %ecx,%ecx
 8074db6:	0f 84 1b 00 00 00    	je     8074dd7 <elf_output_file+0x3218>
 8074dbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8074dc0:	48 89 c6             	mov    %rax,%rsi
 8074dc3:	48 8d 05 9b 78 01 00 	lea    0x1789b(%rip),%rax        # 808c665 <L.147>
 8074dca:	48 89 c7             	mov    %rax,%rdi
 8074dcd:	b8 00 00 00 00       	mov    $0x0,%eax
 8074dd2:	e8 e9 2c 01 00       	callq  8087ac0 <__preinit_array_end+0x20>
 8074dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074ddb:	48 b9 28 01 00 00 00 	movabs $0x128,%rcx
 8074de2:	00 00 00 
 8074de5:	48 01 c8             	add    %rcx,%rax
 8074de8:	8b 08                	mov    (%rax),%ecx
 8074dea:	83 f9 00             	cmp    $0x0,%ecx
 8074ded:	0f 85 5a 06 00 00    	jne    807544d <elf_output_file+0x388e>
 8074df3:	48 8b 05 9e 90 01 00 	mov    0x1909e(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8074dfa:	48 8b 00             	mov    (%rax),%rax
 8074dfd:	48 89 c6             	mov    %rax,%rsi
 8074e00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074e04:	48 89 c7             	mov    %rax,%rdi
 8074e07:	b8 00 00 00 00       	mov    $0x0,%eax
 8074e0c:	e8 5d 9c ff ff       	callq  806ea6e <sort_syms>
 8074e11:	8b 45 80             	mov    -0x80(%rbp),%eax
 8074e14:	83 c0 03             	add    $0x3,%eax
 8074e17:	83 e0 fc             	and    $0xfffffffc,%eax
 8074e1a:	89 45 80             	mov    %eax,-0x80(%rbp)
 8074e1d:	b8 7f 00 00 00       	mov    $0x7f,%eax
 8074e22:	88 45 b0             	mov    %al,-0x50(%rbp)
 8074e25:	b8 45 00 00 00       	mov    $0x45,%eax
 8074e2a:	88 45 b1             	mov    %al,-0x4f(%rbp)
 8074e2d:	b8 4c 00 00 00       	mov    $0x4c,%eax
 8074e32:	88 45 b2             	mov    %al,-0x4e(%rbp)
 8074e35:	b8 46 00 00 00       	mov    $0x46,%eax
 8074e3a:	88 45 b3             	mov    %al,-0x4d(%rbp)
 8074e3d:	b8 02 00 00 00       	mov    $0x2,%eax
 8074e42:	88 45 b4             	mov    %al,-0x4c(%rbp)
 8074e45:	b8 01 00 00 00       	mov    $0x1,%eax
 8074e4a:	88 45 b5             	mov    %al,-0x4b(%rbp)
 8074e4d:	b8 01 00 00 00       	mov    $0x1,%eax
 8074e52:	88 45 b6             	mov    %al,-0x4a(%rbp)
 8074e55:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
 8074e5b:	e9 05 00 00 00       	jmpq   8074e65 <elf_output_file+0x32a6>
 8074e60:	e9 09 00 00 00       	jmpq   8074e6e <elf_output_file+0x32af>
 8074e65:	83 f8 01             	cmp    $0x1,%eax
 8074e68:	0f 85 13 00 00 00    	jne    8074e81 <elf_output_file+0x32c2>
 8074e6e:	b8 02 00 00 00       	mov    $0x2,%eax
 8074e73:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
 8074e77:	e9 38 00 00 00       	jmpq   8074eb4 <elf_output_file+0x32f5>
 8074e7c:	e9 09 00 00 00       	jmpq   8074e8a <elf_output_file+0x32cb>
 8074e81:	83 f8 02             	cmp    $0x2,%eax
 8074e84:	0f 85 13 00 00 00    	jne    8074e9d <elf_output_file+0x32de>
 8074e8a:	b8 03 00 00 00       	mov    $0x3,%eax
 8074e8f:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
 8074e93:	e9 1c 00 00 00       	jmpq   8074eb4 <elf_output_file+0x32f5>
 8074e98:	e9 09 00 00 00       	jmpq   8074ea6 <elf_output_file+0x32e7>
 8074e9d:	83 f8 03             	cmp    $0x3,%eax
 8074ea0:	0f 85 ba ff ff ff    	jne    8074e60 <elf_output_file+0x32a1>
 8074ea6:	b8 01 00 00 00       	mov    $0x1,%eax
 8074eab:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
 8074eaf:	e9 00 00 00 00       	jmpq   8074eb4 <elf_output_file+0x32f5>
 8074eb4:	b8 3e 00 00 00       	mov    $0x3e,%eax
 8074eb9:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
 8074ebd:	b8 01 00 00 00       	mov    $0x1,%eax
 8074ec2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8074ec5:	8b 45 80             	mov    -0x80(%rbp),%eax
 8074ec8:	48 63 c0             	movslq %eax,%rax
 8074ecb:	48 89 c1             	mov    %rax,%rcx
 8074ece:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 8074ed2:	b8 40 00 00 00       	mov    $0x40,%eax
 8074ed7:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
 8074edb:	b8 40 00 00 00       	mov    $0x40,%eax
 8074ee0:	66 89 45 ea          	mov    %ax,-0x16(%rbp)
 8074ee4:	0f b7 45 8c          	movzwl -0x74(%rbp),%eax
 8074ee8:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
 8074eec:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8074eef:	83 e8 01             	sub    $0x1,%eax
 8074ef2:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
 8074ef6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8074efa:	49 89 c3             	mov    %rax,%r11
 8074efd:	b8 40 00 00 00       	mov    $0x40,%eax
 8074f02:	49 89 c2             	mov    %rax,%r10
 8074f05:	b8 01 00 00 00       	mov    $0x1,%eax
 8074f0a:	48 89 c6             	mov    %rax,%rsi
 8074f0d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 8074f11:	48 89 c7             	mov    %rax,%rdi
 8074f14:	4c 89 d2             	mov    %r10,%rdx
 8074f17:	4c 89 d9             	mov    %r11,%rcx
 8074f1a:	b8 00 00 00 00       	mov    $0x0,%eax
 8074f1f:	e8 cc 2d 01 00       	callq  8087cf0 <__preinit_array_end+0x250>
 8074f24:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8074f27:	b9 38 00 00 00       	mov    $0x38,%ecx
 8074f2c:	48 0f af c1          	imul   %rcx,%rax
 8074f30:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 8074f34:	49 89 cb             	mov    %rcx,%r11
 8074f37:	49 89 c2             	mov    %rax,%r10
 8074f3a:	b8 01 00 00 00       	mov    $0x1,%eax
 8074f3f:	48 89 c6             	mov    %rax,%rsi
 8074f42:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 8074f49:	48 89 c7             	mov    %rax,%rdi
 8074f4c:	4c 89 d2             	mov    %r10,%rdx
 8074f4f:	4c 89 d9             	mov    %r11,%rcx
 8074f52:	b8 00 00 00 00       	mov    $0x0,%eax
 8074f57:	e8 94 2d 01 00       	callq  8087cf0 <__preinit_array_end+0x250>
 8074f5c:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8074f5f:	b9 38 00 00 00       	mov    $0x38,%ecx
 8074f64:	48 0f af c1          	imul   %rcx,%rax
 8074f68:	83 c0 40             	add    $0x40,%eax
 8074f6b:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 8074f71:	b8 01 00 00 00       	mov    $0x1,%eax
 8074f76:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074f7d:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8074f84:	00 00 00 
 8074f87:	48 01 c8             	add    %rcx,%rax
 8074f8a:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074f8d:	8b 10                	mov    (%rax),%edx
 8074f8f:	39 d1                	cmp    %edx,%ecx
 8074f91:	0f 8d 92 01 00 00    	jge    8075129 <elf_output_file+0x356a>
 8074f97:	e9 0e 00 00 00       	jmpq   8074faa <elf_output_file+0x33eb>
 8074f9c:	8b 45 88             	mov    -0x78(%rbp),%eax
 8074f9f:	48 89 c1             	mov    %rax,%rcx
 8074fa2:	83 c0 01             	add    $0x1,%eax
 8074fa5:	89 45 88             	mov    %eax,-0x78(%rbp)
 8074fa8:	eb cf                	jmp    8074f79 <elf_output_file+0x33ba>
 8074faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8074fae:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8074fb5:	00 00 00 
 8074fb8:	48 01 c8             	add    %rcx,%rax
 8074fbb:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8074fbe:	48 63 c9             	movslq %ecx,%rcx
 8074fc1:	48 89 ca             	mov    %rcx,%rdx
 8074fc4:	48 c1 e2 02          	shl    $0x2,%rdx
 8074fc8:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 8074fcc:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
 8074fd3:	48 89 d0             	mov    %rdx,%rax
 8074fd6:	48 01 c1             	add    %rax,%rcx
 8074fd9:	8b 01                	mov    (%rcx),%eax
 8074fdb:	48 63 c0             	movslq %eax,%rax
 8074fde:	48 89 c1             	mov    %rax,%rcx
 8074fe1:	48 c1 e1 03          	shl    $0x3,%rcx
 8074fe5:	48 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%rax
 8074fec:	48 8b 00             	mov    (%rax),%rax
 8074fef:	48 89 ca             	mov    %rcx,%rdx
 8074ff2:	48 01 d0             	add    %rdx,%rax
 8074ff5:	48 8b 08             	mov    (%rax),%rcx
 8074ff8:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
 8074fff:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075006:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807500d:	00 00 00 
 8075010:	48 01 c8             	add    %rcx,%rax
 8075013:	8b 08                	mov    (%rax),%ecx
 8075015:	83 f9 08             	cmp    $0x8,%ecx
 8075018:	0f 84 06 01 00 00    	je     8075124 <elf_output_file+0x3565>
 807501e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075025:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807502c:	00 00 00 
 807502f:	48 01 c8             	add    %rcx,%rax
 8075032:	8b 08                	mov    (%rax),%ecx
 8075034:	83 f9 0b             	cmp    $0xb,%ecx
 8075037:	0f 85 1b 00 00 00    	jne    8075058 <elf_output_file+0x3499>
 807503d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075044:	48 89 c6             	mov    %rax,%rsi
 8075047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807504b:	48 89 c7             	mov    %rax,%rdi
 807504e:	b8 00 00 00 00       	mov    $0x0,%eax
 8075053:	e8 13 c7 ff ff       	callq  807176b <patch_dynsym_undef>
 8075058:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807505f:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 8075066:	00 00 00 
 8075069:	48 01 c8             	add    %rcx,%rax
 807506c:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
 8075072:	48 63 c9             	movslq %ecx,%rcx
 8075075:	48 89 ca             	mov    %rcx,%rdx
 8075078:	48 8b 08             	mov    (%rax),%rcx
 807507b:	48 39 ca             	cmp    %rcx,%rdx
 807507e:	0f 83 2d 00 00 00    	jae    80750b1 <elf_output_file+0x34f2>
 8075084:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8075088:	48 89 c6             	mov    %rax,%rsi
 807508b:	b8 00 00 00 00       	mov    $0x0,%eax
 8075090:	48 89 c7             	mov    %rax,%rdi
 8075093:	b8 00 00 00 00       	mov    $0x0,%eax
 8075098:	e8 43 2c 01 00       	callq  8087ce0 <__preinit_array_end+0x240>
 807509d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 80750a3:	48 89 c1             	mov    %rax,%rcx
 80750a6:	83 c0 01             	add    $0x1,%eax
 80750a9:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 80750af:	eb a7                	jmp    8075058 <elf_output_file+0x3499>
 80750b1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80750b8:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80750bf:	00 00 00 
 80750c2:	48 01 c8             	add    %rcx,%rax
 80750c5:	8b 08                	mov    (%rax),%ecx
 80750c7:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%rbp)
 80750cd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80750d4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80750db:	00 00 00 
 80750de:	48 01 c8             	add    %rcx,%rax
 80750e1:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 80750e5:	49 89 cb             	mov    %rcx,%r11
 80750e8:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
 80750ee:	49 89 ca             	mov    %rcx,%r10
 80750f1:	b9 01 00 00 00       	mov    $0x1,%ecx
 80750f6:	48 89 ce             	mov    %rcx,%rsi
 80750f9:	48 8b 08             	mov    (%rax),%rcx
 80750fc:	48 89 cf             	mov    %rcx,%rdi
 80750ff:	4c 89 d2             	mov    %r10,%rdx
 8075102:	4c 89 d9             	mov    %r11,%rcx
 8075105:	b8 00 00 00 00       	mov    $0x0,%eax
 807510a:	e8 e1 2b 01 00       	callq  8087cf0 <__preinit_array_end+0x250>
 807510f:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 8075115:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
 807511b:	48 01 c8             	add    %rcx,%rax
 807511e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 8075124:	e9 73 fe ff ff       	jmpq   8074f9c <elf_output_file+0x33dd>
 8075129:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 807512f:	48 63 c0             	movslq %eax,%rax
 8075132:	48 89 c1             	mov    %rax,%rcx
 8075135:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8075139:	48 39 c1             	cmp    %rax,%rcx
 807513c:	0f 83 2d 00 00 00    	jae    807516f <elf_output_file+0x35b0>
 8075142:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8075146:	48 89 c6             	mov    %rax,%rsi
 8075149:	b8 00 00 00 00       	mov    $0x0,%eax
 807514e:	48 89 c7             	mov    %rax,%rdi
 8075151:	b8 00 00 00 00       	mov    $0x0,%eax
 8075156:	e8 85 2b 01 00       	callq  8087ce0 <__preinit_array_end+0x240>
 807515b:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 8075161:	48 89 c1             	mov    %rax,%rcx
 8075164:	83 c0 01             	add    $0x1,%eax
 8075167:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 807516d:	eb ba                	jmp    8075129 <elf_output_file+0x356a>
 807516f:	b8 00 00 00 00       	mov    $0x0,%eax
 8075174:	89 45 88             	mov    %eax,-0x78(%rbp)
 8075177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807517b:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8075182:	00 00 00 
 8075185:	48 01 c8             	add    %rcx,%rax
 8075188:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 807518b:	8b 10                	mov    (%rax),%edx
 807518d:	39 d1                	cmp    %edx,%ecx
 807518f:	0f 8d b3 02 00 00    	jge    8075448 <elf_output_file+0x3889>
 8075195:	e9 0e 00 00 00       	jmpq   80751a8 <elf_output_file+0x35e9>
 807519a:	8b 45 88             	mov    -0x78(%rbp),%eax
 807519d:	48 89 c1             	mov    %rax,%rcx
 80751a0:	83 c0 01             	add    $0x1,%eax
 80751a3:	89 45 88             	mov    %eax,-0x78(%rbp)
 80751a6:	eb cf                	jmp    8075177 <elf_output_file+0x35b8>
 80751a8:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
 80751af:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
 80751b6:	b8 40 00 00 00       	mov    $0x40,%eax
 80751bb:	49 89 c2             	mov    %rax,%r10
 80751be:	b8 00 00 00 00       	mov    $0x0,%eax
 80751c3:	48 89 c6             	mov    %rax,%rsi
 80751c6:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 80751cd:	48 89 c7             	mov    %rax,%rdi
 80751d0:	4c 89 d2             	mov    %r10,%rdx
 80751d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80751d8:	e8 d3 1c 01 00       	callq  8086eb0 <memset>
 80751dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80751e1:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 80751e8:	00 00 00 
 80751eb:	48 01 c8             	add    %rcx,%rax
 80751ee:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 80751f1:	48 63 c9             	movslq %ecx,%rcx
 80751f4:	48 89 ca             	mov    %rcx,%rdx
 80751f7:	48 c1 e2 03          	shl    $0x3,%rdx
 80751fb:	48 8b 08             	mov    (%rax),%rcx
 80751fe:	48 89 d0             	mov    %rdx,%rax
 8075201:	48 01 c1             	add    %rax,%rcx
 8075204:	48 8b 01             	mov    (%rcx),%rax
 8075207:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 807520e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075215:	85 c0                	test   %eax,%eax
 8075217:	0f 84 f5 01 00 00    	je     8075412 <elf_output_file+0x3853>
 807521d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 8075224:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 807522b:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8075232:	00 00 00 
 8075235:	48 01 d1             	add    %rdx,%rcx
 8075238:	8b 11                	mov    (%rcx),%edx
 807523a:	89 10                	mov    %edx,(%rax)
 807523c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 8075243:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807524a:	00 00 00 
 807524d:	48 01 c8             	add    %rcx,%rax
 8075250:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8075257:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 807525e:	00 00 00 
 8075261:	48 01 d1             	add    %rdx,%rcx
 8075264:	8b 11                	mov    (%rcx),%edx
 8075266:	89 10                	mov    %edx,(%rax)
 8075268:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 807526f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8075276:	00 00 00 
 8075279:	48 01 c8             	add    %rcx,%rax
 807527c:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8075283:	48 ba 24 00 00 00 00 	movabs $0x24,%rdx
 807528a:	00 00 00 
 807528d:	48 01 d1             	add    %rdx,%rcx
 8075290:	8b 11                	mov    (%rcx),%edx
 8075292:	48 63 d2             	movslq %edx,%rdx
 8075295:	48 89 d1             	mov    %rdx,%rcx
 8075298:	48 89 08             	mov    %rcx,(%rax)
 807529b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 80752a2:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80752a9:	00 00 00 
 80752ac:	48 01 c8             	add    %rcx,%rax
 80752af:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80752b6:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 80752bd:	00 00 00 
 80752c0:	48 01 d1             	add    %rdx,%rcx
 80752c3:	8b 11                	mov    (%rcx),%edx
 80752c5:	48 63 d2             	movslq %edx,%rdx
 80752c8:	48 89 d1             	mov    %rdx,%rcx
 80752cb:	48 89 08             	mov    %rcx,(%rax)
 80752ce:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 80752d5:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 80752dc:	00 00 00 
 80752df:	48 01 c8             	add    %rcx,%rax
 80752e2:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80752e9:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 80752f0:	00 00 00 
 80752f3:	48 01 d1             	add    %rdx,%rcx
 80752f6:	8b 11                	mov    (%rcx),%edx
 80752f8:	89 10                	mov    %edx,(%rax)
 80752fa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075301:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 8075308:	00 00 00 
 807530b:	48 01 c8             	add    %rcx,%rax
 807530e:	48 8b 08             	mov    (%rax),%rcx
 8075311:	85 c9                	test   %ecx,%ecx
 8075313:	0f 84 3c 00 00 00    	je     8075355 <elf_output_file+0x3796>
 8075319:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 8075320:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8075327:	00 00 00 
 807532a:	48 01 c8             	add    %rcx,%rax
 807532d:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8075334:	48 ba 58 00 00 00 00 	movabs $0x58,%rdx
 807533b:	00 00 00 
 807533e:	48 01 d1             	add    %rdx,%rcx
 8075341:	48 8b 11             	mov    (%rcx),%rdx
 8075344:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 807534b:	00 00 00 
 807534e:	48 01 ca             	add    %rcx,%rdx
 8075351:	8b 0a                	mov    (%rdx),%ecx
 8075353:	89 08                	mov    %ecx,(%rax)
 8075355:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 807535c:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8075363:	00 00 00 
 8075366:	48 01 c8             	add    %rcx,%rax
 8075369:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8075370:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 8075377:	00 00 00 
 807537a:	48 01 d1             	add    %rdx,%rcx
 807537d:	8b 11                	mov    (%rcx),%edx
 807537f:	48 63 d2             	movslq %edx,%rdx
 8075382:	48 89 d1             	mov    %rdx,%rcx
 8075385:	48 89 08             	mov    %rcx,(%rax)
 8075388:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 807538f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8075396:	00 00 00 
 8075399:	48 01 c8             	add    %rcx,%rax
 807539c:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80753a3:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 80753aa:	00 00 00 
 80753ad:	48 01 d1             	add    %rdx,%rcx
 80753b0:	48 8b 11             	mov    (%rcx),%rdx
 80753b3:	48 89 10             	mov    %rdx,(%rax)
 80753b6:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 80753bd:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80753c4:	00 00 00 
 80753c7:	48 01 c8             	add    %rcx,%rax
 80753ca:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80753d1:	48 ba 48 00 00 00 00 	movabs $0x48,%rdx
 80753d8:	00 00 00 
 80753db:	48 01 d1             	add    %rdx,%rcx
 80753de:	48 8b 11             	mov    (%rcx),%rdx
 80753e1:	48 89 10             	mov    %rdx,(%rax)
 80753e4:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 80753eb:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80753f2:	00 00 00 
 80753f5:	48 01 c8             	add    %rcx,%rax
 80753f8:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80753ff:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 8075406:	00 00 00 
 8075409:	48 01 d1             	add    %rdx,%rcx
 807540c:	48 8b 11             	mov    (%rcx),%rdx
 807540f:	48 89 10             	mov    %rdx,(%rax)
 8075412:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8075416:	49 89 c3             	mov    %rax,%r11
 8075419:	b8 40 00 00 00       	mov    $0x40,%eax
 807541e:	49 89 c2             	mov    %rax,%r10
 8075421:	b8 01 00 00 00       	mov    $0x1,%eax
 8075426:	48 89 c6             	mov    %rax,%rsi
 8075429:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 8075430:	48 89 c7             	mov    %rax,%rdi
 8075433:	4c 89 d2             	mov    %r10,%rdx
 8075436:	4c 89 d9             	mov    %r11,%rcx
 8075439:	b8 00 00 00 00       	mov    $0x0,%eax
 807543e:	e8 ad 28 01 00       	callq  8087cf0 <__preinit_array_end+0x250>
 8075443:	e9 52 fd ff ff       	jmpq   807519a <elf_output_file+0x35db>
 8075448:	e9 22 00 00 00       	jmpq   807546f <elf_output_file+0x38b0>
 807544d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 8075451:	49 89 c2             	mov    %rax,%r10
 8075454:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8075458:	48 89 c6             	mov    %rax,%rsi
 807545b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807545f:	48 89 c7             	mov    %rax,%rdi
 8075462:	4c 89 d2             	mov    %r10,%rdx
 8075465:	b8 00 00 00 00       	mov    $0x0,%eax
 807546a:	e8 6c c1 ff ff       	callq  80715db <tcc_output_binary>
 807546f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8075473:	48 89 c7             	mov    %rax,%rdi
 8075476:	b8 00 00 00 00       	mov    $0x0,%eax
 807547b:	e8 90 26 01 00       	callq  8087b10 <__preinit_array_end+0x70>
 8075480:	b8 00 00 00 00       	mov    $0x0,%eax
 8075485:	89 45 9c             	mov    %eax,-0x64(%rbp)
 8075488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807548c:	48 b9 b8 00 00 00 00 	movabs $0xb8,%rcx
 8075493:	00 00 00 
 8075496:	48 01 c8             	add    %rcx,%rax
 8075499:	48 8b 08             	mov    (%rax),%rcx
 807549c:	48 89 cf             	mov    %rcx,%rdi
 807549f:	b8 00 00 00 00       	mov    $0x0,%eax
 80754a4:	e8 8d 6a fd ff       	callq  804bf36 <tcc_free>
 80754a9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80754ad:	48 89 c7             	mov    %rax,%rdi
 80754b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80754b5:	e8 7c 6a fd ff       	callq  804bf36 <tcc_free>
 80754ba:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 80754c1:	48 89 c7             	mov    %rax,%rdi
 80754c4:	b8 00 00 00 00       	mov    $0x0,%eax
 80754c9:	e8 68 6a fd ff       	callq  804bf36 <tcc_free>
 80754ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80754d2:	48 b9 a8 00 00 00 00 	movabs $0xa8,%rcx
 80754d9:	00 00 00 
 80754dc:	48 01 c8             	add    %rcx,%rax
 80754df:	48 8b 08             	mov    (%rax),%rcx
 80754e2:	48 89 cf             	mov    %rcx,%rdi
 80754e5:	b8 00 00 00 00       	mov    $0x0,%eax
 80754ea:	e8 47 6a fd ff       	callq  804bf36 <tcc_free>
 80754ef:	8b 45 9c             	mov    -0x64(%rbp),%eax
 80754f2:	e9 00 00 00 00       	jmpq   80754f7 <elf_output_file+0x3938>
 80754f7:	c9                   	leaveq 
 80754f8:	c3                   	retq   

00000000080754f9 <tcc_output_file>:
 80754f9:	55                   	push   %rbp
 80754fa:	48 89 e5             	mov    %rsp,%rbp
 80754fd:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8075504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8075508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807550c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8075510:	48 89 c6             	mov    %rax,%rsi
 8075513:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8075517:	48 89 c7             	mov    %rax,%rdi
 807551a:	b8 00 00 00 00       	mov    $0x0,%eax
 807551f:	e8 9b c6 ff ff       	callq  8071bbf <elf_output_file>
 8075524:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8075527:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807552a:	e9 00 00 00 00       	jmpq   807552f <tcc_output_file+0x36>
 807552f:	c9                   	leaveq 
 8075530:	c3                   	retq   

0000000008075531 <load_data>:
 8075531:	55                   	push   %rbp
 8075532:	48 89 e5             	mov    %rsp,%rbp
 8075535:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807553c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8075540:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8075544:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8075548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807554c:	48 89 c7             	mov    %rax,%rdi
 807554f:	b8 00 00 00 00       	mov    $0x0,%eax
 8075554:	e8 ff 69 fd ff       	callq  804bf58 <tcc_malloc>
 8075559:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807555d:	b8 00 00 00 00       	mov    $0x0,%eax
 8075562:	49 89 c2             	mov    %rax,%r10
 8075565:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8075569:	48 89 c6             	mov    %rax,%rsi
 807556c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807556f:	48 89 c7             	mov    %rax,%rdi
 8075572:	4c 89 d2             	mov    %r10,%rdx
 8075575:	b8 00 00 00 00       	mov    $0x0,%eax
 807557a:	e8 a1 26 01 00       	callq  8087c20 <__preinit_array_end+0x180>
 807557f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8075582:	49 89 c2             	mov    %rax,%r10
 8075585:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8075589:	48 89 c6             	mov    %rax,%rsi
 807558c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807558f:	48 89 c7             	mov    %rax,%rdi
 8075592:	4c 89 d2             	mov    %r10,%rdx
 8075595:	b8 00 00 00 00       	mov    $0x0,%eax
 807559a:	e8 71 26 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 807559f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80755a3:	e9 00 00 00 00       	jmpq   80755a8 <load_data+0x77>
 80755a8:	c9                   	leaveq 
 80755a9:	c3                   	retq   

00000000080755aa <tcc_load_object_file>:
 80755aa:	55                   	push   %rbp
 80755ab:	48 89 e5             	mov    %rsp,%rbp
 80755ae:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
 80755b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80755b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80755bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80755c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80755c6:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
 80755cc:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
 80755d2:	b8 40 00 00 00       	mov    $0x40,%eax
 80755d7:	49 89 c2             	mov    %rax,%r10
 80755da:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 80755de:	48 89 c6             	mov    %rax,%rsi
 80755e1:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80755e4:	48 89 c7             	mov    %rax,%rdi
 80755e7:	4c 89 d2             	mov    %r10,%rdx
 80755ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80755ef:	e8 1c 26 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 80755f4:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 80755fb:	00 00 00 
 80755fe:	48 39 c8             	cmp    %rcx,%rax
 8075601:	0f 84 05 00 00 00    	je     807560c <tcc_load_object_file+0x62>
 8075607:	e9 6f 00 00 00       	jmpq   807567b <tcc_load_object_file+0xd1>
 807560c:	0f b6 45 a8          	movzbl -0x58(%rbp),%eax
 8075610:	83 f8 7f             	cmp    $0x7f,%eax
 8075613:	0f 85 2c 00 00 00    	jne    8075645 <tcc_load_object_file+0x9b>
 8075619:	0f b6 45 a9          	movzbl -0x57(%rbp),%eax
 807561d:	83 f8 45             	cmp    $0x45,%eax
 8075620:	0f 85 1f 00 00 00    	jne    8075645 <tcc_load_object_file+0x9b>
 8075626:	0f b6 45 aa          	movzbl -0x56(%rbp),%eax
 807562a:	83 f8 4c             	cmp    $0x4c,%eax
 807562d:	0f 85 12 00 00 00    	jne    8075645 <tcc_load_object_file+0x9b>
 8075633:	0f b6 45 ab          	movzbl -0x55(%rbp),%eax
 8075637:	83 f8 46             	cmp    $0x46,%eax
 807563a:	0f 85 05 00 00 00    	jne    8075645 <tcc_load_object_file+0x9b>
 8075640:	e9 05 00 00 00       	jmpq   807564a <tcc_load_object_file+0xa0>
 8075645:	e9 31 00 00 00       	jmpq   807567b <tcc_load_object_file+0xd1>
 807564a:	0f b7 45 b8          	movzwl -0x48(%rbp),%eax
 807564e:	83 f8 01             	cmp    $0x1,%eax
 8075651:	0f 84 05 00 00 00    	je     807565c <tcc_load_object_file+0xb2>
 8075657:	e9 1f 00 00 00       	jmpq   807567b <tcc_load_object_file+0xd1>
 807565c:	0f b6 45 ad          	movzbl -0x53(%rbp),%eax
 8075660:	83 f8 01             	cmp    $0x1,%eax
 8075663:	0f 85 12 00 00 00    	jne    807567b <tcc_load_object_file+0xd1>
 8075669:	0f b7 45 ba          	movzwl -0x46(%rbp),%eax
 807566d:	83 f8 3e             	cmp    $0x3e,%eax
 8075670:	0f 85 05 00 00 00    	jne    807567b <tcc_load_object_file+0xd1>
 8075676:	e9 1e 00 00 00       	jmpq   8075699 <tcc_load_object_file+0xef>
 807567b:	48 8d 05 ea 6f 01 00 	lea    0x16fea(%rip),%rax        # 808c66c <L.148>
 8075682:	48 89 c7             	mov    %rax,%rdi
 8075685:	b8 00 00 00 00       	mov    $0x0,%eax
 807568a:	e8 5e 7e fd ff       	callq  804d4ed <tcc_error_noabort>
 807568f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8075694:	e9 ef 13 00 00       	jmpq   8076a88 <tcc_load_object_file+0x14de>
 8075699:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807569d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80756a1:	48 01 c8             	add    %rcx,%rax
 80756a4:	0f b7 4d e4          	movzwl -0x1c(%rbp),%ecx
 80756a8:	c1 e1 06             	shl    $0x6,%ecx
 80756ab:	48 89 ca             	mov    %rcx,%rdx
 80756ae:	49 89 d2             	mov    %rdx,%r10
 80756b1:	48 89 c1             	mov    %rax,%rcx
 80756b4:	48 89 ce             	mov    %rcx,%rsi
 80756b7:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80756ba:	48 89 c7             	mov    %rax,%rdi
 80756bd:	4c 89 d2             	mov    %r10,%rdx
 80756c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80756c5:	e8 67 fe ff ff       	callq  8075531 <load_data>
 80756ca:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 80756ce:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
 80756d2:	b9 18 00 00 00       	mov    $0x18,%ecx
 80756d7:	48 0f af c1          	imul   %rcx,%rax
 80756db:	48 89 c1             	mov    %rax,%rcx
 80756de:	48 89 cf             	mov    %rcx,%rdi
 80756e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80756e6:	e8 e1 68 fd ff       	callq  804bfcc <tcc_mallocz>
 80756eb:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 80756f2:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
 80756f6:	48 63 c0             	movslq %eax,%rax
 80756f9:	48 89 c1             	mov    %rax,%rcx
 80756fc:	48 c1 e1 06          	shl    $0x6,%rcx
 8075700:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8075704:	48 89 ca             	mov    %rcx,%rdx
 8075707:	48 01 d0             	add    %rdx,%rax
 807570a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 807570e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075712:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8075719:	00 00 00 
 807571c:	48 01 c8             	add    %rcx,%rax
 807571f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8075723:	48 8b 10             	mov    (%rax),%rdx
 8075726:	48 01 d1             	add    %rdx,%rcx
 8075729:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 807572d:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8075734:	00 00 00 
 8075737:	48 01 d0             	add    %rdx,%rax
 807573a:	48 8b 10             	mov    (%rax),%rdx
 807573d:	49 89 d2             	mov    %rdx,%r10
 8075740:	48 89 c8             	mov    %rcx,%rax
 8075743:	48 89 c6             	mov    %rax,%rsi
 8075746:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8075749:	48 89 c7             	mov    %rax,%rdi
 807574c:	4c 89 d2             	mov    %r10,%rdx
 807574f:	b8 00 00 00 00       	mov    $0x0,%eax
 8075754:	e8 d8 fd ff ff       	callq  8075531 <load_data>
 8075759:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 8075760:	b8 00 00 00 00       	mov    $0x0,%eax
 8075765:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 807576c:	b8 00 00 00 00       	mov    $0x0,%eax
 8075771:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 8075778:	b8 00 00 00 00       	mov    $0x0,%eax
 807577d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 8075784:	b8 00 00 00 00       	mov    $0x0,%eax
 8075789:	89 45 80             	mov    %eax,-0x80(%rbp)
 807578c:	b8 01 00 00 00       	mov    $0x1,%eax
 8075791:	89 45 90             	mov    %eax,-0x70(%rbp)
 8075794:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075797:	0f b7 4d e4          	movzwl -0x1c(%rbp),%ecx
 807579b:	39 c8                	cmp    %ecx,%eax
 807579d:	0f 8d b2 01 00 00    	jge    8075955 <tcc_load_object_file+0x3ab>
 80757a3:	e9 0e 00 00 00       	jmpq   80757b6 <tcc_load_object_file+0x20c>
 80757a8:	8b 45 90             	mov    -0x70(%rbp),%eax
 80757ab:	48 89 c1             	mov    %rax,%rcx
 80757ae:	83 c0 01             	add    $0x1,%eax
 80757b1:	89 45 90             	mov    %eax,-0x70(%rbp)
 80757b4:	eb de                	jmp    8075794 <tcc_load_object_file+0x1ea>
 80757b6:	8b 45 90             	mov    -0x70(%rbp),%eax
 80757b9:	48 63 c0             	movslq %eax,%rax
 80757bc:	48 89 c1             	mov    %rax,%rcx
 80757bf:	48 c1 e1 06          	shl    $0x6,%rcx
 80757c3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80757c7:	48 89 ca             	mov    %rcx,%rdx
 80757ca:	48 01 d0             	add    %rdx,%rax
 80757cd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 80757d1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80757d5:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80757dc:	00 00 00 
 80757df:	48 01 c8             	add    %rcx,%rax
 80757e2:	8b 08                	mov    (%rax),%ecx
 80757e4:	83 f9 02             	cmp    $0x2,%ecx
 80757e7:	0f 85 63 01 00 00    	jne    8075950 <tcc_load_object_file+0x3a6>
 80757ed:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 80757f4:	85 c0                	test   %eax,%eax
 80757f6:	0f 84 24 00 00 00    	je     8075820 <tcc_load_object_file+0x276>
 80757fc:	48 8d 05 7d 6e 01 00 	lea    0x16e7d(%rip),%rax        # 808c680 <L.149>
 8075803:	48 89 c7             	mov    %rax,%rdi
 8075806:	b8 00 00 00 00       	mov    $0x0,%eax
 807580b:	e8 dd 7c fd ff       	callq  804d4ed <tcc_error_noabort>
 8075810:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8075815:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
 807581b:	e9 e8 11 00 00       	jmpq   8076a08 <tcc_load_object_file+0x145e>
 8075820:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075824:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807582b:	00 00 00 
 807582e:	48 01 c8             	add    %rcx,%rax
 8075831:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
 8075838:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 807583f:	48 8b 00             	mov    (%rax),%rax
 8075842:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8075849:	00 00 00 
 807584c:	31 d2                	xor    %edx,%edx
 807584e:	f7 f1                	div    %ecx
 8075850:	89 45 80             	mov    %eax,-0x80(%rbp)
 8075853:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075857:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807585e:	00 00 00 
 8075861:	48 01 c8             	add    %rcx,%rax
 8075864:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8075868:	48 8b 10             	mov    (%rax),%rdx
 807586b:	48 01 d1             	add    %rdx,%rcx
 807586e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075872:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8075879:	00 00 00 
 807587c:	48 01 d0             	add    %rdx,%rax
 807587f:	48 8b 10             	mov    (%rax),%rdx
 8075882:	49 89 d2             	mov    %rdx,%r10
 8075885:	48 89 c8             	mov    %rcx,%rax
 8075888:	48 89 c6             	mov    %rax,%rsi
 807588b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807588e:	48 89 c7             	mov    %rax,%rdi
 8075891:	4c 89 d2             	mov    %r10,%rdx
 8075894:	b8 00 00 00 00       	mov    $0x0,%eax
 8075899:	e8 93 fc ff ff       	callq  8075531 <load_data>
 807589e:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 80758a5:	8b 45 90             	mov    -0x70(%rbp),%eax
 80758a8:	48 63 c0             	movslq %eax,%rax
 80758ab:	48 89 c1             	mov    %rax,%rcx
 80758ae:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80758b5:	00 00 00 
 80758b8:	48 0f af c8          	imul   %rax,%rcx
 80758bc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80758c3:	48 89 ca             	mov    %rcx,%rdx
 80758c6:	48 01 d0             	add    %rdx,%rax
 80758c9:	48 8b 0d c8 85 01 00 	mov    0x185c8(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80758d0:	48 8b 09             	mov    (%rcx),%rcx
 80758d3:	48 89 08             	mov    %rcx,(%rax)
 80758d6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80758da:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 80758e1:	00 00 00 
 80758e4:	48 01 c8             	add    %rcx,%rax
 80758e7:	8b 08                	mov    (%rax),%ecx
 80758e9:	48 89 c8             	mov    %rcx,%rax
 80758ec:	48 c1 e0 06          	shl    $0x6,%rax
 80758f0:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 80758f4:	48 89 c2             	mov    %rax,%rdx
 80758f7:	48 01 d1             	add    %rdx,%rcx
 80758fa:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
 80758fe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075902:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8075909:	00 00 00 
 807590c:	48 01 c8             	add    %rcx,%rax
 807590f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8075913:	48 8b 10             	mov    (%rax),%rdx
 8075916:	48 01 d1             	add    %rdx,%rcx
 8075919:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 807591d:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8075924:	00 00 00 
 8075927:	48 01 d0             	add    %rdx,%rax
 807592a:	48 8b 10             	mov    (%rax),%rdx
 807592d:	49 89 d2             	mov    %rdx,%r10
 8075930:	48 89 c8             	mov    %rcx,%rax
 8075933:	48 89 c6             	mov    %rax,%rsi
 8075936:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8075939:	48 89 c7             	mov    %rax,%rdi
 807593c:	4c 89 d2             	mov    %r10,%rdx
 807593f:	b8 00 00 00 00       	mov    $0x0,%eax
 8075944:	e8 e8 fb ff ff       	callq  8075531 <load_data>
 8075949:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 8075950:	e9 53 fe ff ff       	jmpq   80757a8 <tcc_load_object_file+0x1fe>
 8075955:	b8 01 00 00 00       	mov    $0x1,%eax
 807595a:	89 45 90             	mov    %eax,-0x70(%rbp)
 807595d:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075960:	0f b7 4d e4          	movzwl -0x1c(%rbp),%ecx
 8075964:	39 c8                	cmp    %ecx,%eax
 8075966:	0f 8d 44 06 00 00    	jge    8075fb0 <tcc_load_object_file+0xa06>
 807596c:	e9 0e 00 00 00       	jmpq   807597f <tcc_load_object_file+0x3d5>
 8075971:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075974:	48 89 c1             	mov    %rax,%rcx
 8075977:	83 c0 01             	add    $0x1,%eax
 807597a:	89 45 90             	mov    %eax,-0x70(%rbp)
 807597d:	eb de                	jmp    807595d <tcc_load_object_file+0x3b3>
 807597f:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075982:	0f b7 4d e6          	movzwl -0x1a(%rbp),%ecx
 8075986:	39 c8                	cmp    %ecx,%eax
 8075988:	0f 85 05 00 00 00    	jne    8075993 <tcc_load_object_file+0x3e9>
 807598e:	e9 de ff ff ff       	jmpq   8075971 <tcc_load_object_file+0x3c7>
 8075993:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075996:	48 63 c0             	movslq %eax,%rax
 8075999:	48 89 c1             	mov    %rax,%rcx
 807599c:	48 c1 e1 06          	shl    $0x6,%rcx
 80759a0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80759a4:	48 89 ca             	mov    %rcx,%rdx
 80759a7:	48 01 d0             	add    %rdx,%rax
 80759aa:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 80759ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80759b2:	8b 08                	mov    (%rax),%ecx
 80759b4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 80759bb:	48 89 ca             	mov    %rcx,%rdx
 80759be:	48 01 d0             	add    %rdx,%rax
 80759c1:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 80759c8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80759cc:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80759d3:	00 00 00 
 80759d6:	48 01 c8             	add    %rcx,%rax
 80759d9:	8b 08                	mov    (%rax),%ecx
 80759db:	83 f9 01             	cmp    $0x1,%ecx
 80759de:	0f 84 b7 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 80759e4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80759e8:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80759ef:	00 00 00 
 80759f2:	48 01 c8             	add    %rcx,%rax
 80759f5:	8b 08                	mov    (%rax),%ecx
 80759f7:	83 f9 04             	cmp    $0x4,%ecx
 80759fa:	0f 84 9b 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 8075a00:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075a04:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075a0b:	00 00 00 
 8075a0e:	48 01 c8             	add    %rcx,%rax
 8075a11:	8b 08                	mov    (%rax),%ecx
 8075a13:	83 f9 08             	cmp    $0x8,%ecx
 8075a16:	0f 84 7f 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 8075a1c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075a20:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075a27:	00 00 00 
 8075a2a:	48 01 c8             	add    %rcx,%rax
 8075a2d:	8b 08                	mov    (%rax),%ecx
 8075a2f:	83 f9 10             	cmp    $0x10,%ecx
 8075a32:	0f 84 63 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 8075a38:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075a3c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075a43:	00 00 00 
 8075a46:	48 01 c8             	add    %rcx,%rax
 8075a49:	8b 08                	mov    (%rax),%ecx
 8075a4b:	83 f9 0e             	cmp    $0xe,%ecx
 8075a4e:	0f 84 47 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 8075a54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075a58:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075a5f:	00 00 00 
 8075a62:	48 01 c8             	add    %rcx,%rax
 8075a65:	8b 08                	mov    (%rax),%ecx
 8075a67:	83 f9 0f             	cmp    $0xf,%ecx
 8075a6a:	0f 84 2b 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 8075a70:	48 8d 05 2d 6c 01 00 	lea    0x16c2d(%rip),%rax        # 808c6a4 <L.150>
 8075a77:	48 89 c6             	mov    %rax,%rsi
 8075a7a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8075a81:	48 89 c7             	mov    %rax,%rdi
 8075a84:	b8 00 00 00 00       	mov    $0x0,%eax
 8075a89:	e8 52 17 01 00       	callq  80871e0 <strcmp>
 8075a8e:	85 c0                	test   %eax,%eax
 8075a90:	0f 84 05 00 00 00    	je     8075a9b <tcc_load_object_file+0x4f1>
 8075a96:	e9 d6 fe ff ff       	jmpq   8075971 <tcc_load_object_file+0x3c7>
 8075a9b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075a9f:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8075aa6:	00 00 00 
 8075aa9:	48 01 c8             	add    %rcx,%rax
 8075aac:	48 8b 08             	mov    (%rax),%rcx
 8075aaf:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8075ab6:	00 00 00 
 8075ab9:	48 39 c1             	cmp    %rax,%rcx
 8075abc:	0f 83 1e 00 00 00    	jae    8075ae0 <tcc_load_object_file+0x536>
 8075ac2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075ac6:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8075acd:	00 00 00 
 8075ad0:	48 01 c8             	add    %rcx,%rax
 8075ad3:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8075ada:	00 00 00 
 8075add:	48 89 08             	mov    %rcx,(%rax)
 8075ae0:	b8 01 00 00 00       	mov    $0x1,%eax
 8075ae5:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8075ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8075aec:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 8075af3:	00 00 00 
 8075af6:	48 01 c8             	add    %rcx,%rax
 8075af9:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 8075afc:	8b 10                	mov    (%rax),%edx
 8075afe:	39 d1                	cmp    %edx,%ecx
 8075b00:	0f 8d fe 00 00 00    	jge    8075c04 <tcc_load_object_file+0x65a>
 8075b06:	e9 0e 00 00 00       	jmpq   8075b19 <tcc_load_object_file+0x56f>
 8075b0b:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8075b0e:	48 89 c1             	mov    %rax,%rcx
 8075b11:	83 c0 01             	add    $0x1,%eax
 8075b14:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8075b17:	eb cf                	jmp    8075ae8 <tcc_load_object_file+0x53e>
 8075b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8075b1d:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8075b24:	00 00 00 
 8075b27:	48 01 c8             	add    %rcx,%rax
 8075b2a:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 8075b2d:	48 63 c9             	movslq %ecx,%rcx
 8075b30:	48 89 ca             	mov    %rcx,%rdx
 8075b33:	48 c1 e2 03          	shl    $0x3,%rdx
 8075b37:	48 8b 08             	mov    (%rax),%rcx
 8075b3a:	48 89 d0             	mov    %rdx,%rax
 8075b3d:	48 01 c1             	add    %rax,%rcx
 8075b40:	48 8b 01             	mov    (%rcx),%rax
 8075b43:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 8075b4a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075b51:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 8075b58:	00 00 00 
 8075b5b:	48 01 c8             	add    %rcx,%rax
 8075b5e:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 8075b65:	48 89 ce             	mov    %rcx,%rsi
 8075b68:	48 89 c7             	mov    %rax,%rdi
 8075b6b:	b8 00 00 00 00       	mov    $0x0,%eax
 8075b70:	e8 6b 16 01 00       	callq  80871e0 <strcmp>
 8075b75:	85 c0                	test   %eax,%eax
 8075b77:	0f 84 05 00 00 00    	je     8075b82 <tcc_load_object_file+0x5d8>
 8075b7d:	e9 7d 00 00 00       	jmpq   8075bff <tcc_load_object_file+0x655>
 8075b82:	b8 0d 00 00 00       	mov    $0xd,%eax
 8075b87:	49 89 c2             	mov    %rax,%r10
 8075b8a:	48 8d 05 1c 6b 01 00 	lea    0x16b1c(%rip),%rax        # 808c6ad <L.151>
 8075b91:	48 89 c6             	mov    %rax,%rsi
 8075b94:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8075b9b:	48 89 c7             	mov    %rax,%rdi
 8075b9e:	4c 89 d2             	mov    %r10,%rdx
 8075ba1:	b8 00 00 00 00       	mov    $0x0,%eax
 8075ba6:	e8 b5 17 01 00       	callq  8087360 <strncmp>
 8075bab:	85 c0                	test   %eax,%eax
 8075bad:	0f 84 05 00 00 00    	je     8075bb8 <tcc_load_object_file+0x60e>
 8075bb3:	e9 42 00 00 00       	jmpq   8075bfa <tcc_load_object_file+0x650>
 8075bb8:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075bbb:	48 63 c0             	movslq %eax,%rax
 8075bbe:	48 89 c1             	mov    %rax,%rcx
 8075bc1:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8075bc8:	00 00 00 
 8075bcb:	48 0f af c8          	imul   %rax,%rcx
 8075bcf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075bd6:	48 89 ca             	mov    %rcx,%rdx
 8075bd9:	48 01 d0             	add    %rdx,%rax
 8075bdc:	48 b9 11 00 00 00 00 	movabs $0x11,%rcx
 8075be3:	00 00 00 
 8075be6:	48 01 c8             	add    %rcx,%rax
 8075be9:	b9 01 00 00 00       	mov    $0x1,%ecx
 8075bee:	88 08                	mov    %cl,(%rax)
 8075bf0:	e9 b6 03 00 00       	jmpq   8075fab <tcc_load_object_file+0xa01>
 8075bf5:	e9 05 00 00 00       	jmpq   8075bff <tcc_load_object_file+0x655>
 8075bfa:	e9 e3 00 00 00       	jmpq   8075ce2 <tcc_load_object_file+0x738>
 8075bff:	e9 07 ff ff ff       	jmpq   8075b0b <tcc_load_object_file+0x561>
 8075c04:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075c08:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075c0f:	00 00 00 
 8075c12:	48 01 c8             	add    %rcx,%rax
 8075c15:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 8075c19:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8075c20:	00 00 00 
 8075c23:	48 01 d1             	add    %rdx,%rcx
 8075c26:	8b 11                	mov    (%rcx),%edx
 8075c28:	49 89 d3             	mov    %rdx,%r11
 8075c2b:	8b 08                	mov    (%rax),%ecx
 8075c2d:	49 89 ca             	mov    %rcx,%r10
 8075c30:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8075c37:	48 89 c6             	mov    %rax,%rsi
 8075c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8075c3e:	48 89 c7             	mov    %rax,%rdi
 8075c41:	4c 89 d2             	mov    %r10,%rdx
 8075c44:	4c 89 d9             	mov    %r11,%rcx
 8075c47:	b8 00 00 00 00       	mov    $0x0,%eax
 8075c4c:	e8 a7 68 fd ff       	callq  804c4f8 <new_section>
 8075c51:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 8075c58:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075c5f:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8075c66:	00 00 00 
 8075c69:	48 01 c8             	add    %rcx,%rax
 8075c6c:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 8075c70:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 8075c77:	00 00 00 
 8075c7a:	48 01 d1             	add    %rdx,%rcx
 8075c7d:	8b 11                	mov    (%rcx),%edx
 8075c7f:	89 10                	mov    %edx,(%rax)
 8075c81:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075c88:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8075c8f:	00 00 00 
 8075c92:	48 01 c8             	add    %rcx,%rax
 8075c95:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 8075c99:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 8075ca0:	00 00 00 
 8075ca3:	48 01 d1             	add    %rdx,%rcx
 8075ca6:	8b 11                	mov    (%rcx),%edx
 8075ca8:	89 10                	mov    %edx,(%rax)
 8075caa:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075cad:	48 63 c0             	movslq %eax,%rax
 8075cb0:	48 89 c1             	mov    %rax,%rcx
 8075cb3:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8075cba:	00 00 00 
 8075cbd:	48 0f af c8          	imul   %rax,%rcx
 8075cc1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075cc8:	48 89 ca             	mov    %rcx,%rdx
 8075ccb:	48 01 d0             	add    %rdx,%rax
 8075cce:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8075cd5:	00 00 00 
 8075cd8:	48 01 c8             	add    %rcx,%rax
 8075cdb:	b9 01 00 00 00       	mov    $0x1,%ecx
 8075ce0:	88 08                	mov    %cl,(%rax)
 8075ce2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075ce6:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075ced:	00 00 00 
 8075cf0:	48 01 c8             	add    %rcx,%rax
 8075cf3:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 8075cfa:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8075d01:	00 00 00 
 8075d04:	48 01 d1             	add    %rdx,%rcx
 8075d07:	8b 10                	mov    (%rax),%edx
 8075d09:	8b 01                	mov    (%rcx),%eax
 8075d0b:	48 39 c2             	cmp    %rax,%rdx
 8075d0e:	0f 84 19 00 00 00    	je     8075d2d <tcc_load_object_file+0x783>
 8075d14:	48 8d 05 ae 69 01 00 	lea    0x169ae(%rip),%rax        # 808c6c9 <L.153>
 8075d1b:	48 89 c7             	mov    %rax,%rdi
 8075d1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8075d23:	e8 c5 77 fd ff       	callq  804d4ed <tcc_error_noabort>
 8075d28:	e9 e3 fa ff ff       	jmpq   8075810 <tcc_load_object_file+0x266>
 8075d2d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075d34:	8b 08                	mov    (%rax),%ecx
 8075d36:	89 4d 88             	mov    %ecx,-0x78(%rbp)
 8075d39:	48 8d 05 9e 69 01 00 	lea    0x1699e(%rip),%rax        # 808c6de <L.154>
 8075d40:	48 89 c6             	mov    %rax,%rsi
 8075d43:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8075d4a:	48 89 c7             	mov    %rax,%rdi
 8075d4d:	b8 00 00 00 00       	mov    $0x0,%eax
 8075d52:	e8 89 14 01 00       	callq  80871e0 <strcmp>
 8075d57:	b9 00 00 00 00       	mov    $0x0,%ecx
 8075d5c:	39 c1                	cmp    %eax,%ecx
 8075d5e:	0f 85 0e 00 00 00    	jne    8075d72 <tcc_load_object_file+0x7c8>
 8075d64:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075d67:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
 8075d6d:	e9 e7 00 00 00       	jmpq   8075e59 <tcc_load_object_file+0x8af>
 8075d72:	48 8d 05 6b 69 01 00 	lea    0x1696b(%rip),%rax        # 808c6e4 <L.155>
 8075d79:	48 89 c6             	mov    %rax,%rsi
 8075d7c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8075d83:	48 89 c7             	mov    %rax,%rdi
 8075d86:	b8 00 00 00 00       	mov    $0x0,%eax
 8075d8b:	e8 50 14 01 00       	callq  80871e0 <strcmp>
 8075d90:	b9 00 00 00 00       	mov    $0x0,%ecx
 8075d95:	39 c1                	cmp    %eax,%ecx
 8075d97:	0f 85 0e 00 00 00    	jne    8075dab <tcc_load_object_file+0x801>
 8075d9d:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075da0:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
 8075da6:	e9 ae 00 00 00       	jmpq   8075e59 <tcc_load_object_file+0x8af>
 8075dab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075daf:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8075db6:	00 00 00 
 8075db9:	48 01 c8             	add    %rcx,%rax
 8075dbc:	48 8b 08             	mov    (%rax),%rcx
 8075dbf:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 8075dc6:	00 00 00 
 8075dc9:	48 29 c1             	sub    %rax,%rcx
 8075dcc:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
 8075dcf:	8b 45 88             	mov    -0x78(%rbp),%eax
 8075dd2:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
 8075dd5:	48 01 c8             	add    %rcx,%rax
 8075dd8:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
 8075ddb:	83 f1 ff             	xor    $0xffffffff,%ecx
 8075dde:	48 21 c8             	and    %rcx,%rax
 8075de1:	89 45 88             	mov    %eax,-0x78(%rbp)
 8075de4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075de8:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8075def:	00 00 00 
 8075df2:	48 01 c8             	add    %rcx,%rax
 8075df5:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 8075dfc:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 8075e03:	00 00 00 
 8075e06:	48 01 d1             	add    %rdx,%rcx
 8075e09:	8b 11                	mov    (%rcx),%edx
 8075e0b:	48 63 d2             	movslq %edx,%rdx
 8075e0e:	48 8b 08             	mov    (%rax),%rcx
 8075e11:	48 89 d0             	mov    %rdx,%rax
 8075e14:	48 39 c1             	cmp    %rax,%rcx
 8075e17:	0f 86 29 00 00 00    	jbe    8075e46 <tcc_load_object_file+0x89c>
 8075e1d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075e24:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8075e2b:	00 00 00 
 8075e2e:	48 01 c8             	add    %rcx,%rax
 8075e31:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 8075e35:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 8075e3c:	00 00 00 
 8075e3f:	48 01 d1             	add    %rdx,%rcx
 8075e42:	8b 11                	mov    (%rcx),%edx
 8075e44:	89 10                	mov    %edx,(%rax)
 8075e46:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075e4d:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8075e50:	48 63 c9             	movslq %ecx,%rcx
 8075e53:	48 89 ca             	mov    %rcx,%rdx
 8075e56:	48 89 10             	mov    %rdx,(%rax)
 8075e59:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075e5c:	48 63 c0             	movslq %eax,%rax
 8075e5f:	48 89 c1             	mov    %rax,%rcx
 8075e62:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8075e69:	00 00 00 
 8075e6c:	48 0f af c8          	imul   %rax,%rcx
 8075e70:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075e77:	48 89 ca             	mov    %rcx,%rdx
 8075e7a:	48 01 d0             	add    %rdx,%rax
 8075e7d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8075e84:	00 00 00 
 8075e87:	48 01 c8             	add    %rcx,%rax
 8075e8a:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8075e8d:	48 63 c9             	movslq %ecx,%rcx
 8075e90:	48 89 ca             	mov    %rcx,%rdx
 8075e93:	48 89 10             	mov    %rdx,(%rax)
 8075e96:	8b 45 90             	mov    -0x70(%rbp),%eax
 8075e99:	48 63 c0             	movslq %eax,%rax
 8075e9c:	48 89 c1             	mov    %rax,%rcx
 8075e9f:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8075ea6:	00 00 00 
 8075ea9:	48 0f af c8          	imul   %rax,%rcx
 8075ead:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075eb4:	48 89 ca             	mov    %rcx,%rdx
 8075eb7:	48 01 d0             	add    %rdx,%rax
 8075eba:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 8075ec1:	48 89 08             	mov    %rcx,(%rax)
 8075ec4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075ec8:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8075ecf:	00 00 00 
 8075ed2:	48 01 c8             	add    %rcx,%rax
 8075ed5:	8b 08                	mov    (%rax),%ecx
 8075ed7:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
 8075eda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075ede:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8075ee5:	00 00 00 
 8075ee8:	48 01 c8             	add    %rcx,%rax
 8075eeb:	8b 08                	mov    (%rax),%ecx
 8075eed:	83 f9 08             	cmp    $0x8,%ecx
 8075ef0:	0f 84 8b 00 00 00    	je     8075f81 <tcc_load_object_file+0x9d7>
 8075ef6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8075efa:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8075f01:	00 00 00 
 8075f04:	48 01 c8             	add    %rcx,%rax
 8075f07:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8075f0b:	48 8b 10             	mov    (%rax),%rdx
 8075f0e:	48 01 d1             	add    %rdx,%rcx
 8075f11:	b8 00 00 00 00       	mov    $0x0,%eax
 8075f16:	49 89 c2             	mov    %rax,%r10
 8075f19:	48 89 c8             	mov    %rcx,%rax
 8075f1c:	48 89 c6             	mov    %rax,%rsi
 8075f1f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8075f22:	48 89 c7             	mov    %rax,%rdi
 8075f25:	4c 89 d2             	mov    %r10,%rdx
 8075f28:	b8 00 00 00 00       	mov    $0x0,%eax
 8075f2d:	e8 ee 1c 01 00       	callq  8087c20 <__preinit_array_end+0x180>
 8075f32:	8b 45 94             	mov    -0x6c(%rbp),%eax
 8075f35:	48 63 c0             	movslq %eax,%rax
 8075f38:	48 89 c1             	mov    %rax,%rcx
 8075f3b:	48 89 ce             	mov    %rcx,%rsi
 8075f3e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075f45:	48 89 c7             	mov    %rax,%rdi
 8075f48:	b8 00 00 00 00       	mov    $0x0,%eax
 8075f4d:	e8 18 69 fd ff       	callq  804c86a <section_ptr_add>
 8075f52:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
 8075f59:	8b 45 94             	mov    -0x6c(%rbp),%eax
 8075f5c:	49 89 c2             	mov    %rax,%r10
 8075f5f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 8075f66:	48 89 c6             	mov    %rax,%rsi
 8075f69:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8075f6c:	48 89 c7             	mov    %rax,%rdi
 8075f6f:	4c 89 d2             	mov    %r10,%rdx
 8075f72:	b8 00 00 00 00       	mov    $0x0,%eax
 8075f77:	e8 94 1c 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 8075f7c:	e9 2a 00 00 00       	jmpq   8075fab <tcc_load_object_file+0xa01>
 8075f81:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8075f88:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
 8075f8b:	48 63 c9             	movslq %ecx,%rcx
 8075f8e:	48 8b 10             	mov    (%rax),%rdx
 8075f91:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 8075f98:	48 89 c8             	mov    %rcx,%rax
 8075f9b:	48 01 c2             	add    %rax,%rdx
 8075f9e:	48 89 d0             	mov    %rdx,%rax
 8075fa1:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
 8075fa8:	48 89 01             	mov    %rax,(%rcx)
 8075fab:	e9 c1 f9 ff ff       	jmpq   8075971 <tcc_load_object_file+0x3c7>
 8075fb0:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
 8075fb6:	85 c0                	test   %eax,%eax
 8075fb8:	0f 84 5d 01 00 00    	je     807611b <tcc_load_object_file+0xb71>
 8075fbe:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
 8075fc4:	85 c0                	test   %eax,%eax
 8075fc6:	0f 84 4f 01 00 00    	je     807611b <tcc_load_object_file+0xb71>
 8075fcc:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
 8075fd2:	48 63 c0             	movslq %eax,%rax
 8075fd5:	48 89 c1             	mov    %rax,%rcx
 8075fd8:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8075fdf:	00 00 00 
 8075fe2:	48 0f af c8          	imul   %rax,%rcx
 8075fe6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8075fed:	48 89 ca             	mov    %rcx,%rdx
 8075ff0:	48 01 d0             	add    %rdx,%rax
 8075ff3:	48 8b 08             	mov    (%rax),%rcx
 8075ff6:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
 8075ffd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8076004:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807600b:	00 00 00 
 807600e:	48 01 c8             	add    %rcx,%rax
 8076011:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
 8076017:	48 63 c9             	movslq %ecx,%rcx
 807601a:	48 89 ca             	mov    %rcx,%rdx
 807601d:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8076024:	00 00 00 
 8076027:	48 0f af d1          	imul   %rcx,%rdx
 807602b:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8076032:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
 8076039:	48 89 d0             	mov    %rdx,%rax
 807603c:	48 01 c1             	add    %rax,%rcx
 807603f:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 8076046:	00 00 00 
 8076049:	48 01 c1             	add    %rax,%rcx
 807604c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 8076053:	48 8b 00             	mov    (%rax),%rax
 8076056:	48 8b 11             	mov    (%rcx),%rdx
 8076059:	48 01 d0             	add    %rdx,%rax
 807605c:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8076063:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 807606a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076071:	00 00 00 
 8076074:	48 01 c8             	add    %rcx,%rax
 8076077:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 807607e:	48 8b 10             	mov    (%rax),%rdx
 8076081:	48 8b 01             	mov    (%rcx),%rax
 8076084:	48 01 c2             	add    %rax,%rdx
 8076087:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
 807608e:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
 8076094:	48 63 c0             	movslq %eax,%rax
 8076097:	48 89 c1             	mov    %rax,%rcx
 807609a:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80760a1:	00 00 00 
 80760a4:	48 0f af c8          	imul   %rax,%rcx
 80760a8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80760af:	48 89 ca             	mov    %rcx,%rdx
 80760b2:	48 01 d0             	add    %rdx,%rax
 80760b5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80760bc:	00 00 00 
 80760bf:	48 01 c8             	add    %rcx,%rax
 80760c2:	8b 08                	mov    (%rax),%ecx
 80760c4:	89 8d e4 fe ff ff    	mov    %ecx,-0x11c(%rbp)
 80760ca:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 80760d1:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 80760d8:	48 89 c2             	mov    %rax,%rdx
 80760db:	48 89 c8             	mov    %rcx,%rax
 80760de:	48 39 c2             	cmp    %rax,%rdx
 80760e1:	0f 83 34 00 00 00    	jae    807611b <tcc_load_object_file+0xb71>
 80760e7:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 80760ee:	8b 08                	mov    (%rax),%ecx
 80760f0:	8b 95 e4 fe ff ff    	mov    -0x11c(%rbp),%edx
 80760f6:	48 01 d1             	add    %rdx,%rcx
 80760f9:	89 08                	mov    %ecx,(%rax)
 80760fb:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 8076102:	48 89 c1             	mov    %rax,%rcx
 8076105:	48 ba 0c 00 00 00 00 	movabs $0xc,%rdx
 807610c:	00 00 00 
 807610f:	48 01 d0             	add    %rdx,%rax
 8076112:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 8076119:	eb af                	jmp    80760ca <tcc_load_object_file+0xb20>
 807611b:	b8 01 00 00 00       	mov    $0x1,%eax
 8076120:	89 45 90             	mov    %eax,-0x70(%rbp)
 8076123:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076126:	0f b7 4d e4          	movzwl -0x1c(%rbp),%ecx
 807612a:	39 c8                	cmp    %ecx,%eax
 807612c:	0f 8d 02 02 00 00    	jge    8076334 <tcc_load_object_file+0xd8a>
 8076132:	e9 0e 00 00 00       	jmpq   8076145 <tcc_load_object_file+0xb9b>
 8076137:	8b 45 90             	mov    -0x70(%rbp),%eax
 807613a:	48 89 c1             	mov    %rax,%rcx
 807613d:	83 c0 01             	add    $0x1,%eax
 8076140:	89 45 90             	mov    %eax,-0x70(%rbp)
 8076143:	eb de                	jmp    8076123 <tcc_load_object_file+0xb79>
 8076145:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076148:	48 63 c0             	movslq %eax,%rax
 807614b:	48 89 c1             	mov    %rax,%rcx
 807614e:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8076155:	00 00 00 
 8076158:	48 0f af c8          	imul   %rax,%rcx
 807615c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8076163:	48 89 ca             	mov    %rcx,%rdx
 8076166:	48 01 d0             	add    %rdx,%rax
 8076169:	48 8b 08             	mov    (%rax),%rcx
 807616c:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
 8076173:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 807617a:	85 c0                	test   %eax,%eax
 807617c:	0f 84 41 00 00 00    	je     80761c3 <tcc_load_object_file+0xc19>
 8076182:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076185:	48 63 c0             	movslq %eax,%rax
 8076188:	48 89 c1             	mov    %rax,%rcx
 807618b:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8076192:	00 00 00 
 8076195:	48 0f af c8          	imul   %rax,%rcx
 8076199:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80761a0:	48 89 ca             	mov    %rcx,%rdx
 80761a3:	48 01 d0             	add    %rdx,%rax
 80761a6:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80761ad:	00 00 00 
 80761b0:	48 01 c8             	add    %rcx,%rax
 80761b3:	0f b6 08             	movzbl (%rax),%ecx
 80761b6:	85 c9                	test   %ecx,%ecx
 80761b8:	0f 84 05 00 00 00    	je     80761c3 <tcc_load_object_file+0xc19>
 80761be:	e9 05 00 00 00       	jmpq   80761c8 <tcc_load_object_file+0xc1e>
 80761c3:	e9 6f ff ff ff       	jmpq   8076137 <tcc_load_object_file+0xb8d>
 80761c8:	8b 45 90             	mov    -0x70(%rbp),%eax
 80761cb:	48 63 c0             	movslq %eax,%rax
 80761ce:	48 89 c1             	mov    %rax,%rcx
 80761d1:	48 c1 e1 06          	shl    $0x6,%rcx
 80761d5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 80761d9:	48 89 ca             	mov    %rcx,%rdx
 80761dc:	48 01 d0             	add    %rdx,%rax
 80761df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 80761e3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 80761e7:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 80761ee:	00 00 00 
 80761f1:	48 01 c8             	add    %rcx,%rax
 80761f4:	8b 08                	mov    (%rax),%ecx
 80761f6:	83 f9 00             	cmp    $0x0,%ecx
 80761f9:	0f 86 59 00 00 00    	jbe    8076258 <tcc_load_object_file+0xcae>
 80761ff:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8076206:	48 b9 58 00 00 00 00 	movabs $0x58,%rcx
 807620d:	00 00 00 
 8076210:	48 01 c8             	add    %rcx,%rax
 8076213:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 8076217:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 807621e:	00 00 00 
 8076221:	48 01 d1             	add    %rdx,%rcx
 8076224:	8b 11                	mov    (%rcx),%edx
 8076226:	48 89 d1             	mov    %rdx,%rcx
 8076229:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8076230:	00 00 00 
 8076233:	48 0f af ca          	imul   %rdx,%rcx
 8076237:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 807623e:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 8076245:	48 89 c8             	mov    %rcx,%rax
 8076248:	48 01 c2             	add    %rax,%rdx
 807624b:	48 8b 02             	mov    (%rdx),%rax
 807624e:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
 8076255:	48 89 01             	mov    %rax,(%rcx)
 8076258:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 807625c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8076263:	00 00 00 
 8076266:	48 01 c8             	add    %rcx,%rax
 8076269:	8b 08                	mov    (%rax),%ecx
 807626b:	83 f9 04             	cmp    $0x4,%ecx
 807626e:	0f 85 bb 00 00 00    	jne    807632f <tcc_load_object_file+0xd85>
 8076274:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 807627b:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8076282:	00 00 00 
 8076285:	48 01 c8             	add    %rcx,%rax
 8076288:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 807628c:	48 ba 2c 00 00 00 00 	movabs $0x2c,%rdx
 8076293:	00 00 00 
 8076296:	48 01 d1             	add    %rdx,%rcx
 8076299:	8b 11                	mov    (%rcx),%edx
 807629b:	48 89 d1             	mov    %rdx,%rcx
 807629e:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80762a5:	00 00 00 
 80762a8:	48 0f af ca          	imul   %rdx,%rcx
 80762ac:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 80762b3:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 80762ba:	48 89 c8             	mov    %rcx,%rax
 80762bd:	48 01 c2             	add    %rax,%rdx
 80762c0:	48 8b 02             	mov    (%rdx),%rax
 80762c3:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 80762ca:	00 00 00 
 80762cd:	48 01 c8             	add    %rcx,%rax
 80762d0:	8b 08                	mov    (%rax),%ecx
 80762d2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 80762d9:	89 08                	mov    %ecx,(%rax)
 80762db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80762df:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 80762e6:	00 00 00 
 80762e9:	48 01 c8             	add    %rcx,%rax
 80762ec:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 80762f3:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 80762fa:	00 00 00 
 80762fd:	48 01 d1             	add    %rdx,%rcx
 8076300:	8b 11                	mov    (%rcx),%edx
 8076302:	48 63 d2             	movslq %edx,%rdx
 8076305:	48 89 d1             	mov    %rdx,%rcx
 8076308:	48 c1 e1 03          	shl    $0x3,%rcx
 807630c:	48 8b 10             	mov    (%rax),%rdx
 807630f:	48 89 c8             	mov    %rcx,%rax
 8076312:	48 01 c2             	add    %rax,%rdx
 8076315:	48 8b 02             	mov    (%rdx),%rax
 8076318:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 807631f:	00 00 00 
 8076322:	48 01 c8             	add    %rcx,%rax
 8076325:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 807632c:	48 89 08             	mov    %rcx,(%rax)
 807632f:	e9 03 fe ff ff       	jmpq   8076137 <tcc_load_object_file+0xb8d>
 8076334:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807633b:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 8076342:	8b 45 80             	mov    -0x80(%rbp),%eax
 8076345:	c1 e0 02             	shl    $0x2,%eax
 8076348:	48 89 c1             	mov    %rax,%rcx
 807634b:	48 89 cf             	mov    %rcx,%rdi
 807634e:	b8 00 00 00 00       	mov    $0x0,%eax
 8076353:	e8 74 5c fd ff       	callq  804bfcc <tcc_mallocz>
 8076358:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 807635f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 8076366:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807636d:	00 00 00 
 8076370:	48 01 c8             	add    %rcx,%rax
 8076373:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
 807637a:	b8 01 00 00 00       	mov    $0x1,%eax
 807637f:	89 45 90             	mov    %eax,-0x70(%rbp)
 8076382:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076385:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8076388:	39 c8                	cmp    %ecx,%eax
 807638a:	0f 8d 20 03 00 00    	jge    80766b0 <tcc_load_object_file+0x1106>
 8076390:	e9 2c 00 00 00       	jmpq   80763c1 <tcc_load_object_file+0xe17>
 8076395:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076398:	48 89 c1             	mov    %rax,%rcx
 807639b:	83 c0 01             	add    $0x1,%eax
 807639e:	89 45 90             	mov    %eax,-0x70(%rbp)
 80763a1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 80763a8:	48 89 c1             	mov    %rax,%rcx
 80763ab:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80763b2:	00 00 00 
 80763b5:	48 01 d0             	add    %rdx,%rax
 80763b8:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
 80763bf:	eb c1                	jmp    8076382 <tcc_load_object_file+0xdd8>
 80763c1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 80763c8:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 80763cf:	00 00 00 
 80763d2:	48 01 c8             	add    %rcx,%rax
 80763d5:	0f b7 08             	movzwl (%rax),%ecx
 80763d8:	83 f9 00             	cmp    $0x0,%ecx
 80763db:	0f 84 af 01 00 00    	je     8076590 <tcc_load_object_file+0xfe6>
 80763e1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 80763e8:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 80763ef:	00 00 00 
 80763f2:	48 01 c8             	add    %rcx,%rax
 80763f5:	0f b7 08             	movzwl (%rax),%ecx
 80763f8:	81 f9 00 ff 00 00    	cmp    $0xff00,%ecx
 80763fe:	0f 8d 8c 01 00 00    	jge    8076590 <tcc_load_object_file+0xfe6>
 8076404:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 807640b:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8076412:	00 00 00 
 8076415:	48 01 c8             	add    %rcx,%rax
 8076418:	0f b7 08             	movzwl (%rax),%ecx
 807641b:	48 63 c9             	movslq %ecx,%rcx
 807641e:	48 89 c8             	mov    %rcx,%rax
 8076421:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8076428:	00 00 00 
 807642b:	48 0f af c1          	imul   %rcx,%rax
 807642f:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 8076436:	48 89 c2             	mov    %rax,%rdx
 8076439:	48 01 d1             	add    %rdx,%rcx
 807643c:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
 8076443:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 807644a:	48 b9 11 00 00 00 00 	movabs $0x11,%rcx
 8076451:	00 00 00 
 8076454:	48 01 c8             	add    %rcx,%rax
 8076457:	0f b6 08             	movzbl (%rax),%ecx
 807645a:	85 c9                	test   %ecx,%ecx
 807645c:	0f 84 9c 00 00 00    	je     80764fe <tcc_load_object_file+0xf54>
 8076462:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 8076469:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8076470:	00 00 00 
 8076473:	48 01 c8             	add    %rcx,%rax
 8076476:	0f b6 08             	movzbl (%rax),%ecx
 8076479:	c1 f9 04             	sar    $0x4,%ecx
 807647c:	83 f9 00             	cmp    $0x0,%ecx
 807647f:	0f 84 74 00 00 00    	je     80764f9 <tcc_load_object_file+0xf4f>
 8076485:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 807648c:	8b 08                	mov    (%rax),%ecx
 807648e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 8076495:	48 89 ca             	mov    %rcx,%rdx
 8076498:	48 01 d0             	add    %rdx,%rax
 807649b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 80764a2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 80764a9:	48 89 c6             	mov    %rax,%rsi
 80764ac:	48 8b 05 e5 79 01 00 	mov    0x179e5(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 80764b3:	48 8b 00             	mov    (%rax),%rax
 80764b6:	48 89 c7             	mov    %rax,%rdi
 80764b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80764be:	e8 3a 7a ff ff       	callq  806defd <find_elf_sym>
 80764c3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 80764c9:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 80764cf:	85 c0                	test   %eax,%eax
 80764d1:	0f 84 22 00 00 00    	je     80764f9 <tcc_load_object_file+0xf4f>
 80764d7:	8b 45 90             	mov    -0x70(%rbp),%eax
 80764da:	48 63 c0             	movslq %eax,%rax
 80764dd:	48 89 c1             	mov    %rax,%rcx
 80764e0:	48 c1 e1 02          	shl    $0x2,%rcx
 80764e4:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 80764eb:	48 89 ca             	mov    %rcx,%rdx
 80764ee:	48 01 d0             	add    %rdx,%rax
 80764f1:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
 80764f7:	89 08                	mov    %ecx,(%rax)
 80764f9:	e9 97 fe ff ff       	jmpq   8076395 <tcc_load_object_file+0xdeb>
 80764fe:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 8076505:	48 8b 08             	mov    (%rax),%rcx
 8076508:	85 c9                	test   %ecx,%ecx
 807650a:	0f 84 05 00 00 00    	je     8076515 <tcc_load_object_file+0xf6b>
 8076510:	e9 05 00 00 00       	jmpq   807651a <tcc_load_object_file+0xf70>
 8076515:	e9 7b fe ff ff       	jmpq   8076395 <tcc_load_object_file+0xdeb>
 807651a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 8076521:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8076528:	00 00 00 
 807652b:	48 01 c8             	add    %rcx,%rax
 807652e:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
 8076535:	48 8b 11             	mov    (%rcx),%rdx
 8076538:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 807653f:	00 00 00 
 8076542:	48 01 ca             	add    %rcx,%rdx
 8076545:	0f b7 0a             	movzwl (%rdx),%ecx
 8076548:	66 89 08             	mov    %cx,(%rax)
 807654b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 8076552:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076559:	00 00 00 
 807655c:	48 01 c8             	add    %rcx,%rax
 807655f:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
 8076566:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 807656d:	00 00 00 
 8076570:	48 01 d1             	add    %rdx,%rcx
 8076573:	48 8b 10             	mov    (%rax),%rdx
 8076576:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
 807657d:	48 8b 01             	mov    (%rcx),%rax
 8076580:	48 01 c2             	add    %rax,%rdx
 8076583:	48 89 d0             	mov    %rdx,%rax
 8076586:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
 807658d:	48 89 01             	mov    %rax,(%rcx)
 8076590:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 8076597:	8b 08                	mov    (%rax),%ecx
 8076599:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 80765a0:	48 89 ca             	mov    %rcx,%rdx
 80765a3:	48 01 d0             	add    %rdx,%rax
 80765a6:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 80765ad:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 80765b4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80765bb:	00 00 00 
 80765be:	48 01 c8             	add    %rcx,%rax
 80765c1:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
 80765c8:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 80765cf:	00 00 00 
 80765d2:	48 01 d1             	add    %rdx,%rcx
 80765d5:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
 80765dc:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 80765e3:	48 b8 04 00 00 00 00 	movabs $0x4,%rax
 80765ea:	00 00 00 
 80765ed:	48 01 c2             	add    %rax,%rdx
 80765f0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 80765f7:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
 80765fe:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 8076605:	00 00 00 
 8076608:	48 01 c8             	add    %rcx,%rax
 807660b:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
 8076612:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
 8076619:	48 ba 06 00 00 00 00 	movabs $0x6,%rdx
 8076620:	00 00 00 
 8076623:	48 01 d1             	add    %rdx,%rcx
 8076626:	50                   	push   %rax
 8076627:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
 807662e:	52                   	push   %rdx
 807662f:	0f b7 11             	movzwl (%rcx),%edx
 8076632:	49 89 d1             	mov    %rdx,%r9
 8076635:	0f b6 08             	movzbl (%rax),%ecx
 8076638:	49 89 c8             	mov    %rcx,%r8
 807663b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 8076642:	0f b6 00             	movzbl (%rax),%eax
 8076645:	49 89 c3             	mov    %rax,%r11
 8076648:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
 807664f:	48 8b 00             	mov    (%rax),%rax
 8076652:	49 89 c2             	mov    %rax,%r10
 8076655:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
 807665c:	48 8b 00             	mov    (%rax),%rax
 807665f:	48 89 c6             	mov    %rax,%rsi
 8076662:	48 8b 05 2f 78 01 00 	mov    0x1782f(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8076669:	48 8b 00             	mov    (%rax),%rax
 807666c:	48 89 c7             	mov    %rax,%rdi
 807666f:	4c 89 d2             	mov    %r10,%rdx
 8076672:	4c 89 d9             	mov    %r11,%rcx
 8076675:	b8 00 00 00 00       	mov    $0x0,%eax
 807667a:	e8 9f 7b ff ff       	callq  806e21e <add_elf_sym>
 807667f:	48 83 c4 10          	add    $0x10,%rsp
 8076683:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 8076689:	8b 45 90             	mov    -0x70(%rbp),%eax
 807668c:	48 63 c0             	movslq %eax,%rax
 807668f:	48 89 c1             	mov    %rax,%rcx
 8076692:	48 c1 e1 02          	shl    $0x2,%rcx
 8076696:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 807669d:	48 89 ca             	mov    %rcx,%rdx
 80766a0:	48 01 d0             	add    %rdx,%rax
 80766a3:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
 80766a9:	89 08                	mov    %ecx,(%rax)
 80766ab:	e9 e5 fc ff ff       	jmpq   8076395 <tcc_load_object_file+0xdeb>
 80766b0:	b8 01 00 00 00       	mov    $0x1,%eax
 80766b5:	89 45 90             	mov    %eax,-0x70(%rbp)
 80766b8:	8b 45 90             	mov    -0x70(%rbp),%eax
 80766bb:	0f b7 4d e4          	movzwl -0x1c(%rbp),%ecx
 80766bf:	39 c8                	cmp    %ecx,%eax
 80766c1:	0f 8d 36 03 00 00    	jge    80769fd <tcc_load_object_file+0x1453>
 80766c7:	e9 0e 00 00 00       	jmpq   80766da <tcc_load_object_file+0x1130>
 80766cc:	8b 45 90             	mov    -0x70(%rbp),%eax
 80766cf:	48 89 c1             	mov    %rax,%rcx
 80766d2:	83 c0 01             	add    $0x1,%eax
 80766d5:	89 45 90             	mov    %eax,-0x70(%rbp)
 80766d8:	eb de                	jmp    80766b8 <tcc_load_object_file+0x110e>
 80766da:	8b 45 90             	mov    -0x70(%rbp),%eax
 80766dd:	48 63 c0             	movslq %eax,%rax
 80766e0:	48 89 c1             	mov    %rax,%rcx
 80766e3:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80766ea:	00 00 00 
 80766ed:	48 0f af c8          	imul   %rax,%rcx
 80766f1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80766f8:	48 89 ca             	mov    %rcx,%rdx
 80766fb:	48 01 d0             	add    %rdx,%rax
 80766fe:	48 8b 08             	mov    (%rax),%rcx
 8076701:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
 8076708:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 807670f:	85 c0                	test   %eax,%eax
 8076711:	0f 84 05 00 00 00    	je     807671c <tcc_load_object_file+0x1172>
 8076717:	e9 05 00 00 00       	jmpq   8076721 <tcc_load_object_file+0x1177>
 807671c:	e9 ab ff ff ff       	jmpq   80766cc <tcc_load_object_file+0x1122>
 8076721:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076724:	48 63 c0             	movslq %eax,%rax
 8076727:	48 89 c1             	mov    %rax,%rcx
 807672a:	48 c1 e1 06          	shl    $0x6,%rcx
 807672e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8076732:	48 89 ca             	mov    %rcx,%rdx
 8076735:	48 01 d0             	add    %rdx,%rax
 8076738:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 807673c:	8b 45 90             	mov    -0x70(%rbp),%eax
 807673f:	48 63 c0             	movslq %eax,%rax
 8076742:	48 89 c1             	mov    %rax,%rcx
 8076745:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 807674c:	00 00 00 
 807674f:	48 0f af c8          	imul   %rax,%rcx
 8076753:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 807675a:	48 89 ca             	mov    %rcx,%rdx
 807675d:	48 01 d0             	add    %rdx,%rax
 8076760:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076767:	00 00 00 
 807676a:	48 01 c8             	add    %rcx,%rax
 807676d:	8b 08                	mov    (%rax),%ecx
 807676f:	89 4d 88             	mov    %ecx,-0x78(%rbp)
 8076772:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8076779:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8076780:	00 00 00 
 8076783:	48 01 c8             	add    %rcx,%rax
 8076786:	8b 08                	mov    (%rax),%ecx
 8076788:	e9 05 00 00 00       	jmpq   8076792 <tcc_load_object_file+0x11e8>
 807678d:	e9 09 00 00 00       	jmpq   807679b <tcc_load_object_file+0x11f1>
 8076792:	83 f9 04             	cmp    $0x4,%ecx
 8076795:	0f 85 58 02 00 00    	jne    80769f3 <tcc_load_object_file+0x1449>
 807679b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 807679f:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 80767a6:	00 00 00 
 80767a9:	48 01 c8             	add    %rcx,%rax
 80767ac:	8b 08                	mov    (%rax),%ecx
 80767ae:	48 89 c8             	mov    %rcx,%rax
 80767b1:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80767b8:	00 00 00 
 80767bb:	48 0f af c1          	imul   %rcx,%rax
 80767bf:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80767c6:	48 89 c2             	mov    %rax,%rdx
 80767c9:	48 01 d1             	add    %rdx,%rcx
 80767cc:	48 b8 08 00 00 00 00 	movabs $0x8,%rax
 80767d3:	00 00 00 
 80767d6:	48 01 c1             	add    %rax,%rcx
 80767d9:	8b 01                	mov    (%rcx),%eax
 80767db:	89 45 84             	mov    %eax,-0x7c(%rbp)
 80767de:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 80767e5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80767ec:	00 00 00 
 80767ef:	48 01 c8             	add    %rcx,%rax
 80767f2:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 80767f9:	48 8b 10             	mov    (%rax),%rdx
 80767fc:	48 8b 01             	mov    (%rcx),%rax
 80767ff:	48 01 c2             	add    %rax,%rdx
 8076802:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
 8076809:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 8076810:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076817:	00 00 00 
 807681a:	48 01 c8             	add    %rcx,%rax
 807681d:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 8076820:	48 63 c9             	movslq %ecx,%rcx
 8076823:	48 8b 10             	mov    (%rax),%rdx
 8076826:	48 89 c8             	mov    %rcx,%rax
 8076829:	48 01 c2             	add    %rax,%rdx
 807682c:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
 8076833:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807683a:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
 8076841:	48 89 c2             	mov    %rax,%rdx
 8076844:	48 89 c8             	mov    %rcx,%rax
 8076847:	48 39 c2             	cmp    %rax,%rdx
 807684a:	0f 83 9e 01 00 00    	jae    80769ee <tcc_load_object_file+0x1444>
 8076850:	e9 20 00 00 00       	jmpq   8076875 <tcc_load_object_file+0x12cb>
 8076855:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807685c:	48 89 c1             	mov    %rax,%rcx
 807685f:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8076866:	00 00 00 
 8076869:	48 01 d0             	add    %rdx,%rax
 807686c:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 8076873:	eb be                	jmp    8076833 <tcc_load_object_file+0x1289>
 8076875:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807687c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076883:	00 00 00 
 8076886:	48 01 c8             	add    %rcx,%rax
 8076889:	48 8b 08             	mov    (%rax),%rcx
 807688c:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
 8076893:	00 00 00 
 8076896:	48 21 c1             	and    %rax,%rcx
 8076899:	89 8d a4 fe ff ff    	mov    %ecx,-0x15c(%rbp)
 807689f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 80768a6:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80768ad:	00 00 00 
 80768b0:	48 01 c8             	add    %rcx,%rax
 80768b3:	48 8b 08             	mov    (%rax),%rcx
 80768b6:	48 c1 e9 20          	shr    $0x20,%rcx
 80768ba:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%rbp)
 80768c0:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
 80768c6:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 80768c9:	48 39 c8             	cmp    %rcx,%rax
 80768cc:	0f 82 05 00 00 00    	jb     80768d7 <tcc_load_object_file+0x132d>
 80768d2:	e9 59 00 00 00       	jmpq   8076930 <tcc_load_object_file+0x1386>
 80768d7:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
 80768dd:	48 89 c1             	mov    %rax,%rcx
 80768e0:	48 c1 e1 02          	shl    $0x2,%rcx
 80768e4:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 80768eb:	48 89 ca             	mov    %rcx,%rdx
 80768ee:	48 01 d0             	add    %rdx,%rax
 80768f1:	8b 08                	mov    (%rax),%ecx
 80768f3:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%rbp)
 80768f9:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
 80768ff:	85 c0                	test   %eax,%eax
 8076901:	0f 84 05 00 00 00    	je     807690c <tcc_load_object_file+0x1362>
 8076907:	e9 6c 00 00 00       	jmpq   8076978 <tcc_load_object_file+0x13ce>
 807690c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 8076913:	48 b9 11 00 00 00 00 	movabs $0x11,%rcx
 807691a:	00 00 00 
 807691d:	48 01 c8             	add    %rcx,%rax
 8076920:	0f b6 08             	movzbl (%rax),%ecx
 8076923:	85 c9                	test   %ecx,%ecx
 8076925:	0f 84 05 00 00 00    	je     8076930 <tcc_load_object_file+0x1386>
 807692b:	e9 48 00 00 00       	jmpq   8076978 <tcc_load_object_file+0x13ce>
 8076930:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 8076934:	8b 08                	mov    (%rax),%ecx
 8076936:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 807693d:	48 89 ca             	mov    %rcx,%rdx
 8076940:	48 01 d0             	add    %rdx,%rax
 8076943:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
 807694a:	48 8b 11             	mov    (%rcx),%rdx
 807694d:	49 89 d3             	mov    %rdx,%r11
 8076950:	49 89 c2             	mov    %rax,%r10
 8076953:	8b 45 90             	mov    -0x70(%rbp),%eax
 8076956:	48 89 c6             	mov    %rax,%rsi
 8076959:	48 8d 05 8d 5d 01 00 	lea    0x15d8d(%rip),%rax        # 808c6ed <L.156>
 8076960:	48 89 c7             	mov    %rax,%rdi
 8076963:	4c 89 d2             	mov    %r10,%rdx
 8076966:	4c 89 d9             	mov    %r11,%rcx
 8076969:	b8 00 00 00 00       	mov    $0x0,%eax
 807696e:	e8 7a 6b fd ff       	callq  804d4ed <tcc_error_noabort>
 8076973:	e9 98 ee ff ff       	jmpq   8075810 <tcc_load_object_file+0x266>
 8076978:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807697f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076986:	00 00 00 
 8076989:	48 01 c8             	add    %rcx,%rax
 807698c:	8b 8d a0 fe ff ff    	mov    -0x160(%rbp),%ecx
 8076992:	48 89 ca             	mov    %rcx,%rdx
 8076995:	48 c1 e2 20          	shl    $0x20,%rdx
 8076999:	8b 8d a4 fe ff ff    	mov    -0x15c(%rbp),%ecx
 807699f:	48 63 c9             	movslq %ecx,%rcx
 80769a2:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 80769a9:	48 89 d0             	mov    %rdx,%rax
 80769ac:	48 89 ca             	mov    %rcx,%rdx
 80769af:	48 01 d0             	add    %rdx,%rax
 80769b2:	48 89 c1             	mov    %rax,%rcx
 80769b5:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
 80769bc:	48 89 08             	mov    %rcx,(%rax)
 80769bf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 80769c6:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
 80769c9:	48 63 c9             	movslq %ecx,%rcx
 80769cc:	48 8b 10             	mov    (%rax),%rdx
 80769cf:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
 80769d6:	48 89 c8             	mov    %rcx,%rax
 80769d9:	48 01 c2             	add    %rax,%rdx
 80769dc:	48 89 d0             	mov    %rdx,%rax
 80769df:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
 80769e6:	48 89 01             	mov    %rax,(%rcx)
 80769e9:	e9 67 fe ff ff       	jmpq   8076855 <tcc_load_object_file+0x12ab>
 80769ee:	e9 05 00 00 00       	jmpq   80769f8 <tcc_load_object_file+0x144e>
 80769f3:	e9 00 00 00 00       	jmpq   80769f8 <tcc_load_object_file+0x144e>
 80769f8:	e9 cf fc ff ff       	jmpq   80766cc <tcc_load_object_file+0x1122>
 80769fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a02:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
 8076a08:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 8076a0f:	48 89 c7             	mov    %rax,%rdi
 8076a12:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a17:	e8 1a 55 fd ff       	callq  804bf36 <tcc_free>
 8076a1c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 8076a23:	48 89 c7             	mov    %rax,%rdi
 8076a26:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a2b:	e8 06 55 fd ff       	callq  804bf36 <tcc_free>
 8076a30:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 8076a37:	48 89 c7             	mov    %rax,%rdi
 8076a3a:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a3f:	e8 f2 54 fd ff       	callq  804bf36 <tcc_free>
 8076a44:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8076a4b:	48 89 c7             	mov    %rax,%rdi
 8076a4e:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a53:	e8 de 54 fd ff       	callq  804bf36 <tcc_free>
 8076a58:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 8076a5f:	48 89 c7             	mov    %rax,%rdi
 8076a62:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a67:	e8 ca 54 fd ff       	callq  804bf36 <tcc_free>
 8076a6c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8076a70:	48 89 c7             	mov    %rax,%rdi
 8076a73:	b8 00 00 00 00       	mov    $0x0,%eax
 8076a78:	e8 b9 54 fd ff       	callq  804bf36 <tcc_free>
 8076a7d:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8076a83:	e9 00 00 00 00       	jmpq   8076a88 <tcc_load_object_file+0x14de>
 8076a88:	c9                   	leaveq 
 8076a89:	c3                   	retq   

0000000008076a8a <get_be32>:
 8076a8a:	55                   	push   %rbp
 8076a8b:	48 89 e5             	mov    %rsp,%rbp
 8076a8e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8076a95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8076a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8076a9d:	48 b9 03 00 00 00 00 	movabs $0x3,%rcx
 8076aa4:	00 00 00 
 8076aa7:	48 01 c8             	add    %rcx,%rax
 8076aaa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8076aae:	48 ba 02 00 00 00 00 	movabs $0x2,%rdx
 8076ab5:	00 00 00 
 8076ab8:	48 01 d1             	add    %rdx,%rcx
 8076abb:	0f b6 11             	movzbl (%rcx),%edx
 8076abe:	c1 e2 08             	shl    $0x8,%edx
 8076ac1:	0f b6 08             	movzbl (%rax),%ecx
 8076ac4:	48 09 d1             	or     %rdx,%rcx
 8076ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8076acb:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8076ad2:	00 00 00 
 8076ad5:	48 01 d0             	add    %rdx,%rax
 8076ad8:	0f b6 10             	movzbl (%rax),%edx
 8076adb:	c1 e2 10             	shl    $0x10,%edx
 8076ade:	48 09 d1             	or     %rdx,%rcx
 8076ae1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8076ae5:	0f b6 10             	movzbl (%rax),%edx
 8076ae8:	c1 e2 18             	shl    $0x18,%edx
 8076aeb:	48 09 d1             	or     %rdx,%rcx
 8076aee:	48 89 c8             	mov    %rcx,%rax
 8076af1:	e9 00 00 00 00       	jmpq   8076af6 <get_be32+0x6c>
 8076af6:	c9                   	leaveq 
 8076af7:	c3                   	retq   

0000000008076af8 <tcc_load_alacarte>:
 8076af8:	55                   	push   %rbp
 8076af9:	48 89 e5             	mov    %rsp,%rbp
 8076afc:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 8076b03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8076b07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8076b0b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8076b0f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8076b12:	48 63 c0             	movslq %eax,%rax
 8076b15:	48 89 c1             	mov    %rax,%rcx
 8076b18:	48 89 cf             	mov    %rcx,%rdi
 8076b1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8076b20:	e8 33 54 fd ff       	callq  804bf58 <tcc_malloc>
 8076b25:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8076b29:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8076b2c:	49 89 c2             	mov    %rax,%r10
 8076b2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8076b33:	48 89 c6             	mov    %rax,%rsi
 8076b36:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076b39:	48 89 c7             	mov    %rax,%rdi
 8076b3c:	4c 89 d2             	mov    %r10,%rdx
 8076b3f:	b8 00 00 00 00       	mov    $0x0,%eax
 8076b44:	e8 c7 10 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 8076b49:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8076b4c:	48 63 c9             	movslq %ecx,%rcx
 8076b4f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8076b53:	48 89 c8             	mov    %rcx,%rax
 8076b56:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
 8076b5a:	48 39 c1             	cmp    %rax,%rcx
 8076b5d:	0f 84 05 00 00 00    	je     8076b68 <tcc_load_alacarte+0x70>
 8076b63:	e9 a4 01 00 00       	jmpq   8076d0c <tcc_load_alacarte+0x214>
 8076b68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8076b6c:	48 89 c7             	mov    %rax,%rdi
 8076b6f:	b8 00 00 00 00       	mov    $0x0,%eax
 8076b74:	e8 11 ff ff ff       	callq  8076a8a <get_be32>
 8076b79:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8076b7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8076b80:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8076b87:	00 00 00 
 8076b8a:	48 01 c8             	add    %rcx,%rax
 8076b8d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 8076b91:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8076b94:	c1 e0 02             	shl    $0x2,%eax
 8076b97:	48 63 c0             	movslq %eax,%rax
 8076b9a:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 8076b9e:	48 89 c2             	mov    %rax,%rdx
 8076ba1:	48 01 d1             	add    %rdx,%rcx
 8076ba4:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8076ba8:	b8 00 00 00 00       	mov    $0x0,%eax
 8076bad:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8076bb0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8076bb4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 8076bb8:	b8 00 00 00 00       	mov    $0x0,%eax
 8076bbd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8076bc0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8076bc3:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8076bc6:	39 c8                	cmp    %ecx,%eax
 8076bc8:	0f 8d 50 01 00 00    	jge    8076d1e <tcc_load_alacarte+0x226>
 8076bce:	e9 30 00 00 00       	jmpq   8076c03 <tcc_load_alacarte+0x10b>
 8076bd3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8076bd6:	48 89 c1             	mov    %rax,%rcx
 8076bd9:	83 c0 01             	add    $0x1,%eax
 8076bdc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8076bdf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8076be3:	48 89 c7             	mov    %rax,%rdi
 8076be6:	b8 00 00 00 00       	mov    $0x0,%eax
 8076beb:	e8 f0 06 01 00       	callq  80872e0 <strlen>
 8076bf0:	83 c0 01             	add    $0x1,%eax
 8076bf3:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 8076bf7:	48 89 c2             	mov    %rax,%rdx
 8076bfa:	48 01 d1             	add    %rdx,%rcx
 8076bfd:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 8076c01:	eb bd                	jmp    8076bc0 <tcc_load_alacarte+0xc8>
 8076c03:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8076c07:	48 89 c6             	mov    %rax,%rsi
 8076c0a:	48 8b 05 87 72 01 00 	mov    0x17287(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8076c11:	48 8b 00             	mov    (%rax),%rax
 8076c14:	48 89 c7             	mov    %rax,%rdi
 8076c17:	b8 00 00 00 00       	mov    $0x0,%eax
 8076c1c:	e8 dc 72 ff ff       	callq  806defd <find_elf_sym>
 8076c21:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8076c24:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8076c27:	85 c0                	test   %eax,%eax
 8076c29:	0f 84 ea 00 00 00    	je     8076d19 <tcc_load_alacarte+0x221>
 8076c2f:	48 8b 05 62 72 01 00 	mov    0x17262(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 8076c36:	48 8b 00             	mov    (%rax),%rax
 8076c39:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8076c40:	00 00 00 
 8076c43:	48 01 c8             	add    %rcx,%rax
 8076c46:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8076c49:	48 63 c9             	movslq %ecx,%rcx
 8076c4c:	48 89 ca             	mov    %rcx,%rdx
 8076c4f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8076c56:	00 00 00 
 8076c59:	48 0f af d1          	imul   %rcx,%rdx
 8076c5d:	48 8b 08             	mov    (%rax),%rcx
 8076c60:	48 89 d0             	mov    %rdx,%rax
 8076c63:	48 01 c1             	add    %rax,%rcx
 8076c66:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
 8076c6a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8076c6e:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8076c75:	00 00 00 
 8076c78:	48 01 c8             	add    %rcx,%rax
 8076c7b:	0f b7 08             	movzwl (%rax),%ecx
 8076c7e:	83 f9 00             	cmp    $0x0,%ecx
 8076c81:	0f 85 92 00 00 00    	jne    8076d19 <tcc_load_alacarte+0x221>
 8076c87:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8076c8a:	c1 e0 02             	shl    $0x2,%eax
 8076c8d:	48 63 c0             	movslq %eax,%rax
 8076c90:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 8076c94:	48 89 c2             	mov    %rax,%rdx
 8076c97:	48 01 d1             	add    %rdx,%rcx
 8076c9a:	48 89 cf             	mov    %rcx,%rdi
 8076c9d:	b8 00 00 00 00       	mov    $0x0,%eax
 8076ca2:	e8 e3 fd ff ff       	callq  8076a8a <get_be32>
 8076ca7:	83 c0 3c             	add    $0x3c,%eax
 8076caa:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8076cad:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8076cb0:	83 c0 01             	add    $0x1,%eax
 8076cb3:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8076cb6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8076cb9:	48 63 c0             	movslq %eax,%rax
 8076cbc:	b9 00 00 00 00       	mov    $0x0,%ecx
 8076cc1:	49 89 ca             	mov    %rcx,%r10
 8076cc4:	48 89 c1             	mov    %rax,%rcx
 8076cc7:	48 89 ce             	mov    %rcx,%rsi
 8076cca:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076ccd:	48 89 c7             	mov    %rax,%rdi
 8076cd0:	4c 89 d2             	mov    %r10,%rdx
 8076cd3:	b8 00 00 00 00       	mov    $0x0,%eax
 8076cd8:	e8 43 0f 01 00       	callq  8087c20 <__preinit_array_end+0x180>
 8076cdd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8076ce0:	48 63 c0             	movslq %eax,%rax
 8076ce3:	48 89 c1             	mov    %rax,%rcx
 8076ce6:	49 89 ca             	mov    %rcx,%r10
 8076ce9:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076cec:	48 89 c6             	mov    %rax,%rsi
 8076cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8076cf3:	48 89 c7             	mov    %rax,%rdi
 8076cf6:	4c 89 d2             	mov    %r10,%rdx
 8076cf9:	b8 00 00 00 00       	mov    $0x0,%eax
 8076cfe:	e8 a7 e8 ff ff       	callq  80755aa <tcc_load_object_file>
 8076d03:	83 f8 00             	cmp    $0x0,%eax
 8076d06:	0f 8d 0d 00 00 00    	jge    8076d19 <tcc_load_alacarte+0x221>
 8076d0c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8076d11:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8076d14:	e9 18 00 00 00       	jmpq   8076d31 <tcc_load_alacarte+0x239>
 8076d19:	e9 b5 fe ff ff       	jmpq   8076bd3 <tcc_load_alacarte+0xdb>
 8076d1e:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8076d21:	85 c0                	test   %eax,%eax
 8076d23:	0f 85 7f fe ff ff    	jne    8076ba8 <tcc_load_alacarte+0xb0>
 8076d29:	b8 00 00 00 00       	mov    $0x0,%eax
 8076d2e:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8076d31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8076d35:	48 89 c7             	mov    %rax,%rdi
 8076d38:	b8 00 00 00 00       	mov    $0x0,%eax
 8076d3d:	e8 f4 51 fd ff       	callq  804bf36 <tcc_free>
 8076d42:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8076d45:	e9 00 00 00 00       	jmpq   8076d4a <tcc_load_alacarte+0x252>
 8076d4a:	c9                   	leaveq 
 8076d4b:	c3                   	retq   

0000000008076d4c <tcc_load_archive>:
 8076d4c:	55                   	push   %rbp
 8076d4d:	48 89 e5             	mov    %rsp,%rbp
 8076d50:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
 8076d57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8076d5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8076d5f:	b8 08 00 00 00       	mov    $0x8,%eax
 8076d64:	49 89 c2             	mov    %rax,%r10
 8076d67:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 8076d6b:	48 89 c6             	mov    %rax,%rsi
 8076d6e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076d71:	48 89 c7             	mov    %rax,%rdi
 8076d74:	4c 89 d2             	mov    %r10,%rdx
 8076d77:	b8 00 00 00 00       	mov    $0x0,%eax
 8076d7c:	e8 8f 0e 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 8076d81:	b8 3c 00 00 00       	mov    $0x3c,%eax
 8076d86:	49 89 c2             	mov    %rax,%r10
 8076d89:	48 8d 45 b4          	lea    -0x4c(%rbp),%rax
 8076d8d:	48 89 c6             	mov    %rax,%rsi
 8076d90:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076d93:	48 89 c7             	mov    %rax,%rdi
 8076d96:	4c 89 d2             	mov    %r10,%rdx
 8076d99:	b8 00 00 00 00       	mov    $0x0,%eax
 8076d9e:	e8 6d 0e 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 8076da3:	89 45 88             	mov    %eax,-0x78(%rbp)
 8076da6:	8b 45 88             	mov    -0x78(%rbp),%eax
 8076da9:	83 f8 00             	cmp    $0x0,%eax
 8076dac:	0f 85 05 00 00 00    	jne    8076db7 <tcc_load_archive+0x6b>
 8076db2:	e9 b1 02 00 00       	jmpq   8077068 <tcc_load_archive+0x31c>
 8076db7:	8b 45 88             	mov    -0x78(%rbp),%eax
 8076dba:	83 f8 3c             	cmp    $0x3c,%eax
 8076dbd:	0f 84 1e 00 00 00    	je     8076de1 <tcc_load_archive+0x95>
 8076dc3:	48 8d 05 4e 59 01 00 	lea    0x1594e(%rip),%rax        # 808c718 <L.157>
 8076dca:	48 89 c7             	mov    %rax,%rdi
 8076dcd:	b8 00 00 00 00       	mov    $0x0,%eax
 8076dd2:	e8 16 67 fd ff       	callq  804d4ed <tcc_error_noabort>
 8076dd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8076ddc:	e9 91 02 00 00       	jmpq   8077072 <tcc_load_archive+0x326>
 8076de1:	b8 0a 00 00 00       	mov    $0xa,%eax
 8076de6:	49 89 c2             	mov    %rax,%r10
 8076de9:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
 8076ded:	48 89 c6             	mov    %rax,%rsi
 8076df0:	48 8d 45 a9          	lea    -0x57(%rbp),%rax
 8076df4:	48 89 c7             	mov    %rax,%rdi
 8076df7:	4c 89 d2             	mov    %r10,%rdx
 8076dfa:	b8 00 00 00 00       	mov    $0x0,%eax
 8076dff:	e8 6c fe 00 00       	callq  8086c70 <memcpy>
 8076e04:	b8 00 00 00 00       	mov    $0x0,%eax
 8076e09:	88 45 b3             	mov    %al,-0x4d(%rbp)
 8076e0c:	b8 00 00 00 00       	mov    $0x0,%eax
 8076e11:	49 89 c2             	mov    %rax,%r10
 8076e14:	b8 00 00 00 00       	mov    $0x0,%eax
 8076e19:	48 89 c6             	mov    %rax,%rsi
 8076e1c:	48 8d 45 a9          	lea    -0x57(%rbp),%rax
 8076e20:	48 89 c7             	mov    %rax,%rdi
 8076e23:	4c 89 d2             	mov    %r10,%rdx
 8076e26:	b8 00 00 00 00       	mov    $0x0,%eax
 8076e2b:	e8 00 0f 01 00       	callq  8087d30 <__preinit_array_end+0x290>
 8076e30:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8076e33:	b8 10 00 00 00       	mov    $0x10,%eax
 8076e38:	49 89 c2             	mov    %rax,%r10
 8076e3b:	48 8d 45 b4          	lea    -0x4c(%rbp),%rax
 8076e3f:	48 89 c6             	mov    %rax,%rsi
 8076e42:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8076e46:	48 89 c7             	mov    %rax,%rdi
 8076e49:	4c 89 d2             	mov    %r10,%rdx
 8076e4c:	b8 00 00 00 00       	mov    $0x0,%eax
 8076e51:	e8 1a fe 00 00       	callq  8086c70 <memcpy>
 8076e56:	b8 0f 00 00 00       	mov    $0xf,%eax
 8076e5b:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8076e5e:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8076e61:	83 f8 00             	cmp    $0x0,%eax
 8076e64:	0f 8c 36 00 00 00    	jl     8076ea0 <tcc_load_archive+0x154>
 8076e6a:	e9 0e 00 00 00       	jmpq   8076e7d <tcc_load_archive+0x131>
 8076e6f:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8076e72:	48 89 c1             	mov    %rax,%rcx
 8076e75:	83 c0 ff             	add    $0xffffffff,%eax
 8076e78:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8076e7b:	eb e1                	jmp    8076e5e <tcc_load_archive+0x112>
 8076e7d:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8076e80:	48 63 c0             	movslq %eax,%rax
 8076e83:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 8076e87:	48 89 c2             	mov    %rax,%rdx
 8076e8a:	48 01 d1             	add    %rdx,%rcx
 8076e8d:	0f be 01             	movsbl (%rcx),%eax
 8076e90:	83 f8 20             	cmp    $0x20,%eax
 8076e93:	0f 84 05 00 00 00    	je     8076e9e <tcc_load_archive+0x152>
 8076e99:	e9 02 00 00 00       	jmpq   8076ea0 <tcc_load_archive+0x154>
 8076e9e:	eb cf                	jmp    8076e6f <tcc_load_archive+0x123>
 8076ea0:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8076ea3:	83 c0 01             	add    $0x1,%eax
 8076ea6:	48 63 c0             	movslq %eax,%rax
 8076ea9:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 8076ead:	48 89 c2             	mov    %rax,%rdx
 8076eb0:	48 01 d1             	add    %rdx,%rcx
 8076eb3:	b8 00 00 00 00       	mov    $0x0,%eax
 8076eb8:	88 01                	mov    %al,(%rcx)
 8076eba:	b8 01 00 00 00       	mov    $0x1,%eax
 8076ebf:	49 89 c2             	mov    %rax,%r10
 8076ec2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8076ec9:	00 00 00 
 8076ecc:	48 89 c6             	mov    %rax,%rsi
 8076ecf:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076ed2:	48 89 c7             	mov    %rax,%rdi
 8076ed5:	4c 89 d2             	mov    %r10,%rdx
 8076ed8:	b8 00 00 00 00       	mov    $0x0,%eax
 8076edd:	e8 3e 0d 01 00       	callq  8087c20 <__preinit_array_end+0x180>
 8076ee2:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 8076ee9:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8076eec:	83 c0 01             	add    $0x1,%eax
 8076eef:	83 e0 fe             	and    $0xfffffffe,%eax
 8076ef2:	89 45 8c             	mov    %eax,-0x74(%rbp)
 8076ef5:	48 8d 05 2c 58 01 00 	lea    0x1582c(%rip),%rax        # 808c728 <L.158>
 8076efc:	48 89 c6             	mov    %rax,%rsi
 8076eff:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8076f03:	48 89 c7             	mov    %rax,%rdi
 8076f06:	b8 00 00 00 00       	mov    $0x0,%eax
 8076f0b:	e8 d0 02 01 00       	callq  80871e0 <strcmp>
 8076f10:	85 c0                	test   %eax,%eax
 8076f12:	0f 84 05 00 00 00    	je     8076f1d <tcc_load_archive+0x1d1>
 8076f18:	e9 45 00 00 00       	jmpq   8076f62 <tcc_load_archive+0x216>
 8076f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8076f21:	48 b9 00 01 00 00 00 	movabs $0x100,%rcx
 8076f28:	00 00 00 
 8076f2b:	48 01 c8             	add    %rcx,%rax
 8076f2e:	8b 08                	mov    (%rax),%ecx
 8076f30:	85 c9                	test   %ecx,%ecx
 8076f32:	0f 84 25 00 00 00    	je     8076f5d <tcc_load_archive+0x211>
 8076f38:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8076f3b:	49 89 c2             	mov    %rax,%r10
 8076f3e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8076f41:	48 89 c6             	mov    %rax,%rsi
 8076f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8076f48:	48 89 c7             	mov    %rax,%rdi
 8076f4b:	4c 89 d2             	mov    %r10,%rdx
 8076f4e:	b8 00 00 00 00       	mov    $0x0,%eax
 8076f53:	e8 a0 fb ff ff       	callq  8076af8 <tcc_load_alacarte>
 8076f58:	e9 15 01 00 00       	jmpq   8077072 <tcc_load_archive+0x326>
 8076f5d:	e9 cd 00 00 00       	jmpq   807702f <tcc_load_archive+0x2e3>
 8076f62:	48 8d 05 c1 57 01 00 	lea    0x157c1(%rip),%rax        # 808c72a <L.159>
 8076f69:	48 89 c6             	mov    %rax,%rsi
 8076f6c:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8076f70:	48 89 c7             	mov    %rax,%rdi
 8076f73:	b8 00 00 00 00       	mov    $0x0,%eax
 8076f78:	e8 63 02 01 00       	callq  80871e0 <strcmp>
 8076f7d:	85 c0                	test   %eax,%eax
 8076f7f:	0f 84 6e 00 00 00    	je     8076ff3 <tcc_load_archive+0x2a7>
 8076f85:	48 8d 05 a1 57 01 00 	lea    0x157a1(%rip),%rax        # 808c72d <L.160>
 8076f8c:	48 89 c6             	mov    %rax,%rsi
 8076f8f:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8076f93:	48 89 c7             	mov    %rax,%rdi
 8076f96:	b8 00 00 00 00       	mov    $0x0,%eax
 8076f9b:	e8 40 02 01 00       	callq  80871e0 <strcmp>
 8076fa0:	85 c0                	test   %eax,%eax
 8076fa2:	0f 84 4b 00 00 00    	je     8076ff3 <tcc_load_archive+0x2a7>
 8076fa8:	48 8d 05 88 57 01 00 	lea    0x15788(%rip),%rax        # 808c737 <L.161>
 8076faf:	48 89 c6             	mov    %rax,%rsi
 8076fb2:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8076fb6:	48 89 c7             	mov    %rax,%rdi
 8076fb9:	b8 00 00 00 00       	mov    $0x0,%eax
 8076fbe:	e8 1d 02 01 00       	callq  80871e0 <strcmp>
 8076fc3:	85 c0                	test   %eax,%eax
 8076fc5:	0f 84 28 00 00 00    	je     8076ff3 <tcc_load_archive+0x2a7>
 8076fcb:	48 8d 05 70 57 01 00 	lea    0x15770(%rip),%rax        # 808c742 <L.162>
 8076fd2:	48 89 c6             	mov    %rax,%rsi
 8076fd5:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8076fd9:	48 89 c7             	mov    %rax,%rdi
 8076fdc:	b8 00 00 00 00       	mov    $0x0,%eax
 8076fe1:	e8 fa 01 01 00       	callq  80871e0 <strcmp>
 8076fe6:	85 c0                	test   %eax,%eax
 8076fe8:	0f 84 05 00 00 00    	je     8076ff3 <tcc_load_archive+0x2a7>
 8076fee:	e9 05 00 00 00       	jmpq   8076ff8 <tcc_load_archive+0x2ac>
 8076ff3:	e9 37 00 00 00       	jmpq   807702f <tcc_load_archive+0x2e3>
 8076ff8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8076fff:	49 89 c2             	mov    %rax,%r10
 8077002:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8077005:	48 89 c6             	mov    %rax,%rsi
 8077008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807700c:	48 89 c7             	mov    %rax,%rdi
 807700f:	4c 89 d2             	mov    %r10,%rdx
 8077012:	b8 00 00 00 00       	mov    $0x0,%eax
 8077017:	e8 8e e5 ff ff       	callq  80755aa <tcc_load_object_file>
 807701c:	83 f8 00             	cmp    $0x0,%eax
 807701f:	0f 8d 0a 00 00 00    	jge    807702f <tcc_load_archive+0x2e3>
 8077025:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807702a:	e9 43 00 00 00       	jmpq   8077072 <tcc_load_archive+0x326>
 807702f:	8b 45 8c             	mov    -0x74(%rbp),%eax
 8077032:	48 63 c0             	movslq %eax,%rax
 8077035:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
 807703c:	48 89 c2             	mov    %rax,%rdx
 807703f:	48 01 d1             	add    %rdx,%rcx
 8077042:	b8 00 00 00 00       	mov    $0x0,%eax
 8077047:	49 89 c2             	mov    %rax,%r10
 807704a:	48 89 c8             	mov    %rcx,%rax
 807704d:	48 89 c6             	mov    %rax,%rsi
 8077050:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8077053:	48 89 c7             	mov    %rax,%rdi
 8077056:	4c 89 d2             	mov    %r10,%rdx
 8077059:	b8 00 00 00 00       	mov    $0x0,%eax
 807705e:	e8 bd 0b 01 00       	callq  8087c20 <__preinit_array_end+0x180>
 8077063:	e9 19 fd ff ff       	jmpq   8076d81 <tcc_load_archive+0x35>
 8077068:	b8 00 00 00 00       	mov    $0x0,%eax
 807706d:	e9 00 00 00 00       	jmpq   8077072 <tcc_load_archive+0x326>
 8077072:	c9                   	leaveq 
 8077073:	c3                   	retq   

0000000008077074 <tcc_load_dll>:
 8077074:	55                   	push   %rbp
 8077075:	48 89 e5             	mov    %rsp,%rbp
 8077078:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
 807707f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8077083:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8077087:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807708b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807708f:	b8 40 00 00 00       	mov    $0x40,%eax
 8077094:	49 89 c2             	mov    %rax,%r10
 8077097:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 807709b:	48 89 c6             	mov    %rax,%rsi
 807709e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80770a1:	48 89 c7             	mov    %rax,%rdi
 80770a4:	4c 89 d2             	mov    %r10,%rdx
 80770a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80770ac:	e8 5f 0b 01 00       	callq  8087c10 <__preinit_array_end+0x170>
 80770b1:	0f b6 45 a5          	movzbl -0x5b(%rbp),%eax
 80770b5:	83 f8 01             	cmp    $0x1,%eax
 80770b8:	0f 85 12 00 00 00    	jne    80770d0 <tcc_load_dll+0x5c>
 80770be:	0f b7 45 b2          	movzwl -0x4e(%rbp),%eax
 80770c2:	83 f8 3e             	cmp    $0x3e,%eax
 80770c5:	0f 85 05 00 00 00    	jne    80770d0 <tcc_load_dll+0x5c>
 80770cb:	e9 1e 00 00 00       	jmpq   80770ee <tcc_load_dll+0x7a>
 80770d0:	48 8d 05 78 56 01 00 	lea    0x15678(%rip),%rax        # 808c74f <L.163>
 80770d7:	48 89 c7             	mov    %rax,%rdi
 80770da:	b8 00 00 00 00       	mov    $0x0,%eax
 80770df:	e8 09 64 fd ff       	callq  804d4ed <tcc_error_noabort>
 80770e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80770e9:	e9 36 08 00 00       	jmpq   8077924 <tcc_load_dll+0x8b0>
 80770ee:	0f b7 45 dc          	movzwl -0x24(%rbp),%eax
 80770f2:	c1 e0 06             	shl    $0x6,%eax
 80770f5:	48 89 c1             	mov    %rax,%rcx
 80770f8:	49 89 ca             	mov    %rcx,%r10
 80770fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80770ff:	48 89 c6             	mov    %rax,%rsi
 8077102:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8077105:	48 89 c7             	mov    %rax,%rdi
 8077108:	4c 89 d2             	mov    %r10,%rdx
 807710b:	b8 00 00 00 00       	mov    $0x0,%eax
 8077110:	e8 1c e4 ff ff       	callq  8075531 <load_data>
 8077115:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 8077119:	b8 00 00 00 00       	mov    $0x0,%eax
 807711e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 8077124:	b8 00 00 00 00       	mov    $0x0,%eax
 8077129:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
 807712f:	b8 00 00 00 00       	mov    $0x0,%eax
 8077134:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 807713b:	b8 00 00 00 00       	mov    $0x0,%eax
 8077140:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 8077147:	b8 00 00 00 00       	mov    $0x0,%eax
 807714c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 8077153:	b8 00 00 00 00       	mov    $0x0,%eax
 8077158:	89 45 84             	mov    %eax,-0x7c(%rbp)
 807715b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 807715f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 8077163:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8077166:	0f b7 4d dc          	movzwl -0x24(%rbp),%ecx
 807716a:	39 c8                	cmp    %ecx,%eax
 807716c:	0f 8d c7 01 00 00    	jge    8077339 <tcc_load_dll+0x2c5>
 8077172:	e9 26 00 00 00       	jmpq   807719d <tcc_load_dll+0x129>
 8077177:	8b 45 84             	mov    -0x7c(%rbp),%eax
 807717a:	48 89 c1             	mov    %rax,%rcx
 807717d:	83 c0 01             	add    $0x1,%eax
 8077180:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8077183:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 8077187:	48 89 c1             	mov    %rax,%rcx
 807718a:	48 ba 40 00 00 00 00 	movabs $0x40,%rdx
 8077191:	00 00 00 
 8077194:	48 01 d0             	add    %rdx,%rax
 8077197:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 807719b:	eb c6                	jmp    8077163 <tcc_load_dll+0xef>
 807719d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80771a1:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80771a8:	00 00 00 
 80771ab:	48 01 c8             	add    %rcx,%rax
 80771ae:	8b 08                	mov    (%rax),%ecx
 80771b0:	e9 05 00 00 00       	jmpq   80771ba <tcc_load_dll+0x146>
 80771b5:	e9 09 00 00 00       	jmpq   80771c3 <tcc_load_dll+0x14f>
 80771ba:	83 f9 06             	cmp    $0x6,%ecx
 80771bd:	0f 85 70 00 00 00    	jne    8077233 <tcc_load_dll+0x1bf>
 80771c3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80771c7:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80771ce:	00 00 00 
 80771d1:	48 01 c8             	add    %rcx,%rax
 80771d4:	48 8b 08             	mov    (%rax),%rcx
 80771d7:	48 c1 e9 04          	shr    $0x4,%rcx
 80771db:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%rbp)
 80771e1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80771e5:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80771ec:	00 00 00 
 80771ef:	48 01 c8             	add    %rcx,%rax
 80771f2:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 80771f6:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 80771fd:	00 00 00 
 8077200:	48 01 d1             	add    %rdx,%rcx
 8077203:	48 8b 11             	mov    (%rcx),%rdx
 8077206:	49 89 d2             	mov    %rdx,%r10
 8077209:	48 8b 08             	mov    (%rax),%rcx
 807720c:	48 89 ce             	mov    %rcx,%rsi
 807720f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8077212:	48 89 c7             	mov    %rax,%rdi
 8077215:	4c 89 d2             	mov    %r10,%rdx
 8077218:	b8 00 00 00 00       	mov    $0x0,%eax
 807721d:	e8 0f e3 ff ff       	callq  8075531 <load_data>
 8077222:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 8077229:	e9 06 01 00 00       	jmpq   8077334 <tcc_load_dll+0x2c0>
 807722e:	e9 09 00 00 00       	jmpq   807723c <tcc_load_dll+0x1c8>
 8077233:	83 f9 0b             	cmp    $0xb,%ecx
 8077236:	0f 85 f3 00 00 00    	jne    807732f <tcc_load_dll+0x2bb>
 807723c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 8077240:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8077247:	00 00 00 
 807724a:	48 01 c8             	add    %rcx,%rax
 807724d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 8077254:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807725b:	48 8b 00             	mov    (%rax),%rax
 807725e:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8077265:	00 00 00 
 8077268:	31 d2                	xor    %edx,%edx
 807726a:	f7 f1                	div    %ecx
 807726c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 8077272:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 8077276:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807727d:	00 00 00 
 8077280:	48 01 c8             	add    %rcx,%rax
 8077283:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
 8077287:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 807728e:	00 00 00 
 8077291:	48 01 d1             	add    %rdx,%rcx
 8077294:	48 8b 11             	mov    (%rcx),%rdx
 8077297:	49 89 d2             	mov    %rdx,%r10
 807729a:	48 8b 08             	mov    (%rax),%rcx
 807729d:	48 89 ce             	mov    %rcx,%rsi
 80772a0:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80772a3:	48 89 c7             	mov    %rax,%rdi
 80772a6:	4c 89 d2             	mov    %r10,%rdx
 80772a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80772ae:	e8 7e e2 ff ff       	callq  8075531 <load_data>
 80772b3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 80772ba:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 80772be:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 80772c5:	00 00 00 
 80772c8:	48 01 c8             	add    %rcx,%rax
 80772cb:	8b 08                	mov    (%rax),%ecx
 80772cd:	48 89 c8             	mov    %rcx,%rax
 80772d0:	48 c1 e0 06          	shl    $0x6,%rax
 80772d4:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
 80772d8:	48 89 c2             	mov    %rax,%rdx
 80772db:	48 01 d1             	add    %rdx,%rcx
 80772de:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
 80772e2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 80772e6:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80772ed:	00 00 00 
 80772f0:	48 01 c8             	add    %rcx,%rax
 80772f3:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 80772f7:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 80772fe:	00 00 00 
 8077301:	48 01 d1             	add    %rdx,%rcx
 8077304:	48 8b 11             	mov    (%rcx),%rdx
 8077307:	49 89 d2             	mov    %rdx,%r10
 807730a:	48 8b 08             	mov    (%rax),%rcx
 807730d:	48 89 ce             	mov    %rcx,%rsi
 8077310:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8077313:	48 89 c7             	mov    %rax,%rdi
 8077316:	4c 89 d2             	mov    %r10,%rdx
 8077319:	b8 00 00 00 00       	mov    $0x0,%eax
 807731e:	e8 0e e2 ff ff       	callq  8075531 <load_data>
 8077323:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 807732a:	e9 05 00 00 00       	jmpq   8077334 <tcc_load_dll+0x2c0>
 807732f:	e9 00 00 00 00       	jmpq   8077334 <tcc_load_dll+0x2c0>
 8077334:	e9 3e fe ff ff       	jmpq   8077177 <tcc_load_dll+0x103>
 8077339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807733d:	48 89 c7             	mov    %rax,%rdi
 8077340:	b8 00 00 00 00       	mov    $0x0,%eax
 8077345:	e8 ef 4a fd ff       	callq  804be39 <tcc_basename>
 807734a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
 8077351:	b8 00 00 00 00       	mov    $0x0,%eax
 8077356:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8077359:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 8077360:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 8077367:	8b 45 84             	mov    -0x7c(%rbp),%eax
 807736a:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
 8077370:	39 c8                	cmp    %ecx,%eax
 8077372:	0f 8d 78 00 00 00    	jge    80773f0 <tcc_load_dll+0x37c>
 8077378:	e9 2c 00 00 00       	jmpq   80773a9 <tcc_load_dll+0x335>
 807737d:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8077380:	48 89 c1             	mov    %rax,%rcx
 8077383:	83 c0 01             	add    $0x1,%eax
 8077386:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8077389:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8077390:	48 89 c1             	mov    %rax,%rcx
 8077393:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 807739a:	00 00 00 
 807739d:	48 01 d0             	add    %rdx,%rax
 80773a0:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 80773a7:	eb be                	jmp    8077367 <tcc_load_dll+0x2f3>
 80773a9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 80773b0:	48 8b 08             	mov    (%rax),%rcx
 80773b3:	48 b8 0e 00 00 00 00 	movabs $0xe,%rax
 80773ba:	00 00 00 
 80773bd:	48 39 c1             	cmp    %rax,%rcx
 80773c0:	0f 85 28 00 00 00    	jne    80773ee <tcc_load_dll+0x37a>
 80773c6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 80773cd:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80773d4:	00 00 00 
 80773d7:	48 01 c8             	add    %rcx,%rax
 80773da:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80773e1:	48 8b 10             	mov    (%rax),%rdx
 80773e4:	48 01 d1             	add    %rdx,%rcx
 80773e7:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
 80773ee:	eb 8d                	jmp    807737d <tcc_load_dll+0x309>
 80773f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80773f5:	89 45 84             	mov    %eax,-0x7c(%rbp)
 80773f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80773fc:	48 b9 70 00 00 00 00 	movabs $0x70,%rcx
 8077403:	00 00 00 
 8077406:	48 01 c8             	add    %rcx,%rax
 8077409:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
 807740c:	8b 10                	mov    (%rax),%edx
 807740e:	39 d1                	cmp    %edx,%ecx
 8077410:	0f 8d b1 00 00 00    	jge    80774c7 <tcc_load_dll+0x453>
 8077416:	e9 0e 00 00 00       	jmpq   8077429 <tcc_load_dll+0x3b5>
 807741b:	8b 45 84             	mov    -0x7c(%rbp),%eax
 807741e:	48 89 c1             	mov    %rax,%rcx
 8077421:	83 c0 01             	add    $0x1,%eax
 8077424:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8077427:	eb cf                	jmp    80773f8 <tcc_load_dll+0x384>
 8077429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807742d:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 8077434:	00 00 00 
 8077437:	48 01 c8             	add    %rcx,%rax
 807743a:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
 807743d:	48 63 c9             	movslq %ecx,%rcx
 8077440:	48 89 ca             	mov    %rcx,%rdx
 8077443:	48 c1 e2 03          	shl    $0x3,%rdx
 8077447:	48 8b 08             	mov    (%rax),%rcx
 807744a:	48 89 d0             	mov    %rdx,%rax
 807744d:	48 01 c1             	add    %rax,%rcx
 8077450:	48 8b 01             	mov    (%rcx),%rax
 8077453:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 807745a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 8077461:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8077468:	00 00 00 
 807746b:	48 01 c8             	add    %rcx,%rax
 807746e:	48 89 c6             	mov    %rax,%rsi
 8077471:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 8077478:	48 89 c7             	mov    %rax,%rdi
 807747b:	b8 00 00 00 00       	mov    $0x0,%eax
 8077480:	e8 5b fd 00 00       	callq  80871e0 <strcmp>
 8077485:	85 c0                	test   %eax,%eax
 8077487:	0f 84 05 00 00 00    	je     8077492 <tcc_load_dll+0x41e>
 807748d:	e9 30 00 00 00       	jmpq   80774c2 <tcc_load_dll+0x44e>
 8077492:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 8077499:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807749c:	8b 10                	mov    (%rax),%edx
 807749e:	39 d1                	cmp    %edx,%ecx
 80774a0:	0f 8d 0c 00 00 00    	jge    80774b2 <tcc_load_dll+0x43e>
 80774a6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 80774ad:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80774b0:	89 08                	mov    %ecx,(%rax)
 80774b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80774b7:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 80774bd:	e9 0a 04 00 00       	jmpq   80778cc <tcc_load_dll+0x858>
 80774c2:	e9 54 ff ff ff       	jmpq   807741b <tcc_load_dll+0x3a7>
 80774c7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 80774ce:	48 89 c7             	mov    %rax,%rdi
 80774d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80774d6:	e8 05 fe 00 00       	callq  80872e0 <strlen>
 80774db:	83 c0 18             	add    $0x18,%eax
 80774de:	48 89 c1             	mov    %rax,%rcx
 80774e1:	48 89 cf             	mov    %rcx,%rdi
 80774e4:	b8 00 00 00 00       	mov    $0x0,%eax
 80774e9:	e8 de 4a fd ff       	callq  804bfcc <tcc_mallocz>
 80774ee:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 80774f5:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 80774fc:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80774ff:	89 08                	mov    %ecx,(%rax)
 8077501:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 8077508:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807750f:	00 00 00 
 8077512:	48 01 c8             	add    %rcx,%rax
 8077515:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
 807751c:	48 89 ce             	mov    %rcx,%rsi
 807751f:	48 89 c7             	mov    %rax,%rdi
 8077522:	b8 00 00 00 00       	mov    $0x0,%eax
 8077527:	e8 34 fd 00 00       	callq  8087260 <strcpy>
 807752c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8077530:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 8077537:	00 00 00 
 807753a:	48 01 c8             	add    %rcx,%rax
 807753d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8077541:	48 ba 70 00 00 00 00 	movabs $0x70,%rdx
 8077548:	00 00 00 
 807754b:	48 01 d1             	add    %rdx,%rcx
 807754e:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
 8077555:	49 89 d2             	mov    %rdx,%r10
 8077558:	48 89 ce             	mov    %rcx,%rsi
 807755b:	48 89 c7             	mov    %rax,%rdi
 807755e:	4c 89 d2             	mov    %r10,%rdx
 8077561:	b8 00 00 00 00       	mov    $0x0,%eax
 8077566:	e8 98 4b fd ff       	callq  804c103 <dynarray_add>
 807756b:	b8 01 00 00 00       	mov    $0x1,%eax
 8077570:	89 45 84             	mov    %eax,-0x7c(%rbp)
 8077573:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 807757a:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8077581:	00 00 00 
 8077584:	48 01 c8             	add    %rcx,%rax
 8077587:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 807758e:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8077591:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
 8077597:	39 c8                	cmp    %ecx,%eax
 8077599:	0f 8d 75 01 00 00    	jge    8077714 <tcc_load_dll+0x6a0>
 807759f:	e9 2c 00 00 00       	jmpq   80775d0 <tcc_load_dll+0x55c>
 80775a4:	8b 45 84             	mov    -0x7c(%rbp),%eax
 80775a7:	48 89 c1             	mov    %rax,%rcx
 80775aa:	83 c0 01             	add    $0x1,%eax
 80775ad:	89 45 84             	mov    %eax,-0x7c(%rbp)
 80775b0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 80775b7:	48 89 c1             	mov    %rax,%rcx
 80775ba:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 80775c1:	00 00 00 
 80775c4:	48 01 d0             	add    %rdx,%rax
 80775c7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 80775ce:	eb be                	jmp    807758e <tcc_load_dll+0x51a>
 80775d0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 80775d7:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80775de:	00 00 00 
 80775e1:	48 01 c8             	add    %rcx,%rax
 80775e4:	0f b6 08             	movzbl (%rax),%ecx
 80775e7:	c1 f9 04             	sar    $0x4,%ecx
 80775ea:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
 80775f0:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 80775f6:	83 f8 00             	cmp    $0x0,%eax
 80775f9:	0f 85 05 00 00 00    	jne    8077604 <tcc_load_dll+0x590>
 80775ff:	e9 a0 ff ff ff       	jmpq   80775a4 <tcc_load_dll+0x530>
 8077604:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 807760b:	8b 08                	mov    (%rax),%ecx
 807760d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 8077614:	48 89 ca             	mov    %rcx,%rdx
 8077617:	48 01 d0             	add    %rdx,%rax
 807761a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 8077621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8077625:	48 b9 c0 00 00 00 00 	movabs $0xc0,%rcx
 807762c:	00 00 00 
 807762f:	48 01 c8             	add    %rcx,%rax
 8077632:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
 8077639:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8077640:	00 00 00 
 8077643:	48 01 d1             	add    %rdx,%rcx
 8077646:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
 807764d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 8077654:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 807765b:	00 00 00 
 807765e:	48 01 c2             	add    %rax,%rdx
 8077661:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 8077668:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
 807766f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8077676:	00 00 00 
 8077679:	48 01 c8             	add    %rcx,%rax
 807767c:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
 8077683:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
 807768a:	48 ba 05 00 00 00 00 	movabs $0x5,%rdx
 8077691:	00 00 00 
 8077694:	48 01 d1             	add    %rdx,%rcx
 8077697:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
 807769e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
 80776a5:	48 b8 06 00 00 00 00 	movabs $0x6,%rax
 80776ac:	00 00 00 
 80776af:	48 01 c2             	add    %rax,%rdx
 80776b2:	50                   	push   %rax
 80776b3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 80776ba:	50                   	push   %rax
 80776bb:	0f b7 02             	movzwl (%rdx),%eax
 80776be:	49 89 c1             	mov    %rax,%r9
 80776c1:	0f b6 01             	movzbl (%rcx),%eax
 80776c4:	49 89 c0             	mov    %rax,%r8
 80776c7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 80776ce:	0f b6 00             	movzbl (%rax),%eax
 80776d1:	49 89 c3             	mov    %rax,%r11
 80776d4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
 80776db:	48 8b 00             	mov    (%rax),%rax
 80776de:	49 89 c2             	mov    %rax,%r10
 80776e1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 80776e8:	48 8b 00             	mov    (%rax),%rax
 80776eb:	48 89 c6             	mov    %rax,%rsi
 80776ee:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 80776f5:	48 8b 00             	mov    (%rax),%rax
 80776f8:	48 89 c7             	mov    %rax,%rdi
 80776fb:	4c 89 d2             	mov    %r10,%rdx
 80776fe:	4c 89 d9             	mov    %r11,%rcx
 8077701:	b8 00 00 00 00       	mov    $0x0,%eax
 8077706:	e8 13 6b ff ff       	callq  806e21e <add_elf_sym>
 807770b:	48 83 c4 10          	add    $0x10,%rsp
 807770f:	e9 90 fe ff ff       	jmpq   80775a4 <tcc_load_dll+0x530>
 8077714:	b8 00 00 00 00       	mov    $0x0,%eax
 8077719:	89 45 84             	mov    %eax,-0x7c(%rbp)
 807771c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 8077723:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 807772a:	8b 45 84             	mov    -0x7c(%rbp),%eax
 807772d:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
 8077733:	39 c8                	cmp    %ecx,%eax
 8077735:	0f 8d 86 01 00 00    	jge    80778c1 <tcc_load_dll+0x84d>
 807773b:	e9 2c 00 00 00       	jmpq   807776c <tcc_load_dll+0x6f8>
 8077740:	8b 45 84             	mov    -0x7c(%rbp),%eax
 8077743:	48 89 c1             	mov    %rax,%rcx
 8077746:	83 c0 01             	add    $0x1,%eax
 8077749:	89 45 84             	mov    %eax,-0x7c(%rbp)
 807774c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8077753:	48 89 c1             	mov    %rax,%rcx
 8077756:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 807775d:	00 00 00 
 8077760:	48 01 d0             	add    %rdx,%rax
 8077763:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 807776a:	eb be                	jmp    807772a <tcc_load_dll+0x6b6>
 807776c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8077773:	48 8b 08             	mov    (%rax),%rcx
 8077776:	e9 05 00 00 00       	jmpq   8077780 <tcc_load_dll+0x70c>
 807777b:	e9 09 00 00 00       	jmpq   8077789 <tcc_load_dll+0x715>
 8077780:	83 f9 01             	cmp    $0x1,%ecx
 8077783:	0f 85 33 01 00 00    	jne    80778bc <tcc_load_dll+0x848>
 8077789:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 8077790:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8077797:	00 00 00 
 807779a:	48 01 c8             	add    %rcx,%rax
 807779d:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
 80777a4:	48 8b 10             	mov    (%rax),%rdx
 80777a7:	48 01 d1             	add    %rdx,%rcx
 80777aa:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
 80777b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80777b6:	89 45 80             	mov    %eax,-0x80(%rbp)
 80777b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80777bd:	48 b9 70 00 00 00 00 	movabs $0x70,%rcx
 80777c4:	00 00 00 
 80777c7:	48 01 c8             	add    %rcx,%rax
 80777ca:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 80777cd:	8b 10                	mov    (%rax),%edx
 80777cf:	39 d1                	cmp    %edx,%ecx
 80777d1:	0f 8d 83 00 00 00    	jge    807785a <tcc_load_dll+0x7e6>
 80777d7:	e9 0e 00 00 00       	jmpq   80777ea <tcc_load_dll+0x776>
 80777dc:	8b 45 80             	mov    -0x80(%rbp),%eax
 80777df:	48 89 c1             	mov    %rax,%rcx
 80777e2:	83 c0 01             	add    $0x1,%eax
 80777e5:	89 45 80             	mov    %eax,-0x80(%rbp)
 80777e8:	eb cf                	jmp    80777b9 <tcc_load_dll+0x745>
 80777ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80777ee:	48 b9 68 00 00 00 00 	movabs $0x68,%rcx
 80777f5:	00 00 00 
 80777f8:	48 01 c8             	add    %rcx,%rax
 80777fb:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 80777fe:	48 63 c9             	movslq %ecx,%rcx
 8077801:	48 89 ca             	mov    %rcx,%rdx
 8077804:	48 c1 e2 03          	shl    $0x3,%rdx
 8077808:	48 8b 08             	mov    (%rax),%rcx
 807780b:	48 89 d0             	mov    %rdx,%rax
 807780e:	48 01 c1             	add    %rax,%rcx
 8077811:	48 8b 01             	mov    (%rcx),%rax
 8077814:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 807781b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 8077822:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8077829:	00 00 00 
 807782c:	48 01 c8             	add    %rcx,%rax
 807782f:	48 89 c6             	mov    %rax,%rsi
 8077832:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 8077839:	48 89 c7             	mov    %rax,%rdi
 807783c:	b8 00 00 00 00       	mov    $0x0,%eax
 8077841:	e8 9a f9 00 00       	callq  80871e0 <strcmp>
 8077846:	85 c0                	test   %eax,%eax
 8077848:	0f 84 05 00 00 00    	je     8077853 <tcc_load_dll+0x7df>
 807784e:	e9 05 00 00 00       	jmpq   8077858 <tcc_load_dll+0x7e4>
 8077853:	e9 5f 00 00 00       	jmpq   80778b7 <tcc_load_dll+0x843>
 8077858:	eb 82                	jmp    80777dc <tcc_load_dll+0x768>
 807785a:	b8 02 00 00 00       	mov    $0x2,%eax
 807785f:	49 89 c2             	mov    %rax,%r10
 8077862:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 8077869:	48 89 c6             	mov    %rax,%rsi
 807786c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8077870:	48 89 c7             	mov    %rax,%rdi
 8077873:	4c 89 d2             	mov    %r10,%rdx
 8077876:	b8 00 00 00 00       	mov    $0x0,%eax
 807787b:	e8 c1 81 fd ff       	callq  804fa41 <tcc_add_dll>
 8077880:	83 f8 00             	cmp    $0x0,%eax
 8077883:	0f 8d 2e 00 00 00    	jge    80778b7 <tcc_load_dll+0x843>
 8077889:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 8077890:	48 89 c6             	mov    %rax,%rsi
 8077893:	48 8d 05 c6 4e 01 00 	lea    0x14ec6(%rip),%rax        # 808c760 <L.164>
 807789a:	48 89 c7             	mov    %rax,%rdi
 807789d:	b8 00 00 00 00       	mov    $0x0,%eax
 80778a2:	e8 46 5c fd ff       	callq  804d4ed <tcc_error_noabort>
 80778a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80778ac:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 80778b2:	e9 15 00 00 00       	jmpq   80778cc <tcc_load_dll+0x858>
 80778b7:	e9 00 00 00 00       	jmpq   80778bc <tcc_load_dll+0x848>
 80778bc:	e9 7f fe ff ff       	jmpq   8077740 <tcc_load_dll+0x6cc>
 80778c1:	b8 00 00 00 00       	mov    $0x0,%eax
 80778c6:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 80778cc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 80778d3:	48 89 c7             	mov    %rax,%rdi
 80778d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80778db:	e8 56 46 fd ff       	callq  804bf36 <tcc_free>
 80778e0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 80778e7:	48 89 c7             	mov    %rax,%rdi
 80778ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80778ef:	e8 42 46 fd ff       	callq  804bf36 <tcc_free>
 80778f4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 80778fb:	48 89 c7             	mov    %rax,%rdi
 80778fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8077903:	e8 2e 46 fd ff       	callq  804bf36 <tcc_free>
 8077908:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 807790c:	48 89 c7             	mov    %rax,%rdi
 807790f:	b8 00 00 00 00       	mov    $0x0,%eax
 8077914:	e8 1d 46 fd ff       	callq  804bf36 <tcc_free>
 8077919:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 807791f:	e9 00 00 00 00       	jmpq   8077924 <tcc_load_dll+0x8b0>
 8077924:	c9                   	leaveq 
 8077925:	c3                   	retq   

0000000008077926 <ld_next>:
 8077926:	55                   	push   %rbp
 8077927:	48 89 e5             	mov    %rsp,%rbp
 807792a:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8077931:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8077935:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8077939:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807793d:	48 8b 05 c4 65 01 00 	mov    0x165c4(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077944:	8b 00                	mov    (%rax),%eax
 8077946:	e9 05 00 00 00       	jmpq   8077950 <ld_next+0x2a>
 807794b:	e9 09 00 00 00       	jmpq   8077959 <ld_next+0x33>
 8077950:	83 f8 20             	cmp    $0x20,%eax
 8077953:	0f 85 05 00 00 00    	jne    807795e <ld_next+0x38>
 8077959:	e9 09 00 00 00       	jmpq   8077967 <ld_next+0x41>
 807795e:	83 f8 09             	cmp    $0x9,%eax
 8077961:	0f 85 05 00 00 00    	jne    807796c <ld_next+0x46>
 8077967:	e9 09 00 00 00       	jmpq   8077975 <ld_next+0x4f>
 807796c:	83 f8 0c             	cmp    $0xc,%eax
 807796f:	0f 85 05 00 00 00    	jne    807797a <ld_next+0x54>
 8077975:	e9 09 00 00 00       	jmpq   8077983 <ld_next+0x5d>
 807797a:	83 f8 0b             	cmp    $0xb,%eax
 807797d:	0f 85 05 00 00 00    	jne    8077988 <ld_next+0x62>
 8077983:	e9 09 00 00 00       	jmpq   8077991 <ld_next+0x6b>
 8077988:	83 f8 0d             	cmp    $0xd,%eax
 807798b:	0f 85 05 00 00 00    	jne    8077996 <ld_next+0x70>
 8077991:	e9 09 00 00 00       	jmpq   807799f <ld_next+0x79>
 8077996:	83 f8 0a             	cmp    $0xa,%eax
 8077999:	0f 85 11 00 00 00    	jne    80779b0 <ld_next+0x8a>
 807799f:	b8 00 00 00 00       	mov    $0x0,%eax
 80779a4:	e8 64 a7 fd ff       	callq  805210d <inp>
 80779a9:	eb 92                	jmp    807793d <ld_next+0x17>
 80779ab:	e9 09 00 00 00       	jmpq   80779b9 <ld_next+0x93>
 80779b0:	83 f8 2f             	cmp    $0x2f,%eax
 80779b3:	0f 85 a5 00 00 00    	jne    8077a5e <ld_next+0x138>
 80779b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80779be:	e8 93 a9 fd ff       	callq  8052356 <minp>
 80779c3:	48 8b 05 3e 65 01 00 	mov    0x1653e(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80779ca:	8b 00                	mov    (%rax),%eax
 80779cc:	83 f8 2a             	cmp    $0x2a,%eax
 80779cf:	0f 85 53 00 00 00    	jne    8077a28 <ld_next+0x102>
 80779d5:	48 8b 05 c4 64 01 00 	mov    0x164c4(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80779dc:	48 8b 00             	mov    (%rax),%rax
 80779df:	48 8b 0d ba 64 01 00 	mov    0x164ba(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80779e6:	48 8b 09             	mov    (%rcx),%rcx
 80779e9:	48 8b 11             	mov    (%rcx),%rdx
 80779ec:	48 89 d7             	mov    %rdx,%rdi
 80779ef:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80779f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80779f8:	e8 41 ac fd ff       	callq  805263e <parse_comment>
 80779fd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 8077a01:	48 89 01             	mov    %rax,(%rcx)
 8077a04:	48 8b 05 95 64 01 00 	mov    0x16495(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 8077a0b:	48 8b 00             	mov    (%rax),%rax
 8077a0e:	48 8b 08             	mov    (%rax),%rcx
 8077a11:	0f b6 01             	movzbl (%rcx),%eax
 8077a14:	4c 8b 1d ed 64 01 00 	mov    0x164ed(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077a1b:	41 89 03             	mov    %eax,(%r11)
 8077a1e:	e9 1a ff ff ff       	jmpq   807793d <ld_next+0x17>
 8077a23:	e9 2c 00 00 00       	jmpq   8077a54 <ld_next+0x12e>
 8077a28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8077a2c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8077a30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8077a34:	48 89 c1             	mov    %rax,%rcx
 8077a37:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8077a3e:	00 00 00 
 8077a41:	48 01 d0             	add    %rdx,%rax
 8077a44:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8077a48:	b8 2f 00 00 00       	mov    $0x2f,%eax
 8077a4d:	88 01                	mov    %al,(%rcx)
 8077a4f:	e9 2b 03 00 00       	jmpq   8077d7f <ld_next+0x459>
 8077a54:	e9 7c 04 00 00       	jmpq   8077ed5 <ld_next+0x5af>
 8077a59:	e9 09 00 00 00       	jmpq   8077a67 <ld_next+0x141>
 8077a5e:	83 f8 61             	cmp    $0x61,%eax
 8077a61:	0f 85 05 00 00 00    	jne    8077a6c <ld_next+0x146>
 8077a67:	e9 09 00 00 00       	jmpq   8077a75 <ld_next+0x14f>
 8077a6c:	83 f8 62             	cmp    $0x62,%eax
 8077a6f:	0f 85 05 00 00 00    	jne    8077a7a <ld_next+0x154>
 8077a75:	e9 09 00 00 00       	jmpq   8077a83 <ld_next+0x15d>
 8077a7a:	83 f8 63             	cmp    $0x63,%eax
 8077a7d:	0f 85 05 00 00 00    	jne    8077a88 <ld_next+0x162>
 8077a83:	e9 09 00 00 00       	jmpq   8077a91 <ld_next+0x16b>
 8077a88:	83 f8 64             	cmp    $0x64,%eax
 8077a8b:	0f 85 05 00 00 00    	jne    8077a96 <ld_next+0x170>
 8077a91:	e9 09 00 00 00       	jmpq   8077a9f <ld_next+0x179>
 8077a96:	83 f8 65             	cmp    $0x65,%eax
 8077a99:	0f 85 05 00 00 00    	jne    8077aa4 <ld_next+0x17e>
 8077a9f:	e9 09 00 00 00       	jmpq   8077aad <ld_next+0x187>
 8077aa4:	83 f8 66             	cmp    $0x66,%eax
 8077aa7:	0f 85 05 00 00 00    	jne    8077ab2 <ld_next+0x18c>
 8077aad:	e9 09 00 00 00       	jmpq   8077abb <ld_next+0x195>
 8077ab2:	83 f8 67             	cmp    $0x67,%eax
 8077ab5:	0f 85 05 00 00 00    	jne    8077ac0 <ld_next+0x19a>
 8077abb:	e9 09 00 00 00       	jmpq   8077ac9 <ld_next+0x1a3>
 8077ac0:	83 f8 68             	cmp    $0x68,%eax
 8077ac3:	0f 85 05 00 00 00    	jne    8077ace <ld_next+0x1a8>
 8077ac9:	e9 09 00 00 00       	jmpq   8077ad7 <ld_next+0x1b1>
 8077ace:	83 f8 69             	cmp    $0x69,%eax
 8077ad1:	0f 85 05 00 00 00    	jne    8077adc <ld_next+0x1b6>
 8077ad7:	e9 09 00 00 00       	jmpq   8077ae5 <ld_next+0x1bf>
 8077adc:	83 f8 6a             	cmp    $0x6a,%eax
 8077adf:	0f 85 05 00 00 00    	jne    8077aea <ld_next+0x1c4>
 8077ae5:	e9 09 00 00 00       	jmpq   8077af3 <ld_next+0x1cd>
 8077aea:	83 f8 6b             	cmp    $0x6b,%eax
 8077aed:	0f 85 05 00 00 00    	jne    8077af8 <ld_next+0x1d2>
 8077af3:	e9 09 00 00 00       	jmpq   8077b01 <ld_next+0x1db>
 8077af8:	83 f8 6c             	cmp    $0x6c,%eax
 8077afb:	0f 85 05 00 00 00    	jne    8077b06 <ld_next+0x1e0>
 8077b01:	e9 09 00 00 00       	jmpq   8077b0f <ld_next+0x1e9>
 8077b06:	83 f8 6d             	cmp    $0x6d,%eax
 8077b09:	0f 85 05 00 00 00    	jne    8077b14 <ld_next+0x1ee>
 8077b0f:	e9 09 00 00 00       	jmpq   8077b1d <ld_next+0x1f7>
 8077b14:	83 f8 6e             	cmp    $0x6e,%eax
 8077b17:	0f 85 05 00 00 00    	jne    8077b22 <ld_next+0x1fc>
 8077b1d:	e9 09 00 00 00       	jmpq   8077b2b <ld_next+0x205>
 8077b22:	83 f8 6f             	cmp    $0x6f,%eax
 8077b25:	0f 85 05 00 00 00    	jne    8077b30 <ld_next+0x20a>
 8077b2b:	e9 09 00 00 00       	jmpq   8077b39 <ld_next+0x213>
 8077b30:	83 f8 70             	cmp    $0x70,%eax
 8077b33:	0f 85 05 00 00 00    	jne    8077b3e <ld_next+0x218>
 8077b39:	e9 09 00 00 00       	jmpq   8077b47 <ld_next+0x221>
 8077b3e:	83 f8 71             	cmp    $0x71,%eax
 8077b41:	0f 85 05 00 00 00    	jne    8077b4c <ld_next+0x226>
 8077b47:	e9 09 00 00 00       	jmpq   8077b55 <ld_next+0x22f>
 8077b4c:	83 f8 72             	cmp    $0x72,%eax
 8077b4f:	0f 85 05 00 00 00    	jne    8077b5a <ld_next+0x234>
 8077b55:	e9 09 00 00 00       	jmpq   8077b63 <ld_next+0x23d>
 8077b5a:	83 f8 73             	cmp    $0x73,%eax
 8077b5d:	0f 85 05 00 00 00    	jne    8077b68 <ld_next+0x242>
 8077b63:	e9 09 00 00 00       	jmpq   8077b71 <ld_next+0x24b>
 8077b68:	83 f8 74             	cmp    $0x74,%eax
 8077b6b:	0f 85 05 00 00 00    	jne    8077b76 <ld_next+0x250>
 8077b71:	e9 09 00 00 00       	jmpq   8077b7f <ld_next+0x259>
 8077b76:	83 f8 75             	cmp    $0x75,%eax
 8077b79:	0f 85 05 00 00 00    	jne    8077b84 <ld_next+0x25e>
 8077b7f:	e9 09 00 00 00       	jmpq   8077b8d <ld_next+0x267>
 8077b84:	83 f8 76             	cmp    $0x76,%eax
 8077b87:	0f 85 05 00 00 00    	jne    8077b92 <ld_next+0x26c>
 8077b8d:	e9 09 00 00 00       	jmpq   8077b9b <ld_next+0x275>
 8077b92:	83 f8 77             	cmp    $0x77,%eax
 8077b95:	0f 85 05 00 00 00    	jne    8077ba0 <ld_next+0x27a>
 8077b9b:	e9 09 00 00 00       	jmpq   8077ba9 <ld_next+0x283>
 8077ba0:	83 f8 78             	cmp    $0x78,%eax
 8077ba3:	0f 85 05 00 00 00    	jne    8077bae <ld_next+0x288>
 8077ba9:	e9 09 00 00 00       	jmpq   8077bb7 <ld_next+0x291>
 8077bae:	83 f8 79             	cmp    $0x79,%eax
 8077bb1:	0f 85 05 00 00 00    	jne    8077bbc <ld_next+0x296>
 8077bb7:	e9 09 00 00 00       	jmpq   8077bc5 <ld_next+0x29f>
 8077bbc:	83 f8 7a             	cmp    $0x7a,%eax
 8077bbf:	0f 85 05 00 00 00    	jne    8077bca <ld_next+0x2a4>
 8077bc5:	e9 09 00 00 00       	jmpq   8077bd3 <ld_next+0x2ad>
 8077bca:	83 f8 41             	cmp    $0x41,%eax
 8077bcd:	0f 85 05 00 00 00    	jne    8077bd8 <ld_next+0x2b2>
 8077bd3:	e9 09 00 00 00       	jmpq   8077be1 <ld_next+0x2bb>
 8077bd8:	83 f8 42             	cmp    $0x42,%eax
 8077bdb:	0f 85 05 00 00 00    	jne    8077be6 <ld_next+0x2c0>
 8077be1:	e9 09 00 00 00       	jmpq   8077bef <ld_next+0x2c9>
 8077be6:	83 f8 43             	cmp    $0x43,%eax
 8077be9:	0f 85 05 00 00 00    	jne    8077bf4 <ld_next+0x2ce>
 8077bef:	e9 09 00 00 00       	jmpq   8077bfd <ld_next+0x2d7>
 8077bf4:	83 f8 44             	cmp    $0x44,%eax
 8077bf7:	0f 85 05 00 00 00    	jne    8077c02 <ld_next+0x2dc>
 8077bfd:	e9 09 00 00 00       	jmpq   8077c0b <ld_next+0x2e5>
 8077c02:	83 f8 45             	cmp    $0x45,%eax
 8077c05:	0f 85 05 00 00 00    	jne    8077c10 <ld_next+0x2ea>
 8077c0b:	e9 09 00 00 00       	jmpq   8077c19 <ld_next+0x2f3>
 8077c10:	83 f8 46             	cmp    $0x46,%eax
 8077c13:	0f 85 05 00 00 00    	jne    8077c1e <ld_next+0x2f8>
 8077c19:	e9 09 00 00 00       	jmpq   8077c27 <ld_next+0x301>
 8077c1e:	83 f8 47             	cmp    $0x47,%eax
 8077c21:	0f 85 05 00 00 00    	jne    8077c2c <ld_next+0x306>
 8077c27:	e9 09 00 00 00       	jmpq   8077c35 <ld_next+0x30f>
 8077c2c:	83 f8 48             	cmp    $0x48,%eax
 8077c2f:	0f 85 05 00 00 00    	jne    8077c3a <ld_next+0x314>
 8077c35:	e9 09 00 00 00       	jmpq   8077c43 <ld_next+0x31d>
 8077c3a:	83 f8 49             	cmp    $0x49,%eax
 8077c3d:	0f 85 05 00 00 00    	jne    8077c48 <ld_next+0x322>
 8077c43:	e9 09 00 00 00       	jmpq   8077c51 <ld_next+0x32b>
 8077c48:	83 f8 4a             	cmp    $0x4a,%eax
 8077c4b:	0f 85 05 00 00 00    	jne    8077c56 <ld_next+0x330>
 8077c51:	e9 09 00 00 00       	jmpq   8077c5f <ld_next+0x339>
 8077c56:	83 f8 4b             	cmp    $0x4b,%eax
 8077c59:	0f 85 05 00 00 00    	jne    8077c64 <ld_next+0x33e>
 8077c5f:	e9 09 00 00 00       	jmpq   8077c6d <ld_next+0x347>
 8077c64:	83 f8 4c             	cmp    $0x4c,%eax
 8077c67:	0f 85 05 00 00 00    	jne    8077c72 <ld_next+0x34c>
 8077c6d:	e9 09 00 00 00       	jmpq   8077c7b <ld_next+0x355>
 8077c72:	83 f8 4d             	cmp    $0x4d,%eax
 8077c75:	0f 85 05 00 00 00    	jne    8077c80 <ld_next+0x35a>
 8077c7b:	e9 09 00 00 00       	jmpq   8077c89 <ld_next+0x363>
 8077c80:	83 f8 4e             	cmp    $0x4e,%eax
 8077c83:	0f 85 05 00 00 00    	jne    8077c8e <ld_next+0x368>
 8077c89:	e9 09 00 00 00       	jmpq   8077c97 <ld_next+0x371>
 8077c8e:	83 f8 4f             	cmp    $0x4f,%eax
 8077c91:	0f 85 05 00 00 00    	jne    8077c9c <ld_next+0x376>
 8077c97:	e9 09 00 00 00       	jmpq   8077ca5 <ld_next+0x37f>
 8077c9c:	83 f8 50             	cmp    $0x50,%eax
 8077c9f:	0f 85 05 00 00 00    	jne    8077caa <ld_next+0x384>
 8077ca5:	e9 09 00 00 00       	jmpq   8077cb3 <ld_next+0x38d>
 8077caa:	83 f8 51             	cmp    $0x51,%eax
 8077cad:	0f 85 05 00 00 00    	jne    8077cb8 <ld_next+0x392>
 8077cb3:	e9 09 00 00 00       	jmpq   8077cc1 <ld_next+0x39b>
 8077cb8:	83 f8 52             	cmp    $0x52,%eax
 8077cbb:	0f 85 05 00 00 00    	jne    8077cc6 <ld_next+0x3a0>
 8077cc1:	e9 09 00 00 00       	jmpq   8077ccf <ld_next+0x3a9>
 8077cc6:	83 f8 53             	cmp    $0x53,%eax
 8077cc9:	0f 85 05 00 00 00    	jne    8077cd4 <ld_next+0x3ae>
 8077ccf:	e9 09 00 00 00       	jmpq   8077cdd <ld_next+0x3b7>
 8077cd4:	83 f8 54             	cmp    $0x54,%eax
 8077cd7:	0f 85 05 00 00 00    	jne    8077ce2 <ld_next+0x3bc>
 8077cdd:	e9 09 00 00 00       	jmpq   8077ceb <ld_next+0x3c5>
 8077ce2:	83 f8 55             	cmp    $0x55,%eax
 8077ce5:	0f 85 05 00 00 00    	jne    8077cf0 <ld_next+0x3ca>
 8077ceb:	e9 09 00 00 00       	jmpq   8077cf9 <ld_next+0x3d3>
 8077cf0:	83 f8 56             	cmp    $0x56,%eax
 8077cf3:	0f 85 05 00 00 00    	jne    8077cfe <ld_next+0x3d8>
 8077cf9:	e9 09 00 00 00       	jmpq   8077d07 <ld_next+0x3e1>
 8077cfe:	83 f8 57             	cmp    $0x57,%eax
 8077d01:	0f 85 05 00 00 00    	jne    8077d0c <ld_next+0x3e6>
 8077d07:	e9 09 00 00 00       	jmpq   8077d15 <ld_next+0x3ef>
 8077d0c:	83 f8 58             	cmp    $0x58,%eax
 8077d0f:	0f 85 05 00 00 00    	jne    8077d1a <ld_next+0x3f4>
 8077d15:	e9 09 00 00 00       	jmpq   8077d23 <ld_next+0x3fd>
 8077d1a:	83 f8 59             	cmp    $0x59,%eax
 8077d1d:	0f 85 05 00 00 00    	jne    8077d28 <ld_next+0x402>
 8077d23:	e9 09 00 00 00       	jmpq   8077d31 <ld_next+0x40b>
 8077d28:	83 f8 5a             	cmp    $0x5a,%eax
 8077d2b:	0f 85 05 00 00 00    	jne    8077d36 <ld_next+0x410>
 8077d31:	e9 09 00 00 00       	jmpq   8077d3f <ld_next+0x419>
 8077d36:	83 f8 5f             	cmp    $0x5f,%eax
 8077d39:	0f 85 05 00 00 00    	jne    8077d44 <ld_next+0x41e>
 8077d3f:	e9 09 00 00 00       	jmpq   8077d4d <ld_next+0x427>
 8077d44:	83 f8 5c             	cmp    $0x5c,%eax
 8077d47:	0f 85 05 00 00 00    	jne    8077d52 <ld_next+0x42c>
 8077d4d:	e9 09 00 00 00       	jmpq   8077d5b <ld_next+0x435>
 8077d52:	83 f8 2e             	cmp    $0x2e,%eax
 8077d55:	0f 85 05 00 00 00    	jne    8077d60 <ld_next+0x43a>
 8077d5b:	e9 09 00 00 00       	jmpq   8077d69 <ld_next+0x443>
 8077d60:	83 f8 24             	cmp    $0x24,%eax
 8077d63:	0f 85 05 00 00 00    	jne    8077d6e <ld_next+0x448>
 8077d69:	e9 09 00 00 00       	jmpq   8077d77 <ld_next+0x451>
 8077d6e:	83 f8 7e             	cmp    $0x7e,%eax
 8077d71:	0f 85 2d 01 00 00    	jne    8077ea4 <ld_next+0x57e>
 8077d77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8077d7b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8077d7f:	48 8b 05 82 61 01 00 	mov    0x16182(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077d86:	8b 00                	mov    (%rax),%eax
 8077d88:	83 f8 61             	cmp    $0x61,%eax
 8077d8b:	0f 8c 17 00 00 00    	jl     8077da8 <ld_next+0x482>
 8077d91:	48 8b 05 70 61 01 00 	mov    0x16170(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077d98:	8b 00                	mov    (%rax),%eax
 8077d9a:	83 f8 7a             	cmp    $0x7a,%eax
 8077d9d:	0f 8f 05 00 00 00    	jg     8077da8 <ld_next+0x482>
 8077da3:	e9 7f 00 00 00       	jmpq   8077e27 <ld_next+0x501>
 8077da8:	48 8b 05 59 61 01 00 	mov    0x16159(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077daf:	8b 00                	mov    (%rax),%eax
 8077db1:	83 f8 41             	cmp    $0x41,%eax
 8077db4:	0f 8c 17 00 00 00    	jl     8077dd1 <ld_next+0x4ab>
 8077dba:	48 8b 05 47 61 01 00 	mov    0x16147(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077dc1:	8b 00                	mov    (%rax),%eax
 8077dc3:	83 f8 5a             	cmp    $0x5a,%eax
 8077dc6:	0f 8f 05 00 00 00    	jg     8077dd1 <ld_next+0x4ab>
 8077dcc:	e9 56 00 00 00       	jmpq   8077e27 <ld_next+0x501>
 8077dd1:	48 8b 05 30 61 01 00 	mov    0x16130(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077dd8:	8b 00                	mov    (%rax),%eax
 8077dda:	83 f8 30             	cmp    $0x30,%eax
 8077ddd:	0f 8c 17 00 00 00    	jl     8077dfa <ld_next+0x4d4>
 8077de3:	48 8b 05 1e 61 01 00 	mov    0x1611e(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077dea:	8b 00                	mov    (%rax),%eax
 8077dec:	83 f8 39             	cmp    $0x39,%eax
 8077def:	0f 8f 05 00 00 00    	jg     8077dfa <ld_next+0x4d4>
 8077df5:	e9 2d 00 00 00       	jmpq   8077e27 <ld_next+0x501>
 8077dfa:	48 8b 05 07 61 01 00 	mov    0x16107(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077e01:	8b 00                	mov    (%rax),%eax
 8077e03:	48 89 c6             	mov    %rax,%rsi
 8077e06:	48 8d 05 71 49 01 00 	lea    0x14971(%rip),%rax        # 808c77e <L.165>
 8077e0d:	48 89 c7             	mov    %rax,%rdi
 8077e10:	b8 00 00 00 00       	mov    $0x0,%eax
 8077e15:	e8 26 f2 00 00       	callq  8087040 <strchr>
 8077e1a:	85 c0                	test   %eax,%eax
 8077e1c:	0f 85 05 00 00 00    	jne    8077e27 <ld_next+0x501>
 8077e22:	e9 05 00 00 00       	jmpq   8077e2c <ld_next+0x506>
 8077e27:	e9 05 00 00 00       	jmpq   8077e31 <ld_next+0x50b>
 8077e2c:	e9 56 00 00 00       	jmpq   8077e87 <ld_next+0x561>
 8077e31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8077e35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8077e39:	48 29 c8             	sub    %rcx,%rax
 8077e3c:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8077e3f:	83 e9 01             	sub    $0x1,%ecx
 8077e42:	48 63 c9             	movslq %ecx,%rcx
 8077e45:	48 89 c2             	mov    %rax,%rdx
 8077e48:	48 89 c8             	mov    %rcx,%rax
 8077e4b:	48 39 c2             	cmp    %rax,%rdx
 8077e4e:	0f 8d 24 00 00 00    	jge    8077e78 <ld_next+0x552>
 8077e54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8077e58:	48 89 c1             	mov    %rax,%rcx
 8077e5b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8077e62:	00 00 00 
 8077e65:	48 01 d0             	add    %rdx,%rax
 8077e68:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8077e6c:	48 8b 05 95 60 01 00 	mov    0x16095(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077e73:	0f be 00             	movsbl (%rax),%eax
 8077e76:	88 01                	mov    %al,(%rcx)
 8077e78:	b8 00 00 00 00       	mov    $0x0,%eax
 8077e7d:	e8 d4 a4 fd ff       	callq  8052356 <minp>
 8077e82:	e9 f8 fe ff ff       	jmpq   8077d7f <ld_next+0x459>
 8077e87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8077e8b:	b9 00 00 00 00       	mov    $0x0,%ecx
 8077e90:	88 08                	mov    %cl,(%rax)
 8077e92:	b8 00 01 00 00       	mov    $0x100,%eax
 8077e97:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8077e9a:	e9 36 00 00 00       	jmpq   8077ed5 <ld_next+0x5af>
 8077e9f:	e9 09 00 00 00       	jmpq   8077ead <ld_next+0x587>
 8077ea4:	83 f8 ff             	cmp    $0xffffffff,%eax
 8077ea7:	0f 85 0d 00 00 00    	jne    8077eba <ld_next+0x594>
 8077ead:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8077eb2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8077eb5:	e9 1b 00 00 00       	jmpq   8077ed5 <ld_next+0x5af>
 8077eba:	48 8b 05 47 60 01 00 	mov    0x16047(%rip),%rax        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 8077ec1:	8b 00                	mov    (%rax),%eax
 8077ec3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8077ec6:	b8 00 00 00 00       	mov    $0x0,%eax
 8077ecb:	e8 3d a2 fd ff       	callq  805210d <inp>
 8077ed0:	e9 00 00 00 00       	jmpq   8077ed5 <ld_next+0x5af>
 8077ed5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8077ed8:	e9 00 00 00 00       	jmpq   8077edd <ld_next+0x5b7>
 8077edd:	c9                   	leaveq 
 8077ede:	c3                   	retq   

0000000008077edf <libname_to_filename>:
 8077edf:	55                   	push   %rbp
 8077ee0:	48 89 e5             	mov    %rsp,%rbp
 8077ee3:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8077eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8077eee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8077ef2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8077ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8077efa:	48 b9 e4 00 00 00 00 	movabs $0xe4,%rcx
 8077f01:	00 00 00 
 8077f04:	48 01 c8             	add    %rcx,%rax
 8077f07:	8b 08                	mov    (%rax),%ecx
 8077f09:	85 c9                	test   %ecx,%ecx
 8077f0b:	0f 84 05 00 00 00    	je     8077f16 <libname_to_filename+0x37>
 8077f11:	e9 2a 00 00 00       	jmpq   8077f40 <libname_to_filename+0x61>
 8077f16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8077f1a:	49 89 c2             	mov    %rax,%r10
 8077f1d:	48 8d 05 66 48 01 00 	lea    0x14866(%rip),%rax        # 808c78a <L.166>
 8077f24:	48 89 c6             	mov    %rax,%rsi
 8077f27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8077f2b:	48 89 c7             	mov    %rax,%rdi
 8077f2e:	4c 89 d2             	mov    %r10,%rdx
 8077f31:	b8 00 00 00 00       	mov    $0x0,%eax
 8077f36:	e8 b5 fc 00 00       	callq  8087bf0 <__preinit_array_end+0x150>
 8077f3b:	e9 25 00 00 00       	jmpq   8077f65 <libname_to_filename+0x86>
 8077f40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8077f44:	49 89 c2             	mov    %rax,%r10
 8077f47:	48 8d 05 45 48 01 00 	lea    0x14845(%rip),%rax        # 808c793 <L.167>
 8077f4e:	48 89 c6             	mov    %rax,%rsi
 8077f51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8077f55:	48 89 c7             	mov    %rax,%rdi
 8077f58:	4c 89 d2             	mov    %r10,%rdx
 8077f5b:	b8 00 00 00 00       	mov    $0x0,%eax
 8077f60:	e8 8b fc 00 00       	callq  8087bf0 <__preinit_array_end+0x150>
 8077f65:	c9                   	leaveq 
 8077f66:	c3                   	retq   

0000000008077f67 <ld_add_file>:
 8077f67:	55                   	push   %rbp
 8077f68:	48 89 e5             	mov    %rsp,%rbp
 8077f6b:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 8077f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8077f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8077f7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8077f7f:	49 89 c2             	mov    %rax,%r10
 8077f82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8077f86:	48 89 c6             	mov    %rax,%rsi
 8077f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8077f8d:	48 89 c7             	mov    %rax,%rdi
 8077f90:	4c 89 d2             	mov    %r10,%rdx
 8077f93:	b8 00 00 00 00       	mov    $0x0,%eax
 8077f98:	e8 e2 73 fd ff       	callq  804f37f <tcc_add_file_internal>
 8077f9d:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8077fa0:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8077fa3:	85 c0                	test   %eax,%eax
 8077fa5:	0f 84 26 00 00 00    	je     8077fd1 <ld_add_file+0x6a>
 8077fab:	b8 00 00 00 00       	mov    $0x0,%eax
 8077fb0:	49 89 c2             	mov    %rax,%r10
 8077fb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8077fb7:	48 89 c6             	mov    %rax,%rsi
 8077fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8077fbe:	48 89 c7             	mov    %rax,%rdi
 8077fc1:	4c 89 d2             	mov    %r10,%rdx
 8077fc4:	b8 00 00 00 00       	mov    $0x0,%eax
 8077fc9:	e8 73 7a fd ff       	callq  804fa41 <tcc_add_dll>
 8077fce:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8077fd1:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8077fd4:	e9 00 00 00 00       	jmpq   8077fd9 <ld_add_file+0x72>
 8077fd9:	c9                   	leaveq 
 8077fda:	c3                   	retq   

0000000008077fdb <ld_add_file_list>:
 8077fdb:	55                   	push   %rbp
 8077fdc:	48 89 e5             	mov    %rsp,%rbp
 8077fdf:	48 81 ec 40 08 00 00 	sub    $0x840,%rsp
 8077fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8077fea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8077fee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8077ff2:	b8 00 00 00 00       	mov    $0x0,%eax
 8077ff7:	89 85 dc f7 ff ff    	mov    %eax,-0x824(%rbp)
 8077ffd:	b8 00 00 00 00       	mov    $0x0,%eax
 8078002:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%rbp)
 8078008:	b8 00 00 00 00       	mov    $0x0,%eax
 807800d:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
 8078014:	48 8d 05 80 47 01 00 	lea    0x14780(%rip),%rax        # 808c79b <L.168>
 807801b:	48 89 c6             	mov    %rax,%rsi
 807801e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078022:	48 89 c7             	mov    %rax,%rdi
 8078025:	b8 00 00 00 00       	mov    $0x0,%eax
 807802a:	e8 b1 f1 00 00       	callq  80871e0 <strcmp>
 807802f:	85 c0                	test   %eax,%eax
 8078031:	0f 84 07 00 00 00    	je     807803e <ld_add_file_list+0x63>
 8078037:	b8 00 00 00 00       	mov    $0x0,%eax
 807803c:	eb 05                	jmp    8078043 <ld_add_file_list+0x68>
 807803e:	b8 01 00 00 00       	mov    $0x1,%eax
 8078043:	89 85 e0 f7 ff ff    	mov    %eax,-0x820(%rbp)
 8078049:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807804c:	85 c0                	test   %eax,%eax
 807804e:	0f 84 05 00 00 00    	je     8078059 <ld_add_file_list+0x7e>
 8078054:	e9 0a 00 00 00       	jmpq   8078063 <ld_add_file_list+0x88>
 8078059:	b8 00 00 00 00       	mov    $0x0,%eax
 807805e:	e8 b3 06 00 00       	callq  8078716 <new_undef_syms>
 8078063:	b8 00 04 00 00       	mov    $0x400,%eax
 8078068:	49 89 c2             	mov    %rax,%r10
 807806b:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 8078072:	48 89 c6             	mov    %rax,%rsi
 8078075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078079:	48 89 c7             	mov    %rax,%rdi
 807807c:	4c 89 d2             	mov    %r10,%rdx
 807807f:	b8 00 00 00 00       	mov    $0x0,%eax
 8078084:	e8 9d f8 ff ff       	callq  8077926 <ld_next>
 8078089:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%rbp)
 807808f:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 8078095:	83 f8 28             	cmp    $0x28,%eax
 8078098:	0f 84 14 00 00 00    	je     80780b2 <ld_add_file_list+0xd7>
 807809e:	48 8d 05 fc 46 01 00 	lea    0x146fc(%rip),%rax        # 808c7a1 <L.169>
 80780a5:	48 89 c7             	mov    %rax,%rdi
 80780a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80780ad:	e8 a0 90 fd ff       	callq  8051152 <expect>
 80780b2:	b8 00 04 00 00       	mov    $0x400,%eax
 80780b7:	49 89 c2             	mov    %rax,%r10
 80780ba:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 80780c1:	48 89 c6             	mov    %rax,%rsi
 80780c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80780c8:	48 89 c7             	mov    %rax,%rdi
 80780cb:	4c 89 d2             	mov    %r10,%rdx
 80780ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80780d3:	e8 4e f8 ff ff       	callq  8077926 <ld_next>
 80780d8:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%rbp)
 80780de:	b8 00 00 00 00       	mov    $0x0,%eax
 80780e3:	88 85 e8 f7 ff ff    	mov    %al,-0x818(%rbp)
 80780e9:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 80780ef:	83 f8 ff             	cmp    $0xffffffff,%eax
 80780f2:	0f 85 29 00 00 00    	jne    8078121 <ld_add_file_list+0x146>
 80780f8:	48 8d 05 a4 46 01 00 	lea    0x146a4(%rip),%rax        # 808c7a3 <L.170>
 80780ff:	48 89 c7             	mov    %rax,%rdi
 8078102:	b8 00 00 00 00       	mov    $0x0,%eax
 8078107:	e8 e1 53 fd ff       	callq  804d4ed <tcc_error_noabort>
 807810c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8078111:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%rbp)
 8078117:	e9 72 03 00 00       	jmpq   807848e <ld_add_file_list+0x4b3>
 807811c:	e9 20 01 00 00       	jmpq   8078241 <ld_add_file_list+0x266>
 8078121:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 8078127:	83 f8 29             	cmp    $0x29,%eax
 807812a:	0f 85 0a 00 00 00    	jne    807813a <ld_add_file_list+0x15f>
 8078130:	e9 b6 02 00 00       	jmpq   80783eb <ld_add_file_list+0x410>
 8078135:	e9 07 01 00 00       	jmpq   8078241 <ld_add_file_list+0x266>
 807813a:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 8078140:	83 f8 2d             	cmp    $0x2d,%eax
 8078143:	0f 85 c2 00 00 00    	jne    807820b <ld_add_file_list+0x230>
 8078149:	b8 00 04 00 00       	mov    $0x400,%eax
 807814e:	49 89 c2             	mov    %rax,%r10
 8078151:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 8078158:	48 89 c6             	mov    %rax,%rsi
 807815b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807815f:	48 89 c7             	mov    %rax,%rdi
 8078162:	4c 89 d2             	mov    %r10,%rdx
 8078165:	b8 00 00 00 00       	mov    $0x0,%eax
 807816a:	e8 b7 f7 ff ff       	callq  8077926 <ld_next>
 807816f:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%rbp)
 8078175:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 807817b:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8078181:	0f 85 15 00 00 00    	jne    807819c <ld_add_file_list+0x1c1>
 8078187:	0f be 85 e8 fb ff ff 	movsbl -0x418(%rbp),%eax
 807818e:	83 f8 6c             	cmp    $0x6c,%eax
 8078191:	0f 85 05 00 00 00    	jne    807819c <ld_add_file_list+0x1c1>
 8078197:	e9 24 00 00 00       	jmpq   80781c0 <ld_add_file_list+0x1e5>
 807819c:	48 8d 05 17 46 01 00 	lea    0x14617(%rip),%rax        # 808c7ba <L.171>
 80781a3:	48 89 c7             	mov    %rax,%rdi
 80781a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80781ab:	e8 3d 53 fd ff       	callq  804d4ed <tcc_error_noabort>
 80781b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80781b5:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%rbp)
 80781bb:	e9 ce 02 00 00       	jmpq   807848e <ld_add_file_list+0x4b3>
 80781c0:	48 8d 85 e9 fb ff ff 	lea    -0x417(%rbp),%rax
 80781c7:	48 89 c6             	mov    %rax,%rsi
 80781ca:	48 8d 85 e8 f7 ff ff 	lea    -0x818(%rbp),%rax
 80781d1:	48 89 c7             	mov    %rax,%rdi
 80781d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80781d9:	e8 82 f0 00 00       	callq  8087260 <strcpy>
 80781de:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 80781e5:	49 89 c2             	mov    %rax,%r10
 80781e8:	48 8d 85 e8 f7 ff ff 	lea    -0x818(%rbp),%rax
 80781ef:	48 89 c6             	mov    %rax,%rsi
 80781f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80781f6:	48 89 c7             	mov    %rax,%rdi
 80781f9:	4c 89 d2             	mov    %r10,%rdx
 80781fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8078201:	e8 d9 fc ff ff       	callq  8077edf <libname_to_filename>
 8078206:	e9 36 00 00 00       	jmpq   8078241 <ld_add_file_list+0x266>
 807820b:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 8078211:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8078217:	0f 84 24 00 00 00    	je     8078241 <ld_add_file_list+0x266>
 807821d:	48 8d 05 ac 45 01 00 	lea    0x145ac(%rip),%rax        # 808c7d0 <L.172>
 8078224:	48 89 c7             	mov    %rax,%rdi
 8078227:	b8 00 00 00 00       	mov    $0x0,%eax
 807822c:	e8 bc 52 fd ff       	callq  804d4ed <tcc_error_noabort>
 8078231:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8078236:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%rbp)
 807823c:	e9 4d 02 00 00       	jmpq   807848e <ld_add_file_list+0x4b3>
 8078241:	48 8d 05 9a 45 01 00 	lea    0x1459a(%rip),%rax        # 808c7e2 <L.173>
 8078248:	48 89 c6             	mov    %rax,%rsi
 807824b:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 8078252:	48 89 c7             	mov    %rax,%rdi
 8078255:	b8 00 00 00 00       	mov    $0x0,%eax
 807825a:	e8 81 ef 00 00       	callq  80871e0 <strcmp>
 807825f:	85 c0                	test   %eax,%eax
 8078261:	0f 84 05 00 00 00    	je     807826c <ld_add_file_list+0x291>
 8078267:	e9 41 00 00 00       	jmpq   80782ad <ld_add_file_list+0x2d2>
 807826c:	b8 01 00 00 00       	mov    $0x1,%eax
 8078271:	49 89 c2             	mov    %rax,%r10
 8078274:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078278:	48 89 c6             	mov    %rax,%rsi
 807827b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807827f:	48 89 c7             	mov    %rax,%rdi
 8078282:	4c 89 d2             	mov    %r10,%rdx
 8078285:	b8 00 00 00 00       	mov    $0x0,%eax
 807828a:	e8 4c fd ff ff       	callq  8077fdb <ld_add_file_list>
 807828f:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%rbp)
 8078295:	8b 85 d8 f7 ff ff    	mov    -0x828(%rbp),%eax
 807829b:	85 c0                	test   %eax,%eax
 807829d:	0f 84 05 00 00 00    	je     80782a8 <ld_add_file_list+0x2cd>
 80782a3:	e9 e6 01 00 00       	jmpq   807848e <ld_add_file_list+0x4b3>
 80782a8:	e9 d2 00 00 00       	jmpq   807837f <ld_add_file_list+0x3a4>
 80782ad:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80782b0:	85 c0                	test   %eax,%eax
 80782b2:	0f 84 05 00 00 00    	je     80782bd <ld_add_file_list+0x2e2>
 80782b8:	e9 c2 00 00 00       	jmpq   807837f <ld_add_file_list+0x3a4>
 80782bd:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 80782c4:	48 89 c6             	mov    %rax,%rsi
 80782c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80782cb:	48 89 c7             	mov    %rax,%rdi
 80782ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80782d3:	e8 8f fc ff ff       	callq  8077f67 <ld_add_file>
 80782d8:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%rbp)
 80782de:	8b 85 d8 f7 ff ff    	mov    -0x828(%rbp),%eax
 80782e4:	85 c0                	test   %eax,%eax
 80782e6:	0f 84 05 00 00 00    	je     80782f1 <ld_add_file_list+0x316>
 80782ec:	e9 9d 01 00 00       	jmpq   807848e <ld_add_file_list+0x4b3>
 80782f1:	8b 85 e0 f7 ff ff    	mov    -0x820(%rbp),%eax
 80782f7:	85 c0                	test   %eax,%eax
 80782f9:	0f 84 80 00 00 00    	je     807837f <ld_add_file_list+0x3a4>
 80782ff:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 8078306:	48 89 c7             	mov    %rax,%rdi
 8078309:	b8 00 00 00 00       	mov    $0x0,%eax
 807830e:	e8 89 3d fd ff       	callq  804c09c <tcc_strdup>
 8078313:	49 89 c2             	mov    %rax,%r10
 8078316:	48 8d 85 dc f7 ff ff 	lea    -0x824(%rbp),%rax
 807831d:	48 89 c6             	mov    %rax,%rsi
 8078320:	48 8d 85 d0 f7 ff ff 	lea    -0x830(%rbp),%rax
 8078327:	48 89 c7             	mov    %rax,%rdi
 807832a:	4c 89 d2             	mov    %r10,%rdx
 807832d:	b8 00 00 00 00       	mov    $0x0,%eax
 8078332:	e8 cc 3d fd ff       	callq  804c103 <dynarray_add>
 8078337:	0f be 85 e8 f7 ff ff 	movsbl -0x818(%rbp),%eax
 807833e:	83 f8 00             	cmp    $0x0,%eax
 8078341:	0f 84 38 00 00 00    	je     807837f <ld_add_file_list+0x3a4>
 8078347:	48 8d 85 e8 f7 ff ff 	lea    -0x818(%rbp),%rax
 807834e:	48 89 c7             	mov    %rax,%rdi
 8078351:	b8 00 00 00 00       	mov    $0x0,%eax
 8078356:	e8 41 3d fd ff       	callq  804c09c <tcc_strdup>
 807835b:	49 89 c2             	mov    %rax,%r10
 807835e:	48 8d 85 dc f7 ff ff 	lea    -0x824(%rbp),%rax
 8078365:	48 89 c6             	mov    %rax,%rsi
 8078368:	48 8d 85 d0 f7 ff ff 	lea    -0x830(%rbp),%rax
 807836f:	48 89 c7             	mov    %rax,%rdi
 8078372:	4c 89 d2             	mov    %r10,%rdx
 8078375:	b8 00 00 00 00       	mov    $0x0,%eax
 807837a:	e8 84 3d fd ff       	callq  804c103 <dynarray_add>
 807837f:	b8 00 04 00 00       	mov    $0x400,%eax
 8078384:	49 89 c2             	mov    %rax,%r10
 8078387:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 807838e:	48 89 c6             	mov    %rax,%rsi
 8078391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078395:	48 89 c7             	mov    %rax,%rdi
 8078398:	4c 89 d2             	mov    %r10,%rdx
 807839b:	b8 00 00 00 00       	mov    $0x0,%eax
 80783a0:	e8 81 f5 ff ff       	callq  8077926 <ld_next>
 80783a5:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%rbp)
 80783ab:	8b 85 e4 f7 ff ff    	mov    -0x81c(%rbp),%eax
 80783b1:	83 f8 2c             	cmp    $0x2c,%eax
 80783b4:	0f 85 2c 00 00 00    	jne    80783e6 <ld_add_file_list+0x40b>
 80783ba:	b8 00 04 00 00       	mov    $0x400,%eax
 80783bf:	49 89 c2             	mov    %rax,%r10
 80783c2:	48 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%rax
 80783c9:	48 89 c6             	mov    %rax,%rsi
 80783cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80783d0:	48 89 c7             	mov    %rax,%rdi
 80783d3:	4c 89 d2             	mov    %r10,%rdx
 80783d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80783db:	e8 46 f5 ff ff       	callq  8077926 <ld_next>
 80783e0:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%rbp)
 80783e6:	e9 f3 fc ff ff       	jmpq   80780de <ld_add_file_list+0x103>
 80783eb:	8b 85 e0 f7 ff ff    	mov    -0x820(%rbp),%eax
 80783f1:	85 c0                	test   %eax,%eax
 80783f3:	0f 84 95 00 00 00    	je     807848e <ld_add_file_list+0x4b3>
 80783f9:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80783fc:	85 c0                	test   %eax,%eax
 80783fe:	0f 84 05 00 00 00    	je     8078409 <ld_add_file_list+0x42e>
 8078404:	e9 85 00 00 00       	jmpq   807848e <ld_add_file_list+0x4b3>
 8078409:	b8 00 00 00 00       	mov    $0x0,%eax
 807840e:	e8 03 03 00 00       	callq  8078716 <new_undef_syms>
 8078413:	85 c0                	test   %eax,%eax
 8078415:	0f 84 73 00 00 00    	je     807848e <ld_add_file_list+0x4b3>
 807841b:	b8 00 00 00 00       	mov    $0x0,%eax
 8078420:	89 85 cc f7 ff ff    	mov    %eax,-0x834(%rbp)
 8078426:	8b 85 cc f7 ff ff    	mov    -0x834(%rbp),%eax
 807842c:	8b 8d dc f7 ff ff    	mov    -0x824(%rbp),%ecx
 8078432:	39 c8                	cmp    %ecx,%eax
 8078434:	0f 8d 4f 00 00 00    	jge    8078489 <ld_add_file_list+0x4ae>
 807843a:	e9 14 00 00 00       	jmpq   8078453 <ld_add_file_list+0x478>
 807843f:	8b 85 cc f7 ff ff    	mov    -0x834(%rbp),%eax
 8078445:	48 89 c1             	mov    %rax,%rcx
 8078448:	83 c0 01             	add    $0x1,%eax
 807844b:	89 85 cc f7 ff ff    	mov    %eax,-0x834(%rbp)
 8078451:	eb d3                	jmp    8078426 <ld_add_file_list+0x44b>
 8078453:	8b 85 cc f7 ff ff    	mov    -0x834(%rbp),%eax
 8078459:	48 63 c0             	movslq %eax,%rax
 807845c:	48 89 c1             	mov    %rax,%rcx
 807845f:	48 c1 e1 03          	shl    $0x3,%rcx
 8078463:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
 807846a:	48 89 ca             	mov    %rcx,%rdx
 807846d:	48 01 d0             	add    %rdx,%rax
 8078470:	48 8b 08             	mov    (%rax),%rcx
 8078473:	48 89 ce             	mov    %rcx,%rsi
 8078476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807847a:	48 89 c7             	mov    %rax,%rdi
 807847d:	b8 00 00 00 00       	mov    $0x0,%eax
 8078482:	e8 e0 fa ff ff       	callq  8077f67 <ld_add_file>
 8078487:	eb b6                	jmp    807843f <ld_add_file_list+0x464>
 8078489:	e9 7b ff ff ff       	jmpq   8078409 <ld_add_file_list+0x42e>
 807848e:	48 8d 85 dc f7 ff ff 	lea    -0x824(%rbp),%rax
 8078495:	48 89 c6             	mov    %rax,%rsi
 8078498:	48 8d 85 d0 f7 ff ff 	lea    -0x830(%rbp),%rax
 807849f:	48 89 c7             	mov    %rax,%rdi
 80784a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80784a7:	e8 1b 3d fd ff       	callq  804c1c7 <dynarray_reset>
 80784ac:	8b 85 d8 f7 ff ff    	mov    -0x828(%rbp),%eax
 80784b2:	e9 00 00 00 00       	jmpq   80784b7 <ld_add_file_list+0x4dc>
 80784b7:	c9                   	leaveq 
 80784b8:	c3                   	retq   

00000000080784b9 <tcc_load_ldscript>:
 80784b9:	55                   	push   %rbp
 80784ba:	48 89 e5             	mov    %rsp,%rbp
 80784bd:	48 81 ec 50 04 00 00 	sub    $0x450,%rsp
 80784c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80784c8:	48 8b 05 d1 59 01 00 	mov    0x159d1(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 80784cf:	48 8b 00             	mov    (%rax),%rax
 80784d2:	48 8b 08             	mov    (%rax),%rcx
 80784d5:	0f b6 01             	movzbl (%rcx),%eax
 80784d8:	4c 8b 1d 29 5a 01 00 	mov    0x15a29(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80784df:	41 89 03             	mov    %eax,(%r11)
 80784e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80784e7:	e8 f8 9b fd ff       	callq  80520e4 <handle_eob>
 80784ec:	4c 8b 1d 15 5a 01 00 	mov    0x15a15(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 80784f3:	41 89 03             	mov    %eax,(%r11)
 80784f6:	b8 40 00 00 00       	mov    $0x40,%eax
 80784fb:	49 89 c2             	mov    %rax,%r10
 80784fe:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8078502:	48 89 c6             	mov    %rax,%rsi
 8078505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078509:	48 89 c7             	mov    %rax,%rdi
 807850c:	4c 89 d2             	mov    %r10,%rdx
 807850f:	b8 00 00 00 00       	mov    $0x0,%eax
 8078514:	e8 0d f4 ff ff       	callq  8077926 <ld_next>
 8078519:	89 85 b4 fb ff ff    	mov    %eax,-0x44c(%rbp)
 807851f:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 8078525:	83 f8 ff             	cmp    $0xffffffff,%eax
 8078528:	0f 85 0f 00 00 00    	jne    807853d <tcc_load_ldscript+0x84>
 807852e:	b8 00 00 00 00       	mov    $0x0,%eax
 8078533:	e9 dc 01 00 00       	jmpq   8078714 <tcc_load_ldscript+0x25b>
 8078538:	e9 1c 00 00 00       	jmpq   8078559 <tcc_load_ldscript+0xa0>
 807853d:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 8078543:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8078549:	0f 84 0a 00 00 00    	je     8078559 <tcc_load_ldscript+0xa0>
 807854f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8078554:	e9 bb 01 00 00       	jmpq   8078714 <tcc_load_ldscript+0x25b>
 8078559:	48 8d 05 8c 42 01 00 	lea    0x1428c(%rip),%rax        # 808c7ec <L.174>
 8078560:	48 89 c6             	mov    %rax,%rsi
 8078563:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8078567:	48 89 c7             	mov    %rax,%rdi
 807856a:	b8 00 00 00 00       	mov    $0x0,%eax
 807856f:	e8 6c ec 00 00       	callq  80871e0 <strcmp>
 8078574:	85 c0                	test   %eax,%eax
 8078576:	0f 84 28 00 00 00    	je     80785a4 <tcc_load_ldscript+0xeb>
 807857c:	48 8d 05 6f 42 01 00 	lea    0x1426f(%rip),%rax        # 808c7f2 <L.175>
 8078583:	48 89 c6             	mov    %rax,%rsi
 8078586:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 807858a:	48 89 c7             	mov    %rax,%rdi
 807858d:	b8 00 00 00 00       	mov    $0x0,%eax
 8078592:	e8 49 ec 00 00       	callq  80871e0 <strcmp>
 8078597:	85 c0                	test   %eax,%eax
 8078599:	0f 84 05 00 00 00    	je     80785a4 <tcc_load_ldscript+0xeb>
 807859f:	e9 47 00 00 00       	jmpq   80785eb <tcc_load_ldscript+0x132>
 80785a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80785a9:	49 89 c2             	mov    %rax,%r10
 80785ac:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80785b0:	48 89 c6             	mov    %rax,%rsi
 80785b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80785b7:	48 89 c7             	mov    %rax,%rdi
 80785ba:	4c 89 d2             	mov    %r10,%rdx
 80785bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80785c2:	e8 14 fa ff ff       	callq  8077fdb <ld_add_file_list>
 80785c7:	89 85 b0 fb ff ff    	mov    %eax,-0x450(%rbp)
 80785cd:	8b 85 b0 fb ff ff    	mov    -0x450(%rbp),%eax
 80785d3:	85 c0                	test   %eax,%eax
 80785d5:	0f 84 0b 00 00 00    	je     80785e6 <tcc_load_ldscript+0x12d>
 80785db:	8b 85 b0 fb ff ff    	mov    -0x450(%rbp),%eax
 80785e1:	e9 2e 01 00 00       	jmpq   8078714 <tcc_load_ldscript+0x25b>
 80785e6:	e9 1a 01 00 00       	jmpq   8078705 <tcc_load_ldscript+0x24c>
 80785eb:	48 8d 05 06 42 01 00 	lea    0x14206(%rip),%rax        # 808c7f8 <L.176>
 80785f2:	48 89 c6             	mov    %rax,%rsi
 80785f5:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 80785f9:	48 89 c7             	mov    %rax,%rdi
 80785fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8078601:	e8 da eb 00 00       	callq  80871e0 <strcmp>
 8078606:	85 c0                	test   %eax,%eax
 8078608:	0f 84 28 00 00 00    	je     8078636 <tcc_load_ldscript+0x17d>
 807860e:	48 8d 05 f1 41 01 00 	lea    0x141f1(%rip),%rax        # 808c806 <L.177>
 8078615:	48 89 c6             	mov    %rax,%rsi
 8078618:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 807861c:	48 89 c7             	mov    %rax,%rdi
 807861f:	b8 00 00 00 00       	mov    $0x0,%eax
 8078624:	e8 b7 eb 00 00       	callq  80871e0 <strcmp>
 8078629:	85 c0                	test   %eax,%eax
 807862b:	0f 84 05 00 00 00    	je     8078636 <tcc_load_ldscript+0x17d>
 8078631:	e9 c5 00 00 00       	jmpq   80786fb <tcc_load_ldscript+0x242>
 8078636:	b8 40 00 00 00       	mov    $0x40,%eax
 807863b:	49 89 c2             	mov    %rax,%r10
 807863e:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 8078642:	48 89 c6             	mov    %rax,%rsi
 8078645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078649:	48 89 c7             	mov    %rax,%rdi
 807864c:	4c 89 d2             	mov    %r10,%rdx
 807864f:	b8 00 00 00 00       	mov    $0x0,%eax
 8078654:	e8 cd f2 ff ff       	callq  8077926 <ld_next>
 8078659:	89 85 b4 fb ff ff    	mov    %eax,-0x44c(%rbp)
 807865f:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 8078665:	83 f8 28             	cmp    $0x28,%eax
 8078668:	0f 84 14 00 00 00    	je     8078682 <tcc_load_ldscript+0x1c9>
 807866e:	48 8d 05 98 41 01 00 	lea    0x14198(%rip),%rax        # 808c80d <L.178>
 8078675:	48 89 c7             	mov    %rax,%rdi
 8078678:	b8 00 00 00 00       	mov    $0x0,%eax
 807867d:	e8 d0 8a fd ff       	callq  8051152 <expect>
 8078682:	b8 00 04 00 00       	mov    $0x400,%eax
 8078687:	49 89 c2             	mov    %rax,%r10
 807868a:	48 8d 85 b8 fb ff ff 	lea    -0x448(%rbp),%rax
 8078691:	48 89 c6             	mov    %rax,%rsi
 8078694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078698:	48 89 c7             	mov    %rax,%rdi
 807869b:	4c 89 d2             	mov    %r10,%rdx
 807869e:	b8 00 00 00 00       	mov    $0x0,%eax
 80786a3:	e8 7e f2 ff ff       	callq  8077926 <ld_next>
 80786a8:	89 85 b4 fb ff ff    	mov    %eax,-0x44c(%rbp)
 80786ae:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 80786b4:	83 f8 ff             	cmp    $0xffffffff,%eax
 80786b7:	0f 85 23 00 00 00    	jne    80786e0 <tcc_load_ldscript+0x227>
 80786bd:	48 8d 05 4b 41 01 00 	lea    0x1414b(%rip),%rax        # 808c80f <L.179>
 80786c4:	48 89 c7             	mov    %rax,%rdi
 80786c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80786cc:	e8 1c 4e fd ff       	callq  804d4ed <tcc_error_noabort>
 80786d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80786d6:	e9 39 00 00 00       	jmpq   8078714 <tcc_load_ldscript+0x25b>
 80786db:	e9 14 00 00 00       	jmpq   80786f4 <tcc_load_ldscript+0x23b>
 80786e0:	8b 85 b4 fb ff ff    	mov    -0x44c(%rbp),%eax
 80786e6:	83 f8 29             	cmp    $0x29,%eax
 80786e9:	0f 85 05 00 00 00    	jne    80786f4 <tcc_load_ldscript+0x23b>
 80786ef:	e9 02 00 00 00       	jmpq   80786f6 <tcc_load_ldscript+0x23d>
 80786f4:	eb 8c                	jmp    8078682 <tcc_load_ldscript+0x1c9>
 80786f6:	e9 0a 00 00 00       	jmpq   8078705 <tcc_load_ldscript+0x24c>
 80786fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8078700:	e9 0f 00 00 00       	jmpq   8078714 <tcc_load_ldscript+0x25b>
 8078705:	e9 ec fd ff ff       	jmpq   80784f6 <tcc_load_ldscript+0x3d>
 807870a:	b8 00 00 00 00       	mov    $0x0,%eax
 807870f:	e9 00 00 00 00       	jmpq   8078714 <tcc_load_ldscript+0x25b>
 8078714:	c9                   	leaveq 
 8078715:	c3                   	retq   

0000000008078716 <new_undef_syms>:
 8078716:	55                   	push   %rbp
 8078717:	48 89 e5             	mov    %rsp,%rbp
 807871a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8078721:	b8 00 00 00 00       	mov    $0x0,%eax
 8078726:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8078729:	8b 05 35 3d 01 00    	mov    0x13d35(%rip),%eax        # 808c464 <new_undef_sym>
 807872f:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8078732:	b8 00 00 00 00       	mov    $0x0,%eax
 8078737:	4c 8b 1d 22 59 01 00 	mov    0x15922(%rip),%r11        # 808e060 <_GLOBAL_OFFSET_TABLE_+0x3e0>
 807873e:	41 89 03             	mov    %eax,(%r11)
 8078741:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8078744:	e9 00 00 00 00       	jmpq   8078749 <new_undef_syms+0x33>
 8078749:	c9                   	leaveq 
 807874a:	c3                   	retq   

000000000807874b <isnum>:
 807874b:	55                   	push   %rbp
 807874c:	48 89 e5             	mov    %rsp,%rbp
 807874f:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8078756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807875a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807875d:	83 f8 30             	cmp    $0x30,%eax
 8078760:	0f 8c 13 00 00 00    	jl     8078779 <isnum+0x2e>
 8078766:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8078769:	83 f8 39             	cmp    $0x39,%eax
 807876c:	0f 8f 07 00 00 00    	jg     8078779 <isnum+0x2e>
 8078772:	b8 01 00 00 00       	mov    $0x1,%eax
 8078777:	eb 05                	jmp    807877e <isnum+0x33>
 8078779:	b8 00 00 00 00       	mov    $0x0,%eax
 807877e:	e9 00 00 00 00       	jmpq   8078783 <isnum+0x38>
 8078783:	c9                   	leaveq 
 8078784:	c3                   	retq   

0000000008078785 <isid>:
 8078785:	55                   	push   %rbp
 8078786:	48 89 e5             	mov    %rsp,%rbp
 8078789:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8078790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8078794:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8078797:	83 f8 61             	cmp    $0x61,%eax
 807879a:	0f 8c 11 00 00 00    	jl     80787b1 <isid+0x2c>
 80787a0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80787a3:	83 f8 7a             	cmp    $0x7a,%eax
 80787a6:	0f 8f 05 00 00 00    	jg     80787b1 <isid+0x2c>
 80787ac:	e9 30 00 00 00       	jmpq   80787e1 <isid+0x5c>
 80787b1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80787b4:	83 f8 41             	cmp    $0x41,%eax
 80787b7:	0f 8c 11 00 00 00    	jl     80787ce <isid+0x49>
 80787bd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80787c0:	83 f8 5a             	cmp    $0x5a,%eax
 80787c3:	0f 8f 05 00 00 00    	jg     80787ce <isid+0x49>
 80787c9:	e9 13 00 00 00       	jmpq   80787e1 <isid+0x5c>
 80787ce:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80787d1:	83 f8 5f             	cmp    $0x5f,%eax
 80787d4:	0f 84 07 00 00 00    	je     80787e1 <isid+0x5c>
 80787da:	b8 00 00 00 00       	mov    $0x0,%eax
 80787df:	eb 05                	jmp    80787e6 <isid+0x61>
 80787e1:	b8 01 00 00 00       	mov    $0x1,%eax
 80787e6:	e9 00 00 00 00       	jmpq   80787eb <isid+0x66>
 80787eb:	c9                   	leaveq 
 80787ec:	c3                   	retq   
	...

0000000008078800 <__bswap_16>:
 8078800:	55                   	push   %rbp
 8078801:	48 89 e5             	mov    %rsp,%rbp
 8078804:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807880b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807880f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8078812:	c1 f8 08             	sar    $0x8,%eax
 8078815:	81 e0 ff 00 00 00    	and    $0xff,%eax
 807881b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807881e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 8078824:	c1 e1 08             	shl    $0x8,%ecx
 8078827:	48 09 c8             	or     %rcx,%rax
 807882a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 8078830:	e9 00 00 00 00       	jmpq   8078835 <__bswap_16+0x35>
 8078835:	c9                   	leaveq 
 8078836:	c3                   	retq   

0000000008078837 <__bswap_32>:
 8078837:	55                   	push   %rbp
 8078838:	48 89 e5             	mov    %rsp,%rbp
 807883b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8078842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8078846:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8078849:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 807884f:	c1 e8 18             	shr    $0x18,%eax
 8078852:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8078855:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 807885b:	c1 e9 08             	shr    $0x8,%ecx
 807885e:	48 09 c8             	or     %rcx,%rax
 8078861:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8078864:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 807886a:	c1 e1 08             	shl    $0x8,%ecx
 807886d:	48 09 c8             	or     %rcx,%rax
 8078870:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8078873:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 8078879:	c1 e1 18             	shl    $0x18,%ecx
 807887c:	48 09 c8             	or     %rcx,%rax
 807887f:	e9 00 00 00 00       	jmpq   8078884 <__bswap_32+0x4d>
 8078884:	c9                   	leaveq 
 8078885:	c3                   	retq   

0000000008078886 <__bswap_64>:
 8078886:	55                   	push   %rbp
 8078887:	48 89 e5             	mov    %rsp,%rbp
 807888a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8078891:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8078895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078899:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 80788a0:	00 00 ff 
 80788a3:	48 21 c8             	and    %rcx,%rax
 80788a6:	48 89 c1             	mov    %rax,%rcx
 80788a9:	48 c1 e9 38          	shr    $0x38,%rcx
 80788ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80788b1:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 80788b8:	00 ff 00 
 80788bb:	48 21 d0             	and    %rdx,%rax
 80788be:	48 89 c2             	mov    %rax,%rdx
 80788c1:	48 c1 ea 28          	shr    $0x28,%rdx
 80788c5:	48 89 c8             	mov    %rcx,%rax
 80788c8:	48 89 d1             	mov    %rdx,%rcx
 80788cb:	48 09 c8             	or     %rcx,%rax
 80788ce:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80788d2:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 80788d9:	ff 00 00 
 80788dc:	48 21 d1             	and    %rdx,%rcx
 80788df:	48 89 ca             	mov    %rcx,%rdx
 80788e2:	48 c1 ea 18          	shr    $0x18,%rdx
 80788e6:	48 89 c1             	mov    %rax,%rcx
 80788e9:	48 89 d0             	mov    %rdx,%rax
 80788ec:	48 09 c1             	or     %rax,%rcx
 80788ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80788f3:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 80788fa:	00 00 00 
 80788fd:	48 21 d0             	and    %rdx,%rax
 8078900:	48 89 c2             	mov    %rax,%rdx
 8078903:	48 c1 ea 08          	shr    $0x8,%rdx
 8078907:	48 89 c8             	mov    %rcx,%rax
 807890a:	48 89 d1             	mov    %rdx,%rcx
 807890d:	48 09 c8             	or     %rcx,%rax
 8078910:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8078914:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 807891b:	00 00 00 
 807891e:	48 21 d1             	and    %rdx,%rcx
 8078921:	48 89 ca             	mov    %rcx,%rdx
 8078924:	48 c1 e2 08          	shl    $0x8,%rdx
 8078928:	48 89 c1             	mov    %rax,%rcx
 807892b:	48 89 d0             	mov    %rdx,%rax
 807892e:	48 09 c1             	or     %rax,%rcx
 8078931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078935:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 807893c:	00 00 00 
 807893f:	48 21 d0             	and    %rdx,%rax
 8078942:	48 89 c2             	mov    %rax,%rdx
 8078945:	48 c1 e2 18          	shl    $0x18,%rdx
 8078949:	48 89 c8             	mov    %rcx,%rax
 807894c:	48 89 d1             	mov    %rdx,%rcx
 807894f:	48 09 c8             	or     %rcx,%rax
 8078952:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8078956:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 807895d:	00 00 00 
 8078960:	48 21 d1             	and    %rdx,%rcx
 8078963:	48 89 ca             	mov    %rcx,%rdx
 8078966:	48 c1 e2 28          	shl    $0x28,%rdx
 807896a:	48 89 c1             	mov    %rax,%rcx
 807896d:	48 89 d0             	mov    %rdx,%rax
 8078970:	48 09 c1             	or     %rax,%rcx
 8078973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078977:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 807897e:	00 00 00 
 8078981:	48 21 d0             	and    %rdx,%rax
 8078984:	48 89 c2             	mov    %rax,%rdx
 8078987:	48 c1 e2 38          	shl    $0x38,%rdx
 807898b:	48 89 c8             	mov    %rcx,%rax
 807898e:	48 89 d1             	mov    %rdx,%rcx
 8078991:	48 09 c8             	or     %rcx,%rax
 8078994:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8078998:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807899c:	e9 00 00 00 00       	jmpq   80789a1 <__bswap_64+0x11b>
 80789a1:	c9                   	leaveq 
 80789a2:	c3                   	retq   

00000000080789a3 <asm_get_local_label_name>:
 80789a3:	55                   	push   %rbp
 80789a4:	48 89 e5             	mov    %rsp,%rbp
 80789a7:	48 81 ec 60 00 00 00 	sub    $0x60,%rsp
 80789ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80789b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80789b6:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80789b9:	49 89 c3             	mov    %rax,%r11
 80789bc:	48 8d 05 a1 3e 01 00 	lea    0x13ea1(%rip),%rax        # 808c864 <L.107>
 80789c3:	49 89 c2             	mov    %rax,%r10
 80789c6:	b8 40 00 00 00       	mov    $0x40,%eax
 80789cb:	48 89 c6             	mov    %rax,%rsi
 80789ce:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 80789d2:	48 89 c7             	mov    %rax,%rdi
 80789d5:	4c 89 d2             	mov    %r10,%rdx
 80789d8:	4c 89 d9             	mov    %r11,%rcx
 80789db:	b8 00 00 00 00       	mov    $0x0,%eax
 80789e0:	e8 5b f2 00 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 80789e5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 80789e9:	48 89 c7             	mov    %rax,%rdi
 80789ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80789f1:	e8 ea e8 00 00       	callq  80872e0 <strlen>
 80789f6:	48 89 c6             	mov    %rax,%rsi
 80789f9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 80789fd:	48 89 c7             	mov    %rax,%rdi
 8078a00:	b8 00 00 00 00       	mov    $0x0,%eax
 8078a05:	e8 59 8d fd ff       	callq  8051763 <tok_alloc>
 8078a0a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 8078a0e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 8078a12:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8078a19:	00 00 00 
 8078a1c:	48 01 c8             	add    %rcx,%rax
 8078a1f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 8078a23:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 8078a27:	8b 00                	mov    (%rax),%eax
 8078a29:	e9 00 00 00 00       	jmpq   8078a2e <asm_get_local_label_name+0x8b>
 8078a2e:	c9                   	leaveq 
 8078a2f:	c3                   	retq   

0000000008078a30 <asm_expr_unary>:
 8078a30:	55                   	push   %rbp
 8078a31:	48 89 e5             	mov    %rsp,%rbp
 8078a34:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 8078a3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8078a3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8078a43:	48 8b 05 de 54 01 00 	mov    0x154de(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078a4a:	8b 00                	mov    (%rax),%eax
 8078a4c:	e9 05 00 00 00       	jmpq   8078a56 <asm_expr_unary+0x26>
 8078a51:	e9 0c 00 00 00       	jmpq   8078a62 <asm_expr_unary+0x32>
 8078a56:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 8078a5c:	0f 85 36 02 00 00    	jne    8078c98 <asm_expr_unary+0x268>
 8078a62:	48 8b 05 3f 55 01 00 	mov    0x1553f(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8078a69:	48 8b 00             	mov    (%rax),%rax
 8078a6c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078a73:	00 00 00 
 8078a76:	48 01 c8             	add    %rcx,%rax
 8078a79:	48 8b 08             	mov    (%rax),%rcx
 8078a7c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8078a80:	b8 00 00 00 00       	mov    $0x0,%eax
 8078a85:	49 89 c2             	mov    %rax,%r10
 8078a88:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 8078a8c:	48 89 c6             	mov    %rax,%rsi
 8078a8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8078a93:	48 89 c7             	mov    %rax,%rdi
 8078a96:	4c 89 d2             	mov    %r10,%rdx
 8078a99:	b8 00 00 00 00       	mov    $0x0,%eax
 8078a9e:	e8 bd f1 00 00       	callq  8087c60 <__preinit_array_end+0x1c0>
 8078aa3:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8078aa6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8078aaa:	0f be 08             	movsbl (%rax),%ecx
 8078aad:	83 f9 62             	cmp    $0x62,%ecx
 8078ab0:	0f 84 15 00 00 00    	je     8078acb <asm_expr_unary+0x9b>
 8078ab6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8078aba:	0f be 08             	movsbl (%rax),%ecx
 8078abd:	83 f9 66             	cmp    $0x66,%ecx
 8078ac0:	0f 84 05 00 00 00    	je     8078acb <asm_expr_unary+0x9b>
 8078ac6:	e9 6e 01 00 00       	jmpq   8078c39 <asm_expr_unary+0x209>
 8078acb:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8078ace:	48 89 c6             	mov    %rax,%rsi
 8078ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078ad5:	48 89 c7             	mov    %rax,%rdi
 8078ad8:	b8 00 00 00 00       	mov    $0x0,%eax
 8078add:	e8 c1 fe ff ff       	callq  80789a3 <asm_get_local_label_name>
 8078ae2:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8078ae5:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8078ae8:	48 89 c7             	mov    %rax,%rdi
 8078aeb:	b8 00 00 00 00       	mov    $0x0,%eax
 8078af0:	e8 a6 b4 fd ff       	callq  8053f9b <label_find>
 8078af5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8078af9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8078afd:	0f be 08             	movsbl (%rax),%ecx
 8078b00:	83 f9 62             	cmp    $0x62,%ecx
 8078b03:	0f 85 7b 00 00 00    	jne    8078b84 <asm_expr_unary+0x154>
 8078b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078b0d:	85 c0                	test   %eax,%eax
 8078b0f:	0f 84 3f 00 00 00    	je     8078b54 <asm_expr_unary+0x124>
 8078b15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078b19:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8078b20:	00 00 00 
 8078b23:	48 01 c8             	add    %rcx,%rax
 8078b26:	48 8b 08             	mov    (%rax),%rcx
 8078b29:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8078b30:	00 00 00 
 8078b33:	48 39 c1             	cmp    %rax,%rcx
 8078b36:	0f 85 18 00 00 00    	jne    8078b54 <asm_expr_unary+0x124>
 8078b3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078b40:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8078b47:	00 00 00 
 8078b4a:	48 01 c8             	add    %rcx,%rax
 8078b4d:	48 8b 08             	mov    (%rax),%rcx
 8078b50:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 8078b54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078b58:	85 c0                	test   %eax,%eax
 8078b5a:	0f 84 05 00 00 00    	je     8078b65 <asm_expr_unary+0x135>
 8078b60:	e9 1a 00 00 00       	jmpq   8078b7f <asm_expr_unary+0x14f>
 8078b65:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8078b68:	48 89 c6             	mov    %rax,%rsi
 8078b6b:	48 8d 05 f8 3c 01 00 	lea    0x13cf8(%rip),%rax        # 808c86a <L.108>
 8078b72:	48 89 c7             	mov    %rax,%rdi
 8078b75:	b8 00 00 00 00       	mov    $0x0,%eax
 8078b7a:	e8 48 4b fd ff       	callq  804d6c7 <tcc_error>
 8078b7f:	e9 8d 00 00 00       	jmpq   8078c11 <asm_expr_unary+0x1e1>
 8078b84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078b88:	85 c0                	test   %eax,%eax
 8078b8a:	0f 84 36 00 00 00    	je     8078bc6 <asm_expr_unary+0x196>
 8078b90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078b94:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8078b9b:	00 00 00 
 8078b9e:	48 01 c8             	add    %rcx,%rax
 8078ba1:	48 8b 08             	mov    (%rax),%rcx
 8078ba4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8078bab:	00 00 00 
 8078bae:	48 39 c1             	cmp    %rax,%rcx
 8078bb1:	b8 00 00 00 00       	mov    $0x0,%eax
 8078bb6:	0f 95 c0             	setne  %al
 8078bb9:	85 c0                	test   %eax,%eax
 8078bbb:	0f 85 05 00 00 00    	jne    8078bc6 <asm_expr_unary+0x196>
 8078bc1:	e9 4b 00 00 00       	jmpq   8078c11 <asm_expr_unary+0x1e1>
 8078bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078bca:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 8078bd1:	00 00 00 
 8078bd4:	48 01 c8             	add    %rcx,%rax
 8078bd7:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078bdc:	49 89 ca             	mov    %rcx,%r10
 8078bdf:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8078be2:	48 89 ce             	mov    %rcx,%rsi
 8078be5:	48 89 c7             	mov    %rax,%rdi
 8078be8:	4c 89 d2             	mov    %r10,%rdx
 8078beb:	b8 00 00 00 00       	mov    $0x0,%eax
 8078bf0:	e8 1d b4 fd ff       	callq  8054012 <label_push>
 8078bf5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8078bf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078bfd:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8078c04:	00 00 00 
 8078c07:	48 01 c8             	add    %rcx,%rax
 8078c0a:	b9 03 01 00 00       	mov    $0x103,%ecx
 8078c0f:	89 08                	mov    %ecx,(%rax)
 8078c11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078c15:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078c1a:	89 08                	mov    %ecx,(%rax)
 8078c1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078c20:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078c27:	00 00 00 
 8078c2a:	48 01 c8             	add    %rcx,%rax
 8078c2d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8078c31:	48 89 08             	mov    %rcx,(%rax)
 8078c34:	e9 4b 00 00 00       	jmpq   8078c84 <asm_expr_unary+0x254>
 8078c39:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8078c3d:	0f be 08             	movsbl (%rax),%ecx
 8078c40:	83 f9 00             	cmp    $0x0,%ecx
 8078c43:	0f 85 27 00 00 00    	jne    8078c70 <asm_expr_unary+0x240>
 8078c49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078c4d:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8078c50:	89 08                	mov    %ecx,(%rax)
 8078c52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078c56:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078c5d:	00 00 00 
 8078c60:	48 01 c8             	add    %rcx,%rax
 8078c63:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078c68:	48 89 08             	mov    %rcx,(%rax)
 8078c6b:	e9 14 00 00 00       	jmpq   8078c84 <asm_expr_unary+0x254>
 8078c70:	48 8d 05 17 3c 01 00 	lea    0x13c17(%rip),%rax        # 808c88e <L.109>
 8078c77:	48 89 c7             	mov    %rax,%rdi
 8078c7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8078c7f:	e8 43 4a fd ff       	callq  804d6c7 <tcc_error>
 8078c84:	b8 00 00 00 00       	mov    $0x0,%eax
 8078c89:	e8 3c fa fd ff       	callq  80586ca <next>
 8078c8e:	e9 ee 02 00 00       	jmpq   8078f81 <asm_expr_unary+0x551>
 8078c93:	e9 09 00 00 00       	jmpq   8078ca1 <asm_expr_unary+0x271>
 8078c98:	83 f8 2b             	cmp    $0x2b,%eax
 8078c9b:	0f 85 2c 00 00 00    	jne    8078ccd <asm_expr_unary+0x29d>
 8078ca1:	b8 00 00 00 00       	mov    $0x0,%eax
 8078ca6:	e8 1f fa fd ff       	callq  80586ca <next>
 8078cab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078caf:	48 89 c6             	mov    %rax,%rsi
 8078cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078cb6:	48 89 c7             	mov    %rax,%rdi
 8078cb9:	b8 00 00 00 00       	mov    $0x0,%eax
 8078cbe:	e8 6d fd ff ff       	callq  8078a30 <asm_expr_unary>
 8078cc3:	e9 b9 02 00 00       	jmpq   8078f81 <asm_expr_unary+0x551>
 8078cc8:	e9 09 00 00 00       	jmpq   8078cd6 <asm_expr_unary+0x2a6>
 8078ccd:	83 f8 2d             	cmp    $0x2d,%eax
 8078cd0:	0f 85 05 00 00 00    	jne    8078cdb <asm_expr_unary+0x2ab>
 8078cd6:	e9 09 00 00 00       	jmpq   8078ce4 <asm_expr_unary+0x2b4>
 8078cdb:	83 f8 7e             	cmp    $0x7e,%eax
 8078cde:	0f 85 a4 00 00 00    	jne    8078d88 <asm_expr_unary+0x358>
 8078ce4:	48 8b 05 3d 52 01 00 	mov    0x1523d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078ceb:	8b 00                	mov    (%rax),%eax
 8078ced:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8078cf0:	b8 00 00 00 00       	mov    $0x0,%eax
 8078cf5:	e8 d0 f9 fd ff       	callq  80586ca <next>
 8078cfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078cfe:	48 89 c6             	mov    %rax,%rsi
 8078d01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078d05:	48 89 c7             	mov    %rax,%rdi
 8078d08:	b8 00 00 00 00       	mov    $0x0,%eax
 8078d0d:	e8 1e fd ff ff       	callq  8078a30 <asm_expr_unary>
 8078d12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078d16:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078d1d:	00 00 00 
 8078d20:	48 01 c8             	add    %rcx,%rax
 8078d23:	48 8b 08             	mov    (%rax),%rcx
 8078d26:	85 c9                	test   %ecx,%ecx
 8078d28:	0f 84 14 00 00 00    	je     8078d42 <asm_expr_unary+0x312>
 8078d2e:	48 8d 05 6f 3b 01 00 	lea    0x13b6f(%rip),%rax        # 808c8a4 <L.110>
 8078d35:	48 89 c7             	mov    %rax,%rdi
 8078d38:	b8 00 00 00 00       	mov    $0x0,%eax
 8078d3d:	e8 85 49 fd ff       	callq  804d6c7 <tcc_error>
 8078d42:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8078d45:	83 f8 2d             	cmp    $0x2d,%eax
 8078d48:	0f 85 21 00 00 00    	jne    8078d6f <asm_expr_unary+0x33f>
 8078d4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078d52:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8078d56:	ba 00 00 00 00       	mov    $0x0,%edx
 8078d5b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8078d5f:	8b 01                	mov    (%rcx),%eax
 8078d61:	48 29 c2             	sub    %rax,%rdx
 8078d64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8078d68:	89 10                	mov    %edx,(%rax)
 8078d6a:	e9 0f 00 00 00       	jmpq   8078d7e <asm_expr_unary+0x34e>
 8078d6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078d73:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8078d77:	8b 11                	mov    (%rcx),%edx
 8078d79:	83 f2 ff             	xor    $0xffffffff,%edx
 8078d7c:	89 10                	mov    %edx,(%rax)
 8078d7e:	e9 fe 01 00 00       	jmpq   8078f81 <asm_expr_unary+0x551>
 8078d83:	e9 0c 00 00 00       	jmpq   8078d94 <asm_expr_unary+0x364>
 8078d88:	81 f8 b4 00 00 00    	cmp    $0xb4,%eax
 8078d8e:	0f 85 05 00 00 00    	jne    8078d99 <asm_expr_unary+0x369>
 8078d94:	e9 0c 00 00 00       	jmpq   8078da5 <asm_expr_unary+0x375>
 8078d99:	81 f8 b7 00 00 00    	cmp    $0xb7,%eax
 8078d9f:	0f 85 3c 00 00 00    	jne    8078de1 <asm_expr_unary+0x3b1>
 8078da5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078da9:	48 8b 0d f8 51 01 00 	mov    0x151f8(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8078db0:	8b 09                	mov    (%rcx),%ecx
 8078db2:	89 08                	mov    %ecx,(%rax)
 8078db4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078db8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078dbf:	00 00 00 
 8078dc2:	48 01 c8             	add    %rcx,%rax
 8078dc5:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078dca:	48 89 08             	mov    %rcx,(%rax)
 8078dcd:	b8 00 00 00 00       	mov    $0x0,%eax
 8078dd2:	e8 f3 f8 fd ff       	callq  80586ca <next>
 8078dd7:	e9 a5 01 00 00       	jmpq   8078f81 <asm_expr_unary+0x551>
 8078ddc:	e9 09 00 00 00       	jmpq   8078dea <asm_expr_unary+0x3ba>
 8078de1:	83 f8 28             	cmp    $0x28,%eax
 8078de4:	0f 85 39 00 00 00    	jne    8078e23 <asm_expr_unary+0x3f3>
 8078dea:	b8 00 00 00 00       	mov    $0x0,%eax
 8078def:	e8 d6 f8 fd ff       	callq  80586ca <next>
 8078df4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078df8:	48 89 c6             	mov    %rax,%rsi
 8078dfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078dff:	48 89 c7             	mov    %rax,%rdi
 8078e02:	b8 00 00 00 00       	mov    $0x0,%eax
 8078e07:	e8 90 04 00 00       	callq  807929c <asm_expr>
 8078e0c:	b8 29 00 00 00       	mov    $0x29,%eax
 8078e11:	48 89 c7             	mov    %rax,%rdi
 8078e14:	b8 00 00 00 00       	mov    $0x0,%eax
 8078e19:	e8 c5 82 fd ff       	callq  80510e3 <skip>
 8078e1e:	e9 5e 01 00 00       	jmpq   8078f81 <asm_expr_unary+0x551>
 8078e23:	48 8b 05 fe 50 01 00 	mov    0x150fe(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078e2a:	8b 00                	mov    (%rax),%eax
 8078e2c:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8078e32:	0f 8c 0d 01 00 00    	jl     8078f45 <asm_expr_unary+0x515>
 8078e38:	48 8b 05 e9 50 01 00 	mov    0x150e9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078e3f:	8b 00                	mov    (%rax),%eax
 8078e41:	48 89 c7             	mov    %rax,%rdi
 8078e44:	b8 00 00 00 00       	mov    $0x0,%eax
 8078e49:	e8 4d b1 fd ff       	callq  8053f9b <label_find>
 8078e4e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8078e52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078e56:	85 c0                	test   %eax,%eax
 8078e58:	0f 84 05 00 00 00    	je     8078e63 <asm_expr_unary+0x433>
 8078e5e:	e9 51 00 00 00       	jmpq   8078eb4 <asm_expr_unary+0x484>
 8078e63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078e67:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 8078e6e:	00 00 00 
 8078e71:	48 01 c8             	add    %rcx,%rax
 8078e74:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078e79:	49 89 ca             	mov    %rcx,%r10
 8078e7c:	48 8b 0d a5 50 01 00 	mov    0x150a5(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078e83:	8b 09                	mov    (%rcx),%ecx
 8078e85:	48 89 ce             	mov    %rcx,%rsi
 8078e88:	48 89 c7             	mov    %rax,%rdi
 8078e8b:	4c 89 d2             	mov    %r10,%rdx
 8078e8e:	b8 00 00 00 00       	mov    $0x0,%eax
 8078e93:	e8 7a b1 fd ff       	callq  8054012 <label_push>
 8078e98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8078e9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078ea0:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8078ea7:	00 00 00 
 8078eaa:	48 01 c8             	add    %rcx,%rax
 8078ead:	b9 03 00 00 00       	mov    $0x3,%ecx
 8078eb2:	89 08                	mov    %ecx,(%rax)
 8078eb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8078eb8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8078ebf:	00 00 00 
 8078ec2:	48 01 c8             	add    %rcx,%rax
 8078ec5:	48 8b 08             	mov    (%rax),%rcx
 8078ec8:	48 b8 f1 ff 00 00 00 	movabs $0xfff1,%rax
 8078ecf:	00 00 00 
 8078ed2:	48 39 c1             	cmp    %rax,%rcx
 8078ed5:	0f 85 38 00 00 00    	jne    8078f13 <asm_expr_unary+0x4e3>
 8078edb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078edf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8078ee3:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 8078eea:	00 00 00 
 8078eed:	48 01 d1             	add    %rdx,%rcx
 8078ef0:	48 8b 11             	mov    (%rcx),%rdx
 8078ef3:	89 10                	mov    %edx,(%rax)
 8078ef5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078ef9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078f00:	00 00 00 
 8078f03:	48 01 c8             	add    %rcx,%rax
 8078f06:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078f0b:	48 89 08             	mov    %rcx,(%rax)
 8078f0e:	e9 23 00 00 00       	jmpq   8078f36 <asm_expr_unary+0x506>
 8078f13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078f17:	b9 00 00 00 00       	mov    $0x0,%ecx
 8078f1c:	89 08                	mov    %ecx,(%rax)
 8078f1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078f22:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8078f29:	00 00 00 
 8078f2c:	48 01 c8             	add    %rcx,%rax
 8078f2f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8078f33:	48 89 08             	mov    %rcx,(%rax)
 8078f36:	b8 00 00 00 00       	mov    $0x0,%eax
 8078f3b:	e8 8a f7 fd ff       	callq  80586ca <next>
 8078f40:	e9 37 00 00 00       	jmpq   8078f7c <asm_expr_unary+0x54c>
 8078f45:	48 8b 05 5c 50 01 00 	mov    0x1505c(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8078f4c:	48 89 c6             	mov    %rax,%rsi
 8078f4f:	48 8b 05 d2 4f 01 00 	mov    0x14fd2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078f56:	8b 00                	mov    (%rax),%eax
 8078f58:	48 89 c7             	mov    %rax,%rdi
 8078f5b:	b8 00 00 00 00       	mov    $0x0,%eax
 8078f60:	e8 4f 89 fd ff       	callq  80518b4 <get_tok_str>
 8078f65:	48 89 c6             	mov    %rax,%rsi
 8078f68:	48 8d 05 52 39 01 00 	lea    0x13952(%rip),%rax        # 808c8c1 <L.111>
 8078f6f:	48 89 c7             	mov    %rax,%rdi
 8078f72:	b8 00 00 00 00       	mov    $0x0,%eax
 8078f77:	e8 4b 47 fd ff       	callq  804d6c7 <tcc_error>
 8078f7c:	e9 00 00 00 00       	jmpq   8078f81 <asm_expr_unary+0x551>
 8078f81:	c9                   	leaveq 
 8078f82:	c3                   	retq   

0000000008078f83 <asm_expr_prod>:
 8078f83:	55                   	push   %rbp
 8078f84:	48 89 e5             	mov    %rsp,%rbp
 8078f87:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 8078f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8078f92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8078f96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8078f9a:	48 89 c6             	mov    %rax,%rsi
 8078f9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8078fa1:	48 89 c7             	mov    %rax,%rdi
 8078fa4:	b8 00 00 00 00       	mov    $0x0,%eax
 8078fa9:	e8 82 fa ff ff       	callq  8078a30 <asm_expr_unary>
 8078fae:	48 8b 05 73 4f 01 00 	mov    0x14f73(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8078fb5:	8b 00                	mov    (%rax),%eax
 8078fb7:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8078fba:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8078fbd:	83 f8 2a             	cmp    $0x2a,%eax
 8078fc0:	0f 84 35 00 00 00    	je     8078ffb <asm_expr_prod+0x78>
 8078fc6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8078fc9:	83 f8 2f             	cmp    $0x2f,%eax
 8078fcc:	0f 84 29 00 00 00    	je     8078ffb <asm_expr_prod+0x78>
 8078fd2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8078fd5:	83 f8 25             	cmp    $0x25,%eax
 8078fd8:	0f 84 1d 00 00 00    	je     8078ffb <asm_expr_prod+0x78>
 8078fde:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8078fe1:	83 f8 01             	cmp    $0x1,%eax
 8078fe4:	0f 84 11 00 00 00    	je     8078ffb <asm_expr_prod+0x78>
 8078fea:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8078fed:	83 f8 02             	cmp    $0x2,%eax
 8078ff0:	0f 84 05 00 00 00    	je     8078ffb <asm_expr_prod+0x78>
 8078ff6:	e9 6a 01 00 00       	jmpq   8079165 <asm_expr_prod+0x1e2>
 8078ffb:	b8 00 00 00 00       	mov    $0x0,%eax
 8079000:	e8 c5 f6 fd ff       	callq  80586ca <next>
 8079005:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 8079009:	48 89 c6             	mov    %rax,%rsi
 807900c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079010:	48 89 c7             	mov    %rax,%rdi
 8079013:	b8 00 00 00 00       	mov    $0x0,%eax
 8079018:	e8 13 fa ff ff       	callq  8078a30 <asm_expr_unary>
 807901d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079021:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8079028:	00 00 00 
 807902b:	48 01 c8             	add    %rcx,%rax
 807902e:	48 8b 08             	mov    (%rax),%rcx
 8079031:	85 c9                	test   %ecx,%ecx
 8079033:	0f 85 11 00 00 00    	jne    807904a <asm_expr_prod+0xc7>
 8079039:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807903d:	85 c0                	test   %eax,%eax
 807903f:	0f 85 05 00 00 00    	jne    807904a <asm_expr_prod+0xc7>
 8079045:	e9 14 00 00 00       	jmpq   807905e <asm_expr_prod+0xdb>
 807904a:	48 8d 05 8b 38 01 00 	lea    0x1388b(%rip),%rax        # 808c8dc <L.112>
 8079051:	48 89 c7             	mov    %rax,%rdi
 8079054:	b8 00 00 00 00       	mov    $0x0,%eax
 8079059:	e8 69 46 fd ff       	callq  804d6c7 <tcc_error>
 807905e:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8079061:	e9 05 00 00 00       	jmpq   807906b <asm_expr_prod+0xe8>
 8079066:	e9 09 00 00 00       	jmpq   8079074 <asm_expr_prod+0xf1>
 807906b:	83 f8 2a             	cmp    $0x2a,%eax
 807906e:	0f 85 19 00 00 00    	jne    807908d <asm_expr_prod+0x10a>
 8079074:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079078:	8b 08                	mov    (%rax),%ecx
 807907a:	8b 55 d8             	mov    -0x28(%rbp),%edx
 807907d:	48 0f af ca          	imul   %rdx,%rcx
 8079081:	89 08                	mov    %ecx,(%rax)
 8079083:	e9 d8 00 00 00       	jmpq   8079160 <asm_expr_prod+0x1dd>
 8079088:	e9 09 00 00 00       	jmpq   8079096 <asm_expr_prod+0x113>
 807908d:	83 f8 2f             	cmp    $0x2f,%eax
 8079090:	0f 85 45 00 00 00    	jne    80790db <asm_expr_prod+0x158>
 8079096:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8079099:	83 f8 00             	cmp    $0x0,%eax
 807909c:	0f 85 14 00 00 00    	jne    80790b6 <asm_expr_prod+0x133>
 80790a2:	48 8d 05 50 38 01 00 	lea    0x13850(%rip),%rax        # 808c8f9 <L.113>
 80790a9:	48 89 c7             	mov    %rax,%rdi
 80790ac:	b8 00 00 00 00       	mov    $0x0,%eax
 80790b1:	e8 11 46 fd ff       	callq  804d6c7 <tcc_error>
 80790b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80790ba:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80790be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80790c2:	8b 00                	mov    (%rax),%eax
 80790c4:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 80790c7:	31 d2                	xor    %edx,%edx
 80790c9:	f7 f1                	div    %ecx
 80790cb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80790cf:	89 01                	mov    %eax,(%rcx)
 80790d1:	e9 8a 00 00 00       	jmpq   8079160 <asm_expr_prod+0x1dd>
 80790d6:	e9 09 00 00 00       	jmpq   80790e4 <asm_expr_prod+0x161>
 80790db:	83 f8 25             	cmp    $0x25,%eax
 80790de:	0f 85 33 00 00 00    	jne    8079117 <asm_expr_prod+0x194>
 80790e4:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80790e7:	83 f8 00             	cmp    $0x0,%eax
 80790ea:	0f 85 02 00 00 00    	jne    80790f2 <asm_expr_prod+0x16f>
 80790f0:	eb b0                	jmp    80790a2 <asm_expr_prod+0x11f>
 80790f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80790f6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80790fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80790fe:	8b 00                	mov    (%rax),%eax
 8079100:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8079103:	31 d2                	xor    %edx,%edx
 8079105:	f7 f1                	div    %ecx
 8079107:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 807910b:	89 10                	mov    %edx,(%rax)
 807910d:	e9 4e 00 00 00       	jmpq   8079160 <asm_expr_prod+0x1dd>
 8079112:	e9 09 00 00 00       	jmpq   8079120 <asm_expr_prod+0x19d>
 8079117:	83 f8 01             	cmp    $0x1,%eax
 807911a:	0f 85 1e 00 00 00    	jne    807913e <asm_expr_prod+0x1bb>
 8079120:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079124:	8b 08                	mov    (%rax),%ecx
 8079126:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 807912a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 807912d:	8b 55 c0             	mov    -0x40(%rbp),%edx
 8079130:	d3 e2                	shl    %cl,%edx
 8079132:	89 10                	mov    %edx,(%rax)
 8079134:	e9 27 00 00 00       	jmpq   8079160 <asm_expr_prod+0x1dd>
 8079139:	e9 09 00 00 00       	jmpq   8079147 <asm_expr_prod+0x1c4>
 807913e:	83 f8 02             	cmp    $0x2,%eax
 8079141:	0f 85 f2 ff ff ff    	jne    8079139 <asm_expr_prod+0x1b6>
 8079147:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807914b:	8b 08                	mov    (%rax),%ecx
 807914d:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
 8079151:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8079154:	8b 55 b8             	mov    -0x48(%rbp),%edx
 8079157:	d3 ea                	shr    %cl,%edx
 8079159:	89 10                	mov    %edx,(%rax)
 807915b:	e9 00 00 00 00       	jmpq   8079160 <asm_expr_prod+0x1dd>
 8079160:	e9 49 fe ff ff       	jmpq   8078fae <asm_expr_prod+0x2b>
 8079165:	c9                   	leaveq 
 8079166:	c3                   	retq   

0000000008079167 <asm_expr_logic>:
 8079167:	55                   	push   %rbp
 8079168:	48 89 e5             	mov    %rsp,%rbp
 807916b:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8079172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8079176:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807917a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807917e:	48 89 c6             	mov    %rax,%rsi
 8079181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079185:	48 89 c7             	mov    %rax,%rdi
 8079188:	b8 00 00 00 00       	mov    $0x0,%eax
 807918d:	e8 f1 fd ff ff       	callq  8078f83 <asm_expr_prod>
 8079192:	48 8b 05 8f 4d 01 00 	mov    0x14d8f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079199:	8b 00                	mov    (%rax),%eax
 807919b:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807919e:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80791a1:	83 f8 26             	cmp    $0x26,%eax
 80791a4:	0f 84 1d 00 00 00    	je     80791c7 <asm_expr_logic+0x60>
 80791aa:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80791ad:	83 f8 7c             	cmp    $0x7c,%eax
 80791b0:	0f 84 11 00 00 00    	je     80791c7 <asm_expr_logic+0x60>
 80791b6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80791b9:	83 f8 5e             	cmp    $0x5e,%eax
 80791bc:	0f 84 05 00 00 00    	je     80791c7 <asm_expr_logic+0x60>
 80791c2:	e9 d3 00 00 00       	jmpq   807929a <asm_expr_logic+0x133>
 80791c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80791cc:	e8 f9 f4 fd ff       	callq  80586ca <next>
 80791d1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 80791d5:	48 89 c6             	mov    %rax,%rsi
 80791d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80791dc:	48 89 c7             	mov    %rax,%rdi
 80791df:	b8 00 00 00 00       	mov    $0x0,%eax
 80791e4:	e8 9a fd ff ff       	callq  8078f83 <asm_expr_prod>
 80791e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80791ed:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80791f4:	00 00 00 
 80791f7:	48 01 c8             	add    %rcx,%rax
 80791fa:	48 8b 08             	mov    (%rax),%rcx
 80791fd:	85 c9                	test   %ecx,%ecx
 80791ff:	0f 85 11 00 00 00    	jne    8079216 <asm_expr_logic+0xaf>
 8079205:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8079209:	85 c0                	test   %eax,%eax
 807920b:	0f 85 05 00 00 00    	jne    8079216 <asm_expr_logic+0xaf>
 8079211:	e9 14 00 00 00       	jmpq   807922a <asm_expr_logic+0xc3>
 8079216:	48 8d 05 ed 36 01 00 	lea    0x136ed(%rip),%rax        # 808c90a <L.114>
 807921d:	48 89 c7             	mov    %rax,%rdi
 8079220:	b8 00 00 00 00       	mov    $0x0,%eax
 8079225:	e8 9d 44 fd ff       	callq  804d6c7 <tcc_error>
 807922a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807922d:	e9 05 00 00 00       	jmpq   8079237 <asm_expr_logic+0xd0>
 8079232:	e9 09 00 00 00       	jmpq   8079240 <asm_expr_logic+0xd9>
 8079237:	83 f8 26             	cmp    $0x26,%eax
 807923a:	0f 85 18 00 00 00    	jne    8079258 <asm_expr_logic+0xf1>
 8079240:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079244:	8b 08                	mov    (%rax),%ecx
 8079246:	8b 55 d8             	mov    -0x28(%rbp),%edx
 8079249:	48 21 d1             	and    %rdx,%rcx
 807924c:	89 08                	mov    %ecx,(%rax)
 807924e:	e9 42 00 00 00       	jmpq   8079295 <asm_expr_logic+0x12e>
 8079253:	e9 09 00 00 00       	jmpq   8079261 <asm_expr_logic+0xfa>
 8079258:	83 f8 7c             	cmp    $0x7c,%eax
 807925b:	0f 85 18 00 00 00    	jne    8079279 <asm_expr_logic+0x112>
 8079261:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079265:	8b 08                	mov    (%rax),%ecx
 8079267:	8b 55 d8             	mov    -0x28(%rbp),%edx
 807926a:	48 09 d1             	or     %rdx,%rcx
 807926d:	89 08                	mov    %ecx,(%rax)
 807926f:	e9 21 00 00 00       	jmpq   8079295 <asm_expr_logic+0x12e>
 8079274:	e9 09 00 00 00       	jmpq   8079282 <asm_expr_logic+0x11b>
 8079279:	83 f8 5e             	cmp    $0x5e,%eax
 807927c:	0f 85 f2 ff ff ff    	jne    8079274 <asm_expr_logic+0x10d>
 8079282:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079286:	8b 08                	mov    (%rax),%ecx
 8079288:	8b 55 d8             	mov    -0x28(%rbp),%edx
 807928b:	48 31 d1             	xor    %rdx,%rcx
 807928e:	89 08                	mov    %ecx,(%rax)
 8079290:	e9 00 00 00 00       	jmpq   8079295 <asm_expr_logic+0x12e>
 8079295:	e9 f8 fe ff ff       	jmpq   8079192 <asm_expr_logic+0x2b>
 807929a:	c9                   	leaveq 
 807929b:	c3                   	retq   

000000000807929c <asm_expr>:
 807929c:	55                   	push   %rbp
 807929d:	48 89 e5             	mov    %rsp,%rbp
 80792a0:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80792a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80792ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80792af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80792b3:	48 89 c6             	mov    %rax,%rsi
 80792b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80792ba:	48 89 c7             	mov    %rax,%rdi
 80792bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80792c2:	e8 b8 29 00 00       	callq  807bc7f <asm_expr_sum>
 80792c7:	c9                   	leaveq 
 80792c8:	c3                   	retq   

00000000080792c9 <asm_int_expr>:
 80792c9:	55                   	push   %rbp
 80792ca:	48 89 e5             	mov    %rsp,%rbp
 80792cd:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80792d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80792d8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 80792dc:	48 89 c6             	mov    %rax,%rsi
 80792df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80792e3:	48 89 c7             	mov    %rax,%rdi
 80792e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80792eb:	e8 ac ff ff ff       	callq  807929c <asm_expr>
 80792f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80792f4:	85 c0                	test   %eax,%eax
 80792f6:	0f 84 14 00 00 00    	je     8079310 <asm_int_expr+0x47>
 80792fc:	48 8d 05 24 36 01 00 	lea    0x13624(%rip),%rax        # 808c927 <L.115>
 8079303:	48 89 c7             	mov    %rax,%rdi
 8079306:	b8 00 00 00 00       	mov    $0x0,%eax
 807930b:	e8 42 7e fd ff       	callq  8051152 <expect>
 8079310:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8079313:	e9 00 00 00 00       	jmpq   8079318 <asm_int_expr+0x4f>
 8079318:	c9                   	leaveq 
 8079319:	c3                   	retq   

000000000807931a <asm_new_label1>:
 807931a:	55                   	push   %rbp
 807931b:	48 89 e5             	mov    %rsp,%rbp
 807931e:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8079325:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8079329:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807932d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8079331:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8079335:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8079339:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807933c:	48 89 c7             	mov    %rax,%rdi
 807933f:	b8 00 00 00 00       	mov    $0x0,%eax
 8079344:	e8 52 ac fd ff       	callq  8053f9b <label_find>
 8079349:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 807934d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8079351:	85 c0                	test   %eax,%eax
 8079353:	0f 84 7f 00 00 00    	je     80793d8 <asm_new_label1+0xbe>
 8079359:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 807935d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8079364:	00 00 00 
 8079367:	48 01 c8             	add    %rcx,%rax
 807936a:	48 8b 08             	mov    (%rax),%rcx
 807936d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8079374:	00 00 00 
 8079377:	48 39 c1             	cmp    %rax,%rcx
 807937a:	b8 00 00 00 00       	mov    $0x0,%eax
 807937f:	0f 95 c0             	setne  %al
 8079382:	85 c0                	test   %eax,%eax
 8079384:	0f 84 49 00 00 00    	je     80793d3 <asm_new_label1+0xb9>
 807938a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807938d:	85 c0                	test   %eax,%eax
 807938f:	0f 84 05 00 00 00    	je     807939a <asm_new_label1+0x80>
 8079395:	e9 34 00 00 00       	jmpq   80793ce <asm_new_label1+0xb4>
 807939a:	b8 00 00 00 00       	mov    $0x0,%eax
 807939f:	48 89 c6             	mov    %rax,%rsi
 80793a2:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80793a5:	48 89 c7             	mov    %rax,%rdi
 80793a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80793ad:	e8 02 85 fd ff       	callq  80518b4 <get_tok_str>
 80793b2:	48 89 c6             	mov    %rax,%rsi
 80793b5:	48 8d 05 74 35 01 00 	lea    0x13574(%rip),%rax        # 808c930 <L.116>
 80793bc:	48 89 c7             	mov    %rax,%rdi
 80793bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80793c4:	e8 fe 42 fd ff       	callq  804d6c7 <tcc_error>
 80793c9:	e9 05 00 00 00       	jmpq   80793d3 <asm_new_label1+0xb9>
 80793ce:	e9 05 00 00 00       	jmpq   80793d8 <asm_new_label1+0xbe>
 80793d3:	e9 4b 00 00 00       	jmpq   8079423 <asm_new_label1+0x109>
 80793d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80793dc:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 80793e3:	00 00 00 
 80793e6:	48 01 c8             	add    %rcx,%rax
 80793e9:	b9 00 00 00 00       	mov    $0x0,%ecx
 80793ee:	49 89 ca             	mov    %rcx,%r10
 80793f1:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80793f4:	48 89 ce             	mov    %rcx,%rsi
 80793f7:	48 89 c7             	mov    %rax,%rdi
 80793fa:	4c 89 d2             	mov    %r10,%rdx
 80793fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8079402:	e8 0b ac fd ff       	callq  8054012 <label_push>
 8079407:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 807940b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 807940f:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8079416:	00 00 00 
 8079419:	48 01 c8             	add    %rcx,%rax
 807941c:	b9 03 01 00 00       	mov    $0x103,%ecx
 8079421:	89 08                	mov    %ecx,(%rax)
 8079423:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8079427:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807942e:	00 00 00 
 8079431:	48 01 c8             	add    %rcx,%rax
 8079434:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8079437:	48 63 c9             	movslq %ecx,%rcx
 807943a:	48 89 ca             	mov    %rcx,%rdx
 807943d:	48 89 10             	mov    %rdx,(%rax)
 8079440:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8079444:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 807944b:	00 00 00 
 807944e:	48 01 c8             	add    %rcx,%rax
 8079451:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8079454:	48 63 c9             	movslq %ecx,%rcx
 8079457:	48 89 ca             	mov    %rcx,%rdx
 807945a:	48 89 10             	mov    %rdx,(%rax)
 807945d:	c9                   	leaveq 
 807945e:	c3                   	retq   

000000000807945f <asm_new_label>:
 807945f:	55                   	push   %rbp
 8079460:	48 89 e5             	mov    %rsp,%rbp
 8079463:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807946a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807946e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8079472:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8079476:	48 8b 05 3b 4a 01 00 	mov    0x14a3b(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807947d:	48 8b 00             	mov    (%rax),%rax
 8079480:	48 b9 1c 00 00 00 00 	movabs $0x1c,%rcx
 8079487:	00 00 00 
 807948a:	48 01 c8             	add    %rcx,%rax
 807948d:	48 8b 0d 9c 4b 01 00 	mov    0x14b9c(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079494:	8b 09                	mov    (%rcx),%ecx
 8079496:	49 89 c8             	mov    %rcx,%r8
 8079499:	8b 08                	mov    (%rax),%ecx
 807949b:	49 89 cb             	mov    %rcx,%r11
 807949e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80794a1:	49 89 c2             	mov    %rax,%r10
 80794a4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80794a7:	48 89 c6             	mov    %rax,%rsi
 80794aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80794ae:	48 89 c7             	mov    %rax,%rdi
 80794b1:	4c 89 d2             	mov    %r10,%rdx
 80794b4:	4c 89 d9             	mov    %r11,%rcx
 80794b7:	b8 00 00 00 00       	mov    $0x0,%eax
 80794bc:	e8 59 fe ff ff       	callq  807931a <asm_new_label1>
 80794c1:	c9                   	leaveq 
 80794c2:	c3                   	retq   

00000000080794c3 <asm_free_labels>:
 80794c3:	55                   	push   %rbp
 80794c4:	48 89 e5             	mov    %rsp,%rbp
 80794c7:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80794ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80794d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80794d6:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 80794dd:	00 00 00 
 80794e0:	48 01 c8             	add    %rcx,%rax
 80794e3:	48 8b 08             	mov    (%rax),%rcx
 80794e6:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
 80794ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80794ee:	48 89 c1             	mov    %rax,%rcx
 80794f1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 80794f8:	00 00 00 
 80794fb:	48 39 c1             	cmp    %rax,%rcx
 80794fe:	0f 84 64 01 00 00    	je     8079668 <asm_free_labels+0x1a5>
 8079504:	e9 0a 00 00 00       	jmpq   8079513 <asm_free_labels+0x50>
 8079509:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807950d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8079511:	eb d7                	jmp    80794ea <asm_free_labels+0x27>
 8079513:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079517:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 807951e:	00 00 00 
 8079521:	48 01 c8             	add    %rcx,%rax
 8079524:	48 8b 08             	mov    (%rax),%rcx
 8079527:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 807952b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807952f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8079536:	00 00 00 
 8079539:	48 01 c8             	add    %rcx,%rax
 807953c:	48 8b 08             	mov    (%rax),%rcx
 807953f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 8079546:	00 00 00 
 8079549:	48 39 c1             	cmp    %rax,%rcx
 807954c:	b8 00 00 00 00       	mov    $0x0,%eax
 8079551:	0f 95 c0             	setne  %al
 8079554:	85 c0                	test   %eax,%eax
 8079556:	0f 84 b8 00 00 00    	je     8079614 <asm_free_labels+0x151>
 807955c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079560:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8079567:	00 00 00 
 807956a:	48 01 c8             	add    %rcx,%rax
 807956d:	48 8b 08             	mov    (%rax),%rcx
 8079570:	48 b8 f1 ff 00 00 00 	movabs $0xfff1,%rax
 8079577:	00 00 00 
 807957a:	48 39 c1             	cmp    %rax,%rcx
 807957d:	0f 85 0e 00 00 00    	jne    8079591 <asm_free_labels+0xce>
 8079583:	b8 01 00 00 00       	mov    $0x1,%eax
 8079588:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807958c:	e9 39 00 00 00       	jmpq   80795ca <asm_free_labels+0x107>
 8079591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079595:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 807959c:	00 00 00 
 807959f:	48 01 c8             	add    %rcx,%rax
 80795a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 80795a6:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 80795ad:	00 00 00 
 80795b0:	48 01 d1             	add    %rdx,%rcx
 80795b3:	48 8b 11             	mov    (%rcx),%rdx
 80795b6:	48 c1 e2 03          	shl    $0x3,%rdx
 80795ba:	48 8b 08             	mov    (%rax),%rcx
 80795bd:	48 89 d0             	mov    %rdx,%rax
 80795c0:	48 01 c1             	add    %rax,%rcx
 80795c3:	48 8b 01             	mov    (%rcx),%rax
 80795c6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 80795ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80795ce:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80795d5:	00 00 00 
 80795d8:	48 01 c8             	add    %rcx,%rax
 80795db:	b9 00 00 00 00       	mov    $0x0,%ecx
 80795e0:	49 89 c8             	mov    %rcx,%r8
 80795e3:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80795ea:	00 00 00 
 80795ed:	49 89 cb             	mov    %rcx,%r11
 80795f0:	48 8b 08             	mov    (%rax),%rcx
 80795f3:	49 89 ca             	mov    %rcx,%r10
 80795f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 80795fa:	48 89 c6             	mov    %rax,%rsi
 80795fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079601:	48 89 c7             	mov    %rax,%rdi
 8079604:	4c 89 d2             	mov    %r10,%rdx
 8079607:	4c 89 d9             	mov    %r11,%rcx
 807960a:	b8 00 00 00 00       	mov    $0x0,%eax
 807960f:	e8 48 34 fd ff       	callq  804ca5c <put_extern_sym2>
 8079614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079618:	8b 08                	mov    (%rax),%ecx
 807961a:	81 e9 00 01 00 00    	sub    $0x100,%ecx
 8079620:	48 63 c9             	movslq %ecx,%rcx
 8079623:	48 89 c8             	mov    %rcx,%rax
 8079626:	48 c1 e0 03          	shl    $0x3,%rax
 807962a:	48 8b 0d 17 49 01 00 	mov    0x14917(%rip),%rcx        # 808df48 <_GLOBAL_OFFSET_TABLE_+0x2c8>
 8079631:	48 8b 09             	mov    (%rcx),%rcx
 8079634:	48 89 c2             	mov    %rax,%rdx
 8079637:	48 01 d1             	add    %rdx,%rcx
 807963a:	48 8b 01             	mov    (%rcx),%rax
 807963d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8079644:	00 00 00 
 8079647:	48 01 c8             	add    %rcx,%rax
 807964a:	b9 00 00 00 00       	mov    $0x0,%ecx
 807964f:	48 89 08             	mov    %rcx,(%rax)
 8079652:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8079656:	48 89 c7             	mov    %rax,%rdi
 8079659:	b8 00 00 00 00       	mov    $0x0,%eax
 807965e:	e8 7c 27 fe ff       	callq  805bddf <sym_free>
 8079663:	e9 a1 fe ff ff       	jmpq   8079509 <asm_free_labels+0x46>
 8079668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807966c:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 8079673:	00 00 00 
 8079676:	48 01 c8             	add    %rcx,%rax
 8079679:	b9 00 00 00 00       	mov    $0x0,%ecx
 807967e:	48 89 08             	mov    %rcx,(%rax)
 8079681:	c9                   	leaveq 
 8079682:	c3                   	retq   

0000000008079683 <use_section1>:
 8079683:	55                   	push   %rbp
 8079684:	48 89 e5             	mov    %rsp,%rbp
 8079687:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807968e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8079692:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8079696:	48 8b 05 1b 48 01 00 	mov    0x1481b(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807969d:	48 8b 00             	mov    (%rax),%rax
 80796a0:	48 8b 0d 89 49 01 00 	mov    0x14989(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80796a7:	8b 09                	mov    (%rcx),%ecx
 80796a9:	48 63 c9             	movslq %ecx,%rcx
 80796ac:	48 89 ca             	mov    %rcx,%rdx
 80796af:	48 89 10             	mov    %rdx,(%rax)
 80796b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80796b6:	4c 8b 1d fb 47 01 00 	mov    0x147fb(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 80796bd:	49 89 03             	mov    %rax,(%r11)
 80796c0:	48 8b 05 f1 47 01 00 	mov    0x147f1(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 80796c7:	48 8b 00             	mov    (%rax),%rax
 80796ca:	8b 08                	mov    (%rax),%ecx
 80796cc:	4c 8b 1d 5d 49 01 00 	mov    0x1495d(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80796d3:	41 89 0b             	mov    %ecx,(%r11)
 80796d6:	c9                   	leaveq 
 80796d7:	c3                   	retq   

00000000080796d8 <use_section>:
 80796d8:	55                   	push   %rbp
 80796d9:	48 89 e5             	mov    %rsp,%rbp
 80796dc:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80796e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80796e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80796eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80796ef:	48 89 c6             	mov    %rax,%rsi
 80796f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80796f6:	48 89 c7             	mov    %rax,%rdi
 80796f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80796fe:	e8 6d 32 fd ff       	callq  804c970 <find_section>
 8079703:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8079707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807970b:	48 89 c6             	mov    %rax,%rsi
 807970e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079712:	48 89 c7             	mov    %rax,%rdi
 8079715:	b8 00 00 00 00       	mov    $0x0,%eax
 807971a:	e8 64 ff ff ff       	callq  8079683 <use_section1>
 807971f:	c9                   	leaveq 
 8079720:	c3                   	retq   

0000000008079721 <asm_parse_directive>:
 8079721:	55                   	push   %rbp
 8079722:	48 89 e5             	mov    %rsp,%rbp
 8079725:	48 81 ec 00 05 00 00 	sub    $0x500,%rsp
 807972c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8079730:	b8 00 00 00 00       	mov    $0x0,%eax
 8079735:	e8 90 ef fd ff       	callq  80586ca <next>
 807973a:	48 8b 05 77 47 01 00 	mov    0x14777(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 8079741:	48 8b 00             	mov    (%rax),%rax
 8079744:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 8079748:	48 8b 05 d9 47 01 00 	mov    0x147d9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807974f:	8b 00                	mov    (%rax),%eax
 8079751:	e9 05 00 00 00       	jmpq   807975b <asm_parse_directive+0x3a>
 8079756:	e9 0c 00 00 00       	jmpq   8079767 <asm_parse_directive+0x46>
 807975b:	81 f8 86 01 00 00    	cmp    $0x186,%eax
 8079761:	0f 85 05 00 00 00    	jne    807976c <asm_parse_directive+0x4b>
 8079767:	e9 0c 00 00 00       	jmpq   8079778 <asm_parse_directive+0x57>
 807976c:	81 f8 87 01 00 00    	cmp    $0x187,%eax
 8079772:	0f 85 05 00 00 00    	jne    807977d <asm_parse_directive+0x5c>
 8079778:	e9 0c 00 00 00       	jmpq   8079789 <asm_parse_directive+0x68>
 807977d:	81 f8 88 01 00 00    	cmp    $0x188,%eax
 8079783:	0f 85 b5 01 00 00    	jne    807993e <asm_parse_directive+0x21d>
 8079789:	48 8b 05 98 47 01 00 	mov    0x14798(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079790:	8b 00                	mov    (%rax),%eax
 8079792:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8079795:	b8 00 00 00 00       	mov    $0x0,%eax
 807979a:	e8 2b ef fd ff       	callq  80586ca <next>
 807979f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80797a3:	48 89 c7             	mov    %rax,%rdi
 80797a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80797ab:	e8 19 fb ff ff       	callq  80792c9 <asm_int_expr>
 80797b0:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80797b3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80797b6:	81 f8 86 01 00 00    	cmp    $0x186,%eax
 80797bc:	0f 85 a8 00 00 00    	jne    807986a <asm_parse_directive+0x149>
 80797c2:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80797c5:	83 f8 00             	cmp    $0x0,%eax
 80797c8:	0f 8c 1a 00 00 00    	jl     80797e8 <asm_parse_directive+0xc7>
 80797ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80797d1:	83 e8 01             	sub    $0x1,%eax
 80797d4:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 80797d7:	48 21 c1             	and    %rax,%rcx
 80797da:	83 f9 00             	cmp    $0x0,%ecx
 80797dd:	0f 85 05 00 00 00    	jne    80797e8 <asm_parse_directive+0xc7>
 80797e3:	e9 14 00 00 00       	jmpq   80797fc <asm_parse_directive+0xdb>
 80797e8:	48 8d 05 66 31 01 00 	lea    0x13166(%rip),%rax        # 808c955 <L.117>
 80797ef:	48 89 c7             	mov    %rax,%rdi
 80797f2:	b8 00 00 00 00       	mov    $0x0,%eax
 80797f7:	e8 cb 3e fd ff       	callq  804d6c7 <tcc_error>
 80797fc:	48 8b 05 2d 48 01 00 	mov    0x1482d(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079803:	8b 00                	mov    (%rax),%eax
 8079805:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8079808:	48 01 c8             	add    %rcx,%rax
 807980b:	83 e8 01             	sub    $0x1,%eax
 807980e:	b9 00 00 00 00       	mov    $0x0,%ecx
 8079813:	8b 55 f4             	mov    -0xc(%rbp),%edx
 8079816:	48 29 d1             	sub    %rdx,%rcx
 8079819:	48 21 c8             	and    %rcx,%rax
 807981c:	89 45 f0             	mov    %eax,-0x10(%rbp)
 807981f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8079822:	48 8b 0d 07 48 01 00 	mov    0x14807(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079829:	8b 09                	mov    (%rcx),%ecx
 807982b:	48 29 c8             	sub    %rcx,%rax
 807982e:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8079831:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8079835:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 807983c:	00 00 00 
 807983f:	48 01 c8             	add    %rcx,%rax
 8079842:	8b 08                	mov    (%rax),%ecx
 8079844:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8079847:	39 c1                	cmp    %eax,%ecx
 8079849:	0f 8d 16 00 00 00    	jge    8079865 <asm_parse_directive+0x144>
 807984f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8079853:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 807985a:	00 00 00 
 807985d:	48 01 c8             	add    %rcx,%rax
 8079860:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8079863:	89 08                	mov    %ecx,(%rax)
 8079865:	e9 06 00 00 00       	jmpq   8079870 <asm_parse_directive+0x14f>
 807986a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807986d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8079870:	b8 00 00 00 00       	mov    $0x0,%eax
 8079875:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8079878:	48 8b 05 a9 46 01 00 	mov    0x146a9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807987f:	8b 00                	mov    (%rax),%eax
 8079881:	83 f8 2c             	cmp    $0x2c,%eax
 8079884:	0f 85 1e 00 00 00    	jne    80798a8 <asm_parse_directive+0x187>
 807988a:	b8 00 00 00 00       	mov    $0x0,%eax
 807988f:	e8 36 ee fd ff       	callq  80586ca <next>
 8079894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079898:	48 89 c7             	mov    %rax,%rdi
 807989b:	b8 00 00 00 00       	mov    $0x0,%eax
 80798a0:	e8 24 fa ff ff       	callq  80792c9 <asm_int_expr>
 80798a5:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80798a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80798ac:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80798b3:	00 00 00 
 80798b6:	48 01 c8             	add    %rcx,%rax
 80798b9:	8b 08                	mov    (%rax),%ecx
 80798bb:	83 f9 08             	cmp    $0x8,%ecx
 80798be:	0f 84 57 00 00 00    	je     807991b <asm_parse_directive+0x1fa>
 80798c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80798c8:	48 8b 0d 61 47 01 00 	mov    0x14761(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80798cf:	8b 09                	mov    (%rcx),%ecx
 80798d1:	48 63 c9             	movslq %ecx,%rcx
 80798d4:	48 89 ca             	mov    %rcx,%rdx
 80798d7:	48 89 10             	mov    %rdx,(%rax)
 80798da:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80798dd:	48 63 c0             	movslq %eax,%rax
 80798e0:	48 89 c1             	mov    %rax,%rcx
 80798e3:	48 89 ce             	mov    %rcx,%rsi
 80798e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80798ea:	48 89 c7             	mov    %rax,%rdi
 80798ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80798f2:	e8 73 2f fd ff       	callq  804c86a <section_ptr_add>
 80798f7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80798fb:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80798fe:	49 89 c2             	mov    %rax,%r10
 8079901:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8079904:	48 89 c6             	mov    %rax,%rsi
 8079907:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 807990b:	48 89 c7             	mov    %rax,%rdi
 807990e:	4c 89 d2             	mov    %r10,%rdx
 8079911:	b8 00 00 00 00       	mov    $0x0,%eax
 8079916:	e8 95 d5 00 00       	callq  8086eb0 <memset>
 807991b:	48 8b 05 0e 47 01 00 	mov    0x1470e(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079922:	8b 00                	mov    (%rax),%eax
 8079924:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8079927:	48 01 c8             	add    %rcx,%rax
 807992a:	4c 8b 1d ff 46 01 00 	mov    0x146ff(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079931:	41 89 03             	mov    %eax,(%r11)
 8079934:	e9 a9 10 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079939:	e9 0c 00 00 00       	jmpq   807994a <asm_parse_directive+0x229>
 807993e:	81 f8 98 01 00 00    	cmp    $0x198,%eax
 8079944:	0f 85 20 01 00 00    	jne    8079a6a <asm_parse_directive+0x349>
 807994a:	b8 00 00 00 00       	mov    $0x0,%eax
 807994f:	e8 76 ed fd ff       	callq  80586ca <next>
 8079954:	48 8b 05 4d 46 01 00 	mov    0x1464d(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807995b:	48 8b 00             	mov    (%rax),%rax
 807995e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8079965:	00 00 00 
 8079968:	48 01 c8             	add    %rcx,%rax
 807996b:	48 8b 08             	mov    (%rax),%rcx
 807996e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 8079972:	48 8b 05 af 45 01 00 	mov    0x145af(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079979:	8b 00                	mov    (%rax),%eax
 807997b:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 8079981:	0f 84 14 00 00 00    	je     807999b <asm_parse_directive+0x27a>
 8079987:	48 8d 05 f1 2f 01 00 	lea    0x12ff1(%rip),%rax        # 808c97f <L.118>
 807998e:	48 89 c7             	mov    %rax,%rdi
 8079991:	b8 00 00 00 00       	mov    $0x0,%eax
 8079996:	e8 2c 3d fd ff       	callq  804d6c7 <tcc_error>
 807999b:	b8 00 00 00 00       	mov    $0x0,%eax
 80799a0:	49 89 c2             	mov    %rax,%r10
 80799a3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 80799a7:	48 89 c6             	mov    %rax,%rsi
 80799aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80799ae:	48 89 c7             	mov    %rax,%rdi
 80799b1:	4c 89 d2             	mov    %r10,%rdx
 80799b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80799b9:	e8 82 e3 00 00       	callq  8087d40 <__preinit_array_end+0x2a0>
 80799be:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 80799c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80799c6:	0f be 08             	movsbl (%rax),%ecx
 80799c9:	83 f9 00             	cmp    $0x0,%ecx
 80799cc:	0f 84 02 00 00 00    	je     80799d4 <asm_parse_directive+0x2b3>
 80799d2:	eb b3                	jmp    8079987 <asm_parse_directive+0x266>
 80799d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80799d9:	e8 ec ec fd ff       	callq  80586ca <next>
 80799de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80799e2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80799e9:	00 00 00 
 80799ec:	48 01 c8             	add    %rcx,%rax
 80799ef:	8b 08                	mov    (%rax),%ecx
 80799f1:	83 f9 08             	cmp    $0x8,%ecx
 80799f4:	0f 84 2a 00 00 00    	je     8079a24 <asm_parse_directive+0x303>
 80799fa:	8b 45 c8             	mov    -0x38(%rbp),%eax
 80799fd:	48 89 c7             	mov    %rax,%rdi
 8079a00:	b8 00 00 00 00       	mov    $0x0,%eax
 8079a05:	e8 b2 42 00 00       	callq  807dcbc <gen_le32>
 8079a0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8079a0e:	48 c1 e8 20          	shr    $0x20,%rax
 8079a12:	48 89 c7             	mov    %rax,%rdi
 8079a15:	b8 00 00 00 00       	mov    $0x0,%eax
 8079a1a:	e8 9d 42 00 00       	callq  807dcbc <gen_le32>
 8079a1f:	e9 16 00 00 00       	jmpq   8079a3a <asm_parse_directive+0x319>
 8079a24:	48 8b 05 05 46 01 00 	mov    0x14605(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079a2b:	8b 00                	mov    (%rax),%eax
 8079a2d:	83 c0 08             	add    $0x8,%eax
 8079a30:	4c 8b 1d f9 45 01 00 	mov    0x145f9(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079a37:	41 89 03             	mov    %eax,(%r11)
 8079a3a:	48 8b 05 e7 44 01 00 	mov    0x144e7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079a41:	8b 00                	mov    (%rax),%eax
 8079a43:	83 f8 2c             	cmp    $0x2c,%eax
 8079a46:	0f 84 05 00 00 00    	je     8079a51 <asm_parse_directive+0x330>
 8079a4c:	e9 0f 00 00 00       	jmpq   8079a60 <asm_parse_directive+0x33f>
 8079a51:	b8 00 00 00 00       	mov    $0x0,%eax
 8079a56:	e8 6f ec fd ff       	callq  80586ca <next>
 8079a5b:	e9 f4 fe ff ff       	jmpq   8079954 <asm_parse_directive+0x233>
 8079a60:	e9 7d 0f 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079a65:	e9 0c 00 00 00       	jmpq   8079a76 <asm_parse_directive+0x355>
 8079a6a:	81 f8 84 01 00 00    	cmp    $0x184,%eax
 8079a70:	0f 85 12 00 00 00    	jne    8079a88 <asm_parse_directive+0x367>
 8079a76:	b8 01 00 00 00       	mov    $0x1,%eax
 8079a7b:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8079a7e:	e9 59 00 00 00       	jmpq   8079adc <asm_parse_directive+0x3bb>
 8079a83:	e9 0c 00 00 00       	jmpq   8079a94 <asm_parse_directive+0x373>
 8079a88:	81 f8 85 01 00 00    	cmp    $0x185,%eax
 8079a8e:	0f 85 05 00 00 00    	jne    8079a99 <asm_parse_directive+0x378>
 8079a94:	e9 0c 00 00 00       	jmpq   8079aa5 <asm_parse_directive+0x384>
 8079a99:	81 f8 27 01 00 00    	cmp    $0x127,%eax
 8079a9f:	0f 85 12 00 00 00    	jne    8079ab7 <asm_parse_directive+0x396>
 8079aa5:	b8 02 00 00 00       	mov    $0x2,%eax
 8079aaa:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8079aad:	e9 2a 00 00 00       	jmpq   8079adc <asm_parse_directive+0x3bb>
 8079ab2:	e9 0c 00 00 00       	jmpq   8079ac3 <asm_parse_directive+0x3a2>
 8079ab7:	81 f8 17 01 00 00    	cmp    $0x117,%eax
 8079abd:	0f 85 05 00 00 00    	jne    8079ac8 <asm_parse_directive+0x3a7>
 8079ac3:	e9 0c 00 00 00       	jmpq   8079ad4 <asm_parse_directive+0x3b3>
 8079ac8:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 8079ace:	0f 85 07 01 00 00    	jne    8079bdb <asm_parse_directive+0x4ba>
 8079ad4:	b8 04 00 00 00       	mov    $0x4,%eax
 8079ad9:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8079adc:	b8 00 00 00 00       	mov    $0x0,%eax
 8079ae1:	e8 e4 eb fd ff       	callq  80586ca <next>
 8079ae6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 8079aea:	48 89 c6             	mov    %rax,%rsi
 8079aed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079af1:	48 89 c7             	mov    %rax,%rdi
 8079af4:	b8 00 00 00 00       	mov    $0x0,%eax
 8079af9:	e8 9e f7 ff ff       	callq  807929c <asm_expr>
 8079afe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8079b02:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8079b09:	00 00 00 
 8079b0c:	48 01 c8             	add    %rcx,%rax
 8079b0f:	8b 08                	mov    (%rax),%ecx
 8079b11:	83 f9 08             	cmp    $0x8,%ecx
 8079b14:	0f 84 78 00 00 00    	je     8079b92 <asm_parse_directive+0x471>
 8079b1a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8079b1d:	83 f8 04             	cmp    $0x4,%eax
 8079b20:	0f 85 16 00 00 00    	jne    8079b3c <asm_parse_directive+0x41b>
 8079b26:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 8079b2a:	48 89 c7             	mov    %rax,%rdi
 8079b2d:	b8 00 00 00 00       	mov    $0x0,%eax
 8079b32:	e8 e1 97 00 00       	callq  8083318 <gen_expr32>
 8079b37:	e9 51 00 00 00       	jmpq   8079b8d <asm_parse_directive+0x46c>
 8079b3c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 8079b40:	85 c0                	test   %eax,%eax
 8079b42:	0f 84 14 00 00 00    	je     8079b5c <asm_parse_directive+0x43b>
 8079b48:	48 8d 05 40 2e 01 00 	lea    0x12e40(%rip),%rax        # 808c98f <L.119>
 8079b4f:	48 89 c7             	mov    %rax,%rdi
 8079b52:	b8 00 00 00 00       	mov    $0x0,%eax
 8079b57:	e8 f6 75 fd ff       	callq  8051152 <expect>
 8079b5c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8079b5f:	83 f8 01             	cmp    $0x1,%eax
 8079b62:	0f 85 15 00 00 00    	jne    8079b7d <asm_parse_directive+0x45c>
 8079b68:	8b 45 b0             	mov    -0x50(%rbp),%eax
 8079b6b:	48 89 c7             	mov    %rax,%rdi
 8079b6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8079b73:	e8 2b 40 00 00       	callq  807dba3 <g>
 8079b78:	e9 10 00 00 00       	jmpq   8079b8d <asm_parse_directive+0x46c>
 8079b7d:	8b 45 b0             	mov    -0x50(%rbp),%eax
 8079b80:	48 89 c7             	mov    %rax,%rdi
 8079b83:	b8 00 00 00 00       	mov    $0x0,%eax
 8079b88:	e8 fb 40 00 00       	callq  807dc88 <gen_le16>
 8079b8d:	e9 19 00 00 00       	jmpq   8079bab <asm_parse_directive+0x48a>
 8079b92:	48 8b 05 97 44 01 00 	mov    0x14497(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079b99:	8b 00                	mov    (%rax),%eax
 8079b9b:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8079b9e:	48 01 c8             	add    %rcx,%rax
 8079ba1:	4c 8b 1d 88 44 01 00 	mov    0x14488(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079ba8:	41 89 03             	mov    %eax,(%r11)
 8079bab:	48 8b 05 76 43 01 00 	mov    0x14376(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079bb2:	8b 00                	mov    (%rax),%eax
 8079bb4:	83 f8 2c             	cmp    $0x2c,%eax
 8079bb7:	0f 84 05 00 00 00    	je     8079bc2 <asm_parse_directive+0x4a1>
 8079bbd:	e9 0f 00 00 00       	jmpq   8079bd1 <asm_parse_directive+0x4b0>
 8079bc2:	b8 00 00 00 00       	mov    $0x0,%eax
 8079bc7:	e8 fe ea fd ff       	callq  80586ca <next>
 8079bcc:	e9 15 ff ff ff       	jmpq   8079ae6 <asm_parse_directive+0x3c5>
 8079bd1:	e9 0c 0e 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079bd6:	e9 0c 00 00 00       	jmpq   8079be7 <asm_parse_directive+0x4c6>
 8079bdb:	81 f8 96 01 00 00    	cmp    $0x196,%eax
 8079be1:	0f 85 ae 01 00 00    	jne    8079d95 <asm_parse_directive+0x674>
 8079be7:	b8 00 00 00 00       	mov    $0x0,%eax
 8079bec:	e8 d9 ea fd ff       	callq  80586ca <next>
 8079bf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079bf5:	48 89 c7             	mov    %rax,%rdi
 8079bf8:	b8 00 00 00 00       	mov    $0x0,%eax
 8079bfd:	e8 c7 f6 ff ff       	callq  80792c9 <asm_int_expr>
 8079c02:	89 45 ac             	mov    %eax,-0x54(%rbp)
 8079c05:	8b 45 ac             	mov    -0x54(%rbp),%eax
 8079c08:	83 f8 00             	cmp    $0x0,%eax
 8079c0b:	0f 8d 19 00 00 00    	jge    8079c2a <asm_parse_directive+0x509>
 8079c11:	48 8d 05 80 2d 01 00 	lea    0x12d80(%rip),%rax        # 808c998 <L.120>
 8079c18:	48 89 c7             	mov    %rax,%rdi
 8079c1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8079c20:	e8 a2 3a fd ff       	callq  804d6c7 <tcc_error>
 8079c25:	e9 b8 0d 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079c2a:	b8 01 00 00 00       	mov    $0x1,%eax
 8079c2f:	89 45 a8             	mov    %eax,-0x58(%rbp)
 8079c32:	b8 00 00 00 00       	mov    $0x0,%eax
 8079c37:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 8079c3a:	48 8b 05 e7 42 01 00 	mov    0x142e7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079c41:	8b 00                	mov    (%rax),%eax
 8079c43:	83 f8 2c             	cmp    $0x2c,%eax
 8079c46:	0f 85 87 00 00 00    	jne    8079cd3 <asm_parse_directive+0x5b2>
 8079c4c:	b8 00 00 00 00       	mov    $0x0,%eax
 8079c51:	e8 74 ea fd ff       	callq  80586ca <next>
 8079c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079c5a:	48 89 c7             	mov    %rax,%rdi
 8079c5d:	b8 00 00 00 00       	mov    $0x0,%eax
 8079c62:	e8 62 f6 ff ff       	callq  80792c9 <asm_int_expr>
 8079c67:	89 45 a8             	mov    %eax,-0x58(%rbp)
 8079c6a:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8079c6d:	83 f8 00             	cmp    $0x0,%eax
 8079c70:	0f 8d 19 00 00 00    	jge    8079c8f <asm_parse_directive+0x56e>
 8079c76:	48 8d 05 35 2d 01 00 	lea    0x12d35(%rip),%rax        # 808c9b2 <L.121>
 8079c7d:	48 89 c7             	mov    %rax,%rdi
 8079c80:	b8 00 00 00 00       	mov    $0x0,%eax
 8079c85:	e8 3d 3a fd ff       	callq  804d6c7 <tcc_error>
 8079c8a:	e9 53 0d 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079c8f:	8b 45 a8             	mov    -0x58(%rbp),%eax
 8079c92:	83 f8 08             	cmp    $0x8,%eax
 8079c95:	0f 8e 08 00 00 00    	jle    8079ca3 <asm_parse_directive+0x582>
 8079c9b:	b8 08 00 00 00       	mov    $0x8,%eax
 8079ca0:	89 45 a8             	mov    %eax,-0x58(%rbp)
 8079ca3:	48 8b 05 7e 42 01 00 	mov    0x1427e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079caa:	8b 00                	mov    (%rax),%eax
 8079cac:	83 f8 2c             	cmp    $0x2c,%eax
 8079caf:	0f 85 1e 00 00 00    	jne    8079cd3 <asm_parse_directive+0x5b2>
 8079cb5:	b8 00 00 00 00       	mov    $0x0,%eax
 8079cba:	e8 0b ea fd ff       	callq  80586ca <next>
 8079cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079cc3:	48 89 c7             	mov    %rax,%rdi
 8079cc6:	b8 00 00 00 00       	mov    $0x0,%eax
 8079ccb:	e8 f9 f5 ff ff       	callq  80792c9 <asm_int_expr>
 8079cd0:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 8079cd3:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
 8079cd7:	88 45 94             	mov    %al,-0x6c(%rbp)
 8079cda:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8079cdd:	c1 f8 08             	sar    $0x8,%eax
 8079ce0:	88 45 95             	mov    %al,-0x6b(%rbp)
 8079ce3:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8079ce6:	c1 f8 10             	sar    $0x10,%eax
 8079ce9:	88 45 96             	mov    %al,-0x6a(%rbp)
 8079cec:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 8079cef:	c1 f8 18             	sar    $0x18,%eax
 8079cf2:	88 45 97             	mov    %al,-0x69(%rbp)
 8079cf5:	b8 00 00 00 00       	mov    $0x0,%eax
 8079cfa:	88 45 98             	mov    %al,-0x68(%rbp)
 8079cfd:	b8 00 00 00 00       	mov    $0x0,%eax
 8079d02:	88 45 99             	mov    %al,-0x67(%rbp)
 8079d05:	b8 00 00 00 00       	mov    $0x0,%eax
 8079d0a:	88 45 9a             	mov    %al,-0x66(%rbp)
 8079d0d:	b8 00 00 00 00       	mov    $0x0,%eax
 8079d12:	88 45 9b             	mov    %al,-0x65(%rbp)
 8079d15:	b8 00 00 00 00       	mov    $0x0,%eax
 8079d1a:	89 45 a0             	mov    %eax,-0x60(%rbp)
 8079d1d:	8b 45 a0             	mov    -0x60(%rbp),%eax
 8079d20:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 8079d23:	39 c8                	cmp    %ecx,%eax
 8079d25:	0f 8d 60 00 00 00    	jge    8079d8b <asm_parse_directive+0x66a>
 8079d2b:	e9 0e 00 00 00       	jmpq   8079d3e <asm_parse_directive+0x61d>
 8079d30:	8b 45 a0             	mov    -0x60(%rbp),%eax
 8079d33:	48 89 c1             	mov    %rax,%rcx
 8079d36:	83 c0 01             	add    $0x1,%eax
 8079d39:	89 45 a0             	mov    %eax,-0x60(%rbp)
 8079d3c:	eb df                	jmp    8079d1d <asm_parse_directive+0x5fc>
 8079d3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8079d43:	89 45 9c             	mov    %eax,-0x64(%rbp)
 8079d46:	8b 45 9c             	mov    -0x64(%rbp),%eax
 8079d49:	8b 4d a8             	mov    -0x58(%rbp),%ecx
 8079d4c:	39 c8                	cmp    %ecx,%eax
 8079d4e:	0f 8d 35 00 00 00    	jge    8079d89 <asm_parse_directive+0x668>
 8079d54:	e9 0e 00 00 00       	jmpq   8079d67 <asm_parse_directive+0x646>
 8079d59:	8b 45 9c             	mov    -0x64(%rbp),%eax
 8079d5c:	48 89 c1             	mov    %rax,%rcx
 8079d5f:	83 c0 01             	add    $0x1,%eax
 8079d62:	89 45 9c             	mov    %eax,-0x64(%rbp)
 8079d65:	eb df                	jmp    8079d46 <asm_parse_directive+0x625>
 8079d67:	8b 45 9c             	mov    -0x64(%rbp),%eax
 8079d6a:	48 63 c0             	movslq %eax,%rax
 8079d6d:	48 8d 4d 94          	lea    -0x6c(%rbp),%rcx
 8079d71:	48 89 c2             	mov    %rax,%rdx
 8079d74:	48 01 d1             	add    %rdx,%rcx
 8079d77:	0f b6 01             	movzbl (%rcx),%eax
 8079d7a:	48 89 c7             	mov    %rax,%rdi
 8079d7d:	b8 00 00 00 00       	mov    $0x0,%eax
 8079d82:	e8 1c 3e 00 00       	callq  807dba3 <g>
 8079d87:	eb d0                	jmp    8079d59 <asm_parse_directive+0x638>
 8079d89:	eb a5                	jmp    8079d30 <asm_parse_directive+0x60f>
 8079d8b:	e9 52 0c 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079d90:	e9 0c 00 00 00       	jmpq   8079da1 <asm_parse_directive+0x680>
 8079d95:	81 f8 97 01 00 00    	cmp    $0x197,%eax
 8079d9b:	0f 85 85 00 00 00    	jne    8079e26 <asm_parse_directive+0x705>
 8079da1:	b8 00 00 00 00       	mov    $0x0,%eax
 8079da6:	e8 1f e9 fd ff       	callq  80586ca <next>
 8079dab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079daf:	48 89 c7             	mov    %rax,%rdi
 8079db2:	b8 00 00 00 00       	mov    $0x0,%eax
 8079db7:	e8 0d f5 ff ff       	callq  80792c9 <asm_int_expr>
 8079dbc:	48 63 c0             	movslq %eax,%rax
 8079dbf:	48 89 c1             	mov    %rax,%rcx
 8079dc2:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
 8079dc6:	48 8b 05 63 42 01 00 	mov    0x14263(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079dcd:	8b 00                	mov    (%rax),%eax
 8079dcf:	48 63 c0             	movslq %eax,%rax
 8079dd2:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 8079dd6:	48 89 c2             	mov    %rax,%rdx
 8079dd9:	48 39 d1             	cmp    %rdx,%rcx
 8079ddc:	0f 83 14 00 00 00    	jae    8079df6 <asm_parse_directive+0x6d5>
 8079de2:	48 8d 05 e1 2b 01 00 	lea    0x12be1(%rip),%rax        # 808c9ca <L.122>
 8079de9:	48 89 c7             	mov    %rax,%rdi
 8079dec:	b8 00 00 00 00       	mov    $0x0,%eax
 8079df1:	e8 d1 38 fd ff       	callq  804d6c7 <tcc_error>
 8079df6:	b8 00 00 00 00       	mov    $0x0,%eax
 8079dfb:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8079dfe:	48 8b 05 2b 42 01 00 	mov    0x1422b(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8079e05:	8b 00                	mov    (%rax),%eax
 8079e07:	48 63 c0             	movslq %eax,%rax
 8079e0a:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
 8079e0e:	48 89 c2             	mov    %rax,%rdx
 8079e11:	48 29 d1             	sub    %rdx,%rcx
 8079e14:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 8079e17:	e9 8c fa ff ff       	jmpq   80798a8 <asm_parse_directive+0x187>
 8079e1c:	e9 c1 0b 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079e21:	e9 0c 00 00 00       	jmpq   8079e32 <asm_parse_directive+0x711>
 8079e26:	81 f8 8d 01 00 00    	cmp    $0x18d,%eax
 8079e2c:	0f 85 05 00 00 00    	jne    8079e37 <asm_parse_directive+0x716>
 8079e32:	e9 0c 00 00 00       	jmpq   8079e43 <asm_parse_directive+0x722>
 8079e37:	81 f8 8e 01 00 00    	cmp    $0x18e,%eax
 8079e3d:	0f 85 05 00 00 00    	jne    8079e48 <asm_parse_directive+0x727>
 8079e43:	e9 0c 00 00 00       	jmpq   8079e54 <asm_parse_directive+0x733>
 8079e48:	81 f8 56 01 00 00    	cmp    $0x156,%eax
 8079e4e:	0f 85 fd 00 00 00    	jne    8079f51 <asm_parse_directive+0x830>
 8079e54:	48 8b 05 cd 40 01 00 	mov    0x140cd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079e5b:	8b 00                	mov    (%rax),%eax
 8079e5d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8079e60:	b8 00 00 00 00       	mov    $0x0,%eax
 8079e65:	e8 60 e8 fd ff       	callq  80586ca <next>
 8079e6a:	48 8b 05 b7 40 01 00 	mov    0x140b7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079e71:	8b 00                	mov    (%rax),%eax
 8079e73:	48 89 c7             	mov    %rax,%rdi
 8079e76:	b8 00 00 00 00       	mov    $0x0,%eax
 8079e7b:	e8 1b a1 fd ff       	callq  8053f9b <label_find>
 8079e80:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8079e84:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 8079e88:	85 c0                	test   %eax,%eax
 8079e8a:	0f 84 05 00 00 00    	je     8079e95 <asm_parse_directive+0x774>
 8079e90:	e9 51 00 00 00       	jmpq   8079ee6 <asm_parse_directive+0x7c5>
 8079e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8079e99:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 8079ea0:	00 00 00 
 8079ea3:	48 01 c8             	add    %rcx,%rax
 8079ea6:	b9 00 00 00 00       	mov    $0x0,%ecx
 8079eab:	49 89 ca             	mov    %rcx,%r10
 8079eae:	48 8b 0d 73 40 01 00 	mov    0x14073(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079eb5:	8b 09                	mov    (%rcx),%ecx
 8079eb7:	48 89 ce             	mov    %rcx,%rsi
 8079eba:	48 89 c7             	mov    %rax,%rdi
 8079ebd:	4c 89 d2             	mov    %r10,%rdx
 8079ec0:	b8 00 00 00 00       	mov    $0x0,%eax
 8079ec5:	e8 48 a1 fd ff       	callq  8054012 <label_push>
 8079eca:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 8079ece:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 8079ed2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8079ed9:	00 00 00 
 8079edc:	48 01 c8             	add    %rcx,%rax
 8079edf:	b9 03 00 00 00       	mov    $0x3,%ecx
 8079ee4:	89 08                	mov    %ecx,(%rax)
 8079ee6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 8079eea:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8079ef1:	00 00 00 
 8079ef4:	48 01 c8             	add    %rcx,%rax
 8079ef7:	8b 08                	mov    (%rax),%ecx
 8079ef9:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 8079eff:	89 08                	mov    %ecx,(%rax)
 8079f01:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8079f04:	81 f8 56 01 00 00    	cmp    $0x156,%eax
 8079f0a:	0f 85 1b 00 00 00    	jne    8079f2b <asm_parse_directive+0x80a>
 8079f10:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 8079f14:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8079f1b:	00 00 00 
 8079f1e:	48 01 c8             	add    %rcx,%rax
 8079f21:	8b 08                	mov    (%rax),%ecx
 8079f23:	81 c9 00 00 01 00    	or     $0x10000,%ecx
 8079f29:	89 08                	mov    %ecx,(%rax)
 8079f2b:	b8 00 00 00 00       	mov    $0x0,%eax
 8079f30:	e8 95 e7 fd ff       	callq  80586ca <next>
 8079f35:	48 8b 05 ec 3f 01 00 	mov    0x13fec(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079f3c:	8b 00                	mov    (%rax),%eax
 8079f3e:	83 f8 2c             	cmp    $0x2c,%eax
 8079f41:	0f 84 19 ff ff ff    	je     8079e60 <asm_parse_directive+0x73f>
 8079f47:	e9 96 0a 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 8079f4c:	e9 0c 00 00 00       	jmpq   8079f5d <asm_parse_directive+0x83c>
 8079f51:	81 f8 89 01 00 00    	cmp    $0x189,%eax
 8079f57:	0f 85 05 00 00 00    	jne    8079f62 <asm_parse_directive+0x841>
 8079f5d:	e9 0c 00 00 00       	jmpq   8079f6e <asm_parse_directive+0x84d>
 8079f62:	81 f8 8b 01 00 00    	cmp    $0x18b,%eax
 8079f68:	0f 85 05 00 00 00    	jne    8079f73 <asm_parse_directive+0x852>
 8079f6e:	e9 0c 00 00 00       	jmpq   8079f7f <asm_parse_directive+0x85e>
 8079f73:	81 f8 8a 01 00 00    	cmp    $0x18a,%eax
 8079f79:	0f 85 5c 01 00 00    	jne    807a0db <asm_parse_directive+0x9ba>
 8079f7f:	48 8b 05 a2 3f 01 00 	mov    0x13fa2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079f86:	8b 00                	mov    (%rax),%eax
 8079f88:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
 8079f8e:	b8 00 00 00 00       	mov    $0x0,%eax
 8079f93:	e8 32 e7 fd ff       	callq  80586ca <next>
 8079f98:	48 8b 05 89 3f 01 00 	mov    0x13f89(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8079f9f:	8b 00                	mov    (%rax),%eax
 8079fa1:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 8079fa7:	0f 84 14 00 00 00    	je     8079fc1 <asm_parse_directive+0x8a0>
 8079fad:	48 8d 05 30 2a 01 00 	lea    0x12a30(%rip),%rax        # 808c9e4 <L.123>
 8079fb4:	48 89 c7             	mov    %rax,%rdi
 8079fb7:	b8 00 00 00 00       	mov    $0x0,%eax
 8079fbc:	e8 91 71 fd ff       	callq  8051152 <expect>
 8079fc1:	48 8b 05 e0 3f 01 00 	mov    0x13fe0(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8079fc8:	48 8b 00             	mov    (%rax),%rax
 8079fcb:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8079fd2:	00 00 00 
 8079fd5:	48 01 c8             	add    %rcx,%rax
 8079fd8:	48 8b 08             	mov    (%rax),%rcx
 8079fdb:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
 8079fe2:	48 8b 05 bf 3f 01 00 	mov    0x13fbf(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8079fe9:	48 8b 00             	mov    (%rax),%rax
 8079fec:	8b 08                	mov    (%rax),%ecx
 8079fee:	89 8d 70 ff ff ff    	mov    %ecx,-0x90(%rbp)
 8079ff4:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
 8079ffa:	81 f8 8b 01 00 00    	cmp    $0x18b,%eax
 807a000:	0f 85 21 00 00 00    	jne    807a027 <asm_parse_directive+0x906>
 807a006:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 807a00c:	83 f8 00             	cmp    $0x0,%eax
 807a00f:	0f 8e 12 00 00 00    	jle    807a027 <asm_parse_directive+0x906>
 807a015:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
 807a01b:	48 89 c1             	mov    %rax,%rcx
 807a01e:	83 c0 ff             	add    $0xffffffff,%eax
 807a021:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
 807a027:	b8 00 00 00 00       	mov    $0x0,%eax
 807a02c:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 807a032:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 807a038:	8b 8d 70 ff ff ff    	mov    -0x90(%rbp),%ecx
 807a03e:	39 c8                	cmp    %ecx,%eax
 807a040:	0f 8d 41 00 00 00    	jge    807a087 <asm_parse_directive+0x966>
 807a046:	e9 14 00 00 00       	jmpq   807a05f <asm_parse_directive+0x93e>
 807a04b:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 807a051:	48 89 c1             	mov    %rax,%rcx
 807a054:	83 c0 01             	add    $0x1,%eax
 807a057:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
 807a05d:	eb d3                	jmp    807a032 <asm_parse_directive+0x911>
 807a05f:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 807a065:	48 63 c0             	movslq %eax,%rax
 807a068:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
 807a06f:	48 89 c2             	mov    %rax,%rdx
 807a072:	48 01 d1             	add    %rdx,%rcx
 807a075:	0f b6 01             	movzbl (%rcx),%eax
 807a078:	48 89 c7             	mov    %rax,%rdi
 807a07b:	b8 00 00 00 00       	mov    $0x0,%eax
 807a080:	e8 1e 3b 00 00       	callq  807dba3 <g>
 807a085:	eb c4                	jmp    807a04b <asm_parse_directive+0x92a>
 807a087:	b8 00 00 00 00       	mov    $0x0,%eax
 807a08c:	e8 39 e6 fd ff       	callq  80586ca <next>
 807a091:	48 8b 05 90 3e 01 00 	mov    0x13e90(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a098:	8b 00                	mov    (%rax),%eax
 807a09a:	83 f8 2c             	cmp    $0x2c,%eax
 807a09d:	0f 85 0f 00 00 00    	jne    807a0b2 <asm_parse_directive+0x991>
 807a0a3:	b8 00 00 00 00       	mov    $0x0,%eax
 807a0a8:	e8 1d e6 fd ff       	callq  80586ca <next>
 807a0ad:	e9 1a 00 00 00       	jmpq   807a0cc <asm_parse_directive+0x9ab>
 807a0b2:	48 8b 05 6f 3e 01 00 	mov    0x13e6f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a0b9:	8b 00                	mov    (%rax),%eax
 807a0bb:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807a0c1:	0f 84 05 00 00 00    	je     807a0cc <asm_parse_directive+0x9ab>
 807a0c7:	e9 05 00 00 00       	jmpq   807a0d1 <asm_parse_directive+0x9b0>
 807a0cc:	e9 c7 fe ff ff       	jmpq   8079f98 <asm_parse_directive+0x877>
 807a0d1:	e9 0c 09 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a0d6:	e9 0c 00 00 00       	jmpq   807a0e7 <asm_parse_directive+0x9c6>
 807a0db:	81 f8 92 01 00 00    	cmp    $0x192,%eax
 807a0e1:	0f 85 05 00 00 00    	jne    807a0ec <asm_parse_directive+0x9cb>
 807a0e7:	e9 0c 00 00 00       	jmpq   807a0f8 <asm_parse_directive+0x9d7>
 807a0ec:	81 f8 93 01 00 00    	cmp    $0x193,%eax
 807a0f2:	0f 85 05 00 00 00    	jne    807a0fd <asm_parse_directive+0x9dc>
 807a0f8:	e9 0c 00 00 00       	jmpq   807a109 <asm_parse_directive+0x9e8>
 807a0fd:	81 f8 94 01 00 00    	cmp    $0x194,%eax
 807a103:	0f 85 f4 00 00 00    	jne    807a1fd <asm_parse_directive+0xadc>
 807a109:	48 8b 05 18 3e 01 00 	mov    0x13e18(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a110:	8b 00                	mov    (%rax),%eax
 807a112:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807a115:	b8 00 00 00 00       	mov    $0x0,%eax
 807a11a:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807a11d:	b8 00 00 00 00       	mov    $0x0,%eax
 807a122:	e8 a3 e5 fd ff       	callq  80586ca <next>
 807a127:	48 8b 05 fa 3d 01 00 	mov    0x13dfa(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a12e:	8b 00                	mov    (%rax),%eax
 807a130:	83 f8 3b             	cmp    $0x3b,%eax
 807a133:	0f 84 30 00 00 00    	je     807a169 <asm_parse_directive+0xa48>
 807a139:	48 8b 05 e8 3d 01 00 	mov    0x13de8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a140:	8b 00                	mov    (%rax),%eax
 807a142:	83 f8 0a             	cmp    $0xa,%eax
 807a145:	0f 84 1e 00 00 00    	je     807a169 <asm_parse_directive+0xa48>
 807a14b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a14f:	48 89 c7             	mov    %rax,%rdi
 807a152:	b8 00 00 00 00       	mov    $0x0,%eax
 807a157:	e8 6d f1 ff ff       	callq  80792c9 <asm_int_expr>
 807a15c:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807a15f:	b8 00 00 00 00       	mov    $0x0,%eax
 807a164:	e8 61 e5 fd ff       	callq  80586ca <next>
 807a169:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807a16c:	85 c0                	test   %eax,%eax
 807a16e:	0f 84 05 00 00 00    	je     807a179 <asm_parse_directive+0xa58>
 807a174:	e9 0c 00 00 00       	jmpq   807a185 <asm_parse_directive+0xa64>
 807a179:	48 8d 05 7a 28 01 00 	lea    0x1287a(%rip),%rax        # 808c9fa <L.125>
 807a180:	e9 07 00 00 00       	jmpq   807a18c <asm_parse_directive+0xa6b>
 807a185:	48 8d 05 68 28 01 00 	lea    0x12868(%rip),%rax        # 808c9f4 <L.124>
 807a18c:	b9 00 00 00 00       	mov    $0x0,%ecx
 807a191:	48 89 ce             	mov    %rcx,%rsi
 807a194:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807a197:	48 89 cf             	mov    %rcx,%rdi
 807a19a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 807a1a1:	b8 00 00 00 00       	mov    $0x0,%eax
 807a1a6:	e8 09 77 fd ff       	callq  80518b4 <get_tok_str>
 807a1ab:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 807a1ae:	49 89 cb             	mov    %rcx,%r11
 807a1b1:	49 89 c2             	mov    %rax,%r10
 807a1b4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 807a1bb:	48 89 c6             	mov    %rax,%rsi
 807a1be:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
 807a1c5:	48 89 c7             	mov    %rax,%rdi
 807a1c8:	4c 89 d2             	mov    %r10,%rdx
 807a1cb:	4c 89 d9             	mov    %r11,%rcx
 807a1ce:	b8 00 00 00 00       	mov    $0x0,%eax
 807a1d3:	e8 18 da 00 00       	callq  8087bf0 <__preinit_array_end+0x150>
 807a1d8:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
 807a1df:	48 89 c6             	mov    %rax,%rsi
 807a1e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a1e6:	48 89 c7             	mov    %rax,%rdi
 807a1e9:	b8 00 00 00 00       	mov    $0x0,%eax
 807a1ee:	e8 e5 f4 ff ff       	callq  80796d8 <use_section>
 807a1f3:	e9 ea 07 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a1f8:	e9 0c 00 00 00       	jmpq   807a209 <asm_parse_directive+0xae8>
 807a1fd:	81 f8 8c 01 00 00    	cmp    $0x18c,%eax
 807a203:	0f 85 f8 00 00 00    	jne    807a301 <asm_parse_directive+0xbe0>
 807a209:	b8 00 00 00 00       	mov    $0x0,%eax
 807a20e:	88 85 20 fd ff ff    	mov    %al,-0x2e0(%rbp)
 807a214:	b8 00 00 00 00       	mov    $0x0,%eax
 807a219:	e8 ac e4 fd ff       	callq  80586ca <next>
 807a21e:	48 8b 05 03 3d 01 00 	mov    0x13d03(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a225:	8b 00                	mov    (%rax),%eax
 807a227:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807a22d:	0f 85 41 00 00 00    	jne    807a274 <asm_parse_directive+0xb53>
 807a233:	48 8b 05 6e 3d 01 00 	mov    0x13d6e(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807a23a:	48 8b 00             	mov    (%rax),%rax
 807a23d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807a244:	00 00 00 
 807a247:	48 01 c8             	add    %rcx,%rax
 807a24a:	48 8b 08             	mov    (%rax),%rcx
 807a24d:	49 89 ca             	mov    %rcx,%r10
 807a250:	b8 00 02 00 00       	mov    $0x200,%eax
 807a255:	48 89 c6             	mov    %rax,%rsi
 807a258:	48 8d 85 20 fd ff ff 	lea    -0x2e0(%rbp),%rax
 807a25f:	48 89 c7             	mov    %rax,%rdi
 807a262:	4c 89 d2             	mov    %r10,%rdx
 807a265:	b8 00 00 00 00       	mov    $0x0,%eax
 807a26a:	e8 fc 1a fd ff       	callq  804bd6b <pstrcat>
 807a26f:	e9 40 00 00 00       	jmpq   807a2b4 <asm_parse_directive+0xb93>
 807a274:	b8 00 00 00 00       	mov    $0x0,%eax
 807a279:	48 89 c6             	mov    %rax,%rsi
 807a27c:	48 8b 05 a5 3c 01 00 	mov    0x13ca5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a283:	8b 00                	mov    (%rax),%eax
 807a285:	48 89 c7             	mov    %rax,%rdi
 807a288:	b8 00 00 00 00       	mov    $0x0,%eax
 807a28d:	e8 22 76 fd ff       	callq  80518b4 <get_tok_str>
 807a292:	49 89 c2             	mov    %rax,%r10
 807a295:	b8 00 02 00 00       	mov    $0x200,%eax
 807a29a:	48 89 c6             	mov    %rax,%rsi
 807a29d:	48 8d 85 20 fd ff ff 	lea    -0x2e0(%rbp),%rax
 807a2a4:	48 89 c7             	mov    %rax,%rdi
 807a2a7:	4c 89 d2             	mov    %r10,%rdx
 807a2aa:	b8 00 00 00 00       	mov    $0x0,%eax
 807a2af:	e8 b7 1a fd ff       	callq  804bd6b <pstrcat>
 807a2b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a2b8:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 807a2bf:	00 00 00 
 807a2c2:	48 01 c8             	add    %rcx,%rax
 807a2c5:	8b 08                	mov    (%rax),%ecx
 807a2c7:	85 c9                	test   %ecx,%ecx
 807a2c9:	0f 84 1e 00 00 00    	je     807a2ed <asm_parse_directive+0xbcc>
 807a2cf:	48 8d 85 20 fd ff ff 	lea    -0x2e0(%rbp),%rax
 807a2d6:	48 89 c6             	mov    %rax,%rsi
 807a2d9:	48 8d 05 1e 27 01 00 	lea    0x1271e(%rip),%rax        # 808c9fe <L.126>
 807a2e0:	48 89 c7             	mov    %rax,%rdi
 807a2e3:	b8 00 00 00 00       	mov    $0x0,%eax
 807a2e8:	e8 12 36 fd ff       	callq  804d8ff <tcc_warning>
 807a2ed:	b8 00 00 00 00       	mov    $0x0,%eax
 807a2f2:	e8 d3 e3 fd ff       	callq  80586ca <next>
 807a2f7:	e9 e6 06 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a2fc:	e9 0c 00 00 00       	jmpq   807a30d <asm_parse_directive+0xbec>
 807a301:	81 f8 8f 01 00 00    	cmp    $0x18f,%eax
 807a307:	0f 85 f8 00 00 00    	jne    807a405 <asm_parse_directive+0xce4>
 807a30d:	b8 00 00 00 00       	mov    $0x0,%eax
 807a312:	88 85 20 fc ff ff    	mov    %al,-0x3e0(%rbp)
 807a318:	b8 00 00 00 00       	mov    $0x0,%eax
 807a31d:	e8 a8 e3 fd ff       	callq  80586ca <next>
 807a322:	48 8b 05 ff 3b 01 00 	mov    0x13bff(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a329:	8b 00                	mov    (%rax),%eax
 807a32b:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807a331:	0f 85 41 00 00 00    	jne    807a378 <asm_parse_directive+0xc57>
 807a337:	48 8b 05 6a 3c 01 00 	mov    0x13c6a(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807a33e:	48 8b 00             	mov    (%rax),%rax
 807a341:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807a348:	00 00 00 
 807a34b:	48 01 c8             	add    %rcx,%rax
 807a34e:	48 8b 08             	mov    (%rax),%rcx
 807a351:	49 89 ca             	mov    %rcx,%r10
 807a354:	b8 00 01 00 00       	mov    $0x100,%eax
 807a359:	48 89 c6             	mov    %rax,%rsi
 807a35c:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
 807a363:	48 89 c7             	mov    %rax,%rdi
 807a366:	4c 89 d2             	mov    %r10,%rdx
 807a369:	b8 00 00 00 00       	mov    $0x0,%eax
 807a36e:	e8 f8 19 fd ff       	callq  804bd6b <pstrcat>
 807a373:	e9 40 00 00 00       	jmpq   807a3b8 <asm_parse_directive+0xc97>
 807a378:	b8 00 00 00 00       	mov    $0x0,%eax
 807a37d:	48 89 c6             	mov    %rax,%rsi
 807a380:	48 8b 05 a1 3b 01 00 	mov    0x13ba1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a387:	8b 00                	mov    (%rax),%eax
 807a389:	48 89 c7             	mov    %rax,%rdi
 807a38c:	b8 00 00 00 00       	mov    $0x0,%eax
 807a391:	e8 1e 75 fd ff       	callq  80518b4 <get_tok_str>
 807a396:	49 89 c2             	mov    %rax,%r10
 807a399:	b8 00 01 00 00       	mov    $0x100,%eax
 807a39e:	48 89 c6             	mov    %rax,%rsi
 807a3a1:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
 807a3a8:	48 89 c7             	mov    %rax,%rdi
 807a3ab:	4c 89 d2             	mov    %r10,%rdx
 807a3ae:	b8 00 00 00 00       	mov    $0x0,%eax
 807a3b3:	e8 b3 19 fd ff       	callq  804bd6b <pstrcat>
 807a3b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a3bc:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 807a3c3:	00 00 00 
 807a3c6:	48 01 c8             	add    %rcx,%rax
 807a3c9:	8b 08                	mov    (%rax),%ecx
 807a3cb:	85 c9                	test   %ecx,%ecx
 807a3cd:	0f 84 1e 00 00 00    	je     807a3f1 <asm_parse_directive+0xcd0>
 807a3d3:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
 807a3da:	48 89 c6             	mov    %rax,%rsi
 807a3dd:	48 8d 05 2c 26 01 00 	lea    0x1262c(%rip),%rax        # 808ca10 <L.127>
 807a3e4:	48 89 c7             	mov    %rax,%rdi
 807a3e7:	b8 00 00 00 00       	mov    $0x0,%eax
 807a3ec:	e8 0e 35 fd ff       	callq  804d8ff <tcc_warning>
 807a3f1:	b8 00 00 00 00       	mov    $0x0,%eax
 807a3f6:	e8 cf e2 fd ff       	callq  80586ca <next>
 807a3fb:	e9 e2 05 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a400:	e9 0c 00 00 00       	jmpq   807a411 <asm_parse_directive+0xcf0>
 807a405:	81 f8 90 01 00 00    	cmp    $0x190,%eax
 807a40b:	0f 85 16 01 00 00    	jne    807a527 <asm_parse_directive+0xe06>
 807a411:	b8 00 00 00 00       	mov    $0x0,%eax
 807a416:	e8 af e2 fd ff       	callq  80586ca <next>
 807a41b:	48 8b 05 06 3b 01 00 	mov    0x13b06(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a422:	8b 00                	mov    (%rax),%eax
 807a424:	48 89 c7             	mov    %rax,%rdi
 807a427:	b8 00 00 00 00       	mov    $0x0,%eax
 807a42c:	e8 6a 9b fd ff       	callq  8053f9b <label_find>
 807a431:	48 89 85 18 fc ff ff 	mov    %rax,-0x3e8(%rbp)
 807a438:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
 807a43f:	85 c0                	test   %eax,%eax
 807a441:	0f 84 05 00 00 00    	je     807a44c <asm_parse_directive+0xd2b>
 807a447:	e9 35 00 00 00       	jmpq   807a481 <asm_parse_directive+0xd60>
 807a44c:	b8 00 00 00 00       	mov    $0x0,%eax
 807a451:	48 89 c6             	mov    %rax,%rsi
 807a454:	48 8b 05 cd 3a 01 00 	mov    0x13acd(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a45b:	8b 00                	mov    (%rax),%eax
 807a45d:	48 89 c7             	mov    %rax,%rdi
 807a460:	b8 00 00 00 00       	mov    $0x0,%eax
 807a465:	e8 4a 74 fd ff       	callq  80518b4 <get_tok_str>
 807a46a:	48 89 c6             	mov    %rax,%rsi
 807a46d:	48 8d 05 af 25 01 00 	lea    0x125af(%rip),%rax        # 808ca23 <L.128>
 807a474:	48 89 c7             	mov    %rax,%rdi
 807a477:	b8 00 00 00 00       	mov    $0x0,%eax
 807a47c:	e8 46 32 fd ff       	callq  804d6c7 <tcc_error>
 807a481:	b8 00 00 00 00       	mov    $0x0,%eax
 807a486:	e8 3f e2 fd ff       	callq  80586ca <next>
 807a48b:	b8 2c 00 00 00       	mov    $0x2c,%eax
 807a490:	48 89 c7             	mov    %rax,%rdi
 807a493:	b8 00 00 00 00       	mov    $0x0,%eax
 807a498:	e8 46 6c fd ff       	callq  80510e3 <skip>
 807a49d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a4a1:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 807a4a8:	00 00 00 
 807a4ab:	48 01 c8             	add    %rcx,%rax
 807a4ae:	8b 08                	mov    (%rax),%ecx
 807a4b0:	85 c9                	test   %ecx,%ecx
 807a4b2:	0f 84 35 00 00 00    	je     807a4ed <asm_parse_directive+0xdcc>
 807a4b8:	b8 00 00 00 00       	mov    $0x0,%eax
 807a4bd:	48 89 c6             	mov    %rax,%rsi
 807a4c0:	48 8b 05 61 3a 01 00 	mov    0x13a61(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a4c7:	8b 00                	mov    (%rax),%eax
 807a4c9:	48 89 c7             	mov    %rax,%rdi
 807a4cc:	b8 00 00 00 00       	mov    $0x0,%eax
 807a4d1:	e8 de 73 fd ff       	callq  80518b4 <get_tok_str>
 807a4d6:	48 89 c6             	mov    %rax,%rsi
 807a4d9:	48 8d 05 57 25 01 00 	lea    0x12557(%rip),%rax        # 808ca37 <L.129>
 807a4e0:	48 89 c7             	mov    %rax,%rdi
 807a4e3:	b8 00 00 00 00       	mov    $0x0,%eax
 807a4e8:	e8 12 34 fd ff       	callq  804d8ff <tcc_warning>
 807a4ed:	48 8b 05 34 3a 01 00 	mov    0x13a34(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a4f4:	8b 00                	mov    (%rax),%eax
 807a4f6:	83 f8 0a             	cmp    $0xa,%eax
 807a4f9:	0f 84 1e 00 00 00    	je     807a51d <asm_parse_directive+0xdfc>
 807a4ff:	48 8b 05 22 3a 01 00 	mov    0x13a22(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a506:	8b 00                	mov    (%rax),%eax
 807a508:	83 f8 ff             	cmp    $0xffffffff,%eax
 807a50b:	0f 84 0c 00 00 00    	je     807a51d <asm_parse_directive+0xdfc>
 807a511:	b8 00 00 00 00       	mov    $0x0,%eax
 807a516:	e8 af e1 fd ff       	callq  80586ca <next>
 807a51b:	eb d0                	jmp    807a4ed <asm_parse_directive+0xdcc>
 807a51d:	e9 c0 04 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a522:	e9 0c 00 00 00       	jmpq   807a533 <asm_parse_directive+0xe12>
 807a527:	81 f8 91 01 00 00    	cmp    $0x191,%eax
 807a52d:	0f 85 4b 02 00 00    	jne    807a77e <asm_parse_directive+0x105d>
 807a533:	b8 00 00 00 00       	mov    $0x0,%eax
 807a538:	e8 8d e1 fd ff       	callq  80586ca <next>
 807a53d:	48 8b 05 e4 39 01 00 	mov    0x139e4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a544:	8b 00                	mov    (%rax),%eax
 807a546:	48 89 c7             	mov    %rax,%rdi
 807a549:	b8 00 00 00 00       	mov    $0x0,%eax
 807a54e:	e8 48 9a fd ff       	callq  8053f9b <label_find>
 807a553:	48 89 85 10 fc ff ff 	mov    %rax,-0x3f0(%rbp)
 807a55a:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
 807a561:	85 c0                	test   %eax,%eax
 807a563:	0f 84 05 00 00 00    	je     807a56e <asm_parse_directive+0xe4d>
 807a569:	e9 57 00 00 00       	jmpq   807a5c5 <asm_parse_directive+0xea4>
 807a56e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a572:	48 b9 40 02 00 00 00 	movabs $0x240,%rcx
 807a579:	00 00 00 
 807a57c:	48 01 c8             	add    %rcx,%rax
 807a57f:	b9 00 00 00 00       	mov    $0x0,%ecx
 807a584:	49 89 ca             	mov    %rcx,%r10
 807a587:	48 8b 0d 9a 39 01 00 	mov    0x1399a(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a58e:	8b 09                	mov    (%rcx),%ecx
 807a590:	48 89 ce             	mov    %rcx,%rsi
 807a593:	48 89 c7             	mov    %rax,%rdi
 807a596:	4c 89 d2             	mov    %r10,%rdx
 807a599:	b8 00 00 00 00       	mov    $0x0,%eax
 807a59e:	e8 6f 9a fd ff       	callq  8054012 <label_push>
 807a5a3:	48 89 85 10 fc ff ff 	mov    %rax,-0x3f0(%rbp)
 807a5aa:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
 807a5b1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807a5b8:	00 00 00 
 807a5bb:	48 01 c8             	add    %rcx,%rax
 807a5be:	b9 03 00 00 00       	mov    $0x3,%ecx
 807a5c3:	89 08                	mov    %ecx,(%rax)
 807a5c5:	b8 00 00 00 00       	mov    $0x0,%eax
 807a5ca:	e8 fb e0 fd ff       	callq  80586ca <next>
 807a5cf:	b8 2c 00 00 00       	mov    $0x2c,%eax
 807a5d4:	48 89 c7             	mov    %rax,%rdi
 807a5d7:	b8 00 00 00 00       	mov    $0x0,%eax
 807a5dc:	e8 02 6b fd ff       	callq  80510e3 <skip>
 807a5e1:	48 8b 05 40 39 01 00 	mov    0x13940(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a5e8:	8b 00                	mov    (%rax),%eax
 807a5ea:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807a5f0:	0f 85 26 00 00 00    	jne    807a61c <asm_parse_directive+0xefb>
 807a5f6:	48 8b 05 ab 39 01 00 	mov    0x139ab(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807a5fd:	48 8b 00             	mov    (%rax),%rax
 807a600:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807a607:	00 00 00 
 807a60a:	48 01 c8             	add    %rcx,%rax
 807a60d:	48 8b 08             	mov    (%rax),%rcx
 807a610:	48 89 8d 08 fc ff ff 	mov    %rcx,-0x3f8(%rbp)
 807a617:	e9 64 00 00 00       	jmpq   807a680 <asm_parse_directive+0xf5f>
 807a61c:	48 8b 05 05 39 01 00 	mov    0x13905(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a623:	8b 00                	mov    (%rax),%eax
 807a625:	83 f8 40             	cmp    $0x40,%eax
 807a628:	0f 84 17 00 00 00    	je     807a645 <asm_parse_directive+0xf24>
 807a62e:	48 8b 05 f3 38 01 00 	mov    0x138f3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a635:	8b 00                	mov    (%rax),%eax
 807a637:	83 f8 25             	cmp    $0x25,%eax
 807a63a:	0f 84 05 00 00 00    	je     807a645 <asm_parse_directive+0xf24>
 807a640:	e9 16 00 00 00       	jmpq   807a65b <asm_parse_directive+0xf3a>
 807a645:	48 8b 05 dc 38 01 00 	mov    0x138dc(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a64c:	8b 00                	mov    (%rax),%eax
 807a64e:	48 89 c7             	mov    %rax,%rdi
 807a651:	b8 00 00 00 00       	mov    $0x0,%eax
 807a656:	e8 88 6a fd ff       	callq  80510e3 <skip>
 807a65b:	b8 00 00 00 00       	mov    $0x0,%eax
 807a660:	48 89 c6             	mov    %rax,%rsi
 807a663:	48 8b 05 be 38 01 00 	mov    0x138be(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a66a:	8b 00                	mov    (%rax),%eax
 807a66c:	48 89 c7             	mov    %rax,%rdi
 807a66f:	b8 00 00 00 00       	mov    $0x0,%eax
 807a674:	e8 3b 72 fd ff       	callq  80518b4 <get_tok_str>
 807a679:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
 807a680:	48 8d 05 c4 23 01 00 	lea    0x123c4(%rip),%rax        # 808ca4b <L.130>
 807a687:	48 89 c6             	mov    %rax,%rsi
 807a68a:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
 807a691:	48 89 c7             	mov    %rax,%rdi
 807a694:	b8 00 00 00 00       	mov    $0x0,%eax
 807a699:	e8 42 cb 00 00       	callq  80871e0 <strcmp>
 807a69e:	85 c0                	test   %eax,%eax
 807a6a0:	0f 84 2b 00 00 00    	je     807a6d1 <asm_parse_directive+0xfb0>
 807a6a6:	48 8d 05 a7 23 01 00 	lea    0x123a7(%rip),%rax        # 808ca54 <L.131>
 807a6ad:	48 89 c6             	mov    %rax,%rsi
 807a6b0:	48 8b 85 08 fc ff ff 	mov    -0x3f8(%rbp),%rax
 807a6b7:	48 89 c7             	mov    %rax,%rdi
 807a6ba:	b8 00 00 00 00       	mov    $0x0,%eax
 807a6bf:	e8 1c cb 00 00       	callq  80871e0 <strcmp>
 807a6c4:	85 c0                	test   %eax,%eax
 807a6c6:	0f 84 05 00 00 00    	je     807a6d1 <asm_parse_directive+0xfb0>
 807a6cc:	e9 20 00 00 00       	jmpq   807a6f1 <asm_parse_directive+0xfd0>
 807a6d1:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
 807a6d8:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807a6df:	00 00 00 
 807a6e2:	48 01 c8             	add    %rcx,%rax
 807a6e5:	b9 06 00 00 00       	mov    $0x6,%ecx
 807a6ea:	89 08                	mov    %ecx,(%rax)
 807a6ec:	e9 79 00 00 00       	jmpq   807a76a <asm_parse_directive+0x1049>
 807a6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a6f5:	48 b9 38 01 00 00 00 	movabs $0x138,%rcx
 807a6fc:	00 00 00 
 807a6ff:	48 01 c8             	add    %rcx,%rax
 807a702:	8b 08                	mov    (%rax),%ecx
 807a704:	85 c9                	test   %ecx,%ecx
 807a706:	0f 84 5e 00 00 00    	je     807a76a <asm_parse_directive+0x1049>
 807a70c:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
 807a713:	b9 00 00 00 00       	mov    $0x0,%ecx
 807a718:	48 89 ce             	mov    %rcx,%rsi
 807a71b:	8b 08                	mov    (%rax),%ecx
 807a71d:	48 89 cf             	mov    %rcx,%rdi
 807a720:	b8 00 00 00 00       	mov    $0x0,%eax
 807a725:	e8 8a 71 fd ff       	callq  80518b4 <get_tok_str>
 807a72a:	48 8b 8d 10 fc ff ff 	mov    -0x3f0(%rbp),%rcx
 807a731:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 807a738:	00 00 00 
 807a73b:	48 01 d1             	add    %rdx,%rcx
 807a73e:	48 8b 95 08 fc ff ff 	mov    -0x3f8(%rbp),%rdx
 807a745:	49 89 d3             	mov    %rdx,%r11
 807a748:	8b 11                	mov    (%rcx),%edx
 807a74a:	49 89 d2             	mov    %rdx,%r10
 807a74d:	48 89 c6             	mov    %rax,%rsi
 807a750:	48 8d 05 06 23 01 00 	lea    0x12306(%rip),%rax        # 808ca5d <L.132>
 807a757:	48 89 c7             	mov    %rax,%rdi
 807a75a:	4c 89 d2             	mov    %r10,%rdx
 807a75d:	4c 89 d9             	mov    %r11,%rcx
 807a760:	b8 00 00 00 00       	mov    $0x0,%eax
 807a765:	e8 95 31 fd ff       	callq  804d8ff <tcc_warning>
 807a76a:	b8 00 00 00 00       	mov    $0x0,%eax
 807a76f:	e8 56 df fd ff       	callq  80586ca <next>
 807a774:	e9 69 02 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a779:	e9 0c 00 00 00       	jmpq   807a78a <asm_parse_directive+0x1069>
 807a77e:	81 f8 50 01 00 00    	cmp    $0x150,%eax
 807a784:	0f 85 78 01 00 00    	jne    807a902 <asm_parse_directive+0x11e1>
 807a78a:	b8 00 00 00 00       	mov    $0x0,%eax
 807a78f:	e8 36 df fd ff       	callq  80586ca <next>
 807a794:	b8 00 00 00 00       	mov    $0x0,%eax
 807a799:	88 85 08 fb ff ff    	mov    %al,-0x4f8(%rbp)
 807a79f:	48 8b 05 82 37 01 00 	mov    0x13782(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a7a6:	8b 00                	mov    (%rax),%eax
 807a7a8:	83 f8 3b             	cmp    $0x3b,%eax
 807a7ab:	0f 84 c9 00 00 00    	je     807a87a <asm_parse_directive+0x1159>
 807a7b1:	48 8b 05 70 37 01 00 	mov    0x13770(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a7b8:	8b 00                	mov    (%rax),%eax
 807a7ba:	83 f8 0a             	cmp    $0xa,%eax
 807a7bd:	0f 84 b7 00 00 00    	je     807a87a <asm_parse_directive+0x1159>
 807a7c3:	48 8b 05 5e 37 01 00 	mov    0x1375e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a7ca:	8b 00                	mov    (%rax),%eax
 807a7cc:	83 f8 2c             	cmp    $0x2c,%eax
 807a7cf:	0f 84 a5 00 00 00    	je     807a87a <asm_parse_directive+0x1159>
 807a7d5:	48 8b 05 4c 37 01 00 	mov    0x1374c(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a7dc:	8b 00                	mov    (%rax),%eax
 807a7de:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807a7e4:	0f 85 41 00 00 00    	jne    807a82b <asm_parse_directive+0x110a>
 807a7ea:	48 8b 05 b7 37 01 00 	mov    0x137b7(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807a7f1:	48 8b 00             	mov    (%rax),%rax
 807a7f4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807a7fb:	00 00 00 
 807a7fe:	48 01 c8             	add    %rcx,%rax
 807a801:	48 8b 08             	mov    (%rax),%rcx
 807a804:	49 89 ca             	mov    %rcx,%r10
 807a807:	b8 00 01 00 00       	mov    $0x100,%eax
 807a80c:	48 89 c6             	mov    %rax,%rsi
 807a80f:	48 8d 85 08 fb ff ff 	lea    -0x4f8(%rbp),%rax
 807a816:	48 89 c7             	mov    %rax,%rdi
 807a819:	4c 89 d2             	mov    %r10,%rdx
 807a81c:	b8 00 00 00 00       	mov    $0x0,%eax
 807a821:	e8 45 15 fd ff       	callq  804bd6b <pstrcat>
 807a826:	e9 40 00 00 00       	jmpq   807a86b <asm_parse_directive+0x114a>
 807a82b:	b8 00 00 00 00       	mov    $0x0,%eax
 807a830:	48 89 c6             	mov    %rax,%rsi
 807a833:	48 8b 05 ee 36 01 00 	mov    0x136ee(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a83a:	8b 00                	mov    (%rax),%eax
 807a83c:	48 89 c7             	mov    %rax,%rdi
 807a83f:	b8 00 00 00 00       	mov    $0x0,%eax
 807a844:	e8 6b 70 fd ff       	callq  80518b4 <get_tok_str>
 807a849:	49 89 c2             	mov    %rax,%r10
 807a84c:	b8 00 01 00 00       	mov    $0x100,%eax
 807a851:	48 89 c6             	mov    %rax,%rsi
 807a854:	48 8d 85 08 fb ff ff 	lea    -0x4f8(%rbp),%rax
 807a85b:	48 89 c7             	mov    %rax,%rdi
 807a85e:	4c 89 d2             	mov    %r10,%rdx
 807a861:	b8 00 00 00 00       	mov    $0x0,%eax
 807a866:	e8 00 15 fd ff       	callq  804bd6b <pstrcat>
 807a86b:	b8 00 00 00 00       	mov    $0x0,%eax
 807a870:	e8 55 de fd ff       	callq  80586ca <next>
 807a875:	e9 25 ff ff ff       	jmpq   807a79f <asm_parse_directive+0x107e>
 807a87a:	48 8b 05 a7 36 01 00 	mov    0x136a7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a881:	8b 00                	mov    (%rax),%eax
 807a883:	83 f8 2c             	cmp    $0x2c,%eax
 807a886:	0f 85 3d 00 00 00    	jne    807a8c9 <asm_parse_directive+0x11a8>
 807a88c:	b8 00 00 00 00       	mov    $0x0,%eax
 807a891:	e8 34 de fd ff       	callq  80586ca <next>
 807a896:	48 8b 05 8b 36 01 00 	mov    0x1368b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a89d:	8b 00                	mov    (%rax),%eax
 807a89f:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807a8a5:	0f 84 14 00 00 00    	je     807a8bf <asm_parse_directive+0x119e>
 807a8ab:	48 8d 05 d9 21 01 00 	lea    0x121d9(%rip),%rax        # 808ca8b <L.133>
 807a8b2:	48 89 c7             	mov    %rax,%rdi
 807a8b5:	b8 00 00 00 00       	mov    $0x0,%eax
 807a8ba:	e8 93 68 fd ff       	callq  8051152 <expect>
 807a8bf:	b8 00 00 00 00       	mov    $0x0,%eax
 807a8c4:	e8 01 de fd ff       	callq  80586ca <next>
 807a8c9:	48 8b 05 e8 35 01 00 	mov    0x135e8(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807a8d0:	48 8b 00             	mov    (%rax),%rax
 807a8d3:	4c 8b 1d 8e 37 01 00 	mov    0x1378e(%rip),%r11        # 808e068 <_GLOBAL_OFFSET_TABLE_+0x3e8>
 807a8da:	49 89 03             	mov    %rax,(%r11)
 807a8dd:	48 8d 85 08 fb ff ff 	lea    -0x4f8(%rbp),%rax
 807a8e4:	48 89 c6             	mov    %rax,%rsi
 807a8e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a8eb:	48 89 c7             	mov    %rax,%rdi
 807a8ee:	b8 00 00 00 00       	mov    $0x0,%eax
 807a8f3:	e8 e0 ed ff ff       	callq  80796d8 <use_section>
 807a8f8:	e9 e5 00 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a8fd:	e9 0c 00 00 00       	jmpq   807a90e <asm_parse_directive+0x11ed>
 807a902:	81 f8 95 01 00 00    	cmp    $0x195,%eax
 807a908:	0f 85 7f 00 00 00    	jne    807a98d <asm_parse_directive+0x126c>
 807a90e:	b8 00 00 00 00       	mov    $0x0,%eax
 807a913:	e8 b2 dd fd ff       	callq  80586ca <next>
 807a918:	48 8b 05 49 37 01 00 	mov    0x13749(%rip),%rax        # 808e068 <_GLOBAL_OFFSET_TABLE_+0x3e8>
 807a91f:	48 8b 00             	mov    (%rax),%rax
 807a922:	85 c0                	test   %eax,%eax
 807a924:	0f 84 05 00 00 00    	je     807a92f <asm_parse_directive+0x120e>
 807a92a:	e9 14 00 00 00       	jmpq   807a943 <asm_parse_directive+0x1222>
 807a92f:	48 8d 05 65 21 01 00 	lea    0x12165(%rip),%rax        # 808ca9b <L.134>
 807a936:	48 89 c7             	mov    %rax,%rdi
 807a939:	b8 00 00 00 00       	mov    $0x0,%eax
 807a93e:	e8 84 2d fd ff       	callq  804d6c7 <tcc_error>
 807a943:	48 8b 05 6e 35 01 00 	mov    0x1356e(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807a94a:	48 8b 00             	mov    (%rax),%rax
 807a94d:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
 807a954:	48 8b 05 0d 37 01 00 	mov    0x1370d(%rip),%rax        # 808e068 <_GLOBAL_OFFSET_TABLE_+0x3e8>
 807a95b:	48 8b 00             	mov    (%rax),%rax
 807a95e:	48 89 c6             	mov    %rax,%rsi
 807a961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807a965:	48 89 c7             	mov    %rax,%rdi
 807a968:	b8 00 00 00 00       	mov    $0x0,%eax
 807a96d:	e8 11 ed ff ff       	callq  8079683 <use_section1>
 807a972:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
 807a979:	4c 8b 1d e8 36 01 00 	mov    0x136e8(%rip),%r11        # 808e068 <_GLOBAL_OFFSET_TABLE_+0x3e8>
 807a980:	49 89 03             	mov    %rax,(%r11)
 807a983:	e9 5a 00 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a988:	e9 0c 00 00 00       	jmpq   807a999 <asm_parse_directive+0x1278>
 807a98d:	81 f8 99 01 00 00    	cmp    $0x199,%eax
 807a993:	0f 85 0f 00 00 00    	jne    807a9a8 <asm_parse_directive+0x1287>
 807a999:	b8 00 00 00 00       	mov    $0x0,%eax
 807a99e:	e8 27 dd fd ff       	callq  80586ca <next>
 807a9a3:	e9 3a 00 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a9a8:	b8 00 00 00 00       	mov    $0x0,%eax
 807a9ad:	48 89 c6             	mov    %rax,%rsi
 807a9b0:	48 8b 05 71 35 01 00 	mov    0x13571(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807a9b7:	8b 00                	mov    (%rax),%eax
 807a9b9:	48 89 c7             	mov    %rax,%rdi
 807a9bc:	b8 00 00 00 00       	mov    $0x0,%eax
 807a9c1:	e8 ee 6e fd ff       	callq  80518b4 <get_tok_str>
 807a9c6:	48 89 c6             	mov    %rax,%rsi
 807a9c9:	48 8d 05 ea 20 01 00 	lea    0x120ea(%rip),%rax        # 808caba <L.135>
 807a9d0:	48 89 c7             	mov    %rax,%rdi
 807a9d3:	b8 00 00 00 00       	mov    $0x0,%eax
 807a9d8:	e8 ea 2c fd ff       	callq  804d6c7 <tcc_error>
 807a9dd:	e9 00 00 00 00       	jmpq   807a9e2 <asm_parse_directive+0x12c1>
 807a9e2:	c9                   	leaveq 
 807a9e3:	c3                   	retq   

000000000807a9e4 <tcc_assemble_internal>:
 807a9e4:	55                   	push   %rbp
 807a9e5:	48 89 e5             	mov    %rsp,%rbp
 807a9e8:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807a9ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807a9f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807a9f7:	48 8b 05 a2 34 01 00 	mov    0x134a2(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 807a9fe:	48 8b 00             	mov    (%rax),%rax
 807aa01:	48 8b 08             	mov    (%rax),%rcx
 807aa04:	0f b6 01             	movzbl (%rcx),%eax
 807aa07:	4c 8b 1d fa 34 01 00 	mov    0x134fa(%rip),%r11        # 808df08 <_GLOBAL_OFFSET_TABLE_+0x288>
 807aa0e:	41 89 03             	mov    %eax,(%r11)
 807aa11:	b8 03 00 00 00       	mov    $0x3,%eax
 807aa16:	4c 8b 1d f3 34 01 00 	mov    0x134f3(%rip),%r11        # 808df10 <_GLOBAL_OFFSET_TABLE_+0x290>
 807aa1d:	41 89 03             	mov    %eax,(%r11)
 807aa20:	b8 08 00 00 00       	mov    $0x8,%eax
 807aa25:	4c 8b 1d ec 34 01 00 	mov    0x134ec(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807aa2c:	41 89 03             	mov    %eax,(%r11)
 807aa2f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807aa32:	85 c0                	test   %eax,%eax
 807aa34:	0f 84 16 00 00 00    	je     807aa50 <tcc_assemble_internal+0x6c>
 807aa3a:	48 8b 05 d7 34 01 00 	mov    0x134d7(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807aa41:	8b 00                	mov    (%rax),%eax
 807aa43:	83 c8 01             	or     $0x1,%eax
 807aa46:	4c 8b 1d cb 34 01 00 	mov    0x134cb(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807aa4d:	41 89 03             	mov    %eax,(%r11)
 807aa50:	b8 00 00 00 00       	mov    $0x0,%eax
 807aa55:	e8 70 dc fd ff       	callq  80586ca <next>
 807aa5a:	48 8b 05 c7 34 01 00 	mov    0x134c7(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807aa61:	8b 00                	mov    (%rax),%eax
 807aa63:	83 f8 ff             	cmp    $0xffffffff,%eax
 807aa66:	0f 85 05 00 00 00    	jne    807aa71 <tcc_assemble_internal+0x8d>
 807aa6c:	e9 a0 02 00 00       	jmpq   807ad11 <tcc_assemble_internal+0x32d>
 807aa71:	48 8b 05 a0 34 01 00 	mov    0x134a0(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807aa78:	8b 00                	mov    (%rax),%eax
 807aa7a:	83 c8 04             	or     $0x4,%eax
 807aa7d:	4c 8b 1d 94 34 01 00 	mov    0x13494(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807aa84:	41 89 03             	mov    %eax,(%r11)
 807aa87:	48 8b 05 9a 34 01 00 	mov    0x1349a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807aa8e:	8b 00                	mov    (%rax),%eax
 807aa90:	83 f8 23             	cmp    $0x23,%eax
 807aa93:	0f 85 23 00 00 00    	jne    807aabc <tcc_assemble_internal+0xd8>
 807aa99:	48 8b 05 88 34 01 00 	mov    0x13488(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807aaa0:	8b 00                	mov    (%rax),%eax
 807aaa2:	83 f8 0a             	cmp    $0xa,%eax
 807aaa5:	0f 84 0c 00 00 00    	je     807aab7 <tcc_assemble_internal+0xd3>
 807aaab:	b8 00 00 00 00       	mov    $0x0,%eax
 807aab0:	e8 15 dc fd ff       	callq  80586ca <next>
 807aab5:	eb e2                	jmp    807aa99 <tcc_assemble_internal+0xb5>
 807aab7:	e9 f8 01 00 00       	jmpq   807acb4 <tcc_assemble_internal+0x2d0>
 807aabc:	48 8b 05 65 34 01 00 	mov    0x13465(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807aac3:	8b 00                	mov    (%rax),%eax
 807aac5:	83 f8 2e             	cmp    $0x2e,%eax
 807aac8:	0f 85 16 00 00 00    	jne    807aae4 <tcc_assemble_internal+0x100>
 807aace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807aad2:	48 89 c7             	mov    %rax,%rdi
 807aad5:	b8 00 00 00 00       	mov    $0x0,%eax
 807aada:	e8 42 ec ff ff       	callq  8079721 <asm_parse_directive>
 807aadf:	e9 d0 01 00 00       	jmpq   807acb4 <tcc_assemble_internal+0x2d0>
 807aae4:	48 8b 05 3d 34 01 00 	mov    0x1343d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807aaeb:	8b 00                	mov    (%rax),%eax
 807aaed:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 807aaf3:	0f 85 c4 00 00 00    	jne    807abbd <tcc_assemble_internal+0x1d9>
 807aaf9:	48 8b 05 a8 34 01 00 	mov    0x134a8(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807ab00:	48 8b 00             	mov    (%rax),%rax
 807ab03:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807ab0a:	00 00 00 
 807ab0d:	48 01 c8             	add    %rcx,%rax
 807ab10:	48 8b 08             	mov    (%rax),%rcx
 807ab13:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807ab17:	b8 0a 00 00 00       	mov    $0xa,%eax
 807ab1c:	49 89 c2             	mov    %rax,%r10
 807ab1f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807ab23:	48 89 c6             	mov    %rax,%rsi
 807ab26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807ab2a:	48 89 c7             	mov    %rax,%rdi
 807ab2d:	4c 89 d2             	mov    %r10,%rdx
 807ab30:	b8 00 00 00 00       	mov    $0x0,%eax
 807ab35:	e8 26 d1 00 00       	callq  8087c60 <__preinit_array_end+0x1c0>
 807ab3a:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807ab3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807ab41:	0f be 08             	movsbl (%rax),%ecx
 807ab44:	83 f9 00             	cmp    $0x0,%ecx
 807ab47:	0f 84 14 00 00 00    	je     807ab61 <tcc_assemble_internal+0x17d>
 807ab4d:	48 8d 05 88 1f 01 00 	lea    0x11f88(%rip),%rax        # 808cadc <L.136>
 807ab54:	48 89 c7             	mov    %rax,%rdi
 807ab57:	b8 00 00 00 00       	mov    $0x0,%eax
 807ab5c:	e8 f1 65 fd ff       	callq  8051152 <expect>
 807ab61:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807ab64:	48 89 c6             	mov    %rax,%rsi
 807ab67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ab6b:	48 89 c7             	mov    %rax,%rdi
 807ab6e:	b8 00 00 00 00       	mov    $0x0,%eax
 807ab73:	e8 2b de ff ff       	callq  80789a3 <asm_get_local_label_name>
 807ab78:	b9 01 00 00 00       	mov    $0x1,%ecx
 807ab7d:	49 89 ca             	mov    %rcx,%r10
 807ab80:	48 89 c6             	mov    %rax,%rsi
 807ab83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ab87:	48 89 c7             	mov    %rax,%rdi
 807ab8a:	4c 89 d2             	mov    %r10,%rdx
 807ab8d:	b8 00 00 00 00       	mov    $0x0,%eax
 807ab92:	e8 c8 e8 ff ff       	callq  807945f <asm_new_label>
 807ab97:	b8 00 00 00 00       	mov    $0x0,%eax
 807ab9c:	e8 29 db fd ff       	callq  80586ca <next>
 807aba1:	b8 3a 00 00 00       	mov    $0x3a,%eax
 807aba6:	48 89 c7             	mov    %rax,%rdi
 807aba9:	b8 00 00 00 00       	mov    $0x0,%eax
 807abae:	e8 30 65 fd ff       	callq  80510e3 <skip>
 807abb3:	e9 cf fe ff ff       	jmpq   807aa87 <tcc_assemble_internal+0xa3>
 807abb8:	e9 f7 00 00 00       	jmpq   807acb4 <tcc_assemble_internal+0x2d0>
 807abbd:	48 8b 05 64 33 01 00 	mov    0x13364(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807abc4:	8b 00                	mov    (%rax),%eax
 807abc6:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 807abcc:	0f 8c e2 00 00 00    	jl     807acb4 <tcc_assemble_internal+0x2d0>
 807abd2:	48 8b 05 4f 33 01 00 	mov    0x1334f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807abd9:	8b 00                	mov    (%rax),%eax
 807abdb:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807abde:	b8 00 00 00 00       	mov    $0x0,%eax
 807abe3:	e8 e2 da fd ff       	callq  80586ca <next>
 807abe8:	48 8b 05 39 33 01 00 	mov    0x13339(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807abef:	8b 00                	mov    (%rax),%eax
 807abf1:	83 f8 3a             	cmp    $0x3a,%eax
 807abf4:	0f 85 36 00 00 00    	jne    807ac30 <tcc_assemble_internal+0x24c>
 807abfa:	b8 00 00 00 00       	mov    $0x0,%eax
 807abff:	49 89 c2             	mov    %rax,%r10
 807ac02:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ac05:	48 89 c6             	mov    %rax,%rsi
 807ac08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ac0c:	48 89 c7             	mov    %rax,%rdi
 807ac0f:	4c 89 d2             	mov    %r10,%rdx
 807ac12:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac17:	e8 43 e8 ff ff       	callq  807945f <asm_new_label>
 807ac1c:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac21:	e8 a4 da fd ff       	callq  80586ca <next>
 807ac26:	e9 5c fe ff ff       	jmpq   807aa87 <tcc_assemble_internal+0xa3>
 807ac2b:	e9 84 00 00 00       	jmpq   807acb4 <tcc_assemble_internal+0x2d0>
 807ac30:	48 8b 05 f1 32 01 00 	mov    0x132f1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807ac37:	8b 00                	mov    (%rax),%eax
 807ac39:	83 f8 3d             	cmp    $0x3d,%eax
 807ac3c:	0f 85 5b 00 00 00    	jne    807ac9d <tcc_assemble_internal+0x2b9>
 807ac42:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac47:	e8 7e da fd ff       	callq  80586ca <next>
 807ac4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ac50:	48 89 c7             	mov    %rax,%rdi
 807ac53:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac58:	e8 6c e6 ff ff       	callq  80792c9 <asm_int_expr>
 807ac5d:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807ac60:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807ac63:	49 89 c0             	mov    %rax,%r8
 807ac66:	b8 f1 ff 00 00       	mov    $0xfff1,%eax
 807ac6b:	49 89 c3             	mov    %rax,%r11
 807ac6e:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac73:	49 89 c2             	mov    %rax,%r10
 807ac76:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ac79:	48 89 c6             	mov    %rax,%rsi
 807ac7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ac80:	48 89 c7             	mov    %rax,%rdi
 807ac83:	4c 89 d2             	mov    %r10,%rdx
 807ac86:	4c 89 d9             	mov    %r11,%rcx
 807ac89:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac8e:	e8 87 e6 ff ff       	callq  807931a <asm_new_label1>
 807ac93:	e9 ef fd ff ff       	jmpq   807aa87 <tcc_assemble_internal+0xa3>
 807ac98:	e9 17 00 00 00       	jmpq   807acb4 <tcc_assemble_internal+0x2d0>
 807ac9d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807aca0:	48 89 c6             	mov    %rax,%rsi
 807aca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807aca7:	48 89 c7             	mov    %rax,%rdi
 807acaa:	b8 00 00 00 00       	mov    $0x0,%eax
 807acaf:	e8 ad 88 00 00       	callq  8083561 <asm_opcode>
 807acb4:	48 8b 05 6d 32 01 00 	mov    0x1326d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807acbb:	8b 00                	mov    (%rax),%eax
 807acbd:	83 f8 3b             	cmp    $0x3b,%eax
 807acc0:	0f 84 26 00 00 00    	je     807acec <tcc_assemble_internal+0x308>
 807acc6:	48 8b 05 5b 32 01 00 	mov    0x1325b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807accd:	8b 00                	mov    (%rax),%eax
 807accf:	83 f8 0a             	cmp    $0xa,%eax
 807acd2:	0f 84 14 00 00 00    	je     807acec <tcc_assemble_internal+0x308>
 807acd8:	48 8d 05 01 1e 01 00 	lea    0x11e01(%rip),%rax        # 808cae0 <L.137>
 807acdf:	48 89 c7             	mov    %rax,%rdi
 807ace2:	b8 00 00 00 00       	mov    $0x0,%eax
 807ace7:	e8 66 64 fd ff       	callq  8051152 <expect>
 807acec:	48 8b 05 25 32 01 00 	mov    0x13225(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807acf3:	8b 00                	mov    (%rax),%eax
 807acf5:	83 e0 fb             	and    $0xfffffffb,%eax
 807acf8:	4c 8b 1d 19 32 01 00 	mov    0x13219(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807acff:	41 89 03             	mov    %eax,(%r11)
 807ad02:	b8 00 00 00 00       	mov    $0x0,%eax
 807ad07:	e8 be d9 fd ff       	callq  80586ca <next>
 807ad0c:	e9 49 fd ff ff       	jmpq   807aa5a <tcc_assemble_internal+0x76>
 807ad11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ad15:	48 89 c7             	mov    %rax,%rdi
 807ad18:	b8 00 00 00 00       	mov    $0x0,%eax
 807ad1d:	e8 a1 e7 ff ff       	callq  80794c3 <asm_free_labels>
 807ad22:	b8 00 00 00 00       	mov    $0x0,%eax
 807ad27:	e9 00 00 00 00       	jmpq   807ad2c <tcc_assemble_internal+0x348>
 807ad2c:	c9                   	leaveq 
 807ad2d:	c3                   	retq   

000000000807ad2e <tcc_assemble>:
 807ad2e:	55                   	push   %rbp
 807ad2f:	48 89 e5             	mov    %rsp,%rbp
 807ad32:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807ad39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807ad3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807ad41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ad45:	48 89 c7             	mov    %rax,%rdi
 807ad48:	b8 00 00 00 00       	mov    $0x0,%eax
 807ad4d:	e8 ba dc fd ff       	callq  8058a0c <preprocess_init>
 807ad52:	48 8b 05 77 31 01 00 	mov    0x13177(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 807ad59:	48 8b 00             	mov    (%rax),%rax
 807ad5c:	4c 8b 1d 55 31 01 00 	mov    0x13155(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807ad63:	49 89 03             	mov    %rax,(%r11)
 807ad66:	48 8b 05 4b 31 01 00 	mov    0x1314b(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807ad6d:	48 8b 00             	mov    (%rax),%rax
 807ad70:	8b 08                	mov    (%rax),%ecx
 807ad72:	4c 8b 1d b7 32 01 00 	mov    0x132b7(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807ad79:	41 89 0b             	mov    %ecx,(%r11)
 807ad7c:	48 8b 05 75 31 01 00 	mov    0x13175(%rip),%rax        # 808def8 <_GLOBAL_OFFSET_TABLE_+0x278>
 807ad83:	48 8b 00             	mov    (%rax),%rax
 807ad86:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807ad8a:	48 8b 05 0f 31 01 00 	mov    0x1310f(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 807ad91:	48 8b 00             	mov    (%rax),%rax
 807ad94:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 807ad9b:	00 00 00 
 807ad9e:	48 01 c8             	add    %rcx,%rax
 807ada1:	50                   	push   %rax
 807ada2:	50                   	push   %rax
 807ada3:	b8 f1 ff 00 00       	mov    $0xfff1,%eax
 807ada8:	49 89 c1             	mov    %rax,%r9
 807adab:	b8 00 00 00 00       	mov    $0x0,%eax
 807adb0:	49 89 c0             	mov    %rax,%r8
 807adb3:	b8 04 00 00 00       	mov    $0x4,%eax
 807adb8:	49 89 c3             	mov    %rax,%r11
 807adbb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807adc2:	00 00 00 
 807adc5:	49 89 c2             	mov    %rax,%r10
 807adc8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807adcf:	00 00 00 
 807add2:	48 89 c6             	mov    %rax,%rsi
 807add5:	48 8b 05 bc 30 01 00 	mov    0x130bc(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807addc:	48 8b 00             	mov    (%rax),%rax
 807addf:	48 89 c7             	mov    %rax,%rdi
 807ade2:	4c 89 d2             	mov    %r10,%rdx
 807ade5:	4c 89 d9             	mov    %r11,%rcx
 807ade8:	b8 00 00 00 00       	mov    $0x0,%eax
 807aded:	e8 3b 2e ff ff       	callq  806dc2d <put_elf_sym>
 807adf2:	48 83 c4 10          	add    $0x10,%rsp
 807adf6:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807adf9:	48 89 c6             	mov    %rax,%rsi
 807adfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ae00:	48 89 c7             	mov    %rax,%rdi
 807ae03:	b8 00 00 00 00       	mov    $0x0,%eax
 807ae08:	e8 d7 fb ff ff       	callq  807a9e4 <tcc_assemble_internal>
 807ae0d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807ae10:	48 8b 05 a1 30 01 00 	mov    0x130a1(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807ae17:	48 8b 00             	mov    (%rax),%rax
 807ae1a:	48 8b 0d 0f 32 01 00 	mov    0x1320f(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807ae21:	8b 09                	mov    (%rcx),%ecx
 807ae23:	48 63 c9             	movslq %ecx,%rcx
 807ae26:	48 89 ca             	mov    %rcx,%rdx
 807ae29:	48 89 10             	mov    %rdx,(%rax)
 807ae2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807ae30:	48 89 c7             	mov    %rax,%rdi
 807ae33:	b8 00 00 00 00       	mov    $0x0,%eax
 807ae38:	e8 40 90 fd ff       	callq  8053e7d <free_defines>
 807ae3d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807ae40:	e9 00 00 00 00       	jmpq   807ae45 <tcc_assemble+0x117>
 807ae45:	c9                   	leaveq 
 807ae46:	c3                   	retq   

000000000807ae47 <tcc_assemble_inline>:
 807ae47:	55                   	push   %rbp
 807ae48:	48 89 e5             	mov    %rsp,%rbp
 807ae4b:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807ae52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807ae56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807ae5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807ae5e:	48 8b 05 b3 30 01 00 	mov    0x130b3(%rip),%rax        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807ae65:	8b 00                	mov    (%rax),%eax
 807ae67:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807ae6a:	48 8b 05 ff 30 01 00 	mov    0x130ff(%rip),%rax        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 807ae71:	48 8b 00             	mov    (%rax),%rax
 807ae74:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 807ae78:	48 8b 05 21 30 01 00 	mov    0x13021(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 807ae7f:	48 8b 00             	mov    (%rax),%rax
 807ae82:	48 b9 39 02 00 00 00 	movabs $0x239,%rcx
 807ae89:	00 00 00 
 807ae8c:	48 01 c8             	add    %rcx,%rax
 807ae8f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807ae92:	49 89 ca             	mov    %rcx,%r10
 807ae95:	48 89 c6             	mov    %rax,%rsi
 807ae98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ae9c:	48 89 c7             	mov    %rax,%rdi
 807ae9f:	4c 89 d2             	mov    %r10,%rdx
 807aea2:	b8 00 00 00 00       	mov    $0x0,%eax
 807aea7:	e8 50 2c fd ff       	callq  804dafc <tcc_open_bf>
 807aeac:	48 8b 05 ed 2f 01 00 	mov    0x12fed(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 807aeb3:	48 8b 00             	mov    (%rax),%rax
 807aeb6:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807aebd:	00 00 00 
 807aec0:	48 01 c8             	add    %rcx,%rax
 807aec3:	48 8b 0d d6 2f 01 00 	mov    0x12fd6(%rip),%rcx        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 807aeca:	48 8b 09             	mov    (%rcx),%rcx
 807aecd:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 807aed4:	00 00 00 
 807aed7:	48 01 d1             	add    %rdx,%rcx
 807aeda:	48 8b 11             	mov    (%rcx),%rdx
 807aedd:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807aee4:	00 00 00 
 807aee7:	48 01 ca             	add    %rcx,%rdx
 807aeea:	8b 0a                	mov    (%rdx),%ecx
 807aeec:	89 08                	mov    %ecx,(%rax)
 807aeee:	48 8b 05 ab 2f 01 00 	mov    0x12fab(%rip),%rax        # 808dea0 <_GLOBAL_OFFSET_TABLE_+0x220>
 807aef5:	48 8b 00             	mov    (%rax),%rax
 807aef8:	48 b9 39 06 00 00 00 	movabs $0x639,%rcx
 807aeff:	00 00 00 
 807af02:	48 01 c8             	add    %rcx,%rax
 807af05:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807af08:	49 89 ca             	mov    %rcx,%r10
 807af0b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 807af0f:	48 89 ce             	mov    %rcx,%rsi
 807af12:	48 89 c7             	mov    %rax,%rdi
 807af15:	4c 89 d2             	mov    %r10,%rdx
 807af18:	b8 00 00 00 00       	mov    $0x0,%eax
 807af1d:	e8 4e bd 00 00       	callq  8086c70 <memcpy>
 807af22:	b8 00 00 00 00       	mov    $0x0,%eax
 807af27:	4c 8b 1d 42 30 01 00 	mov    0x13042(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 807af2e:	49 89 03             	mov    %rax,(%r11)
 807af31:	b8 00 00 00 00       	mov    $0x0,%eax
 807af36:	48 89 c6             	mov    %rax,%rsi
 807af39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807af3d:	48 89 c7             	mov    %rax,%rdi
 807af40:	b8 00 00 00 00       	mov    $0x0,%eax
 807af45:	e8 9a fa ff ff       	callq  807a9e4 <tcc_assemble_internal>
 807af4a:	b8 00 00 00 00       	mov    $0x0,%eax
 807af4f:	e8 36 2d fd ff       	callq  804dc8a <tcc_close>
 807af54:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807af57:	4c 8b 1d ba 2f 01 00 	mov    0x12fba(%rip),%r11        # 808df18 <_GLOBAL_OFFSET_TABLE_+0x298>
 807af5e:	41 89 03             	mov    %eax,(%r11)
 807af61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 807af65:	4c 8b 1d 04 30 01 00 	mov    0x13004(%rip),%r11        # 808df70 <_GLOBAL_OFFSET_TABLE_+0x2f0>
 807af6c:	49 89 03             	mov    %rax,(%r11)
 807af6f:	c9                   	leaveq 
 807af70:	c3                   	retq   

000000000807af71 <find_constraint>:
 807af71:	55                   	push   %rbp
 807af72:	48 89 e5             	mov    %rsp,%rbp
 807af75:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 807af7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807af80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807af84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807af88:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807af8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807af90:	0f be 08             	movsbl (%rax),%ecx
 807af93:	48 89 cf             	mov    %rcx,%rdi
 807af96:	b8 00 00 00 00       	mov    $0x0,%eax
 807af9b:	e8 fa 0f 00 00       	callq  807bf9a <isnum>
 807afa0:	85 c0                	test   %eax,%eax
 807afa2:	0f 84 75 00 00 00    	je     807b01d <find_constraint+0xac>
 807afa8:	b8 00 00 00 00       	mov    $0x0,%eax
 807afad:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807afb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807afb4:	0f be 08             	movsbl (%rax),%ecx
 807afb7:	48 89 cf             	mov    %rcx,%rdi
 807afba:	b8 00 00 00 00       	mov    $0x0,%eax
 807afbf:	e8 d6 0f 00 00       	callq  807bf9a <isnum>
 807afc4:	85 c0                	test   %eax,%eax
 807afc6:	0f 84 35 00 00 00    	je     807b001 <find_constraint+0x90>
 807afcc:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807afcf:	b9 0a 00 00 00       	mov    $0xa,%ecx
 807afd4:	0f af c1             	imul   %ecx,%eax
 807afd7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 807afdb:	0f be 11             	movsbl (%rcx),%edx
 807afde:	48 01 d0             	add    %rdx,%rax
 807afe1:	83 e8 30             	sub    $0x30,%eax
 807afe4:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807afe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807afeb:	48 89 c1             	mov    %rax,%rcx
 807afee:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 807aff5:	00 00 00 
 807aff8:	48 01 d0             	add    %rdx,%rax
 807affb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807afff:	eb af                	jmp    807afb0 <find_constraint+0x3f>
 807b001:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b004:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 807b007:	48 39 c8             	cmp    %rcx,%rax
 807b00a:	0f 82 08 00 00 00    	jb     807b018 <find_constraint+0xa7>
 807b010:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807b015:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b018:	e9 1c 01 00 00       	jmpq   807b139 <find_constraint+0x1c8>
 807b01d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807b021:	0f be 08             	movsbl (%rax),%ecx
 807b024:	83 f9 5b             	cmp    $0x5b,%ecx
 807b027:	0f 85 04 01 00 00    	jne    807b131 <find_constraint+0x1c0>
 807b02d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807b031:	48 89 c1             	mov    %rax,%rcx
 807b034:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 807b03b:	00 00 00 
 807b03e:	48 01 d0             	add    %rdx,%rax
 807b041:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807b045:	b8 5d 00 00 00       	mov    $0x5d,%eax
 807b04a:	48 89 c6             	mov    %rax,%rsi
 807b04d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807b051:	48 89 c7             	mov    %rax,%rdi
 807b054:	b8 00 00 00 00       	mov    $0x0,%eax
 807b059:	e8 e2 bf 00 00       	callq  8087040 <strchr>
 807b05e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 807b062:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 807b066:	85 c0                	test   %eax,%eax
 807b068:	0f 84 b6 00 00 00    	je     807b124 <find_constraint+0x1b3>
 807b06e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 807b072:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 807b076:	48 29 c8             	sub    %rcx,%rax
 807b079:	48 89 c1             	mov    %rax,%rcx
 807b07c:	48 89 ce             	mov    %rcx,%rsi
 807b07f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807b083:	48 89 c7             	mov    %rax,%rdi
 807b086:	b8 00 00 00 00       	mov    $0x0,%eax
 807b08b:	e8 d3 66 fd ff       	callq  8051763 <tok_alloc>
 807b090:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 807b094:	b8 00 00 00 00       	mov    $0x0,%eax
 807b099:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b09c:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b09f:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 807b0a2:	39 c8                	cmp    %ecx,%eax
 807b0a4:	0f 8d 58 00 00 00    	jge    807b102 <find_constraint+0x191>
 807b0aa:	e9 0e 00 00 00       	jmpq   807b0bd <find_constraint+0x14c>
 807b0af:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b0b2:	48 89 c1             	mov    %rax,%rcx
 807b0b5:	83 c0 01             	add    $0x1,%eax
 807b0b8:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b0bb:	eb df                	jmp    807b09c <find_constraint+0x12b>
 807b0bd:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b0c0:	48 63 c0             	movslq %eax,%rax
 807b0c3:	48 89 c1             	mov    %rax,%rcx
 807b0c6:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 807b0cd:	00 00 00 
 807b0d0:	48 0f af c8          	imul   %rax,%rcx
 807b0d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807b0d8:	48 89 ca             	mov    %rcx,%rdx
 807b0db:	48 01 d0             	add    %rdx,%rax
 807b0de:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807b0e2:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 807b0e9:	00 00 00 
 807b0ec:	48 01 d1             	add    %rdx,%rcx
 807b0ef:	8b 10                	mov    (%rax),%edx
 807b0f1:	8b 01                	mov    (%rcx),%eax
 807b0f3:	39 c2                	cmp    %eax,%edx
 807b0f5:	0f 85 05 00 00 00    	jne    807b100 <find_constraint+0x18f>
 807b0fb:	e9 0a 00 00 00       	jmpq   807b10a <find_constraint+0x199>
 807b100:	eb ad                	jmp    807b0af <find_constraint+0x13e>
 807b102:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807b107:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b10a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 807b10e:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 807b115:	00 00 00 
 807b118:	48 01 c8             	add    %rcx,%rax
 807b11b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807b11f:	e9 08 00 00 00       	jmpq   807b12c <find_constraint+0x1bb>
 807b124:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807b129:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b12c:	e9 08 00 00 00       	jmpq   807b139 <find_constraint+0x1c8>
 807b131:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807b136:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b139:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b13d:	85 c0                	test   %eax,%eax
 807b13f:	0f 84 0b 00 00 00    	je     807b150 <find_constraint+0x1df>
 807b145:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b149:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 807b14d:	48 89 08             	mov    %rcx,(%rax)
 807b150:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b153:	e9 00 00 00 00       	jmpq   807b158 <find_constraint+0x1e7>
 807b158:	c9                   	leaveq 
 807b159:	c3                   	retq   

000000000807b15a <subst_asm_operands>:
 807b15a:	55                   	push   %rbp
 807b15b:	48 89 e5             	mov    %rsp,%rbp
 807b15e:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 807b165:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807b169:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807b16d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807b171:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807b175:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 807b179:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b17d:	48 89 c7             	mov    %rax,%rdi
 807b180:	b8 00 00 00 00       	mov    $0x0,%eax
 807b185:	e8 3d 62 fd ff       	callq  80513c7 <cstr_new>
 807b18a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 807b18e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807b195:	00 00 00 
 807b198:	48 01 c8             	add    %rcx,%rax
 807b19b:	48 8b 08             	mov    (%rax),%rcx
 807b19e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 807b1a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b1a6:	48 89 c1             	mov    %rax,%rcx
 807b1a9:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 807b1b0:	00 00 00 
 807b1b3:	48 01 d0             	add    %rdx,%rax
 807b1b6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 807b1ba:	0f be 01             	movsbl (%rcx),%eax
 807b1bd:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 807b1c0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807b1c3:	83 f8 25             	cmp    $0x25,%eax
 807b1c6:	0f 85 05 02 00 00    	jne    807b3d1 <subst_asm_operands+0x277>
 807b1cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b1d0:	0f be 08             	movsbl (%rax),%ecx
 807b1d3:	83 f9 25             	cmp    $0x25,%ecx
 807b1d6:	0f 85 1d 00 00 00    	jne    807b1f9 <subst_asm_operands+0x9f>
 807b1dc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b1e0:	48 89 c1             	mov    %rax,%rcx
 807b1e3:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 807b1ea:	00 00 00 
 807b1ed:	48 01 d0             	add    %rdx,%rax
 807b1f0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 807b1f4:	e9 d8 01 00 00       	jmpq   807b3d1 <subst_asm_operands+0x277>
 807b1f9:	b8 00 00 00 00       	mov    $0x0,%eax
 807b1fe:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807b201:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b205:	0f be 08             	movsbl (%rax),%ecx
 807b208:	83 f9 63             	cmp    $0x63,%ecx
 807b20b:	0f 84 45 00 00 00    	je     807b256 <subst_asm_operands+0xfc>
 807b211:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b215:	0f be 08             	movsbl (%rax),%ecx
 807b218:	83 f9 6e             	cmp    $0x6e,%ecx
 807b21b:	0f 84 35 00 00 00    	je     807b256 <subst_asm_operands+0xfc>
 807b221:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b225:	0f be 08             	movsbl (%rax),%ecx
 807b228:	83 f9 62             	cmp    $0x62,%ecx
 807b22b:	0f 84 25 00 00 00    	je     807b256 <subst_asm_operands+0xfc>
 807b231:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b235:	0f be 08             	movsbl (%rax),%ecx
 807b238:	83 f9 77             	cmp    $0x77,%ecx
 807b23b:	0f 84 15 00 00 00    	je     807b256 <subst_asm_operands+0xfc>
 807b241:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b245:	0f be 08             	movsbl (%rax),%ecx
 807b248:	83 f9 68             	cmp    $0x68,%ecx
 807b24b:	0f 84 05 00 00 00    	je     807b256 <subst_asm_operands+0xfc>
 807b251:	e9 1e 00 00 00       	jmpq   807b274 <subst_asm_operands+0x11a>
 807b256:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b25a:	48 89 c1             	mov    %rax,%rcx
 807b25d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 807b264:	00 00 00 
 807b267:	48 01 d0             	add    %rdx,%rax
 807b26a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 807b26e:	0f be 01             	movsbl (%rcx),%eax
 807b271:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807b274:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 807b278:	49 89 c3             	mov    %rax,%r11
 807b27b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807b27f:	49 89 c2             	mov    %rax,%r10
 807b282:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807b285:	48 89 c6             	mov    %rax,%rsi
 807b288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807b28c:	48 89 c7             	mov    %rax,%rdi
 807b28f:	4c 89 d2             	mov    %r10,%rdx
 807b292:	4c 89 d9             	mov    %r11,%rcx
 807b295:	b8 00 00 00 00       	mov    $0x0,%eax
 807b29a:	e8 d2 fc ff ff       	callq  807af71 <find_constraint>
 807b29f:	89 45 d0             	mov    %eax,-0x30(%rbp)
 807b2a2:	8b 45 d0             	mov    -0x30(%rbp),%eax
 807b2a5:	83 f8 00             	cmp    $0x0,%eax
 807b2a8:	0f 8d 14 00 00 00    	jge    807b2c2 <subst_asm_operands+0x168>
 807b2ae:	48 8d 05 37 18 01 00 	lea    0x11837(%rip),%rax        # 808caec <L.138>
 807b2b5:	48 89 c7             	mov    %rax,%rdi
 807b2b8:	b8 00 00 00 00       	mov    $0x0,%eax
 807b2bd:	e8 05 24 fd ff       	callq  804d6c7 <tcc_error>
 807b2c2:	8b 45 d0             	mov    -0x30(%rbp),%eax
 807b2c5:	48 63 c0             	movslq %eax,%rax
 807b2c8:	48 89 c1             	mov    %rax,%rcx
 807b2cb:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 807b2d2:	00 00 00 
 807b2d5:	48 0f af c8          	imul   %rax,%rcx
 807b2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807b2dd:	48 89 ca             	mov    %rcx,%rdx
 807b2e0:	48 01 d0             	add    %rdx,%rax
 807b2e3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 807b2e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 807b2eb:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807b2f2:	00 00 00 
 807b2f5:	48 01 c8             	add    %rcx,%rax
 807b2f8:	48 8b 08             	mov    (%rax),%rcx
 807b2fb:	b8 30 00 00 00       	mov    $0x30,%eax
 807b300:	49 89 c2             	mov    %rax,%r10
 807b303:	48 89 ce             	mov    %rcx,%rsi
 807b306:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 807b30a:	48 89 c7             	mov    %rax,%rdi
 807b30d:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
 807b311:	4c 89 d2             	mov    %r10,%rdx
 807b314:	b8 00 00 00 00       	mov    $0x0,%eax
 807b319:	e8 52 b9 00 00       	callq  8086c70 <memcpy>
 807b31e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 807b322:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 807b329:	00 00 00 
 807b32c:	48 01 c8             	add    %rcx,%rax
 807b32f:	8b 08                	mov    (%rax),%ecx
 807b331:	83 f9 00             	cmp    $0x0,%ecx
 807b334:	0f 8c 71 00 00 00    	jl     807b3ab <subst_asm_operands+0x251>
 807b33a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 807b33e:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 807b345:	00 00 00 
 807b348:	48 01 c8             	add    %rcx,%rax
 807b34b:	0f b7 08             	movzwl (%rax),%ecx
 807b34e:	66 89 4d 98          	mov    %cx,-0x68(%rbp)
 807b352:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 807b356:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807b35d:	00 00 00 
 807b360:	48 01 c8             	add    %rcx,%rax
 807b363:	48 8b 08             	mov    (%rax),%rcx
 807b366:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 807b36d:	00 00 00 
 807b370:	48 01 c1             	add    %rax,%rcx
 807b373:	0f b7 01             	movzwl (%rcx),%eax
 807b376:	83 e0 3f             	and    $0x3f,%eax
 807b379:	83 f8 31             	cmp    $0x31,%eax
 807b37c:	0f 85 29 00 00 00    	jne    807b3ab <subst_asm_operands+0x251>
 807b382:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 807b386:	48 b9 3c 00 00 00 00 	movabs $0x3c,%rcx
 807b38d:	00 00 00 
 807b390:	48 01 c8             	add    %rcx,%rax
 807b393:	8b 08                	mov    (%rax),%ecx
 807b395:	85 c9                	test   %ecx,%ecx
 807b397:	0f 84 0e 00 00 00    	je     807b3ab <subst_asm_operands+0x251>
 807b39d:	0f b7 45 98          	movzwl -0x68(%rbp),%eax
 807b3a1:	81 c8 00 01 00 00    	or     $0x100,%eax
 807b3a7:	66 89 45 98          	mov    %ax,-0x68(%rbp)
 807b3ab:	8b 45 cc             	mov    -0x34(%rbp),%eax
 807b3ae:	49 89 c2             	mov    %rax,%r10
 807b3b1:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 807b3b5:	48 89 c6             	mov    %rax,%rsi
 807b3b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b3bc:	48 89 c7             	mov    %rax,%rdi
 807b3bf:	4c 89 d2             	mov    %r10,%rdx
 807b3c2:	b8 00 00 00 00       	mov    $0x0,%eax
 807b3c7:	e8 e8 a5 00 00       	callq  80859b4 <subst_asm_operand>
 807b3cc:	e9 28 00 00 00       	jmpq   807b3f9 <subst_asm_operands+0x29f>
 807b3d1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807b3d4:	48 89 c6             	mov    %rax,%rsi
 807b3d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b3db:	48 89 c7             	mov    %rax,%rdi
 807b3de:	b8 00 00 00 00       	mov    $0x0,%eax
 807b3e3:	e8 65 5e fd ff       	callq  805124d <cstr_ccat>
 807b3e8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807b3eb:	83 f8 00             	cmp    $0x0,%eax
 807b3ee:	0f 85 05 00 00 00    	jne    807b3f9 <subst_asm_operands+0x29f>
 807b3f4:	e9 05 00 00 00       	jmpq   807b3fe <subst_asm_operands+0x2a4>
 807b3f9:	e9 a4 fd ff ff       	jmpq   807b1a2 <subst_asm_operands+0x48>
 807b3fe:	c9                   	leaveq 
 807b3ff:	c3                   	retq   

000000000807b400 <parse_asm_operands>:
 807b400:	55                   	push   %rbp
 807b401:	48 89 e5             	mov    %rsp,%rbp
 807b404:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807b40b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807b40f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807b413:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807b417:	48 8b 05 0a 2b 01 00 	mov    0x12b0a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b41e:	8b 00                	mov    (%rax),%eax
 807b420:	83 f8 3a             	cmp    $0x3a,%eax
 807b423:	0f 84 d9 02 00 00    	je     807b702 <parse_asm_operands+0x302>
 807b429:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807b42d:	8b 08                	mov    (%rax),%ecx
 807b42f:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 807b432:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b435:	83 f8 1e             	cmp    $0x1e,%eax
 807b438:	0f 8c 14 00 00 00    	jl     807b452 <parse_asm_operands+0x52>
 807b43e:	48 8d 05 ca 16 01 00 	lea    0x116ca(%rip),%rax        # 808cb0f <L.139>
 807b445:	48 89 c7             	mov    %rax,%rdi
 807b448:	b8 00 00 00 00       	mov    $0x0,%eax
 807b44d:	e8 75 22 fd ff       	callq  804d6c7 <tcc_error>
 807b452:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807b455:	48 89 c1             	mov    %rax,%rcx
 807b458:	83 c0 01             	add    $0x1,%eax
 807b45b:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807b45e:	48 63 c9             	movslq %ecx,%rcx
 807b461:	48 89 c8             	mov    %rcx,%rax
 807b464:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 807b46b:	00 00 00 
 807b46e:	48 0f af c1          	imul   %rcx,%rax
 807b472:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807b476:	48 89 c2             	mov    %rax,%rdx
 807b479:	48 01 d1             	add    %rdx,%rcx
 807b47c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807b480:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b484:	b9 00 00 00 00       	mov    $0x0,%ecx
 807b489:	89 08                	mov    %ecx,(%rax)
 807b48b:	48 8b 05 96 2a 01 00 	mov    0x12a96(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b492:	8b 00                	mov    (%rax),%eax
 807b494:	83 f8 5b             	cmp    $0x5b,%eax
 807b497:	0f 85 5e 00 00 00    	jne    807b4fb <parse_asm_operands+0xfb>
 807b49d:	b8 00 00 00 00       	mov    $0x0,%eax
 807b4a2:	e8 23 d2 fd ff       	callq  80586ca <next>
 807b4a7:	48 8b 05 7a 2a 01 00 	mov    0x12a7a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b4ae:	8b 00                	mov    (%rax),%eax
 807b4b0:	81 f8 00 01 00 00    	cmp    $0x100,%eax
 807b4b6:	0f 8d 14 00 00 00    	jge    807b4d0 <parse_asm_operands+0xd0>
 807b4bc:	48 8d 05 62 16 01 00 	lea    0x11662(%rip),%rax        # 808cb25 <L.140>
 807b4c3:	48 89 c7             	mov    %rax,%rdi
 807b4c6:	b8 00 00 00 00       	mov    $0x0,%eax
 807b4cb:	e8 82 5c fd ff       	callq  8051152 <expect>
 807b4d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b4d4:	48 8b 0d 4d 2a 01 00 	mov    0x12a4d(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b4db:	8b 09                	mov    (%rcx),%ecx
 807b4dd:	89 08                	mov    %ecx,(%rax)
 807b4df:	b8 00 00 00 00       	mov    $0x0,%eax
 807b4e4:	e8 e1 d1 fd ff       	callq  80586ca <next>
 807b4e9:	b8 5d 00 00 00       	mov    $0x5d,%eax
 807b4ee:	48 89 c7             	mov    %rax,%rdi
 807b4f1:	b8 00 00 00 00       	mov    $0x0,%eax
 807b4f6:	e8 e8 5b fd ff       	callq  80510e3 <skip>
 807b4fb:	48 8b 05 26 2a 01 00 	mov    0x12a26(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b502:	8b 00                	mov    (%rax),%eax
 807b504:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807b50a:	0f 84 14 00 00 00    	je     807b524 <parse_asm_operands+0x124>
 807b510:	48 8d 05 19 16 01 00 	lea    0x11619(%rip),%rax        # 808cb30 <L.141>
 807b517:	48 89 c7             	mov    %rax,%rdi
 807b51a:	b8 00 00 00 00       	mov    $0x0,%eax
 807b51f:	e8 2e 5c fd ff       	callq  8051152 <expect>
 807b524:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b528:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807b52f:	00 00 00 
 807b532:	48 01 c8             	add    %rcx,%rax
 807b535:	48 8b 0d 6c 2a 01 00 	mov    0x12a6c(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807b53c:	48 8b 09             	mov    (%rcx),%rcx
 807b53f:	8b 11                	mov    (%rcx),%edx
 807b541:	48 63 d2             	movslq %edx,%rdx
 807b544:	48 89 d1             	mov    %rdx,%rcx
 807b547:	48 89 cf             	mov    %rcx,%rdi
 807b54a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 807b54e:	b8 00 00 00 00       	mov    $0x0,%eax
 807b553:	e8 00 0a fd ff       	callq  804bf58 <tcc_malloc>
 807b558:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807b55c:	48 89 01             	mov    %rax,(%rcx)
 807b55f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b563:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807b56a:	00 00 00 
 807b56d:	48 01 c8             	add    %rcx,%rax
 807b570:	48 8b 0d 31 2a 01 00 	mov    0x12a31(%rip),%rcx        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807b577:	48 8b 09             	mov    (%rcx),%rcx
 807b57a:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 807b581:	00 00 00 
 807b584:	48 01 d1             	add    %rdx,%rcx
 807b587:	48 8b 11             	mov    (%rcx),%rdx
 807b58a:	48 89 d6             	mov    %rdx,%rsi
 807b58d:	48 8b 08             	mov    (%rax),%rcx
 807b590:	48 89 cf             	mov    %rcx,%rdi
 807b593:	b8 00 00 00 00       	mov    $0x0,%eax
 807b598:	e8 c3 bc 00 00       	callq  8087260 <strcpy>
 807b59d:	b8 00 00 00 00       	mov    $0x0,%eax
 807b5a2:	e8 23 d1 fd ff       	callq  80586ca <next>
 807b5a7:	b8 28 00 00 00       	mov    $0x28,%eax
 807b5ac:	48 89 c7             	mov    %rax,%rdi
 807b5af:	b8 00 00 00 00       	mov    $0x0,%eax
 807b5b4:	e8 2a 5b fd ff       	callq  80510e3 <skip>
 807b5b9:	b8 00 00 00 00       	mov    $0x0,%eax
 807b5be:	e8 75 c6 fe ff       	callq  8067c38 <gexpr>
 807b5c3:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807b5c6:	85 c0                	test   %eax,%eax
 807b5c8:	0f 84 0f 00 00 00    	je     807b5dd <parse_asm_operands+0x1dd>
 807b5ce:	b8 00 00 00 00       	mov    $0x0,%eax
 807b5d3:	e8 db 06 fe ff       	callq  805bcb3 <test_lvalue>
 807b5d8:	e9 c1 00 00 00       	jmpq   807b69e <parse_asm_operands+0x29e>
 807b5dd:	48 8b 05 3c 29 01 00 	mov    0x1293c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807b5e4:	48 8b 00             	mov    (%rax),%rax
 807b5e7:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807b5ee:	00 00 00 
 807b5f1:	48 01 c8             	add    %rcx,%rax
 807b5f4:	0f b7 08             	movzwl (%rax),%ecx
 807b5f7:	81 e1 00 01 00 00    	and    $0x100,%ecx
 807b5fd:	85 c9                	test   %ecx,%ecx
 807b5ff:	0f 84 99 00 00 00    	je     807b69e <parse_asm_operands+0x29e>
 807b605:	48 8b 05 14 29 01 00 	mov    0x12914(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807b60c:	48 8b 00             	mov    (%rax),%rax
 807b60f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807b616:	00 00 00 
 807b619:	48 01 c8             	add    %rcx,%rax
 807b61c:	0f b7 08             	movzwl (%rax),%ecx
 807b61f:	83 e1 3f             	and    $0x3f,%ecx
 807b622:	83 f9 31             	cmp    $0x31,%ecx
 807b625:	0f 84 2b 00 00 00    	je     807b656 <parse_asm_operands+0x256>
 807b62b:	48 8b 05 ee 28 01 00 	mov    0x128ee(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807b632:	48 8b 00             	mov    (%rax),%rax
 807b635:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807b63c:	00 00 00 
 807b63f:	48 01 c8             	add    %rcx,%rax
 807b642:	0f b7 08             	movzwl (%rax),%ecx
 807b645:	83 e1 3f             	and    $0x3f,%ecx
 807b648:	83 f9 30             	cmp    $0x30,%ecx
 807b64b:	0f 8c 05 00 00 00    	jl     807b656 <parse_asm_operands+0x256>
 807b651:	e9 48 00 00 00       	jmpq   807b69e <parse_asm_operands+0x29e>
 807b656:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b65a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807b661:	00 00 00 
 807b664:	48 01 c8             	add    %rcx,%rax
 807b667:	b9 6d 00 00 00       	mov    $0x6d,%ecx
 807b66c:	48 89 ce             	mov    %rcx,%rsi
 807b66f:	48 8b 08             	mov    (%rax),%rcx
 807b672:	48 89 cf             	mov    %rcx,%rdi
 807b675:	b8 00 00 00 00       	mov    $0x0,%eax
 807b67a:	e8 c1 b9 00 00       	callq  8087040 <strchr>
 807b67f:	85 c0                	test   %eax,%eax
 807b681:	0f 84 05 00 00 00    	je     807b68c <parse_asm_operands+0x28c>
 807b687:	e9 12 00 00 00       	jmpq   807b69e <parse_asm_operands+0x29e>
 807b68c:	b8 01 00 00 00       	mov    $0x1,%eax
 807b691:	48 89 c7             	mov    %rax,%rdi
 807b694:	b8 00 00 00 00       	mov    $0x0,%eax
 807b699:	e8 8c 20 fe ff       	callq  805d72a <gv>
 807b69e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807b6a2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807b6a9:	00 00 00 
 807b6ac:	48 01 c8             	add    %rcx,%rax
 807b6af:	48 8b 0d 6a 28 01 00 	mov    0x1286a(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807b6b6:	48 8b 09             	mov    (%rcx),%rcx
 807b6b9:	48 89 08             	mov    %rcx,(%rax)
 807b6bc:	b8 29 00 00 00       	mov    $0x29,%eax
 807b6c1:	48 89 c7             	mov    %rax,%rdi
 807b6c4:	b8 00 00 00 00       	mov    $0x0,%eax
 807b6c9:	e8 15 5a fd ff       	callq  80510e3 <skip>
 807b6ce:	48 8b 05 53 28 01 00 	mov    0x12853(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b6d5:	8b 00                	mov    (%rax),%eax
 807b6d7:	83 f8 2c             	cmp    $0x2c,%eax
 807b6da:	0f 85 0f 00 00 00    	jne    807b6ef <parse_asm_operands+0x2ef>
 807b6e0:	b8 00 00 00 00       	mov    $0x0,%eax
 807b6e5:	e8 e0 cf fd ff       	callq  80586ca <next>
 807b6ea:	e9 05 00 00 00       	jmpq   807b6f4 <parse_asm_operands+0x2f4>
 807b6ef:	e9 05 00 00 00       	jmpq   807b6f9 <parse_asm_operands+0x2f9>
 807b6f4:	e9 39 fd ff ff       	jmpq   807b432 <parse_asm_operands+0x32>
 807b6f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807b6fd:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 807b700:	89 08                	mov    %ecx,(%rax)
 807b702:	c9                   	leaveq 
 807b703:	c3                   	retq   

000000000807b704 <asm_instr>:
 807b704:	55                   	push   %rbp
 807b705:	48 89 e5             	mov    %rsp,%rbp
 807b708:	48 81 ec e0 08 00 00 	sub    $0x8e0,%rsp
 807b70f:	b8 00 00 00 00       	mov    $0x0,%eax
 807b714:	e8 b1 cf fd ff       	callq  80586ca <next>
 807b719:	48 8b 05 08 28 01 00 	mov    0x12808(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b720:	8b 00                	mov    (%rax),%eax
 807b722:	81 f8 14 01 00 00    	cmp    $0x114,%eax
 807b728:	0f 84 2f 00 00 00    	je     807b75d <asm_instr+0x59>
 807b72e:	48 8b 05 f3 27 01 00 	mov    0x127f3(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b735:	8b 00                	mov    (%rax),%eax
 807b737:	81 f8 15 01 00 00    	cmp    $0x115,%eax
 807b73d:	0f 84 1a 00 00 00    	je     807b75d <asm_instr+0x59>
 807b743:	48 8b 05 de 27 01 00 	mov    0x127de(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b74a:	8b 00                	mov    (%rax),%eax
 807b74c:	81 f8 16 01 00 00    	cmp    $0x116,%eax
 807b752:	0f 84 05 00 00 00    	je     807b75d <asm_instr+0x59>
 807b758:	e9 0a 00 00 00       	jmpq   807b767 <asm_instr+0x63>
 807b75d:	b8 00 00 00 00       	mov    $0x0,%eax
 807b762:	e8 63 cf fd ff       	callq  80586ca <next>
 807b767:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807b76b:	48 89 c7             	mov    %rax,%rdi
 807b76e:	b8 00 00 00 00       	mov    $0x0,%eax
 807b773:	e8 42 8a fe ff       	callq  80641ba <parse_asm_str>
 807b778:	b8 00 00 00 00       	mov    $0x0,%eax
 807b77d:	89 85 48 f7 ff ff    	mov    %eax,-0x8b8(%rbp)
 807b783:	b8 00 00 00 00       	mov    $0x0,%eax
 807b788:	89 85 4c f7 ff ff    	mov    %eax,-0x8b4(%rbp)
 807b78e:	b8 00 00 00 00       	mov    $0x0,%eax
 807b793:	89 85 40 f7 ff ff    	mov    %eax,-0x8c0(%rbp)
 807b799:	b8 08 00 00 00       	mov    $0x8,%eax
 807b79e:	49 89 c2             	mov    %rax,%r10
 807b7a1:	b8 00 00 00 00       	mov    $0x0,%eax
 807b7a6:	48 89 c6             	mov    %rax,%rsi
 807b7a9:	48 8d 85 34 f7 ff ff 	lea    -0x8cc(%rbp),%rax
 807b7b0:	48 89 c7             	mov    %rax,%rdi
 807b7b3:	4c 89 d2             	mov    %r10,%rdx
 807b7b6:	b8 00 00 00 00       	mov    $0x0,%eax
 807b7bb:	e8 f0 b6 00 00       	callq  8086eb0 <memset>
 807b7c0:	48 8b 05 61 27 01 00 	mov    0x12761(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b7c7:	8b 00                	mov    (%rax),%eax
 807b7c9:	83 f8 3a             	cmp    $0x3a,%eax
 807b7cc:	0f 85 4c 01 00 00    	jne    807b91e <asm_instr+0x21a>
 807b7d2:	b8 00 00 00 00       	mov    $0x0,%eax
 807b7d7:	e8 ee ce fd ff       	callq  80586ca <next>
 807b7dc:	b8 01 00 00 00       	mov    $0x1,%eax
 807b7e1:	89 85 40 f7 ff ff    	mov    %eax,-0x8c0(%rbp)
 807b7e7:	b8 01 00 00 00       	mov    $0x1,%eax
 807b7ec:	49 89 c2             	mov    %rax,%r10
 807b7ef:	48 8d 85 48 f7 ff ff 	lea    -0x8b8(%rbp),%rax
 807b7f6:	48 89 c6             	mov    %rax,%rsi
 807b7f9:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807b800:	48 89 c7             	mov    %rax,%rdi
 807b803:	4c 89 d2             	mov    %r10,%rdx
 807b806:	b8 00 00 00 00       	mov    $0x0,%eax
 807b80b:	e8 f0 fb ff ff       	callq  807b400 <parse_asm_operands>
 807b810:	8b 85 48 f7 ff ff    	mov    -0x8b8(%rbp),%eax
 807b816:	89 85 4c f7 ff ff    	mov    %eax,-0x8b4(%rbp)
 807b81c:	48 8b 05 05 27 01 00 	mov    0x12705(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b823:	8b 00                	mov    (%rax),%eax
 807b825:	83 f8 3a             	cmp    $0x3a,%eax
 807b828:	0f 85 f0 00 00 00    	jne    807b91e <asm_instr+0x21a>
 807b82e:	b8 00 00 00 00       	mov    $0x0,%eax
 807b833:	e8 92 ce fd ff       	callq  80586ca <next>
 807b838:	48 8b 05 e9 26 01 00 	mov    0x126e9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b83f:	8b 00                	mov    (%rax),%eax
 807b841:	83 f8 29             	cmp    $0x29,%eax
 807b844:	0f 84 d4 00 00 00    	je     807b91e <asm_instr+0x21a>
 807b84a:	b8 00 00 00 00       	mov    $0x0,%eax
 807b84f:	49 89 c2             	mov    %rax,%r10
 807b852:	48 8d 85 48 f7 ff ff 	lea    -0x8b8(%rbp),%rax
 807b859:	48 89 c6             	mov    %rax,%rsi
 807b85c:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807b863:	48 89 c7             	mov    %rax,%rdi
 807b866:	4c 89 d2             	mov    %r10,%rdx
 807b869:	b8 00 00 00 00       	mov    $0x0,%eax
 807b86e:	e8 8d fb ff ff       	callq  807b400 <parse_asm_operands>
 807b873:	48 8b 05 ae 26 01 00 	mov    0x126ae(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b87a:	8b 00                	mov    (%rax),%eax
 807b87c:	83 f8 3a             	cmp    $0x3a,%eax
 807b87f:	0f 85 99 00 00 00    	jne    807b91e <asm_instr+0x21a>
 807b885:	b8 00 00 00 00       	mov    $0x0,%eax
 807b88a:	e8 3b ce fd ff       	callq  80586ca <next>
 807b88f:	48 8b 05 92 26 01 00 	mov    0x12692(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b896:	8b 00                	mov    (%rax),%eax
 807b898:	81 f8 b5 00 00 00    	cmp    $0xb5,%eax
 807b89e:	0f 84 14 00 00 00    	je     807b8b8 <asm_instr+0x1b4>
 807b8a4:	48 8d 05 95 12 01 00 	lea    0x11295(%rip),%rax        # 808cb40 <L.142>
 807b8ab:	48 89 c7             	mov    %rax,%rdi
 807b8ae:	b8 00 00 00 00       	mov    $0x0,%eax
 807b8b3:	e8 9a 58 fd ff       	callq  8051152 <expect>
 807b8b8:	48 8b 05 e9 26 01 00 	mov    0x126e9(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 807b8bf:	48 8b 00             	mov    (%rax),%rax
 807b8c2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807b8c9:	00 00 00 
 807b8cc:	48 01 c8             	add    %rcx,%rax
 807b8cf:	48 8b 08             	mov    (%rax),%rcx
 807b8d2:	48 89 ce             	mov    %rcx,%rsi
 807b8d5:	48 8d 85 34 f7 ff ff 	lea    -0x8cc(%rbp),%rax
 807b8dc:	48 89 c7             	mov    %rax,%rdi
 807b8df:	b8 00 00 00 00       	mov    $0x0,%eax
 807b8e4:	e8 c3 ab 00 00       	callq  80864ac <asm_clobber>
 807b8e9:	b8 00 00 00 00       	mov    $0x0,%eax
 807b8ee:	e8 d7 cd fd ff       	callq  80586ca <next>
 807b8f3:	48 8b 05 2e 26 01 00 	mov    0x1262e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b8fa:	8b 00                	mov    (%rax),%eax
 807b8fc:	83 f8 2c             	cmp    $0x2c,%eax
 807b8ff:	0f 85 0f 00 00 00    	jne    807b914 <asm_instr+0x210>
 807b905:	b8 00 00 00 00       	mov    $0x0,%eax
 807b90a:	e8 bb cd fd ff       	callq  80586ca <next>
 807b90f:	e9 05 00 00 00       	jmpq   807b919 <asm_instr+0x215>
 807b914:	e9 05 00 00 00       	jmpq   807b91e <asm_instr+0x21a>
 807b919:	e9 71 ff ff ff       	jmpq   807b88f <asm_instr+0x18b>
 807b91e:	b8 29 00 00 00       	mov    $0x29,%eax
 807b923:	48 89 c7             	mov    %rax,%rdi
 807b926:	b8 00 00 00 00       	mov    $0x0,%eax
 807b92b:	e8 b3 57 fd ff       	callq  80510e3 <skip>
 807b930:	48 8b 05 f1 25 01 00 	mov    0x125f1(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807b937:	8b 00                	mov    (%rax),%eax
 807b939:	83 f8 3b             	cmp    $0x3b,%eax
 807b93c:	0f 84 14 00 00 00    	je     807b956 <asm_instr+0x252>
 807b942:	48 8d 05 07 12 01 00 	lea    0x11207(%rip),%rax        # 808cb50 <L.143>
 807b949:	48 89 c7             	mov    %rax,%rdi
 807b94c:	b8 00 00 00 00       	mov    $0x0,%eax
 807b951:	e8 fc 57 fd ff       	callq  8051152 <expect>
 807b956:	b8 00 00 00 00       	mov    $0x0,%eax
 807b95b:	48 89 c7             	mov    %rax,%rdi
 807b95e:	b8 00 00 00 00       	mov    $0x0,%eax
 807b963:	e8 d4 1b fe ff       	callq  805d53c <save_regs>
 807b968:	48 8d 85 3c f7 ff ff 	lea    -0x8c4(%rbp),%rax
 807b96f:	49 89 c0             	mov    %rax,%r8
 807b972:	48 8d 85 34 f7 ff ff 	lea    -0x8cc(%rbp),%rax
 807b979:	49 89 c3             	mov    %rax,%r11
 807b97c:	8b 85 4c f7 ff ff    	mov    -0x8b4(%rbp),%eax
 807b982:	49 89 c2             	mov    %rax,%r10
 807b985:	8b 85 48 f7 ff ff    	mov    -0x8b8(%rbp),%eax
 807b98b:	48 89 c6             	mov    %rax,%rsi
 807b98e:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807b995:	48 89 c7             	mov    %rax,%rdi
 807b998:	4c 89 d2             	mov    %r10,%rdx
 807b99b:	4c 89 d9             	mov    %r11,%rcx
 807b99e:	b8 00 00 00 00       	mov    $0x0,%eax
 807b9a3:	e8 0c 91 00 00       	callq  8084ab4 <asm_compute_constraints>
 807b9a8:	8b 85 40 f7 ff ff    	mov    -0x8c0(%rbp),%eax
 807b9ae:	85 c0                	test   %eax,%eax
 807b9b0:	0f 84 50 00 00 00    	je     807ba06 <asm_instr+0x302>
 807b9b6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807b9ba:	49 89 c0             	mov    %rax,%r8
 807b9bd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 807b9c1:	49 89 c3             	mov    %rax,%r11
 807b9c4:	8b 85 4c f7 ff ff    	mov    -0x8b4(%rbp),%eax
 807b9ca:	49 89 c2             	mov    %rax,%r10
 807b9cd:	8b 85 48 f7 ff ff    	mov    -0x8b8(%rbp),%eax
 807b9d3:	48 89 c6             	mov    %rax,%rsi
 807b9d6:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807b9dd:	48 89 c7             	mov    %rax,%rdi
 807b9e0:	4c 89 d2             	mov    %r10,%rdx
 807b9e3:	4c 89 d9             	mov    %r11,%rcx
 807b9e6:	b8 00 00 00 00       	mov    $0x0,%eax
 807b9eb:	e8 6a f7 ff ff       	callq  807b15a <subst_asm_operands>
 807b9f0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807b9f4:	48 89 c7             	mov    %rax,%rdi
 807b9f7:	b8 00 00 00 00       	mov    $0x0,%eax
 807b9fc:	e8 fb 59 fd ff       	callq  80513fc <cstr_free>
 807ba01:	e9 23 00 00 00       	jmpq   807ba29 <asm_instr+0x325>
 807ba06:	b8 20 00 00 00       	mov    $0x20,%eax
 807ba0b:	49 89 c2             	mov    %rax,%r10
 807ba0e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807ba12:	48 89 c6             	mov    %rax,%rsi
 807ba15:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 807ba19:	48 89 c7             	mov    %rax,%rdi
 807ba1c:	4c 89 d2             	mov    %r10,%rdx
 807ba1f:	b8 00 00 00 00       	mov    $0x0,%eax
 807ba24:	e8 47 b2 00 00       	callq  8086c70 <memcpy>
 807ba29:	8b 85 3c f7 ff ff    	mov    -0x8c4(%rbp),%eax
 807ba2f:	49 89 c1             	mov    %rax,%r9
 807ba32:	48 8d 85 34 f7 ff ff 	lea    -0x8cc(%rbp),%rax
 807ba39:	49 89 c0             	mov    %rax,%r8
 807ba3c:	b8 00 00 00 00       	mov    $0x0,%eax
 807ba41:	49 89 c3             	mov    %rax,%r11
 807ba44:	8b 85 4c f7 ff ff    	mov    -0x8b4(%rbp),%eax
 807ba4a:	49 89 c2             	mov    %rax,%r10
 807ba4d:	8b 85 48 f7 ff ff    	mov    -0x8b8(%rbp),%eax
 807ba53:	48 89 c6             	mov    %rax,%rsi
 807ba56:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807ba5d:	48 89 c7             	mov    %rax,%rdi
 807ba60:	4c 89 d2             	mov    %r10,%rdx
 807ba63:	4c 89 d9             	mov    %r11,%rcx
 807ba66:	b8 00 00 00 00       	mov    $0x0,%eax
 807ba6b:	e8 2f a4 00 00       	callq  8085e9f <asm_gen_code>
 807ba70:	8b 45 c0             	mov    -0x40(%rbp),%eax
 807ba73:	83 e8 01             	sub    $0x1,%eax
 807ba76:	49 89 c2             	mov    %rax,%r10
 807ba79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 807ba7d:	48 89 c6             	mov    %rax,%rsi
 807ba80:	48 8b 05 09 24 01 00 	mov    0x12409(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 807ba87:	48 8b 00             	mov    (%rax),%rax
 807ba8a:	48 89 c7             	mov    %rax,%rdi
 807ba8d:	4c 89 d2             	mov    %r10,%rdx
 807ba90:	b8 00 00 00 00       	mov    $0x0,%eax
 807ba95:	e8 ad f3 ff ff       	callq  807ae47 <tcc_assemble_inline>
 807ba9a:	b8 00 00 00 00       	mov    $0x0,%eax
 807ba9f:	e8 26 cc fd ff       	callq  80586ca <next>
 807baa4:	8b 85 3c f7 ff ff    	mov    -0x8c4(%rbp),%eax
 807baaa:	49 89 c1             	mov    %rax,%r9
 807baad:	48 8d 85 34 f7 ff ff 	lea    -0x8cc(%rbp),%rax
 807bab4:	49 89 c0             	mov    %rax,%r8
 807bab7:	b8 01 00 00 00       	mov    $0x1,%eax
 807babc:	49 89 c3             	mov    %rax,%r11
 807babf:	8b 85 4c f7 ff ff    	mov    -0x8b4(%rbp),%eax
 807bac5:	49 89 c2             	mov    %rax,%r10
 807bac8:	8b 85 48 f7 ff ff    	mov    -0x8b8(%rbp),%eax
 807bace:	48 89 c6             	mov    %rax,%rsi
 807bad1:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807bad8:	48 89 c7             	mov    %rax,%rdi
 807badb:	4c 89 d2             	mov    %r10,%rdx
 807bade:	4c 89 d9             	mov    %r11,%rcx
 807bae1:	b8 00 00 00 00       	mov    $0x0,%eax
 807bae6:	e8 b4 a3 00 00       	callq  8085e9f <asm_gen_code>
 807baeb:	b8 00 00 00 00       	mov    $0x0,%eax
 807baf0:	89 85 44 f7 ff ff    	mov    %eax,-0x8bc(%rbp)
 807baf6:	8b 85 44 f7 ff ff    	mov    -0x8bc(%rbp),%eax
 807bafc:	8b 8d 48 f7 ff ff    	mov    -0x8b8(%rbp),%ecx
 807bb02:	39 c8                	cmp    %ecx,%eax
 807bb04:	0f 8d 77 00 00 00    	jge    807bb81 <asm_instr+0x47d>
 807bb0a:	e9 14 00 00 00       	jmpq   807bb23 <asm_instr+0x41f>
 807bb0f:	8b 85 44 f7 ff ff    	mov    -0x8bc(%rbp),%eax
 807bb15:	48 89 c1             	mov    %rax,%rcx
 807bb18:	83 c0 01             	add    $0x1,%eax
 807bb1b:	89 85 44 f7 ff ff    	mov    %eax,-0x8bc(%rbp)
 807bb21:	eb d3                	jmp    807baf6 <asm_instr+0x3f2>
 807bb23:	8b 85 44 f7 ff ff    	mov    -0x8bc(%rbp),%eax
 807bb29:	48 63 c0             	movslq %eax,%rax
 807bb2c:	48 89 c1             	mov    %rax,%rcx
 807bb2f:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 807bb36:	00 00 00 
 807bb39:	48 0f af c8          	imul   %rax,%rcx
 807bb3d:	48 8d 85 50 f7 ff ff 	lea    -0x8b0(%rbp),%rax
 807bb44:	48 89 ca             	mov    %rcx,%rdx
 807bb47:	48 01 d0             	add    %rdx,%rax
 807bb4a:	48 89 85 28 f7 ff ff 	mov    %rax,-0x8d8(%rbp)
 807bb51:	48 8b 85 28 f7 ff ff 	mov    -0x8d8(%rbp),%rax
 807bb58:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bb5f:	00 00 00 
 807bb62:	48 01 c8             	add    %rcx,%rax
 807bb65:	48 8b 08             	mov    (%rax),%rcx
 807bb68:	48 89 cf             	mov    %rcx,%rdi
 807bb6b:	b8 00 00 00 00       	mov    $0x0,%eax
 807bb70:	e8 c1 03 fd ff       	callq  804bf36 <tcc_free>
 807bb75:	b8 00 00 00 00       	mov    $0x0,%eax
 807bb7a:	e8 73 27 fe ff       	callq  805e2f2 <vpop>
 807bb7f:	eb 8e                	jmp    807bb0f <asm_instr+0x40b>
 807bb81:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 807bb85:	48 89 c7             	mov    %rax,%rdi
 807bb88:	b8 00 00 00 00       	mov    $0x0,%eax
 807bb8d:	e8 6a 58 fd ff       	callq  80513fc <cstr_free>
 807bb92:	c9                   	leaveq 
 807bb93:	c3                   	retq   

000000000807bb94 <asm_global_instr>:
 807bb94:	55                   	push   %rbp
 807bb95:	48 89 e5             	mov    %rsp,%rbp
 807bb98:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807bb9f:	b8 00 00 00 00       	mov    $0x0,%eax
 807bba4:	e8 21 cb fd ff       	callq  80586ca <next>
 807bba9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807bbad:	48 89 c7             	mov    %rax,%rdi
 807bbb0:	b8 00 00 00 00       	mov    $0x0,%eax
 807bbb5:	e8 00 86 fe ff       	callq  80641ba <parse_asm_str>
 807bbba:	b8 29 00 00 00       	mov    $0x29,%eax
 807bbbf:	48 89 c7             	mov    %rax,%rdi
 807bbc2:	b8 00 00 00 00       	mov    $0x0,%eax
 807bbc7:	e8 17 55 fd ff       	callq  80510e3 <skip>
 807bbcc:	48 8b 05 55 23 01 00 	mov    0x12355(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807bbd3:	8b 00                	mov    (%rax),%eax
 807bbd5:	83 f8 3b             	cmp    $0x3b,%eax
 807bbd8:	0f 84 14 00 00 00    	je     807bbf2 <asm_global_instr+0x5e>
 807bbde:	48 8d 05 6f 0f 01 00 	lea    0x10f6f(%rip),%rax        # 808cb54 <L.144>
 807bbe5:	48 89 c7             	mov    %rax,%rdi
 807bbe8:	b8 00 00 00 00       	mov    $0x0,%eax
 807bbed:	e8 60 55 fd ff       	callq  8051152 <expect>
 807bbf2:	48 8b 05 d7 22 01 00 	mov    0x122d7(%rip),%rax        # 808ded0 <_GLOBAL_OFFSET_TABLE_+0x250>
 807bbf9:	48 8b 00             	mov    (%rax),%rax
 807bbfc:	4c 8b 1d b5 22 01 00 	mov    0x122b5(%rip),%r11        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807bc03:	49 89 03             	mov    %rax,(%r11)
 807bc06:	48 8b 05 ab 22 01 00 	mov    0x122ab(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807bc0d:	48 8b 00             	mov    (%rax),%rax
 807bc10:	8b 08                	mov    (%rax),%ecx
 807bc12:	4c 8b 1d 17 24 01 00 	mov    0x12417(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807bc19:	41 89 0b             	mov    %ecx,(%r11)
 807bc1c:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807bc1f:	83 e8 01             	sub    $0x1,%eax
 807bc22:	49 89 c2             	mov    %rax,%r10
 807bc25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807bc29:	48 89 c6             	mov    %rax,%rsi
 807bc2c:	48 8b 05 5d 22 01 00 	mov    0x1225d(%rip),%rax        # 808de90 <_GLOBAL_OFFSET_TABLE_+0x210>
 807bc33:	48 8b 00             	mov    (%rax),%rax
 807bc36:	48 89 c7             	mov    %rax,%rdi
 807bc39:	4c 89 d2             	mov    %r10,%rdx
 807bc3c:	b8 00 00 00 00       	mov    $0x0,%eax
 807bc41:	e8 01 f2 ff ff       	callq  807ae47 <tcc_assemble_inline>
 807bc46:	48 8b 05 6b 22 01 00 	mov    0x1226b(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807bc4d:	48 8b 00             	mov    (%rax),%rax
 807bc50:	48 8b 0d d9 23 01 00 	mov    0x123d9(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807bc57:	8b 09                	mov    (%rcx),%ecx
 807bc59:	48 63 c9             	movslq %ecx,%rcx
 807bc5c:	48 89 ca             	mov    %rcx,%rdx
 807bc5f:	48 89 10             	mov    %rdx,(%rax)
 807bc62:	b8 00 00 00 00       	mov    $0x0,%eax
 807bc67:	e8 5e ca fd ff       	callq  80586ca <next>
 807bc6c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 807bc70:	48 89 c7             	mov    %rax,%rdi
 807bc73:	b8 00 00 00 00       	mov    $0x0,%eax
 807bc78:	e8 7f 57 fd ff       	callq  80513fc <cstr_free>
 807bc7d:	c9                   	leaveq 
 807bc7e:	c3                   	retq   

000000000807bc7f <asm_expr_sum>:
 807bc7f:	55                   	push   %rbp
 807bc80:	48 89 e5             	mov    %rsp,%rbp
 807bc83:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807bc8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807bc8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807bc92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bc96:	48 89 c6             	mov    %rax,%rsi
 807bc99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807bc9d:	48 89 c7             	mov    %rax,%rdi
 807bca0:	b8 00 00 00 00       	mov    $0x0,%eax
 807bca5:	e8 bd d4 ff ff       	callq  8079167 <asm_expr_logic>
 807bcaa:	48 8b 05 77 22 01 00 	mov    0x12277(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 807bcb1:	8b 00                	mov    (%rax),%eax
 807bcb3:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807bcb6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807bcb9:	83 f8 2b             	cmp    $0x2b,%eax
 807bcbc:	0f 84 11 00 00 00    	je     807bcd3 <asm_expr_sum+0x54>
 807bcc2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807bcc5:	83 f8 2d             	cmp    $0x2d,%eax
 807bcc8:	0f 84 05 00 00 00    	je     807bcd3 <asm_expr_sum+0x54>
 807bcce:	e9 c5 02 00 00       	jmpq   807bf98 <asm_expr_sum+0x319>
 807bcd3:	b8 00 00 00 00       	mov    $0x0,%eax
 807bcd8:	e8 ed c9 fd ff       	callq  80586ca <next>
 807bcdd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 807bce1:	48 89 c6             	mov    %rax,%rsi
 807bce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807bce8:	48 89 c7             	mov    %rax,%rdi
 807bceb:	b8 00 00 00 00       	mov    $0x0,%eax
 807bcf0:	e8 72 d4 ff ff       	callq  8079167 <asm_expr_logic>
 807bcf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807bcf8:	83 f8 2b             	cmp    $0x2b,%eax
 807bcfb:	0f 85 b8 00 00 00    	jne    807bdb9 <asm_expr_sum+0x13a>
 807bd01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bd05:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bd0c:	00 00 00 
 807bd0f:	48 01 c8             	add    %rcx,%rax
 807bd12:	48 8b 08             	mov    (%rax),%rcx
 807bd15:	48 89 c8             	mov    %rcx,%rax
 807bd18:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 807bd1f:	00 00 00 
 807bd22:	48 39 c8             	cmp    %rcx,%rax
 807bd25:	0f 84 1f 00 00 00    	je     807bd4a <asm_expr_sum+0xcb>
 807bd2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807bd2f:	48 89 c1             	mov    %rax,%rcx
 807bd32:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807bd39:	00 00 00 
 807bd3c:	48 39 c1             	cmp    %rax,%rcx
 807bd3f:	0f 84 05 00 00 00    	je     807bd4a <asm_expr_sum+0xcb>
 807bd45:	e9 35 02 00 00       	jmpq   807bf7f <asm_expr_sum+0x300>
 807bd4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bd4e:	8b 08                	mov    (%rax),%ecx
 807bd50:	8b 55 d8             	mov    -0x28(%rbp),%edx
 807bd53:	48 01 d1             	add    %rdx,%rcx
 807bd56:	89 08                	mov    %ecx,(%rax)
 807bd58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bd5c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bd63:	00 00 00 
 807bd66:	48 01 c8             	add    %rcx,%rax
 807bd69:	48 8b 08             	mov    (%rax),%rcx
 807bd6c:	48 89 c8             	mov    %rcx,%rax
 807bd6f:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 807bd76:	00 00 00 
 807bd79:	48 39 c8             	cmp    %rcx,%rax
 807bd7c:	0f 85 32 00 00 00    	jne    807bdb4 <asm_expr_sum+0x135>
 807bd82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807bd86:	48 89 c1             	mov    %rax,%rcx
 807bd89:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807bd90:	00 00 00 
 807bd93:	48 39 c1             	cmp    %rax,%rcx
 807bd96:	0f 84 18 00 00 00    	je     807bdb4 <asm_expr_sum+0x135>
 807bd9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bda0:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bda7:	00 00 00 
 807bdaa:	48 01 c8             	add    %rcx,%rax
 807bdad:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 807bdb1:	48 89 08             	mov    %rcx,(%rax)
 807bdb4:	e9 da 01 00 00       	jmpq   807bf93 <asm_expr_sum+0x314>
 807bdb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bdbd:	8b 08                	mov    (%rax),%ecx
 807bdbf:	8b 55 d8             	mov    -0x28(%rbp),%edx
 807bdc2:	48 29 d1             	sub    %rdx,%rcx
 807bdc5:	89 08                	mov    %ecx,(%rax)
 807bdc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bdcb:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bdd2:	00 00 00 
 807bdd5:	48 01 c8             	add    %rcx,%rax
 807bdd8:	48 8b 08             	mov    (%rax),%rcx
 807bddb:	85 c9                	test   %ecx,%ecx
 807bddd:	0f 84 05 00 00 00    	je     807bde8 <asm_expr_sum+0x169>
 807bde3:	e9 16 00 00 00       	jmpq   807bdfe <asm_expr_sum+0x17f>
 807bde8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807bdec:	85 c0                	test   %eax,%eax
 807bdee:	0f 84 05 00 00 00    	je     807bdf9 <asm_expr_sum+0x17a>
 807bdf4:	e9 05 00 00 00       	jmpq   807bdfe <asm_expr_sum+0x17f>
 807bdf9:	e9 95 01 00 00       	jmpq   807bf93 <asm_expr_sum+0x314>
 807bdfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807be02:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807be09:	00 00 00 
 807be0c:	48 01 c8             	add    %rcx,%rax
 807be0f:	48 8b 08             	mov    (%rax),%rcx
 807be12:	85 c9                	test   %ecx,%ecx
 807be14:	0f 84 16 00 00 00    	je     807be30 <asm_expr_sum+0x1b1>
 807be1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807be1e:	85 c0                	test   %eax,%eax
 807be20:	0f 84 05 00 00 00    	je     807be2b <asm_expr_sum+0x1ac>
 807be26:	e9 05 00 00 00       	jmpq   807be30 <asm_expr_sum+0x1b1>
 807be2b:	e9 63 01 00 00       	jmpq   807bf93 <asm_expr_sum+0x314>
 807be30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807be34:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807be3b:	00 00 00 
 807be3e:	48 01 c8             	add    %rcx,%rax
 807be41:	48 8b 08             	mov    (%rax),%rcx
 807be44:	85 c9                	test   %ecx,%ecx
 807be46:	0f 84 33 01 00 00    	je     807bf7f <asm_expr_sum+0x300>
 807be4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807be50:	85 c0                	test   %eax,%eax
 807be52:	0f 84 27 01 00 00    	je     807bf7f <asm_expr_sum+0x300>
 807be58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807be5c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807be63:	00 00 00 
 807be66:	48 01 c8             	add    %rcx,%rax
 807be69:	48 8b 08             	mov    (%rax),%rcx
 807be6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807be70:	48 89 ca             	mov    %rcx,%rdx
 807be73:	48 89 c1             	mov    %rax,%rcx
 807be76:	48 39 ca             	cmp    %rcx,%rdx
 807be79:	0f 85 05 00 00 00    	jne    807be84 <asm_expr_sum+0x205>
 807be7f:	e9 dd 00 00 00       	jmpq   807bf61 <asm_expr_sum+0x2e2>
 807be84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807be88:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807be8f:	00 00 00 
 807be92:	48 01 c8             	add    %rcx,%rax
 807be95:	48 8b 08             	mov    (%rax),%rcx
 807be98:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 807be9f:	00 00 00 
 807bea2:	48 01 c1             	add    %rax,%rcx
 807bea5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807bea9:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 807beb0:	00 00 00 
 807beb3:	48 01 d0             	add    %rdx,%rax
 807beb6:	48 8b 11             	mov    (%rcx),%rdx
 807beb9:	48 8b 08             	mov    (%rax),%rcx
 807bebc:	48 39 ca             	cmp    %rcx,%rdx
 807bebf:	0f 85 97 00 00 00    	jne    807bf5c <asm_expr_sum+0x2dd>
 807bec5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bec9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bed0:	00 00 00 
 807bed3:	48 01 c8             	add    %rcx,%rax
 807bed6:	48 8b 08             	mov    (%rax),%rcx
 807bed9:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 807bee0:	00 00 00 
 807bee3:	48 01 c1             	add    %rax,%rcx
 807bee6:	48 8b 01             	mov    (%rcx),%rax
 807bee9:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 807bef0:	00 00 00 
 807bef3:	48 39 c8             	cmp    %rcx,%rax
 807bef6:	0f 84 60 00 00 00    	je     807bf5c <asm_expr_sum+0x2dd>
 807befc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bf00:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 807bf04:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 807bf0b:	00 00 00 
 807bf0e:	48 01 d1             	add    %rdx,%rcx
 807bf11:	48 8b 11             	mov    (%rcx),%rdx
 807bf14:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 807bf1b:	00 00 00 
 807bf1e:	48 01 ca             	add    %rcx,%rdx
 807bf21:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 807bf25:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 807bf29:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807bf30:	00 00 00 
 807bf33:	48 01 c1             	add    %rax,%rcx
 807bf36:	48 8b 02             	mov    (%rdx),%rax
 807bf39:	48 8b 11             	mov    (%rcx),%rdx
 807bf3c:	48 29 d0             	sub    %rdx,%rax
 807bf3f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807bf43:	8b 09                	mov    (%rcx),%ecx
 807bf45:	48 89 ca             	mov    %rcx,%rdx
 807bf48:	48 89 c1             	mov    %rax,%rcx
 807bf4b:	48 01 ca             	add    %rcx,%rdx
 807bf4e:	48 89 d0             	mov    %rdx,%rax
 807bf51:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807bf55:	89 01                	mov    %eax,(%rcx)
 807bf57:	e9 05 00 00 00       	jmpq   807bf61 <asm_expr_sum+0x2e2>
 807bf5c:	e9 1e 00 00 00       	jmpq   807bf7f <asm_expr_sum+0x300>
 807bf61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807bf65:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807bf6c:	00 00 00 
 807bf6f:	48 01 c8             	add    %rcx,%rax
 807bf72:	b9 00 00 00 00       	mov    $0x0,%ecx
 807bf77:	48 89 08             	mov    %rcx,(%rax)
 807bf7a:	e9 14 00 00 00       	jmpq   807bf93 <asm_expr_sum+0x314>
 807bf7f:	48 8d 05 d2 0b 01 00 	lea    0x10bd2(%rip),%rax        # 808cb58 <L.145>
 807bf86:	48 89 c7             	mov    %rax,%rdi
 807bf89:	b8 00 00 00 00       	mov    $0x0,%eax
 807bf8e:	e8 34 17 fd ff       	callq  804d6c7 <tcc_error>
 807bf93:	e9 12 fd ff ff       	jmpq   807bcaa <asm_expr_sum+0x2b>
 807bf98:	c9                   	leaveq 
 807bf99:	c3                   	retq   

000000000807bf9a <isnum>:
 807bf9a:	55                   	push   %rbp
 807bf9b:	48 89 e5             	mov    %rsp,%rbp
 807bf9e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807bfa5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807bfa9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807bfac:	83 f8 30             	cmp    $0x30,%eax
 807bfaf:	0f 8c 13 00 00 00    	jl     807bfc8 <isnum+0x2e>
 807bfb5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807bfb8:	83 f8 39             	cmp    $0x39,%eax
 807bfbb:	0f 8f 07 00 00 00    	jg     807bfc8 <isnum+0x2e>
 807bfc1:	b8 01 00 00 00       	mov    $0x1,%eax
 807bfc6:	eb 05                	jmp    807bfcd <isnum+0x33>
 807bfc8:	b8 00 00 00 00       	mov    $0x0,%eax
 807bfcd:	e9 00 00 00 00       	jmpq   807bfd2 <isnum+0x38>
 807bfd2:	c9                   	leaveq 
 807bfd3:	c3                   	retq   
	...

000000000807bfe0 <__bswap_16>:
 807bfe0:	55                   	push   %rbp
 807bfe1:	48 89 e5             	mov    %rsp,%rbp
 807bfe4:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807bfeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807bfef:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807bff2:	c1 f8 08             	sar    $0x8,%eax
 807bff5:	81 e0 ff 00 00 00    	and    $0xff,%eax
 807bffb:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807bffe:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 807c004:	c1 e1 08             	shl    $0x8,%ecx
 807c007:	48 09 c8             	or     %rcx,%rax
 807c00a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 807c010:	e9 00 00 00 00       	jmpq   807c015 <__bswap_16+0x35>
 807c015:	c9                   	leaveq 
 807c016:	c3                   	retq   

000000000807c017 <__bswap_32>:
 807c017:	55                   	push   %rbp
 807c018:	48 89 e5             	mov    %rsp,%rbp
 807c01b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807c022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c026:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807c029:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 807c02f:	c1 e8 18             	shr    $0x18,%eax
 807c032:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807c035:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 807c03b:	c1 e9 08             	shr    $0x8,%ecx
 807c03e:	48 09 c8             	or     %rcx,%rax
 807c041:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807c044:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 807c04a:	c1 e1 08             	shl    $0x8,%ecx
 807c04d:	48 09 c8             	or     %rcx,%rax
 807c050:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807c053:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 807c059:	c1 e1 18             	shl    $0x18,%ecx
 807c05c:	48 09 c8             	or     %rcx,%rax
 807c05f:	e9 00 00 00 00       	jmpq   807c064 <__bswap_32+0x4d>
 807c064:	c9                   	leaveq 
 807c065:	c3                   	retq   

000000000807c066 <__bswap_64>:
 807c066:	55                   	push   %rbp
 807c067:	48 89 e5             	mov    %rsp,%rbp
 807c06a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807c071:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c079:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 807c080:	00 00 ff 
 807c083:	48 21 c8             	and    %rcx,%rax
 807c086:	48 89 c1             	mov    %rax,%rcx
 807c089:	48 c1 e9 38          	shr    $0x38,%rcx
 807c08d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c091:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 807c098:	00 ff 00 
 807c09b:	48 21 d0             	and    %rdx,%rax
 807c09e:	48 89 c2             	mov    %rax,%rdx
 807c0a1:	48 c1 ea 28          	shr    $0x28,%rdx
 807c0a5:	48 89 c8             	mov    %rcx,%rax
 807c0a8:	48 89 d1             	mov    %rdx,%rcx
 807c0ab:	48 09 c8             	or     %rcx,%rax
 807c0ae:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807c0b2:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 807c0b9:	ff 00 00 
 807c0bc:	48 21 d1             	and    %rdx,%rcx
 807c0bf:	48 89 ca             	mov    %rcx,%rdx
 807c0c2:	48 c1 ea 18          	shr    $0x18,%rdx
 807c0c6:	48 89 c1             	mov    %rax,%rcx
 807c0c9:	48 89 d0             	mov    %rdx,%rax
 807c0cc:	48 09 c1             	or     %rax,%rcx
 807c0cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c0d3:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 807c0da:	00 00 00 
 807c0dd:	48 21 d0             	and    %rdx,%rax
 807c0e0:	48 89 c2             	mov    %rax,%rdx
 807c0e3:	48 c1 ea 08          	shr    $0x8,%rdx
 807c0e7:	48 89 c8             	mov    %rcx,%rax
 807c0ea:	48 89 d1             	mov    %rdx,%rcx
 807c0ed:	48 09 c8             	or     %rcx,%rax
 807c0f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807c0f4:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 807c0fb:	00 00 00 
 807c0fe:	48 21 d1             	and    %rdx,%rcx
 807c101:	48 89 ca             	mov    %rcx,%rdx
 807c104:	48 c1 e2 08          	shl    $0x8,%rdx
 807c108:	48 89 c1             	mov    %rax,%rcx
 807c10b:	48 89 d0             	mov    %rdx,%rax
 807c10e:	48 09 c1             	or     %rax,%rcx
 807c111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c115:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 807c11c:	00 00 00 
 807c11f:	48 21 d0             	and    %rdx,%rax
 807c122:	48 89 c2             	mov    %rax,%rdx
 807c125:	48 c1 e2 18          	shl    $0x18,%rdx
 807c129:	48 89 c8             	mov    %rcx,%rax
 807c12c:	48 89 d1             	mov    %rdx,%rcx
 807c12f:	48 09 c8             	or     %rcx,%rax
 807c132:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807c136:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 807c13d:	00 00 00 
 807c140:	48 21 d1             	and    %rdx,%rcx
 807c143:	48 89 ca             	mov    %rcx,%rdx
 807c146:	48 c1 e2 28          	shl    $0x28,%rdx
 807c14a:	48 89 c1             	mov    %rax,%rcx
 807c14d:	48 89 d0             	mov    %rdx,%rax
 807c150:	48 09 c1             	or     %rax,%rcx
 807c153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c157:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 807c15e:	00 00 00 
 807c161:	48 21 d0             	and    %rdx,%rax
 807c164:	48 89 c2             	mov    %rax,%rdx
 807c167:	48 c1 e2 38          	shl    $0x38,%rdx
 807c16b:	48 89 c8             	mov    %rcx,%rax
 807c16e:	48 89 d1             	mov    %rdx,%rcx
 807c171:	48 09 c8             	or     %rcx,%rax
 807c174:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 807c178:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c17c:	e9 00 00 00 00       	jmpq   807c181 <__bswap_64+0x11b>
 807c181:	c9                   	leaveq 
 807c182:	c3                   	retq   

000000000807c183 <tcc_relocate>:
 807c183:	55                   	push   %rbp
 807c184:	48 89 e5             	mov    %rsp,%rbp
 807c187:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807c18e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807c196:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c19a:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 807c1a1:	00 00 00 
 807c1a4:	48 89 c2             	mov    %rax,%rdx
 807c1a7:	48 39 d1             	cmp    %rdx,%rcx
 807c1aa:	0f 84 1d 00 00 00    	je     807c1cd <tcc_relocate+0x4a>
 807c1b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c1b4:	48 89 c6             	mov    %rax,%rsi
 807c1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c1bb:	48 89 c7             	mov    %rax,%rdi
 807c1be:	b8 00 00 00 00       	mov    $0x0,%eax
 807c1c3:	e8 5b 01 00 00       	callq  807c323 <tcc_relocate_ex>
 807c1c8:	e9 91 00 00 00       	jmpq   807c25e <tcc_relocate+0xdb>
 807c1cd:	b8 00 00 00 00       	mov    $0x0,%eax
 807c1d2:	48 89 c6             	mov    %rax,%rsi
 807c1d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c1d9:	48 89 c7             	mov    %rax,%rdi
 807c1dc:	b8 00 00 00 00       	mov    $0x0,%eax
 807c1e1:	e8 3d 01 00 00       	callq  807c323 <tcc_relocate_ex>
 807c1e6:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807c1e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807c1ee:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 807c1f1:	39 c8                	cmp    %ecx,%eax
 807c1f3:	0f 84 5d 00 00 00    	je     807c256 <tcc_relocate+0xd3>
 807c1f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c1fd:	48 b9 88 0c 00 00 00 	movabs $0xc88,%rcx
 807c204:	00 00 00 
 807c207:	48 01 c8             	add    %rcx,%rax
 807c20a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 807c20d:	48 63 c9             	movslq %ecx,%rcx
 807c210:	48 89 ca             	mov    %rcx,%rdx
 807c213:	48 89 d7             	mov    %rdx,%rdi
 807c216:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807c21a:	b8 00 00 00 00       	mov    $0x0,%eax
 807c21f:	e8 34 fd fc ff       	callq  804bf58 <tcc_malloc>
 807c224:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 807c228:	48 89 01             	mov    %rax,(%rcx)
 807c22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c22f:	48 b9 88 0c 00 00 00 	movabs $0xc88,%rcx
 807c236:	00 00 00 
 807c239:	48 01 c8             	add    %rcx,%rax
 807c23c:	48 8b 08             	mov    (%rax),%rcx
 807c23f:	48 89 ce             	mov    %rcx,%rsi
 807c242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c246:	48 89 c7             	mov    %rax,%rdi
 807c249:	b8 00 00 00 00       	mov    $0x0,%eax
 807c24e:	e8 d0 00 00 00       	callq  807c323 <tcc_relocate_ex>
 807c253:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807c256:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807c259:	e9 00 00 00 00       	jmpq   807c25e <tcc_relocate+0xdb>
 807c25e:	c9                   	leaveq 
 807c25f:	c3                   	retq   

000000000807c260 <tcc_run>:
 807c260:	55                   	push   %rbp
 807c261:	48 89 e5             	mov    %rsp,%rbp
 807c264:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807c26b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c26f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807c273:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807c277:	b8 01 00 00 00       	mov    $0x1,%eax
 807c27c:	48 89 c6             	mov    %rax,%rsi
 807c27f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c283:	48 89 c7             	mov    %rax,%rdi
 807c286:	b8 00 00 00 00       	mov    $0x0,%eax
 807c28b:	e8 f3 fe ff ff       	callq  807c183 <tcc_relocate>
 807c290:	83 f8 00             	cmp    $0x0,%eax
 807c293:	0f 8d 0a 00 00 00    	jge    807c2a3 <tcc_run+0x43>
 807c299:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807c29e:	e9 7e 00 00 00       	jmpq   807c321 <tcc_run+0xc1>
 807c2a3:	48 8d 05 fe 08 01 00 	lea    0x108fe(%rip),%rax        # 808cba8 <L.107>
 807c2aa:	48 89 c6             	mov    %rax,%rsi
 807c2ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c2b1:	48 89 c7             	mov    %rax,%rdi
 807c2b4:	b8 00 00 00 00       	mov    $0x0,%eax
 807c2b9:	e8 23 1f ff ff       	callq  806e1e1 <tcc_get_symbol_err>
 807c2be:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807c2c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c2c6:	48 b9 4c 01 00 00 00 	movabs $0x14c,%rcx
 807c2cd:	00 00 00 
 807c2d0:	48 01 c8             	add    %rcx,%rax
 807c2d3:	8b 08                	mov    (%rax),%ecx
 807c2d5:	85 c9                	test   %ecx,%ecx
 807c2d7:	0f 84 18 00 00 00    	je     807c2f5 <tcc_run+0x95>
 807c2dd:	b8 00 00 00 00       	mov    $0x0,%eax
 807c2e2:	e8 e3 14 00 00       	callq  807d7ca <set_exception_handler>
 807c2e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c2eb:	4c 8b 1d 7e 1d 01 00 	mov    0x11d7e(%rip),%r11        # 808e070 <_GLOBAL_OFFSET_TABLE_+0x3f0>
 807c2f2:	49 89 03             	mov    %rax,(%r11)
 807c2f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c2f9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 807c2fd:	48 89 ce             	mov    %rcx,%rsi
 807c300:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 807c303:	48 89 cf             	mov    %rcx,%rdi
 807c306:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 807c30a:	b8 00 00 00 00       	mov    $0x0,%eax
 807c30f:	4c 8b 5d d0          	mov    -0x30(%rbp),%r11
 807c313:	41 ff d3             	callq  *%r11
 807c316:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807c319:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807c31c:	e9 00 00 00 00       	jmpq   807c321 <tcc_run+0xc1>
 807c321:	c9                   	leaveq 
 807c322:	c3                   	retq   

000000000807c323 <tcc_relocate_ex>:
 807c323:	55                   	push   %rbp
 807c324:	48 89 e5             	mov    %rsp,%rbp
 807c327:	48 81 ec 40 00 00 00 	sub    $0x40,%rsp
 807c32e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c332:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807c336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c33a:	48 b9 84 0c 00 00 00 	movabs $0xc84,%rcx
 807c341:	00 00 00 
 807c344:	48 01 c8             	add    %rcx,%rax
 807c347:	b9 00 00 00 00       	mov    $0x0,%ecx
 807c34c:	8b 10                	mov    (%rax),%edx
 807c34e:	39 d1                	cmp    %edx,%ecx
 807c350:	0f 85 92 00 00 00    	jne    807c3e8 <tcc_relocate_ex+0xc5>
 807c356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c35a:	48 b9 84 0c 00 00 00 	movabs $0xc84,%rcx
 807c361:	00 00 00 
 807c364:	48 01 c8             	add    %rcx,%rax
 807c367:	b9 01 00 00 00       	mov    $0x1,%ecx
 807c36c:	89 08                	mov    %ecx,(%rax)
 807c36e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c372:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 807c379:	00 00 00 
 807c37c:	48 01 c8             	add    %rcx,%rax
 807c37f:	b9 00 00 00 00       	mov    $0x0,%ecx
 807c384:	89 08                	mov    %ecx,(%rax)
 807c386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c38a:	48 89 c7             	mov    %rax,%rdi
 807c38d:	b8 00 00 00 00       	mov    $0x0,%eax
 807c392:	e8 18 4d ff ff       	callq  80710af <tcc_add_runtime>
 807c397:	b8 00 00 00 00       	mov    $0x0,%eax
 807c39c:	e8 a3 2b ff ff       	callq  806ef44 <relocate_common_syms>
 807c3a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c3a5:	48 89 c7             	mov    %rax,%rdi
 807c3a8:	b8 00 00 00 00       	mov    $0x0,%eax
 807c3ad:	e8 a5 4d ff ff       	callq  8071157 <tcc_add_linker_symbols>
 807c3b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c3b6:	48 89 c7             	mov    %rax,%rdi
 807c3b9:	b8 00 00 00 00       	mov    $0x0,%eax
 807c3be:	e8 2e 45 ff ff       	callq  80708f1 <build_got_entries>
 807c3c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c3c7:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 807c3ce:	00 00 00 
 807c3d1:	48 01 c8             	add    %rcx,%rax
 807c3d4:	8b 08                	mov    (%rax),%ecx
 807c3d6:	85 c9                	test   %ecx,%ecx
 807c3d8:	0f 84 0a 00 00 00    	je     807c3e8 <tcc_relocate_ex+0xc5>
 807c3de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807c3e3:	e9 98 04 00 00       	jmpq   807c880 <tcc_relocate_ex+0x55d>
 807c3e8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807c3ef:	00 00 00 
 807c3f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807c3f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c3fa:	48 89 c1             	mov    %rax,%rcx
 807c3fd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 807c401:	b8 01 00 00 00       	mov    $0x1,%eax
 807c406:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807c409:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c40d:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 807c414:	00 00 00 
 807c417:	48 01 c8             	add    %rcx,%rax
 807c41a:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 807c41d:	8b 10                	mov    (%rax),%edx
 807c41f:	39 d1                	cmp    %edx,%ecx
 807c421:	0f 8d 2d 01 00 00    	jge    807c554 <tcc_relocate_ex+0x231>
 807c427:	e9 0e 00 00 00       	jmpq   807c43a <tcc_relocate_ex+0x117>
 807c42c:	8b 45 cc             	mov    -0x34(%rbp),%eax
 807c42f:	48 89 c1             	mov    %rax,%rcx
 807c432:	83 c0 01             	add    $0x1,%eax
 807c435:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807c438:	eb cf                	jmp    807c409 <tcc_relocate_ex+0xe6>
 807c43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c43e:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 807c445:	00 00 00 
 807c448:	48 01 c8             	add    %rcx,%rax
 807c44b:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 807c44e:	48 63 c9             	movslq %ecx,%rcx
 807c451:	48 89 ca             	mov    %rcx,%rdx
 807c454:	48 c1 e2 03          	shl    $0x3,%rdx
 807c458:	48 8b 08             	mov    (%rax),%rcx
 807c45b:	48 89 d0             	mov    %rdx,%rax
 807c45e:	48 01 c1             	add    %rax,%rcx
 807c461:	48 8b 01             	mov    (%rcx),%rax
 807c464:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807c468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c46c:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 807c473:	00 00 00 
 807c476:	48 01 c8             	add    %rcx,%rax
 807c479:	8b 08                	mov    (%rax),%ecx
 807c47b:	83 e1 02             	and    $0x2,%ecx
 807c47e:	b8 00 00 00 00       	mov    $0x0,%eax
 807c483:	39 c8                	cmp    %ecx,%eax
 807c485:	0f 85 05 00 00 00    	jne    807c490 <tcc_relocate_ex+0x16d>
 807c48b:	e9 9c ff ff ff       	jmpq   807c42c <tcc_relocate_ex+0x109>
 807c490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c494:	48 8b 08             	mov    (%rax),%rcx
 807c497:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 807c49b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c49f:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 807c4a6:	00 00 00 
 807c4a9:	48 01 c8             	add    %rcx,%rax
 807c4ac:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807c4b0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 807c4b4:	48 89 c8             	mov    %rcx,%rax
 807c4b7:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 807c4be:	00 00 00 
 807c4c1:	48 39 c8             	cmp    %rcx,%rax
 807c4c4:	b8 00 00 00 00       	mov    $0x0,%eax
 807c4c9:	0f 95 c0             	setne  %al
 807c4cc:	85 c0                	test   %eax,%eax
 807c4ce:	0f 84 30 00 00 00    	je     807c504 <tcc_relocate_ex+0x1e1>
 807c4d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 807c4d8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 807c4dc:	48 01 c8             	add    %rcx,%rax
 807c4df:	48 89 c1             	mov    %rax,%rcx
 807c4e2:	48 b8 0f 00 00 00 00 	movabs $0xf,%rax
 807c4e9:	00 00 00 
 807c4ec:	48 01 c1             	add    %rax,%rcx
 807c4ef:	48 89 c8             	mov    %rcx,%rax
 807c4f2:	48 b9 f0 ff ff ff ff 	movabs $0xfffffffffffffff0,%rcx
 807c4f9:	ff ff ff 
 807c4fc:	48 21 c8             	and    %rcx,%rax
 807c4ff:	e9 0f 00 00 00       	jmpq   807c513 <tcc_relocate_ex+0x1f0>
 807c504:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807c50b:	00 00 00 
 807c50e:	e9 00 00 00 00       	jmpq   807c513 <tcc_relocate_ex+0x1f0>
 807c513:	48 89 c1             	mov    %rax,%rcx
 807c516:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 807c51a:	48 89 08             	mov    %rcx,(%rax)
 807c51d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c521:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 807c525:	48 01 c8             	add    %rcx,%rax
 807c528:	48 89 c1             	mov    %rax,%rcx
 807c52b:	48 b8 0f 00 00 00 00 	movabs $0xf,%rax
 807c532:	00 00 00 
 807c535:	48 01 c1             	add    %rax,%rcx
 807c538:	48 89 c8             	mov    %rcx,%rax
 807c53b:	48 b9 f0 ff ff ff ff 	movabs $0xfffffffffffffff0,%rcx
 807c542:	ff ff ff 
 807c545:	48 21 c8             	and    %rcx,%rax
 807c548:	48 89 c1             	mov    %rax,%rcx
 807c54b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807c54f:	e9 d8 fe ff ff       	jmpq   807c42c <tcc_relocate_ex+0x109>
 807c554:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c558:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807c55f:	00 00 00 
 807c562:	48 01 c8             	add    %rcx,%rax
 807c565:	48 89 c1             	mov    %rax,%rcx
 807c568:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807c56c:	b8 01 00 00 00       	mov    $0x1,%eax
 807c571:	48 89 c6             	mov    %rax,%rsi
 807c574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c578:	48 89 c7             	mov    %rax,%rdi
 807c57b:	b8 00 00 00 00       	mov    $0x0,%eax
 807c580:	e8 5e 2b ff ff       	callq  806f0e3 <relocate_syms>
 807c585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c589:	48 b9 38 02 00 00 00 	movabs $0x238,%rcx
 807c590:	00 00 00 
 807c593:	48 01 c8             	add    %rcx,%rax
 807c596:	8b 08                	mov    (%rax),%ecx
 807c598:	85 c9                	test   %ecx,%ecx
 807c59a:	0f 84 0a 00 00 00    	je     807c5aa <tcc_relocate_ex+0x287>
 807c5a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807c5a5:	e9 d6 02 00 00       	jmpq   807c880 <tcc_relocate_ex+0x55d>
 807c5aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c5ae:	48 b9 b0 0c 00 00 00 	movabs $0xcb0,%rcx
 807c5b5:	00 00 00 
 807c5b8:	48 01 c8             	add    %rcx,%rax
 807c5bb:	b9 00 00 00 00       	mov    $0x0,%ecx
 807c5c0:	89 08                	mov    %ecx,(%rax)
 807c5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c5c6:	48 b9 a8 0c 00 00 00 	movabs $0xca8,%rcx
 807c5cd:	00 00 00 
 807c5d0:	48 01 c8             	add    %rcx,%rax
 807c5d3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807c5d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 807c5db:	48 01 d1             	add    %rdx,%rcx
 807c5de:	48 89 08             	mov    %rcx,(%rax)
 807c5e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c5e5:	48 c1 e0 01          	shl    $0x1,%rax
 807c5e9:	48 89 c1             	mov    %rax,%rcx
 807c5ec:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807c5f0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807c5f7:	00 00 00 
 807c5fa:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 807c5fe:	48 39 c8             	cmp    %rcx,%rax
 807c601:	0f 85 08 00 00 00    	jne    807c60f <tcc_relocate_ex+0x2ec>
 807c607:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807c60a:	e9 71 02 00 00       	jmpq   807c880 <tcc_relocate_ex+0x55d>
 807c60f:	b8 01 00 00 00       	mov    $0x1,%eax
 807c614:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807c617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c61b:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 807c622:	00 00 00 
 807c625:	48 01 c8             	add    %rcx,%rax
 807c628:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 807c62b:	8b 10                	mov    (%rax),%edx
 807c62d:	39 d1                	cmp    %edx,%ecx
 807c62f:	0f 8d 77 00 00 00    	jge    807c6ac <tcc_relocate_ex+0x389>
 807c635:	e9 0e 00 00 00       	jmpq   807c648 <tcc_relocate_ex+0x325>
 807c63a:	8b 45 cc             	mov    -0x34(%rbp),%eax
 807c63d:	48 89 c1             	mov    %rax,%rcx
 807c640:	83 c0 01             	add    $0x1,%eax
 807c643:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807c646:	eb cf                	jmp    807c617 <tcc_relocate_ex+0x2f4>
 807c648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c64c:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 807c653:	00 00 00 
 807c656:	48 01 c8             	add    %rcx,%rax
 807c659:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 807c65c:	48 63 c9             	movslq %ecx,%rcx
 807c65f:	48 89 ca             	mov    %rcx,%rdx
 807c662:	48 c1 e2 03          	shl    $0x3,%rdx
 807c666:	48 8b 08             	mov    (%rax),%rcx
 807c669:	48 89 d0             	mov    %rdx,%rax
 807c66c:	48 01 c1             	add    %rax,%rcx
 807c66f:	48 8b 01             	mov    (%rcx),%rax
 807c672:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807c676:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c67a:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 807c681:	00 00 00 
 807c684:	48 01 c8             	add    %rcx,%rax
 807c687:	48 8b 08             	mov    (%rax),%rcx
 807c68a:	85 c9                	test   %ecx,%ecx
 807c68c:	0f 84 18 00 00 00    	je     807c6aa <tcc_relocate_ex+0x387>
 807c692:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c696:	48 89 c6             	mov    %rax,%rsi
 807c699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c69d:	48 89 c7             	mov    %rax,%rdi
 807c6a0:	b8 00 00 00 00       	mov    $0x0,%eax
 807c6a5:	e8 ca 2e ff ff       	callq  806f574 <relocate_section>
 807c6aa:	eb 8e                	jmp    807c63a <tcc_relocate_ex+0x317>
 807c6ac:	b8 01 00 00 00       	mov    $0x1,%eax
 807c6b1:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807c6b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c6b8:	48 b9 80 00 00 00 00 	movabs $0x80,%rcx
 807c6bf:	00 00 00 
 807c6c2:	48 01 c8             	add    %rcx,%rax
 807c6c5:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 807c6c8:	8b 10                	mov    (%rax),%edx
 807c6ca:	39 d1                	cmp    %edx,%ecx
 807c6cc:	0f 8d 6a 01 00 00    	jge    807c83c <tcc_relocate_ex+0x519>
 807c6d2:	e9 0e 00 00 00       	jmpq   807c6e5 <tcc_relocate_ex+0x3c2>
 807c6d7:	8b 45 cc             	mov    -0x34(%rbp),%eax
 807c6da:	48 89 c1             	mov    %rax,%rcx
 807c6dd:	83 c0 01             	add    $0x1,%eax
 807c6e0:	89 45 cc             	mov    %eax,-0x34(%rbp)
 807c6e3:	eb cf                	jmp    807c6b4 <tcc_relocate_ex+0x391>
 807c6e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c6e9:	48 b9 78 00 00 00 00 	movabs $0x78,%rcx
 807c6f0:	00 00 00 
 807c6f3:	48 01 c8             	add    %rcx,%rax
 807c6f6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
 807c6f9:	48 63 c9             	movslq %ecx,%rcx
 807c6fc:	48 89 ca             	mov    %rcx,%rdx
 807c6ff:	48 c1 e2 03          	shl    $0x3,%rdx
 807c703:	48 8b 08             	mov    (%rax),%rcx
 807c706:	48 89 d0             	mov    %rdx,%rax
 807c709:	48 01 c1             	add    %rax,%rcx
 807c70c:	48 8b 01             	mov    (%rcx),%rax
 807c70f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807c713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c717:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 807c71e:	00 00 00 
 807c721:	48 01 c8             	add    %rcx,%rax
 807c724:	8b 08                	mov    (%rax),%ecx
 807c726:	83 e1 02             	and    $0x2,%ecx
 807c729:	b8 00 00 00 00       	mov    $0x0,%eax
 807c72e:	39 c8                	cmp    %ecx,%eax
 807c730:	0f 85 05 00 00 00    	jne    807c73b <tcc_relocate_ex+0x418>
 807c736:	e9 9c ff ff ff       	jmpq   807c6d7 <tcc_relocate_ex+0x3b4>
 807c73b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c73f:	48 8b 08             	mov    (%rax),%rcx
 807c742:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
 807c746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c74a:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 807c751:	00 00 00 
 807c754:	48 01 c8             	add    %rcx,%rax
 807c757:	48 8b 08             	mov    (%rax),%rcx
 807c75a:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
 807c75e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c762:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807c769:	00 00 00 
 807c76c:	48 01 c8             	add    %rcx,%rax
 807c76f:	48 8b 08             	mov    (%rax),%rcx
 807c772:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807c779:	00 00 00 
 807c77c:	48 89 ca             	mov    %rcx,%rdx
 807c77f:	48 39 d0             	cmp    %rdx,%rax
 807c782:	0f 84 21 00 00 00    	je     807c7a9 <tcc_relocate_ex+0x486>
 807c788:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c78c:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807c793:	00 00 00 
 807c796:	48 01 c8             	add    %rcx,%rax
 807c799:	8b 08                	mov    (%rax),%ecx
 807c79b:	83 f9 08             	cmp    $0x8,%ecx
 807c79e:	0f 84 05 00 00 00    	je     807c7a9 <tcc_relocate_ex+0x486>
 807c7a4:	e9 27 00 00 00       	jmpq   807c7d0 <tcc_relocate_ex+0x4ad>
 807c7a9:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807c7ac:	49 89 c2             	mov    %rax,%r10
 807c7af:	b8 00 00 00 00       	mov    $0x0,%eax
 807c7b4:	48 89 c6             	mov    %rax,%rsi
 807c7b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c7bb:	48 89 c7             	mov    %rax,%rdi
 807c7be:	4c 89 d2             	mov    %r10,%rdx
 807c7c1:	b8 00 00 00 00       	mov    $0x0,%eax
 807c7c6:	e8 e5 a6 00 00       	callq  8086eb0 <memset>
 807c7cb:	e9 31 00 00 00       	jmpq   807c801 <tcc_relocate_ex+0x4de>
 807c7d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c7d4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807c7db:	00 00 00 
 807c7de:	48 01 c8             	add    %rcx,%rax
 807c7e1:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 807c7e4:	49 89 ca             	mov    %rcx,%r10
 807c7e7:	48 8b 08             	mov    (%rax),%rcx
 807c7ea:	48 89 ce             	mov    %rcx,%rsi
 807c7ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c7f1:	48 89 c7             	mov    %rax,%rdi
 807c7f4:	4c 89 d2             	mov    %r10,%rdx
 807c7f7:	b8 00 00 00 00       	mov    $0x0,%eax
 807c7fc:	e8 6f a4 00 00       	callq  8086c70 <memcpy>
 807c801:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c805:	48 b9 24 00 00 00 00 	movabs $0x24,%rcx
 807c80c:	00 00 00 
 807c80f:	48 01 c8             	add    %rcx,%rax
 807c812:	8b 08                	mov    (%rax),%ecx
 807c814:	83 e1 04             	and    $0x4,%ecx
 807c817:	85 c9                	test   %ecx,%ecx
 807c819:	0f 84 18 00 00 00    	je     807c837 <tcc_relocate_ex+0x514>
 807c81f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 807c823:	48 89 c6             	mov    %rax,%rsi
 807c826:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c82a:	48 89 c7             	mov    %rax,%rdi
 807c82d:	b8 00 00 00 00       	mov    $0x0,%eax
 807c832:	e8 4b 00 00 00       	callq  807c882 <set_pages_executable>
 807c837:	e9 9b fe ff ff       	jmpq   807c6d7 <tcc_relocate_ex+0x3b4>
 807c83c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c840:	48 b9 a8 0c 00 00 00 	movabs $0xca8,%rcx
 807c847:	00 00 00 
 807c84a:	48 01 c8             	add    %rcx,%rax
 807c84d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807c851:	48 ba b0 0c 00 00 00 	movabs $0xcb0,%rdx
 807c858:	00 00 00 
 807c85b:	48 01 d1             	add    %rdx,%rcx
 807c85e:	8b 11                	mov    (%rcx),%edx
 807c860:	48 89 d1             	mov    %rdx,%rcx
 807c863:	48 89 ce             	mov    %rcx,%rsi
 807c866:	48 8b 08             	mov    (%rax),%rcx
 807c869:	48 89 cf             	mov    %rcx,%rdi
 807c86c:	b8 00 00 00 00       	mov    $0x0,%eax
 807c871:	e8 0c 00 00 00       	callq  807c882 <set_pages_executable>
 807c876:	b8 00 00 00 00       	mov    $0x0,%eax
 807c87b:	e9 00 00 00 00       	jmpq   807c880 <tcc_relocate_ex+0x55d>
 807c880:	c9                   	leaveq 
 807c881:	c3                   	retq   

000000000807c882 <set_pages_executable>:
 807c882:	55                   	push   %rbp
 807c883:	48 89 e5             	mov    %rsp,%rbp
 807c886:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807c88d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c891:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807c895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c899:	48 89 c1             	mov    %rax,%rcx
 807c89c:	48 b8 00 f0 ff ff ff 	movabs $0xfffffffffffff000,%rax
 807c8a3:	ff ff ff 
 807c8a6:	48 21 c1             	and    %rax,%rcx
 807c8a9:	48 89 c8             	mov    %rcx,%rax
 807c8ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 807c8b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807c8b4:	48 89 c1             	mov    %rax,%rcx
 807c8b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807c8bb:	48 01 c1             	add    %rax,%rcx
 807c8be:	48 89 c8             	mov    %rcx,%rax
 807c8c1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807c8c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c8c9:	48 b9 00 10 00 00 00 	movabs $0x1000,%rcx
 807c8d0:	00 00 00 
 807c8d3:	48 01 c8             	add    %rcx,%rax
 807c8d6:	48 89 c1             	mov    %rax,%rcx
 807c8d9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
 807c8e0:	00 00 00 
 807c8e3:	48 29 c1             	sub    %rax,%rcx
 807c8e6:	48 89 c8             	mov    %rcx,%rax
 807c8e9:	48 b9 00 f0 ff ff ff 	movabs $0xfffffffffffff000,%rcx
 807c8f0:	ff ff ff 
 807c8f3:	48 21 c8             	and    %rcx,%rax
 807c8f6:	48 89 c1             	mov    %rax,%rcx
 807c8f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807c8fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807c901:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 807c905:	48 29 c8             	sub    %rcx,%rax
 807c908:	b9 07 00 00 00       	mov    $0x7,%ecx
 807c90d:	49 89 ca             	mov    %rcx,%r10
 807c910:	48 89 c6             	mov    %rax,%rsi
 807c913:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807c917:	48 89 c7             	mov    %rax,%rdi
 807c91a:	4c 89 d2             	mov    %r10,%rdx
 807c91d:	b8 00 00 00 00       	mov    $0x0,%eax
 807c922:	e8 29 b4 00 00       	callq  8087d50 <__preinit_array_end+0x2b0>
 807c927:	c9                   	leaveq 
 807c928:	c3                   	retq   

000000000807c929 <tcc_set_num_callers>:
 807c929:	55                   	push   %rbp
 807c92a:	48 89 e5             	mov    %rsp,%rbp
 807c92d:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807c934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c938:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807c93b:	4c 8b 1d 36 17 01 00 	mov    0x11736(%rip),%r11        # 808e078 <_GLOBAL_OFFSET_TABLE_+0x3f8>
 807c942:	41 89 03             	mov    %eax,(%r11)
 807c945:	c9                   	leaveq 
 807c946:	c3                   	retq   

000000000807c947 <rt_printline>:
 807c947:	55                   	push   %rbp
 807c948:	48 89 e5             	mov    %rsp,%rbp
 807c94b:	48 81 ec 90 02 00 00 	sub    $0x290,%rsp
 807c952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807c956:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807c95a:	b8 00 00 00 00       	mov    $0x0,%eax
 807c95f:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
 807c966:	b8 00 00 00 00       	mov    $0x0,%eax
 807c96b:	89 85 9c fd ff ff    	mov    %eax,-0x264(%rbp)
 807c971:	b8 00 00 00 00       	mov    $0x0,%eax
 807c976:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
 807c97d:	48 8b 05 0c 16 01 00 	mov    0x1160c(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 807c984:	48 8b 00             	mov    (%rax),%rax
 807c987:	85 c0                	test   %eax,%eax
 807c989:	0f 84 54 00 00 00    	je     807c9e3 <rt_printline+0x9c>
 807c98f:	48 8b 05 fa 15 01 00 	mov    0x115fa(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 807c996:	48 8b 00             	mov    (%rax),%rax
 807c999:	8b 08                	mov    (%rax),%ecx
 807c99b:	89 8d 9c fd ff ff    	mov    %ecx,-0x264(%rbp)
 807c9a1:	48 8b 05 e8 15 01 00 	mov    0x115e8(%rip),%rax        # 808df90 <_GLOBAL_OFFSET_TABLE_+0x310>
 807c9a8:	48 8b 00             	mov    (%rax),%rax
 807c9ab:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807c9b2:	00 00 00 
 807c9b5:	48 01 c8             	add    %rcx,%rax
 807c9b8:	48 8b 08             	mov    (%rax),%rcx
 807c9bb:	48 89 8d b0 fd ff ff 	mov    %rcx,-0x250(%rbp)
 807c9c2:	48 8b 05 cf 15 01 00 	mov    0x115cf(%rip),%rax        # 808df98 <_GLOBAL_OFFSET_TABLE_+0x318>
 807c9c9:	48 8b 00             	mov    (%rax),%rax
 807c9cc:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807c9d3:	00 00 00 
 807c9d6:	48 01 c8             	add    %rcx,%rax
 807c9d9:	48 8b 08             	mov    (%rax),%rcx
 807c9dc:	48 89 8d 90 fd ff ff 	mov    %rcx,-0x270(%rbp)
 807c9e3:	b8 00 00 00 00       	mov    $0x0,%eax
 807c9e8:	88 85 70 ff ff ff    	mov    %al,-0x90(%rbp)
 807c9ee:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807c9f5:	00 00 00 
 807c9f8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
 807c9ff:	b8 00 00 00 00       	mov    $0x0,%eax
 807ca04:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
 807ca0a:	b8 00 00 00 00       	mov    $0x0,%eax
 807ca0f:	88 85 f0 fe ff ff    	mov    %al,-0x110(%rbp)
 807ca15:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffffff,%rax
 807ca1c:	ff ff ff 
 807ca1f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 807ca26:	b8 01 00 00 00       	mov    $0x1,%eax
 807ca2b:	89 85 cc fd ff ff    	mov    %eax,-0x234(%rbp)
 807ca31:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
 807ca38:	85 c0                	test   %eax,%eax
 807ca3a:	0f 84 05 00 00 00    	je     807ca45 <rt_printline+0xfe>
 807ca40:	e9 05 00 00 00       	jmpq   807ca4a <rt_printline+0x103>
 807ca45:	e9 5c 04 00 00       	jmpq   807cea6 <rt_printline+0x55f>
 807ca4a:	8b 85 9c fd ff ff    	mov    -0x264(%rbp),%eax
 807ca50:	48 63 c0             	movslq %eax,%rax
 807ca53:	48 8b 8d b0 fd ff ff 	mov    -0x250(%rbp),%rcx
 807ca5a:	48 89 c2             	mov    %rax,%rdx
 807ca5d:	48 01 d1             	add    %rdx,%rcx
 807ca60:	48 89 8d a8 fd ff ff 	mov    %rcx,-0x258(%rbp)
 807ca67:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
 807ca6e:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 807ca75:	00 00 00 
 807ca78:	48 01 c8             	add    %rcx,%rax
 807ca7b:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
 807ca82:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807ca89:	48 8b 8d a8 fd ff ff 	mov    -0x258(%rbp),%rcx
 807ca90:	48 89 c2             	mov    %rax,%rdx
 807ca93:	48 89 c8             	mov    %rcx,%rax
 807ca96:	48 39 c2             	cmp    %rax,%rdx
 807ca99:	0f 83 07 04 00 00    	jae    807cea6 <rt_printline+0x55f>
 807ca9f:	e9 1d 00 00 00       	jmpq   807cac1 <rt_printline+0x17a>
 807caa4:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807caab:	48 b9 0c 00 00 00 00 	movabs $0xc,%rcx
 807cab2:	00 00 00 
 807cab5:	48 01 c8             	add    %rcx,%rax
 807cab8:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
 807cabf:	eb c1                	jmp    807ca82 <rt_printline+0x13b>
 807cac1:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807cac8:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807cacf:	00 00 00 
 807cad2:	48 01 c8             	add    %rcx,%rax
 807cad5:	0f b6 08             	movzbl (%rax),%ecx
 807cad8:	e9 05 00 00 00       	jmpq   807cae2 <rt_printline+0x19b>
 807cadd:	e9 09 00 00 00       	jmpq   807caeb <rt_printline+0x1a4>
 807cae2:	83 f9 24             	cmp    $0x24,%ecx
 807cae5:	0f 85 b4 01 00 00    	jne    807cc9f <rt_printline+0x358>
 807caeb:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807caf2:	8b 08                	mov    (%rax),%ecx
 807caf4:	83 f9 00             	cmp    $0x0,%ecx
 807caf7:	0f 85 7b 00 00 00    	jne    807cb78 <rt_printline+0x231>
 807cafd:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807cb04:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807cb0b:	00 00 00 
 807cb0e:	48 01 c8             	add    %rcx,%rax
 807cb11:	8b 08                	mov    (%rax),%ecx
 807cb13:	48 89 c8             	mov    %rcx,%rax
 807cb16:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 807cb1d:	48 01 c8             	add    %rcx,%rax
 807cb20:	48 89 c1             	mov    %rax,%rcx
 807cb23:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
 807cb2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807cb2e:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 807cb35:	48 39 c8             	cmp    %rcx,%rax
 807cb38:	0f 82 19 00 00 00    	jb     807cb57 <rt_printline+0x210>
 807cb3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807cb42:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
 807cb49:	48 39 c8             	cmp    %rcx,%rax
 807cb4c:	0f 83 05 00 00 00    	jae    807cb57 <rt_printline+0x210>
 807cb52:	e9 83 05 00 00       	jmpq   807d0da <rt_printline+0x793>
 807cb57:	b8 00 00 00 00       	mov    $0x0,%eax
 807cb5c:	88 85 70 ff ff ff    	mov    %al,-0x90(%rbp)
 807cb62:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807cb69:	00 00 00 
 807cb6c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
 807cb73:	e9 1d 01 00 00       	jmpq   807cc95 <rt_printline+0x34e>
 807cb78:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807cb7f:	8b 08                	mov    (%rax),%ecx
 807cb81:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 807cb88:	48 89 ca             	mov    %rcx,%rdx
 807cb8b:	48 01 d0             	add    %rdx,%rax
 807cb8e:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
 807cb95:	b8 3a 00 00 00       	mov    $0x3a,%eax
 807cb9a:	48 89 c6             	mov    %rax,%rsi
 807cb9d:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 807cba4:	48 89 c7             	mov    %rax,%rdi
 807cba7:	b8 00 00 00 00       	mov    $0x0,%eax
 807cbac:	e8 8f a4 00 00       	callq  8087040 <strchr>
 807cbb1:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
 807cbb8:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
 807cbbf:	85 c0                	test   %eax,%eax
 807cbc1:	0f 84 05 00 00 00    	je     807cbcc <rt_printline+0x285>
 807cbc7:	e9 2e 00 00 00       	jmpq   807cbfa <rt_printline+0x2b3>
 807cbcc:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 807cbd3:	49 89 c2             	mov    %rax,%r10
 807cbd6:	b8 80 00 00 00       	mov    $0x80,%eax
 807cbdb:	48 89 c6             	mov    %rax,%rsi
 807cbde:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 807cbe5:	48 89 c7             	mov    %rax,%rdi
 807cbe8:	4c 89 d2             	mov    %r10,%rdx
 807cbeb:	b8 00 00 00 00       	mov    $0x0,%eax
 807cbf0:	e8 ae f0 fc ff       	callq  804bca3 <pstrcpy>
 807cbf5:	e9 7b 00 00 00       	jmpq   807cc75 <rt_printline+0x32e>
 807cbfa:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
 807cc01:	48 8b 8d c0 fd ff ff 	mov    -0x240(%rbp),%rcx
 807cc08:	48 29 c8             	sub    %rcx,%rax
 807cc0b:	48 89 c1             	mov    %rax,%rcx
 807cc0e:	89 8d d0 fd ff ff    	mov    %ecx,-0x230(%rbp)
 807cc14:	8b 85 d0 fd ff ff    	mov    -0x230(%rbp),%eax
 807cc1a:	83 f8 7f             	cmp    $0x7f,%eax
 807cc1d:	0f 86 0b 00 00 00    	jbe    807cc2e <rt_printline+0x2e7>
 807cc23:	b8 7f 00 00 00       	mov    $0x7f,%eax
 807cc28:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%rbp)
 807cc2e:	8b 85 d0 fd ff ff    	mov    -0x230(%rbp),%eax
 807cc34:	49 89 c2             	mov    %rax,%r10
 807cc37:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 807cc3e:	48 89 c6             	mov    %rax,%rsi
 807cc41:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 807cc48:	48 89 c7             	mov    %rax,%rdi
 807cc4b:	4c 89 d2             	mov    %r10,%rdx
 807cc4e:	b8 00 00 00 00       	mov    $0x0,%eax
 807cc53:	e8 18 a0 00 00       	callq  8086c70 <memcpy>
 807cc58:	8b 85 d0 fd ff ff    	mov    -0x230(%rbp),%eax
 807cc5e:	48 63 c0             	movslq %eax,%rax
 807cc61:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
 807cc68:	48 89 c2             	mov    %rax,%rdx
 807cc6b:	48 01 d1             	add    %rdx,%rcx
 807cc6e:	b8 00 00 00 00       	mov    $0x0,%eax
 807cc73:	88 01                	mov    %al,(%rcx)
 807cc75:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807cc7c:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807cc83:	00 00 00 
 807cc86:	48 01 c8             	add    %rcx,%rax
 807cc89:	8b 08                	mov    (%rax),%ecx
 807cc8b:	48 89 c8             	mov    %rcx,%rax
 807cc8e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
 807cc95:	e9 07 02 00 00       	jmpq   807cea1 <rt_printline+0x55a>
 807cc9a:	e9 09 00 00 00       	jmpq   807cca8 <rt_printline+0x361>
 807cc9f:	83 f9 44             	cmp    $0x44,%ecx
 807cca2:	0f 85 ad 00 00 00    	jne    807cd55 <rt_printline+0x40e>
 807cca8:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807ccaf:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807ccb6:	00 00 00 
 807ccb9:	48 01 c8             	add    %rcx,%rax
 807ccbc:	8b 08                	mov    (%rax),%ecx
 807ccbe:	48 89 c8             	mov    %rcx,%rax
 807ccc1:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
 807ccc8:	48 01 c8             	add    %rcx,%rax
 807cccb:	48 89 c1             	mov    %rax,%rcx
 807ccce:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
 807ccd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ccd9:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
 807cce0:	48 39 c8             	cmp    %rcx,%rax
 807cce3:	0f 82 19 00 00 00    	jb     807cd02 <rt_printline+0x3bb>
 807cce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807cced:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
 807ccf4:	48 39 c8             	cmp    %rcx,%rax
 807ccf7:	0f 83 05 00 00 00    	jae    807cd02 <rt_printline+0x3bb>
 807ccfd:	e9 d8 03 00 00       	jmpq   807d0da <rt_printline+0x793>
 807cd02:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 807cd09:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 807cd10:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807cd17:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 807cd1e:	00 00 00 
 807cd21:	48 01 c8             	add    %rcx,%rax
 807cd24:	0f b7 08             	movzwl (%rax),%ecx
 807cd27:	89 8d cc fd ff ff    	mov    %ecx,-0x234(%rbp)
 807cd2d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 807cd34:	48 89 c6             	mov    %rax,%rsi
 807cd37:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 807cd3e:	48 89 c7             	mov    %rax,%rdi
 807cd41:	b8 00 00 00 00       	mov    $0x0,%eax
 807cd46:	e8 15 a5 00 00       	callq  8087260 <strcpy>
 807cd4b:	e9 51 01 00 00       	jmpq   807cea1 <rt_printline+0x55a>
 807cd50:	e9 0c 00 00 00       	jmpq   807cd61 <rt_printline+0x41a>
 807cd55:	81 f9 82 00 00 00    	cmp    $0x82,%ecx
 807cd5b:	0f 85 69 00 00 00    	jne    807cdca <rt_printline+0x483>
 807cd61:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807cd68:	8b 08                	mov    (%rax),%ecx
 807cd6a:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 807cd71:	48 89 ca             	mov    %rcx,%rdx
 807cd74:	48 01 d0             	add    %rdx,%rax
 807cd77:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
 807cd7e:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
 807cd84:	83 f8 20             	cmp    $0x20,%eax
 807cd87:	0f 8d 33 00 00 00    	jge    807cdc0 <rt_printline+0x479>
 807cd8d:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
 807cd93:	48 89 c1             	mov    %rax,%rcx
 807cd96:	83 c0 01             	add    $0x1,%eax
 807cd99:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
 807cd9f:	48 63 c9             	movslq %ecx,%rcx
 807cda2:	48 89 c8             	mov    %rcx,%rax
 807cda5:	48 c1 e0 03          	shl    $0x3,%rax
 807cda9:	48 8d 8d d8 fd ff ff 	lea    -0x228(%rbp),%rcx
 807cdb0:	48 89 c2             	mov    %rax,%rdx
 807cdb3:	48 01 d1             	add    %rdx,%rcx
 807cdb6:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 807cdbd:	48 89 01             	mov    %rax,(%rcx)
 807cdc0:	e9 dc 00 00 00       	jmpq   807cea1 <rt_printline+0x55a>
 807cdc5:	e9 0c 00 00 00       	jmpq   807cdd6 <rt_printline+0x48f>
 807cdca:	81 f9 a2 00 00 00    	cmp    $0xa2,%ecx
 807cdd0:	0f 85 2b 00 00 00    	jne    807ce01 <rt_printline+0x4ba>
 807cdd6:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
 807cddc:	83 f8 01             	cmp    $0x1,%eax
 807cddf:	0f 8e 12 00 00 00    	jle    807cdf7 <rt_printline+0x4b0>
 807cde5:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
 807cdeb:	48 89 c1             	mov    %rax,%rcx
 807cdee:	83 c0 ff             	add    $0xffffffff,%eax
 807cdf1:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
 807cdf7:	e9 a5 00 00 00       	jmpq   807cea1 <rt_printline+0x55a>
 807cdfc:	e9 09 00 00 00       	jmpq   807ce0a <rt_printline+0x4c3>
 807ce01:	83 f9 64             	cmp    $0x64,%ecx
 807ce04:	0f 85 97 00 00 00    	jne    807cea1 <rt_printline+0x55a>
 807ce0a:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807ce11:	8b 08                	mov    (%rax),%ecx
 807ce13:	83 f9 00             	cmp    $0x0,%ecx
 807ce16:	0f 85 10 00 00 00    	jne    807ce2c <rt_printline+0x4e5>
 807ce1c:	b8 00 00 00 00       	mov    $0x0,%eax
 807ce21:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
 807ce27:	e9 70 00 00 00       	jmpq   807ce9c <rt_printline+0x555>
 807ce2c:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 807ce33:	8b 08                	mov    (%rax),%ecx
 807ce35:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 807ce3c:	48 89 ca             	mov    %rcx,%rdx
 807ce3f:	48 01 d0             	add    %rdx,%rax
 807ce42:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
 807ce49:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 807ce50:	48 89 c7             	mov    %rax,%rdi
 807ce53:	b8 00 00 00 00       	mov    $0x0,%eax
 807ce58:	e8 83 a4 00 00       	callq  80872e0 <strlen>
 807ce5d:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%rbp)
 807ce63:	8b 85 d0 fd ff ff    	mov    -0x230(%rbp),%eax
 807ce69:	83 f8 00             	cmp    $0x0,%eax
 807ce6c:	0f 8e 2a 00 00 00    	jle    807ce9c <rt_printline+0x555>
 807ce72:	8b 85 d0 fd ff ff    	mov    -0x230(%rbp),%eax
 807ce78:	83 e8 01             	sub    $0x1,%eax
 807ce7b:	48 63 c0             	movslq %eax,%rax
 807ce7e:	48 8b 8d c0 fd ff ff 	mov    -0x240(%rbp),%rcx
 807ce85:	48 89 c2             	mov    %rax,%rdx
 807ce88:	48 01 d1             	add    %rdx,%rcx
 807ce8b:	0f be 01             	movsbl (%rcx),%eax
 807ce8e:	83 f8 2f             	cmp    $0x2f,%eax
 807ce91:	0f 84 05 00 00 00    	je     807ce9c <rt_printline+0x555>
 807ce97:	e9 e2 fe ff ff       	jmpq   807cd7e <rt_printline+0x437>
 807ce9c:	e9 00 00 00 00       	jmpq   807cea1 <rt_printline+0x55a>
 807cea1:	e9 fe fb ff ff       	jmpq   807caa4 <rt_printline+0x15d>
 807cea6:	b8 00 00 00 00       	mov    $0x0,%eax
 807ceab:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
 807ceb1:	48 8b 05 e0 0f 01 00 	mov    0x10fe0(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807ceb8:	48 8b 00             	mov    (%rax),%rax
 807cebb:	85 c0                	test   %eax,%eax
 807cebd:	0f 84 bc 01 00 00    	je     807d07f <rt_printline+0x738>
 807cec3:	48 8b 05 ce 0f 01 00 	mov    0x10fce(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807ceca:	48 8b 00             	mov    (%rax),%rax
 807cecd:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807ced4:	00 00 00 
 807ced7:	48 01 c8             	add    %rcx,%rax
 807ceda:	48 8b 0d b7 0f 01 00 	mov    0x10fb7(%rip),%rcx        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807cee1:	48 8b 09             	mov    (%rcx),%rcx
 807cee4:	48 8b 10             	mov    (%rax),%rdx
 807cee7:	48 8b 01             	mov    (%rcx),%rax
 807ceea:	48 01 c2             	add    %rax,%rdx
 807ceed:	48 89 95 80 fd ff ff 	mov    %rdx,-0x280(%rbp)
 807cef4:	48 8b 05 9d 0f 01 00 	mov    0x10f9d(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807cefb:	48 8b 00             	mov    (%rax),%rax
 807cefe:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807cf05:	00 00 00 
 807cf08:	48 01 c8             	add    %rcx,%rax
 807cf0b:	48 8b 08             	mov    (%rax),%rcx
 807cf0e:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 807cf15:	00 00 00 
 807cf18:	48 01 c1             	add    %rax,%rcx
 807cf1b:	48 89 8d 88 fd ff ff 	mov    %rcx,-0x278(%rbp)
 807cf22:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 807cf29:	48 8b 8d 80 fd ff ff 	mov    -0x280(%rbp),%rcx
 807cf30:	48 89 c2             	mov    %rax,%rdx
 807cf33:	48 89 c8             	mov    %rcx,%rax
 807cf36:	48 39 c2             	cmp    %rax,%rdx
 807cf39:	0f 83 40 01 00 00    	jae    807d07f <rt_printline+0x738>
 807cf3f:	e9 20 00 00 00       	jmpq   807cf64 <rt_printline+0x61d>
 807cf44:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 807cf4b:	48 89 c1             	mov    %rax,%rcx
 807cf4e:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 807cf55:	00 00 00 
 807cf58:	48 01 d0             	add    %rdx,%rax
 807cf5b:	48 89 85 88 fd ff ff 	mov    %rax,-0x278(%rbp)
 807cf62:	eb be                	jmp    807cf22 <rt_printline+0x5db>
 807cf64:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 807cf6b:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 807cf72:	00 00 00 
 807cf75:	48 01 c8             	add    %rcx,%rax
 807cf78:	0f b6 08             	movzbl (%rax),%ecx
 807cf7b:	83 e1 0f             	and    $0xf,%ecx
 807cf7e:	89 8d 7c fd ff ff    	mov    %ecx,-0x284(%rbp)
 807cf84:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
 807cf8a:	83 f8 02             	cmp    $0x2,%eax
 807cf8d:	0f 84 14 00 00 00    	je     807cfa7 <rt_printline+0x660>
 807cf93:	8b 85 7c fd ff ff    	mov    -0x284(%rbp),%eax
 807cf99:	83 f8 0a             	cmp    $0xa,%eax
 807cf9c:	0f 84 05 00 00 00    	je     807cfa7 <rt_printline+0x660>
 807cfa2:	e9 d3 00 00 00       	jmpq   807d07a <rt_printline+0x733>
 807cfa7:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 807cfae:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807cfb5:	00 00 00 
 807cfb8:	48 01 c8             	add    %rcx,%rax
 807cfbb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807cfbf:	48 8b 10             	mov    (%rax),%rdx
 807cfc2:	48 39 d1             	cmp    %rdx,%rcx
 807cfc5:	0f 82 af 00 00 00    	jb     807d07a <rt_printline+0x733>
 807cfcb:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 807cfd2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807cfd9:	00 00 00 
 807cfdc:	48 01 c8             	add    %rcx,%rax
 807cfdf:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
 807cfe6:	48 ba 10 00 00 00 00 	movabs $0x10,%rdx
 807cfed:	00 00 00 
 807cff0:	48 01 d1             	add    %rdx,%rcx
 807cff3:	48 8b 10             	mov    (%rax),%rdx
 807cff6:	48 8b 01             	mov    (%rcx),%rax
 807cff9:	48 01 c2             	add    %rax,%rdx
 807cffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807d000:	48 89 d1             	mov    %rdx,%rcx
 807d003:	48 39 c8             	cmp    %rcx,%rax
 807d006:	0f 83 6e 00 00 00    	jae    807d07a <rt_printline+0x733>
 807d00c:	48 8b 05 75 0f 01 00 	mov    0x10f75(%rip),%rax        # 808df88 <_GLOBAL_OFFSET_TABLE_+0x308>
 807d013:	48 8b 00             	mov    (%rax),%rax
 807d016:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807d01d:	00 00 00 
 807d020:	48 01 c8             	add    %rcx,%rax
 807d023:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
 807d02a:	8b 11                	mov    (%rcx),%edx
 807d02c:	48 8b 08             	mov    (%rax),%rcx
 807d02f:	48 89 d0             	mov    %rdx,%rax
 807d032:	48 01 c1             	add    %rax,%rcx
 807d035:	49 89 ca             	mov    %rcx,%r10
 807d038:	b8 80 00 00 00       	mov    $0x80,%eax
 807d03d:	48 89 c6             	mov    %rax,%rsi
 807d040:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 807d047:	48 89 c7             	mov    %rax,%rdi
 807d04a:	4c 89 d2             	mov    %r10,%rdx
 807d04d:	b8 00 00 00 00       	mov    $0x0,%eax
 807d052:	e8 4c ec fc ff       	callq  804bca3 <pstrcpy>
 807d057:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 807d05e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807d065:	00 00 00 
 807d068:	48 01 c8             	add    %rcx,%rax
 807d06b:	48 8b 08             	mov    (%rax),%rcx
 807d06e:	48 89 8d e8 fe ff ff 	mov    %rcx,-0x118(%rbp)
 807d075:	e9 60 00 00 00       	jmpq   807d0da <rt_printline+0x793>
 807d07a:	e9 c5 fe ff ff       	jmpq   807cf44 <rt_printline+0x5fd>
 807d07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807d083:	49 89 c3             	mov    %rax,%r11
 807d086:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807d08a:	49 89 c2             	mov    %rax,%r10
 807d08d:	48 8d 05 19 fb 00 00 	lea    0xfb19(%rip),%rax        # 808cbad <L.108>
 807d094:	48 89 c6             	mov    %rax,%rsi
 807d097:	48 8b 05 0a 0e 01 00 	mov    0x10e0a(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d09e:	48 8b 00             	mov    (%rax),%rax
 807d0a1:	48 89 c7             	mov    %rax,%rdi
 807d0a4:	4c 89 d2             	mov    %r10,%rdx
 807d0a7:	4c 89 d9             	mov    %r11,%rcx
 807d0aa:	b8 00 00 00 00       	mov    $0x0,%eax
 807d0af:	e8 bc aa 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d0b4:	48 8b 05 ed 0d 01 00 	mov    0x10ded(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d0bb:	48 8b 00             	mov    (%rax),%rax
 807d0be:	48 89 c7             	mov    %rax,%rdi
 807d0c1:	b8 00 00 00 00       	mov    $0x0,%eax
 807d0c6:	e8 15 aa 00 00       	callq  8087ae0 <__preinit_array_end+0x40>
 807d0cb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 807d0d2:	00 00 00 
 807d0d5:	e9 12 02 00 00       	jmpq   807d2ec <rt_printline+0x9a5>
 807d0da:	8b 85 d4 fd ff ff    	mov    -0x22c(%rbp),%eax
 807d0e0:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%rbp)
 807d0e6:	8b 85 c8 fd ff ff    	mov    -0x238(%rbp),%eax
 807d0ec:	83 f8 00             	cmp    $0x0,%eax
 807d0ef:	0f 8e 5c 00 00 00    	jle    807d151 <rt_printline+0x80a>
 807d0f5:	8b 85 c8 fd ff ff    	mov    -0x238(%rbp),%eax
 807d0fb:	83 c0 ff             	add    $0xffffffff,%eax
 807d0fe:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%rbp)
 807d104:	48 63 c0             	movslq %eax,%rax
 807d107:	48 89 c1             	mov    %rax,%rcx
 807d10a:	48 c1 e1 03          	shl    $0x3,%rcx
 807d10e:	48 8d 85 d8 fd ff ff 	lea    -0x228(%rbp),%rax
 807d115:	48 89 ca             	mov    %rcx,%rdx
 807d118:	48 01 d0             	add    %rdx,%rax
 807d11b:	8b 8d cc fd ff ff    	mov    -0x234(%rbp),%ecx
 807d121:	49 89 cb             	mov    %rcx,%r11
 807d124:	48 8b 08             	mov    (%rax),%rcx
 807d127:	49 89 ca             	mov    %rcx,%r10
 807d12a:	48 8d 05 87 fa 00 00 	lea    0xfa87(%rip),%rax        # 808cbb8 <L.109>
 807d131:	48 89 c6             	mov    %rax,%rsi
 807d134:	48 8b 05 6d 0d 01 00 	mov    0x10d6d(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d13b:	48 8b 00             	mov    (%rax),%rax
 807d13e:	48 89 c7             	mov    %rax,%rdi
 807d141:	4c 89 d2             	mov    %r10,%rdx
 807d144:	4c 89 d9             	mov    %r11,%rcx
 807d147:	b8 00 00 00 00       	mov    $0x0,%eax
 807d14c:	e8 1f aa 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807d155:	49 89 c3             	mov    %rax,%r11
 807d158:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807d15c:	49 89 c2             	mov    %rax,%r10
 807d15f:	48 8d 05 5a fa 00 00 	lea    0xfa5a(%rip),%rax        # 808cbc0 <L.110>
 807d166:	48 89 c6             	mov    %rax,%rsi
 807d169:	48 8b 05 38 0d 01 00 	mov    0x10d38(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d170:	48 8b 00             	mov    (%rax),%rax
 807d173:	48 89 c7             	mov    %rax,%rdi
 807d176:	4c 89 d2             	mov    %r10,%rdx
 807d179:	4c 89 d9             	mov    %r11,%rcx
 807d17c:	b8 00 00 00 00       	mov    $0x0,%eax
 807d181:	e8 ea a9 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d186:	0f be 85 f0 fe ff ff 	movsbl -0x110(%rbp),%eax
 807d18d:	83 f8 00             	cmp    $0x0,%eax
 807d190:	0f 84 2e 00 00 00    	je     807d1c4 <rt_printline+0x87d>
 807d196:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 807d19d:	49 89 c2             	mov    %rax,%r10
 807d1a0:	48 8d 05 1f fa 00 00 	lea    0xfa1f(%rip),%rax        # 808cbc6 <L.111>
 807d1a7:	48 89 c6             	mov    %rax,%rsi
 807d1aa:	48 8b 05 f7 0c 01 00 	mov    0x10cf7(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d1b1:	48 8b 00             	mov    (%rax),%rax
 807d1b4:	48 89 c7             	mov    %rax,%rdi
 807d1b7:	4c 89 d2             	mov    %r10,%rdx
 807d1ba:	b8 00 00 00 00       	mov    $0x0,%eax
 807d1bf:	e8 ac a9 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d1c4:	8b 85 c8 fd ff ff    	mov    -0x238(%rbp),%eax
 807d1ca:	83 c0 ff             	add    $0xffffffff,%eax
 807d1cd:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%rbp)
 807d1d3:	83 f8 00             	cmp    $0x0,%eax
 807d1d6:	0f 8c cc 00 00 00    	jl     807d2a8 <rt_printline+0x961>
 807d1dc:	48 8d 05 e9 f9 00 00 	lea    0xf9e9(%rip),%rax        # 808cbcc <L.112>
 807d1e3:	48 89 c6             	mov    %rax,%rsi
 807d1e6:	48 8b 05 bb 0c 01 00 	mov    0x10cbb(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d1ed:	48 8b 00             	mov    (%rax),%rax
 807d1f0:	48 89 c7             	mov    %rax,%rdi
 807d1f3:	b8 00 00 00 00       	mov    $0x0,%eax
 807d1f8:	e8 73 a9 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d1fd:	8b 85 c8 fd ff ff    	mov    -0x238(%rbp),%eax
 807d203:	48 63 c0             	movslq %eax,%rax
 807d206:	48 89 c1             	mov    %rax,%rcx
 807d209:	48 c1 e1 03          	shl    $0x3,%rcx
 807d20d:	48 8d 85 d8 fd ff ff 	lea    -0x228(%rbp),%rax
 807d214:	48 89 ca             	mov    %rcx,%rdx
 807d217:	48 01 d0             	add    %rdx,%rax
 807d21a:	48 8b 08             	mov    (%rax),%rcx
 807d21d:	49 89 ca             	mov    %rcx,%r10
 807d220:	48 8d 05 b6 f9 00 00 	lea    0xf9b6(%rip),%rax        # 808cbdd <L.113>
 807d227:	48 89 c6             	mov    %rax,%rsi
 807d22a:	48 8b 05 77 0c 01 00 	mov    0x10c77(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d231:	48 8b 00             	mov    (%rax),%rax
 807d234:	48 89 c7             	mov    %rax,%rdi
 807d237:	4c 89 d2             	mov    %r10,%rdx
 807d23a:	b8 00 00 00 00       	mov    $0x0,%eax
 807d23f:	e8 2c a9 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d244:	8b 85 c8 fd ff ff    	mov    -0x238(%rbp),%eax
 807d24a:	83 c0 ff             	add    $0xffffffff,%eax
 807d24d:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%rbp)
 807d253:	83 f8 00             	cmp    $0x0,%eax
 807d256:	0f 8d 05 00 00 00    	jge    807d261 <rt_printline+0x91a>
 807d25c:	e9 26 00 00 00       	jmpq   807d287 <rt_printline+0x940>
 807d261:	48 8d 05 78 f9 00 00 	lea    0xf978(%rip),%rax        # 808cbe0 <L.114>
 807d268:	48 89 c6             	mov    %rax,%rsi
 807d26b:	48 8b 05 36 0c 01 00 	mov    0x10c36(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d272:	48 8b 00             	mov    (%rax),%rax
 807d275:	48 89 c7             	mov    %rax,%rdi
 807d278:	b8 00 00 00 00       	mov    $0x0,%eax
 807d27d:	e8 ee a8 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d282:	e9 76 ff ff ff       	jmpq   807d1fd <rt_printline+0x8b6>
 807d287:	48 8d 05 55 f9 00 00 	lea    0xf955(%rip),%rax        # 808cbe3 <L.115>
 807d28e:	48 89 c6             	mov    %rax,%rsi
 807d291:	48 8b 05 10 0c 01 00 	mov    0x10c10(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d298:	48 8b 00             	mov    (%rax),%rax
 807d29b:	48 89 c7             	mov    %rax,%rdi
 807d29e:	b8 00 00 00 00       	mov    $0x0,%eax
 807d2a3:	e8 c8 a8 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d2a8:	48 8d 05 36 f9 00 00 	lea    0xf936(%rip),%rax        # 808cbe5 <L.116>
 807d2af:	48 89 c6             	mov    %rax,%rsi
 807d2b2:	48 8b 05 ef 0b 01 00 	mov    0x10bef(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d2b9:	48 8b 00             	mov    (%rax),%rax
 807d2bc:	48 89 c7             	mov    %rax,%rdi
 807d2bf:	b8 00 00 00 00       	mov    $0x0,%eax
 807d2c4:	e8 a7 a8 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d2c9:	48 8b 05 d8 0b 01 00 	mov    0x10bd8(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d2d0:	48 8b 00             	mov    (%rax),%rax
 807d2d3:	48 89 c7             	mov    %rax,%rdi
 807d2d6:	b8 00 00 00 00       	mov    $0x0,%eax
 807d2db:	e8 00 a8 00 00       	callq  8087ae0 <__preinit_array_end+0x40>
 807d2e0:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 807d2e7:	e9 00 00 00 00       	jmpq   807d2ec <rt_printline+0x9a5>
 807d2ec:	c9                   	leaveq 
 807d2ed:	c3                   	retq   

000000000807d2ee <rt_error>:
 807d2ee:	55                   	push   %rbp
 807d2ef:	48 89 e5             	mov    %rsp,%rbp
 807d2f2:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
 807d2f9:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%rbp)
 807d300:	c7 45 f4 30 00 00 00 	movl   $0x30,-0xc(%rbp)
 807d307:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
 807d30e:	66 0f d6 7d e0       	movq   %xmm7,-0x20(%rbp)
 807d313:	48 c7 85 e8 ff ff ff 	movq   $0x0,-0x18(%rbp)
 807d31a:	00 00 00 00 
 807d31e:	66 0f d6 75 d0       	movq   %xmm6,-0x30(%rbp)
 807d323:	48 c7 85 d8 ff ff ff 	movq   $0x0,-0x28(%rbp)
 807d32a:	00 00 00 00 
 807d32e:	66 0f d6 6d c0       	movq   %xmm5,-0x40(%rbp)
 807d333:	48 c7 85 c8 ff ff ff 	movq   $0x0,-0x38(%rbp)
 807d33a:	00 00 00 00 
 807d33e:	66 0f d6 65 b0       	movq   %xmm4,-0x50(%rbp)
 807d343:	48 c7 85 b8 ff ff ff 	movq   $0x0,-0x48(%rbp)
 807d34a:	00 00 00 00 
 807d34e:	66 0f d6 5d a0       	movq   %xmm3,-0x60(%rbp)
 807d353:	48 c7 85 a8 ff ff ff 	movq   $0x0,-0x58(%rbp)
 807d35a:	00 00 00 00 
 807d35e:	66 0f d6 55 90       	movq   %xmm2,-0x70(%rbp)
 807d363:	48 c7 85 98 ff ff ff 	movq   $0x0,-0x68(%rbp)
 807d36a:	00 00 00 00 
 807d36e:	66 0f d6 4d 80       	movq   %xmm1,-0x80(%rbp)
 807d373:	48 c7 85 88 ff ff ff 	movq   $0x0,-0x78(%rbp)
 807d37a:	00 00 00 00 
 807d37e:	66 0f d6 85 70 ff ff 	movq   %xmm0,-0x90(%rbp)
 807d385:	ff 
 807d386:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
 807d38d:	00 00 00 00 
 807d391:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
 807d398:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
 807d39f:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
 807d3a6:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
 807d3ad:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
 807d3b4:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
 807d3bb:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
 807d3c2:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
 807d3c9:	48 8d 05 17 f8 00 00 	lea    0xf817(%rip),%rax        # 808cbe7 <L.117>
 807d3d0:	48 89 c6             	mov    %rax,%rsi
 807d3d3:	48 8b 05 ce 0a 01 00 	mov    0x10ace(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d3da:	48 8b 00             	mov    (%rax),%rax
 807d3dd:	48 89 c7             	mov    %rax,%rdi
 807d3e0:	b8 00 00 00 00       	mov    $0x0,%eax
 807d3e5:	e8 86 a7 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d3ea:	b8 18 00 00 00       	mov    $0x18,%eax
 807d3ef:	48 89 c7             	mov    %rax,%rdi
 807d3f2:	b8 00 00 00 00       	mov    $0x0,%eax
 807d3f7:	e8 34 a7 00 00       	callq  8087b30 <__preinit_array_end+0x90>
 807d3fc:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 807d403:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807d40a:	b9 18 00 00 00       	mov    $0x18,%ecx
 807d40f:	49 89 ca             	mov    %rcx,%r10
 807d412:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 807d416:	48 89 ce             	mov    %rcx,%rsi
 807d419:	48 89 c7             	mov    %rax,%rdi
 807d41c:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 807d423:	4c 89 d2             	mov    %r10,%rdx
 807d426:	b8 00 00 00 00       	mov    $0x0,%eax
 807d42b:	e8 40 98 00 00       	callq  8086c70 <memcpy>
 807d430:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807d437:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807d43e:	00 00 00 
 807d441:	48 01 c8             	add    %rcx,%rax
 807d444:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
 807d44b:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 807d452:	00 00 00 
 807d455:	48 01 d1             	add    %rdx,%rcx
 807d458:	8b 11                	mov    (%rcx),%edx
 807d45a:	48 8d 4d 00          	lea    0x0(%rbp),%rcx
 807d45e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
 807d465:	48 89 d0             	mov    %rdx,%rax
 807d468:	48 01 c1             	add    %rax,%rcx
 807d46b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 807d472:	48 89 08             	mov    %rcx,(%rax)
 807d475:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807d47c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807d483:	00 00 00 
 807d486:	48 01 c8             	add    %rcx,%rax
 807d489:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
 807d490:	48 89 08             	mov    %rcx,(%rax)
 807d493:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807d49a:	49 89 c2             	mov    %rax,%r10
 807d49d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 807d4a4:	48 89 c6             	mov    %rax,%rsi
 807d4a7:	48 8b 05 fa 09 01 00 	mov    0x109fa(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d4ae:	48 8b 00             	mov    (%rax),%rax
 807d4b1:	48 89 c7             	mov    %rax,%rdi
 807d4b4:	4c 89 d2             	mov    %r10,%rdx
 807d4b7:	b8 00 00 00 00       	mov    $0x0,%eax
 807d4bc:	e8 9f a8 00 00       	callq  8087d60 <__preinit_array_end+0x2c0>
 807d4c1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 807d4c8:	48 89 c7             	mov    %rax,%rdi
 807d4cb:	b8 00 00 00 00       	mov    $0x0,%eax
 807d4d0:	e8 4b a6 00 00       	callq  8087b20 <__preinit_array_end+0x80>
 807d4d5:	48 8d 05 1b f7 00 00 	lea    0xf71b(%rip),%rax        # 808cbf7 <L.118>
 807d4dc:	48 89 c6             	mov    %rax,%rsi
 807d4df:	48 8b 05 c2 09 01 00 	mov    0x109c2(%rip),%rax        # 808dea8 <_GLOBAL_OFFSET_TABLE_+0x228>
 807d4e6:	48 8b 00             	mov    (%rax),%rax
 807d4e9:	48 89 c7             	mov    %rax,%rdi
 807d4ec:	b8 00 00 00 00       	mov    $0x0,%eax
 807d4f1:	e8 7a a6 00 00       	callq  8087b70 <__preinit_array_end+0xd0>
 807d4f6:	b8 00 00 00 00       	mov    $0x0,%eax
 807d4fb:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
 807d501:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
 807d507:	48 8b 0d 6a 0b 01 00 	mov    0x10b6a(%rip),%rcx        # 808e078 <_GLOBAL_OFFSET_TABLE_+0x3f8>
 807d50e:	8b 09                	mov    (%rcx),%ecx
 807d510:	39 c8                	cmp    %ecx,%eax
 807d512:	0f 8d e0 00 00 00    	jge    807d5f8 <rt_error+0x30a>
 807d518:	e9 14 00 00 00       	jmpq   807d531 <rt_error+0x243>
 807d51d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
 807d523:	48 89 c1             	mov    %rax,%rcx
 807d526:	83 c0 01             	add    $0x1,%eax
 807d529:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
 807d52f:	eb d0                	jmp    807d501 <rt_error+0x213>
 807d531:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
 807d537:	49 89 c2             	mov    %rax,%r10
 807d53a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 807d541:	48 89 c6             	mov    %rax,%rsi
 807d544:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 807d54b:	48 89 c7             	mov    %rax,%rdi
 807d54e:	4c 89 d2             	mov    %r10,%rdx
 807d551:	b8 00 00 00 00       	mov    $0x0,%eax
 807d556:	e8 69 03 00 00       	callq  807d8c4 <rt_get_caller_pc>
 807d55b:	83 f8 00             	cmp    $0x0,%eax
 807d55e:	0f 8d 05 00 00 00    	jge    807d569 <rt_error+0x27b>
 807d564:	e9 8f 00 00 00       	jmpq   807d5f8 <rt_error+0x30a>
 807d569:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
 807d56f:	85 c0                	test   %eax,%eax
 807d571:	0f 84 05 00 00 00    	je     807d57c <rt_error+0x28e>
 807d577:	e9 0c 00 00 00       	jmpq   807d588 <rt_error+0x29a>
 807d57c:	48 8d 05 79 f6 00 00 	lea    0xf679(%rip),%rax        # 808cbfc <L.120>
 807d583:	e9 07 00 00 00       	jmpq   807d58f <rt_error+0x2a1>
 807d588:	48 8d 05 6a f6 00 00 	lea    0xf66a(%rip),%rax        # 808cbf9 <L.119>
 807d58f:	48 89 c6             	mov    %rax,%rsi
 807d592:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 807d599:	48 89 c7             	mov    %rax,%rdi
 807d59c:	b8 00 00 00 00       	mov    $0x0,%eax
 807d5a1:	e8 a1 f3 ff ff       	callq  807c947 <rt_printline>
 807d5a6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 807d5ad:	48 8b 05 bc 0a 01 00 	mov    0x10abc(%rip),%rax        # 808e070 <_GLOBAL_OFFSET_TABLE_+0x3f0>
 807d5b4:	48 8b 00             	mov    (%rax),%rax
 807d5b7:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
 807d5be:	48 89 c2             	mov    %rax,%rdx
 807d5c1:	48 39 d1             	cmp    %rdx,%rcx
 807d5c4:	0f 85 29 00 00 00    	jne    807d5f3 <rt_error+0x305>
 807d5ca:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 807d5d1:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 807d5d8:	00 00 00 
 807d5db:	48 39 c8             	cmp    %rcx,%rax
 807d5de:	b8 00 00 00 00       	mov    $0x0,%eax
 807d5e3:	0f 95 c0             	setne  %al
 807d5e6:	85 c0                	test   %eax,%eax
 807d5e8:	0f 84 05 00 00 00    	je     807d5f3 <rt_error+0x305>
 807d5ee:	e9 05 00 00 00       	jmpq   807d5f8 <rt_error+0x30a>
 807d5f3:	e9 25 ff ff ff       	jmpq   807d51d <rt_error+0x22f>
 807d5f8:	c9                   	leaveq 
 807d5f9:	c3                   	retq   

000000000807d5fa <sig_error>:
 807d5fa:	55                   	push   %rbp
 807d5fb:	48 89 e5             	mov    %rsp,%rbp
 807d5fe:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807d605:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807d609:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807d60d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807d611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807d615:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 807d619:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807d61c:	e9 05 00 00 00       	jmpq   807d626 <sig_error+0x2c>
 807d621:	e9 09 00 00 00       	jmpq   807d62f <sig_error+0x35>
 807d626:	83 f8 08             	cmp    $0x8,%eax
 807d629:	0f 85 7e 00 00 00    	jne    807d6ad <sig_error+0xb3>
 807d62f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807d633:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807d63a:	00 00 00 
 807d63d:	48 01 c8             	add    %rcx,%rax
 807d640:	8b 08                	mov    (%rax),%ecx
 807d642:	e9 05 00 00 00       	jmpq   807d64c <sig_error+0x52>
 807d647:	e9 09 00 00 00       	jmpq   807d655 <sig_error+0x5b>
 807d64c:	83 f9 01             	cmp    $0x1,%ecx
 807d64f:	0f 85 05 00 00 00    	jne    807d65a <sig_error+0x60>
 807d655:	e9 09 00 00 00       	jmpq   807d663 <sig_error+0x69>
 807d65a:	83 f9 03             	cmp    $0x3,%ecx
 807d65d:	0f 85 20 00 00 00    	jne    807d683 <sig_error+0x89>
 807d663:	48 8d 05 95 f5 00 00 	lea    0xf595(%rip),%rax        # 808cbff <L.121>
 807d66a:	48 89 c6             	mov    %rax,%rsi
 807d66d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d671:	48 89 c7             	mov    %rax,%rdi
 807d674:	b8 00 00 00 00       	mov    $0x0,%eax
 807d679:	e8 70 fc ff ff       	callq  807d2ee <rt_error>
 807d67e:	e9 20 00 00 00       	jmpq   807d6a3 <sig_error+0xa9>
 807d683:	48 8d 05 86 f5 00 00 	lea    0xf586(%rip),%rax        # 808cc10 <L.122>
 807d68a:	48 89 c6             	mov    %rax,%rsi
 807d68d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d691:	48 89 c7             	mov    %rax,%rdi
 807d694:	b8 00 00 00 00       	mov    $0x0,%eax
 807d699:	e8 50 fc ff ff       	callq  807d2ee <rt_error>
 807d69e:	e9 00 00 00 00       	jmpq   807d6a3 <sig_error+0xa9>
 807d6a3:	e9 0e 01 00 00       	jmpq   807d7b6 <sig_error+0x1bc>
 807d6a8:	e9 09 00 00 00       	jmpq   807d6b6 <sig_error+0xbc>
 807d6ad:	83 f8 07             	cmp    $0x7,%eax
 807d6b0:	0f 85 05 00 00 00    	jne    807d6bb <sig_error+0xc1>
 807d6b6:	e9 09 00 00 00       	jmpq   807d6c4 <sig_error+0xca>
 807d6bb:	83 f8 0b             	cmp    $0xb,%eax
 807d6be:	0f 85 72 00 00 00    	jne    807d736 <sig_error+0x13c>
 807d6c4:	48 8b 05 b5 09 01 00 	mov    0x109b5(%rip),%rax        # 808e080 <_GLOBAL_OFFSET_TABLE_+0x400>
 807d6cb:	48 8b 00             	mov    (%rax),%rax
 807d6ce:	85 c0                	test   %eax,%eax
 807d6d0:	0f 84 3b 00 00 00    	je     807d711 <sig_error+0x117>
 807d6d6:	48 8b 05 a3 09 01 00 	mov    0x109a3(%rip),%rax        # 808e080 <_GLOBAL_OFFSET_TABLE_+0x400>
 807d6dd:	48 8b 00             	mov    (%rax),%rax
 807d6e0:	48 8b 08             	mov    (%rax),%rcx
 807d6e3:	85 c9                	test   %ecx,%ecx
 807d6e5:	0f 84 26 00 00 00    	je     807d711 <sig_error+0x117>
 807d6eb:	48 8b 05 8e 09 01 00 	mov    0x1098e(%rip),%rax        # 808e080 <_GLOBAL_OFFSET_TABLE_+0x400>
 807d6f2:	48 8b 00             	mov    (%rax),%rax
 807d6f5:	48 8b 08             	mov    (%rax),%rcx
 807d6f8:	48 89 ce             	mov    %rcx,%rsi
 807d6fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d6ff:	48 89 c7             	mov    %rax,%rdi
 807d702:	b8 00 00 00 00       	mov    $0x0,%eax
 807d707:	e8 e2 fb ff ff       	callq  807d2ee <rt_error>
 807d70c:	e9 1b 00 00 00       	jmpq   807d72c <sig_error+0x132>
 807d711:	48 8d 05 11 f5 00 00 	lea    0xf511(%rip),%rax        # 808cc29 <L.123>
 807d718:	48 89 c6             	mov    %rax,%rsi
 807d71b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d71f:	48 89 c7             	mov    %rax,%rdi
 807d722:	b8 00 00 00 00       	mov    $0x0,%eax
 807d727:	e8 c2 fb ff ff       	callq  807d2ee <rt_error>
 807d72c:	e9 85 00 00 00       	jmpq   807d7b6 <sig_error+0x1bc>
 807d731:	e9 09 00 00 00       	jmpq   807d73f <sig_error+0x145>
 807d736:	83 f8 04             	cmp    $0x4,%eax
 807d739:	0f 85 25 00 00 00    	jne    807d764 <sig_error+0x16a>
 807d73f:	48 8d 05 01 f5 00 00 	lea    0xf501(%rip),%rax        # 808cc47 <L.124>
 807d746:	48 89 c6             	mov    %rax,%rsi
 807d749:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d74d:	48 89 c7             	mov    %rax,%rdi
 807d750:	b8 00 00 00 00       	mov    $0x0,%eax
 807d755:	e8 94 fb ff ff       	callq  807d2ee <rt_error>
 807d75a:	e9 57 00 00 00       	jmpq   807d7b6 <sig_error+0x1bc>
 807d75f:	e9 09 00 00 00       	jmpq   807d76d <sig_error+0x173>
 807d764:	83 f8 06             	cmp    $0x6,%eax
 807d767:	0f 85 20 00 00 00    	jne    807d78d <sig_error+0x193>
 807d76d:	48 8d 05 e7 f4 00 00 	lea    0xf4e7(%rip),%rax        # 808cc5b <L.125>
 807d774:	48 89 c6             	mov    %rax,%rsi
 807d777:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d77b:	48 89 c7             	mov    %rax,%rdi
 807d77e:	b8 00 00 00 00       	mov    $0x0,%eax
 807d783:	e8 66 fb ff ff       	callq  807d2ee <rt_error>
 807d788:	e9 29 00 00 00       	jmpq   807d7b6 <sig_error+0x1bc>
 807d78d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807d790:	49 89 c2             	mov    %rax,%r10
 807d793:	48 8d 05 d0 f4 00 00 	lea    0xf4d0(%rip),%rax        # 808cc6a <L.126>
 807d79a:	48 89 c6             	mov    %rax,%rsi
 807d79d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d7a1:	48 89 c7             	mov    %rax,%rdi
 807d7a4:	4c 89 d2             	mov    %r10,%rdx
 807d7a7:	b8 00 00 00 00       	mov    $0x0,%eax
 807d7ac:	e8 3d fb ff ff       	callq  807d2ee <rt_error>
 807d7b1:	e9 00 00 00 00       	jmpq   807d7b6 <sig_error+0x1bc>
 807d7b6:	b8 ff 00 00 00       	mov    $0xff,%eax
 807d7bb:	48 89 c7             	mov    %rax,%rdi
 807d7be:	b8 00 00 00 00       	mov    $0x0,%eax
 807d7c3:	e8 c8 a3 00 00       	callq  8087b90 <__preinit_array_end+0xf0>
 807d7c8:	c9                   	leaveq 
 807d7c9:	c3                   	retq   

000000000807d7ca <set_exception_handler>:
 807d7ca:	55                   	push   %rbp
 807d7cb:	48 89 e5             	mov    %rsp,%rbp
 807d7ce:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
 807d7d5:	b8 04 00 00 80       	mov    $0x80000004,%eax
 807d7da:	89 45 f0             	mov    %eax,-0x10(%rbp)
 807d7dd:	48 8d 05 16 fe ff ff 	lea    -0x1ea(%rip),%rax        # 807d5fa <sig_error>
 807d7e4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 807d7eb:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 807d7f2:	48 89 c7             	mov    %rax,%rdi
 807d7f5:	b8 00 00 00 00       	mov    $0x0,%eax
 807d7fa:	e8 71 a5 00 00       	callq  8087d70 <__preinit_array_end+0x2d0>
 807d7ff:	b8 00 00 00 00       	mov    $0x0,%eax
 807d804:	49 89 c2             	mov    %rax,%r10
 807d807:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
 807d80e:	48 89 c6             	mov    %rax,%rsi
 807d811:	b8 08 00 00 00       	mov    $0x8,%eax
 807d816:	48 89 c7             	mov    %rax,%rdi
 807d819:	4c 89 d2             	mov    %r10,%rdx
 807d81c:	b8 00 00 00 00       	mov    $0x0,%eax
 807d821:	e8 5a a5 00 00       	callq  8087d80 <__preinit_array_end+0x2e0>
 807d826:	b8 00 00 00 00       	mov    $0x0,%eax
 807d82b:	49 89 c2             	mov    %rax,%r10
 807d82e:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
 807d835:	48 89 c6             	mov    %rax,%rsi
 807d838:	b8 04 00 00 00       	mov    $0x4,%eax
 807d83d:	48 89 c7             	mov    %rax,%rdi
 807d840:	4c 89 d2             	mov    %r10,%rdx
 807d843:	b8 00 00 00 00       	mov    $0x0,%eax
 807d848:	e8 33 a5 00 00       	callq  8087d80 <__preinit_array_end+0x2e0>
 807d84d:	b8 00 00 00 00       	mov    $0x0,%eax
 807d852:	49 89 c2             	mov    %rax,%r10
 807d855:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
 807d85c:	48 89 c6             	mov    %rax,%rsi
 807d85f:	b8 0b 00 00 00       	mov    $0xb,%eax
 807d864:	48 89 c7             	mov    %rax,%rdi
 807d867:	4c 89 d2             	mov    %r10,%rdx
 807d86a:	b8 00 00 00 00       	mov    $0x0,%eax
 807d86f:	e8 0c a5 00 00       	callq  8087d80 <__preinit_array_end+0x2e0>
 807d874:	b8 00 00 00 00       	mov    $0x0,%eax
 807d879:	49 89 c2             	mov    %rax,%r10
 807d87c:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
 807d883:	48 89 c6             	mov    %rax,%rsi
 807d886:	b8 07 00 00 00       	mov    $0x7,%eax
 807d88b:	48 89 c7             	mov    %rax,%rdi
 807d88e:	4c 89 d2             	mov    %r10,%rdx
 807d891:	b8 00 00 00 00       	mov    $0x0,%eax
 807d896:	e8 e5 a4 00 00       	callq  8087d80 <__preinit_array_end+0x2e0>
 807d89b:	b8 00 00 00 00       	mov    $0x0,%eax
 807d8a0:	49 89 c2             	mov    %rax,%r10
 807d8a3:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
 807d8aa:	48 89 c6             	mov    %rax,%rsi
 807d8ad:	b8 06 00 00 00       	mov    $0x6,%eax
 807d8b2:	48 89 c7             	mov    %rax,%rdi
 807d8b5:	4c 89 d2             	mov    %r10,%rdx
 807d8b8:	b8 00 00 00 00       	mov    $0x0,%eax
 807d8bd:	e8 be a4 00 00       	callq  8087d80 <__preinit_array_end+0x2e0>
 807d8c2:	c9                   	leaveq 
 807d8c3:	c3                   	retq   

000000000807d8c4 <rt_get_caller_pc>:
 807d8c4:	55                   	push   %rbp
 807d8c5:	48 89 e5             	mov    %rsp,%rbp
 807d8c8:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807d8cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807d8d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807d8d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807d8db:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807d8de:	83 f8 00             	cmp    $0x0,%eax
 807d8e1:	0f 85 37 00 00 00    	jne    807d91e <rt_get_caller_pc+0x5a>
 807d8e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807d8eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 807d8ef:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 807d8f6:	00 00 00 
 807d8f9:	48 01 d1             	add    %rdx,%rcx
 807d8fc:	48 ba 80 00 00 00 00 	movabs $0x80,%rdx
 807d903:	00 00 00 
 807d906:	48 01 d1             	add    %rdx,%rcx
 807d909:	48 8b 11             	mov    (%rcx),%rdx
 807d90c:	48 89 10             	mov    %rdx,(%rax)
 807d90f:	b8 00 00 00 00       	mov    $0x0,%eax
 807d914:	e9 a6 00 00 00       	jmpq   807d9bf <rt_get_caller_pc+0xfb>
 807d919:	e9 a1 00 00 00       	jmpq   807d9bf <rt_get_caller_pc+0xfb>
 807d91e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807d922:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807d929:	00 00 00 
 807d92c:	48 01 c8             	add    %rcx,%rax
 807d92f:	48 b9 50 00 00 00 00 	movabs $0x50,%rcx
 807d936:	00 00 00 
 807d939:	48 01 c8             	add    %rcx,%rax
 807d93c:	48 8b 08             	mov    (%rax),%rcx
 807d93f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807d943:	b8 01 00 00 00       	mov    $0x1,%eax
 807d948:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807d94b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807d94e:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807d951:	39 c8                	cmp    %ecx,%eax
 807d953:	0f 8d 41 00 00 00    	jge    807d99a <rt_get_caller_pc+0xd6>
 807d959:	e9 0e 00 00 00       	jmpq   807d96c <rt_get_caller_pc+0xa8>
 807d95e:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807d961:	48 89 c1             	mov    %rax,%rcx
 807d964:	83 c0 01             	add    $0x1,%eax
 807d967:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807d96a:	eb df                	jmp    807d94b <rt_get_caller_pc+0x87>
 807d96c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d970:	48 b9 00 10 00 00 00 	movabs $0x1000,%rcx
 807d977:	00 00 00 
 807d97a:	48 39 c8             	cmp    %rcx,%rax
 807d97d:	0f 87 0a 00 00 00    	ja     807d98d <rt_get_caller_pc+0xc9>
 807d983:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 807d988:	e9 32 00 00 00       	jmpq   807d9bf <rt_get_caller_pc+0xfb>
 807d98d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807d991:	48 8b 08             	mov    (%rax),%rcx
 807d994:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807d998:	eb c4                	jmp    807d95e <rt_get_caller_pc+0x9a>
 807d99a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807d99e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 807d9a2:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 807d9a9:	00 00 00 
 807d9ac:	48 01 d1             	add    %rdx,%rcx
 807d9af:	48 8b 11             	mov    (%rcx),%rdx
 807d9b2:	48 89 10             	mov    %rdx,(%rax)
 807d9b5:	b8 00 00 00 00       	mov    $0x0,%eax
 807d9ba:	e9 00 00 00 00       	jmpq   807d9bf <rt_get_caller_pc+0xfb>
 807d9bf:	c9                   	leaveq 
 807d9c0:	c3                   	retq   

000000000807d9c1 <resolve_sym>:
 807d9c1:	55                   	push   %rbp
 807d9c2:	48 89 e5             	mov    %rsp,%rbp
 807d9c5:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807d9cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807d9d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807d9d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807d9d8:	48 89 c6             	mov    %rax,%rsi
 807d9db:	b8 00 00 00 00       	mov    $0x0,%eax
 807d9e0:	48 89 c7             	mov    %rax,%rdi
 807d9e3:	b8 00 00 00 00       	mov    $0x0,%eax
 807d9e8:	e8 a3 a3 00 00       	callq  8087d90 <__preinit_array_end+0x2f0>
 807d9ed:	e9 00 00 00 00       	jmpq   807d9f2 <resolve_sym+0x31>
 807d9f2:	c9                   	leaveq 
 807d9f3:	c3                   	retq   
	...

000000000807da00 <__bswap_16>:
 807da00:	55                   	push   %rbp
 807da01:	48 89 e5             	mov    %rsp,%rbp
 807da04:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807da0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807da0f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807da12:	c1 f8 08             	sar    $0x8,%eax
 807da15:	81 e0 ff 00 00 00    	and    $0xff,%eax
 807da1b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807da1e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 807da24:	c1 e1 08             	shl    $0x8,%ecx
 807da27:	48 09 c8             	or     %rcx,%rax
 807da2a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 807da30:	e9 00 00 00 00       	jmpq   807da35 <__bswap_16+0x35>
 807da35:	c9                   	leaveq 
 807da36:	c3                   	retq   

000000000807da37 <__bswap_32>:
 807da37:	55                   	push   %rbp
 807da38:	48 89 e5             	mov    %rsp,%rbp
 807da3b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807da42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807da46:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807da49:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 807da4f:	c1 e8 18             	shr    $0x18,%eax
 807da52:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807da55:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 807da5b:	c1 e9 08             	shr    $0x8,%ecx
 807da5e:	48 09 c8             	or     %rcx,%rax
 807da61:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807da64:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 807da6a:	c1 e1 08             	shl    $0x8,%ecx
 807da6d:	48 09 c8             	or     %rcx,%rax
 807da70:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807da73:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 807da79:	c1 e1 18             	shl    $0x18,%ecx
 807da7c:	48 09 c8             	or     %rcx,%rax
 807da7f:	e9 00 00 00 00       	jmpq   807da84 <__bswap_32+0x4d>
 807da84:	c9                   	leaveq 
 807da85:	c3                   	retq   

000000000807da86 <__bswap_64>:
 807da86:	55                   	push   %rbp
 807da87:	48 89 e5             	mov    %rsp,%rbp
 807da8a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807da91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807da95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807da99:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 807daa0:	00 00 ff 
 807daa3:	48 21 c8             	and    %rcx,%rax
 807daa6:	48 89 c1             	mov    %rax,%rcx
 807daa9:	48 c1 e9 38          	shr    $0x38,%rcx
 807daad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dab1:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 807dab8:	00 ff 00 
 807dabb:	48 21 d0             	and    %rdx,%rax
 807dabe:	48 89 c2             	mov    %rax,%rdx
 807dac1:	48 c1 ea 28          	shr    $0x28,%rdx
 807dac5:	48 89 c8             	mov    %rcx,%rax
 807dac8:	48 89 d1             	mov    %rdx,%rcx
 807dacb:	48 09 c8             	or     %rcx,%rax
 807dace:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807dad2:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 807dad9:	ff 00 00 
 807dadc:	48 21 d1             	and    %rdx,%rcx
 807dadf:	48 89 ca             	mov    %rcx,%rdx
 807dae2:	48 c1 ea 18          	shr    $0x18,%rdx
 807dae6:	48 89 c1             	mov    %rax,%rcx
 807dae9:	48 89 d0             	mov    %rdx,%rax
 807daec:	48 09 c1             	or     %rax,%rcx
 807daef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807daf3:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 807dafa:	00 00 00 
 807dafd:	48 21 d0             	and    %rdx,%rax
 807db00:	48 89 c2             	mov    %rax,%rdx
 807db03:	48 c1 ea 08          	shr    $0x8,%rdx
 807db07:	48 89 c8             	mov    %rcx,%rax
 807db0a:	48 89 d1             	mov    %rdx,%rcx
 807db0d:	48 09 c8             	or     %rcx,%rax
 807db10:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807db14:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 807db1b:	00 00 00 
 807db1e:	48 21 d1             	and    %rdx,%rcx
 807db21:	48 89 ca             	mov    %rcx,%rdx
 807db24:	48 c1 e2 08          	shl    $0x8,%rdx
 807db28:	48 89 c1             	mov    %rax,%rcx
 807db2b:	48 89 d0             	mov    %rdx,%rax
 807db2e:	48 09 c1             	or     %rax,%rcx
 807db31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807db35:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 807db3c:	00 00 00 
 807db3f:	48 21 d0             	and    %rdx,%rax
 807db42:	48 89 c2             	mov    %rax,%rdx
 807db45:	48 c1 e2 18          	shl    $0x18,%rdx
 807db49:	48 89 c8             	mov    %rcx,%rax
 807db4c:	48 89 d1             	mov    %rdx,%rcx
 807db4f:	48 09 c8             	or     %rcx,%rax
 807db52:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 807db56:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 807db5d:	00 00 00 
 807db60:	48 21 d1             	and    %rdx,%rcx
 807db63:	48 89 ca             	mov    %rcx,%rdx
 807db66:	48 c1 e2 28          	shl    $0x28,%rdx
 807db6a:	48 89 c1             	mov    %rax,%rcx
 807db6d:	48 89 d0             	mov    %rdx,%rax
 807db70:	48 09 c1             	or     %rax,%rcx
 807db73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807db77:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 807db7e:	00 00 00 
 807db81:	48 21 d0             	and    %rdx,%rax
 807db84:	48 89 c2             	mov    %rax,%rdx
 807db87:	48 c1 e2 38          	shl    $0x38,%rdx
 807db8b:	48 89 c8             	mov    %rcx,%rax
 807db8e:	48 89 d1             	mov    %rdx,%rcx
 807db91:	48 09 c8             	or     %rcx,%rax
 807db94:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 807db98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807db9c:	e9 00 00 00 00       	jmpq   807dba1 <__bswap_64+0x11b>
 807dba1:	c9                   	leaveq 
 807dba2:	c3                   	retq   

000000000807dba3 <g>:
 807dba3:	55                   	push   %rbp
 807dba4:	48 89 e5             	mov    %rsp,%rbp
 807dba7:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807dbae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dbb2:	48 8b 05 77 04 01 00 	mov    0x10477(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807dbb9:	8b 00                	mov    (%rax),%eax
 807dbbb:	83 c0 01             	add    $0x1,%eax
 807dbbe:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807dbc1:	48 8b 05 f0 02 01 00 	mov    0x102f0(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807dbc8:	48 8b 00             	mov    (%rax),%rax
 807dbcb:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807dbd2:	00 00 00 
 807dbd5:	48 01 c8             	add    %rcx,%rax
 807dbd8:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 807dbdb:	48 63 c9             	movslq %ecx,%rcx
 807dbde:	48 89 ca             	mov    %rcx,%rdx
 807dbe1:	48 8b 08             	mov    (%rax),%rcx
 807dbe4:	48 39 ca             	cmp    %rcx,%rdx
 807dbe7:	0f 86 23 00 00 00    	jbe    807dc10 <g+0x6d>
 807dbed:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807dbf0:	48 63 c0             	movslq %eax,%rax
 807dbf3:	48 89 c1             	mov    %rax,%rcx
 807dbf6:	48 89 ce             	mov    %rcx,%rsi
 807dbf9:	48 8b 05 b8 02 01 00 	mov    0x102b8(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807dc00:	48 8b 00             	mov    (%rax),%rax
 807dc03:	48 89 c7             	mov    %rax,%rdi
 807dc06:	b8 00 00 00 00       	mov    $0x0,%eax
 807dc0b:	e8 31 eb fc ff       	callq  804c741 <section_realloc>
 807dc10:	48 8b 05 a1 02 01 00 	mov    0x102a1(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807dc17:	48 8b 00             	mov    (%rax),%rax
 807dc1a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807dc21:	00 00 00 
 807dc24:	48 01 c8             	add    %rcx,%rax
 807dc27:	48 8b 0d 02 04 01 00 	mov    0x10402(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807dc2e:	8b 09                	mov    (%rcx),%ecx
 807dc30:	48 63 c9             	movslq %ecx,%rcx
 807dc33:	48 8b 10             	mov    (%rax),%rdx
 807dc36:	48 89 c8             	mov    %rcx,%rax
 807dc39:	48 01 c2             	add    %rax,%rdx
 807dc3c:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
 807dc40:	88 02                	mov    %al,(%rdx)
 807dc42:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807dc45:	4c 8b 1d e4 03 01 00 	mov    0x103e4(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807dc4c:	41 89 03             	mov    %eax,(%r11)
 807dc4f:	c9                   	leaveq 
 807dc50:	c3                   	retq   

000000000807dc51 <o>:
 807dc51:	55                   	push   %rbp
 807dc52:	48 89 e5             	mov    %rsp,%rbp
 807dc55:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807dc5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dc60:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dc63:	85 c0                	test   %eax,%eax
 807dc65:	0f 84 1b 00 00 00    	je     807dc86 <o+0x35>
 807dc6b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dc6e:	48 89 c7             	mov    %rax,%rdi
 807dc71:	b8 00 00 00 00       	mov    $0x0,%eax
 807dc76:	e8 28 ff ff ff       	callq  807dba3 <g>
 807dc7b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dc7e:	c1 e8 08             	shr    $0x8,%eax
 807dc81:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807dc84:	eb da                	jmp    807dc60 <o+0xf>
 807dc86:	c9                   	leaveq 
 807dc87:	c3                   	retq   

000000000807dc88 <gen_le16>:
 807dc88:	55                   	push   %rbp
 807dc89:	48 89 e5             	mov    %rsp,%rbp
 807dc8c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807dc93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dc97:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dc9a:	48 89 c7             	mov    %rax,%rdi
 807dc9d:	b8 00 00 00 00       	mov    $0x0,%eax
 807dca2:	e8 fc fe ff ff       	callq  807dba3 <g>
 807dca7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dcaa:	c1 f8 08             	sar    $0x8,%eax
 807dcad:	48 89 c7             	mov    %rax,%rdi
 807dcb0:	b8 00 00 00 00       	mov    $0x0,%eax
 807dcb5:	e8 e9 fe ff ff       	callq  807dba3 <g>
 807dcba:	c9                   	leaveq 
 807dcbb:	c3                   	retq   

000000000807dcbc <gen_le32>:
 807dcbc:	55                   	push   %rbp
 807dcbd:	48 89 e5             	mov    %rsp,%rbp
 807dcc0:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807dcc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dccb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dcce:	48 89 c7             	mov    %rax,%rdi
 807dcd1:	b8 00 00 00 00       	mov    $0x0,%eax
 807dcd6:	e8 c8 fe ff ff       	callq  807dba3 <g>
 807dcdb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dcde:	c1 f8 08             	sar    $0x8,%eax
 807dce1:	48 89 c7             	mov    %rax,%rdi
 807dce4:	b8 00 00 00 00       	mov    $0x0,%eax
 807dce9:	e8 b5 fe ff ff       	callq  807dba3 <g>
 807dcee:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dcf1:	c1 f8 10             	sar    $0x10,%eax
 807dcf4:	48 89 c7             	mov    %rax,%rdi
 807dcf7:	b8 00 00 00 00       	mov    $0x0,%eax
 807dcfc:	e8 a2 fe ff ff       	callq  807dba3 <g>
 807dd01:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dd04:	c1 f8 18             	sar    $0x18,%eax
 807dd07:	48 89 c7             	mov    %rax,%rdi
 807dd0a:	b8 00 00 00 00       	mov    $0x0,%eax
 807dd0f:	e8 8f fe ff ff       	callq  807dba3 <g>
 807dd14:	c9                   	leaveq 
 807dd15:	c3                   	retq   

000000000807dd16 <gen_le64>:
 807dd16:	55                   	push   %rbp
 807dd17:	48 89 e5             	mov    %rsp,%rbp
 807dd1a:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807dd21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dd25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dd29:	48 89 c7             	mov    %rax,%rdi
 807dd2c:	b8 00 00 00 00       	mov    $0x0,%eax
 807dd31:	e8 6d fe ff ff       	callq  807dba3 <g>
 807dd36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dd3a:	48 c1 f8 08          	sar    $0x8,%rax
 807dd3e:	48 89 c1             	mov    %rax,%rcx
 807dd41:	48 89 cf             	mov    %rcx,%rdi
 807dd44:	b8 00 00 00 00       	mov    $0x0,%eax
 807dd49:	e8 55 fe ff ff       	callq  807dba3 <g>
 807dd4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dd52:	48 c1 f8 10          	sar    $0x10,%rax
 807dd56:	48 89 c1             	mov    %rax,%rcx
 807dd59:	48 89 cf             	mov    %rcx,%rdi
 807dd5c:	b8 00 00 00 00       	mov    $0x0,%eax
 807dd61:	e8 3d fe ff ff       	callq  807dba3 <g>
 807dd66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dd6a:	48 c1 f8 18          	sar    $0x18,%rax
 807dd6e:	48 89 c1             	mov    %rax,%rcx
 807dd71:	48 89 cf             	mov    %rcx,%rdi
 807dd74:	b8 00 00 00 00       	mov    $0x0,%eax
 807dd79:	e8 25 fe ff ff       	callq  807dba3 <g>
 807dd7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dd82:	48 c1 f8 20          	sar    $0x20,%rax
 807dd86:	48 89 c1             	mov    %rax,%rcx
 807dd89:	48 89 cf             	mov    %rcx,%rdi
 807dd8c:	b8 00 00 00 00       	mov    $0x0,%eax
 807dd91:	e8 0d fe ff ff       	callq  807dba3 <g>
 807dd96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807dd9a:	48 c1 f8 28          	sar    $0x28,%rax
 807dd9e:	48 89 c1             	mov    %rax,%rcx
 807dda1:	48 89 cf             	mov    %rcx,%rdi
 807dda4:	b8 00 00 00 00       	mov    $0x0,%eax
 807dda9:	e8 f5 fd ff ff       	callq  807dba3 <g>
 807ddae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ddb2:	48 c1 f8 30          	sar    $0x30,%rax
 807ddb6:	48 89 c1             	mov    %rax,%rcx
 807ddb9:	48 89 cf             	mov    %rcx,%rdi
 807ddbc:	b8 00 00 00 00       	mov    $0x0,%eax
 807ddc1:	e8 dd fd ff ff       	callq  807dba3 <g>
 807ddc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 807ddca:	48 c1 f8 38          	sar    $0x38,%rax
 807ddce:	48 89 c1             	mov    %rax,%rcx
 807ddd1:	48 89 cf             	mov    %rcx,%rdi
 807ddd4:	b8 00 00 00 00       	mov    $0x0,%eax
 807ddd9:	e8 c5 fd ff ff       	callq  807dba3 <g>
 807ddde:	c9                   	leaveq 
 807dddf:	c3                   	retq   

000000000807dde0 <orex>:
 807dde0:	55                   	push   %rbp
 807dde1:	48 89 e5             	mov    %rsp,%rbp
 807dde4:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807ddeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807ddef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807ddf3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807ddf7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807ddfb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807ddfe:	83 e0 3f             	and    $0x3f,%eax
 807de01:	83 f8 30             	cmp    $0x30,%eax
 807de04:	0f 8c 08 00 00 00    	jl     807de12 <orex+0x32>
 807de0a:	b8 00 00 00 00       	mov    $0x0,%eax
 807de0f:	89 45 f0             	mov    %eax,-0x10(%rbp)
 807de12:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807de15:	83 e0 3f             	and    $0x3f,%eax
 807de18:	83 f8 30             	cmp    $0x30,%eax
 807de1b:	0f 8c 08 00 00 00    	jl     807de29 <orex+0x49>
 807de21:	b8 00 00 00 00       	mov    $0x0,%eax
 807de26:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807de29:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807de2c:	85 c0                	test   %eax,%eax
 807de2e:	0f 85 27 00 00 00    	jne    807de5b <orex+0x7b>
 807de34:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807de37:	c1 f8 03             	sar    $0x3,%eax
 807de3a:	83 e0 01             	and    $0x1,%eax
 807de3d:	85 c0                	test   %eax,%eax
 807de3f:	0f 85 16 00 00 00    	jne    807de5b <orex+0x7b>
 807de45:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807de48:	c1 f8 03             	sar    $0x3,%eax
 807de4b:	83 e0 01             	and    $0x1,%eax
 807de4e:	85 c0                	test   %eax,%eax
 807de50:	0f 85 05 00 00 00    	jne    807de5b <orex+0x7b>
 807de56:	e9 31 00 00 00       	jmpq   807de8c <orex+0xac>
 807de5b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807de5e:	c1 f8 03             	sar    $0x3,%eax
 807de61:	83 e0 01             	and    $0x1,%eax
 807de64:	83 c8 40             	or     $0x40,%eax
 807de67:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807de6a:	c1 f9 03             	sar    $0x3,%ecx
 807de6d:	83 e1 01             	and    $0x1,%ecx
 807de70:	c1 e1 02             	shl    $0x2,%ecx
 807de73:	48 09 c8             	or     %rcx,%rax
 807de76:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807de79:	c1 e1 03             	shl    $0x3,%ecx
 807de7c:	48 09 c8             	or     %rcx,%rax
 807de7f:	48 89 c7             	mov    %rax,%rdi
 807de82:	b8 00 00 00 00       	mov    $0x0,%eax
 807de87:	e8 c5 fd ff ff       	callq  807dc51 <o>
 807de8c:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807de8f:	48 89 c7             	mov    %rax,%rdi
 807de92:	b8 00 00 00 00       	mov    $0x0,%eax
 807de97:	e8 b5 fd ff ff       	callq  807dc51 <o>
 807de9c:	c9                   	leaveq 
 807de9d:	c3                   	retq   

000000000807de9e <gsym_addr>:
 807de9e:	55                   	push   %rbp
 807de9f:	48 89 e5             	mov    %rsp,%rbp
 807dea2:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807dea9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dead:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807deb1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807deb4:	85 c0                	test   %eax,%eax
 807deb6:	0f 84 4d 00 00 00    	je     807df09 <gsym_addr+0x6b>
 807debc:	48 8b 05 f5 ff 00 00 	mov    0xfff5(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807dec3:	48 8b 00             	mov    (%rax),%rax
 807dec6:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807decd:	00 00 00 
 807ded0:	48 01 c8             	add    %rcx,%rax
 807ded3:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807ded6:	48 63 c9             	movslq %ecx,%rcx
 807ded9:	48 8b 10             	mov    (%rax),%rdx
 807dedc:	48 89 c8             	mov    %rcx,%rax
 807dedf:	48 01 c2             	add    %rax,%rdx
 807dee2:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 807dee6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807deea:	8b 08                	mov    (%rax),%ecx
 807deec:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 807deef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807def3:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 807def6:	8b 55 f8             	mov    -0x8(%rbp),%edx
 807def9:	48 29 d1             	sub    %rdx,%rcx
 807defc:	83 e9 04             	sub    $0x4,%ecx
 807deff:	89 08                	mov    %ecx,(%rax)
 807df01:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807df04:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807df07:	eb a8                	jmp    807deb1 <gsym_addr+0x13>
 807df09:	c9                   	leaveq 
 807df0a:	c3                   	retq   

000000000807df0b <gsym>:
 807df0b:	55                   	push   %rbp
 807df0c:	48 89 e5             	mov    %rsp,%rbp
 807df0f:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807df16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807df1a:	48 8b 05 0f 01 01 00 	mov    0x1010f(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807df21:	8b 00                	mov    (%rax),%eax
 807df23:	48 89 c6             	mov    %rax,%rsi
 807df26:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807df29:	48 89 c7             	mov    %rax,%rdi
 807df2c:	b8 00 00 00 00       	mov    $0x0,%eax
 807df31:	e8 68 ff ff ff       	callq  807de9e <gsym_addr>
 807df36:	c9                   	leaveq 
 807df37:	c3                   	retq   

000000000807df38 <is64_type>:
 807df38:	55                   	push   %rbp
 807df39:	48 89 e5             	mov    %rsp,%rbp
 807df3c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807df43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807df47:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807df4a:	83 e0 0f             	and    $0xf,%eax
 807df4d:	83 f8 04             	cmp    $0x4,%eax
 807df50:	0f 84 25 00 00 00    	je     807df7b <is64_type+0x43>
 807df56:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807df59:	83 e0 0f             	and    $0xf,%eax
 807df5c:	83 f8 06             	cmp    $0x6,%eax
 807df5f:	0f 84 16 00 00 00    	je     807df7b <is64_type+0x43>
 807df65:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807df68:	83 e0 0f             	and    $0xf,%eax
 807df6b:	83 f8 0c             	cmp    $0xc,%eax
 807df6e:	0f 84 07 00 00 00    	je     807df7b <is64_type+0x43>
 807df74:	b8 00 00 00 00       	mov    $0x0,%eax
 807df79:	eb 05                	jmp    807df80 <is64_type+0x48>
 807df7b:	b8 01 00 00 00       	mov    $0x1,%eax
 807df80:	e9 00 00 00 00       	jmpq   807df85 <is64_type+0x4d>
 807df85:	c9                   	leaveq 
 807df86:	c3                   	retq   

000000000807df87 <is_sse_float>:
 807df87:	55                   	push   %rbp
 807df88:	48 89 e5             	mov    %rsp,%rbp
 807df8b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807df92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807df96:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807df99:	83 e0 0f             	and    $0xf,%eax
 807df9c:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807df9f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807dfa2:	83 f8 09             	cmp    $0x9,%eax
 807dfa5:	0f 84 13 00 00 00    	je     807dfbe <is_sse_float+0x37>
 807dfab:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807dfae:	83 f8 08             	cmp    $0x8,%eax
 807dfb1:	0f 84 07 00 00 00    	je     807dfbe <is_sse_float+0x37>
 807dfb7:	b8 00 00 00 00       	mov    $0x0,%eax
 807dfbc:	eb 05                	jmp    807dfc3 <is_sse_float+0x3c>
 807dfbe:	b8 01 00 00 00       	mov    $0x1,%eax
 807dfc3:	e9 00 00 00 00       	jmpq   807dfc8 <is_sse_float+0x41>
 807dfc8:	c9                   	leaveq 
 807dfc9:	c3                   	retq   

000000000807dfca <oad>:
 807dfca:	55                   	push   %rbp
 807dfcb:	48 89 e5             	mov    %rsp,%rbp
 807dfce:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807dfd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807dfd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807dfdd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807dfe0:	48 89 c7             	mov    %rax,%rdi
 807dfe3:	b8 00 00 00 00       	mov    $0x0,%eax
 807dfe8:	e8 64 fc ff ff       	callq  807dc51 <o>
 807dfed:	48 8b 05 3c 00 01 00 	mov    0x1003c(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807dff4:	8b 00                	mov    (%rax),%eax
 807dff6:	83 c0 04             	add    $0x4,%eax
 807dff9:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807dffc:	48 8b 05 b5 fe 00 00 	mov    0xfeb5(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e003:	48 8b 00             	mov    (%rax),%rax
 807e006:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807e00d:	00 00 00 
 807e010:	48 01 c8             	add    %rcx,%rax
 807e013:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 807e016:	48 63 c9             	movslq %ecx,%rcx
 807e019:	48 89 ca             	mov    %rcx,%rdx
 807e01c:	48 8b 08             	mov    (%rax),%rcx
 807e01f:	48 39 ca             	cmp    %rcx,%rdx
 807e022:	0f 86 23 00 00 00    	jbe    807e04b <oad+0x81>
 807e028:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807e02b:	48 63 c0             	movslq %eax,%rax
 807e02e:	48 89 c1             	mov    %rax,%rcx
 807e031:	48 89 ce             	mov    %rcx,%rsi
 807e034:	48 8b 05 7d fe 00 00 	mov    0xfe7d(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e03b:	48 8b 00             	mov    (%rax),%rax
 807e03e:	48 89 c7             	mov    %rax,%rdi
 807e041:	b8 00 00 00 00       	mov    $0x0,%eax
 807e046:	e8 f6 e6 fc ff       	callq  804c741 <section_realloc>
 807e04b:	48 8b 05 66 fe 00 00 	mov    0xfe66(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e052:	48 8b 00             	mov    (%rax),%rax
 807e055:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807e05c:	00 00 00 
 807e05f:	48 01 c8             	add    %rcx,%rax
 807e062:	48 8b 0d c7 ff 00 00 	mov    0xffc7(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e069:	8b 09                	mov    (%rcx),%ecx
 807e06b:	48 63 c9             	movslq %ecx,%rcx
 807e06e:	48 8b 10             	mov    (%rax),%rdx
 807e071:	48 89 c8             	mov    %rcx,%rax
 807e074:	48 01 c2             	add    %rax,%rdx
 807e077:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e07a:	89 02                	mov    %eax,(%rdx)
 807e07c:	48 8b 05 ad ff 00 00 	mov    0xffad(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e083:	8b 00                	mov    (%rax),%eax
 807e085:	89 45 f0             	mov    %eax,-0x10(%rbp)
 807e088:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807e08b:	4c 8b 1d 9e ff 00 00 	mov    0xff9e(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e092:	41 89 03             	mov    %eax,(%r11)
 807e095:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e098:	e9 00 00 00 00       	jmpq   807e09d <oad+0xd3>
 807e09d:	c9                   	leaveq 
 807e09e:	c3                   	retq   

000000000807e09f <gen_addr32>:
 807e09f:	55                   	push   %rbp
 807e0a0:	48 89 e5             	mov    %rsp,%rbp
 807e0a3:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807e0aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e0ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e0b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e0b6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e0b9:	81 e0 00 02 00 00    	and    $0x200,%eax
 807e0bf:	85 c0                	test   %eax,%eax
 807e0c1:	0f 84 3e 00 00 00    	je     807e105 <gen_addr32+0x66>
 807e0c7:	48 8b 05 62 ff 00 00 	mov    0xff62(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e0ce:	8b 00                	mov    (%rax),%eax
 807e0d0:	48 63 c0             	movslq %eax,%rax
 807e0d3:	b9 0a 00 00 00       	mov    $0xa,%ecx
 807e0d8:	49 89 cb             	mov    %rcx,%r11
 807e0db:	48 89 c1             	mov    %rax,%rcx
 807e0de:	49 89 ca             	mov    %rcx,%r10
 807e0e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e0e5:	48 89 c6             	mov    %rax,%rsi
 807e0e8:	48 8b 05 c9 fd 00 00 	mov    0xfdc9(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e0ef:	48 8b 00             	mov    (%rax),%rax
 807e0f2:	48 89 c7             	mov    %rax,%rdi
 807e0f5:	4c 89 d2             	mov    %r10,%rdx
 807e0f8:	4c 89 d9             	mov    %r11,%rcx
 807e0fb:	b8 00 00 00 00       	mov    $0x0,%eax
 807e100:	e8 fe ec fc ff       	callq  804ce03 <greloc>
 807e105:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807e108:	48 89 c7             	mov    %rax,%rdi
 807e10b:	b8 00 00 00 00       	mov    $0x0,%eax
 807e110:	e8 a7 fb ff ff       	callq  807dcbc <gen_le32>
 807e115:	c9                   	leaveq 
 807e116:	c3                   	retq   

000000000807e117 <gen_addr64>:
 807e117:	55                   	push   %rbp
 807e118:	48 89 e5             	mov    %rsp,%rbp
 807e11b:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807e122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e126:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e12a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e12e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e131:	81 e0 00 02 00 00    	and    $0x200,%eax
 807e137:	85 c0                	test   %eax,%eax
 807e139:	0f 84 3e 00 00 00    	je     807e17d <gen_addr64+0x66>
 807e13f:	48 8b 05 ea fe 00 00 	mov    0xfeea(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e146:	8b 00                	mov    (%rax),%eax
 807e148:	48 63 c0             	movslq %eax,%rax
 807e14b:	b9 01 00 00 00       	mov    $0x1,%ecx
 807e150:	49 89 cb             	mov    %rcx,%r11
 807e153:	48 89 c1             	mov    %rax,%rcx
 807e156:	49 89 ca             	mov    %rcx,%r10
 807e159:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e15d:	48 89 c6             	mov    %rax,%rsi
 807e160:	48 8b 05 51 fd 00 00 	mov    0xfd51(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e167:	48 8b 00             	mov    (%rax),%rax
 807e16a:	48 89 c7             	mov    %rax,%rdi
 807e16d:	4c 89 d2             	mov    %r10,%rdx
 807e170:	4c 89 d9             	mov    %r11,%rcx
 807e173:	b8 00 00 00 00       	mov    $0x0,%eax
 807e178:	e8 86 ec fc ff       	callq  804ce03 <greloc>
 807e17d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807e181:	48 89 c7             	mov    %rax,%rdi
 807e184:	b8 00 00 00 00       	mov    $0x0,%eax
 807e189:	e8 88 fb ff ff       	callq  807dd16 <gen_le64>
 807e18e:	c9                   	leaveq 
 807e18f:	c3                   	retq   

000000000807e190 <gen_addrpc32>:
 807e190:	55                   	push   %rbp
 807e191:	48 89 e5             	mov    %rsp,%rbp
 807e194:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807e19b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e19f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e1a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e1a7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e1aa:	81 e0 00 02 00 00    	and    $0x200,%eax
 807e1b0:	85 c0                	test   %eax,%eax
 807e1b2:	0f 84 3e 00 00 00    	je     807e1f6 <gen_addrpc32+0x66>
 807e1b8:	48 8b 05 71 fe 00 00 	mov    0xfe71(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e1bf:	8b 00                	mov    (%rax),%eax
 807e1c1:	48 63 c0             	movslq %eax,%rax
 807e1c4:	b9 02 00 00 00       	mov    $0x2,%ecx
 807e1c9:	49 89 cb             	mov    %rcx,%r11
 807e1cc:	48 89 c1             	mov    %rax,%rcx
 807e1cf:	49 89 ca             	mov    %rcx,%r10
 807e1d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e1d6:	48 89 c6             	mov    %rax,%rsi
 807e1d9:	48 8b 05 d8 fc 00 00 	mov    0xfcd8(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e1e0:	48 8b 00             	mov    (%rax),%rax
 807e1e3:	48 89 c7             	mov    %rax,%rdi
 807e1e6:	4c 89 d2             	mov    %r10,%rdx
 807e1e9:	4c 89 d9             	mov    %r11,%rcx
 807e1ec:	b8 00 00 00 00       	mov    $0x0,%eax
 807e1f1:	e8 0d ec fc ff       	callq  804ce03 <greloc>
 807e1f6:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807e1f9:	83 e8 04             	sub    $0x4,%eax
 807e1fc:	48 89 c7             	mov    %rax,%rdi
 807e1ff:	b8 00 00 00 00       	mov    $0x0,%eax
 807e204:	e8 b3 fa ff ff       	callq  807dcbc <gen_le32>
 807e209:	c9                   	leaveq 
 807e20a:	c3                   	retq   

000000000807e20b <gen_gotpcrel>:
 807e20b:	55                   	push   %rbp
 807e20c:	48 89 e5             	mov    %rsp,%rbp
 807e20f:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807e216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e21a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e21e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e222:	48 8b 05 07 fe 00 00 	mov    0xfe07(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807e229:	8b 00                	mov    (%rax),%eax
 807e22b:	48 63 c0             	movslq %eax,%rax
 807e22e:	b9 09 00 00 00       	mov    $0x9,%ecx
 807e233:	49 89 cb             	mov    %rcx,%r11
 807e236:	48 89 c1             	mov    %rax,%rcx
 807e239:	49 89 ca             	mov    %rcx,%r10
 807e23c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e240:	48 89 c6             	mov    %rax,%rsi
 807e243:	48 8b 05 6e fc 00 00 	mov    0xfc6e(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e24a:	48 8b 00             	mov    (%rax),%rax
 807e24d:	48 89 c7             	mov    %rax,%rdi
 807e250:	4c 89 d2             	mov    %r10,%rdx
 807e253:	4c 89 d9             	mov    %r11,%rcx
 807e256:	b8 00 00 00 00       	mov    $0x0,%eax
 807e25b:	e8 a3 eb fc ff       	callq  804ce03 <greloc>
 807e260:	48 8b 05 51 fc 00 00 	mov    0xfc51(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807e267:	48 8b 00             	mov    (%rax),%rax
 807e26a:	48 b9 60 00 00 00 00 	movabs $0x60,%rcx
 807e271:	00 00 00 
 807e274:	48 01 c8             	add    %rcx,%rax
 807e277:	48 8b 08             	mov    (%rax),%rcx
 807e27a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807e27e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807e282:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 807e289:	00 00 00 
 807e28c:	48 01 c8             	add    %rcx,%rax
 807e28f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 807e293:	48 8b 10             	mov    (%rax),%rdx
 807e296:	48 8b 01             	mov    (%rcx),%rax
 807e299:	48 01 c2             	add    %rax,%rdx
 807e29c:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 807e2a3:	00 00 00 
 807e2a6:	48 29 c2             	sub    %rax,%rdx
 807e2a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 807e2ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 807e2b1:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807e2b8:	00 00 00 
 807e2bb:	48 01 c8             	add    %rcx,%rax
 807e2be:	48 b9 fc ff ff ff ff 	movabs $0xfffffffffffffffc,%rcx
 807e2c5:	ff ff ff 
 807e2c8:	48 89 08             	mov    %rcx,(%rax)
 807e2cb:	b8 00 00 00 00       	mov    $0x0,%eax
 807e2d0:	48 89 c7             	mov    %rax,%rdi
 807e2d3:	b8 00 00 00 00       	mov    $0x0,%eax
 807e2d8:	e8 df f9 ff ff       	callq  807dcbc <gen_le32>
 807e2dd:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807e2e0:	85 c0                	test   %eax,%eax
 807e2e2:	0f 84 57 00 00 00    	je     807e33f <gen_gotpcrel+0x134>
 807e2e8:	b8 81 00 00 00       	mov    $0x81,%eax
 807e2ed:	49 89 c3             	mov    %rax,%r11
 807e2f0:	b8 00 00 00 00       	mov    $0x0,%eax
 807e2f5:	49 89 c2             	mov    %rax,%r10
 807e2f8:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e2fb:	48 89 c6             	mov    %rax,%rsi
 807e2fe:	b8 01 00 00 00       	mov    $0x1,%eax
 807e303:	48 89 c7             	mov    %rax,%rdi
 807e306:	4c 89 d2             	mov    %r10,%rdx
 807e309:	4c 89 d9             	mov    %r11,%rcx
 807e30c:	b8 00 00 00 00       	mov    $0x0,%eax
 807e311:	e8 ca fa ff ff       	callq  807dde0 <orex>
 807e316:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e319:	83 e0 07             	and    $0x7,%eax
 807e31c:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807e322:	48 89 c7             	mov    %rax,%rdi
 807e325:	b8 00 00 00 00       	mov    $0x0,%eax
 807e32a:	e8 22 f9 ff ff       	callq  807dc51 <o>
 807e32f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807e332:	48 89 c7             	mov    %rax,%rdi
 807e335:	b8 00 00 00 00       	mov    $0x0,%eax
 807e33a:	e8 7d f9 ff ff       	callq  807dcbc <gen_le32>
 807e33f:	c9                   	leaveq 
 807e340:	c3                   	retq   

000000000807e341 <gen_modrm_impl>:
 807e341:	55                   	push   %rbp
 807e342:	48 89 e5             	mov    %rsp,%rbp
 807e345:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807e34c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e350:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e354:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e358:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807e35c:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 807e360:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e363:	83 e0 07             	and    $0x7,%eax
 807e366:	c1 e0 03             	shl    $0x3,%eax
 807e369:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807e36c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e36f:	83 e0 3f             	and    $0x3f,%eax
 807e372:	83 f8 30             	cmp    $0x30,%eax
 807e375:	0f 85 68 00 00 00    	jne    807e3e3 <gen_modrm_impl+0xa2>
 807e37b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e37e:	83 c8 05             	or     $0x5,%eax
 807e381:	48 89 c7             	mov    %rax,%rdi
 807e384:	b8 00 00 00 00       	mov    $0x0,%eax
 807e389:	e8 c3 f8 ff ff       	callq  807dc51 <o>
 807e38e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807e391:	85 c0                	test   %eax,%eax
 807e393:	0f 84 25 00 00 00    	je     807e3be <gen_modrm_impl+0x7d>
 807e399:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e39c:	49 89 c2             	mov    %rax,%r10
 807e39f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807e3a3:	48 89 c6             	mov    %rax,%rsi
 807e3a6:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e3a9:	48 89 c7             	mov    %rax,%rdi
 807e3ac:	4c 89 d2             	mov    %r10,%rdx
 807e3af:	b8 00 00 00 00       	mov    $0x0,%eax
 807e3b4:	e8 52 fe ff ff       	callq  807e20b <gen_gotpcrel>
 807e3b9:	e9 20 00 00 00       	jmpq   807e3de <gen_modrm_impl+0x9d>
 807e3be:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e3c1:	49 89 c2             	mov    %rax,%r10
 807e3c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807e3c8:	48 89 c6             	mov    %rax,%rsi
 807e3cb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e3ce:	48 89 c7             	mov    %rax,%rdi
 807e3d1:	4c 89 d2             	mov    %r10,%rdx
 807e3d4:	b8 00 00 00 00       	mov    $0x0,%eax
 807e3d9:	e8 b2 fd ff ff       	callq  807e190 <gen_addrpc32>
 807e3de:	e9 f1 00 00 00       	jmpq   807e4d4 <gen_modrm_impl+0x193>
 807e3e3:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e3e6:	83 e0 3f             	and    $0x3f,%eax
 807e3e9:	83 f8 32             	cmp    $0x32,%eax
 807e3ec:	0f 85 5d 00 00 00    	jne    807e44f <gen_modrm_impl+0x10e>
 807e3f2:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e3f5:	c1 e0 18             	shl    $0x18,%eax
 807e3f8:	c1 f8 18             	sar    $0x18,%eax
 807e3fb:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807e3fe:	39 c1                	cmp    %eax,%ecx
 807e400:	0f 85 28 00 00 00    	jne    807e42e <gen_modrm_impl+0xed>
 807e406:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e409:	83 c8 45             	or     $0x45,%eax
 807e40c:	48 89 c7             	mov    %rax,%rdi
 807e40f:	b8 00 00 00 00       	mov    $0x0,%eax
 807e414:	e8 38 f8 ff ff       	callq  807dc51 <o>
 807e419:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e41c:	48 89 c7             	mov    %rax,%rdi
 807e41f:	b8 00 00 00 00       	mov    $0x0,%eax
 807e424:	e8 7a f7 ff ff       	callq  807dba3 <g>
 807e429:	e9 1c 00 00 00       	jmpq   807e44a <gen_modrm_impl+0x109>
 807e42e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e431:	81 c8 85 00 00 00    	or     $0x85,%eax
 807e437:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807e43a:	48 89 ce             	mov    %rcx,%rsi
 807e43d:	48 89 c7             	mov    %rax,%rdi
 807e440:	b8 00 00 00 00       	mov    $0x0,%eax
 807e445:	e8 80 fb ff ff       	callq  807dfca <oad>
 807e44a:	e9 85 00 00 00       	jmpq   807e4d4 <gen_modrm_impl+0x193>
 807e44f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e452:	83 e0 3f             	and    $0x3f,%eax
 807e455:	83 f8 10             	cmp    $0x10,%eax
 807e458:	0f 8c 5d 00 00 00    	jl     807e4bb <gen_modrm_impl+0x17a>
 807e45e:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e461:	85 c0                	test   %eax,%eax
 807e463:	0f 84 34 00 00 00    	je     807e49d <gen_modrm_impl+0x15c>
 807e469:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e46c:	81 c8 80 00 00 00    	or     $0x80,%eax
 807e472:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 807e475:	83 e1 07             	and    $0x7,%ecx
 807e478:	48 09 c8             	or     %rcx,%rax
 807e47b:	48 89 c7             	mov    %rax,%rdi
 807e47e:	b8 00 00 00 00       	mov    $0x0,%eax
 807e483:	e8 1b f7 ff ff       	callq  807dba3 <g>
 807e488:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e48b:	48 89 c7             	mov    %rax,%rdi
 807e48e:	b8 00 00 00 00       	mov    $0x0,%eax
 807e493:	e8 24 f8 ff ff       	callq  807dcbc <gen_le32>
 807e498:	e9 19 00 00 00       	jmpq   807e4b6 <gen_modrm_impl+0x175>
 807e49d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e4a0:	83 e0 07             	and    $0x7,%eax
 807e4a3:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807e4a6:	48 09 c1             	or     %rax,%rcx
 807e4a9:	48 89 cf             	mov    %rcx,%rdi
 807e4ac:	b8 00 00 00 00       	mov    $0x0,%eax
 807e4b1:	e8 ed f6 ff ff       	callq  807dba3 <g>
 807e4b6:	e9 19 00 00 00       	jmpq   807e4d4 <gen_modrm_impl+0x193>
 807e4bb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e4be:	83 e0 07             	and    $0x7,%eax
 807e4c1:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807e4c4:	48 09 c1             	or     %rax,%rcx
 807e4c7:	48 89 cf             	mov    %rcx,%rdi
 807e4ca:	b8 00 00 00 00       	mov    $0x0,%eax
 807e4cf:	e8 cf f6 ff ff       	callq  807dba3 <g>
 807e4d4:	c9                   	leaveq 
 807e4d5:	c3                   	retq   

000000000807e4d6 <gen_modrm>:
 807e4d6:	55                   	push   %rbp
 807e4d7:	48 89 e5             	mov    %rsp,%rbp
 807e4da:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 807e4e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e4e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e4e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e4ed:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807e4f1:	b8 00 00 00 00       	mov    $0x0,%eax
 807e4f6:	49 89 c0             	mov    %rax,%r8
 807e4f9:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e4fc:	49 89 c3             	mov    %rax,%r11
 807e4ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 807e503:	49 89 c2             	mov    %rax,%r10
 807e506:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e509:	48 89 c6             	mov    %rax,%rsi
 807e50c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e50f:	48 89 c7             	mov    %rax,%rdi
 807e512:	4c 89 d2             	mov    %r10,%rdx
 807e515:	4c 89 d9             	mov    %r11,%rcx
 807e518:	b8 00 00 00 00       	mov    $0x0,%eax
 807e51d:	e8 1f fe ff ff       	callq  807e341 <gen_modrm_impl>
 807e522:	c9                   	leaveq 
 807e523:	c3                   	retq   

000000000807e524 <gen_modrm64>:
 807e524:	55                   	push   %rbp
 807e525:	48 89 e5             	mov    %rsp,%rbp
 807e528:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807e52f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e533:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e537:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 807e53b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 807e53f:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 807e543:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e546:	83 e0 10             	and    $0x10,%eax
 807e549:	85 c0                	test   %eax,%eax
 807e54b:	0f 84 2d 00 00 00    	je     807e57e <gen_modrm64+0x5a>
 807e551:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807e555:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 807e55c:	00 00 00 
 807e55f:	48 01 c8             	add    %rcx,%rax
 807e562:	8b 08                	mov    (%rax),%ecx
 807e564:	81 e1 00 01 00 00    	and    $0x100,%ecx
 807e56a:	85 c9                	test   %ecx,%ecx
 807e56c:	0f 84 05 00 00 00    	je     807e577 <gen_modrm64+0x53>
 807e572:	e9 07 00 00 00       	jmpq   807e57e <gen_modrm64+0x5a>
 807e577:	b8 01 00 00 00       	mov    $0x1,%eax
 807e57c:	eb 05                	jmp    807e583 <gen_modrm64+0x5f>
 807e57e:	b8 00 00 00 00       	mov    $0x0,%eax
 807e583:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 807e586:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e589:	49 89 c3             	mov    %rax,%r11
 807e58c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e58f:	49 89 c2             	mov    %rax,%r10
 807e592:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807e595:	48 89 c6             	mov    %rax,%rsi
 807e598:	b8 01 00 00 00       	mov    $0x1,%eax
 807e59d:	48 89 c7             	mov    %rax,%rdi
 807e5a0:	4c 89 d2             	mov    %r10,%rdx
 807e5a3:	4c 89 d9             	mov    %r11,%rcx
 807e5a6:	b8 00 00 00 00       	mov    $0x0,%eax
 807e5ab:	e8 30 f8 ff ff       	callq  807dde0 <orex>
 807e5b0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807e5b3:	49 89 c0             	mov    %rax,%r8
 807e5b6:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807e5b9:	49 89 c3             	mov    %rax,%r11
 807e5bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 807e5c0:	49 89 c2             	mov    %rax,%r10
 807e5c3:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807e5c6:	48 89 c6             	mov    %rax,%rsi
 807e5c9:	8b 45 f0             	mov    -0x10(%rbp),%eax
 807e5cc:	48 89 c7             	mov    %rax,%rdi
 807e5cf:	4c 89 d2             	mov    %r10,%rdx
 807e5d2:	4c 89 d9             	mov    %r11,%rcx
 807e5d5:	b8 00 00 00 00       	mov    $0x0,%eax
 807e5da:	e8 62 fd ff ff       	callq  807e341 <gen_modrm_impl>
 807e5df:	c9                   	leaveq 
 807e5e0:	c3                   	retq   

000000000807e5e1 <load>:
 807e5e1:	55                   	push   %rbp
 807e5e2:	48 89 e5             	mov    %rsp,%rbp
 807e5e5:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 807e5ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807e5f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807e5f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e5f8:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807e5ff:	00 00 00 
 807e602:	48 01 c8             	add    %rcx,%rax
 807e605:	0f b7 08             	movzwl (%rax),%ecx
 807e608:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 807e60b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e60f:	8b 08                	mov    (%rax),%ecx
 807e611:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 807e614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e618:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807e61f:	00 00 00 
 807e622:	48 01 c8             	add    %rcx,%rax
 807e625:	8b 08                	mov    (%rax),%ecx
 807e627:	89 4d e0             	mov    %ecx,-0x20(%rbp)
 807e62a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e62d:	83 e0 3f             	and    $0x3f,%eax
 807e630:	83 f8 30             	cmp    $0x30,%eax
 807e633:	0f 85 e0 00 00 00    	jne    807e719 <load+0x138>
 807e639:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e63c:	81 e0 00 02 00 00    	and    $0x200,%eax
 807e642:	85 c0                	test   %eax,%eax
 807e644:	0f 84 cf 00 00 00    	je     807e719 <load+0x138>
 807e64a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e64d:	81 e0 00 01 00 00    	and    $0x100,%eax
 807e653:	85 c0                	test   %eax,%eax
 807e655:	0f 84 be 00 00 00    	je     807e719 <load+0x138>
 807e65b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e65f:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807e666:	00 00 00 
 807e669:	48 01 c8             	add    %rcx,%rax
 807e66c:	48 8b 08             	mov    (%rax),%rcx
 807e66f:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 807e676:	00 00 00 
 807e679:	48 01 c1             	add    %rax,%rcx
 807e67c:	8b 01                	mov    (%rcx),%eax
 807e67e:	81 e0 00 01 00 00    	and    $0x100,%eax
 807e684:	85 c0                	test   %eax,%eax
 807e686:	0f 84 05 00 00 00    	je     807e691 <load+0xb0>
 807e68c:	e9 88 00 00 00       	jmpq   807e719 <load+0x138>
 807e691:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e694:	83 c8 10             	or     $0x10,%eax
 807e697:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 807e69a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e69d:	48 89 c7             	mov    %rax,%rdi
 807e6a0:	b8 00 00 00 00       	mov    $0x0,%eax
 807e6a5:	e8 79 d5 fd ff       	callq  805bc23 <is_float>
 807e6aa:	85 c0                	test   %eax,%eax
 807e6ac:	0f 84 18 00 00 00    	je     807e6ca <load+0xe9>
 807e6b2:	b8 01 00 00 00       	mov    $0x1,%eax
 807e6b7:	48 89 c7             	mov    %rax,%rdi
 807e6ba:	b8 00 00 00 00       	mov    $0x0,%eax
 807e6bf:	e8 51 ec fd ff       	callq  805d315 <get_reg>
 807e6c4:	83 c8 10             	or     $0x10,%eax
 807e6c7:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 807e6ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e6ce:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807e6d5:	00 00 00 
 807e6d8:	48 01 c8             	add    %rcx,%rax
 807e6db:	b9 00 00 00 00       	mov    $0x0,%ecx
 807e6e0:	49 89 c8             	mov    %rcx,%r8
 807e6e3:	48 8b 08             	mov    (%rax),%rcx
 807e6e6:	49 89 cb             	mov    %rcx,%r11
 807e6e9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e6ec:	49 89 c2             	mov    %rax,%r10
 807e6ef:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 807e6f2:	48 89 c6             	mov    %rax,%rsi
 807e6f5:	b8 8b 00 00 00       	mov    $0x8b,%eax
 807e6fa:	48 89 c7             	mov    %rax,%rdi
 807e6fd:	4c 89 d2             	mov    %r10,%rdx
 807e700:	4c 89 d9             	mov    %r11,%rcx
 807e703:	b8 00 00 00 00       	mov    $0x0,%eax
 807e708:	e8 17 fe ff ff       	callq  807e524 <gen_modrm64>
 807e70d:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 807e710:	81 c8 00 01 00 00    	or     $0x100,%eax
 807e716:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807e719:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e71c:	83 e0 3f             	and    $0x3f,%eax
 807e71f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807e722:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e725:	81 e0 00 01 00 00    	and    $0x100,%eax
 807e72b:	85 c0                	test   %eax,%eax
 807e72d:	0f 84 41 02 00 00    	je     807e974 <load+0x393>
 807e733:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807e736:	83 f8 31             	cmp    $0x31,%eax
 807e739:	0f 85 75 00 00 00    	jne    807e7b4 <load+0x1d3>
 807e73f:	b8 04 00 00 00       	mov    $0x4,%eax
 807e744:	89 45 a8             	mov    %eax,-0x58(%rbp)
 807e747:	b8 32 01 00 00       	mov    $0x132,%eax
 807e74c:	66 89 45 b8          	mov    %ax,-0x48(%rbp)
 807e750:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807e753:	89 45 c0             	mov    %eax,-0x40(%rbp)
 807e756:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e759:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807e75c:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e75f:	48 63 c0             	movslq %eax,%rax
 807e762:	48 89 c1             	mov    %rax,%rcx
 807e765:	48 c1 e1 02          	shl    $0x2,%rcx
 807e769:	48 8b 05 90 f8 00 00 	mov    0xf890(%rip),%rax        # 808e000 <_GLOBAL_OFFSET_TABLE_+0x380>
 807e770:	48 89 ca             	mov    %rcx,%rdx
 807e773:	48 01 d0             	add    %rdx,%rax
 807e776:	8b 08                	mov    (%rax),%ecx
 807e778:	83 e1 01             	and    $0x1,%ecx
 807e77b:	85 c9                	test   %ecx,%ecx
 807e77d:	0f 84 05 00 00 00    	je     807e788 <load+0x1a7>
 807e783:	e9 15 00 00 00       	jmpq   807e79d <load+0x1bc>
 807e788:	b8 01 00 00 00       	mov    $0x1,%eax
 807e78d:	48 89 c7             	mov    %rax,%rdi
 807e790:	b8 00 00 00 00       	mov    $0x0,%eax
 807e795:	e8 7b eb fd ff       	callq  805d315 <get_reg>
 807e79a:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807e79d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 807e7a1:	48 89 c6             	mov    %rax,%rsi
 807e7a4:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e7a7:	48 89 c7             	mov    %rax,%rdi
 807e7aa:	b8 00 00 00 00       	mov    $0x0,%eax
 807e7af:	e8 2d fe ff ff       	callq  807e5e1 <load>
 807e7b4:	b8 00 00 00 00       	mov    $0x0,%eax
 807e7b9:	89 45 9c             	mov    %eax,-0x64(%rbp)
 807e7bc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e7bf:	83 e0 0f             	and    $0xf,%eax
 807e7c2:	83 f8 08             	cmp    $0x8,%eax
 807e7c5:	0f 85 15 00 00 00    	jne    807e7e0 <load+0x1ff>
 807e7cb:	b8 66 0f 6e 00       	mov    $0x6e0f66,%eax
 807e7d0:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e7d3:	b8 00 00 00 00       	mov    $0x0,%eax
 807e7d8:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807e7db:	e9 df 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e7e0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e7e3:	83 e0 0f             	and    $0xf,%eax
 807e7e6:	83 f8 09             	cmp    $0x9,%eax
 807e7e9:	0f 85 15 00 00 00    	jne    807e804 <load+0x223>
 807e7ef:	b8 f3 0f 7e 00       	mov    $0x7e0ff3,%eax
 807e7f4:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e7f7:	b8 00 00 00 00       	mov    $0x0,%eax
 807e7fc:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807e7ff:	e9 bb 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e804:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e807:	83 e0 0f             	and    $0xf,%eax
 807e80a:	83 f8 0a             	cmp    $0xa,%eax
 807e80d:	0f 85 15 00 00 00    	jne    807e828 <load+0x247>
 807e813:	b8 db 00 00 00       	mov    $0xdb,%eax
 807e818:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e81b:	b8 05 00 00 00       	mov    $0x5,%eax
 807e820:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807e823:	e9 97 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e828:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e82b:	81 e0 7f 38 fe ff    	and    $0xfffe387f,%eax
 807e831:	83 f8 01             	cmp    $0x1,%eax
 807e834:	0f 85 0d 00 00 00    	jne    807e847 <load+0x266>
 807e83a:	b8 0f be 00 00       	mov    $0xbe0f,%eax
 807e83f:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e842:	e9 78 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e847:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e84a:	81 e0 7f 38 fe ff    	and    $0xfffe387f,%eax
 807e850:	83 f8 11             	cmp    $0x11,%eax
 807e853:	0f 85 0d 00 00 00    	jne    807e866 <load+0x285>
 807e859:	b8 0f b6 00 00       	mov    $0xb60f,%eax
 807e85e:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e861:	e9 59 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e866:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e869:	81 e0 7f 38 fe ff    	and    $0xfffe387f,%eax
 807e86f:	83 f8 02             	cmp    $0x2,%eax
 807e872:	0f 85 0d 00 00 00    	jne    807e885 <load+0x2a4>
 807e878:	b8 0f bf 00 00       	mov    $0xbf0f,%eax
 807e87d:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e880:	e9 3a 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e885:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e888:	81 e0 7f 38 fe ff    	and    $0xfffe387f,%eax
 807e88e:	83 f8 12             	cmp    $0x12,%eax
 807e891:	0f 85 0d 00 00 00    	jne    807e8a4 <load+0x2c3>
 807e897:	b8 0f b7 00 00       	mov    $0xb70f,%eax
 807e89c:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e89f:	e9 1b 00 00 00       	jmpq   807e8bf <load+0x2de>
 807e8a4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807e8a7:	48 89 c7             	mov    %rax,%rdi
 807e8aa:	b8 00 00 00 00       	mov    $0x0,%eax
 807e8af:	e8 84 f6 ff ff       	callq  807df38 <is64_type>
 807e8b4:	89 45 9c             	mov    %eax,-0x64(%rbp)
 807e8b7:	b8 8b 00 00 00       	mov    $0x8b,%eax
 807e8bc:	89 45 a0             	mov    %eax,-0x60(%rbp)
 807e8bf:	8b 45 9c             	mov    -0x64(%rbp),%eax
 807e8c2:	85 c0                	test   %eax,%eax
 807e8c4:	0f 84 44 00 00 00    	je     807e90e <load+0x32d>
 807e8ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e8ce:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807e8d5:	00 00 00 
 807e8d8:	48 01 c8             	add    %rcx,%rax
 807e8db:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807e8de:	49 89 c8             	mov    %rcx,%r8
 807e8e1:	48 8b 08             	mov    (%rax),%rcx
 807e8e4:	49 89 cb             	mov    %rcx,%r11
 807e8e7:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e8ea:	49 89 c2             	mov    %rax,%r10
 807e8ed:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e8f0:	48 89 c6             	mov    %rax,%rsi
 807e8f3:	8b 45 a0             	mov    -0x60(%rbp),%eax
 807e8f6:	48 89 c7             	mov    %rax,%rdi
 807e8f9:	4c 89 d2             	mov    %r10,%rdx
 807e8fc:	4c 89 d9             	mov    %r11,%rcx
 807e8ff:	b8 00 00 00 00       	mov    $0x0,%eax
 807e904:	e8 1b fc ff ff       	callq  807e524 <gen_modrm64>
 807e909:	e9 61 00 00 00       	jmpq   807e96f <load+0x38e>
 807e90e:	8b 45 a0             	mov    -0x60(%rbp),%eax
 807e911:	49 89 c3             	mov    %rax,%r11
 807e914:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e917:	49 89 c2             	mov    %rax,%r10
 807e91a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e91d:	48 89 c6             	mov    %rax,%rsi
 807e920:	8b 45 9c             	mov    -0x64(%rbp),%eax
 807e923:	48 89 c7             	mov    %rax,%rdi
 807e926:	4c 89 d2             	mov    %r10,%rdx
 807e929:	4c 89 d9             	mov    %r11,%rcx
 807e92c:	b8 00 00 00 00       	mov    $0x0,%eax
 807e931:	e8 aa f4 ff ff       	callq  807dde0 <orex>
 807e936:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e93a:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807e941:	00 00 00 
 807e944:	48 01 c8             	add    %rcx,%rax
 807e947:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807e94a:	49 89 cb             	mov    %rcx,%r11
 807e94d:	48 8b 08             	mov    (%rax),%rcx
 807e950:	49 89 ca             	mov    %rcx,%r10
 807e953:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e956:	48 89 c6             	mov    %rax,%rsi
 807e959:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e95c:	48 89 c7             	mov    %rax,%rdi
 807e95f:	4c 89 d2             	mov    %r10,%rdx
 807e962:	4c 89 d9             	mov    %r11,%rcx
 807e965:	b8 00 00 00 00       	mov    $0x0,%eax
 807e96a:	e8 67 fb ff ff       	callq  807e4d6 <gen_modrm>
 807e96f:	e9 31 06 00 00       	jmpq   807efa5 <load+0x9c4>
 807e974:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807e977:	83 f8 30             	cmp    $0x30,%eax
 807e97a:	0f 85 f7 01 00 00    	jne    807eb77 <load+0x596>
 807e980:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807e983:	81 e0 00 02 00 00    	and    $0x200,%eax
 807e989:	85 c0                	test   %eax,%eax
 807e98b:	0f 84 29 01 00 00    	je     807eaba <load+0x4d9>
 807e991:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807e995:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807e99c:	00 00 00 
 807e99f:	48 01 c8             	add    %rcx,%rax
 807e9a2:	48 8b 08             	mov    (%rax),%rcx
 807e9a5:	48 b8 20 00 00 00 00 	movabs $0x20,%rax
 807e9ac:	00 00 00 
 807e9af:	48 01 c1             	add    %rax,%rcx
 807e9b2:	8b 01                	mov    (%rcx),%eax
 807e9b4:	81 e0 00 01 00 00    	and    $0x100,%eax
 807e9ba:	85 c0                	test   %eax,%eax
 807e9bc:	0f 84 7c 00 00 00    	je     807ea3e <load+0x45d>
 807e9c2:	b8 8d 00 00 00       	mov    $0x8d,%eax
 807e9c7:	49 89 c3             	mov    %rax,%r11
 807e9ca:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e9cd:	49 89 c2             	mov    %rax,%r10
 807e9d0:	b8 00 00 00 00       	mov    $0x0,%eax
 807e9d5:	48 89 c6             	mov    %rax,%rsi
 807e9d8:	b8 01 00 00 00       	mov    $0x1,%eax
 807e9dd:	48 89 c7             	mov    %rax,%rdi
 807e9e0:	4c 89 d2             	mov    %r10,%rdx
 807e9e3:	4c 89 d9             	mov    %r11,%rcx
 807e9e6:	b8 00 00 00 00       	mov    $0x0,%eax
 807e9eb:	e8 f0 f3 ff ff       	callq  807dde0 <orex>
 807e9f0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807e9f3:	83 e0 07             	and    $0x7,%eax
 807e9f6:	c1 e0 03             	shl    $0x3,%eax
 807e9f9:	83 c0 05             	add    $0x5,%eax
 807e9fc:	48 89 c7             	mov    %rax,%rdi
 807e9ff:	b8 00 00 00 00       	mov    $0x0,%eax
 807ea04:	e8 48 f2 ff ff       	callq  807dc51 <o>
 807ea09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807ea0d:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807ea14:	00 00 00 
 807ea17:	48 01 c8             	add    %rcx,%rax
 807ea1a:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807ea1d:	49 89 ca             	mov    %rcx,%r10
 807ea20:	48 8b 08             	mov    (%rax),%rcx
 807ea23:	48 89 ce             	mov    %rcx,%rsi
 807ea26:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807ea29:	48 89 c7             	mov    %rax,%rdi
 807ea2c:	4c 89 d2             	mov    %r10,%rdx
 807ea2f:	b8 00 00 00 00       	mov    $0x0,%eax
 807ea34:	e8 57 f7 ff ff       	callq  807e190 <gen_addrpc32>
 807ea39:	e9 77 00 00 00       	jmpq   807eab5 <load+0x4d4>
 807ea3e:	b8 8b 00 00 00       	mov    $0x8b,%eax
 807ea43:	49 89 c3             	mov    %rax,%r11
 807ea46:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ea49:	49 89 c2             	mov    %rax,%r10
 807ea4c:	b8 00 00 00 00       	mov    $0x0,%eax
 807ea51:	48 89 c6             	mov    %rax,%rsi
 807ea54:	b8 01 00 00 00       	mov    $0x1,%eax
 807ea59:	48 89 c7             	mov    %rax,%rdi
 807ea5c:	4c 89 d2             	mov    %r10,%rdx
 807ea5f:	4c 89 d9             	mov    %r11,%rcx
 807ea62:	b8 00 00 00 00       	mov    $0x0,%eax
 807ea67:	e8 74 f3 ff ff       	callq  807dde0 <orex>
 807ea6c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ea6f:	83 e0 07             	and    $0x7,%eax
 807ea72:	c1 e0 03             	shl    $0x3,%eax
 807ea75:	83 c0 05             	add    $0x5,%eax
 807ea78:	48 89 c7             	mov    %rax,%rdi
 807ea7b:	b8 00 00 00 00       	mov    $0x0,%eax
 807ea80:	e8 cc f1 ff ff       	callq  807dc51 <o>
 807ea85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807ea89:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807ea90:	00 00 00 
 807ea93:	48 01 c8             	add    %rcx,%rax
 807ea96:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807ea99:	49 89 ca             	mov    %rcx,%r10
 807ea9c:	48 8b 08             	mov    (%rax),%rcx
 807ea9f:	48 89 ce             	mov    %rcx,%rsi
 807eaa2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eaa5:	48 89 c7             	mov    %rax,%rdi
 807eaa8:	4c 89 d2             	mov    %r10,%rdx
 807eaab:	b8 00 00 00 00       	mov    $0x0,%eax
 807eab0:	e8 56 f7 ff ff       	callq  807e20b <gen_gotpcrel>
 807eab5:	e9 b8 00 00 00       	jmpq   807eb72 <load+0x591>
 807eaba:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807eabd:	48 89 c7             	mov    %rax,%rdi
 807eac0:	b8 00 00 00 00       	mov    $0x0,%eax
 807eac5:	e8 6e f4 ff ff       	callq  807df38 <is64_type>
 807eaca:	85 c0                	test   %eax,%eax
 807eacc:	0f 84 5b 00 00 00    	je     807eb2d <load+0x54c>
 807ead2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ead5:	83 e0 07             	and    $0x7,%eax
 807ead8:	81 c0 b8 00 00 00    	add    $0xb8,%eax
 807eade:	49 89 c3             	mov    %rax,%r11
 807eae1:	b8 00 00 00 00       	mov    $0x0,%eax
 807eae6:	49 89 c2             	mov    %rax,%r10
 807eae9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eaec:	48 89 c6             	mov    %rax,%rsi
 807eaef:	b8 01 00 00 00       	mov    $0x1,%eax
 807eaf4:	48 89 c7             	mov    %rax,%rdi
 807eaf7:	4c 89 d2             	mov    %r10,%rdx
 807eafa:	4c 89 d9             	mov    %r11,%rcx
 807eafd:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb02:	e8 d9 f2 ff ff       	callq  807dde0 <orex>
 807eb07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807eb0b:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807eb12:	00 00 00 
 807eb15:	48 01 c8             	add    %rcx,%rax
 807eb18:	48 8b 08             	mov    (%rax),%rcx
 807eb1b:	48 89 cf             	mov    %rcx,%rdi
 807eb1e:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb23:	e8 ee f1 ff ff       	callq  807dd16 <gen_le64>
 807eb28:	e9 45 00 00 00       	jmpq   807eb72 <load+0x591>
 807eb2d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eb30:	83 e0 07             	and    $0x7,%eax
 807eb33:	81 c0 b8 00 00 00    	add    $0xb8,%eax
 807eb39:	49 89 c3             	mov    %rax,%r11
 807eb3c:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb41:	49 89 c2             	mov    %rax,%r10
 807eb44:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eb47:	48 89 c6             	mov    %rax,%rsi
 807eb4a:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb4f:	48 89 c7             	mov    %rax,%rdi
 807eb52:	4c 89 d2             	mov    %r10,%rdx
 807eb55:	4c 89 d9             	mov    %r11,%rcx
 807eb58:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb5d:	e8 7e f2 ff ff       	callq  807dde0 <orex>
 807eb62:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807eb65:	48 89 c7             	mov    %rax,%rdi
 807eb68:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb6d:	e8 4a f1 ff ff       	callq  807dcbc <gen_le32>
 807eb72:	e9 2e 04 00 00       	jmpq   807efa5 <load+0x9c4>
 807eb77:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807eb7a:	83 f8 32             	cmp    $0x32,%eax
 807eb7d:	0f 85 6e 00 00 00    	jne    807ebf1 <load+0x610>
 807eb83:	b8 8d 00 00 00       	mov    $0x8d,%eax
 807eb88:	49 89 c3             	mov    %rax,%r11
 807eb8b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eb8e:	49 89 c2             	mov    %rax,%r10
 807eb91:	b8 00 00 00 00       	mov    $0x0,%eax
 807eb96:	48 89 c6             	mov    %rax,%rsi
 807eb99:	b8 01 00 00 00       	mov    $0x1,%eax
 807eb9e:	48 89 c7             	mov    %rax,%rdi
 807eba1:	4c 89 d2             	mov    %r10,%rdx
 807eba4:	4c 89 d9             	mov    %r11,%rcx
 807eba7:	b8 00 00 00 00       	mov    $0x0,%eax
 807ebac:	e8 2f f2 ff ff       	callq  807dde0 <orex>
 807ebb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807ebb5:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807ebbc:	00 00 00 
 807ebbf:	48 01 c8             	add    %rcx,%rax
 807ebc2:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 807ebc5:	49 89 cb             	mov    %rcx,%r11
 807ebc8:	48 8b 08             	mov    (%rax),%rcx
 807ebcb:	49 89 ca             	mov    %rcx,%r10
 807ebce:	b8 32 00 00 00       	mov    $0x32,%eax
 807ebd3:	48 89 c6             	mov    %rax,%rsi
 807ebd6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ebd9:	48 89 c7             	mov    %rax,%rdi
 807ebdc:	4c 89 d2             	mov    %r10,%rdx
 807ebdf:	4c 89 d9             	mov    %r11,%rcx
 807ebe2:	b8 00 00 00 00       	mov    $0x0,%eax
 807ebe7:	e8 ea f8 ff ff       	callq  807e4d6 <gen_modrm>
 807ebec:	e9 b4 03 00 00       	jmpq   807efa5 <load+0x9c4>
 807ebf1:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ebf4:	83 f8 33             	cmp    $0x33,%eax
 807ebf7:	0f 85 22 01 00 00    	jne    807ed1f <load+0x73e>
 807ebfd:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec02:	49 89 c3             	mov    %rax,%r11
 807ec05:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec0a:	49 89 c2             	mov    %rax,%r10
 807ec0d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ec10:	48 89 c6             	mov    %rax,%rsi
 807ec13:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec18:	48 89 c7             	mov    %rax,%rdi
 807ec1b:	4c 89 d2             	mov    %r10,%rdx
 807ec1e:	4c 89 d9             	mov    %r11,%rcx
 807ec21:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec26:	e8 b5 f1 ff ff       	callq  807dde0 <orex>
 807ec2b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807ec2e:	81 e0 ff fe ff ff    	and    $0xfffffeff,%eax
 807ec34:	81 f8 95 00 00 00    	cmp    $0x95,%eax
 807ec3a:	0f 84 26 00 00 00    	je     807ec66 <load+0x685>
 807ec40:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ec43:	83 e0 07             	and    $0x7,%eax
 807ec46:	81 c0 b8 00 00 00    	add    $0xb8,%eax
 807ec4c:	b9 00 00 00 00       	mov    $0x0,%ecx
 807ec51:	48 89 ce             	mov    %rcx,%rsi
 807ec54:	48 89 c7             	mov    %rax,%rdi
 807ec57:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec5c:	e8 69 f3 ff ff       	callq  807dfca <oad>
 807ec61:	e9 21 00 00 00       	jmpq   807ec87 <load+0x6a6>
 807ec66:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ec69:	83 e0 07             	and    $0x7,%eax
 807ec6c:	81 c0 b8 00 00 00    	add    $0xb8,%eax
 807ec72:	b9 01 00 00 00       	mov    $0x1,%ecx
 807ec77:	48 89 ce             	mov    %rcx,%rsi
 807ec7a:	48 89 c7             	mov    %rax,%rdi
 807ec7d:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec82:	e8 43 f3 ff ff       	callq  807dfca <oad>
 807ec87:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807ec8a:	81 e0 00 01 00 00    	and    $0x100,%eax
 807ec90:	85 c0                	test   %eax,%eax
 807ec92:	0f 84 2b 00 00 00    	je     807ecc3 <load+0x6e2>
 807ec98:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807ec9b:	81 e0 ff fe ff ff    	and    $0xfffffeff,%eax
 807eca1:	89 45 e0             	mov    %eax,-0x20(%rbp)
 807eca4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eca7:	c1 f8 03             	sar    $0x3,%eax
 807ecaa:	83 e0 01             	and    $0x1,%eax
 807ecad:	c1 e0 08             	shl    $0x8,%eax
 807ecb0:	81 c0 7a 03 00 00    	add    $0x37a,%eax
 807ecb6:	48 89 c7             	mov    %rax,%rdi
 807ecb9:	b8 00 00 00 00       	mov    $0x0,%eax
 807ecbe:	e8 8e ef ff ff       	callq  807dc51 <o>
 807ecc3:	b8 0f 00 00 00       	mov    $0xf,%eax
 807ecc8:	49 89 c3             	mov    %rax,%r11
 807eccb:	b8 00 00 00 00       	mov    $0x0,%eax
 807ecd0:	49 89 c2             	mov    %rax,%r10
 807ecd3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ecd6:	48 89 c6             	mov    %rax,%rsi
 807ecd9:	b8 00 00 00 00       	mov    $0x0,%eax
 807ecde:	48 89 c7             	mov    %rax,%rdi
 807ece1:	4c 89 d2             	mov    %r10,%rdx
 807ece4:	4c 89 d9             	mov    %r11,%rcx
 807ece7:	b8 00 00 00 00       	mov    $0x0,%eax
 807ecec:	e8 ef f0 ff ff       	callq  807dde0 <orex>
 807ecf1:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807ecf4:	48 89 c7             	mov    %rax,%rdi
 807ecf7:	b8 00 00 00 00       	mov    $0x0,%eax
 807ecfc:	e8 50 ef ff ff       	callq  807dc51 <o>
 807ed01:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ed04:	83 e0 07             	and    $0x7,%eax
 807ed07:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807ed0d:	48 89 c7             	mov    %rax,%rdi
 807ed10:	b8 00 00 00 00       	mov    $0x0,%eax
 807ed15:	e8 37 ef ff ff       	callq  807dc51 <o>
 807ed1a:	e9 86 02 00 00       	jmpq   807efa5 <load+0x9c4>
 807ed1f:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ed22:	83 f8 34             	cmp    $0x34,%eax
 807ed25:	0f 84 11 00 00 00    	je     807ed3c <load+0x75b>
 807ed2b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ed2e:	83 f8 35             	cmp    $0x35,%eax
 807ed31:	0f 84 05 00 00 00    	je     807ed3c <load+0x75b>
 807ed37:	e9 da 00 00 00       	jmpq   807ee16 <load+0x835>
 807ed3c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ed3f:	83 e0 01             	and    $0x1,%eax
 807ed42:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807ed45:	b8 00 00 00 00       	mov    $0x0,%eax
 807ed4a:	49 89 c3             	mov    %rax,%r11
 807ed4d:	b8 00 00 00 00       	mov    $0x0,%eax
 807ed52:	49 89 c2             	mov    %rax,%r10
 807ed55:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ed58:	48 89 c6             	mov    %rax,%rsi
 807ed5b:	b8 00 00 00 00       	mov    $0x0,%eax
 807ed60:	48 89 c7             	mov    %rax,%rdi
 807ed63:	4c 89 d2             	mov    %r10,%rdx
 807ed66:	4c 89 d9             	mov    %r11,%rcx
 807ed69:	b8 00 00 00 00       	mov    $0x0,%eax
 807ed6e:	e8 6d f0 ff ff       	callq  807dde0 <orex>
 807ed73:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ed76:	83 e0 07             	and    $0x7,%eax
 807ed79:	81 c0 b8 00 00 00    	add    $0xb8,%eax
 807ed7f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807ed82:	48 89 ce             	mov    %rcx,%rsi
 807ed85:	48 89 c7             	mov    %rax,%rdi
 807ed88:	b8 00 00 00 00       	mov    $0x0,%eax
 807ed8d:	e8 38 f2 ff ff       	callq  807dfca <oad>
 807ed92:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ed95:	c1 f8 03             	sar    $0x3,%eax
 807ed98:	83 e0 01             	and    $0x1,%eax
 807ed9b:	c1 e0 08             	shl    $0x8,%eax
 807ed9e:	81 c0 eb 05 00 00    	add    $0x5eb,%eax
 807eda4:	48 89 c7             	mov    %rax,%rdi
 807eda7:	b8 00 00 00 00       	mov    $0x0,%eax
 807edac:	e8 a0 ee ff ff       	callq  807dc51 <o>
 807edb1:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807edb4:	48 89 c7             	mov    %rax,%rdi
 807edb7:	b8 00 00 00 00       	mov    $0x0,%eax
 807edbc:	e8 4a f1 ff ff       	callq  807df0b <gsym>
 807edc1:	b8 00 00 00 00       	mov    $0x0,%eax
 807edc6:	49 89 c3             	mov    %rax,%r11
 807edc9:	b8 00 00 00 00       	mov    $0x0,%eax
 807edce:	49 89 c2             	mov    %rax,%r10
 807edd1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807edd4:	48 89 c6             	mov    %rax,%rsi
 807edd7:	b8 00 00 00 00       	mov    $0x0,%eax
 807eddc:	48 89 c7             	mov    %rax,%rdi
 807eddf:	4c 89 d2             	mov    %r10,%rdx
 807ede2:	4c 89 d9             	mov    %r11,%rcx
 807ede5:	b8 00 00 00 00       	mov    $0x0,%eax
 807edea:	e8 f1 ef ff ff       	callq  807dde0 <orex>
 807edef:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807edf2:	83 e0 07             	and    $0x7,%eax
 807edf5:	81 c0 b8 00 00 00    	add    $0xb8,%eax
 807edfb:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807edfe:	83 f1 01             	xor    $0x1,%ecx
 807ee01:	48 89 ce             	mov    %rcx,%rsi
 807ee04:	48 89 c7             	mov    %rax,%rdi
 807ee07:	b8 00 00 00 00       	mov    $0x0,%eax
 807ee0c:	e8 b9 f1 ff ff       	callq  807dfca <oad>
 807ee11:	e9 8f 01 00 00       	jmpq   807efa5 <load+0x9c4>
 807ee16:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ee19:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807ee1c:	39 c8                	cmp    %ecx,%eax
 807ee1e:	0f 84 81 01 00 00    	je     807efa5 <load+0x9c4>
 807ee24:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ee27:	83 f8 03             	cmp    $0x3,%eax
 807ee2a:	0f 85 8c 00 00 00    	jne    807eebc <load+0x8db>
 807ee30:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ee33:	83 f8 04             	cmp    $0x4,%eax
 807ee36:	0f 85 05 00 00 00    	jne    807ee41 <load+0x860>
 807ee3c:	e9 3b 00 00 00       	jmpq   807ee7c <load+0x89b>
 807ee41:	48 8d 05 a7 de 00 00 	lea    0xdea7(%rip),%rax        # 808ccef <L.109>
 807ee48:	49 89 c3             	mov    %rax,%r11
 807ee4b:	b8 c9 01 00 00       	mov    $0x1c9,%eax
 807ee50:	49 89 c2             	mov    %rax,%r10
 807ee53:	48 8d 05 88 de 00 00 	lea    0xde88(%rip),%rax        # 808cce2 <L.108>
 807ee5a:	48 89 c6             	mov    %rax,%rsi
 807ee5d:	48 8d 05 70 de 00 00 	lea    0xde70(%rip),%rax        # 808ccd4 <L.107>
 807ee64:	48 89 c7             	mov    %rax,%rdi
 807ee67:	4c 89 d2             	mov    %r10,%rdx
 807ee6a:	4c 89 d9             	mov    %r11,%rcx
 807ee6d:	b8 00 00 00 00       	mov    $0x0,%eax
 807ee72:	e8 29 8f 00 00       	callq  8087da0 <__preinit_array_end+0x300>
 807ee77:	e9 05 00 00 00       	jmpq   807ee81 <load+0x8a0>
 807ee7c:	b8 00 00 00 00       	mov    $0x0,%eax
 807ee81:	b8 dd 5c 24 f0       	mov    $0xf0245cdd,%eax
 807ee86:	48 89 c7             	mov    %rax,%rdi
 807ee89:	b8 00 00 00 00       	mov    $0x0,%eax
 807ee8e:	e8 be ed ff ff       	callq  807dc51 <o>
 807ee93:	b8 f2 0f 10 44       	mov    $0x44100ff2,%eax
 807ee98:	48 89 c7             	mov    %rax,%rdi
 807ee9b:	b8 00 00 00 00       	mov    $0x0,%eax
 807eea0:	e8 ac ed ff ff       	callq  807dc51 <o>
 807eea5:	b8 24 f0 00 00       	mov    $0xf024,%eax
 807eeaa:	48 89 c7             	mov    %rax,%rdi
 807eead:	b8 00 00 00 00       	mov    $0x0,%eax
 807eeb2:	e8 9a ed ff ff       	callq  807dc51 <o>
 807eeb7:	e9 e9 00 00 00       	jmpq   807efa5 <load+0x9c4>
 807eebc:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807eebf:	83 f8 04             	cmp    $0x4,%eax
 807eec2:	0f 85 8c 00 00 00    	jne    807ef54 <load+0x973>
 807eec8:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807eecb:	83 f8 03             	cmp    $0x3,%eax
 807eece:	0f 85 05 00 00 00    	jne    807eed9 <load+0x8f8>
 807eed4:	e9 3b 00 00 00       	jmpq   807ef14 <load+0x933>
 807eed9:	48 8d 05 30 de 00 00 	lea    0xde30(%rip),%rax        # 808cd10 <L.112>
 807eee0:	49 89 c3             	mov    %rax,%r11
 807eee3:	b8 d0 01 00 00       	mov    $0x1d0,%eax
 807eee8:	49 89 c2             	mov    %rax,%r10
 807eeeb:	48 8d 05 11 de 00 00 	lea    0xde11(%rip),%rax        # 808cd03 <L.111>
 807eef2:	48 89 c6             	mov    %rax,%rsi
 807eef5:	48 8d 05 f8 dd 00 00 	lea    0xddf8(%rip),%rax        # 808ccf4 <L.110>
 807eefc:	48 89 c7             	mov    %rax,%rdi
 807eeff:	4c 89 d2             	mov    %r10,%rdx
 807ef02:	4c 89 d9             	mov    %r11,%rcx
 807ef05:	b8 00 00 00 00       	mov    $0x0,%eax
 807ef0a:	e8 91 8e 00 00       	callq  8087da0 <__preinit_array_end+0x300>
 807ef0f:	e9 05 00 00 00       	jmpq   807ef19 <load+0x938>
 807ef14:	b8 00 00 00 00       	mov    $0x0,%eax
 807ef19:	b8 f2 0f 11 44       	mov    $0x44110ff2,%eax
 807ef1e:	48 89 c7             	mov    %rax,%rdi
 807ef21:	b8 00 00 00 00       	mov    $0x0,%eax
 807ef26:	e8 26 ed ff ff       	callq  807dc51 <o>
 807ef2b:	b8 24 f0 00 00       	mov    $0xf024,%eax
 807ef30:	48 89 c7             	mov    %rax,%rdi
 807ef33:	b8 00 00 00 00       	mov    $0x0,%eax
 807ef38:	e8 14 ed ff ff       	callq  807dc51 <o>
 807ef3d:	b8 dd 44 24 f0       	mov    $0xf02444dd,%eax
 807ef42:	48 89 c7             	mov    %rax,%rdi
 807ef45:	b8 00 00 00 00       	mov    $0x0,%eax
 807ef4a:	e8 02 ed ff ff       	callq  807dc51 <o>
 807ef4f:	e9 51 00 00 00       	jmpq   807efa5 <load+0x9c4>
 807ef54:	b8 89 00 00 00       	mov    $0x89,%eax
 807ef59:	49 89 c3             	mov    %rax,%r11
 807ef5c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ef5f:	49 89 c2             	mov    %rax,%r10
 807ef62:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ef65:	48 89 c6             	mov    %rax,%rsi
 807ef68:	b8 01 00 00 00       	mov    $0x1,%eax
 807ef6d:	48 89 c7             	mov    %rax,%rdi
 807ef70:	4c 89 d2             	mov    %r10,%rdx
 807ef73:	4c 89 d9             	mov    %r11,%rcx
 807ef76:	b8 00 00 00 00       	mov    $0x0,%eax
 807ef7b:	e8 60 ee ff ff       	callq  807dde0 <orex>
 807ef80:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807ef83:	83 e0 07             	and    $0x7,%eax
 807ef86:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807ef8c:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 807ef8f:	83 e1 07             	and    $0x7,%ecx
 807ef92:	c1 e1 03             	shl    $0x3,%ecx
 807ef95:	48 01 c8             	add    %rcx,%rax
 807ef98:	48 89 c7             	mov    %rax,%rdi
 807ef9b:	b8 00 00 00 00       	mov    $0x0,%eax
 807efa0:	e8 ac ec ff ff       	callq  807dc51 <o>
 807efa5:	c9                   	leaveq 
 807efa6:	c3                   	retq   

000000000807efa7 <store>:
 807efa7:	55                   	push   %rbp
 807efa8:	48 89 e5             	mov    %rsp,%rbp
 807efab:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 807efb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807efb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 807efba:	b8 00 00 00 00       	mov    $0x0,%eax
 807efbf:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807efc2:	b8 00 00 00 00       	mov    $0x0,%eax
 807efc7:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807efca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807efce:	8b 08                	mov    (%rax),%ecx
 807efd0:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 807efd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807efd7:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 807efde:	00 00 00 
 807efe1:	48 01 c8             	add    %rcx,%rax
 807efe4:	8b 08                	mov    (%rax),%ecx
 807efe6:	89 4d e0             	mov    %ecx,-0x20(%rbp)
 807efe9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807efed:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807eff4:	00 00 00 
 807eff7:	48 01 c8             	add    %rcx,%rax
 807effa:	0f b7 08             	movzwl (%rax),%ecx
 807effd:	83 e1 3f             	and    $0x3f,%ecx
 807f000:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 807f003:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807f006:	83 e0 0f             	and    $0xf,%eax
 807f009:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f00c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f00f:	83 f8 30             	cmp    $0x30,%eax
 807f012:	0f 85 a5 00 00 00    	jne    807f0bd <store+0x116>
 807f018:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807f01c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f023:	00 00 00 
 807f026:	48 01 c8             	add    %rcx,%rax
 807f029:	0f b7 08             	movzwl (%rax),%ecx
 807f02c:	81 e1 00 02 00 00    	and    $0x200,%ecx
 807f032:	85 c9                	test   %ecx,%ecx
 807f034:	0f 84 83 00 00 00    	je     807f0bd <store+0x116>
 807f03a:	b8 4c 8b 1d 00       	mov    $0x1d8b4c,%eax
 807f03f:	48 89 c7             	mov    %rax,%rdi
 807f042:	b8 00 00 00 00       	mov    $0x0,%eax
 807f047:	e8 05 ec ff ff       	callq  807dc51 <o>
 807f04c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807f050:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807f057:	00 00 00 
 807f05a:	48 01 c8             	add    %rcx,%rax
 807f05d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 807f061:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 807f068:	00 00 00 
 807f06b:	48 01 d1             	add    %rdx,%rcx
 807f06e:	8b 11                	mov    (%rcx),%edx
 807f070:	49 89 d2             	mov    %rdx,%r10
 807f073:	48 8b 08             	mov    (%rax),%rcx
 807f076:	48 89 ce             	mov    %rcx,%rsi
 807f079:	b8 0b 00 00 00       	mov    $0xb,%eax
 807f07e:	48 89 c7             	mov    %rax,%rdi
 807f081:	4c 89 d2             	mov    %r10,%rdx
 807f084:	b8 00 00 00 00       	mov    $0x0,%eax
 807f089:	e8 7d f1 ff ff       	callq  807e20b <gen_gotpcrel>
 807f08e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f091:	48 89 c7             	mov    %rax,%rdi
 807f094:	b8 00 00 00 00       	mov    $0x0,%eax
 807f099:	e8 9a ee ff ff       	callq  807df38 <is64_type>
 807f09e:	85 c0                	test   %eax,%eax
 807f0a0:	0f 84 05 00 00 00    	je     807f0ab <store+0x104>
 807f0a6:	e9 0a 00 00 00       	jmpq   807f0b5 <store+0x10e>
 807f0ab:	b8 41 00 00 00       	mov    $0x41,%eax
 807f0b0:	e9 05 00 00 00       	jmpq   807f0ba <store+0x113>
 807f0b5:	b8 49 00 00 00       	mov    $0x49,%eax
 807f0ba:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807f0bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f0c0:	83 f8 08             	cmp    $0x8,%eax
 807f0c3:	0f 85 41 00 00 00    	jne    807f10a <store+0x163>
 807f0c9:	b8 66 00 00 00       	mov    $0x66,%eax
 807f0ce:	48 89 c7             	mov    %rax,%rdi
 807f0d1:	b8 00 00 00 00       	mov    $0x0,%eax
 807f0d6:	e8 76 eb ff ff       	callq  807dc51 <o>
 807f0db:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807f0de:	48 89 c7             	mov    %rax,%rdi
 807f0e1:	b8 00 00 00 00       	mov    $0x0,%eax
 807f0e6:	e8 66 eb ff ff       	callq  807dc51 <o>
 807f0eb:	b8 0f 7e 00 00       	mov    $0x7e0f,%eax
 807f0f0:	48 89 c7             	mov    %rax,%rdi
 807f0f3:	b8 00 00 00 00       	mov    $0x0,%eax
 807f0f8:	e8 54 eb ff ff       	callq  807dc51 <o>
 807f0fd:	b8 00 00 00 00       	mov    $0x0,%eax
 807f102:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807f105:	e9 6b 01 00 00       	jmpq   807f275 <store+0x2ce>
 807f10a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f10d:	83 f8 09             	cmp    $0x9,%eax
 807f110:	0f 85 41 00 00 00    	jne    807f157 <store+0x1b0>
 807f116:	b8 66 00 00 00       	mov    $0x66,%eax
 807f11b:	48 89 c7             	mov    %rax,%rdi
 807f11e:	b8 00 00 00 00       	mov    $0x0,%eax
 807f123:	e8 29 eb ff ff       	callq  807dc51 <o>
 807f128:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807f12b:	48 89 c7             	mov    %rax,%rdi
 807f12e:	b8 00 00 00 00       	mov    $0x0,%eax
 807f133:	e8 19 eb ff ff       	callq  807dc51 <o>
 807f138:	b8 0f d6 00 00       	mov    $0xd60f,%eax
 807f13d:	48 89 c7             	mov    %rax,%rdi
 807f140:	b8 00 00 00 00       	mov    $0x0,%eax
 807f145:	e8 07 eb ff ff       	callq  807dc51 <o>
 807f14a:	b8 00 00 00 00       	mov    $0x0,%eax
 807f14f:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807f152:	e9 1e 01 00 00       	jmpq   807f275 <store+0x2ce>
 807f157:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f15a:	83 f8 0a             	cmp    $0xa,%eax
 807f15d:	0f 85 41 00 00 00    	jne    807f1a4 <store+0x1fd>
 807f163:	b8 d9 c0 00 00       	mov    $0xc0d9,%eax
 807f168:	48 89 c7             	mov    %rax,%rdi
 807f16b:	b8 00 00 00 00       	mov    $0x0,%eax
 807f170:	e8 dc ea ff ff       	callq  807dc51 <o>
 807f175:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807f178:	48 89 c7             	mov    %rax,%rdi
 807f17b:	b8 00 00 00 00       	mov    $0x0,%eax
 807f180:	e8 cc ea ff ff       	callq  807dc51 <o>
 807f185:	b8 db 00 00 00       	mov    $0xdb,%eax
 807f18a:	48 89 c7             	mov    %rax,%rdi
 807f18d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f192:	e8 ba ea ff ff       	callq  807dc51 <o>
 807f197:	b8 07 00 00 00       	mov    $0x7,%eax
 807f19c:	89 45 f8             	mov    %eax,-0x8(%rbp)
 807f19f:	e9 d1 00 00 00       	jmpq   807f275 <store+0x2ce>
 807f1a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f1a7:	83 f8 02             	cmp    $0x2,%eax
 807f1aa:	0f 85 12 00 00 00    	jne    807f1c2 <store+0x21b>
 807f1b0:	b8 66 00 00 00       	mov    $0x66,%eax
 807f1b5:	48 89 c7             	mov    %rax,%rdi
 807f1b8:	b8 00 00 00 00       	mov    $0x0,%eax
 807f1bd:	e8 8f ea ff ff       	callq  807dc51 <o>
 807f1c2:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807f1c5:	48 89 c7             	mov    %rax,%rdi
 807f1c8:	b8 00 00 00 00       	mov    $0x0,%eax
 807f1cd:	e8 7f ea ff ff       	callq  807dc51 <o>
 807f1d2:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f1d5:	83 f8 01             	cmp    $0x1,%eax
 807f1d8:	0f 84 11 00 00 00    	je     807f1ef <store+0x248>
 807f1de:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f1e1:	83 f8 0b             	cmp    $0xb,%eax
 807f1e4:	0f 84 05 00 00 00    	je     807f1ef <store+0x248>
 807f1ea:	e9 33 00 00 00       	jmpq   807f222 <store+0x27b>
 807f1ef:	b8 88 00 00 00       	mov    $0x88,%eax
 807f1f4:	49 89 c3             	mov    %rax,%r11
 807f1f7:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f1fa:	49 89 c2             	mov    %rax,%r10
 807f1fd:	b8 00 00 00 00       	mov    $0x0,%eax
 807f202:	48 89 c6             	mov    %rax,%rsi
 807f205:	b8 00 00 00 00       	mov    $0x0,%eax
 807f20a:	48 89 c7             	mov    %rax,%rdi
 807f20d:	4c 89 d2             	mov    %r10,%rdx
 807f210:	4c 89 d9             	mov    %r11,%rcx
 807f213:	b8 00 00 00 00       	mov    $0x0,%eax
 807f218:	e8 c3 eb ff ff       	callq  807dde0 <orex>
 807f21d:	e9 53 00 00 00       	jmpq   807f275 <store+0x2ce>
 807f222:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f225:	48 89 c7             	mov    %rax,%rdi
 807f228:	b8 00 00 00 00       	mov    $0x0,%eax
 807f22d:	e8 06 ed ff ff       	callq  807df38 <is64_type>
 807f232:	85 c0                	test   %eax,%eax
 807f234:	0f 84 0d 00 00 00    	je     807f247 <store+0x2a0>
 807f23a:	b8 89 00 00 00       	mov    $0x89,%eax
 807f23f:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807f242:	e9 2e 00 00 00       	jmpq   807f275 <store+0x2ce>
 807f247:	b8 89 00 00 00       	mov    $0x89,%eax
 807f24c:	49 89 c3             	mov    %rax,%r11
 807f24f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f252:	49 89 c2             	mov    %rax,%r10
 807f255:	b8 00 00 00 00       	mov    $0x0,%eax
 807f25a:	48 89 c6             	mov    %rax,%rsi
 807f25d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f262:	48 89 c7             	mov    %rax,%rdi
 807f265:	4c 89 d2             	mov    %r10,%rdx
 807f268:	4c 89 d9             	mov    %r11,%rcx
 807f26b:	b8 00 00 00 00       	mov    $0x0,%eax
 807f270:	e8 6b eb ff ff       	callq  807dde0 <orex>
 807f275:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807f278:	85 c0                	test   %eax,%eax
 807f27a:	0f 84 36 00 00 00    	je     807f2b6 <store+0x30f>
 807f280:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f283:	85 c0                	test   %eax,%eax
 807f285:	0f 84 10 00 00 00    	je     807f29b <store+0x2f4>
 807f28b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f28e:	48 89 c7             	mov    %rax,%rdi
 807f291:	b8 00 00 00 00       	mov    $0x0,%eax
 807f296:	e8 b6 e9 ff ff       	callq  807dc51 <o>
 807f29b:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f29e:	c1 e0 03             	shl    $0x3,%eax
 807f2a1:	83 c0 03             	add    $0x3,%eax
 807f2a4:	48 89 c7             	mov    %rax,%rdi
 807f2a7:	b8 00 00 00 00       	mov    $0x0,%eax
 807f2ac:	e8 a0 e9 ff ff       	callq  807dc51 <o>
 807f2b1:	e9 a0 01 00 00       	jmpq   807f456 <store+0x4af>
 807f2b6:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f2b9:	85 c0                	test   %eax,%eax
 807f2bb:	0f 84 d0 00 00 00    	je     807f391 <store+0x3ea>
 807f2c1:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f2c4:	83 f8 30             	cmp    $0x30,%eax
 807f2c7:	0f 84 33 00 00 00    	je     807f300 <store+0x359>
 807f2cd:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f2d0:	83 f8 32             	cmp    $0x32,%eax
 807f2d3:	0f 84 27 00 00 00    	je     807f300 <store+0x359>
 807f2d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807f2dd:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f2e4:	00 00 00 
 807f2e7:	48 01 c8             	add    %rcx,%rax
 807f2ea:	0f b7 08             	movzwl (%rax),%ecx
 807f2ed:	81 e1 00 01 00 00    	and    $0x100,%ecx
 807f2f3:	85 c9                	test   %ecx,%ecx
 807f2f5:	0f 85 05 00 00 00    	jne    807f300 <store+0x359>
 807f2fb:	e9 55 00 00 00       	jmpq   807f355 <store+0x3ae>
 807f300:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807f304:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f30b:	00 00 00 
 807f30e:	48 01 c8             	add    %rcx,%rax
 807f311:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 807f315:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 807f31c:	00 00 00 
 807f31f:	48 01 d1             	add    %rdx,%rcx
 807f322:	8b 55 e0             	mov    -0x20(%rbp),%edx
 807f325:	49 89 d0             	mov    %rdx,%r8
 807f328:	48 8b 11             	mov    (%rcx),%rdx
 807f32b:	49 89 d3             	mov    %rdx,%r11
 807f32e:	0f b7 08             	movzwl (%rax),%ecx
 807f331:	49 89 ca             	mov    %rcx,%r10
 807f334:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f337:	48 89 c6             	mov    %rax,%rsi
 807f33a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f33d:	48 89 c7             	mov    %rax,%rdi
 807f340:	4c 89 d2             	mov    %r10,%rdx
 807f343:	4c 89 d9             	mov    %r11,%rcx
 807f346:	b8 00 00 00 00       	mov    $0x0,%eax
 807f34b:	e8 d4 f1 ff ff       	callq  807e524 <gen_modrm64>
 807f350:	e9 37 00 00 00       	jmpq   807f38c <store+0x3e5>
 807f355:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f358:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f35b:	39 c8                	cmp    %ecx,%eax
 807f35d:	0f 84 29 00 00 00    	je     807f38c <store+0x3e5>
 807f363:	b8 00 00 00 00       	mov    $0x0,%eax
 807f368:	e8 43 8a 00 00       	callq  8087db0 <__preinit_array_end+0x310>
 807f36d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f370:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807f376:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f379:	c1 e1 03             	shl    $0x3,%ecx
 807f37c:	48 01 c8             	add    %rcx,%rax
 807f37f:	48 89 c7             	mov    %rax,%rdi
 807f382:	b8 00 00 00 00       	mov    $0x0,%eax
 807f387:	e8 c5 e8 ff ff       	callq  807dc51 <o>
 807f38c:	e9 c5 00 00 00       	jmpq   807f456 <store+0x4af>
 807f391:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f394:	83 f8 30             	cmp    $0x30,%eax
 807f397:	0f 84 33 00 00 00    	je     807f3d0 <store+0x429>
 807f39d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f3a0:	83 f8 32             	cmp    $0x32,%eax
 807f3a3:	0f 84 27 00 00 00    	je     807f3d0 <store+0x429>
 807f3a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807f3ad:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f3b4:	00 00 00 
 807f3b7:	48 01 c8             	add    %rcx,%rax
 807f3ba:	0f b7 08             	movzwl (%rax),%ecx
 807f3bd:	81 e1 00 01 00 00    	and    $0x100,%ecx
 807f3c3:	85 c9                	test   %ecx,%ecx
 807f3c5:	0f 85 05 00 00 00    	jne    807f3d0 <store+0x429>
 807f3cb:	e9 4f 00 00 00       	jmpq   807f41f <store+0x478>
 807f3d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 807f3d4:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f3db:	00 00 00 
 807f3de:	48 01 c8             	add    %rcx,%rax
 807f3e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 807f3e5:	48 ba 28 00 00 00 00 	movabs $0x28,%rdx
 807f3ec:	00 00 00 
 807f3ef:	48 01 d1             	add    %rdx,%rcx
 807f3f2:	8b 55 e0             	mov    -0x20(%rbp),%edx
 807f3f5:	49 89 d3             	mov    %rdx,%r11
 807f3f8:	48 8b 11             	mov    (%rcx),%rdx
 807f3fb:	49 89 d2             	mov    %rdx,%r10
 807f3fe:	0f b7 08             	movzwl (%rax),%ecx
 807f401:	48 89 ce             	mov    %rcx,%rsi
 807f404:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f407:	48 89 c7             	mov    %rax,%rdi
 807f40a:	4c 89 d2             	mov    %r10,%rdx
 807f40d:	4c 89 d9             	mov    %r11,%rcx
 807f410:	b8 00 00 00 00       	mov    $0x0,%eax
 807f415:	e8 bc f0 ff ff       	callq  807e4d6 <gen_modrm>
 807f41a:	e9 37 00 00 00       	jmpq   807f456 <store+0x4af>
 807f41f:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f422:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f425:	39 c8                	cmp    %ecx,%eax
 807f427:	0f 84 29 00 00 00    	je     807f456 <store+0x4af>
 807f42d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f432:	e8 79 89 00 00       	callq  8087db0 <__preinit_array_end+0x310>
 807f437:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807f43a:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807f440:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f443:	c1 e1 03             	shl    $0x3,%ecx
 807f446:	48 01 c8             	add    %rcx,%rax
 807f449:	48 89 c7             	mov    %rax,%rdi
 807f44c:	b8 00 00 00 00       	mov    $0x0,%eax
 807f451:	e8 fb e7 ff ff       	callq  807dc51 <o>
 807f456:	c9                   	leaveq 
 807f457:	c3                   	retq   

000000000807f458 <gcall_or_jmp>:
 807f458:	55                   	push   %rbp
 807f459:	48 89 e5             	mov    %rsp,%rbp
 807f45c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807f463:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807f467:	48 8b 05 b2 ea 00 00 	mov    0xeab2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f46e:	48 8b 00             	mov    (%rax),%rax
 807f471:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f478:	00 00 00 
 807f47b:	48 01 c8             	add    %rcx,%rax
 807f47e:	0f b7 08             	movzwl (%rax),%ecx
 807f481:	81 e1 3f 01 00 00    	and    $0x13f,%ecx
 807f487:	83 f9 30             	cmp    $0x30,%ecx
 807f48a:	0f 85 0d 01 00 00    	jne    807f59d <gcall_or_jmp+0x145>
 807f490:	48 8b 05 89 ea 00 00 	mov    0xea89(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f497:	48 8b 00             	mov    (%rax),%rax
 807f49a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f4a1:	00 00 00 
 807f4a4:	48 01 c8             	add    %rcx,%rax
 807f4a7:	0f b7 08             	movzwl (%rax),%ecx
 807f4aa:	81 e1 00 02 00 00    	and    $0x200,%ecx
 807f4b0:	85 c9                	test   %ecx,%ecx
 807f4b2:	0f 84 5c 00 00 00    	je     807f514 <gcall_or_jmp+0xbc>
 807f4b8:	48 8b 05 61 ea 00 00 	mov    0xea61(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f4bf:	48 8b 00             	mov    (%rax),%rax
 807f4c2:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 807f4c9:	00 00 00 
 807f4cc:	48 01 c8             	add    %rcx,%rax
 807f4cf:	48 8b 0d 5a eb 00 00 	mov    0xeb5a(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807f4d6:	8b 09                	mov    (%rcx),%ecx
 807f4d8:	83 c1 01             	add    $0x1,%ecx
 807f4db:	48 63 c9             	movslq %ecx,%rcx
 807f4de:	ba 02 00 00 00       	mov    $0x2,%edx
 807f4e3:	49 89 d3             	mov    %rdx,%r11
 807f4e6:	48 89 ca             	mov    %rcx,%rdx
 807f4e9:	49 89 d2             	mov    %rdx,%r10
 807f4ec:	48 8b 08             	mov    (%rax),%rcx
 807f4ef:	48 89 ce             	mov    %rcx,%rsi
 807f4f2:	48 8b 05 bf e9 00 00 	mov    0xe9bf(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807f4f9:	48 8b 00             	mov    (%rax),%rax
 807f4fc:	48 89 c7             	mov    %rax,%rdi
 807f4ff:	4c 89 d2             	mov    %r10,%rdx
 807f502:	4c 89 d9             	mov    %r11,%rcx
 807f505:	b8 00 00 00 00       	mov    $0x0,%eax
 807f50a:	e8 f4 d8 fc ff       	callq  804ce03 <greloc>
 807f50f:	e9 4f 00 00 00       	jmpq   807f563 <gcall_or_jmp+0x10b>
 807f514:	48 8b 05 15 eb 00 00 	mov    0xeb15(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 807f51b:	8b 00                	mov    (%rax),%eax
 807f51d:	83 c0 01             	add    $0x1,%eax
 807f520:	48 63 c0             	movslq %eax,%rax
 807f523:	b9 00 00 00 00       	mov    $0x0,%ecx
 807f528:	49 89 c8             	mov    %rcx,%r8
 807f52b:	b9 02 00 00 00       	mov    $0x2,%ecx
 807f530:	49 89 cb             	mov    %rcx,%r11
 807f533:	48 89 c1             	mov    %rax,%rcx
 807f536:	49 89 ca             	mov    %rcx,%r10
 807f539:	48 8b 05 78 e9 00 00 	mov    0xe978(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 807f540:	48 8b 00             	mov    (%rax),%rax
 807f543:	48 89 c6             	mov    %rax,%rsi
 807f546:	48 8b 05 4b e9 00 00 	mov    0xe94b(%rip),%rax        # 808de98 <_GLOBAL_OFFSET_TABLE_+0x218>
 807f54d:	48 8b 00             	mov    (%rax),%rax
 807f550:	48 89 c7             	mov    %rax,%rdi
 807f553:	4c 89 d2             	mov    %r10,%rdx
 807f556:	4c 89 d9             	mov    %r11,%rcx
 807f559:	b8 00 00 00 00       	mov    $0x0,%eax
 807f55e:	e8 dd f0 fe ff       	callq  806e640 <put_elf_reloc>
 807f563:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f566:	81 c0 e8 00 00 00    	add    $0xe8,%eax
 807f56c:	48 8b 0d ad e9 00 00 	mov    0xe9ad(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f573:	48 8b 09             	mov    (%rcx),%rcx
 807f576:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 807f57d:	00 00 00 
 807f580:	48 01 d1             	add    %rdx,%rcx
 807f583:	8b 11                	mov    (%rcx),%edx
 807f585:	83 ea 04             	sub    $0x4,%edx
 807f588:	48 89 d6             	mov    %rdx,%rsi
 807f58b:	48 89 c7             	mov    %rax,%rdi
 807f58e:	b8 00 00 00 00       	mov    $0x0,%eax
 807f593:	e8 32 ea ff ff       	callq  807dfca <oad>
 807f598:	e9 6b 00 00 00       	jmpq   807f608 <gcall_or_jmp+0x1b0>
 807f59d:	b8 0b 00 00 00       	mov    $0xb,%eax
 807f5a2:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807f5a5:	48 8b 05 74 e9 00 00 	mov    0xe974(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f5ac:	48 8b 00             	mov    (%rax),%rax
 807f5af:	48 89 c6             	mov    %rax,%rsi
 807f5b2:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807f5b5:	48 89 c7             	mov    %rax,%rdi
 807f5b8:	b8 00 00 00 00       	mov    $0x0,%eax
 807f5bd:	e8 1f f0 ff ff       	callq  807e5e1 <load>
 807f5c2:	b8 41 00 00 00       	mov    $0x41,%eax
 807f5c7:	48 89 c7             	mov    %rax,%rdi
 807f5ca:	b8 00 00 00 00       	mov    $0x0,%eax
 807f5cf:	e8 7d e6 ff ff       	callq  807dc51 <o>
 807f5d4:	b8 ff 00 00 00       	mov    $0xff,%eax
 807f5d9:	48 89 c7             	mov    %rax,%rdi
 807f5dc:	b8 00 00 00 00       	mov    $0x0,%eax
 807f5e1:	e8 6b e6 ff ff       	callq  807dc51 <o>
 807f5e6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807f5e9:	83 e0 07             	and    $0x7,%eax
 807f5ec:	81 c0 d0 00 00 00    	add    $0xd0,%eax
 807f5f2:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f5f5:	c1 e1 04             	shl    $0x4,%ecx
 807f5f8:	48 01 c8             	add    %rcx,%rax
 807f5fb:	48 89 c7             	mov    %rax,%rdi
 807f5fe:	b8 00 00 00 00       	mov    $0x0,%eax
 807f603:	e8 49 e6 ff ff       	callq  807dc51 <o>
 807f608:	c9                   	leaveq 
 807f609:	c3                   	retq   

000000000807f60a <gadd_sp>:
 807f60a:	55                   	push   %rbp
 807f60b:	48 89 e5             	mov    %rsp,%rbp
 807f60e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 807f615:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807f619:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f61c:	c1 e0 18             	shl    $0x18,%eax
 807f61f:	c1 f8 18             	sar    $0x18,%eax
 807f622:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f625:	39 c1                	cmp    %eax,%ecx
 807f627:	0f 85 27 00 00 00    	jne    807f654 <gadd_sp+0x4a>
 807f62d:	b8 48 83 c4 00       	mov    $0xc48348,%eax
 807f632:	48 89 c7             	mov    %rax,%rdi
 807f635:	b8 00 00 00 00       	mov    $0x0,%eax
 807f63a:	e8 12 e6 ff ff       	callq  807dc51 <o>
 807f63f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f642:	48 89 c7             	mov    %rax,%rdi
 807f645:	b8 00 00 00 00       	mov    $0x0,%eax
 807f64a:	e8 54 e5 ff ff       	callq  807dba3 <g>
 807f64f:	e9 18 00 00 00       	jmpq   807f66c <gadd_sp+0x62>
 807f654:	8b 45 f8             	mov    -0x8(%rbp),%eax
 807f657:	48 89 c6             	mov    %rax,%rsi
 807f65a:	b8 48 81 c4 00       	mov    $0xc48148,%eax
 807f65f:	48 89 c7             	mov    %rax,%rdi
 807f662:	b8 00 00 00 00       	mov    $0x0,%eax
 807f667:	e8 5e e9 ff ff       	callq  807dfca <oad>
 807f66c:	c9                   	leaveq 
 807f66d:	c3                   	retq   

000000000807f66e <gfunc_call>:
 807f66e:	55                   	push   %rbp
 807f66f:	48 89 e5             	mov    %rsp,%rbp
 807f672:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 807f679:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 807f67d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f682:	89 45 e0             	mov    %eax,-0x20(%rbp)
 807f685:	b8 00 00 00 00       	mov    $0x0,%eax
 807f68a:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807f68d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f692:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f695:	b8 00 00 00 00       	mov    $0x0,%eax
 807f69a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807f69d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807f6a0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f6a3:	39 c8                	cmp    %ecx,%eax
 807f6a5:	0f 8d 8a 01 00 00    	jge    807f835 <gfunc_call+0x1c7>
 807f6ab:	e9 0e 00 00 00       	jmpq   807f6be <gfunc_call+0x50>
 807f6b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807f6b3:	48 89 c1             	mov    %rax,%rcx
 807f6b6:	83 c0 01             	add    $0x1,%eax
 807f6b9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807f6bc:	eb df                	jmp    807f69d <gfunc_call+0x2f>
 807f6be:	b8 00 00 00 00       	mov    $0x0,%eax
 807f6c3:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807f6c6:	48 29 c8             	sub    %rcx,%rax
 807f6c9:	48 63 c0             	movslq %eax,%rax
 807f6cc:	48 89 c1             	mov    %rax,%rcx
 807f6cf:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807f6d6:	00 00 00 
 807f6d9:	48 0f af c8          	imul   %rax,%rcx
 807f6dd:	48 8b 05 3c e8 00 00 	mov    0xe83c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f6e4:	48 8b 00             	mov    (%rax),%rax
 807f6e7:	48 89 ca             	mov    %rcx,%rdx
 807f6ea:	48 01 d0             	add    %rdx,%rax
 807f6ed:	8b 08                	mov    (%rax),%ecx
 807f6ef:	83 e1 0f             	and    $0xf,%ecx
 807f6f2:	83 f9 07             	cmp    $0x7,%ecx
 807f6f5:	0f 85 5d 00 00 00    	jne    807f758 <gfunc_call+0xea>
 807f6fb:	b8 00 00 00 00       	mov    $0x0,%eax
 807f700:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807f703:	48 29 c8             	sub    %rcx,%rax
 807f706:	48 63 c0             	movslq %eax,%rax
 807f709:	48 89 c1             	mov    %rax,%rcx
 807f70c:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807f713:	00 00 00 
 807f716:	48 0f af c8          	imul   %rax,%rcx
 807f71a:	48 8b 05 ff e7 00 00 	mov    0xe7ff(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f721:	48 8b 00             	mov    (%rax),%rax
 807f724:	48 89 ca             	mov    %rcx,%rdx
 807f727:	48 01 d0             	add    %rdx,%rax
 807f72a:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 807f72e:	48 89 ce             	mov    %rcx,%rsi
 807f731:	48 89 c7             	mov    %rax,%rdi
 807f734:	b8 00 00 00 00       	mov    $0x0,%eax
 807f739:	e8 d6 16 fe ff       	callq  8060e14 <type_size>
 807f73e:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807f741:	48 01 c1             	add    %rax,%rcx
 807f744:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 807f747:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f74a:	83 c0 07             	add    $0x7,%eax
 807f74d:	83 e0 f8             	and    $0xfffffff8,%eax
 807f750:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f753:	e9 d8 00 00 00       	jmpq   807f830 <gfunc_call+0x1c2>
 807f758:	b8 00 00 00 00       	mov    $0x0,%eax
 807f75d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807f760:	48 29 c8             	sub    %rcx,%rax
 807f763:	48 63 c0             	movslq %eax,%rax
 807f766:	48 89 c1             	mov    %rax,%rcx
 807f769:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807f770:	00 00 00 
 807f773:	48 0f af c8          	imul   %rax,%rcx
 807f777:	48 8b 05 a2 e7 00 00 	mov    0xe7a2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f77e:	48 8b 00             	mov    (%rax),%rax
 807f781:	48 89 ca             	mov    %rcx,%rdx
 807f784:	48 01 d0             	add    %rdx,%rax
 807f787:	8b 08                	mov    (%rax),%ecx
 807f789:	83 e1 0f             	and    $0xf,%ecx
 807f78c:	83 f9 0a             	cmp    $0xa,%ecx
 807f78f:	0f 85 0e 00 00 00    	jne    807f7a3 <gfunc_call+0x135>
 807f795:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f798:	83 c0 10             	add    $0x10,%eax
 807f79b:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f79e:	e9 8d 00 00 00       	jmpq   807f830 <gfunc_call+0x1c2>
 807f7a3:	b8 00 00 00 00       	mov    $0x0,%eax
 807f7a8:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807f7ab:	48 29 c8             	sub    %rcx,%rax
 807f7ae:	48 63 c0             	movslq %eax,%rax
 807f7b1:	48 89 c1             	mov    %rax,%rcx
 807f7b4:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807f7bb:	00 00 00 
 807f7be:	48 0f af c8          	imul   %rax,%rcx
 807f7c2:	48 8b 05 57 e7 00 00 	mov    0xe757(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f7c9:	48 8b 00             	mov    (%rax),%rax
 807f7cc:	48 89 ca             	mov    %rcx,%rdx
 807f7cf:	48 01 d0             	add    %rdx,%rax
 807f7d2:	8b 08                	mov    (%rax),%ecx
 807f7d4:	48 89 cf             	mov    %rcx,%rdi
 807f7d7:	b8 00 00 00 00       	mov    $0x0,%eax
 807f7dc:	e8 a6 e7 ff ff       	callq  807df87 <is_sse_float>
 807f7e1:	85 c0                	test   %eax,%eax
 807f7e3:	0f 84 26 00 00 00    	je     807f80f <gfunc_call+0x1a1>
 807f7e9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f7ec:	48 89 c1             	mov    %rax,%rcx
 807f7ef:	83 c0 01             	add    $0x1,%eax
 807f7f2:	89 45 dc             	mov    %eax,-0x24(%rbp)
 807f7f5:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f7f8:	83 f8 08             	cmp    $0x8,%eax
 807f7fb:	0f 8e 09 00 00 00    	jle    807f80a <gfunc_call+0x19c>
 807f801:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f804:	83 c0 08             	add    $0x8,%eax
 807f807:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f80a:	e9 21 00 00 00       	jmpq   807f830 <gfunc_call+0x1c2>
 807f80f:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807f812:	48 89 c1             	mov    %rax,%rcx
 807f815:	83 c0 01             	add    $0x1,%eax
 807f818:	89 45 e0             	mov    %eax,-0x20(%rbp)
 807f81b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807f81e:	83 f8 06             	cmp    $0x6,%eax
 807f821:	0f 8e 09 00 00 00    	jle    807f830 <gfunc_call+0x1c2>
 807f827:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f82a:	83 c0 08             	add    $0x8,%eax
 807f82d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f830:	e9 7b fe ff ff       	jmpq   807f6b0 <gfunc_call+0x42>
 807f835:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807f838:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 807f83b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807f83e:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807f841:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f844:	83 e0 0f             	and    $0xf,%eax
 807f847:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f84a:	85 c0                	test   %eax,%eax
 807f84c:	0f 84 97 00 00 00    	je     807f8e9 <gfunc_call+0x27b>
 807f852:	48 8b 05 c7 e6 00 00 	mov    0xe6c7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f859:	48 8b 00             	mov    (%rax),%rax
 807f85c:	48 8b 0d 85 e7 00 00 	mov    0xe785(%rip),%rcx        # 808dfe8 <_GLOBAL_OFFSET_TABLE_+0x368>
 807f863:	48 81 c1 30 00 00 00 	add    $0x30,%rcx
 807f86a:	48 89 c2             	mov    %rax,%rdx
 807f86d:	48 89 c8             	mov    %rcx,%rax
 807f870:	48 39 c2             	cmp    %rax,%rdx
 807f873:	0f 82 38 00 00 00    	jb     807f8b1 <gfunc_call+0x243>
 807f879:	48 8b 05 a0 e6 00 00 	mov    0xe6a0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f880:	48 8b 00             	mov    (%rax),%rax
 807f883:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 807f88a:	00 00 00 
 807f88d:	48 01 c8             	add    %rcx,%rax
 807f890:	0f b7 08             	movzwl (%rax),%ecx
 807f893:	83 e1 3f             	and    $0x3f,%ecx
 807f896:	83 f9 33             	cmp    $0x33,%ecx
 807f899:	0f 85 12 00 00 00    	jne    807f8b1 <gfunc_call+0x243>
 807f89f:	b8 01 00 00 00       	mov    $0x1,%eax
 807f8a4:	48 89 c7             	mov    %rax,%rdi
 807f8a7:	b8 00 00 00 00       	mov    $0x0,%eax
 807f8ac:	e8 79 de fd ff       	callq  805d72a <gv>
 807f8b1:	b8 10 00 00 00       	mov    $0x10,%eax
 807f8b6:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 807f8b9:	48 29 c8             	sub    %rcx,%rax
 807f8bc:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807f8bf:	b8 48 00 00 00       	mov    $0x48,%eax
 807f8c4:	48 89 c7             	mov    %rax,%rdi
 807f8c7:	b8 00 00 00 00       	mov    $0x0,%eax
 807f8cc:	e8 80 e3 ff ff       	callq  807dc51 <o>
 807f8d1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807f8d4:	48 89 c6             	mov    %rax,%rsi
 807f8d7:	b8 81 ec 00 00       	mov    $0xec81,%eax
 807f8dc:	48 89 c7             	mov    %rax,%rdi
 807f8df:	b8 00 00 00 00       	mov    $0x0,%eax
 807f8e4:	e8 e1 e6 ff ff       	callq  807dfca <oad>
 807f8e9:	b8 00 00 00 00       	mov    $0x0,%eax
 807f8ee:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807f8f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807f8f4:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807f8f7:	39 c8                	cmp    %ecx,%eax
 807f8f9:	0f 8d 97 04 00 00    	jge    807fd96 <gfunc_call+0x728>
 807f8ff:	e9 0e 00 00 00       	jmpq   807f912 <gfunc_call+0x2a4>
 807f904:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807f907:	48 89 c1             	mov    %rax,%rcx
 807f90a:	83 c0 01             	add    $0x1,%eax
 807f90d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807f910:	eb df                	jmp    807f8f1 <gfunc_call+0x283>
 807f912:	48 8b 05 07 e6 00 00 	mov    0xe607(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f919:	48 8b 00             	mov    (%rax),%rax
 807f91c:	b9 30 00 00 00       	mov    $0x30,%ecx
 807f921:	49 89 ca             	mov    %rcx,%r10
 807f924:	48 89 c6             	mov    %rax,%rsi
 807f927:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
 807f92b:	48 89 cf             	mov    %rcx,%rdi
 807f92e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 807f932:	4c 89 d2             	mov    %r10,%rdx
 807f935:	b8 00 00 00 00       	mov    $0x0,%eax
 807f93a:	e8 31 73 00 00       	callq  8086c70 <memcpy>
 807f93f:	48 8b 05 da e5 00 00 	mov    0xe5da(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f946:	48 8b 00             	mov    (%rax),%rax
 807f949:	b9 00 00 00 00       	mov    $0x0,%ecx
 807f94e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 807f951:	48 29 d1             	sub    %rdx,%rcx
 807f954:	48 63 c9             	movslq %ecx,%rcx
 807f957:	48 89 ca             	mov    %rcx,%rdx
 807f95a:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 807f961:	00 00 00 
 807f964:	48 0f af d1          	imul   %rcx,%rdx
 807f968:	48 8b 0d b1 e5 00 00 	mov    0xe5b1(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f96f:	48 8b 09             	mov    (%rcx),%rcx
 807f972:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 807f976:	48 89 d0             	mov    %rdx,%rax
 807f979:	48 01 c1             	add    %rax,%rcx
 807f97c:	b8 30 00 00 00       	mov    $0x30,%eax
 807f981:	49 89 c2             	mov    %rax,%r10
 807f984:	48 89 ce             	mov    %rcx,%rsi
 807f987:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 807f98b:	48 89 c7             	mov    %rax,%rdi
 807f98e:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
 807f992:	4c 89 d2             	mov    %r10,%rdx
 807f995:	b8 00 00 00 00       	mov    $0x0,%eax
 807f99a:	e8 d1 72 00 00       	callq  8086c70 <memcpy>
 807f99f:	b8 00 00 00 00       	mov    $0x0,%eax
 807f9a4:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807f9a7:	48 29 c8             	sub    %rcx,%rax
 807f9aa:	48 63 c0             	movslq %eax,%rax
 807f9ad:	48 89 c1             	mov    %rax,%rcx
 807f9b0:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807f9b7:	00 00 00 
 807f9ba:	48 0f af c8          	imul   %rax,%rcx
 807f9be:	48 8b 05 5b e5 00 00 	mov    0xe55b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f9c5:	48 8b 00             	mov    (%rax),%rax
 807f9c8:	48 89 ca             	mov    %rcx,%rdx
 807f9cb:	48 01 d0             	add    %rdx,%rax
 807f9ce:	b9 30 00 00 00       	mov    $0x30,%ecx
 807f9d3:	49 89 ca             	mov    %rcx,%r10
 807f9d6:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
 807f9da:	48 89 ce             	mov    %rcx,%rsi
 807f9dd:	48 89 c7             	mov    %rax,%rdi
 807f9e0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 807f9e4:	4c 89 d2             	mov    %r10,%rdx
 807f9e7:	b8 00 00 00 00       	mov    $0x0,%eax
 807f9ec:	e8 7f 72 00 00       	callq  8086c70 <memcpy>
 807f9f1:	48 8b 05 28 e5 00 00 	mov    0xe528(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807f9f8:	48 8b 00             	mov    (%rax),%rax
 807f9fb:	8b 08                	mov    (%rax),%ecx
 807f9fd:	83 e1 0f             	and    $0xf,%ecx
 807fa00:	83 f9 07             	cmp    $0x7,%ecx
 807fa03:	0f 85 06 01 00 00    	jne    807fb0f <gfunc_call+0x4a1>
 807fa09:	48 8b 05 10 e5 00 00 	mov    0xe510(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fa10:	48 8b 00             	mov    (%rax),%rax
 807fa13:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
 807fa17:	48 89 ce             	mov    %rcx,%rsi
 807fa1a:	48 89 c7             	mov    %rax,%rdi
 807fa1d:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa22:	e8 ed 13 fe ff       	callq  8060e14 <type_size>
 807fa27:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807fa2a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807fa2d:	83 c0 07             	add    $0x7,%eax
 807fa30:	83 e0 f8             	and    $0xfffffff8,%eax
 807fa33:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807fa36:	b8 48 00 00 00       	mov    $0x48,%eax
 807fa3b:	48 89 c7             	mov    %rax,%rdi
 807fa3e:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa43:	e8 09 e2 ff ff       	callq  807dc51 <o>
 807fa48:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807fa4b:	48 89 c6             	mov    %rax,%rsi
 807fa4e:	b8 81 ec 00 00       	mov    $0xec81,%eax
 807fa53:	48 89 c7             	mov    %rax,%rdi
 807fa56:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa5b:	e8 6a e5 ff ff       	callq  807dfca <oad>
 807fa60:	b8 01 00 00 00       	mov    $0x1,%eax
 807fa65:	48 89 c7             	mov    %rax,%rdi
 807fa68:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa6d:	e8 a3 d8 fd ff       	callq  805d315 <get_reg>
 807fa72:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807fa75:	b8 89 00 00 00       	mov    $0x89,%eax
 807fa7a:	49 89 c3             	mov    %rax,%r11
 807fa7d:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa82:	49 89 c2             	mov    %rax,%r10
 807fa85:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807fa88:	48 89 c6             	mov    %rax,%rsi
 807fa8b:	b8 01 00 00 00       	mov    $0x1,%eax
 807fa90:	48 89 c7             	mov    %rax,%rdi
 807fa93:	4c 89 d2             	mov    %r10,%rdx
 807fa96:	4c 89 d9             	mov    %r11,%rcx
 807fa99:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa9e:	e8 3d e3 ff ff       	callq  807dde0 <orex>
 807faa3:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807faa6:	83 e0 07             	and    $0x7,%eax
 807faa9:	81 c0 e0 00 00 00    	add    $0xe0,%eax
 807faaf:	48 89 c7             	mov    %rax,%rdi
 807fab2:	b8 00 00 00 00       	mov    $0x0,%eax
 807fab7:	e8 95 e1 ff ff       	callq  807dc51 <o>
 807fabc:	48 8b 05 5d e4 00 00 	mov    0xe45d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fac3:	48 8b 00             	mov    (%rax),%rax
 807fac6:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 807fac9:	81 c9 00 01 00 00    	or     $0x100,%ecx
 807facf:	ba 00 00 00 00       	mov    $0x0,%edx
 807fad4:	49 89 d2             	mov    %rdx,%r10
 807fad7:	48 89 ce             	mov    %rcx,%rsi
 807fada:	48 89 c7             	mov    %rax,%rdi
 807fadd:	4c 89 d2             	mov    %r10,%rdx
 807fae0:	b8 00 00 00 00       	mov    $0x0,%eax
 807fae5:	e8 de d2 fd ff       	callq  805cdc8 <vset>
 807faea:	b8 00 00 00 00       	mov    $0x0,%eax
 807faef:	e8 5a d3 fd ff       	callq  805ce4e <vswap>
 807faf4:	b8 00 00 00 00       	mov    $0x0,%eax
 807faf9:	e8 18 25 fe ff       	callq  8062016 <vstore>
 807fafe:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807fb01:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 807fb04:	48 01 c8             	add    %rcx,%rax
 807fb07:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807fb0a:	e9 94 01 00 00       	jmpq   807fca3 <gfunc_call+0x635>
 807fb0f:	48 8b 05 0a e4 00 00 	mov    0xe40a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fb16:	48 8b 00             	mov    (%rax),%rax
 807fb19:	8b 08                	mov    (%rax),%ecx
 807fb1b:	83 e1 0f             	and    $0xf,%ecx
 807fb1e:	83 f9 0a             	cmp    $0xa,%ecx
 807fb21:	0f 85 79 00 00 00    	jne    807fba0 <gfunc_call+0x532>
 807fb27:	b8 40 00 00 00       	mov    $0x40,%eax
 807fb2c:	48 89 c7             	mov    %rax,%rdi
 807fb2f:	b8 00 00 00 00       	mov    $0x0,%eax
 807fb34:	e8 f1 db fd ff       	callq  805d72a <gv>
 807fb39:	b8 10 00 00 00       	mov    $0x10,%eax
 807fb3e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 807fb41:	8b 45 f4             	mov    -0xc(%rbp),%eax
 807fb44:	48 89 c6             	mov    %rax,%rsi
 807fb47:	b8 48 81 ec 00       	mov    $0xec8148,%eax
 807fb4c:	48 89 c7             	mov    %rax,%rdi
 807fb4f:	b8 00 00 00 00       	mov    $0x0,%eax
 807fb54:	e8 71 e4 ff ff       	callq  807dfca <oad>
 807fb59:	b8 db 7c 00 00       	mov    $0x7cdb,%eax
 807fb5e:	48 89 c7             	mov    %rax,%rdi
 807fb61:	b8 00 00 00 00       	mov    $0x0,%eax
 807fb66:	e8 e6 e0 ff ff       	callq  807dc51 <o>
 807fb6b:	b8 24 00 00 00       	mov    $0x24,%eax
 807fb70:	48 89 c7             	mov    %rax,%rdi
 807fb73:	b8 00 00 00 00       	mov    $0x0,%eax
 807fb78:	e8 26 e0 ff ff       	callq  807dba3 <g>
 807fb7d:	b8 00 00 00 00       	mov    $0x0,%eax
 807fb82:	48 89 c7             	mov    %rax,%rdi
 807fb85:	b8 00 00 00 00       	mov    $0x0,%eax
 807fb8a:	e8 14 e0 ff ff       	callq  807dba3 <g>
 807fb8f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807fb92:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 807fb95:	48 01 c8             	add    %rcx,%rax
 807fb98:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807fb9b:	e9 03 01 00 00       	jmpq   807fca3 <gfunc_call+0x635>
 807fba0:	48 8b 05 79 e3 00 00 	mov    0xe379(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fba7:	48 8b 00             	mov    (%rax),%rax
 807fbaa:	8b 08                	mov    (%rax),%ecx
 807fbac:	48 89 cf             	mov    %rcx,%rdi
 807fbaf:	b8 00 00 00 00       	mov    $0x0,%eax
 807fbb4:	e8 ce e3 ff ff       	callq  807df87 <is_sse_float>
 807fbb9:	85 c0                	test   %eax,%eax
 807fbbb:	0f 84 74 00 00 00    	je     807fc35 <gfunc_call+0x5c7>
 807fbc1:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807fbc4:	83 c0 ff             	add    $0xffffffff,%eax
 807fbc7:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807fbca:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
 807fbd0:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 807fbd6:	83 f8 08             	cmp    $0x8,%eax
 807fbd9:	0f 8c 51 00 00 00    	jl     807fc30 <gfunc_call+0x5c2>
 807fbdf:	b8 02 00 00 00       	mov    $0x2,%eax
 807fbe4:	48 89 c7             	mov    %rax,%rdi
 807fbe7:	b8 00 00 00 00       	mov    $0x0,%eax
 807fbec:	e8 39 db fd ff       	callq  805d72a <gv>
 807fbf1:	b8 50 00 00 00       	mov    $0x50,%eax
 807fbf6:	48 89 c7             	mov    %rax,%rdi
 807fbf9:	b8 00 00 00 00       	mov    $0x0,%eax
 807fbfe:	e8 4e e0 ff ff       	callq  807dc51 <o>
 807fc03:	b8 66 0f d6 04       	mov    $0x4d60f66,%eax
 807fc08:	48 89 c7             	mov    %rax,%rdi
 807fc0b:	b8 00 00 00 00       	mov    $0x0,%eax
 807fc10:	e8 3c e0 ff ff       	callq  807dc51 <o>
 807fc15:	b8 24 00 00 00       	mov    $0x24,%eax
 807fc1a:	48 89 c7             	mov    %rax,%rdi
 807fc1d:	b8 00 00 00 00       	mov    $0x0,%eax
 807fc22:	e8 2a e0 ff ff       	callq  807dc51 <o>
 807fc27:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807fc2a:	83 c0 08             	add    $0x8,%eax
 807fc2d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807fc30:	e9 6e 00 00 00       	jmpq   807fca3 <gfunc_call+0x635>
 807fc35:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807fc38:	83 c0 ff             	add    $0xffffffff,%eax
 807fc3b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 807fc3e:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
 807fc44:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 807fc4a:	83 f8 06             	cmp    $0x6,%eax
 807fc4d:	0f 8c 50 00 00 00    	jl     807fca3 <gfunc_call+0x635>
 807fc53:	b8 01 00 00 00       	mov    $0x1,%eax
 807fc58:	48 89 c7             	mov    %rax,%rdi
 807fc5b:	b8 00 00 00 00       	mov    $0x0,%eax
 807fc60:	e8 c5 da fd ff       	callq  805d72a <gv>
 807fc65:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807fc68:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807fc6b:	83 e0 07             	and    $0x7,%eax
 807fc6e:	83 c0 50             	add    $0x50,%eax
 807fc71:	49 89 c3             	mov    %rax,%r11
 807fc74:	b8 00 00 00 00       	mov    $0x0,%eax
 807fc79:	49 89 c2             	mov    %rax,%r10
 807fc7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807fc7f:	48 89 c6             	mov    %rax,%rsi
 807fc82:	b8 00 00 00 00       	mov    $0x0,%eax
 807fc87:	48 89 c7             	mov    %rax,%rdi
 807fc8a:	4c 89 d2             	mov    %r10,%rdx
 807fc8d:	4c 89 d9             	mov    %r11,%rcx
 807fc90:	b8 00 00 00 00       	mov    $0x0,%eax
 807fc95:	e8 46 e1 ff ff       	callq  807dde0 <orex>
 807fc9a:	8b 45 e8             	mov    -0x18(%rbp),%eax
 807fc9d:	83 c0 08             	add    $0x8,%eax
 807fca0:	89 45 e8             	mov    %eax,-0x18(%rbp)
 807fca3:	48 8b 05 76 e2 00 00 	mov    0xe276(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fcaa:	48 8b 00             	mov    (%rax),%rax
 807fcad:	b9 30 00 00 00       	mov    $0x30,%ecx
 807fcb2:	49 89 ca             	mov    %rcx,%r10
 807fcb5:	48 89 c6             	mov    %rax,%rsi
 807fcb8:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
 807fcbc:	48 89 cf             	mov    %rcx,%rdi
 807fcbf:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 807fcc6:	4c 89 d2             	mov    %r10,%rdx
 807fcc9:	b8 00 00 00 00       	mov    $0x0,%eax
 807fcce:	e8 9d 6f 00 00       	callq  8086c70 <memcpy>
 807fcd3:	48 8b 05 46 e2 00 00 	mov    0xe246(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fcda:	48 8b 00             	mov    (%rax),%rax
 807fcdd:	b9 00 00 00 00       	mov    $0x0,%ecx
 807fce2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 807fce5:	48 29 d1             	sub    %rdx,%rcx
 807fce8:	48 63 c9             	movslq %ecx,%rcx
 807fceb:	48 89 ca             	mov    %rcx,%rdx
 807fcee:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 807fcf5:	00 00 00 
 807fcf8:	48 0f af d1          	imul   %rcx,%rdx
 807fcfc:	48 8b 0d 1d e2 00 00 	mov    0xe21d(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fd03:	48 8b 09             	mov    (%rcx),%rcx
 807fd06:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 807fd0d:	48 89 d0             	mov    %rdx,%rax
 807fd10:	48 01 c1             	add    %rax,%rcx
 807fd13:	b8 30 00 00 00       	mov    $0x30,%eax
 807fd18:	49 89 c2             	mov    %rax,%r10
 807fd1b:	48 89 ce             	mov    %rcx,%rsi
 807fd1e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 807fd25:	48 89 c7             	mov    %rax,%rdi
 807fd28:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
 807fd2f:	4c 89 d2             	mov    %r10,%rdx
 807fd32:	b8 00 00 00 00       	mov    $0x0,%eax
 807fd37:	e8 34 6f 00 00       	callq  8086c70 <memcpy>
 807fd3c:	b8 00 00 00 00       	mov    $0x0,%eax
 807fd41:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 807fd44:	48 29 c8             	sub    %rcx,%rax
 807fd47:	48 63 c0             	movslq %eax,%rax
 807fd4a:	48 89 c1             	mov    %rax,%rcx
 807fd4d:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 807fd54:	00 00 00 
 807fd57:	48 0f af c8          	imul   %rax,%rcx
 807fd5b:	48 8b 05 be e1 00 00 	mov    0xe1be(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fd62:	48 8b 00             	mov    (%rax),%rax
 807fd65:	48 89 ca             	mov    %rcx,%rdx
 807fd68:	48 01 d0             	add    %rdx,%rax
 807fd6b:	b9 30 00 00 00       	mov    $0x30,%ecx
 807fd70:	49 89 ca             	mov    %rcx,%r10
 807fd73:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
 807fd77:	48 89 ce             	mov    %rcx,%rsi
 807fd7a:	48 89 c7             	mov    %rax,%rdi
 807fd7d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
 807fd84:	4c 89 d2             	mov    %r10,%rdx
 807fd87:	b8 00 00 00 00       	mov    $0x0,%eax
 807fd8c:	e8 df 6e 00 00       	callq  8086c70 <memcpy>
 807fd91:	e9 6e fb ff ff       	jmpq   807f904 <gfunc_call+0x296>
 807fd96:	b8 00 00 00 00       	mov    $0x0,%eax
 807fd9b:	48 89 c7             	mov    %rax,%rdi
 807fd9e:	b8 00 00 00 00       	mov    $0x0,%eax
 807fda3:	e8 94 d7 fd ff       	callq  805d53c <save_regs>
 807fda8:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807fdab:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 807fdae:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807fdb1:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807fdb4:	b8 00 00 00 00       	mov    $0x0,%eax
 807fdb9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807fdbc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807fdbf:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 807fdc2:	39 c8                	cmp    %ecx,%eax
 807fdc4:	0f 8d d2 01 00 00    	jge    807ff9c <gfunc_call+0x92e>
 807fdca:	e9 0e 00 00 00       	jmpq   807fddd <gfunc_call+0x76f>
 807fdcf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 807fdd2:	48 89 c1             	mov    %rax,%rcx
 807fdd5:	83 c0 01             	add    $0x1,%eax
 807fdd8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 807fddb:	eb df                	jmp    807fdbc <gfunc_call+0x74e>
 807fddd:	48 8b 05 3c e1 00 00 	mov    0xe13c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fde4:	48 8b 00             	mov    (%rax),%rax
 807fde7:	8b 08                	mov    (%rax),%ecx
 807fde9:	83 e1 0f             	and    $0xf,%ecx
 807fdec:	83 f9 07             	cmp    $0x7,%ecx
 807fdef:	0f 84 1d 00 00 00    	je     807fe12 <gfunc_call+0x7a4>
 807fdf5:	48 8b 05 24 e1 00 00 	mov    0xe124(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fdfc:	48 8b 00             	mov    (%rax),%rax
 807fdff:	8b 08                	mov    (%rax),%ecx
 807fe01:	83 e1 0f             	and    $0xf,%ecx
 807fe04:	83 f9 0a             	cmp    $0xa,%ecx
 807fe07:	0f 84 05 00 00 00    	je     807fe12 <gfunc_call+0x7a4>
 807fe0d:	e9 05 00 00 00       	jmpq   807fe17 <gfunc_call+0x7a9>
 807fe12:	e9 5c 01 00 00       	jmpq   807ff73 <gfunc_call+0x905>
 807fe17:	48 8b 05 02 e1 00 00 	mov    0xe102(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807fe1e:	48 8b 00             	mov    (%rax),%rax
 807fe21:	8b 08                	mov    (%rax),%ecx
 807fe23:	48 89 cf             	mov    %rcx,%rdi
 807fe26:	b8 00 00 00 00       	mov    $0x0,%eax
 807fe2b:	e8 57 e1 ff ff       	callq  807df87 <is_sse_float>
 807fe30:	85 c0                	test   %eax,%eax
 807fe32:	0f 84 60 00 00 00    	je     807fe98 <gfunc_call+0x82a>
 807fe38:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807fe3b:	83 c0 ff             	add    $0xffffffff,%eax
 807fe3e:	89 45 d8             	mov    %eax,-0x28(%rbp)
 807fe41:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 807fe47:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 807fe4d:	83 f8 08             	cmp    $0x8,%eax
 807fe50:	0f 8d 3d 00 00 00    	jge    807fe93 <gfunc_call+0x825>
 807fe56:	b8 02 00 00 00       	mov    $0x2,%eax
 807fe5b:	48 89 c7             	mov    %rax,%rdi
 807fe5e:	b8 00 00 00 00       	mov    $0x0,%eax
 807fe63:	e8 c2 d8 fd ff       	callq  805d72a <gv>
 807fe68:	b8 0f 28 00 00       	mov    $0x280f,%eax
 807fe6d:	48 89 c7             	mov    %rax,%rdi
 807fe70:	b8 00 00 00 00       	mov    $0x0,%eax
 807fe75:	e8 d7 dd ff ff       	callq  807dc51 <o>
 807fe7a:	8b 45 d8             	mov    -0x28(%rbp),%eax
 807fe7d:	c1 e0 03             	shl    $0x3,%eax
 807fe80:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807fe86:	48 89 c7             	mov    %rax,%rdi
 807fe89:	b8 00 00 00 00       	mov    $0x0,%eax
 807fe8e:	e8 be dd ff ff       	callq  807dc51 <o>
 807fe93:	e9 db 00 00 00       	jmpq   807ff73 <gfunc_call+0x905>
 807fe98:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 807fe9b:	83 c0 ff             	add    $0xffffffff,%eax
 807fe9e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 807fea1:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
 807fea7:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 807fead:	83 f8 06             	cmp    $0x6,%eax
 807feb0:	0f 8d bd 00 00 00    	jge    807ff73 <gfunc_call+0x905>
 807feb6:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 807febc:	48 63 c0             	movslq %eax,%rax
 807febf:	48 8d 0d 4f ce 00 00 	lea    0xce4f(%rip),%rcx        # 808cd15 <arg_regs>
 807fec6:	48 89 c2             	mov    %rax,%rdx
 807fec9:	48 01 d1             	add    %rdx,%rcx
 807fecc:	0f b6 01             	movzbl (%rcx),%eax
 807fecf:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
 807fed5:	b8 01 00 00 00       	mov    $0x1,%eax
 807feda:	48 89 c7             	mov    %rax,%rdi
 807fedd:	b8 00 00 00 00       	mov    $0x0,%eax
 807fee2:	e8 43 d8 fd ff       	callq  805d72a <gv>
 807fee7:	89 45 ec             	mov    %eax,-0x14(%rbp)
 807feea:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 807fef0:	83 f8 02             	cmp    $0x2,%eax
 807fef3:	0f 84 14 00 00 00    	je     807ff0d <gfunc_call+0x89f>
 807fef9:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 807feff:	83 f8 03             	cmp    $0x3,%eax
 807ff02:	0f 84 05 00 00 00    	je     807ff0d <gfunc_call+0x89f>
 807ff08:	e9 0f 00 00 00       	jmpq   807ff1c <gfunc_call+0x8ae>
 807ff0d:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 807ff13:	83 c0 08             	add    $0x8,%eax
 807ff16:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
 807ff1c:	b8 89 00 00 00       	mov    $0x89,%eax
 807ff21:	49 89 c3             	mov    %rax,%r11
 807ff24:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ff27:	49 89 c2             	mov    %rax,%r10
 807ff2a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
 807ff30:	48 89 c6             	mov    %rax,%rsi
 807ff33:	b8 01 00 00 00       	mov    $0x1,%eax
 807ff38:	48 89 c7             	mov    %rax,%rdi
 807ff3b:	4c 89 d2             	mov    %r10,%rdx
 807ff3e:	4c 89 d9             	mov    %r11,%rcx
 807ff41:	b8 00 00 00 00       	mov    $0x0,%eax
 807ff46:	e8 95 de ff ff       	callq  807dde0 <orex>
 807ff4b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 807ff4e:	83 e0 07             	and    $0x7,%eax
 807ff51:	c1 e0 03             	shl    $0x3,%eax
 807ff54:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 807ff5a:	8b 8d 4c ff ff ff    	mov    -0xb4(%rbp),%ecx
 807ff60:	83 e1 07             	and    $0x7,%ecx
 807ff63:	48 01 c8             	add    %rcx,%rax
 807ff66:	48 89 c7             	mov    %rax,%rdi
 807ff69:	b8 00 00 00 00       	mov    $0x0,%eax
 807ff6e:	e8 de dc ff ff       	callq  807dc51 <o>
 807ff73:	48 8b 05 a6 df 00 00 	mov    0xdfa6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807ff7a:	48 8b 00             	mov    (%rax),%rax
 807ff7d:	48 89 c1             	mov    %rax,%rcx
 807ff80:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 807ff87:	ff ff ff 
 807ff8a:	48 01 d0             	add    %rdx,%rax
 807ff8d:	4c 8b 1d 8c df 00 00 	mov    0xdf8c(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 807ff94:	49 89 03             	mov    %rax,(%r11)
 807ff97:	e9 33 fe ff ff       	jmpq   807fdcf <gfunc_call+0x761>
 807ff9c:	b8 00 00 00 00       	mov    $0x0,%eax
 807ffa1:	48 89 c7             	mov    %rax,%rdi
 807ffa4:	b8 00 00 00 00       	mov    $0x0,%eax
 807ffa9:	e8 8e d5 fd ff       	callq  805d53c <save_regs>
 807ffae:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807ffb1:	83 f8 02             	cmp    $0x2,%eax
 807ffb4:	0f 8e 30 00 00 00    	jle    807ffea <gfunc_call+0x97c>
 807ffba:	b8 4c 89 d2 00       	mov    $0xd2894c,%eax
 807ffbf:	48 89 c7             	mov    %rax,%rdi
 807ffc2:	b8 00 00 00 00       	mov    $0x0,%eax
 807ffc7:	e8 85 dc ff ff       	callq  807dc51 <o>
 807ffcc:	8b 45 e0             	mov    -0x20(%rbp),%eax
 807ffcf:	83 f8 03             	cmp    $0x3,%eax
 807ffd2:	0f 8e 12 00 00 00    	jle    807ffea <gfunc_call+0x97c>
 807ffd8:	b8 4c 89 d9 00       	mov    $0xd9894c,%eax
 807ffdd:	48 89 c7             	mov    %rax,%rdi
 807ffe0:	b8 00 00 00 00       	mov    $0x0,%eax
 807ffe5:	e8 67 dc ff ff       	callq  807dc51 <o>
 807ffea:	8b 45 dc             	mov    -0x24(%rbp),%eax
 807ffed:	83 f8 08             	cmp    $0x8,%eax
 807fff0:	b8 00 00 00 00       	mov    $0x0,%eax
 807fff5:	0f 9c c0             	setl   %al
 807fff8:	85 c0                	test   %eax,%eax
 807fffa:	0f 84 05 00 00 00    	je     8080005 <gfunc_call+0x997>
 8080000:	e9 0a 00 00 00       	jmpq   808000f <gfunc_call+0x9a1>
 8080005:	b8 08 00 00 00       	mov    $0x8,%eax
 808000a:	e9 03 00 00 00       	jmpq   8080012 <gfunc_call+0x9a4>
 808000f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8080012:	48 89 c6             	mov    %rax,%rsi
 8080015:	b8 b8 00 00 00       	mov    $0xb8,%eax
 808001a:	48 89 c7             	mov    %rax,%rdi
 808001d:	b8 00 00 00 00       	mov    $0x0,%eax
 8080022:	e8 a3 df ff ff       	callq  807dfca <oad>
 8080027:	b8 00 00 00 00       	mov    $0x0,%eax
 808002c:	48 89 c7             	mov    %rax,%rdi
 808002f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080034:	e8 1f f4 ff ff       	callq  807f458 <gcall_or_jmp>
 8080039:	8b 45 e8             	mov    -0x18(%rbp),%eax
 808003c:	85 c0                	test   %eax,%eax
 808003e:	0f 84 10 00 00 00    	je     8080054 <gfunc_call+0x9e6>
 8080044:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8080047:	48 89 c7             	mov    %rax,%rdi
 808004a:	b8 00 00 00 00       	mov    $0x0,%eax
 808004f:	e8 b6 f5 ff ff       	callq  807f60a <gadd_sp>
 8080054:	48 8b 05 c5 de 00 00 	mov    0xdec5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808005b:	48 8b 00             	mov    (%rax),%rax
 808005e:	48 89 c1             	mov    %rax,%rcx
 8080061:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8080068:	ff ff ff 
 808006b:	48 01 d0             	add    %rdx,%rax
 808006e:	4c 8b 1d ab de 00 00 	mov    0xdeab(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080075:	49 89 03             	mov    %rax,(%r11)
 8080078:	c9                   	leaveq 
 8080079:	c3                   	retq   

000000000808007a <push_arg_reg>:
 808007a:	55                   	push   %rbp
 808007b:	48 89 e5             	mov    %rsp,%rbp
 808007e:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8080085:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8080089:	48 8b 05 68 df 00 00 	mov    0xdf68(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8080090:	8b 00                	mov    (%rax),%eax
 8080092:	83 e8 08             	sub    $0x8,%eax
 8080095:	4c 8b 1d 5c df 00 00 	mov    0xdf5c(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 808009c:	41 89 03             	mov    %eax,(%r11)
 808009f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80800a2:	48 63 c0             	movslq %eax,%rax
 80800a5:	48 8d 0d 69 cc 00 00 	lea    0xcc69(%rip),%rcx        # 808cd15 <arg_regs>
 80800ac:	48 89 c2             	mov    %rax,%rdx
 80800af:	48 01 d1             	add    %rdx,%rcx
 80800b2:	48 8b 05 3f df 00 00 	mov    0xdf3f(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80800b9:	8b 00                	mov    (%rax),%eax
 80800bb:	49 89 c0             	mov    %rax,%r8
 80800be:	b8 00 00 00 00       	mov    $0x0,%eax
 80800c3:	49 89 c3             	mov    %rax,%r11
 80800c6:	b8 32 00 00 00       	mov    $0x32,%eax
 80800cb:	49 89 c2             	mov    %rax,%r10
 80800ce:	0f b6 01             	movzbl (%rcx),%eax
 80800d1:	48 89 c6             	mov    %rax,%rsi
 80800d4:	b8 89 00 00 00       	mov    $0x89,%eax
 80800d9:	48 89 c7             	mov    %rax,%rdi
 80800dc:	4c 89 d2             	mov    %r10,%rdx
 80800df:	4c 89 d9             	mov    %r11,%rcx
 80800e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80800e7:	e8 38 e4 ff ff       	callq  807e524 <gen_modrm64>
 80800ec:	c9                   	leaveq 
 80800ed:	c3                   	retq   

00000000080800ee <gfunc_prolog>:
 80800ee:	55                   	push   %rbp
 80800ef:	48 89 e5             	mov    %rsp,%rbp
 80800f2:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 80800f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80800fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8080101:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8080108:	00 00 00 
 808010b:	48 01 c8             	add    %rcx,%rax
 808010e:	48 8b 08             	mov    (%rax),%rcx
 8080111:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8080115:	b8 10 00 00 00       	mov    $0x10,%eax
 808011a:	89 45 f0             	mov    %eax,-0x10(%rbp)
 808011d:	b8 00 00 00 00       	mov    $0x0,%eax
 8080122:	4c 8b 1d cf de 00 00 	mov    0xdecf(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8080129:	41 89 03             	mov    %eax,(%r11)
 808012c:	48 8b 05 fd de 00 00 	mov    0xdefd(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8080133:	8b 00                	mov    (%rax),%eax
 8080135:	83 c0 0b             	add    $0xb,%eax
 8080138:	4c 8b 1d f1 de 00 00 	mov    0xdef1(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 808013f:	41 89 03             	mov    %eax,(%r11)
 8080142:	48 8b 05 e7 de 00 00 	mov    0xdee7(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8080149:	8b 00                	mov    (%rax),%eax
 808014b:	48 63 c0             	movslq %eax,%rax
 808014e:	48 89 c1             	mov    %rax,%rcx
 8080151:	4c 8b 1d 30 df 00 00 	mov    0xdf30(%rip),%r11        # 808e088 <_GLOBAL_OFFSET_TABLE_+0x408>
 8080158:	49 89 0b             	mov    %rcx,(%r11)
 808015b:	b8 00 00 00 00       	mov    $0x0,%eax
 8080160:	4c 8b 1d 29 df 00 00 	mov    0xdf29(%rip),%r11        # 808e090 <_GLOBAL_OFFSET_TABLE_+0x410>
 8080167:	41 89 03             	mov    %eax,(%r11)
 808016a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808016e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8080175:	00 00 00 
 8080178:	48 01 c8             	add    %rcx,%rax
 808017b:	48 8b 08             	mov    (%rax),%rcx
 808017e:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8080185:	00 00 00 
 8080188:	48 01 c1             	add    %rax,%rcx
 808018b:	48 8b 01             	mov    (%rcx),%rax
 808018e:	48 b9 03 00 00 00 00 	movabs $0x3,%rcx
 8080195:	00 00 00 
 8080198:	48 39 c8             	cmp    %rcx,%rax
 808019b:	0f 85 da 02 00 00    	jne    808047b <gfunc_prolog+0x38d>
 80801a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80801a6:	89 45 c0             	mov    %eax,-0x40(%rbp)
 80801a9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 80801ac:	b8 10 00 00 00       	mov    $0x10,%eax
 80801b1:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80801b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80801b8:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80801bf:	00 00 00 
 80801c2:	48 01 c8             	add    %rcx,%rax
 80801c5:	48 8b 08             	mov    (%rax),%rcx
 80801c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 80801cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80801d0:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 80801d7:	00 00 00 
 80801da:	48 01 c8             	add    %rcx,%rax
 80801dd:	48 8b 08             	mov    (%rax),%rcx
 80801e0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 80801e4:	48 89 c8             	mov    %rcx,%rax
 80801e7:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 80801ee:	00 00 00 
 80801f1:	48 39 c8             	cmp    %rcx,%rax
 80801f4:	0f 84 f0 00 00 00    	je     80802ea <gfunc_prolog+0x1fc>
 80801fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80801fe:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8080205:	00 00 00 
 8080208:	48 01 c8             	add    %rcx,%rax
 808020b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 808020f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8080213:	8b 08                	mov    (%rax),%ecx
 8080215:	48 89 cf             	mov    %rcx,%rdi
 8080218:	b8 00 00 00 00       	mov    $0x0,%eax
 808021d:	e8 65 dd ff ff       	callq  807df87 <is_sse_float>
 8080222:	85 c0                	test   %eax,%eax
 8080224:	0f 84 2b 00 00 00    	je     8080255 <gfunc_prolog+0x167>
 808022a:	8b 45 c0             	mov    -0x40(%rbp),%eax
 808022d:	83 f8 08             	cmp    $0x8,%eax
 8080230:	0f 8d 11 00 00 00    	jge    8080247 <gfunc_prolog+0x159>
 8080236:	8b 45 c0             	mov    -0x40(%rbp),%eax
 8080239:	48 89 c1             	mov    %rax,%rcx
 808023c:	83 c0 01             	add    $0x1,%eax
 808023f:	89 45 c0             	mov    %eax,-0x40(%rbp)
 8080242:	e9 09 00 00 00       	jmpq   8080250 <gfunc_prolog+0x162>
 8080247:	8b 45 bc             	mov    -0x44(%rbp),%eax
 808024a:	83 c0 08             	add    $0x8,%eax
 808024d:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8080250:	e9 90 00 00 00       	jmpq   80802e5 <gfunc_prolog+0x1f7>
 8080255:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8080259:	8b 08                	mov    (%rax),%ecx
 808025b:	83 e1 0f             	and    $0xf,%ecx
 808025e:	83 f9 07             	cmp    $0x7,%ecx
 8080261:	0f 85 38 00 00 00    	jne    808029f <gfunc_prolog+0x1b1>
 8080267:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 808026b:	48 89 c6             	mov    %rax,%rsi
 808026e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8080272:	48 89 c7             	mov    %rax,%rdi
 8080275:	b8 00 00 00 00       	mov    $0x0,%eax
 808027a:	e8 95 0b fe ff       	callq  8060e14 <type_size>
 808027f:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8080282:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8080285:	83 c0 07             	add    $0x7,%eax
 8080288:	83 e0 f8             	and    $0xfffffff8,%eax
 808028b:	89 45 e8             	mov    %eax,-0x18(%rbp)
 808028e:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8080291:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8080294:	48 01 c8             	add    %rcx,%rax
 8080297:	89 45 bc             	mov    %eax,-0x44(%rbp)
 808029a:	e9 46 00 00 00       	jmpq   80802e5 <gfunc_prolog+0x1f7>
 808029f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80802a3:	8b 08                	mov    (%rax),%ecx
 80802a5:	83 e1 0f             	and    $0xf,%ecx
 80802a8:	83 f9 0a             	cmp    $0xa,%ecx
 80802ab:	0f 85 0e 00 00 00    	jne    80802bf <gfunc_prolog+0x1d1>
 80802b1:	8b 45 bc             	mov    -0x44(%rbp),%eax
 80802b4:	83 c0 10             	add    $0x10,%eax
 80802b7:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80802ba:	e9 26 00 00 00       	jmpq   80802e5 <gfunc_prolog+0x1f7>
 80802bf:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80802c2:	83 f8 06             	cmp    $0x6,%eax
 80802c5:	0f 8d 11 00 00 00    	jge    80802dc <gfunc_prolog+0x1ee>
 80802cb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80802ce:	48 89 c1             	mov    %rax,%rcx
 80802d1:	83 c0 01             	add    $0x1,%eax
 80802d4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 80802d7:	e9 09 00 00 00       	jmpq   80802e5 <gfunc_prolog+0x1f7>
 80802dc:	8b 45 bc             	mov    -0x44(%rbp),%eax
 80802df:	83 c0 08             	add    $0x8,%eax
 80802e2:	89 45 bc             	mov    %eax,-0x44(%rbp)
 80802e5:	e9 e2 fe ff ff       	jmpq   80801cc <gfunc_prolog+0xde>
 80802ea:	48 8b 05 07 dd 00 00 	mov    0xdd07(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80802f1:	8b 00                	mov    (%rax),%eax
 80802f3:	83 e8 10             	sub    $0x10,%eax
 80802f6:	4c 8b 1d fb dc 00 00 	mov    0xdcfb(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80802fd:	41 89 03             	mov    %eax,(%r11)
 8080300:	b8 c7 45 f0 00       	mov    $0xf045c7,%eax
 8080305:	48 89 c7             	mov    %rax,%rdi
 8080308:	b8 00 00 00 00       	mov    $0x0,%eax
 808030d:	e8 3f d9 ff ff       	callq  807dc51 <o>
 8080312:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8080315:	c1 e0 03             	shl    $0x3,%eax
 8080318:	48 89 c7             	mov    %rax,%rdi
 808031b:	b8 00 00 00 00       	mov    $0x0,%eax
 8080320:	e8 97 d9 ff ff       	callq  807dcbc <gen_le32>
 8080325:	b8 c7 45 f4 00       	mov    $0xf445c7,%eax
 808032a:	48 89 c7             	mov    %rax,%rdi
 808032d:	b8 00 00 00 00       	mov    $0x0,%eax
 8080332:	e8 1a d9 ff ff       	callq  807dc51 <o>
 8080337:	8b 45 c0             	mov    -0x40(%rbp),%eax
 808033a:	c1 e0 04             	shl    $0x4,%eax
 808033d:	83 c0 30             	add    $0x30,%eax
 8080340:	48 89 c7             	mov    %rax,%rdi
 8080343:	b8 00 00 00 00       	mov    $0x0,%eax
 8080348:	e8 6f d9 ff ff       	callq  807dcbc <gen_le32>
 808034d:	b8 c7 45 f8 00       	mov    $0xf845c7,%eax
 8080352:	48 89 c7             	mov    %rax,%rdi
 8080355:	b8 00 00 00 00       	mov    $0x0,%eax
 808035a:	e8 f2 d8 ff ff       	callq  807dc51 <o>
 808035f:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8080362:	48 89 c7             	mov    %rax,%rdi
 8080365:	b8 00 00 00 00       	mov    $0x0,%eax
 808036a:	e8 4d d9 ff ff       	callq  807dcbc <gen_le32>
 808036f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080374:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8080377:	8b 45 f4             	mov    -0xc(%rbp),%eax
 808037a:	83 f8 08             	cmp    $0x8,%eax
 808037d:	0f 8d b7 00 00 00    	jge    808043a <gfunc_prolog+0x34c>
 8080383:	e9 0e 00 00 00       	jmpq   8080396 <gfunc_prolog+0x2a8>
 8080388:	8b 45 f4             	mov    -0xc(%rbp),%eax
 808038b:	48 89 c1             	mov    %rax,%rcx
 808038e:	83 c0 01             	add    $0x1,%eax
 8080391:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8080394:	eb e1                	jmp    8080377 <gfunc_prolog+0x289>
 8080396:	48 8b 05 5b dc 00 00 	mov    0xdc5b(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 808039d:	8b 00                	mov    (%rax),%eax
 808039f:	83 e8 10             	sub    $0x10,%eax
 80803a2:	4c 8b 1d 4f dc 00 00 	mov    0xdc4f(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80803a9:	41 89 03             	mov    %eax,(%r11)
 80803ac:	b8 66 0f d6 00       	mov    $0xd60f66,%eax
 80803b1:	48 89 c7             	mov    %rax,%rdi
 80803b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80803b9:	e8 93 d8 ff ff       	callq  807dc51 <o>
 80803be:	b8 07 00 00 00       	mov    $0x7,%eax
 80803c3:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 80803c6:	48 29 c8             	sub    %rcx,%rax
 80803c9:	48 8b 0d 28 dc 00 00 	mov    0xdc28(%rip),%rcx        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80803d0:	8b 09                	mov    (%rcx),%ecx
 80803d2:	49 89 cb             	mov    %rcx,%r11
 80803d5:	b9 00 00 00 00       	mov    $0x0,%ecx
 80803da:	49 89 ca             	mov    %rcx,%r10
 80803dd:	b9 32 00 00 00       	mov    $0x32,%ecx
 80803e2:	48 89 ce             	mov    %rcx,%rsi
 80803e5:	48 89 c7             	mov    %rax,%rdi
 80803e8:	4c 89 d2             	mov    %r10,%rdx
 80803eb:	4c 89 d9             	mov    %r11,%rcx
 80803ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80803f3:	e8 de e0 ff ff       	callq  807e4d6 <gen_modrm>
 80803f8:	b8 48 c7 85 00       	mov    $0x85c748,%eax
 80803fd:	48 89 c7             	mov    %rax,%rdi
 8080400:	b8 00 00 00 00       	mov    $0x0,%eax
 8080405:	e8 47 d8 ff ff       	callq  807dc51 <o>
 808040a:	48 8b 05 e7 db 00 00 	mov    0xdbe7(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8080411:	8b 00                	mov    (%rax),%eax
 8080413:	83 c0 08             	add    $0x8,%eax
 8080416:	48 89 c7             	mov    %rax,%rdi
 8080419:	b8 00 00 00 00       	mov    $0x0,%eax
 808041e:	e8 99 d8 ff ff       	callq  807dcbc <gen_le32>
 8080423:	b8 00 00 00 00       	mov    $0x0,%eax
 8080428:	48 89 c7             	mov    %rax,%rdi
 808042b:	b8 00 00 00 00       	mov    $0x0,%eax
 8080430:	e8 87 d8 ff ff       	callq  807dcbc <gen_le32>
 8080435:	e9 4e ff ff ff       	jmpq   8080388 <gfunc_prolog+0x29a>
 808043a:	b8 00 00 00 00       	mov    $0x0,%eax
 808043f:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8080442:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080445:	83 f8 06             	cmp    $0x6,%eax
 8080448:	0f 8d 2d 00 00 00    	jge    808047b <gfunc_prolog+0x38d>
 808044e:	e9 0e 00 00 00       	jmpq   8080461 <gfunc_prolog+0x373>
 8080453:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080456:	48 89 c1             	mov    %rax,%rcx
 8080459:	83 c0 01             	add    $0x1,%eax
 808045c:	89 45 f4             	mov    %eax,-0xc(%rbp)
 808045f:	eb e1                	jmp    8080442 <gfunc_prolog+0x354>
 8080461:	b8 05 00 00 00       	mov    $0x5,%eax
 8080466:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8080469:	48 29 c8             	sub    %rcx,%rax
 808046c:	48 89 c7             	mov    %rax,%rdi
 808046f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080474:	e8 01 fc ff ff       	callq  808007a <push_arg_reg>
 8080479:	eb d8                	jmp    8080453 <gfunc_prolog+0x365>
 808047b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808047f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8080486:	00 00 00 
 8080489:	48 01 c8             	add    %rcx,%rax
 808048c:	48 8b 08             	mov    (%rax),%rcx
 808048f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8080493:	b8 00 00 00 00       	mov    $0x0,%eax
 8080498:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 808049b:	b8 00 00 00 00       	mov    $0x0,%eax
 80804a0:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80804a3:	b8 00 00 00 00       	mov    $0x0,%eax
 80804a8:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80804ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80804af:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80804b6:	00 00 00 
 80804b9:	48 01 c8             	add    %rcx,%rax
 80804bc:	b9 10 00 00 00       	mov    $0x10,%ecx
 80804c1:	49 89 ca             	mov    %rcx,%r10
 80804c4:	48 89 c6             	mov    %rax,%rsi
 80804c7:	48 8b 0d 7a db 00 00 	mov    0xdb7a(%rip),%rcx        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 80804ce:	48 89 cf             	mov    %rcx,%rdi
 80804d1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 80804d5:	4c 89 d2             	mov    %r10,%rdx
 80804d8:	b8 00 00 00 00       	mov    $0x0,%eax
 80804dd:	e8 8e 67 00 00       	callq  8086c70 <memcpy>
 80804e2:	48 8b 05 5f db 00 00 	mov    0xdb5f(%rip),%rax        # 808e048 <_GLOBAL_OFFSET_TABLE_+0x3c8>
 80804e9:	8b 00                	mov    (%rax),%eax
 80804eb:	83 e0 0f             	and    $0xf,%eax
 80804ee:	83 f8 07             	cmp    $0x7,%eax
 80804f1:	0f 85 47 00 00 00    	jne    808053e <gfunc_prolog+0x450>
 80804f7:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80804fa:	48 89 c7             	mov    %rax,%rdi
 80804fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8080502:	e8 73 fb ff ff       	callq  808007a <push_arg_reg>
 8080507:	48 8b 05 ea da 00 00 	mov    0xdaea(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 808050e:	8b 00                	mov    (%rax),%eax
 8080510:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8080513:	48 8b 05 de da 00 00 	mov    0xdade(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 808051a:	8b 00                	mov    (%rax),%eax
 808051c:	4c 8b 1d 2d db 00 00 	mov    0xdb2d(%rip),%r11        # 808e050 <_GLOBAL_OFFSET_TABLE_+0x3d0>
 8080523:	41 89 03             	mov    %eax,(%r11)
 8080526:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8080529:	48 89 c1             	mov    %rax,%rcx
 808052c:	83 c0 01             	add    $0x1,%eax
 808052f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8080532:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8080535:	48 89 c1             	mov    %rax,%rcx
 8080538:	83 c0 01             	add    $0x1,%eax
 808053b:	89 45 dc             	mov    %eax,-0x24(%rbp)
 808053e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8080542:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8080549:	00 00 00 
 808054c:	48 01 c8             	add    %rcx,%rax
 808054f:	48 8b 08             	mov    (%rax),%rcx
 8080552:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8080556:	48 89 c8             	mov    %rcx,%rax
 8080559:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
 8080560:	00 00 00 
 8080563:	48 39 c8             	cmp    %rcx,%rax
 8080566:	0f 84 be 01 00 00    	je     808072a <gfunc_prolog+0x63c>
 808056c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8080570:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8080577:	00 00 00 
 808057a:	48 01 c8             	add    %rcx,%rax
 808057d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8080581:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 8080585:	48 89 c6             	mov    %rax,%rsi
 8080588:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 808058c:	48 89 c7             	mov    %rax,%rdi
 808058f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080594:	e8 7b 08 fe ff       	callq  8060e14 <type_size>
 8080599:	89 45 e8             	mov    %eax,-0x18(%rbp)
 808059c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 808059f:	83 c0 07             	add    $0x7,%eax
 80805a2:	83 e0 f8             	and    $0xfffffff8,%eax
 80805a5:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80805a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 80805ac:	8b 08                	mov    (%rax),%ecx
 80805ae:	48 89 cf             	mov    %rcx,%rdi
 80805b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80805b6:	e8 cc d9 ff ff       	callq  807df87 <is_sse_float>
 80805bb:	85 c0                	test   %eax,%eax
 80805bd:	0f 84 9a 00 00 00    	je     808065d <gfunc_prolog+0x56f>
 80805c3:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80805c6:	83 f8 08             	cmp    $0x8,%eax
 80805c9:	0f 8d 6b 00 00 00    	jge    808063a <gfunc_prolog+0x54c>
 80805cf:	48 8b 05 22 da 00 00 	mov    0xda22(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80805d6:	8b 00                	mov    (%rax),%eax
 80805d8:	83 e8 08             	sub    $0x8,%eax
 80805db:	4c 8b 1d 16 da 00 00 	mov    0xda16(%rip),%r11        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80805e2:	41 89 03             	mov    %eax,(%r11)
 80805e5:	b8 66 0f d6 00       	mov    $0xd60f66,%eax
 80805ea:	48 89 c7             	mov    %rax,%rdi
 80805ed:	b8 00 00 00 00       	mov    $0x0,%eax
 80805f2:	e8 5a d6 ff ff       	callq  807dc51 <o>
 80805f7:	48 8b 05 fa d9 00 00 	mov    0xd9fa(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80805fe:	8b 00                	mov    (%rax),%eax
 8080600:	49 89 c3             	mov    %rax,%r11
 8080603:	b8 00 00 00 00       	mov    $0x0,%eax
 8080608:	49 89 c2             	mov    %rax,%r10
 808060b:	b8 32 00 00 00       	mov    $0x32,%eax
 8080610:	48 89 c6             	mov    %rax,%rsi
 8080613:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8080616:	48 89 c7             	mov    %rax,%rdi
 8080619:	4c 89 d2             	mov    %r10,%rdx
 808061c:	4c 89 d9             	mov    %r11,%rcx
 808061f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080624:	e8 ad de ff ff       	callq  807e4d6 <gen_modrm>
 8080629:	48 8b 05 c8 d9 00 00 	mov    0xd9c8(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 8080630:	8b 00                	mov    (%rax),%eax
 8080632:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8080635:	e9 12 00 00 00       	jmpq   808064c <gfunc_prolog+0x55e>
 808063a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808063d:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8080640:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080643:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8080646:	48 01 c8             	add    %rcx,%rax
 8080649:	89 45 f0             	mov    %eax,-0x10(%rbp)
 808064c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 808064f:	48 89 c1             	mov    %rax,%rcx
 8080652:	83 c0 01             	add    $0x1,%eax
 8080655:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8080658:	e9 88 00 00 00       	jmpq   80806e5 <gfunc_prolog+0x5f7>
 808065d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8080661:	8b 08                	mov    (%rax),%ecx
 8080663:	83 e1 0f             	and    $0xf,%ecx
 8080666:	83 f9 07             	cmp    $0x7,%ecx
 8080669:	0f 84 17 00 00 00    	je     8080686 <gfunc_prolog+0x598>
 808066f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8080673:	8b 08                	mov    (%rax),%ecx
 8080675:	83 e1 0f             	and    $0xf,%ecx
 8080678:	83 f9 0a             	cmp    $0xa,%ecx
 808067b:	0f 84 05 00 00 00    	je     8080686 <gfunc_prolog+0x598>
 8080681:	e9 17 00 00 00       	jmpq   808069d <gfunc_prolog+0x5af>
 8080686:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080689:	89 45 e0             	mov    %eax,-0x20(%rbp)
 808068c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808068f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8080692:	48 01 c8             	add    %rcx,%rax
 8080695:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8080698:	e9 48 00 00 00       	jmpq   80806e5 <gfunc_prolog+0x5f7>
 808069d:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80806a0:	83 f8 06             	cmp    $0x6,%eax
 80806a3:	0f 8d 21 00 00 00    	jge    80806ca <gfunc_prolog+0x5dc>
 80806a9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80806ac:	48 89 c7             	mov    %rax,%rdi
 80806af:	b8 00 00 00 00       	mov    $0x0,%eax
 80806b4:	e8 c1 f9 ff ff       	callq  808007a <push_arg_reg>
 80806b9:	48 8b 05 38 d9 00 00 	mov    0xd938(%rip),%rax        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80806c0:	8b 00                	mov    (%rax),%eax
 80806c2:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80806c5:	e9 0f 00 00 00       	jmpq   80806d9 <gfunc_prolog+0x5eb>
 80806ca:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80806cd:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80806d0:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80806d3:	83 c0 08             	add    $0x8,%eax
 80806d6:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80806d9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80806dc:	48 89 c1             	mov    %rax,%rcx
 80806df:	83 c0 01             	add    $0x1,%eax
 80806e2:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80806e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80806e9:	8b 08                	mov    (%rax),%ecx
 80806eb:	81 e1 ff ff ff df    	and    $0xdfffffff,%ecx
 80806f1:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80806f4:	49 89 c3             	mov    %rax,%r11
 80806f7:	b8 32 01 00 00       	mov    $0x132,%eax
 80806fc:	49 89 c2             	mov    %rax,%r10
 80806ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8080703:	48 89 c6             	mov    %rax,%rsi
 8080706:	48 89 cf             	mov    %rcx,%rdi
 8080709:	4c 89 d2             	mov    %r10,%rdx
 808070c:	4c 89 d9             	mov    %r11,%rcx
 808070f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080714:	e8 42 ba fd ff       	callq  805c15b <sym_push>
 8080719:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808071c:	48 89 c1             	mov    %rax,%rcx
 808071f:	83 c0 01             	add    $0x1,%eax
 8080722:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8080725:	e9 14 fe ff ff       	jmpq   808053e <gfunc_prolog+0x450>
 808072a:	c9                   	leaveq 
 808072b:	c3                   	retq   

000000000808072c <gfunc_epilog>:
 808072c:	55                   	push   %rbp
 808072d:	48 89 e5             	mov    %rsp,%rbp
 8080730:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8080737:	b8 c9 00 00 00       	mov    $0xc9,%eax
 808073c:	48 89 c7             	mov    %rax,%rdi
 808073f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080744:	e8 08 d5 ff ff       	callq  807dc51 <o>
 8080749:	8b 05 09 15 02 00    	mov    0x21509(%rip),%eax        # 80a1c58 <func_ret_sub>
 808074f:	83 f8 00             	cmp    $0x0,%eax
 8080752:	0f 85 17 00 00 00    	jne    808076f <gfunc_epilog+0x43>
 8080758:	b8 c3 00 00 00       	mov    $0xc3,%eax
 808075d:	48 89 c7             	mov    %rax,%rdi
 8080760:	b8 00 00 00 00       	mov    $0x0,%eax
 8080765:	e8 e7 d4 ff ff       	callq  807dc51 <o>
 808076a:	e9 3b 00 00 00       	jmpq   80807aa <gfunc_epilog+0x7e>
 808076f:	b8 c2 00 00 00       	mov    $0xc2,%eax
 8080774:	48 89 c7             	mov    %rax,%rdi
 8080777:	b8 00 00 00 00       	mov    $0x0,%eax
 808077c:	e8 d0 d4 ff ff       	callq  807dc51 <o>
 8080781:	8b 05 d1 14 02 00    	mov    0x214d1(%rip),%eax        # 80a1c58 <func_ret_sub>
 8080787:	48 89 c7             	mov    %rax,%rdi
 808078a:	b8 00 00 00 00       	mov    $0x0,%eax
 808078f:	e8 0f d4 ff ff       	callq  807dba3 <g>
 8080794:	8b 05 be 14 02 00    	mov    0x214be(%rip),%eax        # 80a1c58 <func_ret_sub>
 808079a:	c1 f8 08             	sar    $0x8,%eax
 808079d:	48 89 c7             	mov    %rax,%rdi
 80807a0:	b8 00 00 00 00       	mov    $0x0,%eax
 80807a5:	e8 f9 d3 ff ff       	callq  807dba3 <g>
 80807aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80807af:	48 8b 0d 42 d8 00 00 	mov    0xd842(%rip),%rcx        # 808dff8 <_GLOBAL_OFFSET_TABLE_+0x378>
 80807b6:	8b 09                	mov    (%rcx),%ecx
 80807b8:	48 29 c8             	sub    %rcx,%rax
 80807bb:	83 c0 0f             	add    $0xf,%eax
 80807be:	83 e0 f0             	and    $0xfffffff0,%eax
 80807c1:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80807c4:	48 8b 05 65 d8 00 00 	mov    0xd865(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80807cb:	8b 00                	mov    (%rax),%eax
 80807cd:	89 45 f8             	mov    %eax,-0x8(%rbp)
 80807d0:	48 8b 05 79 14 02 00 	mov    0x21479(%rip),%rax        # 80a1c50 <func_sub_sp_offset>
 80807d7:	48 b9 0b 00 00 00 00 	movabs $0xb,%rcx
 80807de:	00 00 00 
 80807e1:	48 29 c8             	sub    %rcx,%rax
 80807e4:	4c 8b 1d 45 d8 00 00 	mov    0xd845(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80807eb:	41 89 03             	mov    %eax,(%r11)
 80807ee:	b8 55 48 89 e5       	mov    $0xe5894855,%eax
 80807f3:	48 89 c7             	mov    %rax,%rdi
 80807f6:	b8 00 00 00 00       	mov    $0x0,%eax
 80807fb:	e8 51 d4 ff ff       	callq  807dc51 <o>
 8080800:	b8 48 81 ec 00       	mov    $0xec8148,%eax
 8080805:	48 89 c7             	mov    %rax,%rdi
 8080808:	b8 00 00 00 00       	mov    $0x0,%eax
 808080d:	e8 3f d4 ff ff       	callq  807dc51 <o>
 8080812:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8080815:	48 89 c7             	mov    %rax,%rdi
 8080818:	b8 00 00 00 00       	mov    $0x0,%eax
 808081d:	e8 9a d4 ff ff       	callq  807dcbc <gen_le32>
 8080822:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080825:	4c 8b 1d 04 d8 00 00 	mov    0xd804(%rip),%r11        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 808082c:	41 89 03             	mov    %eax,(%r11)
 808082f:	c9                   	leaveq 
 8080830:	c3                   	retq   

0000000008080831 <gjmp>:
 8080831:	55                   	push   %rbp
 8080832:	48 89 e5             	mov    %rsp,%rbp
 8080835:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 808083c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8080840:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080843:	48 89 c6             	mov    %rax,%rsi
 8080846:	b8 e9 00 00 00       	mov    $0xe9,%eax
 808084b:	48 89 c7             	mov    %rax,%rdi
 808084e:	b8 00 00 00 00       	mov    $0x0,%eax
 8080853:	e8 72 d7 ff ff       	callq  807dfca <oad>
 8080858:	e9 00 00 00 00       	jmpq   808085d <gjmp+0x2c>
 808085d:	c9                   	leaveq 
 808085e:	c3                   	retq   

000000000808085f <gjmp_addr>:
 808085f:	55                   	push   %rbp
 8080860:	48 89 e5             	mov    %rsp,%rbp
 8080863:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 808086a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 808086e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080871:	48 8b 0d b8 d7 00 00 	mov    0xd7b8(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8080878:	8b 09                	mov    (%rcx),%ecx
 808087a:	48 29 c8             	sub    %rcx,%rax
 808087d:	83 e8 02             	sub    $0x2,%eax
 8080880:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8080883:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080886:	c1 e0 18             	shl    $0x18,%eax
 8080889:	c1 f8 18             	sar    $0x18,%eax
 808088c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 808088f:	39 c1                	cmp    %eax,%ecx
 8080891:	0f 85 27 00 00 00    	jne    80808be <gjmp_addr+0x5f>
 8080897:	b8 eb 00 00 00       	mov    $0xeb,%eax
 808089c:	48 89 c7             	mov    %rax,%rdi
 808089f:	b8 00 00 00 00       	mov    $0x0,%eax
 80808a4:	e8 fa d2 ff ff       	callq  807dba3 <g>
 80808a9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80808ac:	48 89 c7             	mov    %rax,%rdi
 80808af:	b8 00 00 00 00       	mov    $0x0,%eax
 80808b4:	e8 ea d2 ff ff       	callq  807dba3 <g>
 80808b9:	e9 27 00 00 00       	jmpq   80808e5 <gjmp_addr+0x86>
 80808be:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80808c1:	48 8b 0d 68 d7 00 00 	mov    0xd768(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80808c8:	8b 09                	mov    (%rcx),%ecx
 80808ca:	48 29 c8             	sub    %rcx,%rax
 80808cd:	83 e8 05             	sub    $0x5,%eax
 80808d0:	48 89 c6             	mov    %rax,%rsi
 80808d3:	b8 e9 00 00 00       	mov    $0xe9,%eax
 80808d8:	48 89 c7             	mov    %rax,%rdi
 80808db:	b8 00 00 00 00       	mov    $0x0,%eax
 80808e0:	e8 e5 d6 ff ff       	callq  807dfca <oad>
 80808e5:	c9                   	leaveq 
 80808e6:	c3                   	retq   

00000000080808e7 <gtst>:
 80808e7:	55                   	push   %rbp
 80808e8:	48 89 e5             	mov    %rsp,%rbp
 80808eb:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80808f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80808f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80808fa:	48 8b 05 1f d6 00 00 	mov    0xd61f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080901:	48 8b 00             	mov    (%rax),%rax
 8080904:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 808090b:	00 00 00 
 808090e:	48 01 c8             	add    %rcx,%rax
 8080911:	0f b7 08             	movzwl (%rax),%ecx
 8080914:	83 e1 3f             	and    $0x3f,%ecx
 8080917:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 808091a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808091d:	83 f8 33             	cmp    $0x33,%eax
 8080920:	0f 85 21 01 00 00    	jne    8080a47 <gtst+0x160>
 8080926:	48 8b 05 f3 d5 00 00 	mov    0xd5f3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808092d:	48 8b 00             	mov    (%rax),%rax
 8080930:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080937:	00 00 00 
 808093a:	48 01 c8             	add    %rcx,%rax
 808093d:	8b 08                	mov    (%rax),%ecx
 808093f:	81 e1 00 01 00 00    	and    $0x100,%ecx
 8080945:	85 c9                	test   %ecx,%ecx
 8080947:	0f 84 ab 00 00 00    	je     80809f8 <gtst+0x111>
 808094d:	48 8b 05 cc d5 00 00 	mov    0xd5cc(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080954:	48 8b 00             	mov    (%rax),%rax
 8080957:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 808095e:	00 00 00 
 8080961:	48 01 c8             	add    %rcx,%rax
 8080964:	8b 08                	mov    (%rax),%ecx
 8080966:	81 e1 ff fe ff ff    	and    $0xfffffeff,%ecx
 808096c:	89 08                	mov    %ecx,(%rax)
 808096e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080971:	85 c0                	test   %eax,%eax
 8080973:	0f 84 07 00 00 00    	je     8080980 <gtst+0x99>
 8080979:	b8 00 00 00 00       	mov    $0x0,%eax
 808097e:	eb 05                	jmp    8080985 <gtst+0x9e>
 8080980:	b8 01 00 00 00       	mov    $0x1,%eax
 8080985:	48 8b 0d 94 d5 00 00 	mov    0xd594(%rip),%rcx        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808098c:	48 8b 09             	mov    (%rcx),%rcx
 808098f:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8080996:	00 00 00 
 8080999:	48 01 d1             	add    %rdx,%rcx
 808099c:	8b 11                	mov    (%rcx),%edx
 808099e:	81 fa 95 00 00 00    	cmp    $0x95,%edx
 80809a4:	b9 00 00 00 00       	mov    $0x0,%ecx
 80809a9:	0f 95 c1             	setne  %cl
 80809ac:	39 c8                	cmp    %ecx,%eax
 80809ae:	0f 85 17 00 00 00    	jne    80809cb <gtst+0xe4>
 80809b4:	b8 7a 06 00 00       	mov    $0x67a,%eax
 80809b9:	48 89 c7             	mov    %rax,%rdi
 80809bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80809c1:	e8 8b d2 ff ff       	callq  807dc51 <o>
 80809c6:	e9 2d 00 00 00       	jmpq   80809f8 <gtst+0x111>
 80809cb:	b8 0f 00 00 00       	mov    $0xf,%eax
 80809d0:	48 89 c7             	mov    %rax,%rdi
 80809d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80809d8:	e8 c6 d1 ff ff       	callq  807dba3 <g>
 80809dd:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80809e0:	48 89 c6             	mov    %rax,%rsi
 80809e3:	b8 8a 00 00 00       	mov    $0x8a,%eax
 80809e8:	48 89 c7             	mov    %rax,%rdi
 80809eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80809f0:	e8 d5 d5 ff ff       	callq  807dfca <oad>
 80809f5:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80809f8:	b8 0f 00 00 00       	mov    $0xf,%eax
 80809fd:	48 89 c7             	mov    %rax,%rdi
 8080a00:	b8 00 00 00 00       	mov    $0x0,%eax
 8080a05:	e8 99 d1 ff ff       	callq  807dba3 <g>
 8080a0a:	48 8b 05 0f d5 00 00 	mov    0xd50f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080a11:	48 8b 00             	mov    (%rax),%rax
 8080a14:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080a1b:	00 00 00 
 8080a1e:	48 01 c8             	add    %rcx,%rax
 8080a21:	8b 08                	mov    (%rax),%ecx
 8080a23:	83 e9 10             	sub    $0x10,%ecx
 8080a26:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080a29:	48 31 c1             	xor    %rax,%rcx
 8080a2c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080a2f:	48 89 c6             	mov    %rax,%rsi
 8080a32:	48 89 cf             	mov    %rcx,%rdi
 8080a35:	b8 00 00 00 00       	mov    $0x0,%eax
 8080a3a:	e8 8b d5 ff ff       	callq  807dfca <oad>
 8080a3f:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8080a42:	e9 54 02 00 00       	jmpq   8080c9b <gtst+0x3b4>
 8080a47:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080a4a:	83 f8 34             	cmp    $0x34,%eax
 8080a4d:	0f 84 11 00 00 00    	je     8080a64 <gtst+0x17d>
 8080a53:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080a56:	83 f8 35             	cmp    $0x35,%eax
 8080a59:	0f 84 05 00 00 00    	je     8080a64 <gtst+0x17d>
 8080a5f:	e9 d2 00 00 00       	jmpq   8080b36 <gtst+0x24f>
 8080a64:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080a67:	83 e0 01             	and    $0x1,%eax
 8080a6a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8080a6d:	39 c8                	cmp    %ecx,%eax
 8080a6f:	0f 85 83 00 00 00    	jne    8080af8 <gtst+0x211>
 8080a75:	48 8b 05 a4 d4 00 00 	mov    0xd4a4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080a7c:	48 8b 00             	mov    (%rax),%rax
 8080a7f:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080a86:	00 00 00 
 8080a89:	48 01 c8             	add    %rcx,%rax
 8080a8c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8080a90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8080a94:	8b 08                	mov    (%rax),%ecx
 8080a96:	83 f9 00             	cmp    $0x0,%ecx
 8080a99:	0f 84 2f 00 00 00    	je     8080ace <gtst+0x1e7>
 8080a9f:	48 8b 05 12 d4 00 00 	mov    0xd412(%rip),%rax        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 8080aa6:	48 8b 00             	mov    (%rax),%rax
 8080aa9:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8080ab0:	00 00 00 
 8080ab3:	48 01 c8             	add    %rcx,%rax
 8080ab6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 8080aba:	8b 11                	mov    (%rcx),%edx
 8080abc:	48 63 d2             	movslq %edx,%rdx
 8080abf:	48 8b 08             	mov    (%rax),%rcx
 8080ac2:	48 89 d0             	mov    %rdx,%rax
 8080ac5:	48 01 c1             	add    %rax,%rcx
 8080ac8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8080acc:	eb c2                	jmp    8080a90 <gtst+0x1a9>
 8080ace:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8080ad2:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8080ad5:	89 08                	mov    %ecx,(%rax)
 8080ad7:	48 8b 05 42 d4 00 00 	mov    0xd442(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080ade:	48 8b 00             	mov    (%rax),%rax
 8080ae1:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080ae8:	00 00 00 
 8080aeb:	48 01 c8             	add    %rcx,%rax
 8080aee:	8b 08                	mov    (%rax),%ecx
 8080af0:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8080af3:	e9 39 00 00 00       	jmpq   8080b31 <gtst+0x24a>
 8080af8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080afb:	48 89 c7             	mov    %rax,%rdi
 8080afe:	b8 00 00 00 00       	mov    $0x0,%eax
 8080b03:	e8 29 fd ff ff       	callq  8080831 <gjmp>
 8080b08:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8080b0b:	48 8b 05 0e d4 00 00 	mov    0xd40e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080b12:	48 8b 00             	mov    (%rax),%rax
 8080b15:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080b1c:	00 00 00 
 8080b1f:	48 01 c8             	add    %rcx,%rax
 8080b22:	8b 08                	mov    (%rax),%ecx
 8080b24:	48 89 cf             	mov    %rcx,%rdi
 8080b27:	b8 00 00 00 00       	mov    $0x0,%eax
 8080b2c:	e8 da d3 ff ff       	callq  807df0b <gsym>
 8080b31:	e9 65 01 00 00       	jmpq   8080c9b <gtst+0x3b4>
 8080b36:	48 8b 05 e3 d3 00 00 	mov    0xd3e3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080b3d:	48 8b 00             	mov    (%rax),%rax
 8080b40:	8b 08                	mov    (%rax),%ecx
 8080b42:	48 89 cf             	mov    %rcx,%rdi
 8080b45:	b8 00 00 00 00       	mov    $0x0,%eax
 8080b4a:	e8 d4 b0 fd ff       	callq  805bc23 <is_float>
 8080b4f:	85 c0                	test   %eax,%eax
 8080b51:	0f 85 1d 00 00 00    	jne    8080b74 <gtst+0x28d>
 8080b57:	48 8b 05 c2 d3 00 00 	mov    0xd3c2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080b5e:	48 8b 00             	mov    (%rax),%rax
 8080b61:	8b 08                	mov    (%rax),%ecx
 8080b63:	83 e1 0f             	and    $0xf,%ecx
 8080b66:	83 f9 0c             	cmp    $0xc,%ecx
 8080b69:	0f 84 05 00 00 00    	je     8080b74 <gtst+0x28d>
 8080b6f:	e9 24 00 00 00       	jmpq   8080b98 <gtst+0x2b1>
 8080b74:	b8 00 00 00 00       	mov    $0x0,%eax
 8080b79:	48 89 c7             	mov    %rax,%rdi
 8080b7c:	b8 00 00 00 00       	mov    $0x0,%eax
 8080b81:	e8 74 bc fd ff       	callq  805c7fa <vpushi>
 8080b86:	b8 95 00 00 00       	mov    $0x95,%eax
 8080b8b:	48 89 c7             	mov    %rax,%rdi
 8080b8e:	b8 00 00 00 00       	mov    $0x0,%eax
 8080b93:	e8 28 ec fd ff       	callq  805f7c0 <gen_op>
 8080b98:	48 8b 05 81 d3 00 00 	mov    0xd381(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080b9f:	48 8b 00             	mov    (%rax),%rax
 8080ba2:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8080ba9:	00 00 00 
 8080bac:	48 01 c8             	add    %rcx,%rax
 8080baf:	0f b7 08             	movzwl (%rax),%ecx
 8080bb2:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 8080bb8:	83 f9 30             	cmp    $0x30,%ecx
 8080bbb:	0f 85 47 00 00 00    	jne    8080c08 <gtst+0x321>
 8080bc1:	48 8b 05 58 d3 00 00 	mov    0xd358(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080bc8:	48 8b 00             	mov    (%rax),%rax
 8080bcb:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080bd2:	00 00 00 
 8080bd5:	48 01 c8             	add    %rcx,%rax
 8080bd8:	8b 08                	mov    (%rax),%ecx
 8080bda:	83 f9 00             	cmp    $0x0,%ecx
 8080bdd:	b8 00 00 00 00       	mov    $0x0,%eax
 8080be2:	0f 95 c0             	setne  %al
 8080be5:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8080be8:	39 c8                	cmp    %ecx,%eax
 8080bea:	0f 84 13 00 00 00    	je     8080c03 <gtst+0x31c>
 8080bf0:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080bf3:	48 89 c7             	mov    %rax,%rdi
 8080bf6:	b8 00 00 00 00       	mov    $0x0,%eax
 8080bfb:	e8 31 fc ff ff       	callq  8080831 <gjmp>
 8080c00:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8080c03:	e9 93 00 00 00       	jmpq   8080c9b <gtst+0x3b4>
 8080c08:	b8 01 00 00 00       	mov    $0x1,%eax
 8080c0d:	48 89 c7             	mov    %rax,%rdi
 8080c10:	b8 00 00 00 00       	mov    $0x0,%eax
 8080c15:	e8 10 cb fd ff       	callq  805d72a <gv>
 8080c1a:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8080c1d:	b8 85 00 00 00       	mov    $0x85,%eax
 8080c22:	49 89 c3             	mov    %rax,%r11
 8080c25:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080c28:	49 89 c2             	mov    %rax,%r10
 8080c2b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080c2e:	48 89 c6             	mov    %rax,%rsi
 8080c31:	b8 00 00 00 00       	mov    $0x0,%eax
 8080c36:	48 89 c7             	mov    %rax,%rdi
 8080c39:	4c 89 d2             	mov    %r10,%rdx
 8080c3c:	4c 89 d9             	mov    %r11,%rcx
 8080c3f:	b8 00 00 00 00       	mov    $0x0,%eax
 8080c44:	e8 97 d1 ff ff       	callq  807dde0 <orex>
 8080c49:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080c4c:	83 e0 07             	and    $0x7,%eax
 8080c4f:	b9 09 00 00 00       	mov    $0x9,%ecx
 8080c54:	0f af c1             	imul   %ecx,%eax
 8080c57:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 8080c5d:	48 89 c7             	mov    %rax,%rdi
 8080c60:	b8 00 00 00 00       	mov    $0x0,%eax
 8080c65:	e8 e7 cf ff ff       	callq  807dc51 <o>
 8080c6a:	b8 0f 00 00 00       	mov    $0xf,%eax
 8080c6f:	48 89 c7             	mov    %rax,%rdi
 8080c72:	b8 00 00 00 00       	mov    $0x0,%eax
 8080c77:	e8 27 cf ff ff       	callq  807dba3 <g>
 8080c7c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080c7f:	81 f0 85 00 00 00    	xor    $0x85,%eax
 8080c85:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8080c88:	48 89 ce             	mov    %rcx,%rsi
 8080c8b:	48 89 c7             	mov    %rax,%rdi
 8080c8e:	b8 00 00 00 00       	mov    $0x0,%eax
 8080c93:	e8 32 d3 ff ff       	callq  807dfca <oad>
 8080c98:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8080c9b:	48 8b 05 7e d2 00 00 	mov    0xd27e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080ca2:	48 8b 00             	mov    (%rax),%rax
 8080ca5:	48 89 c1             	mov    %rax,%rcx
 8080ca8:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8080caf:	ff ff ff 
 8080cb2:	48 01 d0             	add    %rdx,%rax
 8080cb5:	4c 8b 1d 64 d2 00 00 	mov    0xd264(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080cbc:	49 89 03             	mov    %rax,(%r11)
 8080cbf:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080cc2:	e9 00 00 00 00       	jmpq   8080cc7 <gtst+0x3e0>
 8080cc7:	c9                   	leaveq 
 8080cc8:	c3                   	retq   

0000000008080cc9 <gen_opi>:
 8080cc9:	55                   	push   %rbp
 8080cca:	48 89 e5             	mov    %rsp,%rbp
 8080ccd:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
 8080cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8080cd8:	48 8b 05 41 d2 00 00 	mov    0xd241(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080cdf:	48 8b 00             	mov    (%rax),%rax
 8080ce2:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8080ce9:	ff ff ff 
 8080cec:	48 01 c8             	add    %rcx,%rax
 8080cef:	8b 08                	mov    (%rax),%ecx
 8080cf1:	48 89 cf             	mov    %rcx,%rdi
 8080cf4:	b8 00 00 00 00       	mov    $0x0,%eax
 8080cf9:	e8 3a d2 ff ff       	callq  807df38 <is64_type>
 8080cfe:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8080d01:	48 8b 05 18 d2 00 00 	mov    0xd218(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080d08:	48 8b 00             	mov    (%rax),%rax
 8080d0b:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8080d12:	ff ff ff 
 8080d15:	48 01 c8             	add    %rcx,%rax
 8080d18:	8b 08                	mov    (%rax),%ecx
 8080d1a:	83 e1 10             	and    $0x10,%ecx
 8080d1d:	83 f9 00             	cmp    $0x0,%ecx
 8080d20:	b8 00 00 00 00       	mov    $0x0,%eax
 8080d25:	0f 95 c0             	setne  %al
 8080d28:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8080d2b:	48 8b 05 ee d1 00 00 	mov    0xd1ee(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080d32:	48 8b 00             	mov    (%rax),%rax
 8080d35:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8080d3c:	00 00 00 
 8080d3f:	48 01 c8             	add    %rcx,%rax
 8080d42:	0f b7 08             	movzwl (%rax),%ecx
 8080d45:	81 e1 3f 03 00 00    	and    $0x33f,%ecx
 8080d4b:	83 f9 30             	cmp    $0x30,%ecx
 8080d4e:	b8 00 00 00 00       	mov    $0x0,%eax
 8080d53:	0f 94 c0             	sete   %al
 8080d56:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8080d59:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080d5c:	e9 05 00 00 00       	jmpq   8080d66 <gen_opi+0x9d>
 8080d61:	e9 09 00 00 00       	jmpq   8080d6f <gen_opi+0xa6>
 8080d66:	83 f8 2b             	cmp    $0x2b,%eax
 8080d69:	0f 85 05 00 00 00    	jne    8080d74 <gen_opi+0xab>
 8080d6f:	e9 0c 00 00 00       	jmpq   8080d80 <gen_opi+0xb7>
 8080d74:	81 f8 c3 00 00 00    	cmp    $0xc3,%eax
 8080d7a:	0f 85 b6 02 00 00    	jne    8081036 <gen_opi+0x36d>
 8080d80:	b8 00 00 00 00       	mov    $0x0,%eax
 8080d85:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8080d88:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8080d8b:	85 c0                	test   %eax,%eax
 8080d8d:	0f 84 68 01 00 00    	je     8080efb <gen_opi+0x232>
 8080d93:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8080d96:	85 c0                	test   %eax,%eax
 8080d98:	0f 84 48 00 00 00    	je     8080de6 <gen_opi+0x11d>
 8080d9e:	48 8b 05 7b d1 00 00 	mov    0xd17b(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080da5:	48 8b 00             	mov    (%rax),%rax
 8080da8:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080daf:	00 00 00 
 8080db2:	48 01 c8             	add    %rcx,%rax
 8080db5:	48 8b 08             	mov    (%rax),%rcx
 8080db8:	48 8b 05 61 d1 00 00 	mov    0xd161(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080dbf:	48 8b 00             	mov    (%rax),%rax
 8080dc2:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8080dc9:	00 00 00 
 8080dcc:	48 01 d0             	add    %rdx,%rax
 8080dcf:	48 63 c9             	movslq %ecx,%rcx
 8080dd2:	48 89 ca             	mov    %rcx,%rdx
 8080dd5:	48 8b 08             	mov    (%rax),%rcx
 8080dd8:	48 39 ca             	cmp    %rcx,%rdx
 8080ddb:	0f 84 05 00 00 00    	je     8080de6 <gen_opi+0x11d>
 8080de1:	e9 15 01 00 00       	jmpq   8080efb <gen_opi+0x232>
 8080de6:	b8 00 00 00 00       	mov    $0x0,%eax
 8080deb:	e8 5e c0 fd ff       	callq  805ce4e <vswap>
 8080df0:	b8 01 00 00 00       	mov    $0x1,%eax
 8080df5:	48 89 c7             	mov    %rax,%rdi
 8080df8:	b8 00 00 00 00       	mov    $0x0,%eax
 8080dfd:	e8 28 c9 fd ff       	callq  805d72a <gv>
 8080e02:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8080e05:	b8 00 00 00 00       	mov    $0x0,%eax
 8080e0a:	e8 3f c0 fd ff       	callq  805ce4e <vswap>
 8080e0f:	48 8b 05 0a d1 00 00 	mov    0xd10a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080e16:	48 8b 00             	mov    (%rax),%rax
 8080e19:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8080e20:	00 00 00 
 8080e23:	48 01 c8             	add    %rcx,%rax
 8080e26:	8b 08                	mov    (%rax),%ecx
 8080e28:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 8080e2b:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8080e2e:	c1 e0 18             	shl    $0x18,%eax
 8080e31:	c1 f8 18             	sar    $0x18,%eax
 8080e34:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8080e37:	39 c1                	cmp    %eax,%ecx
 8080e39:	0f 85 63 00 00 00    	jne    8080ea2 <gen_opi+0x1d9>
 8080e3f:	b8 83 00 00 00       	mov    $0x83,%eax
 8080e44:	49 89 c3             	mov    %rax,%r11
 8080e47:	b8 00 00 00 00       	mov    $0x0,%eax
 8080e4c:	49 89 c2             	mov    %rax,%r10
 8080e4f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080e52:	48 89 c6             	mov    %rax,%rsi
 8080e55:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8080e58:	48 89 c7             	mov    %rax,%rdi
 8080e5b:	4c 89 d2             	mov    %r10,%rdx
 8080e5e:	4c 89 d9             	mov    %r11,%rcx
 8080e61:	b8 00 00 00 00       	mov    $0x0,%eax
 8080e66:	e8 75 cf ff ff       	callq  807dde0 <orex>
 8080e6b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080e6e:	c1 e0 03             	shl    $0x3,%eax
 8080e71:	81 c8 c0 00 00 00    	or     $0xc0,%eax
 8080e77:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8080e7a:	83 e1 07             	and    $0x7,%ecx
 8080e7d:	48 09 c8             	or     %rcx,%rax
 8080e80:	48 89 c7             	mov    %rax,%rdi
 8080e83:	b8 00 00 00 00       	mov    $0x0,%eax
 8080e88:	e8 c4 cd ff ff       	callq  807dc51 <o>
 8080e8d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8080e90:	48 89 c7             	mov    %rax,%rdi
 8080e93:	b8 00 00 00 00       	mov    $0x0,%eax
 8080e98:	e8 06 cd ff ff       	callq  807dba3 <g>
 8080e9d:	e9 54 00 00 00       	jmpq   8080ef6 <gen_opi+0x22d>
 8080ea2:	b8 81 00 00 00       	mov    $0x81,%eax
 8080ea7:	49 89 c3             	mov    %rax,%r11
 8080eaa:	b8 00 00 00 00       	mov    $0x0,%eax
 8080eaf:	49 89 c2             	mov    %rax,%r10
 8080eb2:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080eb5:	48 89 c6             	mov    %rax,%rsi
 8080eb8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8080ebb:	48 89 c7             	mov    %rax,%rdi
 8080ebe:	4c 89 d2             	mov    %r10,%rdx
 8080ec1:	4c 89 d9             	mov    %r11,%rcx
 8080ec4:	b8 00 00 00 00       	mov    $0x0,%eax
 8080ec9:	e8 12 cf ff ff       	callq  807dde0 <orex>
 8080ece:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080ed1:	c1 e0 03             	shl    $0x3,%eax
 8080ed4:	81 c8 c0 00 00 00    	or     $0xc0,%eax
 8080eda:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8080edd:	83 e1 07             	and    $0x7,%ecx
 8080ee0:	48 09 c8             	or     %rcx,%rax
 8080ee3:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8080ee6:	48 89 ce             	mov    %rcx,%rsi
 8080ee9:	48 89 c7             	mov    %rax,%rdi
 8080eec:	b8 00 00 00 00       	mov    $0x0,%eax
 8080ef1:	e8 d4 d0 ff ff       	callq  807dfca <oad>
 8080ef6:	e9 b4 00 00 00       	jmpq   8080faf <gen_opi+0x2e6>
 8080efb:	b8 01 00 00 00       	mov    $0x1,%eax
 8080f00:	48 89 c6             	mov    %rax,%rsi
 8080f03:	b8 01 00 00 00       	mov    $0x1,%eax
 8080f08:	48 89 c7             	mov    %rax,%rdi
 8080f0b:	b8 00 00 00 00       	mov    $0x0,%eax
 8080f10:	e8 f9 cd fd ff       	callq  805dd0e <gv2>
 8080f15:	48 8b 05 04 d0 00 00 	mov    0xd004(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080f1c:	48 8b 00             	mov    (%rax),%rax
 8080f1f:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8080f26:	ff ff ff 
 8080f29:	48 01 c8             	add    %rcx,%rax
 8080f2c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8080f33:	00 00 00 
 8080f36:	48 01 c8             	add    %rcx,%rax
 8080f39:	0f b7 08             	movzwl (%rax),%ecx
 8080f3c:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8080f3f:	48 8b 05 da cf 00 00 	mov    0xcfda(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080f46:	48 8b 00             	mov    (%rax),%rax
 8080f49:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8080f50:	00 00 00 
 8080f53:	48 01 c8             	add    %rcx,%rax
 8080f56:	0f b7 08             	movzwl (%rax),%ecx
 8080f59:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8080f5c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8080f5f:	c1 e0 03             	shl    $0x3,%eax
 8080f62:	83 c8 01             	or     $0x1,%eax
 8080f65:	49 89 c3             	mov    %rax,%r11
 8080f68:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8080f6b:	49 89 c2             	mov    %rax,%r10
 8080f6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080f71:	48 89 c6             	mov    %rax,%rsi
 8080f74:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8080f77:	48 89 c7             	mov    %rax,%rdi
 8080f7a:	4c 89 d2             	mov    %r10,%rdx
 8080f7d:	4c 89 d9             	mov    %r11,%rcx
 8080f80:	b8 00 00 00 00       	mov    $0x0,%eax
 8080f85:	e8 56 ce ff ff       	callq  807dde0 <orex>
 8080f8a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8080f8d:	83 e0 07             	and    $0x7,%eax
 8080f90:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 8080f96:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8080f99:	83 e1 07             	and    $0x7,%ecx
 8080f9c:	c1 e1 03             	shl    $0x3,%ecx
 8080f9f:	48 01 c8             	add    %rcx,%rax
 8080fa2:	48 89 c7             	mov    %rax,%rdi
 8080fa5:	b8 00 00 00 00       	mov    $0x0,%eax
 8080faa:	e8 a2 cc ff ff       	callq  807dc51 <o>
 8080faf:	48 8b 05 6a cf 00 00 	mov    0xcf6a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080fb6:	48 8b 00             	mov    (%rax),%rax
 8080fb9:	48 89 c1             	mov    %rax,%rcx
 8080fbc:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8080fc3:	ff ff ff 
 8080fc6:	48 01 d0             	add    %rdx,%rax
 8080fc9:	4c 8b 1d 50 cf 00 00 	mov    0xcf50(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080fd0:	49 89 03             	mov    %rax,(%r11)
 8080fd3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080fd6:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 8080fdc:	0f 8c 4a 00 00 00    	jl     808102c <gen_opi+0x363>
 8080fe2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8080fe5:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 8080feb:	0f 8f 3b 00 00 00    	jg     808102c <gen_opi+0x363>
 8080ff1:	48 8b 05 28 cf 00 00 	mov    0xcf28(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8080ff8:	48 8b 00             	mov    (%rax),%rax
 8080ffb:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081002:	00 00 00 
 8081005:	48 01 c8             	add    %rcx,%rax
 8081008:	b9 33 00 00 00       	mov    $0x33,%ecx
 808100d:	66 89 08             	mov    %cx,(%rax)
 8081010:	48 8b 05 09 cf 00 00 	mov    0xcf09(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081017:	48 8b 00             	mov    (%rax),%rax
 808101a:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8081021:	00 00 00 
 8081024:	48 01 c8             	add    %rcx,%rax
 8081027:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 808102a:	89 08                	mov    %ecx,(%rax)
 808102c:	e9 87 05 00 00       	jmpq   80815b8 <gen_opi+0x8ef>
 8081031:	e9 09 00 00 00       	jmpq   808103f <gen_opi+0x376>
 8081036:	83 f8 2d             	cmp    $0x2d,%eax
 8081039:	0f 85 05 00 00 00    	jne    8081044 <gen_opi+0x37b>
 808103f:	e9 0c 00 00 00       	jmpq   8081050 <gen_opi+0x387>
 8081044:	81 f8 c5 00 00 00    	cmp    $0xc5,%eax
 808104a:	0f 85 12 00 00 00    	jne    8081062 <gen_opi+0x399>
 8081050:	b8 05 00 00 00       	mov    $0x5,%eax
 8081055:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081058:	e9 2b fd ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 808105d:	e9 0c 00 00 00       	jmpq   808106e <gen_opi+0x3a5>
 8081062:	81 f8 c4 00 00 00    	cmp    $0xc4,%eax
 8081068:	0f 85 12 00 00 00    	jne    8081080 <gen_opi+0x3b7>
 808106e:	b8 02 00 00 00       	mov    $0x2,%eax
 8081073:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081076:	e9 0d fd ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 808107b:	e9 0c 00 00 00       	jmpq   808108c <gen_opi+0x3c3>
 8081080:	81 f8 c6 00 00 00    	cmp    $0xc6,%eax
 8081086:	0f 85 12 00 00 00    	jne    808109e <gen_opi+0x3d5>
 808108c:	b8 03 00 00 00       	mov    $0x3,%eax
 8081091:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081094:	e9 ef fc ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 8081099:	e9 09 00 00 00       	jmpq   80810a7 <gen_opi+0x3de>
 808109e:	83 f8 26             	cmp    $0x26,%eax
 80810a1:	0f 85 12 00 00 00    	jne    80810b9 <gen_opi+0x3f0>
 80810a7:	b8 04 00 00 00       	mov    $0x4,%eax
 80810ac:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80810af:	e9 d4 fc ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 80810b4:	e9 09 00 00 00       	jmpq   80810c2 <gen_opi+0x3f9>
 80810b9:	83 f8 5e             	cmp    $0x5e,%eax
 80810bc:	0f 85 12 00 00 00    	jne    80810d4 <gen_opi+0x40b>
 80810c2:	b8 06 00 00 00       	mov    $0x6,%eax
 80810c7:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80810ca:	e9 b9 fc ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 80810cf:	e9 09 00 00 00       	jmpq   80810dd <gen_opi+0x414>
 80810d4:	83 f8 7c             	cmp    $0x7c,%eax
 80810d7:	0f 85 12 00 00 00    	jne    80810ef <gen_opi+0x426>
 80810dd:	b8 01 00 00 00       	mov    $0x1,%eax
 80810e2:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80810e5:	e9 9e fc ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 80810ea:	e9 09 00 00 00       	jmpq   80810f8 <gen_opi+0x42f>
 80810ef:	83 f8 2a             	cmp    $0x2a,%eax
 80810f2:	0f 85 de 00 00 00    	jne    80811d6 <gen_opi+0x50d>
 80810f8:	b8 01 00 00 00       	mov    $0x1,%eax
 80810fd:	48 89 c6             	mov    %rax,%rsi
 8081100:	b8 01 00 00 00       	mov    $0x1,%eax
 8081105:	48 89 c7             	mov    %rax,%rdi
 8081108:	b8 00 00 00 00       	mov    $0x0,%eax
 808110d:	e8 fc cb fd ff       	callq  805dd0e <gv2>
 8081112:	48 8b 05 07 ce 00 00 	mov    0xce07(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081119:	48 8b 00             	mov    (%rax),%rax
 808111c:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8081123:	ff ff ff 
 8081126:	48 01 c8             	add    %rcx,%rax
 8081129:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081130:	00 00 00 
 8081133:	48 01 c8             	add    %rcx,%rax
 8081136:	0f b7 08             	movzwl (%rax),%ecx
 8081139:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 808113c:	48 8b 05 dd cd 00 00 	mov    0xcddd(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081143:	48 8b 00             	mov    (%rax),%rax
 8081146:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 808114d:	00 00 00 
 8081150:	48 01 c8             	add    %rcx,%rax
 8081153:	0f b7 08             	movzwl (%rax),%ecx
 8081156:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8081159:	b8 0f af 00 00       	mov    $0xaf0f,%eax
 808115e:	49 89 c3             	mov    %rax,%r11
 8081161:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081164:	49 89 c2             	mov    %rax,%r10
 8081167:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808116a:	48 89 c6             	mov    %rax,%rsi
 808116d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081170:	48 89 c7             	mov    %rax,%rdi
 8081173:	4c 89 d2             	mov    %r10,%rdx
 8081176:	4c 89 d9             	mov    %r11,%rcx
 8081179:	b8 00 00 00 00       	mov    $0x0,%eax
 808117e:	e8 5d cc ff ff       	callq  807dde0 <orex>
 8081183:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8081186:	83 e0 07             	and    $0x7,%eax
 8081189:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 808118f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8081192:	83 e1 07             	and    $0x7,%ecx
 8081195:	c1 e1 03             	shl    $0x3,%ecx
 8081198:	48 01 c8             	add    %rcx,%rax
 808119b:	48 89 c7             	mov    %rax,%rdi
 808119e:	b8 00 00 00 00       	mov    $0x0,%eax
 80811a3:	e8 a9 ca ff ff       	callq  807dc51 <o>
 80811a8:	48 8b 05 71 cd 00 00 	mov    0xcd71(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80811af:	48 8b 00             	mov    (%rax),%rax
 80811b2:	48 89 c1             	mov    %rax,%rcx
 80811b5:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 80811bc:	ff ff ff 
 80811bf:	48 01 d0             	add    %rdx,%rax
 80811c2:	4c 8b 1d 57 cd 00 00 	mov    0xcd57(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80811c9:	49 89 03             	mov    %rax,(%r11)
 80811cc:	e9 e7 03 00 00       	jmpq   80815b8 <gen_opi+0x8ef>
 80811d1:	e9 09 00 00 00       	jmpq   80811df <gen_opi+0x516>
 80811d6:	83 f8 01             	cmp    $0x1,%eax
 80811d9:	0f 85 12 00 00 00    	jne    80811f1 <gen_opi+0x528>
 80811df:	b8 04 00 00 00       	mov    $0x4,%eax
 80811e4:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80811e7:	e9 34 00 00 00       	jmpq   8081220 <gen_opi+0x557>
 80811ec:	e9 0c 00 00 00       	jmpq   80811fd <gen_opi+0x534>
 80811f1:	81 f8 cd 00 00 00    	cmp    $0xcd,%eax
 80811f7:	0f 85 12 00 00 00    	jne    808120f <gen_opi+0x546>
 80811fd:	b8 05 00 00 00       	mov    $0x5,%eax
 8081202:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081205:	e9 16 00 00 00       	jmpq   8081220 <gen_opi+0x557>
 808120a:	e9 09 00 00 00       	jmpq   8081218 <gen_opi+0x54f>
 808120f:	83 f8 02             	cmp    $0x2,%eax
 8081212:	0f 85 9c 01 00 00    	jne    80813b4 <gen_opi+0x6eb>
 8081218:	b8 07 00 00 00       	mov    $0x7,%eax
 808121d:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081220:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8081223:	c1 e0 03             	shl    $0x3,%eax
 8081226:	81 c8 c0 00 00 00    	or     $0xc0,%eax
 808122c:	89 45 ec             	mov    %eax,-0x14(%rbp)
 808122f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8081232:	85 c0                	test   %eax,%eax
 8081234:	0f 84 c3 00 00 00    	je     80812fd <gen_opi+0x634>
 808123a:	b8 00 00 00 00       	mov    $0x0,%eax
 808123f:	e8 0a bc fd ff       	callq  805ce4e <vswap>
 8081244:	b8 01 00 00 00       	mov    $0x1,%eax
 8081249:	48 89 c7             	mov    %rax,%rdi
 808124c:	b8 00 00 00 00       	mov    $0x0,%eax
 8081251:	e8 d4 c4 fd ff       	callq  805d72a <gv>
 8081256:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081259:	b8 00 00 00 00       	mov    $0x0,%eax
 808125e:	e8 eb bb fd ff       	callq  805ce4e <vswap>
 8081263:	b8 c1 00 00 00       	mov    $0xc1,%eax
 8081268:	49 89 c3             	mov    %rax,%r11
 808126b:	b8 00 00 00 00       	mov    $0x0,%eax
 8081270:	49 89 c2             	mov    %rax,%r10
 8081273:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081276:	48 89 c6             	mov    %rax,%rsi
 8081279:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808127c:	48 89 c7             	mov    %rax,%rdi
 808127f:	4c 89 d2             	mov    %r10,%rdx
 8081282:	4c 89 d9             	mov    %r11,%rcx
 8081285:	b8 00 00 00 00       	mov    $0x0,%eax
 808128a:	e8 51 cb ff ff       	callq  807dde0 <orex>
 808128f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081292:	83 e0 07             	and    $0x7,%eax
 8081295:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8081298:	48 09 c1             	or     %rax,%rcx
 808129b:	48 89 cf             	mov    %rcx,%rdi
 808129e:	b8 00 00 00 00       	mov    $0x0,%eax
 80812a3:	e8 a9 c9 ff ff       	callq  807dc51 <o>
 80812a8:	48 8b 05 71 cc 00 00 	mov    0xcc71(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80812af:	48 8b 00             	mov    (%rax),%rax
 80812b2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80812b9:	00 00 00 
 80812bc:	48 01 c8             	add    %rcx,%rax
 80812bf:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 80812c2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80812c6:	85 c9                	test   %ecx,%ecx
 80812c8:	0f 84 05 00 00 00    	je     80812d3 <gen_opi+0x60a>
 80812ce:	e9 0a 00 00 00       	jmpq   80812dd <gen_opi+0x614>
 80812d3:	b8 1f 00 00 00       	mov    $0x1f,%eax
 80812d8:	e9 05 00 00 00       	jmpq   80812e2 <gen_opi+0x619>
 80812dd:	b8 3f 00 00 00       	mov    $0x3f,%eax
 80812e2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 80812e6:	8b 09                	mov    (%rcx),%ecx
 80812e8:	48 21 c1             	and    %rax,%rcx
 80812eb:	48 89 cf             	mov    %rcx,%rdi
 80812ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80812f3:	e8 ab c8 ff ff       	callq  807dba3 <g>
 80812f8:	e9 89 00 00 00       	jmpq   8081386 <gen_opi+0x6bd>
 80812fd:	b8 08 00 00 00       	mov    $0x8,%eax
 8081302:	48 89 c6             	mov    %rax,%rsi
 8081305:	b8 01 00 00 00       	mov    $0x1,%eax
 808130a:	48 89 c7             	mov    %rax,%rdi
 808130d:	b8 00 00 00 00       	mov    $0x0,%eax
 8081312:	e8 f7 c9 fd ff       	callq  805dd0e <gv2>
 8081317:	48 8b 05 02 cc 00 00 	mov    0xcc02(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808131e:	48 8b 00             	mov    (%rax),%rax
 8081321:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8081328:	ff ff ff 
 808132b:	48 01 c8             	add    %rcx,%rax
 808132e:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081335:	00 00 00 
 8081338:	48 01 c8             	add    %rcx,%rax
 808133b:	0f b7 08             	movzwl (%rax),%ecx
 808133e:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8081341:	b8 d3 00 00 00       	mov    $0xd3,%eax
 8081346:	49 89 c3             	mov    %rax,%r11
 8081349:	b8 00 00 00 00       	mov    $0x0,%eax
 808134e:	49 89 c2             	mov    %rax,%r10
 8081351:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081354:	48 89 c6             	mov    %rax,%rsi
 8081357:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808135a:	48 89 c7             	mov    %rax,%rdi
 808135d:	4c 89 d2             	mov    %r10,%rdx
 8081360:	4c 89 d9             	mov    %r11,%rcx
 8081363:	b8 00 00 00 00       	mov    $0x0,%eax
 8081368:	e8 73 ca ff ff       	callq  807dde0 <orex>
 808136d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081370:	83 e0 07             	and    $0x7,%eax
 8081373:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8081376:	48 09 c1             	or     %rax,%rcx
 8081379:	48 89 cf             	mov    %rcx,%rdi
 808137c:	b8 00 00 00 00       	mov    $0x0,%eax
 8081381:	e8 cb c8 ff ff       	callq  807dc51 <o>
 8081386:	48 8b 05 93 cb 00 00 	mov    0xcb93(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808138d:	48 8b 00             	mov    (%rax),%rax
 8081390:	48 89 c1             	mov    %rax,%rcx
 8081393:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 808139a:	ff ff ff 
 808139d:	48 01 d0             	add    %rdx,%rax
 80813a0:	4c 8b 1d 79 cb 00 00 	mov    0xcb79(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80813a7:	49 89 03             	mov    %rax,(%r11)
 80813aa:	e9 09 02 00 00       	jmpq   80815b8 <gen_opi+0x8ef>
 80813af:	e9 0c 00 00 00       	jmpq   80813c0 <gen_opi+0x6f7>
 80813b4:	81 f8 b0 00 00 00    	cmp    $0xb0,%eax
 80813ba:	0f 85 05 00 00 00    	jne    80813c5 <gen_opi+0x6fc>
 80813c0:	e9 0c 00 00 00       	jmpq   80813d1 <gen_opi+0x708>
 80813c5:	81 f8 b1 00 00 00    	cmp    $0xb1,%eax
 80813cb:	0f 85 12 00 00 00    	jne    80813e3 <gen_opi+0x71a>
 80813d1:	b8 01 00 00 00       	mov    $0x1,%eax
 80813d6:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80813d9:	e9 35 00 00 00       	jmpq   8081413 <gen_opi+0x74a>
 80813de:	e9 09 00 00 00       	jmpq   80813ec <gen_opi+0x723>
 80813e3:	83 f8 2f             	cmp    $0x2f,%eax
 80813e6:	0f 85 05 00 00 00    	jne    80813f1 <gen_opi+0x728>
 80813ec:	e9 09 00 00 00       	jmpq   80813fa <gen_opi+0x731>
 80813f1:	83 f8 25             	cmp    $0x25,%eax
 80813f4:	0f 85 05 00 00 00    	jne    80813ff <gen_opi+0x736>
 80813fa:	e9 0c 00 00 00       	jmpq   808140b <gen_opi+0x742>
 80813ff:	81 f8 b2 00 00 00    	cmp    $0xb2,%eax
 8081405:	0f 85 a0 01 00 00    	jne    80815ab <gen_opi+0x8e2>
 808140b:	b8 00 00 00 00       	mov    $0x0,%eax
 8081410:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8081413:	b8 08 00 00 00       	mov    $0x8,%eax
 8081418:	48 89 c6             	mov    %rax,%rsi
 808141b:	b8 04 00 00 00       	mov    $0x4,%eax
 8081420:	48 89 c7             	mov    %rax,%rdi
 8081423:	b8 00 00 00 00       	mov    $0x0,%eax
 8081428:	e8 e1 c8 fd ff       	callq  805dd0e <gv2>
 808142d:	48 8b 05 ec ca 00 00 	mov    0xcaec(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081434:	48 8b 00             	mov    (%rax),%rax
 8081437:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 808143e:	ff ff ff 
 8081441:	48 01 c8             	add    %rcx,%rax
 8081444:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 808144b:	00 00 00 
 808144e:	48 01 c8             	add    %rcx,%rax
 8081451:	0f b7 08             	movzwl (%rax),%ecx
 8081454:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8081457:	48 8b 05 c2 ca 00 00 	mov    0xcac2(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808145e:	48 8b 00             	mov    (%rax),%rax
 8081461:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081468:	00 00 00 
 808146b:	48 01 c8             	add    %rcx,%rax
 808146e:	0f b7 08             	movzwl (%rax),%ecx
 8081471:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8081474:	48 8b 05 a5 ca 00 00 	mov    0xcaa5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808147b:	48 8b 00             	mov    (%rax),%rax
 808147e:	48 89 c1             	mov    %rax,%rcx
 8081481:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8081488:	ff ff ff 
 808148b:	48 01 d0             	add    %rdx,%rax
 808148e:	4c 8b 1d 8b ca 00 00 	mov    0xca8b(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081495:	49 89 03             	mov    %rax,(%r11)
 8081498:	b8 02 00 00 00       	mov    $0x2,%eax
 808149d:	48 89 c7             	mov    %rax,%rdi
 80814a0:	b8 00 00 00 00       	mov    $0x0,%eax
 80814a5:	e8 9a bb fd ff       	callq  805d044 <save_reg>
 80814aa:	8b 45 e0             	mov    -0x20(%rbp),%eax
 80814ad:	85 c0                	test   %eax,%eax
 80814af:	0f 84 05 00 00 00    	je     80814ba <gen_opi+0x7f1>
 80814b5:	e9 0a 00 00 00       	jmpq   80814c4 <gen_opi+0x7fb>
 80814ba:	b8 99 00 00 00       	mov    $0x99,%eax
 80814bf:	e9 05 00 00 00       	jmpq   80814c9 <gen_opi+0x800>
 80814c4:	b8 31 d2 00 00       	mov    $0xd231,%eax
 80814c9:	49 89 c3             	mov    %rax,%r11
 80814cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80814d1:	49 89 c2             	mov    %rax,%r10
 80814d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80814d9:	48 89 c6             	mov    %rax,%rsi
 80814dc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80814df:	48 89 c7             	mov    %rax,%rdi
 80814e2:	4c 89 d2             	mov    %r10,%rdx
 80814e5:	4c 89 d9             	mov    %r11,%rcx
 80814e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80814ed:	e8 ee c8 ff ff       	callq  807dde0 <orex>
 80814f2:	b8 f7 00 00 00       	mov    $0xf7,%eax
 80814f7:	49 89 c3             	mov    %rax,%r11
 80814fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80814ff:	49 89 c2             	mov    %rax,%r10
 8081502:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8081505:	48 89 c6             	mov    %rax,%rsi
 8081508:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808150b:	48 89 c7             	mov    %rax,%rdi
 808150e:	4c 89 d2             	mov    %r10,%rdx
 8081511:	4c 89 d9             	mov    %r11,%rcx
 8081514:	b8 00 00 00 00       	mov    $0x0,%eax
 8081519:	e8 c2 c8 ff ff       	callq  807dde0 <orex>
 808151e:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8081521:	85 c0                	test   %eax,%eax
 8081523:	0f 84 05 00 00 00    	je     808152e <gen_opi+0x865>
 8081529:	e9 0a 00 00 00       	jmpq   8081538 <gen_opi+0x86f>
 808152e:	b8 f8 00 00 00       	mov    $0xf8,%eax
 8081533:	e9 05 00 00 00       	jmpq   808153d <gen_opi+0x874>
 8081538:	b8 f0 00 00 00       	mov    $0xf0,%eax
 808153d:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8081540:	83 e1 07             	and    $0x7,%ecx
 8081543:	48 01 c8             	add    %rcx,%rax
 8081546:	48 89 c7             	mov    %rax,%rdi
 8081549:	b8 00 00 00 00       	mov    $0x0,%eax
 808154e:	e8 fe c6 ff ff       	callq  807dc51 <o>
 8081553:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081556:	83 f8 25             	cmp    $0x25,%eax
 8081559:	0f 84 14 00 00 00    	je     8081573 <gen_opi+0x8aa>
 808155f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081562:	81 f8 b1 00 00 00    	cmp    $0xb1,%eax
 8081568:	0f 84 05 00 00 00    	je     8081573 <gen_opi+0x8aa>
 808156e:	e9 0d 00 00 00       	jmpq   8081580 <gen_opi+0x8b7>
 8081573:	b8 02 00 00 00       	mov    $0x2,%eax
 8081578:	89 45 f4             	mov    %eax,-0xc(%rbp)
 808157b:	e9 08 00 00 00       	jmpq   8081588 <gen_opi+0x8bf>
 8081580:	b8 00 00 00 00       	mov    $0x0,%eax
 8081585:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081588:	48 8b 05 91 c9 00 00 	mov    0xc991(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808158f:	48 8b 00             	mov    (%rax),%rax
 8081592:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081599:	00 00 00 
 808159c:	48 01 c8             	add    %rcx,%rax
 808159f:	0f b7 4d f4          	movzwl -0xc(%rbp),%ecx
 80815a3:	66 89 08             	mov    %cx,(%rax)
 80815a6:	e9 0d 00 00 00       	jmpq   80815b8 <gen_opi+0x8ef>
 80815ab:	b8 07 00 00 00       	mov    $0x7,%eax
 80815b0:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80815b3:	e9 d0 f7 ff ff       	jmpq   8080d88 <gen_opi+0xbf>
 80815b8:	c9                   	leaveq 
 80815b9:	c3                   	retq   

00000000080815ba <gen_opl>:
 80815ba:	55                   	push   %rbp
 80815bb:	48 89 e5             	mov    %rsp,%rbp
 80815be:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80815c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80815c9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80815cc:	48 89 c7             	mov    %rax,%rdi
 80815cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80815d4:	e8 f0 f6 ff ff       	callq  8080cc9 <gen_opi>
 80815d9:	c9                   	leaveq 
 80815da:	c3                   	retq   

00000000080815db <gen_opf>:
 80815db:	55                   	push   %rbp
 80815dc:	48 89 e5             	mov    %rsp,%rbp
 80815df:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
 80815e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80815ea:	48 8b 05 2f c9 00 00 	mov    0xc92f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80815f1:	48 8b 00             	mov    (%rax),%rax
 80815f4:	8b 08                	mov    (%rax),%ecx
 80815f6:	83 e1 0f             	and    $0xf,%ecx
 80815f9:	83 f9 0a             	cmp    $0xa,%ecx
 80815fc:	0f 85 05 00 00 00    	jne    8081607 <gen_opf+0x2c>
 8081602:	e9 0a 00 00 00       	jmpq   8081611 <gen_opf+0x36>
 8081607:	b8 02 00 00 00       	mov    $0x2,%eax
 808160c:	e9 05 00 00 00       	jmpq   8081616 <gen_opf+0x3b>
 8081611:	b8 40 00 00 00       	mov    $0x40,%eax
 8081616:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8081619:	48 8b 05 00 c9 00 00 	mov    0xc900(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081620:	48 8b 00             	mov    (%rax),%rax
 8081623:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 808162a:	ff ff ff 
 808162d:	48 01 c8             	add    %rcx,%rax
 8081630:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081637:	00 00 00 
 808163a:	48 01 c8             	add    %rcx,%rax
 808163d:	0f b7 08             	movzwl (%rax),%ecx
 8081640:	81 e1 3f 01 00 00    	and    $0x13f,%ecx
 8081646:	83 f9 30             	cmp    $0x30,%ecx
 8081649:	0f 85 24 00 00 00    	jne    8081673 <gen_opf+0x98>
 808164f:	b8 00 00 00 00       	mov    $0x0,%eax
 8081654:	e8 f5 b7 fd ff       	callq  805ce4e <vswap>
 8081659:	8b 45 e0             	mov    -0x20(%rbp),%eax
 808165c:	48 89 c7             	mov    %rax,%rdi
 808165f:	b8 00 00 00 00       	mov    $0x0,%eax
 8081664:	e8 c1 c0 fd ff       	callq  805d72a <gv>
 8081669:	b8 00 00 00 00       	mov    $0x0,%eax
 808166e:	e8 db b7 fd ff       	callq  805ce4e <vswap>
 8081673:	48 8b 05 a6 c8 00 00 	mov    0xc8a6(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808167a:	48 8b 00             	mov    (%rax),%rax
 808167d:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081684:	00 00 00 
 8081687:	48 01 c8             	add    %rcx,%rax
 808168a:	0f b7 08             	movzwl (%rax),%ecx
 808168d:	81 e1 3f 01 00 00    	and    $0x13f,%ecx
 8081693:	83 f9 30             	cmp    $0x30,%ecx
 8081696:	0f 85 10 00 00 00    	jne    80816ac <gen_opf+0xd1>
 808169c:	8b 45 e0             	mov    -0x20(%rbp),%eax
 808169f:	48 89 c7             	mov    %rax,%rdi
 80816a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80816a7:	e8 7e c0 fd ff       	callq  805d72a <gv>
 80816ac:	48 8b 05 6d c8 00 00 	mov    0xc86d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80816b3:	48 8b 00             	mov    (%rax),%rax
 80816b6:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 80816bd:	ff ff ff 
 80816c0:	48 01 c8             	add    %rcx,%rax
 80816c3:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80816ca:	00 00 00 
 80816cd:	48 01 c8             	add    %rcx,%rax
 80816d0:	0f b7 08             	movzwl (%rax),%ecx
 80816d3:	81 e1 00 01 00 00    	and    $0x100,%ecx
 80816d9:	85 c9                	test   %ecx,%ecx
 80816db:	0f 84 4c 00 00 00    	je     808172d <gen_opf+0x152>
 80816e1:	48 8b 05 38 c8 00 00 	mov    0xc838(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80816e8:	48 8b 00             	mov    (%rax),%rax
 80816eb:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80816f2:	00 00 00 
 80816f5:	48 01 c8             	add    %rcx,%rax
 80816f8:	0f b7 08             	movzwl (%rax),%ecx
 80816fb:	81 e1 00 01 00 00    	and    $0x100,%ecx
 8081701:	85 c9                	test   %ecx,%ecx
 8081703:	0f 84 24 00 00 00    	je     808172d <gen_opf+0x152>
 8081709:	b8 00 00 00 00       	mov    $0x0,%eax
 808170e:	e8 3b b7 fd ff       	callq  805ce4e <vswap>
 8081713:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8081716:	48 89 c7             	mov    %rax,%rdi
 8081719:	b8 00 00 00 00       	mov    $0x0,%eax
 808171e:	e8 07 c0 fd ff       	callq  805d72a <gv>
 8081723:	b8 00 00 00 00       	mov    $0x0,%eax
 8081728:	e8 21 b7 fd ff       	callq  805ce4e <vswap>
 808172d:	b8 00 00 00 00       	mov    $0x0,%eax
 8081732:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081735:	48 8b 05 e4 c7 00 00 	mov    0xc7e4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808173c:	48 8b 00             	mov    (%rax),%rax
 808173f:	48 b9 d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rcx
 8081746:	ff ff ff 
 8081749:	48 01 c8             	add    %rcx,%rax
 808174c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081753:	00 00 00 
 8081756:	48 01 c8             	add    %rcx,%rax
 8081759:	0f b7 08             	movzwl (%rax),%ecx
 808175c:	81 e1 00 01 00 00    	and    $0x100,%ecx
 8081762:	85 c9                	test   %ecx,%ecx
 8081764:	0f 84 12 00 00 00    	je     808177c <gen_opf+0x1a1>
 808176a:	b8 00 00 00 00       	mov    $0x0,%eax
 808176f:	e8 da b6 fd ff       	callq  805ce4e <vswap>
 8081774:	b8 01 00 00 00       	mov    $0x1,%eax
 8081779:	89 45 e8             	mov    %eax,-0x18(%rbp)
 808177c:	48 8b 05 9d c7 00 00 	mov    0xc79d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081783:	48 8b 00             	mov    (%rax),%rax
 8081786:	8b 08                	mov    (%rax),%ecx
 8081788:	83 e1 0f             	and    $0xf,%ecx
 808178b:	83 f9 0a             	cmp    $0xa,%ecx
 808178e:	0f 85 8f 03 00 00    	jne    8081b23 <gen_opf+0x548>
 8081794:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081797:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 808179d:	0f 8c 26 02 00 00    	jl     80819c9 <gen_opf+0x3ee>
 80817a3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80817a6:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 80817ac:	0f 8f 17 02 00 00    	jg     80819c9 <gen_opf+0x3ee>
 80817b2:	48 8b 05 67 c7 00 00 	mov    0xc767(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80817b9:	48 8b 00             	mov    (%rax),%rax
 80817bc:	48 89 c6             	mov    %rax,%rsi
 80817bf:	b8 04 00 00 00       	mov    $0x4,%eax
 80817c4:	48 89 c7             	mov    %rax,%rdi
 80817c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80817cc:	e8 10 ce ff ff       	callq  807e5e1 <load>
 80817d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80817d6:	48 89 c7             	mov    %rax,%rdi
 80817d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80817de:	e8 61 b8 fd ff       	callq  805d044 <save_reg>
 80817e3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80817e6:	81 f8 9d 00 00 00    	cmp    $0x9d,%eax
 80817ec:	0f 84 14 00 00 00    	je     8081806 <gen_opf+0x22b>
 80817f2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80817f5:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 80817fb:	0f 84 05 00 00 00    	je     8081806 <gen_opf+0x22b>
 8081801:	e9 1f 00 00 00       	jmpq   8081825 <gen_opf+0x24a>
 8081806:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081809:	85 c0                	test   %eax,%eax
 808180b:	0f 84 07 00 00 00    	je     8081818 <gen_opf+0x23d>
 8081811:	b8 00 00 00 00       	mov    $0x0,%eax
 8081816:	eb 05                	jmp    808181d <gen_opf+0x242>
 8081818:	b8 01 00 00 00       	mov    $0x1,%eax
 808181d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081820:	e9 2b 00 00 00       	jmpq   8081850 <gen_opf+0x275>
 8081825:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081828:	81 f8 94 00 00 00    	cmp    $0x94,%eax
 808182e:	0f 84 14 00 00 00    	je     8081848 <gen_opf+0x26d>
 8081834:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081837:	81 f8 95 00 00 00    	cmp    $0x95,%eax
 808183d:	0f 84 05 00 00 00    	je     8081848 <gen_opf+0x26d>
 8081843:	e9 08 00 00 00       	jmpq   8081850 <gen_opf+0x275>
 8081848:	b8 00 00 00 00       	mov    $0x0,%eax
 808184d:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081850:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081853:	85 c0                	test   %eax,%eax
 8081855:	0f 84 12 00 00 00    	je     808186d <gen_opf+0x292>
 808185b:	b8 d9 c9 00 00       	mov    $0xc9d9,%eax
 8081860:	48 89 c7             	mov    %rax,%rdi
 8081863:	b8 00 00 00 00       	mov    $0x0,%eax
 8081868:	e8 e4 c3 ff ff       	callq  807dc51 <o>
 808186d:	b8 da e9 00 00       	mov    $0xe9da,%eax
 8081872:	48 89 c7             	mov    %rax,%rdi
 8081875:	b8 00 00 00 00       	mov    $0x0,%eax
 808187a:	e8 d2 c3 ff ff       	callq  807dc51 <o>
 808187f:	b8 df e0 00 00       	mov    $0xe0df,%eax
 8081884:	48 89 c7             	mov    %rax,%rdi
 8081887:	b8 00 00 00 00       	mov    $0x0,%eax
 808188c:	e8 c0 c3 ff ff       	callq  807dc51 <o>
 8081891:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081894:	81 f8 94 00 00 00    	cmp    $0x94,%eax
 808189a:	0f 85 29 00 00 00    	jne    80818c9 <gen_opf+0x2ee>
 80818a0:	b8 80 e4 45 00       	mov    $0x45e480,%eax
 80818a5:	48 89 c7             	mov    %rax,%rdi
 80818a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80818ad:	e8 9f c3 ff ff       	callq  807dc51 <o>
 80818b2:	b8 80 fc 40 00       	mov    $0x40fc80,%eax
 80818b7:	48 89 c7             	mov    %rax,%rdi
 80818ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80818bf:	e8 8d c3 ff ff       	callq  807dc51 <o>
 80818c4:	e9 9c 00 00 00       	jmpq   8081965 <gen_opf+0x38a>
 80818c9:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80818cc:	81 f8 95 00 00 00    	cmp    $0x95,%eax
 80818d2:	0f 85 31 00 00 00    	jne    8081909 <gen_opf+0x32e>
 80818d8:	b8 80 e4 45 00       	mov    $0x45e480,%eax
 80818dd:	48 89 c7             	mov    %rax,%rdi
 80818e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80818e5:	e8 67 c3 ff ff       	callq  807dc51 <o>
 80818ea:	b8 80 f4 40 00       	mov    $0x40f480,%eax
 80818ef:	48 89 c7             	mov    %rax,%rdi
 80818f2:	b8 00 00 00 00       	mov    $0x0,%eax
 80818f7:	e8 55 c3 ff ff       	callq  807dc51 <o>
 80818fc:	b8 95 00 00 00       	mov    $0x95,%eax
 8081901:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8081904:	e9 5c 00 00 00       	jmpq   8081965 <gen_opf+0x38a>
 8081909:	8b 45 f8             	mov    -0x8(%rbp),%eax
 808190c:	81 f8 9d 00 00 00    	cmp    $0x9d,%eax
 8081912:	0f 84 14 00 00 00    	je     808192c <gen_opf+0x351>
 8081918:	8b 45 f8             	mov    -0x8(%rbp),%eax
 808191b:	81 f8 9e 00 00 00    	cmp    $0x9e,%eax
 8081921:	0f 84 05 00 00 00    	je     808192c <gen_opf+0x351>
 8081927:	e9 1f 00 00 00       	jmpq   808194b <gen_opf+0x370>
 808192c:	b8 f6 c4 05 00       	mov    $0x5c4f6,%eax
 8081931:	48 89 c7             	mov    %rax,%rdi
 8081934:	b8 00 00 00 00       	mov    $0x0,%eax
 8081939:	e8 13 c3 ff ff       	callq  807dc51 <o>
 808193e:	b8 94 00 00 00       	mov    $0x94,%eax
 8081943:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8081946:	e9 1a 00 00 00       	jmpq   8081965 <gen_opf+0x38a>
 808194b:	b8 f6 c4 45 00       	mov    $0x45c4f6,%eax
 8081950:	48 89 c7             	mov    %rax,%rdi
 8081953:	b8 00 00 00 00       	mov    $0x0,%eax
 8081958:	e8 f4 c2 ff ff       	callq  807dc51 <o>
 808195d:	b8 94 00 00 00       	mov    $0x94,%eax
 8081962:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8081965:	48 8b 05 b4 c5 00 00 	mov    0xc5b4(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808196c:	48 8b 00             	mov    (%rax),%rax
 808196f:	48 89 c1             	mov    %rax,%rcx
 8081972:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8081979:	ff ff ff 
 808197c:	48 01 d0             	add    %rdx,%rax
 808197f:	4c 8b 1d 9a c5 00 00 	mov    0xc59a(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081986:	49 89 03             	mov    %rax,(%r11)
 8081989:	48 8b 05 90 c5 00 00 	mov    0xc590(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081990:	48 8b 00             	mov    (%rax),%rax
 8081993:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 808199a:	00 00 00 
 808199d:	48 01 c8             	add    %rcx,%rax
 80819a0:	b9 33 00 00 00       	mov    $0x33,%ecx
 80819a5:	66 89 08             	mov    %cx,(%rax)
 80819a8:	48 8b 05 71 c5 00 00 	mov    0xc571(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80819af:	48 8b 00             	mov    (%rax),%rax
 80819b2:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 80819b9:	00 00 00 
 80819bc:	48 01 c8             	add    %rcx,%rax
 80819bf:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 80819c2:	89 08                	mov    %ecx,(%rax)
 80819c4:	e9 55 01 00 00       	jmpq   8081b1e <gen_opf+0x543>
 80819c9:	48 8b 05 50 c5 00 00 	mov    0xc550(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80819d0:	48 8b 00             	mov    (%rax),%rax
 80819d3:	48 89 c6             	mov    %rax,%rsi
 80819d6:	b8 04 00 00 00       	mov    $0x4,%eax
 80819db:	48 89 c7             	mov    %rax,%rdi
 80819de:	b8 00 00 00 00       	mov    $0x0,%eax
 80819e3:	e8 f9 cb ff ff       	callq  807e5e1 <load>
 80819e8:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80819eb:	85 c0                	test   %eax,%eax
 80819ed:	0f 84 07 00 00 00    	je     80819fa <gen_opf+0x41f>
 80819f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80819f8:	eb 05                	jmp    80819ff <gen_opf+0x424>
 80819fa:	b8 01 00 00 00       	mov    $0x1,%eax
 80819ff:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081a02:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081a05:	e9 05 00 00 00       	jmpq   8081a0f <gen_opf+0x434>
 8081a0a:	e9 09 00 00 00       	jmpq   8081a18 <gen_opf+0x43d>
 8081a0f:	83 f8 2b             	cmp    $0x2b,%eax
 8081a12:	0f 85 12 00 00 00    	jne    8081a2a <gen_opf+0x44f>
 8081a18:	b8 00 00 00 00       	mov    $0x0,%eax
 8081a1d:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081a20:	e9 7f 00 00 00       	jmpq   8081aa4 <gen_opf+0x4c9>
 8081a25:	e9 09 00 00 00       	jmpq   8081a33 <gen_opf+0x458>
 8081a2a:	83 f8 2d             	cmp    $0x2d,%eax
 8081a2d:	0f 85 29 00 00 00    	jne    8081a5c <gen_opf+0x481>
 8081a33:	b8 04 00 00 00       	mov    $0x4,%eax
 8081a38:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081a3b:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081a3e:	85 c0                	test   %eax,%eax
 8081a40:	0f 84 0c 00 00 00    	je     8081a52 <gen_opf+0x477>
 8081a46:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081a49:	48 89 c1             	mov    %rax,%rcx
 8081a4c:	83 c0 01             	add    $0x1,%eax
 8081a4f:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081a52:	e9 4d 00 00 00       	jmpq   8081aa4 <gen_opf+0x4c9>
 8081a57:	e9 09 00 00 00       	jmpq   8081a65 <gen_opf+0x48a>
 8081a5c:	83 f8 2a             	cmp    $0x2a,%eax
 8081a5f:	0f 85 12 00 00 00    	jne    8081a77 <gen_opf+0x49c>
 8081a65:	b8 01 00 00 00       	mov    $0x1,%eax
 8081a6a:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081a6d:	e9 32 00 00 00       	jmpq   8081aa4 <gen_opf+0x4c9>
 8081a72:	e9 09 00 00 00       	jmpq   8081a80 <gen_opf+0x4a5>
 8081a77:	83 f8 2f             	cmp    $0x2f,%eax
 8081a7a:	0f 85 8a ff ff ff    	jne    8081a0a <gen_opf+0x42f>
 8081a80:	b8 06 00 00 00       	mov    $0x6,%eax
 8081a85:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081a88:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081a8b:	85 c0                	test   %eax,%eax
 8081a8d:	0f 84 0c 00 00 00    	je     8081a9f <gen_opf+0x4c4>
 8081a93:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081a96:	48 89 c1             	mov    %rax,%rcx
 8081a99:	83 c0 01             	add    $0x1,%eax
 8081a9c:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081a9f:	e9 00 00 00 00       	jmpq   8081aa4 <gen_opf+0x4c9>
 8081aa4:	48 8b 05 75 c4 00 00 	mov    0xc475(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081aab:	48 8b 00             	mov    (%rax),%rax
 8081aae:	8b 08                	mov    (%rax),%ecx
 8081ab0:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8081ab3:	48 8b 05 66 c4 00 00 	mov    0xc466(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081aba:	48 8b 00             	mov    (%rax),%rax
 8081abd:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8081ac4:	00 00 00 
 8081ac7:	48 01 c8             	add    %rcx,%rax
 8081aca:	8b 08                	mov    (%rax),%ecx
 8081acc:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8081acf:	b8 de 00 00 00       	mov    $0xde,%eax
 8081ad4:	48 89 c7             	mov    %rax,%rdi
 8081ad7:	b8 00 00 00 00       	mov    $0x0,%eax
 8081adc:	e8 70 c1 ff ff       	callq  807dc51 <o>
 8081ae1:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081ae4:	c1 e0 03             	shl    $0x3,%eax
 8081ae7:	81 c0 c1 00 00 00    	add    $0xc1,%eax
 8081aed:	48 89 c7             	mov    %rax,%rdi
 8081af0:	b8 00 00 00 00       	mov    $0x0,%eax
 8081af5:	e8 57 c1 ff ff       	callq  807dc51 <o>
 8081afa:	48 8b 05 1f c4 00 00 	mov    0xc41f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081b01:	48 8b 00             	mov    (%rax),%rax
 8081b04:	48 89 c1             	mov    %rax,%rcx
 8081b07:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8081b0e:	ff ff ff 
 8081b11:	48 01 d0             	add    %rdx,%rax
 8081b14:	4c 8b 1d 05 c4 00 00 	mov    0xc405(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081b1b:	49 89 03             	mov    %rax,(%r11)
 8081b1e:	e9 18 06 00 00       	jmpq   808213b <gen_opf+0xb60>
 8081b23:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081b26:	81 f8 92 00 00 00    	cmp    $0x92,%eax
 8081b2c:	0f 8c df 02 00 00    	jl     8081e11 <gen_opf+0x836>
 8081b32:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081b35:	81 f8 9f 00 00 00    	cmp    $0x9f,%eax
 8081b3b:	0f 8f d0 02 00 00    	jg     8081e11 <gen_opf+0x836>
 8081b41:	48 8b 05 d8 c3 00 00 	mov    0xc3d8(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081b48:	48 8b 00             	mov    (%rax),%rax
 8081b4b:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081b52:	00 00 00 
 8081b55:	48 01 c8             	add    %rcx,%rax
 8081b58:	0f b7 08             	movzwl (%rax),%ecx
 8081b5b:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8081b5e:	48 8b 05 bb c3 00 00 	mov    0xc3bb(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081b65:	48 8b 00             	mov    (%rax),%rax
 8081b68:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8081b6f:	00 00 00 
 8081b72:	48 01 c8             	add    %rcx,%rax
 8081b75:	8b 08                	mov    (%rax),%ecx
 8081b77:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8081b7a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081b7d:	83 e0 3f             	and    $0x3f,%eax
 8081b80:	83 f8 31             	cmp    $0x31,%eax
 8081b83:	0f 85 4b 00 00 00    	jne    8081bd4 <gen_opf+0x5f9>
 8081b89:	b8 01 00 00 00       	mov    $0x1,%eax
 8081b8e:	48 89 c7             	mov    %rax,%rdi
 8081b91:	b8 00 00 00 00       	mov    $0x0,%eax
 8081b96:	e8 7a b7 fd ff       	callq  805d315 <get_reg>
 8081b9b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8081b9e:	b8 04 00 00 00       	mov    $0x4,%eax
 8081ba3:	89 45 b0             	mov    %eax,-0x50(%rbp)
 8081ba6:	b8 32 01 00 00       	mov    $0x132,%eax
 8081bab:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
 8081baf:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8081bb2:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8081bb5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 8081bb9:	48 89 c6             	mov    %rax,%rsi
 8081bbc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081bbf:	48 89 c7             	mov    %rax,%rdi
 8081bc2:	b8 00 00 00 00       	mov    $0x0,%eax
 8081bc7:	e8 15 ca ff ff       	callq  807e5e1 <load>
 8081bcc:	b8 00 00 00 00       	mov    $0x0,%eax
 8081bd1:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081bd4:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081bd7:	81 f8 94 00 00 00    	cmp    $0x94,%eax
 8081bdd:	0f 84 14 00 00 00    	je     8081bf7 <gen_opf+0x61c>
 8081be3:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081be6:	81 f8 95 00 00 00    	cmp    $0x95,%eax
 8081bec:	0f 84 05 00 00 00    	je     8081bf7 <gen_opf+0x61c>
 8081bf2:	e9 0d 00 00 00       	jmpq   8081c04 <gen_opf+0x629>
 8081bf7:	b8 00 00 00 00       	mov    $0x0,%eax
 8081bfc:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081bff:	e9 75 00 00 00       	jmpq   8081c79 <gen_opf+0x69e>
 8081c04:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081c07:	81 f8 9e 00 00 00    	cmp    $0x9e,%eax
 8081c0d:	0f 84 14 00 00 00    	je     8081c27 <gen_opf+0x64c>
 8081c13:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081c16:	81 f8 9c 00 00 00    	cmp    $0x9c,%eax
 8081c1c:	0f 84 05 00 00 00    	je     8081c27 <gen_opf+0x64c>
 8081c22:	e9 1a 00 00 00       	jmpq   8081c41 <gen_opf+0x666>
 8081c27:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081c2a:	85 c0                	test   %eax,%eax
 8081c2c:	0f 84 07 00 00 00    	je     8081c39 <gen_opf+0x65e>
 8081c32:	b8 00 00 00 00       	mov    $0x0,%eax
 8081c37:	eb 05                	jmp    8081c3e <gen_opf+0x663>
 8081c39:	b8 01 00 00 00       	mov    $0x1,%eax
 8081c3e:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081c41:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081c44:	81 f8 9e 00 00 00    	cmp    $0x9e,%eax
 8081c4a:	0f 84 14 00 00 00    	je     8081c64 <gen_opf+0x689>
 8081c50:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081c53:	81 f8 9d 00 00 00    	cmp    $0x9d,%eax
 8081c59:	0f 84 05 00 00 00    	je     8081c64 <gen_opf+0x689>
 8081c5f:	e9 0d 00 00 00       	jmpq   8081c71 <gen_opf+0x696>
 8081c64:	b8 93 00 00 00       	mov    $0x93,%eax
 8081c69:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8081c6c:	e9 08 00 00 00       	jmpq   8081c79 <gen_opf+0x69e>
 8081c71:	b8 97 00 00 00       	mov    $0x97,%eax
 8081c76:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8081c79:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081c7c:	85 c0                	test   %eax,%eax
 8081c7e:	0f 84 a6 00 00 00    	je     8081d2a <gen_opf+0x74f>
 8081c84:	b8 f3 0f 7e 00       	mov    $0x7e0ff3,%eax
 8081c89:	48 89 c7             	mov    %rax,%rdi
 8081c8c:	b8 00 00 00 00       	mov    $0x0,%eax
 8081c91:	e8 bb bf ff ff       	callq  807dc51 <o>
 8081c96:	48 8b 05 83 c2 00 00 	mov    0xc283(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081c9d:	48 8b 00             	mov    (%rax),%rax
 8081ca0:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8081ca7:	00 00 00 
 8081caa:	48 01 c8             	add    %rcx,%rax
 8081cad:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8081cb0:	49 89 cb             	mov    %rcx,%r11
 8081cb3:	48 8b 08             	mov    (%rax),%rcx
 8081cb6:	49 89 ca             	mov    %rcx,%r10
 8081cb9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081cbc:	48 89 c6             	mov    %rax,%rsi
 8081cbf:	b8 01 00 00 00       	mov    $0x1,%eax
 8081cc4:	48 89 c7             	mov    %rax,%rdi
 8081cc7:	4c 89 d2             	mov    %r10,%rdx
 8081cca:	4c 89 d9             	mov    %r11,%rcx
 8081ccd:	b8 00 00 00 00       	mov    $0x0,%eax
 8081cd2:	e8 ff c7 ff ff       	callq  807e4d6 <gen_modrm>
 8081cd7:	48 8b 05 42 c2 00 00 	mov    0xc242(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081cde:	48 8b 00             	mov    (%rax),%rax
 8081ce1:	8b 08                	mov    (%rax),%ecx
 8081ce3:	83 e1 0f             	and    $0xf,%ecx
 8081ce6:	83 f9 09             	cmp    $0x9,%ecx
 8081ce9:	0f 85 12 00 00 00    	jne    8081d01 <gen_opf+0x726>
 8081cef:	b8 66 00 00 00       	mov    $0x66,%eax
 8081cf4:	48 89 c7             	mov    %rax,%rdi
 8081cf7:	b8 00 00 00 00       	mov    $0x0,%eax
 8081cfc:	e8 50 bf ff ff       	callq  807dc51 <o>
 8081d01:	b8 0f 2e 00 00       	mov    $0x2e0f,%eax
 8081d06:	48 89 c7             	mov    %rax,%rdi
 8081d09:	b8 00 00 00 00       	mov    $0x0,%eax
 8081d0e:	e8 3e bf ff ff       	callq  807dc51 <o>
 8081d13:	b8 c8 00 00 00       	mov    $0xc8,%eax
 8081d18:	48 89 c7             	mov    %rax,%rdi
 8081d1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8081d20:	e8 2c bf ff ff       	callq  807dc51 <o>
 8081d25:	e9 7d 00 00 00       	jmpq   8081da7 <gen_opf+0x7cc>
 8081d2a:	48 8b 05 ef c1 00 00 	mov    0xc1ef(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081d31:	48 8b 00             	mov    (%rax),%rax
 8081d34:	8b 08                	mov    (%rax),%ecx
 8081d36:	83 e1 0f             	and    $0xf,%ecx
 8081d39:	83 f9 09             	cmp    $0x9,%ecx
 8081d3c:	0f 85 12 00 00 00    	jne    8081d54 <gen_opf+0x779>
 8081d42:	b8 66 00 00 00       	mov    $0x66,%eax
 8081d47:	48 89 c7             	mov    %rax,%rdi
 8081d4a:	b8 00 00 00 00       	mov    $0x0,%eax
 8081d4f:	e8 fd be ff ff       	callq  807dc51 <o>
 8081d54:	b8 0f 2e 00 00       	mov    $0x2e0f,%eax
 8081d59:	48 89 c7             	mov    %rax,%rdi
 8081d5c:	b8 00 00 00 00       	mov    $0x0,%eax
 8081d61:	e8 eb be ff ff       	callq  807dc51 <o>
 8081d66:	48 8b 05 b3 c1 00 00 	mov    0xc1b3(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081d6d:	48 8b 00             	mov    (%rax),%rax
 8081d70:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8081d77:	00 00 00 
 8081d7a:	48 01 c8             	add    %rcx,%rax
 8081d7d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8081d80:	49 89 cb             	mov    %rcx,%r11
 8081d83:	48 8b 08             	mov    (%rax),%rcx
 8081d86:	49 89 ca             	mov    %rcx,%r10
 8081d89:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081d8c:	48 89 c6             	mov    %rax,%rsi
 8081d8f:	b8 00 00 00 00       	mov    $0x0,%eax
 8081d94:	48 89 c7             	mov    %rax,%rdi
 8081d97:	4c 89 d2             	mov    %r10,%rdx
 8081d9a:	4c 89 d9             	mov    %r11,%rcx
 8081d9d:	b8 00 00 00 00       	mov    $0x0,%eax
 8081da2:	e8 2f c7 ff ff       	callq  807e4d6 <gen_modrm>
 8081da7:	48 8b 05 72 c1 00 00 	mov    0xc172(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081dae:	48 8b 00             	mov    (%rax),%rax
 8081db1:	48 89 c1             	mov    %rax,%rcx
 8081db4:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 8081dbb:	ff ff ff 
 8081dbe:	48 01 d0             	add    %rdx,%rax
 8081dc1:	4c 8b 1d 58 c1 00 00 	mov    0xc158(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081dc8:	49 89 03             	mov    %rax,(%r11)
 8081dcb:	48 8b 05 4e c1 00 00 	mov    0xc14e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081dd2:	48 8b 00             	mov    (%rax),%rax
 8081dd5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081ddc:	00 00 00 
 8081ddf:	48 01 c8             	add    %rcx,%rax
 8081de2:	b9 33 00 00 00       	mov    $0x33,%ecx
 8081de7:	66 89 08             	mov    %cx,(%rax)
 8081dea:	48 8b 05 2f c1 00 00 	mov    0xc12f(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081df1:	48 8b 00             	mov    (%rax),%rax
 8081df4:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8081dfb:	00 00 00 
 8081dfe:	48 01 c8             	add    %rcx,%rax
 8081e01:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8081e04:	81 c9 00 01 00 00    	or     $0x100,%ecx
 8081e0a:	89 08                	mov    %ecx,(%rax)
 8081e0c:	e9 2a 03 00 00       	jmpq   808213b <gen_opf+0xb60>
 8081e11:	48 8b 05 08 c1 00 00 	mov    0xc108(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081e18:	48 8b 00             	mov    (%rax),%rax
 8081e1b:	8b 08                	mov    (%rax),%ecx
 8081e1d:	83 e1 0f             	and    $0xf,%ecx
 8081e20:	83 f9 0a             	cmp    $0xa,%ecx
 8081e23:	0f 85 39 00 00 00    	jne    8081e62 <gen_opf+0x887>
 8081e29:	48 8b 05 f0 c0 00 00 	mov    0xc0f0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081e30:	48 8b 00             	mov    (%rax),%rax
 8081e33:	48 89 c6             	mov    %rax,%rsi
 8081e36:	b8 03 00 00 00       	mov    $0x3,%eax
 8081e3b:	48 89 c7             	mov    %rax,%rdi
 8081e3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8081e43:	e8 99 c7 ff ff       	callq  807e5e1 <load>
 8081e48:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081e4b:	85 c0                	test   %eax,%eax
 8081e4d:	0f 84 07 00 00 00    	je     8081e5a <gen_opf+0x87f>
 8081e53:	b8 00 00 00 00       	mov    $0x0,%eax
 8081e58:	eb 05                	jmp    8081e5f <gen_opf+0x884>
 8081e5a:	b8 01 00 00 00       	mov    $0x1,%eax
 8081e5f:	89 45 e8             	mov    %eax,-0x18(%rbp)
 8081e62:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8081e65:	e9 05 00 00 00       	jmpq   8081e6f <gen_opf+0x894>
 8081e6a:	e9 09 00 00 00       	jmpq   8081e78 <gen_opf+0x89d>
 8081e6f:	83 f8 2b             	cmp    $0x2b,%eax
 8081e72:	0f 85 12 00 00 00    	jne    8081e8a <gen_opf+0x8af>
 8081e78:	b8 00 00 00 00       	mov    $0x0,%eax
 8081e7d:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081e80:	e9 51 00 00 00       	jmpq   8081ed6 <gen_opf+0x8fb>
 8081e85:	e9 09 00 00 00       	jmpq   8081e93 <gen_opf+0x8b8>
 8081e8a:	83 f8 2d             	cmp    $0x2d,%eax
 8081e8d:	0f 85 12 00 00 00    	jne    8081ea5 <gen_opf+0x8ca>
 8081e93:	b8 04 00 00 00       	mov    $0x4,%eax
 8081e98:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081e9b:	e9 36 00 00 00       	jmpq   8081ed6 <gen_opf+0x8fb>
 8081ea0:	e9 09 00 00 00       	jmpq   8081eae <gen_opf+0x8d3>
 8081ea5:	83 f8 2a             	cmp    $0x2a,%eax
 8081ea8:	0f 85 12 00 00 00    	jne    8081ec0 <gen_opf+0x8e5>
 8081eae:	b8 01 00 00 00       	mov    $0x1,%eax
 8081eb3:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081eb6:	e9 1b 00 00 00       	jmpq   8081ed6 <gen_opf+0x8fb>
 8081ebb:	e9 09 00 00 00       	jmpq   8081ec9 <gen_opf+0x8ee>
 8081ec0:	83 f8 2f             	cmp    $0x2f,%eax
 8081ec3:	0f 85 a1 ff ff ff    	jne    8081e6a <gen_opf+0x88f>
 8081ec9:	b8 06 00 00 00       	mov    $0x6,%eax
 8081ece:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8081ed1:	e9 00 00 00 00       	jmpq   8081ed6 <gen_opf+0x8fb>
 8081ed6:	48 8b 05 43 c0 00 00 	mov    0xc043(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081edd:	48 8b 00             	mov    (%rax),%rax
 8081ee0:	8b 08                	mov    (%rax),%ecx
 8081ee2:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8081ee5:	48 8b 05 34 c0 00 00 	mov    0xc034(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081eec:	48 8b 00             	mov    (%rax),%rax
 8081eef:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8081ef6:	00 00 00 
 8081ef9:	48 01 c8             	add    %rcx,%rax
 8081efc:	8b 08                	mov    (%rax),%ecx
 8081efe:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 8081f01:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8081f04:	83 e0 0f             	and    $0xf,%eax
 8081f07:	83 f8 0a             	cmp    $0xa,%eax
 8081f0a:	0f 85 30 00 00 00    	jne    8081f40 <gen_opf+0x965>
 8081f10:	b8 de 00 00 00       	mov    $0xde,%eax
 8081f15:	48 89 c7             	mov    %rax,%rdi
 8081f18:	b8 00 00 00 00       	mov    $0x0,%eax
 8081f1d:	e8 2f bd ff ff       	callq  807dc51 <o>
 8081f22:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8081f25:	c1 e0 03             	shl    $0x3,%eax
 8081f28:	81 c0 c1 00 00 00    	add    $0xc1,%eax
 8081f2e:	48 89 c7             	mov    %rax,%rdi
 8081f31:	b8 00 00 00 00       	mov    $0x0,%eax
 8081f36:	e8 16 bd ff ff       	callq  807dc51 <o>
 8081f3b:	e9 d7 01 00 00       	jmpq   8082117 <gen_opf+0xb3c>
 8081f40:	48 8b 05 d9 bf 00 00 	mov    0xbfd9(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081f47:	48 8b 00             	mov    (%rax),%rax
 8081f4a:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8081f51:	00 00 00 
 8081f54:	48 01 c8             	add    %rcx,%rax
 8081f57:	0f b7 08             	movzwl (%rax),%ecx
 8081f5a:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8081f5d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081f60:	83 e0 3f             	and    $0x3f,%eax
 8081f63:	83 f8 31             	cmp    $0x31,%eax
 8081f66:	0f 85 4b 00 00 00    	jne    8081fb7 <gen_opf+0x9dc>
 8081f6c:	b8 01 00 00 00       	mov    $0x1,%eax
 8081f71:	48 89 c7             	mov    %rax,%rdi
 8081f74:	b8 00 00 00 00       	mov    $0x0,%eax
 8081f79:	e8 97 b3 fd ff       	callq  805d315 <get_reg>
 8081f7e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8081f81:	b8 04 00 00 00       	mov    $0x4,%eax
 8081f86:	89 45 80             	mov    %eax,-0x80(%rbp)
 8081f89:	b8 32 01 00 00       	mov    $0x132,%eax
 8081f8e:	66 89 45 90          	mov    %ax,-0x70(%rbp)
 8081f92:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8081f95:	89 45 98             	mov    %eax,-0x68(%rbp)
 8081f98:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 8081f9c:	48 89 c6             	mov    %rax,%rsi
 8081f9f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8081fa2:	48 89 c7             	mov    %rax,%rdi
 8081fa5:	b8 00 00 00 00       	mov    $0x0,%eax
 8081faa:	e8 32 c6 ff ff       	callq  807e5e1 <load>
 8081faf:	b8 00 00 00 00       	mov    $0x0,%eax
 8081fb4:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8081fb7:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8081fba:	85 c0                	test   %eax,%eax
 8081fbc:	0f 84 b7 00 00 00    	je     8082079 <gen_opf+0xa9e>
 8081fc2:	b8 f3 0f 7e 00       	mov    $0x7e0ff3,%eax
 8081fc7:	48 89 c7             	mov    %rax,%rdi
 8081fca:	b8 00 00 00 00       	mov    $0x0,%eax
 8081fcf:	e8 7d bc ff ff       	callq  807dc51 <o>
 8081fd4:	b8 c8 00 00 00       	mov    $0xc8,%eax
 8081fd9:	48 89 c7             	mov    %rax,%rdi
 8081fdc:	b8 00 00 00 00       	mov    $0x0,%eax
 8081fe1:	e8 6b bc ff ff       	callq  807dc51 <o>
 8081fe6:	48 8b 05 33 bf 00 00 	mov    0xbf33(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8081fed:	48 8b 00             	mov    (%rax),%rax
 8081ff0:	48 89 c6             	mov    %rax,%rsi
 8081ff3:	b8 03 00 00 00       	mov    $0x3,%eax
 8081ff8:	48 89 c7             	mov    %rax,%rdi
 8081ffb:	b8 00 00 00 00       	mov    $0x0,%eax
 8082000:	e8 dc c5 ff ff       	callq  807e5e1 <load>
 8082005:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8082008:	83 e0 0f             	and    $0xf,%eax
 808200b:	83 f8 09             	cmp    $0x9,%eax
 808200e:	0f 85 17 00 00 00    	jne    808202b <gen_opf+0xa50>
 8082014:	b8 f2 00 00 00       	mov    $0xf2,%eax
 8082019:	48 89 c7             	mov    %rax,%rdi
 808201c:	b8 00 00 00 00       	mov    $0x0,%eax
 8082021:	e8 2b bc ff ff       	callq  807dc51 <o>
 8082026:	e9 12 00 00 00       	jmpq   808203d <gen_opf+0xa62>
 808202b:	b8 f3 00 00 00       	mov    $0xf3,%eax
 8082030:	48 89 c7             	mov    %rax,%rdi
 8082033:	b8 00 00 00 00       	mov    $0x0,%eax
 8082038:	e8 14 bc ff ff       	callq  807dc51 <o>
 808203d:	b8 0f 00 00 00       	mov    $0xf,%eax
 8082042:	48 89 c7             	mov    %rax,%rdi
 8082045:	b8 00 00 00 00       	mov    $0x0,%eax
 808204a:	e8 02 bc ff ff       	callq  807dc51 <o>
 808204f:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8082052:	83 c0 58             	add    $0x58,%eax
 8082055:	48 89 c7             	mov    %rax,%rdi
 8082058:	b8 00 00 00 00       	mov    $0x0,%eax
 808205d:	e8 ef bb ff ff       	callq  807dc51 <o>
 8082062:	b8 c1 00 00 00       	mov    $0xc1,%eax
 8082067:	48 89 c7             	mov    %rax,%rdi
 808206a:	b8 00 00 00 00       	mov    $0x0,%eax
 808206f:	e8 dd bb ff ff       	callq  807dc51 <o>
 8082074:	e9 9e 00 00 00       	jmpq   8082117 <gen_opf+0xb3c>
 8082079:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808207c:	83 e0 0f             	and    $0xf,%eax
 808207f:	83 f8 09             	cmp    $0x9,%eax
 8082082:	0f 85 17 00 00 00    	jne    808209f <gen_opf+0xac4>
 8082088:	b8 f2 00 00 00       	mov    $0xf2,%eax
 808208d:	48 89 c7             	mov    %rax,%rdi
 8082090:	b8 00 00 00 00       	mov    $0x0,%eax
 8082095:	e8 b7 bb ff ff       	callq  807dc51 <o>
 808209a:	e9 12 00 00 00       	jmpq   80820b1 <gen_opf+0xad6>
 808209f:	b8 f3 00 00 00       	mov    $0xf3,%eax
 80820a4:	48 89 c7             	mov    %rax,%rdi
 80820a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80820ac:	e8 a0 bb ff ff       	callq  807dc51 <o>
 80820b1:	b8 0f 00 00 00       	mov    $0xf,%eax
 80820b6:	48 89 c7             	mov    %rax,%rdi
 80820b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80820be:	e8 8e bb ff ff       	callq  807dc51 <o>
 80820c3:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80820c6:	83 c0 58             	add    $0x58,%eax
 80820c9:	48 89 c7             	mov    %rax,%rdi
 80820cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80820d1:	e8 7b bb ff ff       	callq  807dc51 <o>
 80820d6:	48 8b 05 43 be 00 00 	mov    0xbe43(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80820dd:	48 8b 00             	mov    (%rax),%rax
 80820e0:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 80820e7:	00 00 00 
 80820ea:	48 01 c8             	add    %rcx,%rax
 80820ed:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80820f0:	49 89 cb             	mov    %rcx,%r11
 80820f3:	48 8b 08             	mov    (%rax),%rcx
 80820f6:	49 89 ca             	mov    %rcx,%r10
 80820f9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80820fc:	48 89 c6             	mov    %rax,%rsi
 80820ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8082104:	48 89 c7             	mov    %rax,%rdi
 8082107:	4c 89 d2             	mov    %r10,%rdx
 808210a:	4c 89 d9             	mov    %r11,%rcx
 808210d:	b8 00 00 00 00       	mov    $0x0,%eax
 8082112:	e8 bf c3 ff ff       	callq  807e4d6 <gen_modrm>
 8082117:	48 8b 05 02 be 00 00 	mov    0xbe02(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808211e:	48 8b 00             	mov    (%rax),%rax
 8082121:	48 89 c1             	mov    %rax,%rcx
 8082124:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 808212b:	ff ff ff 
 808212e:	48 01 d0             	add    %rdx,%rax
 8082131:	4c 8b 1d e8 bd 00 00 	mov    0xbde8(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082138:	49 89 03             	mov    %rax,(%r11)
 808213b:	c9                   	leaveq 
 808213c:	c3                   	retq   

000000000808213d <gen_cvt_itof>:
 808213d:	55                   	push   %rbp
 808213e:	48 89 e5             	mov    %rsp,%rbp
 8082141:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8082148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 808214c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 808214f:	83 e0 0f             	and    $0xf,%eax
 8082152:	83 f8 0a             	cmp    $0xa,%eax
 8082155:	0f 85 99 01 00 00    	jne    80822f4 <gen_cvt_itof+0x1b7>
 808215b:	b8 04 00 00 00       	mov    $0x4,%eax
 8082160:	48 89 c7             	mov    %rax,%rdi
 8082163:	b8 00 00 00 00       	mov    $0x0,%eax
 8082168:	e8 d7 ae fd ff       	callq  805d044 <save_reg>
 808216d:	b8 01 00 00 00       	mov    $0x1,%eax
 8082172:	48 89 c7             	mov    %rax,%rdi
 8082175:	b8 00 00 00 00       	mov    $0x0,%eax
 808217a:	e8 ab b5 fd ff       	callq  805d72a <gv>
 808217f:	48 8b 05 9a bd 00 00 	mov    0xbd9a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082186:	48 8b 00             	mov    (%rax),%rax
 8082189:	8b 08                	mov    (%rax),%ecx
 808218b:	83 e1 0f             	and    $0xf,%ecx
 808218e:	83 f9 0c             	cmp    $0xc,%ecx
 8082191:	0f 85 56 00 00 00    	jne    80821ed <gen_cvt_itof+0xb0>
 8082197:	48 8b 05 82 bd 00 00 	mov    0xbd82(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808219e:	48 8b 00             	mov    (%rax),%rax
 80821a1:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80821a8:	00 00 00 
 80821ab:	48 01 c8             	add    %rcx,%rax
 80821ae:	0f b7 08             	movzwl (%rax),%ecx
 80821b1:	83 e1 3f             	and    $0x3f,%ecx
 80821b4:	83 c1 50             	add    $0x50,%ecx
 80821b7:	48 89 cf             	mov    %rcx,%rdi
 80821ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80821bf:	e8 8d ba ff ff       	callq  807dc51 <o>
 80821c4:	b8 df 2c 24 00       	mov    $0x242cdf,%eax
 80821c9:	48 89 c7             	mov    %rax,%rdi
 80821cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80821d1:	e8 7b ba ff ff       	callq  807dc51 <o>
 80821d6:	b8 48 83 c4 08       	mov    $0x8c48348,%eax
 80821db:	48 89 c7             	mov    %rax,%rdi
 80821de:	b8 00 00 00 00       	mov    $0x0,%eax
 80821e3:	e8 69 ba ff ff       	callq  807dc51 <o>
 80821e8:	e9 e3 00 00 00       	jmpq   80822d0 <gen_cvt_itof+0x193>
 80821ed:	48 8b 05 2c bd 00 00 	mov    0xbd2c(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80821f4:	48 8b 00             	mov    (%rax),%rax
 80821f7:	8b 08                	mov    (%rax),%ecx
 80821f9:	83 e1 1f             	and    $0x1f,%ecx
 80821fc:	83 f9 10             	cmp    $0x10,%ecx
 80821ff:	0f 85 7a 00 00 00    	jne    808227f <gen_cvt_itof+0x142>
 8082205:	b8 6a 00 00 00       	mov    $0x6a,%eax
 808220a:	48 89 c7             	mov    %rax,%rdi
 808220d:	b8 00 00 00 00       	mov    $0x0,%eax
 8082212:	e8 3a ba ff ff       	callq  807dc51 <o>
 8082217:	b8 00 00 00 00       	mov    $0x0,%eax
 808221c:	48 89 c7             	mov    %rax,%rdi
 808221f:	b8 00 00 00 00       	mov    $0x0,%eax
 8082224:	e8 7a b9 ff ff       	callq  807dba3 <g>
 8082229:	48 8b 05 f0 bc 00 00 	mov    0xbcf0(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082230:	48 8b 00             	mov    (%rax),%rax
 8082233:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 808223a:	00 00 00 
 808223d:	48 01 c8             	add    %rcx,%rax
 8082240:	0f b7 08             	movzwl (%rax),%ecx
 8082243:	83 e1 3f             	and    $0x3f,%ecx
 8082246:	83 c1 50             	add    $0x50,%ecx
 8082249:	48 89 cf             	mov    %rcx,%rdi
 808224c:	b8 00 00 00 00       	mov    $0x0,%eax
 8082251:	e8 fb b9 ff ff       	callq  807dc51 <o>
 8082256:	b8 df 2c 24 00       	mov    $0x242cdf,%eax
 808225b:	48 89 c7             	mov    %rax,%rdi
 808225e:	b8 00 00 00 00       	mov    $0x0,%eax
 8082263:	e8 e9 b9 ff ff       	callq  807dc51 <o>
 8082268:	b8 48 83 c4 10       	mov    $0x10c48348,%eax
 808226d:	48 89 c7             	mov    %rax,%rdi
 8082270:	b8 00 00 00 00       	mov    $0x0,%eax
 8082275:	e8 d7 b9 ff ff       	callq  807dc51 <o>
 808227a:	e9 51 00 00 00       	jmpq   80822d0 <gen_cvt_itof+0x193>
 808227f:	48 8b 05 9a bc 00 00 	mov    0xbc9a(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082286:	48 8b 00             	mov    (%rax),%rax
 8082289:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8082290:	00 00 00 
 8082293:	48 01 c8             	add    %rcx,%rax
 8082296:	0f b7 08             	movzwl (%rax),%ecx
 8082299:	83 e1 3f             	and    $0x3f,%ecx
 808229c:	83 c1 50             	add    $0x50,%ecx
 808229f:	48 89 cf             	mov    %rcx,%rdi
 80822a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80822a7:	e8 a5 b9 ff ff       	callq  807dc51 <o>
 80822ac:	b8 db 04 24 00       	mov    $0x2404db,%eax
 80822b1:	48 89 c7             	mov    %rax,%rdi
 80822b4:	b8 00 00 00 00       	mov    $0x0,%eax
 80822b9:	e8 93 b9 ff ff       	callq  807dc51 <o>
 80822be:	b8 48 83 c4 08       	mov    $0x8c48348,%eax
 80822c3:	48 89 c7             	mov    %rax,%rdi
 80822c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80822cb:	e8 81 b9 ff ff       	callq  807dc51 <o>
 80822d0:	48 8b 05 49 bc 00 00 	mov    0xbc49(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80822d7:	48 8b 00             	mov    (%rax),%rax
 80822da:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80822e1:	00 00 00 
 80822e4:	48 01 c8             	add    %rcx,%rax
 80822e7:	b9 04 00 00 00       	mov    $0x4,%ecx
 80822ec:	66 89 08             	mov    %cx,(%rax)
 80822ef:	e9 f0 00 00 00       	jmpq   80823e4 <gen_cvt_itof+0x2a7>
 80822f4:	b8 03 00 00 00       	mov    $0x3,%eax
 80822f9:	48 89 c7             	mov    %rax,%rdi
 80822fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8082301:	e8 3e ad fd ff       	callq  805d044 <save_reg>
 8082306:	b8 01 00 00 00       	mov    $0x1,%eax
 808230b:	48 89 c7             	mov    %rax,%rdi
 808230e:	b8 00 00 00 00       	mov    $0x0,%eax
 8082313:	e8 12 b4 fd ff       	callq  805d72a <gv>
 8082318:	8b 45 f8             	mov    -0x8(%rbp),%eax
 808231b:	83 e0 0f             	and    $0xf,%eax
 808231e:	83 f8 08             	cmp    $0x8,%eax
 8082321:	b8 00 00 00 00       	mov    $0x0,%eax
 8082326:	0f 94 c0             	sete   %al
 8082329:	81 c0 f2 00 00 00    	add    $0xf2,%eax
 808232f:	48 89 c7             	mov    %rax,%rdi
 8082332:	b8 00 00 00 00       	mov    $0x0,%eax
 8082337:	e8 15 b9 ff ff       	callq  807dc51 <o>
 808233c:	48 8b 05 dd bb 00 00 	mov    0xbbdd(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082343:	48 8b 00             	mov    (%rax),%rax
 8082346:	8b 08                	mov    (%rax),%ecx
 8082348:	83 e1 1f             	and    $0x1f,%ecx
 808234b:	83 f9 10             	cmp    $0x10,%ecx
 808234e:	0f 84 1d 00 00 00    	je     8082371 <gen_cvt_itof+0x234>
 8082354:	48 8b 05 c5 bb 00 00 	mov    0xbbc5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808235b:	48 8b 00             	mov    (%rax),%rax
 808235e:	8b 08                	mov    (%rax),%ecx
 8082360:	83 e1 0f             	and    $0xf,%ecx
 8082363:	83 f9 0c             	cmp    $0xc,%ecx
 8082366:	0f 84 05 00 00 00    	je     8082371 <gen_cvt_itof+0x234>
 808236c:	e9 12 00 00 00       	jmpq   8082383 <gen_cvt_itof+0x246>
 8082371:	b8 48 00 00 00       	mov    $0x48,%eax
 8082376:	48 89 c7             	mov    %rax,%rdi
 8082379:	b8 00 00 00 00       	mov    $0x0,%eax
 808237e:	e8 ce b8 ff ff       	callq  807dc51 <o>
 8082383:	b8 0f 2a 00 00       	mov    $0x2a0f,%eax
 8082388:	48 89 c7             	mov    %rax,%rdi
 808238b:	b8 00 00 00 00       	mov    $0x0,%eax
 8082390:	e8 bc b8 ff ff       	callq  807dc51 <o>
 8082395:	48 8b 05 84 bb 00 00 	mov    0xbb84(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808239c:	48 8b 00             	mov    (%rax),%rax
 808239f:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80823a6:	00 00 00 
 80823a9:	48 01 c8             	add    %rcx,%rax
 80823ac:	0f b7 08             	movzwl (%rax),%ecx
 80823af:	83 e1 3f             	and    $0x3f,%ecx
 80823b2:	81 c1 c0 00 00 00    	add    $0xc0,%ecx
 80823b8:	48 89 cf             	mov    %rcx,%rdi
 80823bb:	b8 00 00 00 00       	mov    $0x0,%eax
 80823c0:	e8 8c b8 ff ff       	callq  807dc51 <o>
 80823c5:	48 8b 05 54 bb 00 00 	mov    0xbb54(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80823cc:	48 8b 00             	mov    (%rax),%rax
 80823cf:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80823d6:	00 00 00 
 80823d9:	48 01 c8             	add    %rcx,%rax
 80823dc:	b9 03 00 00 00       	mov    $0x3,%ecx
 80823e1:	66 89 08             	mov    %cx,(%rax)
 80823e4:	c9                   	leaveq 
 80823e5:	c3                   	retq   

00000000080823e6 <gen_cvt_ftof>:
 80823e6:	55                   	push   %rbp
 80823e7:	48 89 e5             	mov    %rsp,%rbp
 80823ea:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80823f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80823f5:	48 8b 05 24 bb 00 00 	mov    0xbb24(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80823fc:	48 8b 00             	mov    (%rax),%rax
 80823ff:	8b 08                	mov    (%rax),%ecx
 8082401:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8082404:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8082407:	83 e0 0f             	and    $0xf,%eax
 808240a:	89 45 f0             	mov    %eax,-0x10(%rbp)
 808240d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8082410:	83 e0 0f             	and    $0xf,%eax
 8082413:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8082416:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8082419:	83 f8 08             	cmp    $0x8,%eax
 808241c:	0f 85 ad 00 00 00    	jne    80824cf <gen_cvt_ftof+0xe9>
 8082422:	b8 02 00 00 00       	mov    $0x2,%eax
 8082427:	48 89 c7             	mov    %rax,%rdi
 808242a:	b8 00 00 00 00       	mov    $0x0,%eax
 808242f:	e8 f6 b2 fd ff       	callq  805d72a <gv>
 8082434:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8082437:	83 f8 09             	cmp    $0x9,%eax
 808243a:	0f 85 29 00 00 00    	jne    8082469 <gen_cvt_ftof+0x83>
 8082440:	b8 0f 14 c0 00       	mov    $0xc0140f,%eax
 8082445:	48 89 c7             	mov    %rax,%rdi
 8082448:	b8 00 00 00 00       	mov    $0x0,%eax
 808244d:	e8 ff b7 ff ff       	callq  807dc51 <o>
 8082452:	b8 0f 5a c0 00       	mov    $0xc05a0f,%eax
 8082457:	48 89 c7             	mov    %rax,%rdi
 808245a:	b8 00 00 00 00       	mov    $0x0,%eax
 808245f:	e8 ed b7 ff ff       	callq  807dc51 <o>
 8082464:	e9 61 00 00 00       	jmpq   80824ca <gen_cvt_ftof+0xe4>
 8082469:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808246c:	83 f8 0a             	cmp    $0xa,%eax
 808246f:	0f 85 55 00 00 00    	jne    80824ca <gen_cvt_ftof+0xe4>
 8082475:	b8 f3 0f 11 44       	mov    $0x44110ff3,%eax
 808247a:	48 89 c7             	mov    %rax,%rdi
 808247d:	b8 00 00 00 00       	mov    $0x0,%eax
 8082482:	e8 ca b7 ff ff       	callq  807dc51 <o>
 8082487:	b8 24 f0 00 00       	mov    $0xf024,%eax
 808248c:	48 89 c7             	mov    %rax,%rdi
 808248f:	b8 00 00 00 00       	mov    $0x0,%eax
 8082494:	e8 b8 b7 ff ff       	callq  807dc51 <o>
 8082499:	b8 d9 44 24 f0       	mov    $0xf02444d9,%eax
 808249e:	48 89 c7             	mov    %rax,%rdi
 80824a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80824a6:	e8 a6 b7 ff ff       	callq  807dc51 <o>
 80824ab:	48 8b 05 6e ba 00 00 	mov    0xba6e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80824b2:	48 8b 00             	mov    (%rax),%rax
 80824b5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80824bc:	00 00 00 
 80824bf:	48 01 c8             	add    %rcx,%rax
 80824c2:	b9 04 00 00 00       	mov    $0x4,%ecx
 80824c7:	66 89 08             	mov    %cx,(%rax)
 80824ca:	e9 92 01 00 00       	jmpq   8082661 <gen_cvt_ftof+0x27b>
 80824cf:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80824d2:	83 f8 09             	cmp    $0x9,%eax
 80824d5:	0f 85 ad 00 00 00    	jne    8082588 <gen_cvt_ftof+0x1a2>
 80824db:	b8 02 00 00 00       	mov    $0x2,%eax
 80824e0:	48 89 c7             	mov    %rax,%rdi
 80824e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80824e8:	e8 3d b2 fd ff       	callq  805d72a <gv>
 80824ed:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80824f0:	83 f8 08             	cmp    $0x8,%eax
 80824f3:	0f 85 29 00 00 00    	jne    8082522 <gen_cvt_ftof+0x13c>
 80824f9:	b8 66 0f 14 c0       	mov    $0xc0140f66,%eax
 80824fe:	48 89 c7             	mov    %rax,%rdi
 8082501:	b8 00 00 00 00       	mov    $0x0,%eax
 8082506:	e8 46 b7 ff ff       	callq  807dc51 <o>
 808250b:	b8 66 0f 5a c0       	mov    $0xc05a0f66,%eax
 8082510:	48 89 c7             	mov    %rax,%rdi
 8082513:	b8 00 00 00 00       	mov    $0x0,%eax
 8082518:	e8 34 b7 ff ff       	callq  807dc51 <o>
 808251d:	e9 61 00 00 00       	jmpq   8082583 <gen_cvt_ftof+0x19d>
 8082522:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8082525:	83 f8 0a             	cmp    $0xa,%eax
 8082528:	0f 85 55 00 00 00    	jne    8082583 <gen_cvt_ftof+0x19d>
 808252e:	b8 f2 0f 11 44       	mov    $0x44110ff2,%eax
 8082533:	48 89 c7             	mov    %rax,%rdi
 8082536:	b8 00 00 00 00       	mov    $0x0,%eax
 808253b:	e8 11 b7 ff ff       	callq  807dc51 <o>
 8082540:	b8 24 f0 00 00       	mov    $0xf024,%eax
 8082545:	48 89 c7             	mov    %rax,%rdi
 8082548:	b8 00 00 00 00       	mov    $0x0,%eax
 808254d:	e8 ff b6 ff ff       	callq  807dc51 <o>
 8082552:	b8 dd 44 24 f0       	mov    $0xf02444dd,%eax
 8082557:	48 89 c7             	mov    %rax,%rdi
 808255a:	b8 00 00 00 00       	mov    $0x0,%eax
 808255f:	e8 ed b6 ff ff       	callq  807dc51 <o>
 8082564:	48 8b 05 b5 b9 00 00 	mov    0xb9b5(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808256b:	48 8b 00             	mov    (%rax),%rax
 808256e:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8082575:	00 00 00 
 8082578:	48 01 c8             	add    %rcx,%rax
 808257b:	b9 04 00 00 00       	mov    $0x4,%ecx
 8082580:	66 89 08             	mov    %cx,(%rax)
 8082583:	e9 d9 00 00 00       	jmpq   8082661 <gen_cvt_ftof+0x27b>
 8082588:	b8 40 00 00 00       	mov    $0x40,%eax
 808258d:	48 89 c7             	mov    %rax,%rdi
 8082590:	b8 00 00 00 00       	mov    $0x0,%eax
 8082595:	e8 90 b1 fd ff       	callq  805d72a <gv>
 808259a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808259d:	83 f8 09             	cmp    $0x9,%eax
 80825a0:	0f 85 5a 00 00 00    	jne    8082600 <gen_cvt_ftof+0x21a>
 80825a6:	b8 dd 5c 24 f0       	mov    $0xf0245cdd,%eax
 80825ab:	48 89 c7             	mov    %rax,%rdi
 80825ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80825b3:	e8 99 b6 ff ff       	callq  807dc51 <o>
 80825b8:	b8 f2 0f 10 44       	mov    $0x44100ff2,%eax
 80825bd:	48 89 c7             	mov    %rax,%rdi
 80825c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80825c5:	e8 87 b6 ff ff       	callq  807dc51 <o>
 80825ca:	b8 24 f0 00 00       	mov    $0xf024,%eax
 80825cf:	48 89 c7             	mov    %rax,%rdi
 80825d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80825d7:	e8 75 b6 ff ff       	callq  807dc51 <o>
 80825dc:	48 8b 05 3d b9 00 00 	mov    0xb93d(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80825e3:	48 8b 00             	mov    (%rax),%rax
 80825e6:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80825ed:	00 00 00 
 80825f0:	48 01 c8             	add    %rcx,%rax
 80825f3:	b9 03 00 00 00       	mov    $0x3,%ecx
 80825f8:	66 89 08             	mov    %cx,(%rax)
 80825fb:	e9 61 00 00 00       	jmpq   8082661 <gen_cvt_ftof+0x27b>
 8082600:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8082603:	83 f8 08             	cmp    $0x8,%eax
 8082606:	0f 85 55 00 00 00    	jne    8082661 <gen_cvt_ftof+0x27b>
 808260c:	b8 d9 5c 24 f0       	mov    $0xf0245cd9,%eax
 8082611:	48 89 c7             	mov    %rax,%rdi
 8082614:	b8 00 00 00 00       	mov    $0x0,%eax
 8082619:	e8 33 b6 ff ff       	callq  807dc51 <o>
 808261e:	b8 f3 0f 10 44       	mov    $0x44100ff3,%eax
 8082623:	48 89 c7             	mov    %rax,%rdi
 8082626:	b8 00 00 00 00       	mov    $0x0,%eax
 808262b:	e8 21 b6 ff ff       	callq  807dc51 <o>
 8082630:	b8 24 f0 00 00       	mov    $0xf024,%eax
 8082635:	48 89 c7             	mov    %rax,%rdi
 8082638:	b8 00 00 00 00       	mov    $0x0,%eax
 808263d:	e8 0f b6 ff ff       	callq  807dc51 <o>
 8082642:	48 8b 05 d7 b8 00 00 	mov    0xb8d7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082649:	48 8b 00             	mov    (%rax),%rax
 808264c:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8082653:	00 00 00 
 8082656:	48 01 c8             	add    %rcx,%rax
 8082659:	b9 03 00 00 00       	mov    $0x3,%ecx
 808265e:	66 89 08             	mov    %cx,(%rax)
 8082661:	c9                   	leaveq 
 8082662:	c3                   	retq   

0000000008082663 <gen_cvt_ftoi>:
 8082663:	55                   	push   %rbp
 8082664:	48 89 e5             	mov    %rsp,%rbp
 8082667:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 808266e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8082672:	48 8b 05 a7 b8 00 00 	mov    0xb8a7(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082679:	48 8b 00             	mov    (%rax),%rax
 808267c:	8b 08                	mov    (%rax),%ecx
 808267e:	89 4d f4             	mov    %ecx,-0xc(%rbp)
 8082681:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8082684:	83 e0 0f             	and    $0xf,%eax
 8082687:	89 45 f0             	mov    %eax,-0x10(%rbp)
 808268a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808268d:	83 f8 0a             	cmp    $0xa,%eax
 8082690:	0f 85 1a 00 00 00    	jne    80826b0 <gen_cvt_ftoi+0x4d>
 8082696:	b8 09 00 00 00       	mov    $0x9,%eax
 808269b:	48 89 c7             	mov    %rax,%rdi
 808269e:	b8 00 00 00 00       	mov    $0x0,%eax
 80826a3:	e8 3e fd ff ff       	callq  80823e6 <gen_cvt_ftof>
 80826a8:	b8 09 00 00 00       	mov    $0x9,%eax
 80826ad:	89 45 f0             	mov    %eax,-0x10(%rbp)
 80826b0:	b8 02 00 00 00       	mov    $0x2,%eax
 80826b5:	48 89 c7             	mov    %rax,%rdi
 80826b8:	b8 00 00 00 00       	mov    $0x0,%eax
 80826bd:	e8 68 b0 fd ff       	callq  805d72a <gv>
 80826c2:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80826c5:	83 f8 00             	cmp    $0x0,%eax
 80826c8:	0f 84 0d 00 00 00    	je     80826db <gen_cvt_ftoi+0x78>
 80826ce:	b8 08 00 00 00       	mov    $0x8,%eax
 80826d3:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80826d6:	e9 08 00 00 00       	jmpq   80826e3 <gen_cvt_ftoi+0x80>
 80826db:	b8 04 00 00 00       	mov    $0x4,%eax
 80826e0:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80826e3:	b8 01 00 00 00       	mov    $0x1,%eax
 80826e8:	48 89 c7             	mov    %rax,%rdi
 80826eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80826f0:	e8 20 ac fd ff       	callq  805d315 <get_reg>
 80826f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80826f8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80826fb:	83 f8 08             	cmp    $0x8,%eax
 80826fe:	0f 85 17 00 00 00    	jne    808271b <gen_cvt_ftoi+0xb8>
 8082704:	b8 f3 00 00 00       	mov    $0xf3,%eax
 8082709:	48 89 c7             	mov    %rax,%rdi
 808270c:	b8 00 00 00 00       	mov    $0x0,%eax
 8082711:	e8 3b b5 ff ff       	callq  807dc51 <o>
 8082716:	e9 6d 00 00 00       	jmpq   8082788 <gen_cvt_ftoi+0x125>
 808271b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808271e:	83 f8 09             	cmp    $0x9,%eax
 8082721:	0f 85 17 00 00 00    	jne    808273e <gen_cvt_ftoi+0xdb>
 8082727:	b8 f2 00 00 00       	mov    $0xf2,%eax
 808272c:	48 89 c7             	mov    %rax,%rdi
 808272f:	b8 00 00 00 00       	mov    $0x0,%eax
 8082734:	e8 18 b5 ff ff       	callq  807dc51 <o>
 8082739:	e9 4a 00 00 00       	jmpq   8082788 <gen_cvt_ftoi+0x125>
 808273e:	e9 05 00 00 00       	jmpq   8082748 <gen_cvt_ftoi+0xe5>
 8082743:	e9 3b 00 00 00       	jmpq   8082783 <gen_cvt_ftoi+0x120>
 8082748:	48 8d 05 db a5 00 00 	lea    0xa5db(%rip),%rax        # 808cd2a <L.115>
 808274f:	49 89 c3             	mov    %rax,%r11
 8082752:	b8 97 06 00 00       	mov    $0x697,%eax
 8082757:	49 89 c2             	mov    %rax,%r10
 808275a:	48 8d 05 bc a5 00 00 	lea    0xa5bc(%rip),%rax        # 808cd1d <L.114>
 8082761:	48 89 c6             	mov    %rax,%rsi
 8082764:	48 8d 05 b0 a5 00 00 	lea    0xa5b0(%rip),%rax        # 808cd1b <L.113>
 808276b:	48 89 c7             	mov    %rax,%rdi
 808276e:	4c 89 d2             	mov    %r10,%rdx
 8082771:	4c 89 d9             	mov    %r11,%rcx
 8082774:	b8 00 00 00 00       	mov    $0x0,%eax
 8082779:	e8 22 56 00 00       	callq  8087da0 <__preinit_array_end+0x300>
 808277e:	e9 05 00 00 00       	jmpq   8082788 <gen_cvt_ftoi+0x125>
 8082783:	b8 00 00 00 00       	mov    $0x0,%eax
 8082788:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808278b:	83 f8 08             	cmp    $0x8,%eax
 808278e:	b8 00 00 00 00       	mov    $0x0,%eax
 8082793:	0f 94 c0             	sete   %al
 8082796:	b9 0f 2c 00 00       	mov    $0x2c0f,%ecx
 808279b:	49 89 cb             	mov    %rcx,%r11
 808279e:	b9 00 00 00 00       	mov    $0x0,%ecx
 80827a3:	49 89 ca             	mov    %rcx,%r10
 80827a6:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 80827a9:	48 89 ce             	mov    %rcx,%rsi
 80827ac:	48 89 c7             	mov    %rax,%rdi
 80827af:	4c 89 d2             	mov    %r10,%rdx
 80827b2:	4c 89 d9             	mov    %r11,%rcx
 80827b5:	b8 00 00 00 00       	mov    $0x0,%eax
 80827ba:	e8 21 b6 ff ff       	callq  807dde0 <orex>
 80827bf:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80827c2:	83 e0 07             	and    $0x7,%eax
 80827c5:	c1 e0 03             	shl    $0x3,%eax
 80827c8:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 80827ce:	48 89 c7             	mov    %rax,%rdi
 80827d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80827d6:	e8 76 b4 ff ff       	callq  807dc51 <o>
 80827db:	48 8b 05 3e b7 00 00 	mov    0xb73e(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 80827e2:	48 8b 00             	mov    (%rax),%rax
 80827e5:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80827ec:	00 00 00 
 80827ef:	48 01 c8             	add    %rcx,%rax
 80827f2:	0f b7 4d e8          	movzwl -0x18(%rbp),%ecx
 80827f6:	66 89 08             	mov    %cx,(%rax)
 80827f9:	c9                   	leaveq 
 80827fa:	c3                   	retq   

00000000080827fb <ggoto>:
 80827fb:	55                   	push   %rbp
 80827fc:	48 89 e5             	mov    %rsp,%rbp
 80827ff:	48 81 ec 00 00 00 00 	sub    $0x0,%rsp
 8082806:	b8 01 00 00 00       	mov    $0x1,%eax
 808280b:	48 89 c7             	mov    %rax,%rdi
 808280e:	b8 00 00 00 00       	mov    $0x0,%eax
 8082813:	e8 40 cc ff ff       	callq  807f458 <gcall_or_jmp>
 8082818:	48 8b 05 01 b7 00 00 	mov    0xb701(%rip),%rax        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 808281f:	48 8b 00             	mov    (%rax),%rax
 8082822:	48 89 c1             	mov    %rax,%rcx
 8082825:	48 ba d0 ff ff ff ff 	movabs $0xffffffffffffffd0,%rdx
 808282c:	ff ff ff 
 808282f:	48 01 d0             	add    %rdx,%rax
 8082832:	4c 8b 1d e7 b6 00 00 	mov    0xb6e7(%rip),%r11        # 808df20 <_GLOBAL_OFFSET_TABLE_+0x2a0>
 8082839:	49 89 03             	mov    %rax,(%r11)
 808283c:	c9                   	leaveq 
 808283d:	c3                   	retq   
	...

0000000008082840 <__bswap_16>:
 8082840:	55                   	push   %rbp
 8082841:	48 89 e5             	mov    %rsp,%rbp
 8082844:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 808284b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 808284f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8082852:	c1 f8 08             	sar    $0x8,%eax
 8082855:	81 e0 ff 00 00 00    	and    $0xff,%eax
 808285b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 808285e:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 8082864:	c1 e1 08             	shl    $0x8,%ecx
 8082867:	48 09 c8             	or     %rcx,%rax
 808286a:	81 e0 ff ff 00 00    	and    $0xffff,%eax
 8082870:	e9 00 00 00 00       	jmpq   8082875 <__bswap_16+0x35>
 8082875:	c9                   	leaveq 
 8082876:	c3                   	retq   

0000000008082877 <__bswap_32>:
 8082877:	55                   	push   %rbp
 8082878:	48 89 e5             	mov    %rsp,%rbp
 808287b:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8082882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8082886:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8082889:	81 e0 00 00 00 ff    	and    $0xff000000,%eax
 808288f:	c1 e8 18             	shr    $0x18,%eax
 8082892:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 8082895:	81 e1 00 00 ff 00    	and    $0xff0000,%ecx
 808289b:	c1 e9 08             	shr    $0x8,%ecx
 808289e:	48 09 c8             	or     %rcx,%rax
 80828a1:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 80828a4:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
 80828aa:	c1 e1 08             	shl    $0x8,%ecx
 80828ad:	48 09 c8             	or     %rcx,%rax
 80828b0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 80828b3:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 80828b9:	c1 e1 18             	shl    $0x18,%ecx
 80828bc:	48 09 c8             	or     %rcx,%rax
 80828bf:	e9 00 00 00 00       	jmpq   80828c4 <__bswap_32+0x4d>
 80828c4:	c9                   	leaveq 
 80828c5:	c3                   	retq   

00000000080828c6 <__bswap_64>:
 80828c6:	55                   	push   %rbp
 80828c7:	48 89 e5             	mov    %rsp,%rbp
 80828ca:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80828d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80828d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80828d9:	48 b9 00 00 00 00 00 	movabs $0xff00000000000000,%rcx
 80828e0:	00 00 ff 
 80828e3:	48 21 c8             	and    %rcx,%rax
 80828e6:	48 89 c1             	mov    %rax,%rcx
 80828e9:	48 c1 e9 38          	shr    $0x38,%rcx
 80828ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80828f1:	48 ba 00 00 00 00 00 	movabs $0xff000000000000,%rdx
 80828f8:	00 ff 00 
 80828fb:	48 21 d0             	and    %rdx,%rax
 80828fe:	48 89 c2             	mov    %rax,%rdx
 8082901:	48 c1 ea 28          	shr    $0x28,%rdx
 8082905:	48 89 c8             	mov    %rcx,%rax
 8082908:	48 89 d1             	mov    %rdx,%rcx
 808290b:	48 09 c8             	or     %rcx,%rax
 808290e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8082912:	48 ba 00 00 00 00 00 	movabs $0xff0000000000,%rdx
 8082919:	ff 00 00 
 808291c:	48 21 d1             	and    %rdx,%rcx
 808291f:	48 89 ca             	mov    %rcx,%rdx
 8082922:	48 c1 ea 18          	shr    $0x18,%rdx
 8082926:	48 89 c1             	mov    %rax,%rcx
 8082929:	48 89 d0             	mov    %rdx,%rax
 808292c:	48 09 c1             	or     %rax,%rcx
 808292f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8082933:	48 ba 00 00 00 00 ff 	movabs $0xff00000000,%rdx
 808293a:	00 00 00 
 808293d:	48 21 d0             	and    %rdx,%rax
 8082940:	48 89 c2             	mov    %rax,%rdx
 8082943:	48 c1 ea 08          	shr    $0x8,%rdx
 8082947:	48 89 c8             	mov    %rcx,%rax
 808294a:	48 89 d1             	mov    %rdx,%rcx
 808294d:	48 09 c8             	or     %rcx,%rax
 8082950:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8082954:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
 808295b:	00 00 00 
 808295e:	48 21 d1             	and    %rdx,%rcx
 8082961:	48 89 ca             	mov    %rcx,%rdx
 8082964:	48 c1 e2 08          	shl    $0x8,%rdx
 8082968:	48 89 c1             	mov    %rax,%rcx
 808296b:	48 89 d0             	mov    %rdx,%rax
 808296e:	48 09 c1             	or     %rax,%rcx
 8082971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8082975:	48 ba 00 00 ff 00 00 	movabs $0xff0000,%rdx
 808297c:	00 00 00 
 808297f:	48 21 d0             	and    %rdx,%rax
 8082982:	48 89 c2             	mov    %rax,%rdx
 8082985:	48 c1 e2 18          	shl    $0x18,%rdx
 8082989:	48 89 c8             	mov    %rcx,%rax
 808298c:	48 89 d1             	mov    %rdx,%rcx
 808298f:	48 09 c8             	or     %rcx,%rax
 8082992:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8082996:	48 ba 00 ff 00 00 00 	movabs $0xff00,%rdx
 808299d:	00 00 00 
 80829a0:	48 21 d1             	and    %rdx,%rcx
 80829a3:	48 89 ca             	mov    %rcx,%rdx
 80829a6:	48 c1 e2 28          	shl    $0x28,%rdx
 80829aa:	48 89 c1             	mov    %rax,%rcx
 80829ad:	48 89 d0             	mov    %rdx,%rax
 80829b0:	48 09 c1             	or     %rax,%rcx
 80829b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80829b7:	48 ba ff 00 00 00 00 	movabs $0xff,%rdx
 80829be:	00 00 00 
 80829c1:	48 21 d0             	and    %rdx,%rax
 80829c4:	48 89 c2             	mov    %rax,%rdx
 80829c7:	48 c1 e2 38          	shl    $0x38,%rdx
 80829cb:	48 89 c8             	mov    %rcx,%rax
 80829ce:	48 89 d1             	mov    %rdx,%rcx
 80829d1:	48 09 c8             	or     %rcx,%rax
 80829d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 80829d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80829dc:	e9 00 00 00 00       	jmpq   80829e1 <__bswap_64+0x11b>
 80829e1:	c9                   	leaveq 
 80829e2:	c3                   	retq   

00000000080829e3 <asm_parse_reg>:
 80829e3:	55                   	push   %rbp
 80829e4:	48 89 e5             	mov    %rsp,%rbp
 80829e7:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 80829ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80829f3:	89 45 fc             	mov    %eax,-0x4(%rbp)
 80829f6:	48 8b 05 2b b5 00 00 	mov    0xb52b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80829fd:	8b 00                	mov    (%rax),%eax
 80829ff:	83 f8 25             	cmp    $0x25,%eax
 8082a02:	0f 84 05 00 00 00    	je     8082a0d <asm_parse_reg+0x2a>
 8082a08:	e9 8c 00 00 00       	jmpq   8082a99 <asm_parse_reg+0xb6>
 8082a0d:	b8 00 00 00 00       	mov    $0x0,%eax
 8082a12:	e8 b3 5c fd ff       	callq  80586ca <next>
 8082a17:	48 8b 05 0a b5 00 00 	mov    0xb50a(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082a1e:	8b 00                	mov    (%rax),%eax
 8082a20:	81 f8 aa 01 00 00    	cmp    $0x1aa,%eax
 8082a26:	0f 8c 2c 00 00 00    	jl     8082a58 <asm_parse_reg+0x75>
 8082a2c:	48 8b 05 f5 b4 00 00 	mov    0xb4f5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082a33:	8b 00                	mov    (%rax),%eax
 8082a35:	81 f8 b1 01 00 00    	cmp    $0x1b1,%eax
 8082a3b:	0f 8f 17 00 00 00    	jg     8082a58 <asm_parse_reg+0x75>
 8082a41:	48 8b 05 e0 b4 00 00 	mov    0xb4e0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082a48:	8b 00                	mov    (%rax),%eax
 8082a4a:	81 e8 aa 01 00 00    	sub    $0x1aa,%eax
 8082a50:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8082a53:	e9 55 00 00 00       	jmpq   8082aad <asm_parse_reg+0xca>
 8082a58:	48 8b 05 c9 b4 00 00 	mov    0xb4c9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082a5f:	8b 00                	mov    (%rax),%eax
 8082a61:	81 f8 b2 01 00 00    	cmp    $0x1b2,%eax
 8082a67:	0f 8c 2c 00 00 00    	jl     8082a99 <asm_parse_reg+0xb6>
 8082a6d:	48 8b 05 b4 b4 00 00 	mov    0xb4b4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082a74:	8b 00                	mov    (%rax),%eax
 8082a76:	81 f8 b9 01 00 00    	cmp    $0x1b9,%eax
 8082a7c:	0f 8f 17 00 00 00    	jg     8082a99 <asm_parse_reg+0xb6>
 8082a82:	48 8b 05 9f b4 00 00 	mov    0xb49f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082a89:	8b 00                	mov    (%rax),%eax
 8082a8b:	81 e8 b2 01 00 00    	sub    $0x1b2,%eax
 8082a91:	89 45 fc             	mov    %eax,-0x4(%rbp)
 8082a94:	e9 14 00 00 00       	jmpq   8082aad <asm_parse_reg+0xca>
 8082a99:	48 8d 05 94 ae 00 00 	lea    0xae94(%rip),%rax        # 808d934 <L.108>
 8082aa0:	48 89 c7             	mov    %rax,%rdi
 8082aa3:	b8 00 00 00 00       	mov    $0x0,%eax
 8082aa8:	e8 a5 e6 fc ff       	callq  8051152 <expect>
 8082aad:	b8 00 00 00 00       	mov    $0x0,%eax
 8082ab2:	e8 13 5c fd ff       	callq  80586ca <next>
 8082ab7:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8082aba:	e9 00 00 00 00       	jmpq   8082abf <asm_parse_reg+0xdc>
 8082abf:	c9                   	leaveq 
 8082ac0:	c3                   	retq   

0000000008082ac1 <parse_operand>:
 8082ac1:	55                   	push   %rbp
 8082ac2:	48 89 e5             	mov    %rsp,%rbp
 8082ac5:	48 81 ec 50 00 00 00 	sub    $0x50,%rsp
 8082acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8082ad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8082ad4:	b8 00 00 00 00       	mov    $0x0,%eax
 8082ad9:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8082adc:	48 8b 05 45 b4 00 00 	mov    0xb445(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082ae3:	8b 00                	mov    (%rax),%eax
 8082ae5:	83 f8 2a             	cmp    $0x2a,%eax
 8082ae8:	0f 85 12 00 00 00    	jne    8082b00 <parse_operand+0x3f>
 8082aee:	b8 00 00 00 00       	mov    $0x0,%eax
 8082af3:	e8 d2 5b fd ff       	callq  80586ca <next>
 8082af8:	b8 00 00 20 00       	mov    $0x200000,%eax
 8082afd:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8082b00:	48 8b 05 21 b4 00 00 	mov    0xb421(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082b07:	8b 00                	mov    (%rax),%eax
 8082b09:	83 f8 25             	cmp    $0x25,%eax
 8082b0c:	0f 85 4a 03 00 00    	jne    8082e5c <parse_operand+0x39b>
 8082b12:	b8 00 00 00 00       	mov    $0x0,%eax
 8082b17:	e8 ae 5b fd ff       	callq  80586ca <next>
 8082b1c:	48 8b 05 05 b4 00 00 	mov    0xb405(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082b23:	8b 00                	mov    (%rax),%eax
 8082b25:	81 f8 9a 01 00 00    	cmp    $0x19a,%eax
 8082b2b:	0f 8c 12 01 00 00    	jl     8082c43 <parse_operand+0x182>
 8082b31:	48 8b 05 f0 b3 00 00 	mov    0xb3f0(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082b38:	8b 00                	mov    (%rax),%eax
 8082b3a:	81 f8 e1 01 00 00    	cmp    $0x1e1,%eax
 8082b40:	0f 8f fd 00 00 00    	jg     8082c43 <parse_operand+0x182>
 8082b46:	48 8b 05 db b3 00 00 	mov    0xb3db(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082b4d:	8b 00                	mov    (%rax),%eax
 8082b4f:	81 e8 9a 01 00 00    	sub    $0x19a,%eax
 8082b55:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8082b58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082b5c:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8082b5f:	c1 f9 03             	sar    $0x3,%ecx
 8082b62:	ba 01 00 00 00       	mov    $0x1,%edx
 8082b67:	d3 e2                	shl    %cl,%edx
 8082b69:	89 10                	mov    %edx,(%rax)
 8082b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082b6f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082b76:	00 00 00 
 8082b79:	48 01 c8             	add    %rcx,%rax
 8082b7c:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 8082b7f:	83 e1 07             	and    $0x7,%ecx
 8082b82:	88 08                	mov    %cl,(%rax)
 8082b84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082b88:	8b 08                	mov    (%rax),%ecx
 8082b8a:	83 e1 0f             	and    $0xf,%ecx
 8082b8d:	85 c9                	test   %ecx,%ecx
 8082b8f:	0f 84 30 00 00 00    	je     8082bc5 <parse_operand+0x104>
 8082b95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082b99:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082ba0:	00 00 00 
 8082ba3:	48 01 c8             	add    %rcx,%rax
 8082ba6:	0f be 08             	movsbl (%rax),%ecx
 8082ba9:	83 f9 00             	cmp    $0x0,%ecx
 8082bac:	0f 85 13 00 00 00    	jne    8082bc5 <parse_operand+0x104>
 8082bb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082bb6:	8b 08                	mov    (%rax),%ecx
 8082bb8:	81 c9 00 00 01 00    	or     $0x10000,%ecx
 8082bbe:	89 08                	mov    %ecx,(%rax)
 8082bc0:	e9 79 00 00 00       	jmpq   8082c3e <parse_operand+0x17d>
 8082bc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082bc9:	8b 08                	mov    (%rax),%ecx
 8082bcb:	83 f9 01             	cmp    $0x1,%ecx
 8082bce:	0f 85 30 00 00 00    	jne    8082c04 <parse_operand+0x143>
 8082bd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082bd8:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082bdf:	00 00 00 
 8082be2:	48 01 c8             	add    %rcx,%rax
 8082be5:	0f be 08             	movsbl (%rax),%ecx
 8082be8:	83 f9 01             	cmp    $0x1,%ecx
 8082beb:	0f 85 13 00 00 00    	jne    8082c04 <parse_operand+0x143>
 8082bf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082bf5:	8b 08                	mov    (%rax),%ecx
 8082bf7:	81 c9 00 00 04 00    	or     $0x40000,%ecx
 8082bfd:	89 08                	mov    %ecx,(%rax)
 8082bff:	e9 3a 00 00 00       	jmpq   8082c3e <parse_operand+0x17d>
 8082c04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082c08:	8b 08                	mov    (%rax),%ecx
 8082c0a:	83 f9 02             	cmp    $0x2,%ecx
 8082c0d:	0f 85 2b 00 00 00    	jne    8082c3e <parse_operand+0x17d>
 8082c13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082c17:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082c1e:	00 00 00 
 8082c21:	48 01 c8             	add    %rcx,%rax
 8082c24:	0f be 08             	movsbl (%rax),%ecx
 8082c27:	83 f9 02             	cmp    $0x2,%ecx
 8082c2a:	0f 85 0e 00 00 00    	jne    8082c3e <parse_operand+0x17d>
 8082c30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082c34:	8b 08                	mov    (%rax),%ecx
 8082c36:	81 c9 00 00 08 00    	or     $0x80000,%ecx
 8082c3c:	89 08                	mov    %ecx,(%rax)
 8082c3e:	e9 0a 02 00 00       	jmpq   8082e4d <parse_operand+0x38c>
 8082c43:	48 8b 05 de b2 00 00 	mov    0xb2de(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082c4a:	8b 00                	mov    (%rax),%eax
 8082c4c:	81 f8 e2 01 00 00    	cmp    $0x1e2,%eax
 8082c52:	0f 8c 47 00 00 00    	jl     8082c9f <parse_operand+0x1de>
 8082c58:	48 8b 05 c9 b2 00 00 	mov    0xb2c9(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082c5f:	8b 00                	mov    (%rax),%eax
 8082c61:	81 f8 e9 01 00 00    	cmp    $0x1e9,%eax
 8082c67:	0f 8f 32 00 00 00    	jg     8082c9f <parse_operand+0x1de>
 8082c6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082c71:	b9 00 01 00 00       	mov    $0x100,%ecx
 8082c76:	89 08                	mov    %ecx,(%rax)
 8082c78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082c7c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082c83:	00 00 00 
 8082c86:	48 01 c8             	add    %rcx,%rax
 8082c89:	48 8b 0d 98 b2 00 00 	mov    0xb298(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082c90:	8b 09                	mov    (%rcx),%ecx
 8082c92:	81 e9 e2 01 00 00    	sub    $0x1e2,%ecx
 8082c98:	88 08                	mov    %cl,(%rax)
 8082c9a:	e9 ae 01 00 00       	jmpq   8082e4d <parse_operand+0x38c>
 8082c9f:	48 8b 05 82 b2 00 00 	mov    0xb282(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082ca6:	8b 00                	mov    (%rax),%eax
 8082ca8:	81 f8 ea 01 00 00    	cmp    $0x1ea,%eax
 8082cae:	0f 8c 47 00 00 00    	jl     8082cfb <parse_operand+0x23a>
 8082cb4:	48 8b 05 6d b2 00 00 	mov    0xb26d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082cbb:	8b 00                	mov    (%rax),%eax
 8082cbd:	81 f8 ef 01 00 00    	cmp    $0x1ef,%eax
 8082cc3:	0f 8f 32 00 00 00    	jg     8082cfb <parse_operand+0x23a>
 8082cc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082ccd:	b9 00 02 00 00       	mov    $0x200,%ecx
 8082cd2:	89 08                	mov    %ecx,(%rax)
 8082cd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082cd8:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082cdf:	00 00 00 
 8082ce2:	48 01 c8             	add    %rcx,%rax
 8082ce5:	48 8b 0d 3c b2 00 00 	mov    0xb23c(%rip),%rcx        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082cec:	8b 09                	mov    (%rcx),%ecx
 8082cee:	81 e9 ea 01 00 00    	sub    $0x1ea,%ecx
 8082cf4:	88 08                	mov    %cl,(%rax)
 8082cf6:	e9 52 01 00 00       	jmpq   8082e4d <parse_operand+0x38c>
 8082cfb:	48 8b 05 26 b2 00 00 	mov    0xb226(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082d02:	8b 00                	mov    (%rax),%eax
 8082d04:	81 f8 f0 01 00 00    	cmp    $0x1f0,%eax
 8082d0a:	0f 85 29 01 00 00    	jne    8082e39 <parse_operand+0x378>
 8082d10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082d14:	b9 00 04 00 00       	mov    $0x400,%ecx
 8082d19:	89 08                	mov    %ecx,(%rax)
 8082d1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082d1f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082d26:	00 00 00 
 8082d29:	48 01 c8             	add    %rcx,%rax
 8082d2c:	b9 00 00 00 00       	mov    $0x0,%ecx
 8082d31:	88 08                	mov    %cl,(%rax)
 8082d33:	b8 00 00 00 00       	mov    $0x0,%eax
 8082d38:	e8 8d 59 fd ff       	callq  80586ca <next>
 8082d3d:	48 8b 05 e4 b1 00 00 	mov    0xb1e4(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082d44:	8b 00                	mov    (%rax),%eax
 8082d46:	83 f8 28             	cmp    $0x28,%eax
 8082d49:	0f 85 b5 00 00 00    	jne    8082e04 <parse_operand+0x343>
 8082d4f:	b8 00 00 00 00       	mov    $0x0,%eax
 8082d54:	e8 71 59 fd ff       	callq  80586ca <next>
 8082d59:	48 8b 05 c8 b1 00 00 	mov    0xb1c8(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082d60:	8b 00                	mov    (%rax),%eax
 8082d62:	81 f8 ce 00 00 00    	cmp    $0xce,%eax
 8082d68:	0f 84 05 00 00 00    	je     8082d73 <parse_operand+0x2b2>
 8082d6e:	e9 c6 00 00 00       	jmpq   8082e39 <parse_operand+0x378>
 8082d73:	48 8b 05 2e b2 00 00 	mov    0xb22e(%rip),%rax        # 808dfa8 <_GLOBAL_OFFSET_TABLE_+0x328>
 8082d7a:	48 8b 00             	mov    (%rax),%rax
 8082d7d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082d84:	00 00 00 
 8082d87:	48 01 c8             	add    %rcx,%rax
 8082d8a:	48 8b 08             	mov    (%rax),%rcx
 8082d8d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 8082d91:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8082d95:	0f be 08             	movsbl (%rax),%ecx
 8082d98:	83 e9 30             	sub    $0x30,%ecx
 8082d9b:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 8082d9e:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8082da1:	83 f8 08             	cmp    $0x8,%eax
 8082da4:	0f 83 22 00 00 00    	jae    8082dcc <parse_operand+0x30b>
 8082daa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8082dae:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
 8082db5:	00 00 00 
 8082db8:	48 01 c8             	add    %rcx,%rax
 8082dbb:	0f be 08             	movsbl (%rax),%ecx
 8082dbe:	83 f9 00             	cmp    $0x0,%ecx
 8082dc1:	0f 85 05 00 00 00    	jne    8082dcc <parse_operand+0x30b>
 8082dc7:	e9 05 00 00 00       	jmpq   8082dd1 <parse_operand+0x310>
 8082dcc:	e9 68 00 00 00       	jmpq   8082e39 <parse_operand+0x378>
 8082dd1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082dd5:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082ddc:	00 00 00 
 8082ddf:	48 01 c8             	add    %rcx,%rax
 8082de2:	0f be 4d dc          	movsbl -0x24(%rbp),%ecx
 8082de6:	88 08                	mov    %cl,(%rax)
 8082de8:	b8 00 00 00 00       	mov    $0x0,%eax
 8082ded:	e8 d8 58 fd ff       	callq  80586ca <next>
 8082df2:	b8 29 00 00 00       	mov    $0x29,%eax
 8082df7:	48 89 c7             	mov    %rax,%rdi
 8082dfa:	b8 00 00 00 00       	mov    $0x0,%eax
 8082dff:	e8 df e2 fc ff       	callq  80510e3 <skip>
 8082e04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082e08:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8082e0f:	00 00 00 
 8082e12:	48 01 c8             	add    %rcx,%rax
 8082e15:	0f be 08             	movsbl (%rax),%ecx
 8082e18:	83 f9 00             	cmp    $0x0,%ecx
 8082e1b:	0f 85 0e 00 00 00    	jne    8082e2f <parse_operand+0x36e>
 8082e21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082e25:	8b 08                	mov    (%rax),%ecx
 8082e27:	81 c9 00 00 02 00    	or     $0x20000,%ecx
 8082e2d:	89 08                	mov    %ecx,(%rax)
 8082e2f:	e9 23 00 00 00       	jmpq   8082e57 <parse_operand+0x396>
 8082e34:	e9 14 00 00 00       	jmpq   8082e4d <parse_operand+0x38c>
 8082e39:	48 8d 05 fd aa 00 00 	lea    0xaafd(%rip),%rax        # 808d93d <L.109>
 8082e40:	48 89 c7             	mov    %rax,%rdi
 8082e43:	b8 00 00 00 00       	mov    $0x0,%eax
 8082e48:	e8 7a a8 fc ff       	callq  804d6c7 <tcc_error>
 8082e4d:	b8 00 00 00 00       	mov    $0x0,%eax
 8082e52:	e8 73 58 fd ff       	callq  80586ca <next>
 8082e57:	e9 ac 04 00 00       	jmpq   8083308 <parse_operand+0x847>
 8082e5c:	48 8b 05 c5 b0 00 00 	mov    0xb0c5(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8082e63:	8b 00                	mov    (%rax),%eax
 8082e65:	83 f8 24             	cmp    $0x24,%eax
 8082e68:	0f 85 a1 01 00 00    	jne    808300f <parse_operand+0x54e>
 8082e6e:	b8 00 00 00 00       	mov    $0x0,%eax
 8082e73:	e8 52 58 fd ff       	callq  80586ca <next>
 8082e78:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8082e7c:	48 89 c6             	mov    %rax,%rsi
 8082e7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8082e83:	48 89 c7             	mov    %rax,%rdi
 8082e86:	b8 00 00 00 00       	mov    $0x0,%eax
 8082e8b:	e8 0c 64 ff ff       	callq  807929c <asm_expr>
 8082e90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082e94:	b9 00 80 00 00       	mov    $0x8000,%ecx
 8082e99:	89 08                	mov    %ecx,(%rax)
 8082e9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082e9f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082ea6:	00 00 00 
 8082ea9:	48 01 c8             	add    %rcx,%rax
 8082eac:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8082eaf:	89 08                	mov    %ecx,(%rax)
 8082eb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082eb5:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082ebc:	00 00 00 
 8082ebf:	48 01 c8             	add    %rcx,%rax
 8082ec2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082ec9:	00 00 00 
 8082ecc:	48 01 c8             	add    %rcx,%rax
 8082ecf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 8082ed3:	48 89 08             	mov    %rcx,(%rax)
 8082ed6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082eda:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082ee1:	00 00 00 
 8082ee4:	48 01 c8             	add    %rcx,%rax
 8082ee7:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082eee:	00 00 00 
 8082ef1:	48 01 c8             	add    %rcx,%rax
 8082ef4:	48 8b 08             	mov    (%rax),%rcx
 8082ef7:	85 c9                	test   %ecx,%ecx
 8082ef9:	0f 84 05 00 00 00    	je     8082f04 <parse_operand+0x443>
 8082eff:	e9 06 01 00 00       	jmpq   808300a <parse_operand+0x549>
 8082f04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082f08:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082f0f:	00 00 00 
 8082f12:	48 01 c8             	add    %rcx,%rax
 8082f15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8082f19:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8082f20:	00 00 00 
 8082f23:	48 01 d1             	add    %rdx,%rcx
 8082f26:	8b 11                	mov    (%rcx),%edx
 8082f28:	81 e2 ff 00 00 00    	and    $0xff,%edx
 8082f2e:	8b 08                	mov    (%rax),%ecx
 8082f30:	48 39 d1             	cmp    %rdx,%rcx
 8082f33:	0f 85 0e 00 00 00    	jne    8082f47 <parse_operand+0x486>
 8082f39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082f3d:	8b 08                	mov    (%rax),%ecx
 8082f3f:	81 c9 00 08 00 00    	or     $0x800,%ecx
 8082f45:	89 08                	mov    %ecx,(%rax)
 8082f47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082f4b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082f52:	00 00 00 
 8082f55:	48 01 c8             	add    %rcx,%rax
 8082f58:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8082f5c:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8082f63:	00 00 00 
 8082f66:	48 01 d1             	add    %rdx,%rcx
 8082f69:	8b 11                	mov    (%rcx),%edx
 8082f6b:	c1 e2 18             	shl    $0x18,%edx
 8082f6e:	c1 fa 18             	sar    $0x18,%edx
 8082f71:	8b 08                	mov    (%rax),%ecx
 8082f73:	48 39 d1             	cmp    %rdx,%rcx
 8082f76:	0f 85 0e 00 00 00    	jne    8082f8a <parse_operand+0x4c9>
 8082f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082f80:	8b 08                	mov    (%rax),%ecx
 8082f82:	81 c9 00 10 00 00    	or     $0x1000,%ecx
 8082f88:	89 08                	mov    %ecx,(%rax)
 8082f8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082f8e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082f95:	00 00 00 
 8082f98:	48 01 c8             	add    %rcx,%rax
 8082f9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8082f9f:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8082fa6:	00 00 00 
 8082fa9:	48 01 d1             	add    %rdx,%rcx
 8082fac:	8b 11                	mov    (%rcx),%edx
 8082fae:	81 e2 ff ff 00 00    	and    $0xffff,%edx
 8082fb4:	8b 08                	mov    (%rax),%ecx
 8082fb6:	48 39 d1             	cmp    %rdx,%rcx
 8082fb9:	0f 85 0e 00 00 00    	jne    8082fcd <parse_operand+0x50c>
 8082fbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082fc3:	8b 08                	mov    (%rax),%ecx
 8082fc5:	81 c9 00 20 00 00    	or     $0x2000,%ecx
 8082fcb:	89 08                	mov    %ecx,(%rax)
 8082fcd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8082fd1:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8082fd8:	00 00 00 
 8082fdb:	48 01 c8             	add    %rcx,%rax
 8082fde:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8082fe2:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8082fe9:	00 00 00 
 8082fec:	48 01 d1             	add    %rdx,%rcx
 8082fef:	8b 10                	mov    (%rax),%edx
 8082ff1:	8b 01                	mov    (%rcx),%eax
 8082ff3:	48 39 c2             	cmp    %rax,%rdx
 8082ff6:	0f 85 0e 00 00 00    	jne    808300a <parse_operand+0x549>
 8082ffc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083000:	8b 08                	mov    (%rax),%ecx
 8083002:	81 c9 00 40 00 00    	or     $0x4000,%ecx
 8083008:	89 08                	mov    %ecx,(%rax)
 808300a:	e9 f9 02 00 00       	jmpq   8083308 <parse_operand+0x847>
 808300f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083013:	b9 00 00 00 40       	mov    $0x40000000,%ecx
 8083018:	89 08                	mov    %ecx,(%rax)
 808301a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 808301e:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083025:	00 00 00 
 8083028:	48 01 c8             	add    %rcx,%rax
 808302b:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8083030:	88 08                	mov    %cl,(%rax)
 8083032:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083036:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 808303d:	00 00 00 
 8083040:	48 01 c8             	add    %rcx,%rax
 8083043:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8083048:	88 08                	mov    %cl,(%rax)
 808304a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 808304e:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8083055:	00 00 00 
 8083058:	48 01 c8             	add    %rcx,%rax
 808305b:	b9 00 00 00 00       	mov    $0x0,%ecx
 8083060:	88 08                	mov    %cl,(%rax)
 8083062:	48 8b 05 bf ae 00 00 	mov    0xaebf(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8083069:	8b 00                	mov    (%rax),%eax
 808306b:	83 f8 28             	cmp    $0x28,%eax
 808306e:	0f 84 58 00 00 00    	je     80830cc <parse_operand+0x60b>
 8083074:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8083078:	48 89 c6             	mov    %rax,%rsi
 808307b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808307f:	48 89 c7             	mov    %rax,%rdi
 8083082:	b8 00 00 00 00       	mov    $0x0,%eax
 8083087:	e8 10 62 ff ff       	callq  807929c <asm_expr>
 808308c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083090:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8083097:	00 00 00 
 808309a:	48 01 c8             	add    %rcx,%rax
 808309d:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80830a0:	89 08                	mov    %ecx,(%rax)
 80830a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80830a6:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80830ad:	00 00 00 
 80830b0:	48 01 c8             	add    %rcx,%rax
 80830b3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80830ba:	00 00 00 
 80830bd:	48 01 c8             	add    %rcx,%rax
 80830c0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 80830c4:	48 89 08             	mov    %rcx,(%rax)
 80830c7:	e9 f4 00 00 00       	jmpq   80831c0 <parse_operand+0x6ff>
 80830cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80830d1:	e8 f4 55 fd ff       	callq  80586ca <next>
 80830d6:	48 8b 05 4b ae 00 00 	mov    0xae4b(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80830dd:	8b 00                	mov    (%rax),%eax
 80830df:	83 f8 25             	cmp    $0x25,%eax
 80830e2:	0f 85 55 00 00 00    	jne    808313d <parse_operand+0x67c>
 80830e8:	b8 28 00 00 00       	mov    $0x28,%eax
 80830ed:	48 89 c7             	mov    %rax,%rdi
 80830f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80830f5:	e8 f2 57 fd ff       	callq  80588ec <unget_tok>
 80830fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80830fe:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8083105:	00 00 00 
 8083108:	48 01 c8             	add    %rcx,%rax
 808310b:	b9 00 00 00 00       	mov    $0x0,%ecx
 8083110:	89 08                	mov    %ecx,(%rax)
 8083112:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083116:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808311d:	00 00 00 
 8083120:	48 01 c8             	add    %rcx,%rax
 8083123:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808312a:	00 00 00 
 808312d:	48 01 c8             	add    %rcx,%rax
 8083130:	b9 00 00 00 00       	mov    $0x0,%ecx
 8083135:	48 89 08             	mov    %rcx,(%rax)
 8083138:	e9 83 00 00 00       	jmpq   80831c0 <parse_operand+0x6ff>
 808313d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 8083141:	48 89 c6             	mov    %rax,%rsi
 8083144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8083148:	48 89 c7             	mov    %rax,%rdi
 808314b:	b8 00 00 00 00       	mov    $0x0,%eax
 8083150:	e8 47 61 ff ff       	callq  807929c <asm_expr>
 8083155:	48 8b 05 cc ad 00 00 	mov    0xadcc(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 808315c:	8b 00                	mov    (%rax),%eax
 808315e:	83 f8 29             	cmp    $0x29,%eax
 8083161:	0f 84 14 00 00 00    	je     808317b <parse_operand+0x6ba>
 8083167:	48 8d 05 e0 a7 00 00 	lea    0xa7e0(%rip),%rax        # 808d94e <L.110>
 808316e:	48 89 c7             	mov    %rax,%rdi
 8083171:	b8 00 00 00 00       	mov    $0x0,%eax
 8083176:	e8 d7 df fc ff       	callq  8051152 <expect>
 808317b:	b8 00 00 00 00       	mov    $0x0,%eax
 8083180:	e8 45 55 fd ff       	callq  80586ca <next>
 8083185:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083189:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8083190:	00 00 00 
 8083193:	48 01 c8             	add    %rcx,%rax
 8083196:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 8083199:	89 08                	mov    %ecx,(%rax)
 808319b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 808319f:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80831a6:	00 00 00 
 80831a9:	48 01 c8             	add    %rcx,%rax
 80831ac:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80831b3:	00 00 00 
 80831b6:	48 01 c8             	add    %rcx,%rax
 80831b9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 80831bd:	48 89 08             	mov    %rcx,(%rax)
 80831c0:	48 8b 05 61 ad 00 00 	mov    0xad61(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80831c7:	8b 00                	mov    (%rax),%eax
 80831c9:	83 f8 28             	cmp    $0x28,%eax
 80831cc:	0f 85 ee 00 00 00    	jne    80832c0 <parse_operand+0x7ff>
 80831d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80831d7:	e8 ee 54 fd ff       	callq  80586ca <next>
 80831dc:	48 8b 05 45 ad 00 00 	mov    0xad45(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80831e3:	8b 00                	mov    (%rax),%eax
 80831e5:	83 f8 2c             	cmp    $0x2c,%eax
 80831e8:	0f 84 25 00 00 00    	je     8083213 <parse_operand+0x752>
 80831ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80831f2:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80831f9:	00 00 00 
 80831fc:	48 01 c8             	add    %rcx,%rax
 80831ff:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 8083203:	b8 00 00 00 00       	mov    $0x0,%eax
 8083208:	e8 d6 f7 ff ff       	callq  80829e3 <asm_parse_reg>
 808320d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 8083211:	88 01                	mov    %al,(%rcx)
 8083213:	48 8b 05 0e ad 00 00 	mov    0xad0e(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 808321a:	8b 00                	mov    (%rax),%eax
 808321c:	83 f8 2c             	cmp    $0x2c,%eax
 808321f:	0f 85 89 00 00 00    	jne    80832ae <parse_operand+0x7ed>
 8083225:	b8 00 00 00 00       	mov    $0x0,%eax
 808322a:	e8 9b 54 fd ff       	callq  80586ca <next>
 808322f:	48 8b 05 f2 ac 00 00 	mov    0xacf2(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8083236:	8b 00                	mov    (%rax),%eax
 8083238:	83 f8 2c             	cmp    $0x2c,%eax
 808323b:	0f 84 25 00 00 00    	je     8083266 <parse_operand+0x7a5>
 8083241:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083245:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 808324c:	00 00 00 
 808324f:	48 01 c8             	add    %rcx,%rax
 8083252:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8083256:	b8 00 00 00 00       	mov    $0x0,%eax
 808325b:	e8 83 f7 ff ff       	callq  80829e3 <asm_parse_reg>
 8083260:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 8083264:	88 01                	mov    %al,(%rcx)
 8083266:	48 8b 05 bb ac 00 00 	mov    0xacbb(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 808326d:	8b 00                	mov    (%rax),%eax
 808326f:	83 f8 2c             	cmp    $0x2c,%eax
 8083272:	0f 85 36 00 00 00    	jne    80832ae <parse_operand+0x7ed>
 8083278:	b8 00 00 00 00       	mov    $0x0,%eax
 808327d:	e8 48 54 fd ff       	callq  80586ca <next>
 8083282:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083286:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 808328d:	00 00 00 
 8083290:	48 01 c8             	add    %rcx,%rax
 8083293:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8083297:	48 89 cf             	mov    %rcx,%rdi
 808329a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 808329e:	b8 00 00 00 00       	mov    $0x0,%eax
 80832a3:	e8 48 38 00 00       	callq  8086af0 <get_reg_shift>
 80832a8:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 80832ac:	88 01                	mov    %al,(%rcx)
 80832ae:	b8 29 00 00 00       	mov    $0x29,%eax
 80832b3:	48 89 c7             	mov    %rax,%rdi
 80832b6:	b8 00 00 00 00       	mov    $0x0,%eax
 80832bb:	e8 23 de fc ff       	callq  80510e3 <skip>
 80832c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80832c4:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80832cb:	00 00 00 
 80832ce:	48 01 c8             	add    %rcx,%rax
 80832d1:	0f be 08             	movsbl (%rax),%ecx
 80832d4:	83 f9 ff             	cmp    $0xffffffff,%ecx
 80832d7:	0f 85 2b 00 00 00    	jne    8083308 <parse_operand+0x847>
 80832dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80832e1:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 80832e8:	00 00 00 
 80832eb:	48 01 c8             	add    %rcx,%rax
 80832ee:	0f be 08             	movsbl (%rax),%ecx
 80832f1:	83 f9 ff             	cmp    $0xffffffff,%ecx
 80832f4:	0f 85 0e 00 00 00    	jne    8083308 <parse_operand+0x847>
 80832fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80832fe:	8b 08                	mov    (%rax),%ecx
 8083300:	81 c9 00 00 10 00    	or     $0x100000,%ecx
 8083306:	89 08                	mov    %ecx,(%rax)
 8083308:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 808330c:	8b 08                	mov    (%rax),%ecx
 808330e:	8b 55 d8             	mov    -0x28(%rbp),%edx
 8083311:	48 09 d1             	or     %rdx,%rcx
 8083314:	89 08                	mov    %ecx,(%rax)
 8083316:	c9                   	leaveq 
 8083317:	c3                   	retq   

0000000008083318 <gen_expr32>:
 8083318:	55                   	push   %rbp
 8083319:	48 89 e5             	mov    %rsp,%rbp
 808331c:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8083323:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8083327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808332b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8083332:	00 00 00 
 8083335:	48 01 c8             	add    %rcx,%rax
 8083338:	48 8b 08             	mov    (%rax),%rcx
 808333b:	85 c9                	test   %ecx,%ecx
 808333d:	0f 84 05 00 00 00    	je     8083348 <gen_expr32+0x30>
 8083343:	e9 0a 00 00 00       	jmpq   8083352 <gen_expr32+0x3a>
 8083348:	b8 00 00 00 00       	mov    $0x0,%eax
 808334d:	e9 05 00 00 00       	jmpq   8083357 <gen_expr32+0x3f>
 8083352:	b8 00 02 00 00       	mov    $0x200,%eax
 8083357:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 808335b:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 8083362:	00 00 00 
 8083365:	48 01 d1             	add    %rdx,%rcx
 8083368:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 808336c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 8083370:	8b 02                	mov    (%rdx),%eax
 8083372:	49 89 c2             	mov    %rax,%r10
 8083375:	48 8b 01             	mov    (%rcx),%rax
 8083378:	48 89 c6             	mov    %rax,%rsi
 808337b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808337e:	48 89 c7             	mov    %rax,%rdi
 8083381:	4c 89 d2             	mov    %r10,%rdx
 8083384:	b8 00 00 00 00       	mov    $0x0,%eax
 8083389:	e8 11 ad ff ff       	callq  807e09f <gen_addr32>
 808338e:	c9                   	leaveq 
 808338f:	c3                   	retq   

0000000008083390 <gen_expr64>:
 8083390:	55                   	push   %rbp
 8083391:	48 89 e5             	mov    %rsp,%rbp
 8083394:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 808339b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 808339f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80833a3:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80833aa:	00 00 00 
 80833ad:	48 01 c8             	add    %rcx,%rax
 80833b0:	48 8b 08             	mov    (%rax),%rcx
 80833b3:	85 c9                	test   %ecx,%ecx
 80833b5:	0f 84 05 00 00 00    	je     80833c0 <gen_expr64+0x30>
 80833bb:	e9 0a 00 00 00       	jmpq   80833ca <gen_expr64+0x3a>
 80833c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80833c5:	e9 05 00 00 00       	jmpq   80833cf <gen_expr64+0x3f>
 80833ca:	b8 00 02 00 00       	mov    $0x200,%eax
 80833cf:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80833d3:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 80833da:	00 00 00 
 80833dd:	48 01 d1             	add    %rdx,%rcx
 80833e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 80833e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 80833e8:	8b 02                	mov    (%rdx),%eax
 80833ea:	48 89 c2             	mov    %rax,%rdx
 80833ed:	49 89 d2             	mov    %rdx,%r10
 80833f0:	48 8b 01             	mov    (%rcx),%rax
 80833f3:	48 89 c6             	mov    %rax,%rsi
 80833f6:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80833f9:	48 89 c7             	mov    %rax,%rdi
 80833fc:	4c 89 d2             	mov    %r10,%rdx
 80833ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8083404:	e8 0e ad ff ff       	callq  807e117 <gen_addr64>
 8083409:	c9                   	leaveq 
 808340a:	c3                   	retq   

000000000808340b <gen_disp32>:
 808340b:	55                   	push   %rbp
 808340c:	48 89 e5             	mov    %rsp,%rbp
 808340f:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8083416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 808341a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808341e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8083425:	00 00 00 
 8083428:	48 01 c8             	add    %rcx,%rax
 808342b:	48 8b 08             	mov    (%rax),%rcx
 808342e:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
 8083432:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083436:	85 c0                	test   %eax,%eax
 8083438:	0f 84 96 00 00 00    	je     80834d4 <gen_disp32+0xc9>
 808343e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083442:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8083449:	00 00 00 
 808344c:	48 01 c8             	add    %rcx,%rax
 808344f:	48 8b 0d 62 aa 00 00 	mov    0xaa62(%rip),%rcx        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 8083456:	48 8b 09             	mov    (%rcx),%rcx
 8083459:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 8083460:	00 00 00 
 8083463:	48 01 d1             	add    %rdx,%rcx
 8083466:	8b 11                	mov    (%rcx),%edx
 8083468:	48 63 d2             	movslq %edx,%rdx
 808346b:	48 8b 08             	mov    (%rax),%rcx
 808346e:	48 89 d0             	mov    %rdx,%rax
 8083471:	48 39 c1             	cmp    %rax,%rcx
 8083474:	0f 85 5a 00 00 00    	jne    80834d4 <gen_disp32+0xc9>
 808347a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808347e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8083482:	48 ba 30 00 00 00 00 	movabs $0x30,%rdx
 8083489:	00 00 00 
 808348c:	48 01 d1             	add    %rdx,%rcx
 808348f:	8b 10                	mov    (%rax),%edx
 8083491:	48 89 d0             	mov    %rdx,%rax
 8083494:	48 8b 11             	mov    (%rcx),%rdx
 8083497:	48 01 d0             	add    %rdx,%rax
 808349a:	48 8b 0d 8f ab 00 00 	mov    0xab8f(%rip),%rcx        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 80834a1:	8b 09                	mov    (%rcx),%ecx
 80834a3:	48 63 c9             	movslq %ecx,%rcx
 80834a6:	48 89 c2             	mov    %rax,%rdx
 80834a9:	48 89 c8             	mov    %rcx,%rax
 80834ac:	48 29 c2             	sub    %rax,%rdx
 80834af:	48 89 d0             	mov    %rdx,%rax
 80834b2:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80834b9:	00 00 00 
 80834bc:	48 29 c8             	sub    %rcx,%rax
 80834bf:	48 89 c1             	mov    %rax,%rcx
 80834c2:	48 89 cf             	mov    %rcx,%rdi
 80834c5:	b8 00 00 00 00       	mov    $0x0,%eax
 80834ca:	e8 ed a7 ff ff       	callq  807dcbc <gen_le32>
 80834cf:	e9 8b 00 00 00       	jmpq   808355f <gen_disp32+0x154>
 80834d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80834d8:	85 c0                	test   %eax,%eax
 80834da:	0f 84 5a 00 00 00    	je     808353a <gen_disp32+0x12f>
 80834e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80834e4:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80834eb:	00 00 00 
 80834ee:	48 01 c8             	add    %rcx,%rax
 80834f1:	8b 08                	mov    (%rax),%ecx
 80834f3:	83 f9 03             	cmp    $0x3,%ecx
 80834f6:	0f 85 3e 00 00 00    	jne    808353a <gen_disp32+0x12f>
 80834fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083500:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8083507:	00 00 00 
 808350a:	48 01 c8             	add    %rcx,%rax
 808350d:	b9 06 00 00 00       	mov    $0x6,%ecx
 8083512:	89 08                	mov    %ecx,(%rax)
 8083514:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083518:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 808351f:	00 00 00 
 8083522:	48 01 c8             	add    %rcx,%rax
 8083525:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808352c:	00 00 00 
 808352f:	48 01 c8             	add    %rcx,%rax
 8083532:	b9 00 00 00 00       	mov    $0x0,%ecx
 8083537:	48 89 08             	mov    %rcx,(%rax)
 808353a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808353e:	8b 08                	mov    (%rax),%ecx
 8083540:	49 89 ca             	mov    %rcx,%r10
 8083543:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8083547:	48 89 c6             	mov    %rax,%rsi
 808354a:	b8 00 02 00 00       	mov    $0x200,%eax
 808354f:	48 89 c7             	mov    %rax,%rdi
 8083552:	4c 89 d2             	mov    %r10,%rdx
 8083555:	b8 00 00 00 00       	mov    $0x0,%eax
 808355a:	e8 31 ac ff ff       	callq  807e190 <gen_addrpc32>
 808355f:	c9                   	leaveq 
 8083560:	c3                   	retq   

0000000008083561 <asm_opcode>:
 8083561:	55                   	push   %rbp
 8083562:	48 89 e5             	mov    %rsp,%rbp
 8083565:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 808356c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8083570:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8083574:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083577:	81 f8 aa 03 00 00    	cmp    $0x3aa,%eax
 808357d:	0f 8c 21 00 00 00    	jl     80835a4 <asm_opcode+0x43>
 8083583:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083586:	81 f8 b2 03 00 00    	cmp    $0x3b2,%eax
 808358c:	0f 8f 12 00 00 00    	jg     80835a4 <asm_opcode+0x43>
 8083592:	b8 3b 00 00 00       	mov    $0x3b,%eax
 8083597:	48 89 c7             	mov    %rax,%rdi
 808359a:	b8 00 00 00 00       	mov    $0x0,%eax
 808359f:	e8 48 53 fd ff       	callq  80588ec <unget_tok>
 80835a4:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 80835ab:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 80835b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80835b7:	89 45 c8             	mov    %eax,-0x38(%rbp)
 80835ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80835bf:	89 45 cc             	mov    %eax,-0x34(%rbp)
 80835c2:	48 8b 05 5f a9 00 00 	mov    0xa95f(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80835c9:	8b 00                	mov    (%rax),%eax
 80835cb:	83 f8 3b             	cmp    $0x3b,%eax
 80835ce:	0f 84 17 00 00 00    	je     80835eb <asm_opcode+0x8a>
 80835d4:	48 8b 05 4d a9 00 00 	mov    0xa94d(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 80835db:	8b 00                	mov    (%rax),%eax
 80835dd:	83 f8 0a             	cmp    $0xa,%eax
 80835e0:	0f 84 05 00 00 00    	je     80835eb <asm_opcode+0x8a>
 80835e6:	e9 05 00 00 00       	jmpq   80835f0 <asm_opcode+0x8f>
 80835eb:	e9 58 01 00 00       	jmpq   8083748 <asm_opcode+0x1e7>
 80835f0:	8b 45 c8             	mov    -0x38(%rbp),%eax
 80835f3:	83 f8 03             	cmp    $0x3,%eax
 80835f6:	0f 8c 14 00 00 00    	jl     8083610 <asm_opcode+0xaf>
 80835fc:	48 8d 05 4d a3 00 00 	lea    0xa34d(%rip),%rax        # 808d950 <L.111>
 8083603:	48 89 c7             	mov    %rax,%rdi
 8083606:	b8 00 00 00 00       	mov    $0x0,%eax
 808360b:	e8 b7 a0 fc ff       	callq  804d6c7 <tcc_error>
 8083610:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 8083617:	48 89 c6             	mov    %rax,%rsi
 808361a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808361e:	48 89 c7             	mov    %rax,%rdi
 8083621:	b8 00 00 00 00       	mov    $0x0,%eax
 8083626:	e8 96 f4 ff ff       	callq  8082ac1 <parse_operand>
 808362b:	48 8b 05 f6 a8 00 00 	mov    0xa8f6(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8083632:	8b 00                	mov    (%rax),%eax
 8083634:	83 f8 3a             	cmp    $0x3a,%eax
 8083637:	0f 85 bb 00 00 00    	jne    80836f8 <asm_opcode+0x197>
 808363d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 8083644:	8b 08                	mov    (%rax),%ecx
 8083646:	81 f9 00 02 00 00    	cmp    $0x200,%ecx
 808364c:	0f 85 10 00 00 00    	jne    8083662 <asm_opcode+0x101>
 8083652:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8083655:	85 c0                	test   %eax,%eax
 8083657:	0f 85 05 00 00 00    	jne    8083662 <asm_opcode+0x101>
 808365d:	e9 14 00 00 00       	jmpq   8083676 <asm_opcode+0x115>
 8083662:	48 8d 05 04 a3 00 00 	lea    0xa304(%rip),%rax        # 808d96d <L.112>
 8083669:	48 89 c7             	mov    %rax,%rdi
 808366c:	b8 00 00 00 00       	mov    $0x0,%eax
 8083671:	e8 51 a0 fc ff       	callq  804d6c7 <tcc_error>
 8083676:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 808367d:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083684:	00 00 00 
 8083687:	48 01 c8             	add    %rcx,%rax
 808368a:	0f be 08             	movsbl (%rax),%ecx
 808368d:	48 63 c9             	movslq %ecx,%rcx
 8083690:	48 8d 05 f4 96 00 00 	lea    0x96f4(%rip),%rax        # 808cd8b <segment_prefixes>
 8083697:	48 89 ca             	mov    %rcx,%rdx
 808369a:	48 01 d0             	add    %rdx,%rax
 808369d:	0f b6 08             	movzbl (%rax),%ecx
 80836a0:	89 4d cc             	mov    %ecx,-0x34(%rbp)
 80836a3:	b8 00 00 00 00       	mov    $0x0,%eax
 80836a8:	e8 1d 50 fd ff       	callq  80586ca <next>
 80836ad:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 80836b4:	48 89 c6             	mov    %rax,%rsi
 80836b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80836bb:	48 89 c7             	mov    %rax,%rdi
 80836be:	b8 00 00 00 00       	mov    $0x0,%eax
 80836c3:	e8 f9 f3 ff ff       	callq  8082ac1 <parse_operand>
 80836c8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 80836cf:	8b 08                	mov    (%rax),%ecx
 80836d1:	81 e1 00 00 00 40    	and    $0x40000000,%ecx
 80836d7:	85 c9                	test   %ecx,%ecx
 80836d9:	0f 84 05 00 00 00    	je     80836e4 <asm_opcode+0x183>
 80836df:	e9 14 00 00 00       	jmpq   80836f8 <asm_opcode+0x197>
 80836e4:	48 8d 05 93 a2 00 00 	lea    0xa293(%rip),%rax        # 808d97e <L.113>
 80836eb:	48 89 c7             	mov    %rax,%rdi
 80836ee:	b8 00 00 00 00       	mov    $0x0,%eax
 80836f3:	e8 cf 9f fc ff       	callq  804d6c7 <tcc_error>
 80836f8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 80836ff:	48 89 c1             	mov    %rax,%rcx
 8083702:	48 ba 18 00 00 00 00 	movabs $0x18,%rdx
 8083709:	00 00 00 
 808370c:	48 01 d0             	add    %rdx,%rax
 808370f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 8083716:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8083719:	48 89 c1             	mov    %rax,%rcx
 808371c:	83 c0 01             	add    $0x1,%eax
 808371f:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8083722:	48 8b 05 ff a7 00 00 	mov    0xa7ff(%rip),%rax        # 808df28 <_GLOBAL_OFFSET_TABLE_+0x2a8>
 8083729:	8b 00                	mov    (%rax),%eax
 808372b:	83 f8 2c             	cmp    $0x2c,%eax
 808372e:	0f 84 05 00 00 00    	je     8083739 <asm_opcode+0x1d8>
 8083734:	e9 0f 00 00 00       	jmpq   8083748 <asm_opcode+0x1e7>
 8083739:	b8 00 00 00 00       	mov    $0x0,%eax
 808373e:	e8 87 4f fd ff       	callq  80586ca <next>
 8083743:	e9 7a fe ff ff       	jmpq   80835c2 <asm_opcode+0x61>
 8083748:	b8 00 00 00 00       	mov    $0x0,%eax
 808374d:	89 45 d0             	mov    %eax,-0x30(%rbp)
 8083750:	b8 00 00 00 00       	mov    $0x0,%eax
 8083755:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8083758:	48 8d 05 33 96 00 00 	lea    0x9633(%rip),%rax        # 808cd92 <asm_instrs>
 808375f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8083763:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083767:	0f b7 08             	movzwl (%rax),%ecx
 808376a:	83 f9 00             	cmp    $0x0,%ecx
 808376d:	0f 84 5e 04 00 00    	je     8083bd1 <asm_opcode+0x670>
 8083773:	e9 1a 00 00 00       	jmpq   8083792 <asm_opcode+0x231>
 8083778:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808377c:	48 89 c1             	mov    %rax,%rcx
 808377f:	48 ba 0a 00 00 00 00 	movabs $0xa,%rdx
 8083786:	00 00 00 
 8083789:	48 01 d0             	add    %rdx,%rax
 808378c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 8083790:	eb d1                	jmp    8083763 <asm_opcode+0x202>
 8083792:	b8 00 00 00 00       	mov    $0x0,%eax
 8083797:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 808379a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808379e:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80837a5:	00 00 00 
 80837a8:	48 01 c8             	add    %rcx,%rax
 80837ab:	0f b7 08             	movzwl (%rax),%ecx
 80837ae:	81 e1 00 08 00 00    	and    $0x800,%ecx
 80837b4:	85 c9                	test   %ecx,%ecx
 80837b6:	0f 84 3f 00 00 00    	je     80837fb <asm_opcode+0x29a>
 80837bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80837c0:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80837c3:	0f b7 10             	movzwl (%rax),%edx
 80837c6:	48 29 d1             	sub    %rdx,%rcx
 80837c9:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 80837cc:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80837cf:	83 f8 30             	cmp    $0x30,%eax
 80837d2:	0f 83 19 00 00 00    	jae    80837f1 <asm_opcode+0x290>
 80837d8:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80837db:	b9 06 00 00 00       	mov    $0x6,%ecx
 80837e0:	99                   	cltd   
 80837e1:	f7 f9                	idiv   %ecx
 80837e3:	83 fa 00             	cmp    $0x0,%edx
 80837e6:	0f 85 05 00 00 00    	jne    80837f1 <asm_opcode+0x290>
 80837ec:	e9 05 00 00 00       	jmpq   80837f6 <asm_opcode+0x295>
 80837f1:	e9 82 ff ff ff       	jmpq   8083778 <asm_opcode+0x217>
 80837f6:	e9 25 02 00 00       	jmpq   8083a20 <asm_opcode+0x4bf>
 80837fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80837ff:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083806:	00 00 00 
 8083809:	48 01 c8             	add    %rcx,%rax
 808380c:	0f b7 08             	movzwl (%rax),%ecx
 808380f:	81 e1 00 02 00 00    	and    $0x200,%ecx
 8083815:	85 c9                	test   %ecx,%ecx
 8083817:	0f 84 51 00 00 00    	je     808386e <asm_opcode+0x30d>
 808381d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083821:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8083824:	0f b7 10             	movzwl (%rax),%edx
 8083827:	39 d1                	cmp    %edx,%ecx
 8083829:	0f 8c 1a 00 00 00    	jl     8083849 <asm_opcode+0x2e8>
 808382f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083833:	0f b7 08             	movzwl (%rax),%ecx
 8083836:	83 c1 28             	add    $0x28,%ecx
 8083839:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808383c:	39 c8                	cmp    %ecx,%eax
 808383e:	0f 8d 05 00 00 00    	jge    8083849 <asm_opcode+0x2e8>
 8083844:	e9 05 00 00 00       	jmpq   808384e <asm_opcode+0x2ed>
 8083849:	e9 2a ff ff ff       	jmpq   8083778 <asm_opcode+0x217>
 808384e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083852:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8083855:	0f b7 10             	movzwl (%rax),%edx
 8083858:	48 29 d1             	sub    %rdx,%rcx
 808385b:	48 89 c8             	mov    %rcx,%rax
 808385e:	b9 05 00 00 00       	mov    $0x5,%ecx
 8083863:	99                   	cltd   
 8083864:	f7 f9                	idiv   %ecx
 8083866:	89 55 c4             	mov    %edx,-0x3c(%rbp)
 8083869:	e9 b2 01 00 00       	jmpq   8083a20 <asm_opcode+0x4bf>
 808386e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083872:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083879:	00 00 00 
 808387c:	48 01 c8             	add    %rcx,%rax
 808387f:	0f b7 08             	movzwl (%rax),%ecx
 8083882:	81 e1 80 00 00 00    	and    $0x80,%ecx
 8083888:	85 c9                	test   %ecx,%ecx
 808388a:	0f 84 51 00 00 00    	je     80838e1 <asm_opcode+0x380>
 8083890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083894:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8083897:	0f b7 10             	movzwl (%rax),%edx
 808389a:	39 d1                	cmp    %edx,%ecx
 808389c:	0f 8c 1a 00 00 00    	jl     80838bc <asm_opcode+0x35b>
 80838a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80838a6:	0f b7 08             	movzwl (%rax),%ecx
 80838a9:	83 c1 23             	add    $0x23,%ecx
 80838ac:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80838af:	39 c8                	cmp    %ecx,%eax
 80838b1:	0f 8d 05 00 00 00    	jge    80838bc <asm_opcode+0x35b>
 80838b7:	e9 05 00 00 00       	jmpq   80838c1 <asm_opcode+0x360>
 80838bc:	e9 b7 fe ff ff       	jmpq   8083778 <asm_opcode+0x217>
 80838c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80838c5:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80838c8:	0f b7 10             	movzwl (%rax),%edx
 80838cb:	48 29 d1             	sub    %rdx,%rcx
 80838ce:	48 89 c8             	mov    %rcx,%rax
 80838d1:	b9 05 00 00 00       	mov    $0x5,%ecx
 80838d6:	99                   	cltd   
 80838d7:	f7 f9                	idiv   %ecx
 80838d9:	89 55 c4             	mov    %edx,-0x3c(%rbp)
 80838dc:	e9 3f 01 00 00       	jmpq   8083a20 <asm_opcode+0x4bf>
 80838e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80838e5:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80838ec:	00 00 00 
 80838ef:	48 01 c8             	add    %rcx,%rax
 80838f2:	0f b7 08             	movzwl (%rax),%ecx
 80838f5:	83 e1 40             	and    $0x40,%ecx
 80838f8:	85 c9                	test   %ecx,%ecx
 80838fa:	0f 84 36 00 00 00    	je     8083936 <asm_opcode+0x3d5>
 8083900:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083904:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8083907:	0f b7 10             	movzwl (%rax),%edx
 808390a:	39 d1                	cmp    %edx,%ecx
 808390c:	0f 8c 1a 00 00 00    	jl     808392c <asm_opcode+0x3cb>
 8083912:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083916:	0f b7 08             	movzwl (%rax),%ecx
 8083919:	83 c1 1e             	add    $0x1e,%ecx
 808391c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808391f:	39 c8                	cmp    %ecx,%eax
 8083921:	0f 8d 05 00 00 00    	jge    808392c <asm_opcode+0x3cb>
 8083927:	e9 05 00 00 00       	jmpq   8083931 <asm_opcode+0x3d0>
 808392c:	e9 47 fe ff ff       	jmpq   8083778 <asm_opcode+0x217>
 8083931:	e9 ea 00 00 00       	jmpq   8083a20 <asm_opcode+0x4bf>
 8083936:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808393a:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083941:	00 00 00 
 8083944:	48 01 c8             	add    %rcx,%rax
 8083947:	0f b7 08             	movzwl (%rax),%ecx
 808394a:	83 e1 02             	and    $0x2,%ecx
 808394d:	85 c9                	test   %ecx,%ecx
 808394f:	0f 84 46 00 00 00    	je     808399b <asm_opcode+0x43a>
 8083955:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083959:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 808395c:	0f b7 10             	movzwl (%rax),%edx
 808395f:	39 d1                	cmp    %edx,%ecx
 8083961:	0f 8c 1a 00 00 00    	jl     8083981 <asm_opcode+0x420>
 8083967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808396b:	0f b7 08             	movzwl (%rax),%ecx
 808396e:	83 c1 05             	add    $0x5,%ecx
 8083971:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083974:	39 c8                	cmp    %ecx,%eax
 8083976:	0f 8d 05 00 00 00    	jge    8083981 <asm_opcode+0x420>
 808397c:	e9 05 00 00 00       	jmpq   8083986 <asm_opcode+0x425>
 8083981:	e9 f2 fd ff ff       	jmpq   8083778 <asm_opcode+0x217>
 8083986:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808398a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 808398d:	0f b7 10             	movzwl (%rax),%edx
 8083990:	48 29 d1             	sub    %rdx,%rcx
 8083993:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
 8083996:	e9 85 00 00 00       	jmpq   8083a20 <asm_opcode+0x4bf>
 808399b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808399f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80839a6:	00 00 00 
 80839a9:	48 01 c8             	add    %rcx,%rax
 80839ac:	0f b7 08             	movzwl (%rax),%ecx
 80839af:	81 e1 00 10 00 00    	and    $0x1000,%ecx
 80839b5:	85 c9                	test   %ecx,%ecx
 80839b7:	0f 84 4c 00 00 00    	je     8083a09 <asm_opcode+0x4a8>
 80839bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80839c1:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80839c4:	0f b7 10             	movzwl (%rax),%edx
 80839c7:	39 d1                	cmp    %edx,%ecx
 80839c9:	0f 8c 1d 00 00 00    	jl     80839ec <asm_opcode+0x48b>
 80839cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80839d3:	0f b7 08             	movzwl (%rax),%ecx
 80839d6:	83 c1 05             	add    $0x5,%ecx
 80839d9:	83 e9 01             	sub    $0x1,%ecx
 80839dc:	8b 45 f0             	mov    -0x10(%rbp),%eax
 80839df:	39 c8                	cmp    %ecx,%eax
 80839e1:	0f 8d 05 00 00 00    	jge    80839ec <asm_opcode+0x48b>
 80839e7:	e9 05 00 00 00       	jmpq   80839f1 <asm_opcode+0x490>
 80839ec:	e9 87 fd ff ff       	jmpq   8083778 <asm_opcode+0x217>
 80839f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80839f5:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80839f8:	0f b7 10             	movzwl (%rax),%edx
 80839fb:	48 29 d1             	sub    %rdx,%rcx
 80839fe:	83 c1 01             	add    $0x1,%ecx
 8083a01:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
 8083a04:	e9 17 00 00 00       	jmpq   8083a20 <asm_opcode+0x4bf>
 8083a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083a0d:	0f b7 08             	movzwl (%rax),%ecx
 8083a10:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083a13:	39 c1                	cmp    %eax,%ecx
 8083a15:	0f 84 05 00 00 00    	je     8083a20 <asm_opcode+0x4bf>
 8083a1b:	e9 58 fd ff ff       	jmpq   8083778 <asm_opcode+0x217>
 8083a20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083a24:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8083a2b:	00 00 00 
 8083a2e:	48 01 c8             	add    %rcx,%rax
 8083a31:	0f b6 08             	movzbl (%rax),%ecx
 8083a34:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8083a37:	39 c1                	cmp    %eax,%ecx
 8083a39:	0f 84 05 00 00 00    	je     8083a44 <asm_opcode+0x4e3>
 8083a3f:	e9 34 fd ff ff       	jmpq   8083778 <asm_opcode+0x217>
 8083a44:	b8 00 00 00 00       	mov    $0x0,%eax
 8083a49:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8083a4c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083a4f:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8083a52:	39 c8                	cmp    %ecx,%eax
 8083a54:	0f 8d 6d 01 00 00    	jge    8083bc7 <asm_opcode+0x666>
 8083a5a:	e9 0e 00 00 00       	jmpq   8083a6d <asm_opcode+0x50c>
 8083a5f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083a62:	48 89 c1             	mov    %rax,%rcx
 8083a65:	83 c0 01             	add    $0x1,%eax
 8083a68:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8083a6b:	eb df                	jmp    8083a4c <asm_opcode+0x4eb>
 8083a6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083a71:	48 b9 07 00 00 00 00 	movabs $0x7,%rcx
 8083a78:	00 00 00 
 8083a7b:	48 01 c8             	add    %rcx,%rax
 8083a7e:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 8083a81:	48 63 c9             	movslq %ecx,%rcx
 8083a84:	48 89 ca             	mov    %rcx,%rdx
 8083a87:	48 01 d0             	add    %rdx,%rax
 8083a8a:	0f b6 08             	movzbl (%rax),%ecx
 8083a8d:	89 8d 60 ff ff ff    	mov    %ecx,-0xa0(%rbp)
 8083a93:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
 8083a99:	83 e0 1f             	and    $0x1f,%eax
 8083a9c:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
 8083aa2:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
 8083aa8:	e9 05 00 00 00       	jmpq   8083ab2 <asm_opcode+0x551>
 8083aad:	e9 09 00 00 00       	jmpq   8083abb <asm_opcode+0x55a>
 8083ab2:	83 f8 17             	cmp    $0x17,%eax
 8083ab5:	0f 85 12 00 00 00    	jne    8083acd <asm_opcode+0x56c>
 8083abb:	b8 00 e8 00 00       	mov    $0xe800,%eax
 8083ac0:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083ac3:	e9 81 00 00 00       	jmpq   8083b49 <asm_opcode+0x5e8>
 8083ac8:	e9 09 00 00 00       	jmpq   8083ad6 <asm_opcode+0x575>
 8083acd:	83 f8 18             	cmp    $0x18,%eax
 8083ad0:	0f 85 12 00 00 00    	jne    8083ae8 <asm_opcode+0x587>
 8083ad6:	b8 0f 00 00 00       	mov    $0xf,%eax
 8083adb:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083ade:	e9 66 00 00 00       	jmpq   8083b49 <asm_opcode+0x5e8>
 8083ae3:	e9 09 00 00 00       	jmpq   8083af1 <asm_opcode+0x590>
 8083ae8:	83 f8 19             	cmp    $0x19,%eax
 8083aeb:	0f 85 12 00 00 00    	jne    8083b03 <asm_opcode+0x5a2>
 8083af1:	b8 0e 00 00 00       	mov    $0xe,%eax
 8083af6:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083af9:	e9 4b 00 00 00       	jmpq   8083b49 <asm_opcode+0x5e8>
 8083afe:	e9 09 00 00 00       	jmpq   8083b0c <asm_opcode+0x5ab>
 8083b03:	83 f8 1a             	cmp    $0x1a,%eax
 8083b06:	0f 85 12 00 00 00    	jne    8083b1e <asm_opcode+0x5bd>
 8083b0c:	b8 00 e0 00 00       	mov    $0xe000,%eax
 8083b11:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083b14:	e9 30 00 00 00       	jmpq   8083b49 <asm_opcode+0x5e8>
 8083b19:	e9 09 00 00 00       	jmpq   8083b27 <asm_opcode+0x5c6>
 8083b1e:	83 f8 1b             	cmp    $0x1b,%eax
 8083b21:	0f 85 0d 00 00 00    	jne    8083b34 <asm_opcode+0x5d3>
 8083b27:	b8 00 60 00 00       	mov    $0x6000,%eax
 8083b2c:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083b2f:	e9 15 00 00 00       	jmpq   8083b49 <asm_opcode+0x5e8>
 8083b34:	b8 01 00 00 00       	mov    $0x1,%eax
 8083b39:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
 8083b3f:	d3 e0                	shl    %cl,%eax
 8083b41:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083b44:	e9 00 00 00 00       	jmpq   8083b49 <asm_opcode+0x5e8>
 8083b49:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
 8083b4f:	81 e0 80 00 00 00    	and    $0x80,%eax
 8083b55:	85 c0                	test   %eax,%eax
 8083b57:	0f 84 0c 00 00 00    	je     8083b69 <asm_opcode+0x608>
 8083b5d:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083b60:	81 c8 00 00 00 40    	or     $0x40000000,%eax
 8083b66:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083b69:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083b6c:	48 63 c0             	movslq %eax,%rax
 8083b6f:	48 89 c1             	mov    %rax,%rcx
 8083b72:	48 c1 e1 02          	shl    $0x2,%rcx
 8083b76:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 8083b7d:	48 89 ca             	mov    %rcx,%rdx
 8083b80:	48 01 d0             	add    %rdx,%rax
 8083b83:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8083b86:	89 08                	mov    %ecx,(%rax)
 8083b88:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083b8b:	48 63 c0             	movslq %eax,%rax
 8083b8e:	48 89 c1             	mov    %rax,%rcx
 8083b91:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8083b98:	00 00 00 
 8083b9b:	48 0f af c8          	imul   %rax,%rcx
 8083b9f:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8083ba6:	48 89 ca             	mov    %rcx,%rdx
 8083ba9:	48 01 d0             	add    %rdx,%rax
 8083bac:	8b 08                	mov    (%rax),%ecx
 8083bae:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083bb1:	48 21 c1             	and    %rax,%rcx
 8083bb4:	83 f9 00             	cmp    $0x0,%ecx
 8083bb7:	0f 85 05 00 00 00    	jne    8083bc2 <asm_opcode+0x661>
 8083bbd:	e9 0a 00 00 00       	jmpq   8083bcc <asm_opcode+0x66b>
 8083bc2:	e9 98 fe ff ff       	jmpq   8083a5f <asm_opcode+0x4fe>
 8083bc7:	e9 05 00 00 00       	jmpq   8083bd1 <asm_opcode+0x670>
 8083bcc:	e9 a7 fb ff ff       	jmpq   8083778 <asm_opcode+0x217>
 8083bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083bd5:	0f b7 08             	movzwl (%rax),%ecx
 8083bd8:	83 f9 00             	cmp    $0x0,%ecx
 8083bdb:	0f 85 bd 00 00 00    	jne    8083c9e <asm_opcode+0x73d>
 8083be1:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083be4:	81 f8 88 03 00 00    	cmp    $0x388,%eax
 8083bea:	0f 8c 7f 00 00 00    	jl     8083c6f <asm_opcode+0x70e>
 8083bf0:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083bf3:	81 f8 e0 03 00 00    	cmp    $0x3e0,%eax
 8083bf9:	0f 8f 70 00 00 00    	jg     8083c6f <asm_opcode+0x70e>
 8083bff:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083c02:	81 e8 88 03 00 00    	sub    $0x388,%eax
 8083c08:	48 63 c0             	movslq %eax,%rax
 8083c0b:	48 89 c1             	mov    %rax,%rcx
 8083c0e:	48 c1 e1 01          	shl    $0x1,%rcx
 8083c12:	48 8d 05 69 9c 00 00 	lea    0x9c69(%rip),%rax        # 808d882 <op0_codes>
 8083c19:	48 89 ca             	mov    %rcx,%rdx
 8083c1c:	48 01 d0             	add    %rdx,%rax
 8083c1f:	0f b7 08             	movzwl (%rax),%ecx
 8083c22:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
 8083c28:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
 8083c2e:	81 e0 00 ff 00 00    	and    $0xff00,%eax
 8083c34:	85 c0                	test   %eax,%eax
 8083c36:	0f 84 16 00 00 00    	je     8083c52 <asm_opcode+0x6f1>
 8083c3c:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
 8083c42:	c1 f8 08             	sar    $0x8,%eax
 8083c45:	48 89 c7             	mov    %rax,%rdi
 8083c48:	b8 00 00 00 00       	mov    $0x0,%eax
 8083c4d:	e8 51 9f ff ff       	callq  807dba3 <g>
 8083c52:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
 8083c58:	48 89 c7             	mov    %rax,%rdi
 8083c5b:	b8 00 00 00 00       	mov    $0x0,%eax
 8083c60:	e8 3e 9f ff ff       	callq  807dba3 <g>
 8083c65:	e9 cf 0d 00 00       	jmpq   8084a39 <asm_opcode+0x14d8>
 8083c6a:	e9 2f 00 00 00       	jmpq   8083c9e <asm_opcode+0x73d>
 8083c6f:	b8 00 00 00 00       	mov    $0x0,%eax
 8083c74:	48 89 c6             	mov    %rax,%rsi
 8083c77:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083c7a:	48 89 c7             	mov    %rax,%rdi
 8083c7d:	b8 00 00 00 00       	mov    $0x0,%eax
 8083c82:	e8 2d dc fc ff       	callq  80518b4 <get_tok_str>
 8083c87:	48 89 c6             	mov    %rax,%rsi
 8083c8a:	48 8d 05 21 9d 00 00 	lea    0x9d21(%rip),%rax        # 808d9b2 <L.114>
 8083c91:	48 89 c7             	mov    %rax,%rdi
 8083c94:	b8 00 00 00 00       	mov    $0x0,%eax
 8083c99:	e8 29 9a fc ff       	callq  804d6c7 <tcc_error>
 8083c9e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8083ca1:	83 f8 04             	cmp    $0x4,%eax
 8083ca4:	0f 85 3a 01 00 00    	jne    8083de4 <asm_opcode+0x883>
 8083caa:	b8 00 00 00 00       	mov    $0x0,%eax
 8083caf:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8083cb2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8083cb5:	83 f8 04             	cmp    $0x4,%eax
 8083cb8:	0f 85 c2 00 00 00    	jne    8083d80 <asm_opcode+0x81f>
 8083cbe:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083cc1:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8083cc4:	39 c8                	cmp    %ecx,%eax
 8083cc6:	0f 8d b4 00 00 00    	jge    8083d80 <asm_opcode+0x81f>
 8083ccc:	e9 0e 00 00 00       	jmpq   8083cdf <asm_opcode+0x77e>
 8083cd1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083cd4:	48 89 c1             	mov    %rax,%rcx
 8083cd7:	83 c0 01             	add    $0x1,%eax
 8083cda:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8083cdd:	eb d3                	jmp    8083cb2 <asm_opcode+0x751>
 8083cdf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083ce2:	48 63 c0             	movslq %eax,%rax
 8083ce5:	48 89 c1             	mov    %rax,%rcx
 8083ce8:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8083cef:	00 00 00 
 8083cf2:	48 0f af c8          	imul   %rax,%rcx
 8083cf6:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8083cfd:	48 89 ca             	mov    %rcx,%rdx
 8083d00:	48 01 d0             	add    %rdx,%rax
 8083d03:	8b 08                	mov    (%rax),%ecx
 8083d05:	83 e1 0f             	and    $0xf,%ecx
 8083d08:	85 c9                	test   %ecx,%ecx
 8083d0a:	0f 84 6b 00 00 00    	je     8083d7b <asm_opcode+0x81a>
 8083d10:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083d13:	48 63 c0             	movslq %eax,%rax
 8083d16:	48 89 c1             	mov    %rax,%rcx
 8083d19:	48 c1 e1 02          	shl    $0x2,%rcx
 8083d1d:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 8083d24:	48 89 ca             	mov    %rcx,%rdx
 8083d27:	48 01 d0             	add    %rdx,%rax
 8083d2a:	8b 08                	mov    (%rax),%ecx
 8083d2c:	81 e1 00 00 0c 00    	and    $0xc0000,%ecx
 8083d32:	85 c9                	test   %ecx,%ecx
 8083d34:	0f 84 05 00 00 00    	je     8083d3f <asm_opcode+0x7de>
 8083d3a:	e9 3c 00 00 00       	jmpq   8083d7b <asm_opcode+0x81a>
 8083d3f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8083d42:	48 63 c0             	movslq %eax,%rax
 8083d45:	48 89 c1             	mov    %rax,%rcx
 8083d48:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8083d4f:	00 00 00 
 8083d52:	48 0f af c8          	imul   %rax,%rcx
 8083d56:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8083d5d:	48 89 ca             	mov    %rcx,%rdx
 8083d60:	48 01 d0             	add    %rdx,%rax
 8083d63:	8b 08                	mov    (%rax),%ecx
 8083d65:	83 e1 0f             	and    $0xf,%ecx
 8083d68:	48 8d 05 f5 8f 00 00 	lea    0x8ff5(%rip),%rax        # 808cd64 <reg_to_size>
 8083d6f:	48 89 ca             	mov    %rcx,%rdx
 8083d72:	48 01 d0             	add    %rdx,%rax
 8083d75:	0f b6 08             	movzbl (%rax),%ecx
 8083d78:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
 8083d7b:	e9 51 ff ff ff       	jmpq   8083cd1 <asm_opcode+0x770>
 8083d80:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8083d83:	83 f8 04             	cmp    $0x4,%eax
 8083d86:	0f 85 58 00 00 00    	jne    8083de4 <asm_opcode+0x883>
 8083d8c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083d8f:	81 f8 7c 02 00 00    	cmp    $0x27c,%eax
 8083d95:	0f 84 14 00 00 00    	je     8083daf <asm_opcode+0x84e>
 8083d9b:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083d9e:	81 f8 80 02 00 00    	cmp    $0x280,%eax
 8083da4:	0f 84 05 00 00 00    	je     8083daf <asm_opcode+0x84e>
 8083daa:	e9 21 00 00 00       	jmpq   8083dd0 <asm_opcode+0x86f>
 8083daf:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8083db5:	81 e0 00 d2 00 00    	and    $0xd200,%eax
 8083dbb:	85 c0                	test   %eax,%eax
 8083dbd:	0f 84 0d 00 00 00    	je     8083dd0 <asm_opcode+0x86f>
 8083dc3:	b8 02 00 00 00       	mov    $0x2,%eax
 8083dc8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
 8083dcb:	e9 14 00 00 00       	jmpq   8083de4 <asm_opcode+0x883>
 8083dd0:	48 8d 05 ef 9b 00 00 	lea    0x9bef(%rip),%rax        # 808d9c6 <L.115>
 8083dd7:	48 89 c7             	mov    %rax,%rdi
 8083dda:	b8 00 00 00 00       	mov    $0x0,%eax
 8083ddf:	e8 e3 98 fc ff       	callq  804d6c7 <tcc_error>
 8083de4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8083de7:	83 f8 01             	cmp    $0x1,%eax
 8083dea:	0f 84 27 00 00 00    	je     8083e17 <asm_opcode+0x8b6>
 8083df0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083df4:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083dfb:	00 00 00 
 8083dfe:	48 01 c8             	add    %rcx,%rax
 8083e01:	0f b7 08             	movzwl (%rax),%ecx
 8083e04:	81 e1 00 01 00 00    	and    $0x100,%ecx
 8083e0a:	85 c9                	test   %ecx,%ecx
 8083e0c:	0f 85 05 00 00 00    	jne    8083e17 <asm_opcode+0x8b6>
 8083e12:	e9 17 00 00 00       	jmpq   8083e2e <asm_opcode+0x8cd>
 8083e17:	b8 66 00 00 00       	mov    $0x66,%eax
 8083e1c:	48 89 c7             	mov    %rax,%rdi
 8083e1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8083e24:	e8 7a 9d ff ff       	callq  807dba3 <g>
 8083e29:	e9 57 00 00 00       	jmpq   8083e85 <asm_opcode+0x924>
 8083e2e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8083e31:	83 f8 03             	cmp    $0x3,%eax
 8083e34:	0f 85 4b 00 00 00    	jne    8083e85 <asm_opcode+0x924>
 8083e3a:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083e3d:	81 f8 7c 02 00 00    	cmp    $0x27c,%eax
 8083e43:	0f 84 14 00 00 00    	je     8083e5d <asm_opcode+0x8fc>
 8083e49:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8083e4c:	81 f8 80 02 00 00    	cmp    $0x280,%eax
 8083e52:	0f 84 05 00 00 00    	je     8083e5d <asm_opcode+0x8fc>
 8083e58:	e9 16 00 00 00       	jmpq   8083e73 <asm_opcode+0x912>
 8083e5d:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 8083e63:	83 e0 08             	and    $0x8,%eax
 8083e66:	85 c0                	test   %eax,%eax
 8083e68:	0f 84 05 00 00 00    	je     8083e73 <asm_opcode+0x912>
 8083e6e:	e9 12 00 00 00       	jmpq   8083e85 <asm_opcode+0x924>
 8083e73:	b8 48 00 00 00       	mov    $0x48,%eax
 8083e78:	48 89 c7             	mov    %rax,%rdi
 8083e7b:	b8 00 00 00 00       	mov    $0x0,%eax
 8083e80:	e8 1e 9d ff ff       	callq  807dba3 <g>
 8083e85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083e89:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8083e90:	00 00 00 
 8083e93:	48 01 c8             	add    %rcx,%rax
 8083e96:	0f b7 08             	movzwl (%rax),%ecx
 8083e99:	83 e1 20             	and    $0x20,%ecx
 8083e9c:	85 c9                	test   %ecx,%ecx
 8083e9e:	0f 84 12 00 00 00    	je     8083eb6 <asm_opcode+0x955>
 8083ea4:	b8 9b 00 00 00       	mov    $0x9b,%eax
 8083ea9:	48 89 c7             	mov    %rax,%rdi
 8083eac:	b8 00 00 00 00       	mov    $0x0,%eax
 8083eb1:	e8 ed 9c ff ff       	callq  807dba3 <g>
 8083eb6:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8083eb9:	85 c0                	test   %eax,%eax
 8083ebb:	0f 84 10 00 00 00    	je     8083ed1 <asm_opcode+0x970>
 8083ec1:	8b 45 cc             	mov    -0x34(%rbp),%eax
 8083ec4:	48 89 c7             	mov    %rax,%rdi
 8083ec7:	b8 00 00 00 00       	mov    $0x0,%eax
 8083ecc:	e8 d2 9c ff ff       	callq  807dba3 <g>
 8083ed1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8083ed5:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 8083edc:	00 00 00 
 8083edf:	48 01 c8             	add    %rcx,%rax
 8083ee2:	0f b7 08             	movzwl (%rax),%ecx
 8083ee5:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 8083ee8:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083eeb:	83 f8 69             	cmp    $0x69,%eax
 8083eee:	0f 84 11 00 00 00    	je     8083f05 <asm_opcode+0x9a4>
 8083ef4:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083ef7:	83 f8 6b             	cmp    $0x6b,%eax
 8083efa:	0f 84 05 00 00 00    	je     8083f05 <asm_opcode+0x9a4>
 8083f00:	e9 48 00 00 00       	jmpq   8083f4d <asm_opcode+0x9ec>
 8083f05:	8b 45 c8             	mov    -0x38(%rbp),%eax
 8083f08:	83 f8 02             	cmp    $0x2,%eax
 8083f0b:	0f 85 3c 00 00 00    	jne    8083f4d <asm_opcode+0x9ec>
 8083f11:	b8 03 00 00 00       	mov    $0x3,%eax
 8083f16:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8083f19:	b8 18 00 00 00       	mov    $0x18,%eax
 8083f1e:	49 89 c2             	mov    %rax,%r10
 8083f21:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 8083f25:	48 89 c6             	mov    %rax,%rsi
 8083f28:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 8083f2c:	48 89 c7             	mov    %rax,%rdi
 8083f2f:	4c 89 d2             	mov    %r10,%rdx
 8083f32:	b8 00 00 00 00       	mov    $0x0,%eax
 8083f37:	e8 34 2d 00 00       	callq  8086c70 <memcpy>
 8083f3c:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
 8083f42:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
 8083f48:	e9 2e 01 00 00       	jmpq   808407b <asm_opcode+0xb1a>
 8083f4d:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083f50:	81 f8 cd 00 00 00    	cmp    $0xcd,%eax
 8083f56:	0f 85 36 00 00 00    	jne    8083f92 <asm_opcode+0xa31>
 8083f5c:	8b 45 80             	mov    -0x80(%rbp),%eax
 8083f5f:	83 f8 03             	cmp    $0x3,%eax
 8083f62:	0f 85 2a 00 00 00    	jne    8083f92 <asm_opcode+0xa31>
 8083f68:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 8083f6c:	85 c0                	test   %eax,%eax
 8083f6e:	0f 84 05 00 00 00    	je     8083f79 <asm_opcode+0xa18>
 8083f74:	e9 19 00 00 00       	jmpq   8083f92 <asm_opcode+0xa31>
 8083f79:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083f7c:	48 89 c1             	mov    %rax,%rcx
 8083f7f:	83 c0 ff             	add    $0xffffffff,%eax
 8083f82:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083f85:	b8 00 00 00 00       	mov    $0x0,%eax
 8083f8a:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8083f8d:	e9 e9 00 00 00       	jmpq   808407b <asm_opcode+0xb1a>
 8083f92:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083f95:	83 f8 06             	cmp    $0x6,%eax
 8083f98:	0f 84 11 00 00 00    	je     8083faf <asm_opcode+0xa4e>
 8083f9e:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083fa1:	83 f8 07             	cmp    $0x7,%eax
 8083fa4:	0f 84 05 00 00 00    	je     8083faf <asm_opcode+0xa4e>
 8083faa:	e9 54 00 00 00       	jmpq   8084003 <asm_opcode+0xaa2>
 8083faf:	0f be 85 7c ff ff ff 	movsbl -0x84(%rbp),%eax
 8083fb6:	83 f8 04             	cmp    $0x4,%eax
 8083fb9:	0f 8c 24 00 00 00    	jl     8083fe3 <asm_opcode+0xa82>
 8083fbf:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8083fc2:	83 e8 06             	sub    $0x6,%eax
 8083fc5:	81 c0 a0 0f 00 00    	add    $0xfa0,%eax
 8083fcb:	0f be 8d 7c ff ff ff 	movsbl -0x84(%rbp),%ecx
 8083fd2:	83 e9 04             	sub    $0x4,%ecx
 8083fd5:	c1 e1 03             	shl    $0x3,%ecx
 8083fd8:	48 01 c8             	add    %rcx,%rax
 8083fdb:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8083fde:	e9 13 00 00 00       	jmpq   8083ff6 <asm_opcode+0xa95>
 8083fe3:	0f be 85 7c ff ff ff 	movsbl -0x84(%rbp),%eax
 8083fea:	c1 e0 03             	shl    $0x3,%eax
 8083fed:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8083ff0:	48 01 c1             	add    %rax,%rcx
 8083ff3:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 8083ff6:	b8 00 00 00 00       	mov    $0x0,%eax
 8083ffb:	89 45 c8             	mov    %eax,-0x38(%rbp)
 8083ffe:	e9 78 00 00 00       	jmpq   808407b <asm_opcode+0xb1a>
 8084003:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084006:	83 f8 05             	cmp    $0x5,%eax
 8084009:	0f 8f 22 00 00 00    	jg     8084031 <asm_opcode+0xad0>
 808400f:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8084012:	81 e8 f6 01 00 00    	sub    $0x1f6,%eax
 8084018:	b9 05 00 00 00       	mov    $0x5,%ecx
 808401d:	99                   	cltd   
 808401e:	f7 f9                	idiv   %ecx
 8084020:	c1 e0 03             	shl    $0x3,%eax
 8084023:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8084026:	48 01 c1             	add    %rax,%rcx
 8084029:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 808402c:	e9 4a 00 00 00       	jmpq   808407b <asm_opcode+0xb1a>
 8084031:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084035:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 808403c:	00 00 00 
 808403f:	48 01 c8             	add    %rcx,%rax
 8084042:	0f b7 08             	movzwl (%rax),%ecx
 8084045:	81 e1 10 08 00 00    	and    $0x810,%ecx
 808404b:	81 f9 00 08 00 00    	cmp    $0x800,%ecx
 8084051:	0f 85 24 00 00 00    	jne    808407b <asm_opcode+0xb1a>
 8084057:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808405b:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 808405e:	0f b7 10             	movzwl (%rax),%edx
 8084061:	48 29 d1             	sub    %rdx,%rcx
 8084064:	48 89 c8             	mov    %rcx,%rax
 8084067:	b9 06 00 00 00       	mov    $0x6,%ecx
 808406c:	99                   	cltd   
 808406d:	f7 f9                	idiv   %ecx
 808406f:	c1 e0 03             	shl    $0x3,%eax
 8084072:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8084075:	48 01 c1             	add    %rax,%rcx
 8084078:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 808407b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808407f:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8084086:	00 00 00 
 8084089:	48 01 c8             	add    %rcx,%rax
 808408c:	0f b7 08             	movzwl (%rax),%ecx
 808408f:	83 e1 08             	and    $0x8,%ecx
 8084092:	85 c9                	test   %ecx,%ecx
 8084094:	0f 84 cc 00 00 00    	je     8084166 <asm_opcode+0xc05>
 808409a:	b8 00 00 00 00       	mov    $0x0,%eax
 808409f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80840a2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80840a5:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 80840a8:	39 c8                	cmp    %ecx,%eax
 80840aa:	0f 8d 81 00 00 00    	jge    8084131 <asm_opcode+0xbd0>
 80840b0:	e9 0e 00 00 00       	jmpq   80840c3 <asm_opcode+0xb62>
 80840b5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80840b8:	48 89 c1             	mov    %rax,%rcx
 80840bb:	83 c0 01             	add    $0x1,%eax
 80840be:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80840c1:	eb df                	jmp    80840a2 <asm_opcode+0xb41>
 80840c3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80840c6:	48 63 c0             	movslq %eax,%rax
 80840c9:	48 89 c1             	mov    %rax,%rcx
 80840cc:	48 c1 e1 02          	shl    $0x2,%rcx
 80840d0:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 80840d7:	48 89 ca             	mov    %rcx,%rdx
 80840da:	48 01 d0             	add    %rdx,%rax
 80840dd:	8b 08                	mov    (%rax),%ecx
 80840df:	81 e1 0f 04 00 00    	and    $0x40f,%ecx
 80840e5:	85 c9                	test   %ecx,%ecx
 80840e7:	0f 84 42 00 00 00    	je     808412f <asm_opcode+0xbce>
 80840ed:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80840f0:	48 63 c0             	movslq %eax,%rax
 80840f3:	48 89 c1             	mov    %rax,%rcx
 80840f6:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80840fd:	00 00 00 
 8084100:	48 0f af c8          	imul   %rax,%rcx
 8084104:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 808410b:	48 89 ca             	mov    %rcx,%rdx
 808410e:	48 01 d0             	add    %rdx,%rax
 8084111:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8084118:	00 00 00 
 808411b:	48 01 c8             	add    %rcx,%rax
 808411e:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8084121:	0f be 10             	movsbl (%rax),%edx
 8084124:	48 01 d1             	add    %rdx,%rcx
 8084127:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 808412a:	e9 02 00 00 00       	jmpq   8084131 <asm_opcode+0xbd0>
 808412f:	eb 84                	jmp    80840b5 <asm_opcode+0xb54>
 8084131:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084135:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 808413c:	00 00 00 
 808413f:	48 01 c8             	add    %rcx,%rax
 8084142:	0f b7 08             	movzwl (%rax),%ecx
 8084145:	81 f9 b0 00 00 00    	cmp    $0xb0,%ecx
 808414b:	0f 85 15 00 00 00    	jne    8084166 <asm_opcode+0xc05>
 8084151:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8084154:	83 f8 01             	cmp    $0x1,%eax
 8084157:	0f 8c 09 00 00 00    	jl     8084166 <asm_opcode+0xc05>
 808415d:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084160:	83 c0 07             	add    $0x7,%eax
 8084163:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8084166:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808416a:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8084171:	00 00 00 
 8084174:	48 01 c8             	add    %rcx,%rax
 8084177:	0f b7 08             	movzwl (%rax),%ecx
 808417a:	83 e1 02             	and    $0x2,%ecx
 808417d:	85 c9                	test   %ecx,%ecx
 808417f:	0f 84 17 00 00 00    	je     808419c <asm_opcode+0xc3b>
 8084185:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 8084188:	83 f8 01             	cmp    $0x1,%eax
 808418b:	b8 00 00 00 00       	mov    $0x0,%eax
 8084190:	0f 9d c0             	setge  %al
 8084193:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8084196:	48 01 c1             	add    %rax,%rcx
 8084199:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 808419c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80841a0:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80841a7:	00 00 00 
 80841aa:	48 01 c8             	add    %rcx,%rax
 80841ad:	0f b7 08             	movzwl (%rax),%ecx
 80841b0:	83 e1 40             	and    $0x40,%ecx
 80841b3:	85 c9                	test   %ecx,%ecx
 80841b5:	0f 84 29 00 00 00    	je     80841e4 <asm_opcode+0xc83>
 80841bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80841bf:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80841c2:	0f b7 10             	movzwl (%rax),%edx
 80841c5:	48 29 d1             	sub    %rdx,%rcx
 80841c8:	48 63 c9             	movslq %ecx,%rcx
 80841cb:	48 8d 05 9b 8b 00 00 	lea    0x8b9b(%rip),%rax        # 808cd6d <test_bits>
 80841d2:	48 89 ca             	mov    %rcx,%rdx
 80841d5:	48 01 d0             	add    %rdx,%rax
 80841d8:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 80841db:	0f b6 10             	movzbl (%rax),%edx
 80841de:	48 01 d1             	add    %rdx,%rcx
 80841e1:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 80841e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80841e8:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80841ef:	00 00 00 
 80841f2:	48 01 c8             	add    %rcx,%rax
 80841f5:	0f b7 08             	movzwl (%rax),%ecx
 80841f8:	81 e1 00 04 00 00    	and    $0x400,%ecx
 80841fe:	85 c9                	test   %ecx,%ecx
 8084200:	0f 84 46 01 00 00    	je     808434c <asm_opcode+0xdeb>
 8084206:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 808420a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 8084211:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 8084218:	85 c0                	test   %eax,%eax
 808421a:	0f 84 05 00 00 00    	je     8084225 <asm_opcode+0xcc4>
 8084220:	e9 05 00 00 00       	jmpq   808422a <asm_opcode+0xcc9>
 8084225:	e9 c2 00 00 00       	jmpq   80842ec <asm_opcode+0xd8b>
 808422a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 8084231:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 8084238:	00 00 00 
 808423b:	48 01 c8             	add    %rcx,%rax
 808423e:	48 8b 0d 73 9c 00 00 	mov    0x9c73(%rip),%rcx        # 808deb8 <_GLOBAL_OFFSET_TABLE_+0x238>
 8084245:	48 8b 09             	mov    (%rcx),%rcx
 8084248:	48 ba 1c 00 00 00 00 	movabs $0x1c,%rdx
 808424f:	00 00 00 
 8084252:	48 01 d1             	add    %rdx,%rcx
 8084255:	8b 11                	mov    (%rcx),%edx
 8084257:	48 63 d2             	movslq %edx,%rdx
 808425a:	48 8b 08             	mov    (%rax),%rcx
 808425d:	48 89 d0             	mov    %rdx,%rax
 8084260:	48 39 c1             	cmp    %rax,%rcx
 8084263:	0f 84 05 00 00 00    	je     808426e <asm_opcode+0xd0d>
 8084269:	e9 7e 00 00 00       	jmpq   80842ec <asm_opcode+0xd8b>
 808426e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 8084275:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 808427c:	00 00 00 
 808427f:	48 01 c8             	add    %rcx,%rax
 8084282:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 8084285:	48 89 ca             	mov    %rcx,%rdx
 8084288:	48 8b 08             	mov    (%rax),%rcx
 808428b:	48 01 ca             	add    %rcx,%rdx
 808428e:	48 8b 05 9b 9d 00 00 	mov    0x9d9b(%rip),%rax        # 808e030 <_GLOBAL_OFFSET_TABLE_+0x3b0>
 8084295:	8b 00                	mov    (%rax),%eax
 8084297:	48 63 c0             	movslq %eax,%rax
 808429a:	48 89 d1             	mov    %rdx,%rcx
 808429d:	48 89 c2             	mov    %rax,%rdx
 80842a0:	48 29 d1             	sub    %rdx,%rcx
 80842a3:	48 89 c8             	mov    %rcx,%rax
 80842a6:	48 b9 02 00 00 00 00 	movabs $0x2,%rcx
 80842ad:	00 00 00 
 80842b0:	48 29 c8             	sub    %rcx,%rax
 80842b3:	48 89 c1             	mov    %rax,%rcx
 80842b6:	89 8d 4c ff ff ff    	mov    %ecx,-0xb4(%rbp)
 80842bc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
 80842c2:	c1 e0 18             	shl    $0x18,%eax
 80842c5:	c1 f8 18             	sar    $0x18,%eax
 80842c8:	8b 8d 4c ff ff ff    	mov    -0xb4(%rbp),%ecx
 80842ce:	39 c1                	cmp    %eax,%ecx
 80842d0:	0f 85 16 00 00 00    	jne    80842ec <asm_opcode+0xd8b>
 80842d6:	b8 01 00 00 00       	mov    $0x1,%eax
 80842db:	89 45 d0             	mov    %eax,-0x30(%rbp)
 80842de:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
 80842e4:	89 45 80             	mov    %eax,-0x80(%rbp)
 80842e7:	e9 60 00 00 00       	jmpq   808434c <asm_opcode+0xdeb>
 80842ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80842f0:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80842f7:	00 00 00 
 80842fa:	48 01 c8             	add    %rcx,%rax
 80842fd:	0f b7 08             	movzwl (%rax),%ecx
 8084300:	83 e1 01             	and    $0x1,%ecx
 8084303:	85 c9                	test   %ecx,%ecx
 8084305:	0f 84 2d 00 00 00    	je     8084338 <asm_opcode+0xdd7>
 808430b:	8b 45 d8             	mov    -0x28(%rbp),%eax
 808430e:	81 f8 eb 00 00 00    	cmp    $0xeb,%eax
 8084314:	0f 85 0d 00 00 00    	jne    8084327 <asm_opcode+0xdc6>
 808431a:	b8 e9 00 00 00       	mov    $0xe9,%eax
 808431f:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8084322:	e9 0c 00 00 00       	jmpq   8084333 <asm_opcode+0xdd2>
 8084327:	8b 45 d8             	mov    -0x28(%rbp),%eax
 808432a:	81 c0 10 0f 00 00    	add    $0xf10,%eax
 8084330:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8084333:	e9 14 00 00 00       	jmpq   808434c <asm_opcode+0xdeb>
 8084338:	48 8d 05 a2 96 00 00 	lea    0x96a2(%rip),%rax        # 808d9e1 <L.116>
 808433f:	48 89 c7             	mov    %rax,%rdi
 8084342:	b8 00 00 00 00       	mov    $0x0,%eax
 8084347:	e8 7b 93 fc ff       	callq  804d6c7 <tcc_error>
 808434c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 808434f:	c1 f8 08             	sar    $0x8,%eax
 8084352:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 8084355:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8084358:	85 c0                	test   %eax,%eax
 808435a:	0f 84 10 00 00 00    	je     8084370 <asm_opcode+0xe0f>
 8084360:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8084363:	48 89 c7             	mov    %rax,%rdi
 8084366:	b8 00 00 00 00       	mov    $0x0,%eax
 808436b:	e8 33 98 ff ff       	callq  807dba3 <g>
 8084370:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084373:	48 89 c7             	mov    %rax,%rdi
 8084376:	b8 00 00 00 00       	mov    $0x0,%eax
 808437b:	e8 23 98 ff ff       	callq  807dba3 <g>
 8084380:	b8 00 00 00 00       	mov    $0x0,%eax
 8084385:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8084388:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 808438c:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8084393:	00 00 00 
 8084396:	48 01 c8             	add    %rcx,%rax
 8084399:	0f b7 08             	movzwl (%rax),%ecx
 808439c:	81 e1 80 00 00 00    	and    $0x80,%ecx
 80843a2:	85 c9                	test   %ecx,%ecx
 80843a4:	0f 84 34 00 00 00    	je     80843de <asm_opcode+0xe7d>
 80843aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80843ae:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80843b1:	0f b7 10             	movzwl (%rax),%edx
 80843b4:	48 29 d1             	sub    %rdx,%rcx
 80843b7:	48 89 c8             	mov    %rcx,%rax
 80843ba:	b9 05 00 00 00       	mov    $0x5,%ecx
 80843bf:	99                   	cltd   
 80843c0:	f7 f9                	idiv   %ecx
 80843c2:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80843c5:	8b 45 dc             	mov    -0x24(%rbp),%eax
 80843c8:	83 f8 06             	cmp    $0x6,%eax
 80843cb:	0f 85 08 00 00 00    	jne    80843d9 <asm_opcode+0xe78>
 80843d1:	b8 07 00 00 00       	mov    $0x7,%eax
 80843d6:	89 45 dc             	mov    %eax,-0x24(%rbp)
 80843d9:	e9 a1 00 00 00       	jmpq   808447f <asm_opcode+0xf1e>
 80843de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80843e2:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80843e9:	00 00 00 
 80843ec:	48 01 c8             	add    %rcx,%rax
 80843ef:	0f b7 08             	movzwl (%rax),%ecx
 80843f2:	81 e1 00 02 00 00    	and    $0x200,%ecx
 80843f8:	85 c9                	test   %ecx,%ecx
 80843fa:	0f 84 20 00 00 00    	je     8084420 <asm_opcode+0xebf>
 8084400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084404:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8084407:	0f b7 10             	movzwl (%rax),%edx
 808440a:	48 29 d1             	sub    %rdx,%rcx
 808440d:	48 89 c8             	mov    %rcx,%rax
 8084410:	b9 05 00 00 00       	mov    $0x5,%ecx
 8084415:	99                   	cltd   
 8084416:	f7 f9                	idiv   %ecx
 8084418:	89 45 dc             	mov    %eax,-0x24(%rbp)
 808441b:	e9 5f 00 00 00       	jmpq   808447f <asm_opcode+0xf1e>
 8084420:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084424:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 808442b:	00 00 00 
 808442e:	48 01 c8             	add    %rcx,%rax
 8084431:	0f b7 08             	movzwl (%rax),%ecx
 8084434:	81 e1 00 08 00 00    	and    $0x800,%ecx
 808443a:	85 c9                	test   %ecx,%ecx
 808443c:	0f 84 20 00 00 00    	je     8084462 <asm_opcode+0xf01>
 8084442:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084446:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8084449:	0f b7 10             	movzwl (%rax),%edx
 808444c:	48 29 d1             	sub    %rdx,%rcx
 808444f:	48 89 c8             	mov    %rcx,%rax
 8084452:	b9 06 00 00 00       	mov    $0x6,%ecx
 8084457:	99                   	cltd   
 8084458:	f7 f9                	idiv   %ecx
 808445a:	89 45 dc             	mov    %eax,-0x24(%rbp)
 808445d:	e9 1d 00 00 00       	jmpq   808447f <asm_opcode+0xf1e>
 8084462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084466:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 808446d:	00 00 00 
 8084470:	48 01 c8             	add    %rcx,%rax
 8084473:	0f b7 08             	movzwl (%rax),%ecx
 8084476:	c1 f9 0d             	sar    $0xd,%ecx
 8084479:	83 e1 07             	and    $0x7,%ecx
 808447c:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 808447f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084483:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 808448a:	00 00 00 
 808448d:	48 01 c8             	add    %rcx,%rax
 8084490:	0f b7 08             	movzwl (%rax),%ecx
 8084493:	83 e1 10             	and    $0x10,%ecx
 8084496:	85 c9                	test   %ecx,%ecx
 8084498:	0f 84 99 01 00 00    	je     8084637 <asm_opcode+0x10d6>
 808449e:	b8 00 00 00 00       	mov    $0x0,%eax
 80844a3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80844a6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80844a9:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 80844ac:	39 c8                	cmp    %ecx,%eax
 80844ae:	0f 8d 44 00 00 00    	jge    80844f8 <asm_opcode+0xf97>
 80844b4:	e9 0e 00 00 00       	jmpq   80844c7 <asm_opcode+0xf66>
 80844b9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80844bc:	48 89 c1             	mov    %rax,%rcx
 80844bf:	83 c0 01             	add    $0x1,%eax
 80844c2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 80844c5:	eb df                	jmp    80844a6 <asm_opcode+0xf45>
 80844c7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80844ca:	48 63 c0             	movslq %eax,%rax
 80844cd:	48 89 c1             	mov    %rax,%rcx
 80844d0:	48 c1 e1 02          	shl    $0x2,%rcx
 80844d4:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 80844db:	48 89 ca             	mov    %rcx,%rdx
 80844de:	48 01 d0             	add    %rdx,%rax
 80844e1:	8b 08                	mov    (%rax),%ecx
 80844e3:	81 e1 00 00 00 40    	and    $0x40000000,%ecx
 80844e9:	85 c9                	test   %ecx,%ecx
 80844eb:	0f 84 05 00 00 00    	je     80844f6 <asm_opcode+0xf95>
 80844f1:	e9 5c 00 00 00       	jmpq   8084552 <asm_opcode+0xff1>
 80844f6:	eb c1                	jmp    80844b9 <asm_opcode+0xf58>
 80844f8:	b8 00 00 00 00       	mov    $0x0,%eax
 80844fd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8084500:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084503:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8084506:	39 c8                	cmp    %ecx,%eax
 8084508:	0f 8d 44 00 00 00    	jge    8084552 <asm_opcode+0xff1>
 808450e:	e9 0e 00 00 00       	jmpq   8084521 <asm_opcode+0xfc0>
 8084513:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084516:	48 89 c1             	mov    %rax,%rcx
 8084519:	83 c0 01             	add    $0x1,%eax
 808451c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 808451f:	eb df                	jmp    8084500 <asm_opcode+0xf9f>
 8084521:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084524:	48 63 c0             	movslq %eax,%rax
 8084527:	48 89 c1             	mov    %rax,%rcx
 808452a:	48 c1 e1 02          	shl    $0x2,%rcx
 808452e:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 8084535:	48 89 ca             	mov    %rcx,%rdx
 8084538:	48 01 d0             	add    %rdx,%rax
 808453b:	8b 08                	mov    (%rax),%ecx
 808453d:	81 e1 3f 00 20 00    	and    $0x20003f,%ecx
 8084543:	85 c9                	test   %ecx,%ecx
 8084545:	0f 84 05 00 00 00    	je     8084550 <asm_opcode+0xfef>
 808454b:	e9 02 00 00 00       	jmpq   8084552 <asm_opcode+0xff1>
 8084550:	eb c1                	jmp    8084513 <asm_opcode+0xfb2>
 8084552:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084555:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8084558:	b8 00 00 00 00       	mov    $0x0,%eax
 808455d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8084560:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084563:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8084566:	39 c8                	cmp    %ecx,%eax
 8084568:	0f 8d 92 00 00 00    	jge    8084600 <asm_opcode+0x109f>
 808456e:	e9 0e 00 00 00       	jmpq   8084581 <asm_opcode+0x1020>
 8084573:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084576:	48 89 c1             	mov    %rax,%rcx
 8084579:	83 c0 01             	add    $0x1,%eax
 808457c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 808457f:	eb df                	jmp    8084560 <asm_opcode+0xfff>
 8084581:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084584:	48 63 c0             	movslq %eax,%rax
 8084587:	48 89 c1             	mov    %rax,%rcx
 808458a:	48 c1 e1 02          	shl    $0x2,%rcx
 808458e:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 8084595:	48 89 ca             	mov    %rcx,%rdx
 8084598:	48 01 d0             	add    %rdx,%rax
 808459b:	8b 08                	mov    (%rax),%ecx
 808459d:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 80845a0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80845a3:	8b 4d e0             	mov    -0x20(%rbp),%ecx
 80845a6:	39 c8                	cmp    %ecx,%eax
 80845a8:	0f 84 4d 00 00 00    	je     80845fb <asm_opcode+0x109a>
 80845ae:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80845b1:	81 e0 ff 03 00 00    	and    $0x3ff,%eax
 80845b7:	85 c0                	test   %eax,%eax
 80845b9:	0f 84 3c 00 00 00    	je     80845fb <asm_opcode+0x109a>
 80845bf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80845c2:	48 63 c0             	movslq %eax,%rax
 80845c5:	48 89 c1             	mov    %rax,%rcx
 80845c8:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80845cf:	00 00 00 
 80845d2:	48 0f af c8          	imul   %rax,%rcx
 80845d6:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 80845dd:	48 89 ca             	mov    %rcx,%rdx
 80845e0:	48 01 d0             	add    %rdx,%rax
 80845e3:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80845ea:	00 00 00 
 80845ed:	48 01 c8             	add    %rcx,%rax
 80845f0:	0f be 08             	movsbl (%rax),%ecx
 80845f3:	89 4d dc             	mov    %ecx,-0x24(%rbp)
 80845f6:	e9 05 00 00 00       	jmpq   8084600 <asm_opcode+0x109f>
 80845fb:	e9 73 ff ff ff       	jmpq   8084573 <asm_opcode+0x1012>
 8084600:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8084603:	48 63 c0             	movslq %eax,%rax
 8084606:	48 89 c1             	mov    %rax,%rcx
 8084609:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8084610:	00 00 00 
 8084613:	48 0f af c8          	imul   %rax,%rcx
 8084617:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 808461e:	48 89 ca             	mov    %rcx,%rdx
 8084621:	48 01 d0             	add    %rdx,%rax
 8084624:	48 89 c6             	mov    %rax,%rsi
 8084627:	8b 45 dc             	mov    -0x24(%rbp),%eax
 808462a:	48 89 c7             	mov    %rax,%rdi
 808462d:	b8 00 00 00 00       	mov    $0x0,%eax
 8084632:	e8 82 21 00 00       	callq  80867b9 <asm_modrm>
 8084637:	b8 00 00 00 00       	mov    $0x0,%eax
 808463c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 808463f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084642:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8084645:	39 c8                	cmp    %ecx,%eax
 8084647:	0f 8d ec 03 00 00    	jge    8084a39 <asm_opcode+0x14d8>
 808464d:	e9 0e 00 00 00       	jmpq   8084660 <asm_opcode+0x10ff>
 8084652:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084655:	48 89 c1             	mov    %rax,%rcx
 8084658:	83 c0 01             	add    $0x1,%eax
 808465b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 808465e:	eb df                	jmp    808463f <asm_opcode+0x10de>
 8084660:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084663:	48 63 c0             	movslq %eax,%rax
 8084666:	48 89 c1             	mov    %rax,%rcx
 8084669:	48 c1 e1 02          	shl    $0x2,%rcx
 808466d:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
 8084674:	48 89 ca             	mov    %rcx,%rdx
 8084677:	48 01 d0             	add    %rdx,%rax
 808467a:	8b 08                	mov    (%rax),%ecx
 808467c:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 808467f:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084682:	81 e0 00 f8 10 00    	and    $0x10f800,%eax
 8084688:	85 c0                	test   %eax,%eax
 808468a:	0f 84 2d 03 00 00    	je     80849bd <asm_opcode+0x145c>
 8084690:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084693:	81 c8 00 08 00 00    	or     $0x800,%eax
 8084699:	81 c8 00 80 00 00    	or     $0x8000,%eax
 808469f:	81 f8 00 e8 00 00    	cmp    $0xe800,%eax
 80846a5:	0f 85 6a 00 00 00    	jne    8084715 <asm_opcode+0x11b4>
 80846ab:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80846ae:	83 f8 00             	cmp    $0x0,%eax
 80846b1:	0f 85 0d 00 00 00    	jne    80846c4 <asm_opcode+0x1163>
 80846b7:	b8 00 08 00 00       	mov    $0x800,%eax
 80846bc:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80846bf:	e9 51 00 00 00       	jmpq   8084715 <asm_opcode+0x11b4>
 80846c4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80846c7:	83 f8 01             	cmp    $0x1,%eax
 80846ca:	0f 85 0d 00 00 00    	jne    80846dd <asm_opcode+0x117c>
 80846d0:	b8 00 20 00 00       	mov    $0x2000,%eax
 80846d5:	89 45 d8             	mov    %eax,-0x28(%rbp)
 80846d8:	e9 38 00 00 00       	jmpq   8084715 <asm_opcode+0x11b4>
 80846dd:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 80846e0:	83 f8 02             	cmp    $0x2,%eax
 80846e3:	0f 84 17 00 00 00    	je     8084700 <asm_opcode+0x119f>
 80846e9:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80846ec:	81 e0 00 80 00 00    	and    $0x8000,%eax
 80846f2:	83 f8 00             	cmp    $0x0,%eax
 80846f5:	0f 84 05 00 00 00    	je     8084700 <asm_opcode+0x119f>
 80846fb:	e9 0d 00 00 00       	jmpq   808470d <asm_opcode+0x11ac>
 8084700:	b8 00 40 00 00       	mov    $0x4000,%eax
 8084705:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8084708:	e9 08 00 00 00       	jmpq   8084715 <asm_opcode+0x11b4>
 808470d:	b8 00 80 00 00       	mov    $0x8000,%eax
 8084712:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8084715:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084718:	81 e0 00 18 00 00    	and    $0x1800,%eax
 808471e:	85 c0                	test   %eax,%eax
 8084720:	0f 84 93 00 00 00    	je     80847b9 <asm_opcode+0x1258>
 8084726:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084729:	48 63 c0             	movslq %eax,%rax
 808472c:	48 89 c1             	mov    %rax,%rcx
 808472f:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8084736:	00 00 00 
 8084739:	48 0f af c8          	imul   %rax,%rcx
 808473d:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8084744:	48 89 ca             	mov    %rcx,%rdx
 8084747:	48 01 d0             	add    %rdx,%rax
 808474a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8084751:	00 00 00 
 8084754:	48 01 c8             	add    %rcx,%rax
 8084757:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808475e:	00 00 00 
 8084761:	48 01 c8             	add    %rcx,%rax
 8084764:	48 8b 08             	mov    (%rax),%rcx
 8084767:	85 c9                	test   %ecx,%ecx
 8084769:	0f 84 05 00 00 00    	je     8084774 <asm_opcode+0x1213>
 808476f:	e9 9f 00 00 00       	jmpq   8084813 <asm_opcode+0x12b2>
 8084774:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8084777:	48 63 c0             	movslq %eax,%rax
 808477a:	48 89 c1             	mov    %rax,%rcx
 808477d:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8084784:	00 00 00 
 8084787:	48 0f af c8          	imul   %rax,%rcx
 808478b:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8084792:	48 89 ca             	mov    %rcx,%rdx
 8084795:	48 01 d0             	add    %rdx,%rax
 8084798:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808479f:	00 00 00 
 80847a2:	48 01 c8             	add    %rcx,%rax
 80847a5:	8b 08                	mov    (%rax),%ecx
 80847a7:	48 89 cf             	mov    %rcx,%rdi
 80847aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80847af:	e8 ef 93 ff ff       	callq  807dba3 <g>
 80847b4:	e9 ff 01 00 00       	jmpq   80849b8 <asm_opcode+0x1457>
 80847b9:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80847bc:	81 e0 00 20 00 00    	and    $0x2000,%eax
 80847c2:	85 c0                	test   %eax,%eax
 80847c4:	0f 84 a7 00 00 00    	je     8084871 <asm_opcode+0x1310>
 80847ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80847cd:	48 63 c0             	movslq %eax,%rax
 80847d0:	48 89 c1             	mov    %rax,%rcx
 80847d3:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80847da:	00 00 00 
 80847dd:	48 0f af c8          	imul   %rax,%rcx
 80847e1:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 80847e8:	48 89 ca             	mov    %rcx,%rdx
 80847eb:	48 01 d0             	add    %rdx,%rax
 80847ee:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80847f5:	00 00 00 
 80847f8:	48 01 c8             	add    %rcx,%rax
 80847fb:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8084802:	00 00 00 
 8084805:	48 01 c8             	add    %rcx,%rax
 8084808:	48 8b 08             	mov    (%rax),%rcx
 808480b:	85 c9                	test   %ecx,%ecx
 808480d:	0f 84 19 00 00 00    	je     808482c <asm_opcode+0x12cb>
 8084813:	48 8d 05 dc 91 00 00 	lea    0x91dc(%rip),%rax        # 808d9f6 <L.117>
 808481a:	48 89 c7             	mov    %rax,%rdi
 808481d:	b8 00 00 00 00       	mov    $0x0,%eax
 8084822:	e8 a0 8e fc ff       	callq  804d6c7 <tcc_error>
 8084827:	e9 40 00 00 00       	jmpq   808486c <asm_opcode+0x130b>
 808482c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808482f:	48 63 c0             	movslq %eax,%rax
 8084832:	48 89 c1             	mov    %rax,%rcx
 8084835:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 808483c:	00 00 00 
 808483f:	48 0f af c8          	imul   %rax,%rcx
 8084843:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 808484a:	48 89 ca             	mov    %rcx,%rdx
 808484d:	48 01 d0             	add    %rdx,%rax
 8084850:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8084857:	00 00 00 
 808485a:	48 01 c8             	add    %rcx,%rax
 808485d:	8b 08                	mov    (%rax),%ecx
 808485f:	48 89 cf             	mov    %rcx,%rdi
 8084862:	b8 00 00 00 00       	mov    $0x0,%eax
 8084867:	e8 1c 94 ff ff       	callq  807dc88 <gen_le16>
 808486c:	e9 47 01 00 00       	jmpq   80849b8 <asm_opcode+0x1457>
 8084871:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8084875:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 808487c:	00 00 00 
 808487f:	48 01 c8             	add    %rcx,%rax
 8084882:	0f b7 08             	movzwl (%rax),%ecx
 8084885:	81 e1 01 04 00 00    	and    $0x401,%ecx
 808488b:	85 c9                	test   %ecx,%ecx
 808488d:	0f 84 93 00 00 00    	je     8084926 <asm_opcode+0x13c5>
 8084893:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8084896:	85 c0                	test   %eax,%eax
 8084898:	0f 84 45 00 00 00    	je     80848e3 <asm_opcode+0x1382>
 808489e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80848a1:	48 63 c0             	movslq %eax,%rax
 80848a4:	48 89 c1             	mov    %rax,%rcx
 80848a7:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80848ae:	00 00 00 
 80848b1:	48 0f af c8          	imul   %rax,%rcx
 80848b5:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 80848bc:	48 89 ca             	mov    %rcx,%rdx
 80848bf:	48 01 d0             	add    %rdx,%rax
 80848c2:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80848c9:	00 00 00 
 80848cc:	48 01 c8             	add    %rcx,%rax
 80848cf:	8b 08                	mov    (%rax),%ecx
 80848d1:	48 89 cf             	mov    %rcx,%rdi
 80848d4:	b8 00 00 00 00       	mov    $0x0,%eax
 80848d9:	e8 c5 92 ff ff       	callq  807dba3 <g>
 80848de:	e9 3e 00 00 00       	jmpq   8084921 <asm_opcode+0x13c0>
 80848e3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80848e6:	48 63 c0             	movslq %eax,%rax
 80848e9:	48 89 c1             	mov    %rax,%rcx
 80848ec:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80848f3:	00 00 00 
 80848f6:	48 0f af c8          	imul   %rax,%rcx
 80848fa:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8084901:	48 89 ca             	mov    %rcx,%rdx
 8084904:	48 01 d0             	add    %rdx,%rax
 8084907:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808490e:	00 00 00 
 8084911:	48 01 c8             	add    %rcx,%rax
 8084914:	48 89 c7             	mov    %rax,%rdi
 8084917:	b8 00 00 00 00       	mov    $0x0,%eax
 808491c:	e8 ea ea ff ff       	callq  808340b <gen_disp32>
 8084921:	e9 92 00 00 00       	jmpq   80849b8 <asm_opcode+0x1457>
 8084926:	8b 45 d8             	mov    -0x28(%rbp),%eax
 8084929:	81 e0 00 80 00 00    	and    $0x8000,%eax
 808492f:	85 c0                	test   %eax,%eax
 8084931:	0f 84 43 00 00 00    	je     808497a <asm_opcode+0x1419>
 8084937:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808493a:	48 63 c0             	movslq %eax,%rax
 808493d:	48 89 c1             	mov    %rax,%rcx
 8084940:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 8084947:	00 00 00 
 808494a:	48 0f af c8          	imul   %rax,%rcx
 808494e:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8084955:	48 89 ca             	mov    %rcx,%rdx
 8084958:	48 01 d0             	add    %rdx,%rax
 808495b:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8084962:	00 00 00 
 8084965:	48 01 c8             	add    %rcx,%rax
 8084968:	48 89 c7             	mov    %rax,%rdi
 808496b:	b8 00 00 00 00       	mov    $0x0,%eax
 8084970:	e8 1b ea ff ff       	callq  8083390 <gen_expr64>
 8084975:	e9 3e 00 00 00       	jmpq   80849b8 <asm_opcode+0x1457>
 808497a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 808497d:	48 63 c0             	movslq %eax,%rax
 8084980:	48 89 c1             	mov    %rax,%rcx
 8084983:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 808498a:	00 00 00 
 808498d:	48 0f af c8          	imul   %rax,%rcx
 8084991:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8084998:	48 89 ca             	mov    %rcx,%rdx
 808499b:	48 01 d0             	add    %rdx,%rax
 808499e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80849a5:	00 00 00 
 80849a8:	48 01 c8             	add    %rcx,%rax
 80849ab:	48 89 c7             	mov    %rax,%rdi
 80849ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80849b3:	e8 60 e9 ff ff       	callq  8083318 <gen_expr32>
 80849b8:	e9 77 00 00 00       	jmpq   8084a34 <asm_opcode+0x14d3>
 80849bd:	8b 45 d8             	mov    -0x28(%rbp),%eax
 80849c0:	83 e0 0c             	and    $0xc,%eax
 80849c3:	85 c0                	test   %eax,%eax
 80849c5:	0f 84 69 00 00 00    	je     8084a34 <asm_opcode+0x14d3>
 80849cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 80849cf:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80849d6:	00 00 00 
 80849d9:	48 01 c8             	add    %rcx,%rax
 80849dc:	0f b7 08             	movzwl (%rax),%ecx
 80849df:	81 e1 01 04 00 00    	and    $0x401,%ecx
 80849e5:	85 c9                	test   %ecx,%ecx
 80849e7:	0f 84 47 00 00 00    	je     8084a34 <asm_opcode+0x14d3>
 80849ed:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80849f0:	48 63 c0             	movslq %eax,%rax
 80849f3:	48 89 c1             	mov    %rax,%rcx
 80849f6:	48 b8 18 00 00 00 00 	movabs $0x18,%rax
 80849fd:	00 00 00 
 8084a00:	48 0f af c8          	imul   %rax,%rcx
 8084a04:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
 8084a0b:	48 89 ca             	mov    %rcx,%rdx
 8084a0e:	48 01 d0             	add    %rdx,%rax
 8084a11:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8084a18:	00 00 00 
 8084a1b:	48 01 c8             	add    %rcx,%rax
 8084a1e:	0f be 08             	movsbl (%rax),%ecx
 8084a21:	81 c1 e0 00 00 00    	add    $0xe0,%ecx
 8084a27:	48 89 cf             	mov    %rcx,%rdi
 8084a2a:	b8 00 00 00 00       	mov    $0x0,%eax
 8084a2f:	e8 6f 91 ff ff       	callq  807dba3 <g>
 8084a34:	e9 19 fc ff ff       	jmpq   8084652 <asm_opcode+0x10f1>
 8084a39:	c9                   	leaveq 
 8084a3a:	c3                   	retq   

0000000008084a3b <skip_constraint_modifiers>:
 8084a3b:	55                   	push   %rbp
 8084a3c:	48 89 e5             	mov    %rsp,%rbp
 8084a3f:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8084a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8084a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084a4e:	0f be 08             	movsbl (%rax),%ecx
 8084a51:	83 f9 3d             	cmp    $0x3d,%ecx
 8084a54:	0f 84 35 00 00 00    	je     8084a8f <skip_constraint_modifiers+0x54>
 8084a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084a5e:	0f be 08             	movsbl (%rax),%ecx
 8084a61:	83 f9 26             	cmp    $0x26,%ecx
 8084a64:	0f 84 25 00 00 00    	je     8084a8f <skip_constraint_modifiers+0x54>
 8084a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084a6e:	0f be 08             	movsbl (%rax),%ecx
 8084a71:	83 f9 2b             	cmp    $0x2b,%ecx
 8084a74:	0f 84 15 00 00 00    	je     8084a8f <skip_constraint_modifiers+0x54>
 8084a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084a7e:	0f be 08             	movsbl (%rax),%ecx
 8084a81:	83 f9 25             	cmp    $0x25,%ecx
 8084a84:	0f 84 05 00 00 00    	je     8084a8f <skip_constraint_modifiers+0x54>
 8084a8a:	e9 1a 00 00 00       	jmpq   8084aa9 <skip_constraint_modifiers+0x6e>
 8084a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084a93:	48 89 c1             	mov    %rax,%rcx
 8084a96:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 8084a9d:	00 00 00 
 8084aa0:	48 01 d0             	add    %rdx,%rax
 8084aa3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8084aa7:	eb a1                	jmp    8084a4a <skip_constraint_modifiers+0xf>
 8084aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084aad:	e9 00 00 00 00       	jmpq   8084ab2 <skip_constraint_modifiers+0x77>
 8084ab2:	c9                   	leaveq 
 8084ab3:	c3                   	retq   

0000000008084ab4 <asm_compute_constraints>:
 8084ab4:	55                   	push   %rbp
 8084ab5:	48 89 e5             	mov    %rsp,%rbp
 8084ab8:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
 8084abf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8084ac3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8084ac7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8084acb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8084acf:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8084ad3:	b8 00 00 00 00       	mov    $0x0,%eax
 8084ad8:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084ade:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084ae4:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8084ae7:	39 c8                	cmp    %ecx,%eax
 8084ae9:	0f 8d be 00 00 00    	jge    8084bad <asm_compute_constraints+0xf9>
 8084aef:	e9 14 00 00 00       	jmpq   8084b08 <asm_compute_constraints+0x54>
 8084af4:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084afa:	48 89 c1             	mov    %rax,%rcx
 8084afd:	83 c0 01             	add    $0x1,%eax
 8084b00:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084b06:	eb d6                	jmp    8084ade <asm_compute_constraints+0x2a>
 8084b08:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084b0e:	48 63 c0             	movslq %eax,%rax
 8084b11:	48 89 c1             	mov    %rax,%rcx
 8084b14:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8084b1b:	00 00 00 
 8084b1e:	48 0f af c8          	imul   %rax,%rcx
 8084b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084b26:	48 89 ca             	mov    %rcx,%rdx
 8084b29:	48 01 d0             	add    %rdx,%rax
 8084b2c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8084b30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084b34:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8084b3b:	00 00 00 
 8084b3e:	48 01 c8             	add    %rcx,%rax
 8084b41:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8084b46:	89 08                	mov    %ecx,(%rax)
 8084b48:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084b4c:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8084b53:	00 00 00 
 8084b56:	48 01 c8             	add    %rcx,%rax
 8084b59:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8084b5e:	89 08                	mov    %ecx,(%rax)
 8084b60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084b64:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8084b6b:	00 00 00 
 8084b6e:	48 01 c8             	add    %rcx,%rax
 8084b71:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8084b76:	89 08                	mov    %ecx,(%rax)
 8084b78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084b7c:	48 b9 3c 00 00 00 00 	movabs $0x3c,%rcx
 8084b83:	00 00 00 
 8084b86:	48 01 c8             	add    %rcx,%rax
 8084b89:	b9 00 00 00 00       	mov    $0x0,%ecx
 8084b8e:	89 08                	mov    %ecx,(%rax)
 8084b90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084b94:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8084b9b:	00 00 00 
 8084b9e:	48 01 c8             	add    %rcx,%rax
 8084ba1:	b9 00 00 00 00       	mov    $0x0,%ecx
 8084ba6:	89 08                	mov    %ecx,(%rax)
 8084ba8:	e9 47 ff ff ff       	jmpq   8084af4 <asm_compute_constraints+0x40>
 8084bad:	b8 00 00 00 00       	mov    $0x0,%eax
 8084bb2:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084bb8:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084bbe:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8084bc1:	39 c8                	cmp    %ecx,%eax
 8084bc3:	0f 8d 31 02 00 00    	jge    8084dfa <asm_compute_constraints+0x346>
 8084bc9:	e9 14 00 00 00       	jmpq   8084be2 <asm_compute_constraints+0x12e>
 8084bce:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084bd4:	48 89 c1             	mov    %rax,%rcx
 8084bd7:	83 c0 01             	add    $0x1,%eax
 8084bda:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084be0:	eb d6                	jmp    8084bb8 <asm_compute_constraints+0x104>
 8084be2:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084be8:	48 63 c0             	movslq %eax,%rax
 8084beb:	48 89 c1             	mov    %rax,%rcx
 8084bee:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8084bf5:	00 00 00 
 8084bf8:	48 0f af c8          	imul   %rax,%rcx
 8084bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084c00:	48 89 ca             	mov    %rcx,%rdx
 8084c03:	48 01 d0             	add    %rdx,%rax
 8084c06:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8084c0a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084c0e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8084c15:	00 00 00 
 8084c18:	48 01 c8             	add    %rcx,%rax
 8084c1b:	48 8b 08             	mov    (%rax),%rcx
 8084c1e:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
 8084c25:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 8084c2c:	48 89 c7             	mov    %rax,%rdi
 8084c2f:	b8 00 00 00 00       	mov    $0x0,%eax
 8084c34:	e8 02 fe ff ff       	callq  8084a3b <skip_constraint_modifiers>
 8084c39:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 8084c40:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 8084c47:	0f be 08             	movsbl (%rax),%ecx
 8084c4a:	48 89 cf             	mov    %rcx,%rdi
 8084c4d:	b8 00 00 00 00       	mov    $0x0,%eax
 8084c52:	e8 5b 1f 00 00       	callq  8086bb2 <isnum>
 8084c57:	85 c0                	test   %eax,%eax
 8084c59:	0f 85 18 00 00 00    	jne    8084c77 <asm_compute_constraints+0x1c3>
 8084c5f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 8084c66:	0f be 08             	movsbl (%rax),%ecx
 8084c69:	83 f9 5b             	cmp    $0x5b,%ecx
 8084c6c:	0f 84 05 00 00 00    	je     8084c77 <asm_compute_constraints+0x1c3>
 8084c72:	e9 49 01 00 00       	jmpq   8084dc0 <asm_compute_constraints+0x30c>
 8084c77:	b8 00 00 00 00       	mov    $0x0,%eax
 8084c7c:	49 89 c3             	mov    %rax,%r11
 8084c7f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 8084c86:	49 89 c2             	mov    %rax,%r10
 8084c89:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8084c8c:	48 89 c6             	mov    %rax,%rsi
 8084c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084c93:	48 89 c7             	mov    %rax,%rdi
 8084c96:	4c 89 d2             	mov    %r10,%rdx
 8084c99:	4c 89 d9             	mov    %r11,%rcx
 8084c9c:	b8 00 00 00 00       	mov    $0x0,%eax
 8084ca1:	e8 cb 62 ff ff       	callq  807af71 <find_constraint>
 8084ca6:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
 8084cac:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
 8084cb2:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
 8084cb8:	48 39 c8             	cmp    %rcx,%rax
 8084cbb:	0f 83 16 00 00 00    	jae    8084cd7 <asm_compute_constraints+0x223>
 8084cc1:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084cc7:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8084cca:	39 c8                	cmp    %ecx,%eax
 8084ccc:	0f 8c 05 00 00 00    	jl     8084cd7 <asm_compute_constraints+0x223>
 8084cd2:	e9 2a 00 00 00       	jmpq   8084d01 <asm_compute_constraints+0x24d>
 8084cd7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 8084cde:	49 89 c2             	mov    %rax,%r10
 8084ce1:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084ce7:	48 89 c6             	mov    %rax,%rsi
 8084cea:	48 8d 05 15 8d 00 00 	lea    0x8d15(%rip),%rax        # 808da06 <L.118>
 8084cf1:	48 89 c7             	mov    %rax,%rdi
 8084cf4:	4c 89 d2             	mov    %r10,%rdx
 8084cf7:	b8 00 00 00 00       	mov    $0x0,%eax
 8084cfc:	e8 c6 89 fc ff       	callq  804d6c7 <tcc_error>
 8084d01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084d05:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8084d0c:	00 00 00 
 8084d0f:	48 01 c8             	add    %rcx,%rax
 8084d12:	8b 8d 4c ff ff ff    	mov    -0xb4(%rbp),%ecx
 8084d18:	89 08                	mov    %ecx,(%rax)
 8084d1a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
 8084d20:	48 63 c0             	movslq %eax,%rax
 8084d23:	48 89 c1             	mov    %rax,%rcx
 8084d26:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8084d2d:	00 00 00 
 8084d30:	48 0f af c8          	imul   %rax,%rcx
 8084d34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084d38:	48 89 ca             	mov    %rcx,%rdx
 8084d3b:	48 01 d0             	add    %rdx,%rax
 8084d3e:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8084d45:	00 00 00 
 8084d48:	48 01 c8             	add    %rcx,%rax
 8084d4b:	8b 08                	mov    (%rax),%ecx
 8084d4d:	83 f9 00             	cmp    $0x0,%ecx
 8084d50:	0f 8c 14 00 00 00    	jl     8084d6a <asm_compute_constraints+0x2b6>
 8084d56:	48 8d 05 d3 8c 00 00 	lea    0x8cd3(%rip),%rax        # 808da30 <L.119>
 8084d5d:	48 89 c7             	mov    %rax,%rdi
 8084d60:	b8 00 00 00 00       	mov    $0x0,%eax
 8084d65:	e8 5d 89 fc ff       	callq  804d6c7 <tcc_error>
 8084d6a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
 8084d70:	48 63 c0             	movslq %eax,%rax
 8084d73:	48 89 c1             	mov    %rax,%rcx
 8084d76:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8084d7d:	00 00 00 
 8084d80:	48 0f af c8          	imul   %rax,%rcx
 8084d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8084d88:	48 89 ca             	mov    %rcx,%rdx
 8084d8b:	48 01 d0             	add    %rdx,%rax
 8084d8e:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8084d95:	00 00 00 
 8084d98:	48 01 c8             	add    %rcx,%rax
 8084d9b:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
 8084da1:	89 08                	mov    %ecx,(%rax)
 8084da3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084da7:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8084dae:	00 00 00 
 8084db1:	48 01 c8             	add    %rcx,%rax
 8084db4:	b9 05 00 00 00       	mov    $0x5,%ecx
 8084db9:	89 08                	mov    %ecx,(%rax)
 8084dbb:	e9 35 00 00 00       	jmpq   8084df5 <asm_compute_constraints+0x341>
 8084dc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8084dc4:	48 b9 30 00 00 00 00 	movabs $0x30,%rcx
 8084dcb:	00 00 00 
 8084dce:	48 01 c8             	add    %rcx,%rax
 8084dd1:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
 8084dd8:	48 89 cf             	mov    %rcx,%rdi
 8084ddb:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
 8084de2:	b8 00 00 00 00       	mov    $0x0,%eax
 8084de7:	e8 23 18 00 00       	callq  808660f <constraint_priority>
 8084dec:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
 8084df3:	89 01                	mov    %eax,(%rcx)
 8084df5:	e9 d4 fd ff ff       	jmpq   8084bce <asm_compute_constraints+0x11a>
 8084dfa:	b8 00 00 00 00       	mov    $0x0,%eax
 8084dff:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084e05:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084e0b:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8084e0e:	39 c8                	cmp    %ecx,%eax
 8084e10:	0f 8d 40 00 00 00    	jge    8084e56 <asm_compute_constraints+0x3a2>
 8084e16:	e9 14 00 00 00       	jmpq   8084e2f <asm_compute_constraints+0x37b>
 8084e1b:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084e21:	48 89 c1             	mov    %rax,%rcx
 8084e24:	83 c0 01             	add    $0x1,%eax
 8084e27:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084e2d:	eb d6                	jmp    8084e05 <asm_compute_constraints+0x351>
 8084e2f:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084e35:	48 63 c0             	movslq %eax,%rax
 8084e38:	48 89 c1             	mov    %rax,%rcx
 8084e3b:	48 c1 e1 02          	shl    $0x2,%rcx
 8084e3f:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8084e46:	48 89 ca             	mov    %rcx,%rdx
 8084e49:	48 01 d0             	add    %rdx,%rax
 8084e4c:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
 8084e52:	89 08                	mov    %ecx,(%rax)
 8084e54:	eb c5                	jmp    8084e1b <asm_compute_constraints+0x367>
 8084e56:	b8 00 00 00 00       	mov    $0x0,%eax
 8084e5b:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084e61:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8084e64:	83 e8 01             	sub    $0x1,%eax
 8084e67:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
 8084e6d:	39 c1                	cmp    %eax,%ecx
 8084e6f:	0f 8d aa 01 00 00    	jge    808501f <asm_compute_constraints+0x56b>
 8084e75:	e9 14 00 00 00       	jmpq   8084e8e <asm_compute_constraints+0x3da>
 8084e7a:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084e80:	48 89 c1             	mov    %rax,%rcx
 8084e83:	83 c0 01             	add    $0x1,%eax
 8084e86:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8084e8c:	eb d3                	jmp    8084e61 <asm_compute_constraints+0x3ad>
 8084e8e:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084e94:	83 c0 01             	add    $0x1,%eax
 8084e97:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
 8084e9d:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8084ea3:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8084ea6:	39 c8                	cmp    %ecx,%eax
 8084ea8:	0f 8d 6c 01 00 00    	jge    808501a <asm_compute_constraints+0x566>
 8084eae:	e9 14 00 00 00       	jmpq   8084ec7 <asm_compute_constraints+0x413>
 8084eb3:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8084eb9:	48 89 c1             	mov    %rax,%rcx
 8084ebc:	83 c0 01             	add    $0x1,%eax
 8084ebf:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
 8084ec5:	eb d6                	jmp    8084e9d <asm_compute_constraints+0x3e9>
 8084ec7:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084ecd:	48 63 c0             	movslq %eax,%rax
 8084ed0:	48 89 c1             	mov    %rax,%rcx
 8084ed3:	48 c1 e1 02          	shl    $0x2,%rcx
 8084ed7:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8084ede:	48 89 ca             	mov    %rcx,%rdx
 8084ee1:	48 01 d0             	add    %rdx,%rax
 8084ee4:	8b 08                	mov    (%rax),%ecx
 8084ee6:	48 63 c9             	movslq %ecx,%rcx
 8084ee9:	48 89 c8             	mov    %rcx,%rax
 8084eec:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 8084ef3:	00 00 00 
 8084ef6:	48 0f af c1          	imul   %rcx,%rax
 8084efa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8084efe:	48 89 c2             	mov    %rax,%rdx
 8084f01:	48 01 d1             	add    %rdx,%rcx
 8084f04:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 8084f0b:	00 00 00 
 8084f0e:	48 01 c1             	add    %rax,%rcx
 8084f11:	8b 01                	mov    (%rcx),%eax
 8084f13:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
 8084f19:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8084f1f:	48 63 c0             	movslq %eax,%rax
 8084f22:	48 89 c1             	mov    %rax,%rcx
 8084f25:	48 c1 e1 02          	shl    $0x2,%rcx
 8084f29:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8084f30:	48 89 ca             	mov    %rcx,%rdx
 8084f33:	48 01 d0             	add    %rdx,%rax
 8084f36:	8b 08                	mov    (%rax),%ecx
 8084f38:	48 63 c9             	movslq %ecx,%rcx
 8084f3b:	48 89 c8             	mov    %rcx,%rax
 8084f3e:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 8084f45:	00 00 00 
 8084f48:	48 0f af c1          	imul   %rcx,%rax
 8084f4c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8084f50:	48 89 c2             	mov    %rax,%rdx
 8084f53:	48 01 d1             	add    %rdx,%rcx
 8084f56:	48 b8 30 00 00 00 00 	movabs $0x30,%rax
 8084f5d:	00 00 00 
 8084f60:	48 01 c1             	add    %rax,%rcx
 8084f63:	8b 01                	mov    (%rcx),%eax
 8084f65:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
 8084f6b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
 8084f71:	8b 8d 48 ff ff ff    	mov    -0xb8(%rbp),%ecx
 8084f77:	39 c8                	cmp    %ecx,%eax
 8084f79:	0f 8d 96 00 00 00    	jge    8085015 <asm_compute_constraints+0x561>
 8084f7f:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084f85:	48 63 c0             	movslq %eax,%rax
 8084f88:	48 89 c1             	mov    %rax,%rcx
 8084f8b:	48 c1 e1 02          	shl    $0x2,%rcx
 8084f8f:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8084f96:	48 89 ca             	mov    %rcx,%rdx
 8084f99:	48 01 d0             	add    %rdx,%rax
 8084f9c:	8b 08                	mov    (%rax),%ecx
 8084f9e:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
 8084fa4:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8084faa:	48 63 c0             	movslq %eax,%rax
 8084fad:	48 89 c1             	mov    %rax,%rcx
 8084fb0:	48 c1 e1 02          	shl    $0x2,%rcx
 8084fb4:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8084fbb:	48 89 ca             	mov    %rcx,%rdx
 8084fbe:	48 01 d0             	add    %rdx,%rax
 8084fc1:	8b 8d 50 ff ff ff    	mov    -0xb0(%rbp),%ecx
 8084fc7:	48 63 c9             	movslq %ecx,%rcx
 8084fca:	48 89 ca             	mov    %rcx,%rdx
 8084fcd:	48 c1 e2 02          	shl    $0x2,%rdx
 8084fd1:	48 8d 8d 58 ff ff ff 	lea    -0xa8(%rbp),%rcx
 8084fd8:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 8084fdf:	48 89 d0             	mov    %rdx,%rax
 8084fe2:	48 01 c1             	add    %rax,%rcx
 8084fe5:	8b 01                	mov    (%rcx),%eax
 8084fe7:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
 8084fee:	89 01                	mov    %eax,(%rcx)
 8084ff0:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8084ff6:	48 63 c0             	movslq %eax,%rax
 8084ff9:	48 89 c1             	mov    %rax,%rcx
 8084ffc:	48 c1 e1 02          	shl    $0x2,%rcx
 8085000:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8085007:	48 89 ca             	mov    %rcx,%rdx
 808500a:	48 01 d0             	add    %rdx,%rax
 808500d:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
 8085013:	89 08                	mov    %ecx,(%rax)
 8085015:	e9 99 fe ff ff       	jmpq   8084eb3 <asm_compute_constraints+0x3ff>
 808501a:	e9 5b fe ff ff       	jmpq   8084e7a <asm_compute_constraints+0x3c6>
 808501f:	b8 00 00 00 00       	mov    $0x0,%eax
 8085024:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 808502a:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085030:	83 f8 08             	cmp    $0x8,%eax
 8085033:	0f 8d 78 00 00 00    	jge    80850b1 <asm_compute_constraints+0x5fd>
 8085039:	e9 14 00 00 00       	jmpq   8085052 <asm_compute_constraints+0x59e>
 808503e:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085044:	48 89 c1             	mov    %rax,%rcx
 8085047:	83 c0 01             	add    $0x1,%eax
 808504a:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8085050:	eb d8                	jmp    808502a <asm_compute_constraints+0x576>
 8085052:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085058:	48 63 c0             	movslq %eax,%rax
 808505b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 808505f:	48 89 c2             	mov    %rax,%rdx
 8085062:	48 01 d1             	add    %rdx,%rcx
 8085065:	0f b6 01             	movzbl (%rcx),%eax
 8085068:	85 c0                	test   %eax,%eax
 808506a:	0f 84 22 00 00 00    	je     8085092 <asm_compute_constraints+0x5de>
 8085070:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085076:	48 63 c0             	movslq %eax,%rax
 8085079:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 8085080:	48 89 c2             	mov    %rax,%rdx
 8085083:	48 01 d1             	add    %rdx,%rcx
 8085086:	b8 03 00 00 00       	mov    $0x3,%eax
 808508b:	88 01                	mov    %al,(%rcx)
 808508d:	e9 1d 00 00 00       	jmpq   80850af <asm_compute_constraints+0x5fb>
 8085092:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085098:	48 63 c0             	movslq %eax,%rax
 808509b:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 80850a2:	48 89 c2             	mov    %rax,%rdx
 80850a5:	48 01 d1             	add    %rdx,%rcx
 80850a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80850ad:	88 01                	mov    %al,(%rcx)
 80850af:	eb 8d                	jmp    808503e <asm_compute_constraints+0x58a>
 80850b1:	b8 03 00 00 00       	mov    $0x3,%eax
 80850b6:	88 85 24 ff ff ff    	mov    %al,-0xdc(%rbp)
 80850bc:	b8 03 00 00 00       	mov    $0x3,%eax
 80850c1:	88 85 25 ff ff ff    	mov    %al,-0xdb(%rbp)
 80850c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80850cc:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 80850d2:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 80850d8:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 80850db:	39 c8                	cmp    %ecx,%eax
 80850dd:	0f 8d 6e 07 00 00    	jge    8085851 <asm_compute_constraints+0xd9d>
 80850e3:	e9 14 00 00 00       	jmpq   80850fc <asm_compute_constraints+0x648>
 80850e8:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 80850ee:	48 89 c1             	mov    %rax,%rcx
 80850f1:	83 c0 01             	add    $0x1,%eax
 80850f4:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 80850fa:	eb d6                	jmp    80850d2 <asm_compute_constraints+0x61e>
 80850fc:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085102:	48 63 c0             	movslq %eax,%rax
 8085105:	48 89 c1             	mov    %rax,%rcx
 8085108:	48 c1 e1 02          	shl    $0x2,%rcx
 808510c:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
 8085113:	48 89 ca             	mov    %rcx,%rdx
 8085116:	48 01 d0             	add    %rdx,%rax
 8085119:	8b 08                	mov    (%rax),%ecx
 808511b:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%rbp)
 8085121:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8085127:	48 63 c0             	movslq %eax,%rax
 808512a:	48 89 c1             	mov    %rax,%rcx
 808512d:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8085134:	00 00 00 
 8085137:	48 0f af c8          	imul   %rax,%rcx
 808513b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808513f:	48 89 ca             	mov    %rcx,%rdx
 8085142:	48 01 d0             	add    %rdx,%rax
 8085145:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 8085149:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 808514d:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8085154:	00 00 00 
 8085157:	48 01 c8             	add    %rcx,%rax
 808515a:	48 8b 08             	mov    (%rax),%rcx
 808515d:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
 8085164:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085168:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 808516f:	00 00 00 
 8085172:	48 01 c8             	add    %rcx,%rax
 8085175:	8b 08                	mov    (%rax),%ecx
 8085177:	83 f9 00             	cmp    $0x0,%ecx
 808517a:	0f 8c 05 00 00 00    	jl     8085185 <asm_compute_constraints+0x6d1>
 8085180:	e9 63 ff ff ff       	jmpq   80850e8 <asm_compute_constraints+0x634>
 8085185:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085189:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8085190:	00 00 00 
 8085193:	48 01 c8             	add    %rcx,%rax
 8085196:	8b 08                	mov    (%rax),%ecx
 8085198:	83 f9 00             	cmp    $0x0,%ecx
 808519b:	0f 8c 10 00 00 00    	jl     80851b1 <asm_compute_constraints+0x6fd>
 80851a1:	b8 03 00 00 00       	mov    $0x3,%eax
 80851a6:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
 80851ac:	e9 2c 00 00 00       	jmpq   80851dd <asm_compute_constraints+0x729>
 80851b1:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 80851b7:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 80851ba:	39 c8                	cmp    %ecx,%eax
 80851bc:	0f 8d 10 00 00 00    	jge    80851d2 <asm_compute_constraints+0x71e>
 80851c2:	b8 01 00 00 00       	mov    $0x1,%eax
 80851c7:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
 80851cd:	e9 0b 00 00 00       	jmpq   80851dd <asm_compute_constraints+0x729>
 80851d2:	b8 02 00 00 00       	mov    $0x2,%eax
 80851d7:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
 80851dd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 80851e4:	48 89 c1             	mov    %rax,%rcx
 80851e7:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 80851ee:	00 00 00 
 80851f1:	48 01 d0             	add    %rdx,%rax
 80851f4:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 80851fb:	0f be 01             	movsbl (%rcx),%eax
 80851fe:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
 8085204:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
 808520a:	e9 05 00 00 00       	jmpq   8085214 <asm_compute_constraints+0x760>
 808520f:	e9 09 00 00 00       	jmpq   808521d <asm_compute_constraints+0x769>
 8085214:	83 f8 3d             	cmp    $0x3d,%eax
 8085217:	0f 85 07 00 00 00    	jne    8085224 <asm_compute_constraints+0x770>
 808521d:	eb be                	jmp    80851dd <asm_compute_constraints+0x729>
 808521f:	e9 09 00 00 00       	jmpq   808522d <asm_compute_constraints+0x779>
 8085224:	83 f8 2b             	cmp    $0x2b,%eax
 8085227:	0f 85 1d 00 00 00    	jne    808524a <asm_compute_constraints+0x796>
 808522d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085231:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8085238:	00 00 00 
 808523b:	48 01 c8             	add    %rcx,%rax
 808523e:	b9 01 00 00 00       	mov    $0x1,%ecx
 8085243:	89 08                	mov    %ecx,(%rax)
 8085245:	e9 09 00 00 00       	jmpq   8085253 <asm_compute_constraints+0x79f>
 808524a:	83 f8 26             	cmp    $0x26,%eax
 808524d:	0f 85 43 00 00 00    	jne    8085296 <asm_compute_constraints+0x7e2>
 8085253:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8085259:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 808525c:	39 c8                	cmp    %ecx,%eax
 808525e:	0f 8c 1d 00 00 00    	jl     8085281 <asm_compute_constraints+0x7cd>
 8085264:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
 808526a:	48 89 c6             	mov    %rax,%rsi
 808526d:	48 8d 05 e4 87 00 00 	lea    0x87e4(%rip),%rax        # 808da58 <L.120>
 8085274:	48 89 c7             	mov    %rax,%rdi
 8085277:	b8 00 00 00 00       	mov    $0x0,%eax
 808527c:	e8 46 84 fc ff       	callq  804d6c7 <tcc_error>
 8085281:	b8 03 00 00 00       	mov    $0x3,%eax
 8085286:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
 808528c:	e9 4c ff ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 8085291:	e9 09 00 00 00       	jmpq   808529f <asm_compute_constraints+0x7eb>
 8085296:	83 f8 41             	cmp    $0x41,%eax
 8085299:	0f 85 a0 00 00 00    	jne    808533f <asm_compute_constraints+0x88b>
 808529f:	0f b6 85 20 ff ff ff 	movzbl -0xe0(%rbp),%eax
 80852a6:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 80852ac:	48 21 c8             	and    %rcx,%rax
 80852af:	85 c0                	test   %eax,%eax
 80852b1:	0f 85 1d 00 00 00    	jne    80852d4 <asm_compute_constraints+0x820>
 80852b7:	0f b6 85 22 ff ff ff 	movzbl -0xde(%rbp),%eax
 80852be:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 80852c4:	48 21 c8             	and    %rcx,%rax
 80852c7:	85 c0                	test   %eax,%eax
 80852c9:	0f 85 05 00 00 00    	jne    80852d4 <asm_compute_constraints+0x820>
 80852cf:	e9 05 00 00 00       	jmpq   80852d9 <asm_compute_constraints+0x825>
 80852d4:	e9 04 ff ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 80852d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80852dd:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80852e4:	00 00 00 
 80852e7:	48 01 c8             	add    %rcx,%rax
 80852ea:	b9 01 00 00 00       	mov    $0x1,%ecx
 80852ef:	89 08                	mov    %ecx,(%rax)
 80852f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80852f5:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 80852fc:	00 00 00 
 80852ff:	48 01 c8             	add    %rcx,%rax
 8085302:	b9 00 00 00 00       	mov    $0x0,%ecx
 8085307:	89 08                	mov    %ecx,(%rax)
 8085309:	0f b6 85 20 ff ff ff 	movzbl -0xe0(%rbp),%eax
 8085310:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 8085316:	48 09 c8             	or     %rcx,%rax
 8085319:	88 85 20 ff ff ff    	mov    %al,-0xe0(%rbp)
 808531f:	0f b6 85 22 ff ff ff 	movzbl -0xde(%rbp),%eax
 8085326:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 808532c:	48 09 c8             	or     %rcx,%rax
 808532f:	88 85 22 ff ff ff    	mov    %al,-0xde(%rbp)
 8085335:	e9 50 04 00 00       	jmpq   808578a <asm_compute_constraints+0xcd6>
 808533a:	e9 09 00 00 00       	jmpq   8085348 <asm_compute_constraints+0x894>
 808533f:	83 f8 61             	cmp    $0x61,%eax
 8085342:	0f 85 15 00 00 00    	jne    808535d <asm_compute_constraints+0x8a9>
 8085348:	b8 00 00 00 00       	mov    $0x0,%eax
 808534d:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 8085353:	e9 91 00 00 00       	jmpq   80853e9 <asm_compute_constraints+0x935>
 8085358:	e9 09 00 00 00       	jmpq   8085366 <asm_compute_constraints+0x8b2>
 808535d:	83 f8 62             	cmp    $0x62,%eax
 8085360:	0f 85 15 00 00 00    	jne    808537b <asm_compute_constraints+0x8c7>
 8085366:	b8 03 00 00 00       	mov    $0x3,%eax
 808536b:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 8085371:	e9 73 00 00 00       	jmpq   80853e9 <asm_compute_constraints+0x935>
 8085376:	e9 09 00 00 00       	jmpq   8085384 <asm_compute_constraints+0x8d0>
 808537b:	83 f8 63             	cmp    $0x63,%eax
 808537e:	0f 85 15 00 00 00    	jne    8085399 <asm_compute_constraints+0x8e5>
 8085384:	b8 01 00 00 00       	mov    $0x1,%eax
 8085389:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 808538f:	e9 55 00 00 00       	jmpq   80853e9 <asm_compute_constraints+0x935>
 8085394:	e9 09 00 00 00       	jmpq   80853a2 <asm_compute_constraints+0x8ee>
 8085399:	83 f8 64             	cmp    $0x64,%eax
 808539c:	0f 85 15 00 00 00    	jne    80853b7 <asm_compute_constraints+0x903>
 80853a2:	b8 02 00 00 00       	mov    $0x2,%eax
 80853a7:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 80853ad:	e9 37 00 00 00       	jmpq   80853e9 <asm_compute_constraints+0x935>
 80853b2:	e9 09 00 00 00       	jmpq   80853c0 <asm_compute_constraints+0x90c>
 80853b7:	83 f8 53             	cmp    $0x53,%eax
 80853ba:	0f 85 15 00 00 00    	jne    80853d5 <asm_compute_constraints+0x921>
 80853c0:	b8 06 00 00 00       	mov    $0x6,%eax
 80853c5:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 80853cb:	e9 19 00 00 00       	jmpq   80853e9 <asm_compute_constraints+0x935>
 80853d0:	e9 09 00 00 00       	jmpq   80853de <asm_compute_constraints+0x92a>
 80853d5:	83 f8 44             	cmp    $0x44,%eax
 80853d8:	0f 85 44 00 00 00    	jne    8085422 <asm_compute_constraints+0x96e>
 80853de:	b8 07 00 00 00       	mov    $0x7,%eax
 80853e3:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 80853e9:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80853ef:	48 63 c0             	movslq %eax,%rax
 80853f2:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 80853f9:	48 89 c2             	mov    %rax,%rdx
 80853fc:	48 01 d1             	add    %rdx,%rcx
 80853ff:	0f b6 01             	movzbl (%rcx),%eax
 8085402:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 8085408:	48 21 c8             	and    %rcx,%rax
 808540b:	85 c0                	test   %eax,%eax
 808540d:	0f 84 05 00 00 00    	je     8085418 <asm_compute_constraints+0x964>
 8085413:	e9 c5 fd ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 8085418:	e9 f8 00 00 00       	jmpq   8085515 <asm_compute_constraints+0xa61>
 808541d:	e9 09 00 00 00       	jmpq   808542b <asm_compute_constraints+0x977>
 8085422:	83 f8 71             	cmp    $0x71,%eax
 8085425:	0f 85 73 00 00 00    	jne    808549e <asm_compute_constraints+0x9ea>
 808542b:	b8 00 00 00 00       	mov    $0x0,%eax
 8085430:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 8085436:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 808543c:	83 f8 04             	cmp    $0x4,%eax
 808543f:	0f 8d 4f 00 00 00    	jge    8085494 <asm_compute_constraints+0x9e0>
 8085445:	e9 14 00 00 00       	jmpq   808545e <asm_compute_constraints+0x9aa>
 808544a:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8085450:	48 89 c1             	mov    %rax,%rcx
 8085453:	83 c0 01             	add    $0x1,%eax
 8085456:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 808545c:	eb d8                	jmp    8085436 <asm_compute_constraints+0x982>
 808545e:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8085464:	48 63 c0             	movslq %eax,%rax
 8085467:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 808546e:	48 89 c2             	mov    %rax,%rdx
 8085471:	48 01 d1             	add    %rdx,%rcx
 8085474:	0f b6 01             	movzbl (%rcx),%eax
 8085477:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 808547d:	48 21 c8             	and    %rcx,%rax
 8085480:	85 c0                	test   %eax,%eax
 8085482:	0f 84 05 00 00 00    	je     808548d <asm_compute_constraints+0x9d9>
 8085488:	e9 05 00 00 00       	jmpq   8085492 <asm_compute_constraints+0x9de>
 808548d:	e9 83 00 00 00       	jmpq   8085515 <asm_compute_constraints+0xa61>
 8085492:	eb b6                	jmp    808544a <asm_compute_constraints+0x996>
 8085494:	e9 44 fd ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 8085499:	e9 09 00 00 00       	jmpq   80854a7 <asm_compute_constraints+0x9f3>
 808549e:	83 f8 72             	cmp    $0x72,%eax
 80854a1:	0f 85 cd 00 00 00    	jne    8085574 <asm_compute_constraints+0xac0>
 80854a7:	b8 00 00 00 00       	mov    $0x0,%eax
 80854ac:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 80854b2:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80854b8:	83 f8 08             	cmp    $0x8,%eax
 80854bb:	0f 8d 4f 00 00 00    	jge    8085510 <asm_compute_constraints+0xa5c>
 80854c1:	e9 14 00 00 00       	jmpq   80854da <asm_compute_constraints+0xa26>
 80854c6:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80854cc:	48 89 c1             	mov    %rax,%rcx
 80854cf:	83 c0 01             	add    $0x1,%eax
 80854d2:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 80854d8:	eb d8                	jmp    80854b2 <asm_compute_constraints+0x9fe>
 80854da:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80854e0:	48 63 c0             	movslq %eax,%rax
 80854e3:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 80854ea:	48 89 c2             	mov    %rax,%rdx
 80854ed:	48 01 d1             	add    %rdx,%rcx
 80854f0:	0f b6 01             	movzbl (%rcx),%eax
 80854f3:	8b 8d 34 ff ff ff    	mov    -0xcc(%rbp),%ecx
 80854f9:	48 21 c8             	and    %rcx,%rax
 80854fc:	85 c0                	test   %eax,%eax
 80854fe:	0f 84 05 00 00 00    	je     8085509 <asm_compute_constraints+0xa55>
 8085504:	e9 05 00 00 00       	jmpq   808550e <asm_compute_constraints+0xa5a>
 8085509:	e9 07 00 00 00       	jmpq   8085515 <asm_compute_constraints+0xa61>
 808550e:	eb b6                	jmp    80854c6 <asm_compute_constraints+0xa12>
 8085510:	e9 c8 fc ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 8085515:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085519:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 8085520:	00 00 00 
 8085523:	48 01 c8             	add    %rcx,%rax
 8085526:	b9 00 00 00 00       	mov    $0x0,%ecx
 808552b:	89 08                	mov    %ecx,(%rax)
 808552d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085531:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8085538:	00 00 00 
 808553b:	48 01 c8             	add    %rcx,%rax
 808553e:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
 8085544:	89 08                	mov    %ecx,(%rax)
 8085546:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 808554c:	48 63 c0             	movslq %eax,%rax
 808554f:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 8085556:	48 89 c2             	mov    %rax,%rdx
 8085559:	48 01 d1             	add    %rdx,%rcx
 808555c:	0f b6 01             	movzbl (%rcx),%eax
 808555f:	8b 95 34 ff ff ff    	mov    -0xcc(%rbp),%edx
 8085565:	48 09 d0             	or     %rdx,%rax
 8085568:	88 01                	mov    %al,(%rcx)
 808556a:	e9 1b 02 00 00       	jmpq   808578a <asm_compute_constraints+0xcd6>
 808556f:	e9 09 00 00 00       	jmpq   808557d <asm_compute_constraints+0xac9>
 8085574:	83 f8 69             	cmp    $0x69,%eax
 8085577:	0f 85 42 00 00 00    	jne    80855bf <asm_compute_constraints+0xb0b>
 808557d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085581:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8085588:	00 00 00 
 808558b:	48 01 c8             	add    %rcx,%rax
 808558e:	48 8b 08             	mov    (%rax),%rcx
 8085591:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 8085598:	00 00 00 
 808559b:	48 01 c1             	add    %rax,%rcx
 808559e:	0f b7 01             	movzwl (%rcx),%eax
 80855a1:	81 e0 3f 01 00 00    	and    $0x13f,%eax
 80855a7:	83 f8 30             	cmp    $0x30,%eax
 80855aa:	0f 84 05 00 00 00    	je     80855b5 <asm_compute_constraints+0xb01>
 80855b0:	e9 28 fc ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 80855b5:	e9 d0 01 00 00       	jmpq   808578a <asm_compute_constraints+0xcd6>
 80855ba:	e9 09 00 00 00       	jmpq   80855c8 <asm_compute_constraints+0xb14>
 80855bf:	83 f8 49             	cmp    $0x49,%eax
 80855c2:	0f 85 05 00 00 00    	jne    80855cd <asm_compute_constraints+0xb19>
 80855c8:	e9 09 00 00 00       	jmpq   80855d6 <asm_compute_constraints+0xb22>
 80855cd:	83 f8 4e             	cmp    $0x4e,%eax
 80855d0:	0f 85 05 00 00 00    	jne    80855db <asm_compute_constraints+0xb27>
 80855d6:	e9 09 00 00 00       	jmpq   80855e4 <asm_compute_constraints+0xb30>
 80855db:	83 f8 4d             	cmp    $0x4d,%eax
 80855de:	0f 85 42 00 00 00    	jne    8085626 <asm_compute_constraints+0xb72>
 80855e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80855e8:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80855ef:	00 00 00 
 80855f2:	48 01 c8             	add    %rcx,%rax
 80855f5:	48 8b 08             	mov    (%rax),%rcx
 80855f8:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80855ff:	00 00 00 
 8085602:	48 01 c1             	add    %rax,%rcx
 8085605:	0f b7 01             	movzwl (%rcx),%eax
 8085608:	81 e0 3f 03 00 00    	and    $0x33f,%eax
 808560e:	83 f8 30             	cmp    $0x30,%eax
 8085611:	0f 84 05 00 00 00    	je     808561c <asm_compute_constraints+0xb68>
 8085617:	e9 c1 fb ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 808561c:	e9 69 01 00 00       	jmpq   808578a <asm_compute_constraints+0xcd6>
 8085621:	e9 09 00 00 00       	jmpq   808562f <asm_compute_constraints+0xb7b>
 8085626:	83 f8 6d             	cmp    $0x6d,%eax
 8085629:	0f 85 05 00 00 00    	jne    8085634 <asm_compute_constraints+0xb80>
 808562f:	e9 09 00 00 00       	jmpq   808563d <asm_compute_constraints+0xb89>
 8085634:	83 f8 67             	cmp    $0x67,%eax
 8085637:	0f 85 11 01 00 00    	jne    808574e <asm_compute_constraints+0xc9a>
 808563d:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 8085643:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8085646:	39 c8                	cmp    %ecx,%eax
 8085648:	0f 8c 14 00 00 00    	jl     8085662 <asm_compute_constraints+0xbae>
 808564e:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
 8085654:	83 f8 6d             	cmp    $0x6d,%eax
 8085657:	0f 84 05 00 00 00    	je     8085662 <asm_compute_constraints+0xbae>
 808565d:	e9 e7 00 00 00       	jmpq   8085749 <asm_compute_constraints+0xc95>
 8085662:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085666:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 808566d:	00 00 00 
 8085670:	48 01 c8             	add    %rcx,%rax
 8085673:	48 8b 08             	mov    (%rax),%rcx
 8085676:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 808567d:	00 00 00 
 8085680:	48 01 c1             	add    %rax,%rcx
 8085683:	0f b7 01             	movzwl (%rcx),%eax
 8085686:	83 e0 3f             	and    $0x3f,%eax
 8085689:	83 f8 31             	cmp    $0x31,%eax
 808568c:	0f 85 b7 00 00 00    	jne    8085749 <asm_compute_constraints+0xc95>
 8085692:	b8 00 00 00 00       	mov    $0x0,%eax
 8085697:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 808569d:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80856a3:	83 f8 08             	cmp    $0x8,%eax
 80856a6:	0f 8d 49 00 00 00    	jge    80856f5 <asm_compute_constraints+0xc41>
 80856ac:	e9 14 00 00 00       	jmpq   80856c5 <asm_compute_constraints+0xc11>
 80856b1:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80856b7:	48 89 c1             	mov    %rax,%rcx
 80856ba:	83 c0 01             	add    $0x1,%eax
 80856bd:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 80856c3:	eb d8                	jmp    808569d <asm_compute_constraints+0xbe9>
 80856c5:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 80856cb:	48 63 c0             	movslq %eax,%rax
 80856ce:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 80856d5:	48 89 c2             	mov    %rax,%rdx
 80856d8:	48 01 d1             	add    %rdx,%rcx
 80856db:	0f b6 01             	movzbl (%rcx),%eax
 80856de:	83 e0 02             	and    $0x2,%eax
 80856e1:	85 c0                	test   %eax,%eax
 80856e3:	0f 84 05 00 00 00    	je     80856ee <asm_compute_constraints+0xc3a>
 80856e9:	e9 05 00 00 00       	jmpq   80856f3 <asm_compute_constraints+0xc3f>
 80856ee:	e9 07 00 00 00       	jmpq   80856fa <asm_compute_constraints+0xc46>
 80856f3:	eb bc                	jmp    80856b1 <asm_compute_constraints+0xbfd>
 80856f5:	e9 e3 fa ff ff       	jmpq   80851dd <asm_compute_constraints+0x729>
 80856fa:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8085700:	48 63 c0             	movslq %eax,%rax
 8085703:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 808570a:	48 89 c2             	mov    %rax,%rdx
 808570d:	48 01 d1             	add    %rdx,%rcx
 8085710:	0f b6 01             	movzbl (%rcx),%eax
 8085713:	83 c8 02             	or     $0x2,%eax
 8085716:	88 01                	mov    %al,(%rcx)
 8085718:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 808571c:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8085723:	00 00 00 
 8085726:	48 01 c8             	add    %rcx,%rax
 8085729:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
 808572f:	89 08                	mov    %ecx,(%rax)
 8085731:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085735:	48 b9 3c 00 00 00 00 	movabs $0x3c,%rcx
 808573c:	00 00 00 
 808573f:	48 01 c8             	add    %rcx,%rax
 8085742:	b9 01 00 00 00       	mov    $0x1,%ecx
 8085747:	89 08                	mov    %ecx,(%rax)
 8085749:	e9 3c 00 00 00       	jmpq   808578a <asm_compute_constraints+0xcd6>
 808574e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085752:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8085759:	00 00 00 
 808575c:	48 01 c8             	add    %rcx,%rax
 808575f:	48 8b 08             	mov    (%rax),%rcx
 8085762:	49 89 ca             	mov    %rcx,%r10
 8085765:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
 808576b:	48 89 c6             	mov    %rax,%rsi
 808576e:	48 8d 05 10 83 00 00 	lea    0x8310(%rip),%rax        # 808da85 <L.121>
 8085775:	48 89 c7             	mov    %rax,%rdi
 8085778:	4c 89 d2             	mov    %r10,%rdx
 808577b:	b8 00 00 00 00       	mov    $0x0,%eax
 8085780:	e8 42 7f fc ff       	callq  804d6c7 <tcc_error>
 8085785:	e9 00 00 00 00       	jmpq   808578a <asm_compute_constraints+0xcd6>
 808578a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 808578e:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8085795:	00 00 00 
 8085798:	48 01 c8             	add    %rcx,%rax
 808579b:	8b 08                	mov    (%rax),%ecx
 808579d:	83 f9 00             	cmp    $0x0,%ecx
 80857a0:	0f 8c a6 00 00 00    	jl     808584c <asm_compute_constraints+0xd98>
 80857a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80857aa:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 80857b1:	00 00 00 
 80857b4:	48 01 c8             	add    %rcx,%rax
 80857b7:	8b 08                	mov    (%rax),%ecx
 80857b9:	48 63 c9             	movslq %ecx,%rcx
 80857bc:	48 89 c8             	mov    %rcx,%rax
 80857bf:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 80857c6:	00 00 00 
 80857c9:	48 0f af c1          	imul   %rcx,%rax
 80857cd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 80857d1:	48 89 c2             	mov    %rax,%rdx
 80857d4:	48 01 d1             	add    %rdx,%rcx
 80857d7:	48 b8 34 00 00 00 00 	movabs $0x34,%rax
 80857de:	00 00 00 
 80857e1:	48 01 c1             	add    %rax,%rcx
 80857e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80857e8:	48 ba 34 00 00 00 00 	movabs $0x34,%rdx
 80857ef:	00 00 00 
 80857f2:	48 01 d0             	add    %rdx,%rax
 80857f5:	8b 10                	mov    (%rax),%edx
 80857f7:	89 11                	mov    %edx,(%rcx)
 80857f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80857fd:	48 b9 2c 00 00 00 00 	movabs $0x2c,%rcx
 8085804:	00 00 00 
 8085807:	48 01 c8             	add    %rcx,%rax
 808580a:	8b 08                	mov    (%rax),%ecx
 808580c:	48 63 c9             	movslq %ecx,%rcx
 808580f:	48 89 c8             	mov    %rcx,%rax
 8085812:	48 b9 48 00 00 00 00 	movabs $0x48,%rcx
 8085819:	00 00 00 
 808581c:	48 0f af c1          	imul   %rcx,%rax
 8085820:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8085824:	48 89 c2             	mov    %rax,%rdx
 8085827:	48 01 d1             	add    %rdx,%rcx
 808582a:	48 b8 38 00 00 00 00 	movabs $0x38,%rax
 8085831:	00 00 00 
 8085834:	48 01 c1             	add    %rax,%rcx
 8085837:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 808583b:	48 ba 38 00 00 00 00 	movabs $0x38,%rdx
 8085842:	00 00 00 
 8085845:	48 01 d0             	add    %rdx,%rax
 8085848:	8b 10                	mov    (%rax),%edx
 808584a:	89 11                	mov    %edx,(%rcx)
 808584c:	e9 97 f8 ff ff       	jmpq   80850e8 <asm_compute_constraints+0x634>
 8085851:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8085855:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 808585a:	89 08                	mov    %ecx,(%rax)
 808585c:	b8 00 00 00 00       	mov    $0x0,%eax
 8085861:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 8085867:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 808586d:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8085870:	39 c8                	cmp    %ecx,%eax
 8085872:	0f 8d 3a 01 00 00    	jge    80859b2 <asm_compute_constraints+0xefe>
 8085878:	e9 14 00 00 00       	jmpq   8085891 <asm_compute_constraints+0xddd>
 808587d:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085883:	48 89 c1             	mov    %rax,%rcx
 8085886:	83 c0 01             	add    $0x1,%eax
 8085889:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
 808588f:	eb d6                	jmp    8085867 <asm_compute_constraints+0xdb3>
 8085891:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
 8085897:	48 63 c0             	movslq %eax,%rax
 808589a:	48 89 c1             	mov    %rax,%rcx
 808589d:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 80858a4:	00 00 00 
 80858a7:	48 0f af c8          	imul   %rax,%rcx
 80858ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 80858af:	48 89 ca             	mov    %rcx,%rdx
 80858b2:	48 01 d0             	add    %rdx,%rax
 80858b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 80858b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80858bd:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 80858c4:	00 00 00 
 80858c7:	48 01 c8             	add    %rcx,%rax
 80858ca:	8b 08                	mov    (%rax),%ecx
 80858cc:	83 f9 00             	cmp    $0x0,%ecx
 80858cf:	0f 8c d8 00 00 00    	jl     80859ad <asm_compute_constraints+0xef9>
 80858d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 80858d9:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80858e0:	00 00 00 
 80858e3:	48 01 c8             	add    %rcx,%rax
 80858e6:	48 8b 08             	mov    (%rax),%rcx
 80858e9:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 80858f0:	00 00 00 
 80858f3:	48 01 c1             	add    %rax,%rcx
 80858f6:	0f b7 01             	movzwl (%rcx),%eax
 80858f9:	83 e0 3f             	and    $0x3f,%eax
 80858fc:	83 f8 31             	cmp    $0x31,%eax
 80858ff:	0f 85 a8 00 00 00    	jne    80859ad <asm_compute_constraints+0xef9>
 8085905:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8085909:	48 b9 3c 00 00 00 00 	movabs $0x3c,%rcx
 8085910:	00 00 00 
 8085913:	48 01 c8             	add    %rcx,%rax
 8085916:	8b 08                	mov    (%rax),%ecx
 8085918:	85 c9                	test   %ecx,%ecx
 808591a:	0f 84 05 00 00 00    	je     8085925 <asm_compute_constraints+0xe71>
 8085920:	e9 88 00 00 00       	jmpq   80859ad <asm_compute_constraints+0xef9>
 8085925:	b8 00 00 00 00       	mov    $0x0,%eax
 808592a:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 8085930:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 8085936:	83 f8 08             	cmp    $0x8,%eax
 8085939:	0f 8d 49 00 00 00    	jge    8085988 <asm_compute_constraints+0xed4>
 808593f:	e9 14 00 00 00       	jmpq   8085958 <asm_compute_constraints+0xea4>
 8085944:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 808594a:	48 89 c1             	mov    %rax,%rcx
 808594d:	83 c0 01             	add    $0x1,%eax
 8085950:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
 8085956:	eb d8                	jmp    8085930 <asm_compute_constraints+0xe7c>
 8085958:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
 808595e:	48 63 c0             	movslq %eax,%rax
 8085961:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 8085968:	48 89 c2             	mov    %rax,%rdx
 808596b:	48 01 d1             	add    %rdx,%rcx
 808596e:	0f b6 01             	movzbl (%rcx),%eax
 8085971:	83 e0 01             	and    $0x1,%eax
 8085974:	85 c0                	test   %eax,%eax
 8085976:	0f 84 05 00 00 00    	je     8085981 <asm_compute_constraints+0xecd>
 808597c:	e9 05 00 00 00       	jmpq   8085986 <asm_compute_constraints+0xed2>
 8085981:	e9 16 00 00 00       	jmpq   808599c <asm_compute_constraints+0xee8>
 8085986:	eb bc                	jmp    8085944 <asm_compute_constraints+0xe90>
 8085988:	48 8d 05 26 81 00 00 	lea    0x8126(%rip),%rax        # 808dab5 <L.122>
 808598f:	48 89 c7             	mov    %rax,%rdi
 8085992:	b8 00 00 00 00       	mov    $0x0,%eax
 8085997:	e8 2b 7d fc ff       	callq  804d6c7 <tcc_error>
 808599c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 80859a0:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
 80859a6:	89 08                	mov    %ecx,(%rax)
 80859a8:	e9 05 00 00 00       	jmpq   80859b2 <asm_compute_constraints+0xefe>
 80859ad:	e9 cb fe ff ff       	jmpq   808587d <asm_compute_constraints+0xdc9>
 80859b2:	c9                   	leaveq 
 80859b3:	c3                   	retq   

00000000080859b4 <subst_asm_operand>:
 80859b4:	55                   	push   %rbp
 80859b5:	48 89 e5             	mov    %rsp,%rbp
 80859b8:	48 81 ec 70 00 00 00 	sub    $0x70,%rsp
 80859bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80859c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80859c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 80859cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80859cf:	48 b9 10 00 00 00 00 	movabs $0x10,%rcx
 80859d6:	00 00 00 
 80859d9:	48 01 c8             	add    %rcx,%rax
 80859dc:	0f b7 08             	movzwl (%rax),%ecx
 80859df:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 80859e2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80859e5:	83 e0 3f             	and    $0x3f,%eax
 80859e8:	83 f8 30             	cmp    $0x30,%eax
 80859eb:	0f 85 62 01 00 00    	jne    8085b53 <subst_asm_operand+0x19f>
 80859f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 80859f4:	81 e0 00 01 00 00    	and    $0x100,%eax
 80859fa:	85 c0                	test   %eax,%eax
 80859fc:	0f 84 05 00 00 00    	je     8085a07 <subst_asm_operand+0x53>
 8085a02:	e9 31 00 00 00       	jmpq   8085a38 <subst_asm_operand+0x84>
 8085a07:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085a0a:	83 f8 63             	cmp    $0x63,%eax
 8085a0d:	0f 84 25 00 00 00    	je     8085a38 <subst_asm_operand+0x84>
 8085a13:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085a16:	83 f8 6e             	cmp    $0x6e,%eax
 8085a19:	0f 84 19 00 00 00    	je     8085a38 <subst_asm_operand+0x84>
 8085a1f:	b8 24 00 00 00       	mov    $0x24,%eax
 8085a24:	48 89 c6             	mov    %rax,%rsi
 8085a27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085a2b:	48 89 c7             	mov    %rax,%rdi
 8085a2e:	b8 00 00 00 00       	mov    $0x0,%eax
 8085a33:	e8 15 b8 fc ff       	callq  805124d <cstr_ccat>
 8085a38:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8085a3b:	81 e0 00 02 00 00    	and    $0x200,%eax
 8085a41:	85 c0                	test   %eax,%eax
 8085a43:	0f 84 7e 00 00 00    	je     8085ac7 <subst_asm_operand+0x113>
 8085a49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085a4d:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8085a54:	00 00 00 
 8085a57:	48 01 c8             	add    %rcx,%rax
 8085a5a:	48 8b 08             	mov    (%rax),%rcx
 8085a5d:	b8 00 00 00 00       	mov    $0x0,%eax
 8085a62:	48 89 c6             	mov    %rax,%rsi
 8085a65:	8b 01                	mov    (%rcx),%eax
 8085a67:	48 89 c7             	mov    %rax,%rdi
 8085a6a:	b8 00 00 00 00       	mov    $0x0,%eax
 8085a6f:	e8 40 be fc ff       	callq  80518b4 <get_tok_str>
 8085a74:	48 89 c6             	mov    %rax,%rsi
 8085a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085a7b:	48 89 c7             	mov    %rax,%rdi
 8085a7e:	b8 00 00 00 00       	mov    $0x0,%eax
 8085a83:	e8 4d b8 fc ff       	callq  80512d5 <cstr_cat>
 8085a88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085a8c:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8085a93:	00 00 00 
 8085a96:	48 01 c8             	add    %rcx,%rax
 8085a99:	8b 08                	mov    (%rax),%ecx
 8085a9b:	83 f9 00             	cmp    $0x0,%ecx
 8085a9e:	0f 84 1e 00 00 00    	je     8085ac2 <subst_asm_operand+0x10e>
 8085aa4:	b8 2b 00 00 00       	mov    $0x2b,%eax
 8085aa9:	48 89 c6             	mov    %rax,%rsi
 8085aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085ab0:	48 89 c7             	mov    %rax,%rdi
 8085ab3:	b8 00 00 00 00       	mov    $0x0,%eax
 8085ab8:	e8 90 b7 fc ff       	callq  805124d <cstr_ccat>
 8085abd:	e9 05 00 00 00       	jmpq   8085ac7 <subst_asm_operand+0x113>
 8085ac2:	e9 d6 03 00 00       	jmpq   8085e9d <subst_asm_operand+0x4e9>
 8085ac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085acb:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8085ad2:	00 00 00 
 8085ad5:	48 01 c8             	add    %rcx,%rax
 8085ad8:	8b 08                	mov    (%rax),%ecx
 8085ada:	89 4d d8             	mov    %ecx,-0x28(%rbp)
 8085add:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085ae0:	83 f8 6e             	cmp    $0x6e,%eax
 8085ae3:	0f 85 0e 00 00 00    	jne    8085af7 <subst_asm_operand+0x143>
 8085ae9:	b8 00 00 00 00       	mov    $0x0,%eax
 8085aee:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 8085af1:	48 29 c8             	sub    %rcx,%rax
 8085af4:	89 45 d8             	mov    %eax,-0x28(%rbp)
 8085af7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085afb:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8085b02:	00 00 00 
 8085b05:	48 01 c8             	add    %rcx,%rax
 8085b08:	8b 08                	mov    (%rax),%ecx
 8085b0a:	49 89 cb             	mov    %rcx,%r11
 8085b0d:	48 8d 05 d3 7f 00 00 	lea    0x7fd3(%rip),%rax        # 808dae7 <L.123>
 8085b14:	49 89 c2             	mov    %rax,%r10
 8085b17:	b8 40 00 00 00       	mov    $0x40,%eax
 8085b1c:	48 89 c6             	mov    %rax,%rsi
 8085b1f:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085b23:	48 89 c7             	mov    %rax,%rdi
 8085b26:	4c 89 d2             	mov    %r10,%rdx
 8085b29:	4c 89 d9             	mov    %r11,%rcx
 8085b2c:	b8 00 00 00 00       	mov    $0x0,%eax
 8085b31:	e8 0a 21 00 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8085b36:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085b3a:	48 89 c6             	mov    %rax,%rsi
 8085b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085b41:	48 89 c7             	mov    %rax,%rdi
 8085b44:	b8 00 00 00 00       	mov    $0x0,%eax
 8085b49:	e8 87 b7 fc ff       	callq  80512d5 <cstr_cat>
 8085b4e:	e9 4a 03 00 00       	jmpq   8085e9d <subst_asm_operand+0x4e9>
 8085b53:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8085b56:	83 e0 3f             	and    $0x3f,%eax
 8085b59:	83 f8 32             	cmp    $0x32,%eax
 8085b5c:	0f 85 5c 00 00 00    	jne    8085bbe <subst_asm_operand+0x20a>
 8085b62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085b66:	48 b9 18 00 00 00 00 	movabs $0x18,%rcx
 8085b6d:	00 00 00 
 8085b70:	48 01 c8             	add    %rcx,%rax
 8085b73:	8b 08                	mov    (%rax),%ecx
 8085b75:	49 89 cb             	mov    %rcx,%r11
 8085b78:	48 8d 05 6b 7f 00 00 	lea    0x7f6b(%rip),%rax        # 808daea <L.124>
 8085b7f:	49 89 c2             	mov    %rax,%r10
 8085b82:	b8 40 00 00 00       	mov    $0x40,%eax
 8085b87:	48 89 c6             	mov    %rax,%rsi
 8085b8a:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085b8e:	48 89 c7             	mov    %rax,%rdi
 8085b91:	4c 89 d2             	mov    %r10,%rdx
 8085b94:	4c 89 d9             	mov    %r11,%rcx
 8085b97:	b8 00 00 00 00       	mov    $0x0,%eax
 8085b9c:	e8 9f 20 00 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8085ba1:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085ba5:	48 89 c6             	mov    %rax,%rsi
 8085ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085bac:	48 89 c7             	mov    %rax,%rdi
 8085baf:	b8 00 00 00 00       	mov    $0x0,%eax
 8085bb4:	e8 1c b7 fc ff       	callq  80512d5 <cstr_cat>
 8085bb9:	e9 df 02 00 00       	jmpq   8085e9d <subst_asm_operand+0x4e9>
 8085bbe:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8085bc1:	81 e0 00 01 00 00    	and    $0x100,%eax
 8085bc7:	85 c0                	test   %eax,%eax
 8085bc9:	0f 84 90 00 00 00    	je     8085c5f <subst_asm_operand+0x2ab>
 8085bcf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8085bd2:	83 e0 3f             	and    $0x3f,%eax
 8085bd5:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085bd8:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085bdb:	83 f8 30             	cmp    $0x30,%eax
 8085bde:	0f 8c 14 00 00 00    	jl     8085bf8 <subst_asm_operand+0x244>
 8085be4:	48 8d 05 09 7f 00 00 	lea    0x7f09(%rip),%rax        # 808daf4 <L.125>
 8085beb:	48 89 c7             	mov    %rax,%rdi
 8085bee:	b8 00 00 00 00       	mov    $0x0,%eax
 8085bf3:	e8 cf 7a fc ff       	callq  804d6c7 <tcc_error>
 8085bf8:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085bfb:	81 c0 aa 01 00 00    	add    $0x1aa,%eax
 8085c01:	b9 00 00 00 00       	mov    $0x0,%ecx
 8085c06:	48 89 ce             	mov    %rcx,%rsi
 8085c09:	48 89 c7             	mov    %rax,%rdi
 8085c0c:	b8 00 00 00 00       	mov    $0x0,%eax
 8085c11:	e8 9e bc fc ff       	callq  80518b4 <get_tok_str>
 8085c16:	49 89 c3             	mov    %rax,%r11
 8085c19:	48 8d 05 ec 7e 00 00 	lea    0x7eec(%rip),%rax        # 808db0c <L.126>
 8085c20:	49 89 c2             	mov    %rax,%r10
 8085c23:	b8 40 00 00 00       	mov    $0x40,%eax
 8085c28:	48 89 c6             	mov    %rax,%rsi
 8085c2b:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085c2f:	48 89 c7             	mov    %rax,%rdi
 8085c32:	4c 89 d2             	mov    %r10,%rdx
 8085c35:	4c 89 d9             	mov    %r11,%rcx
 8085c38:	b8 00 00 00 00       	mov    $0x0,%eax
 8085c3d:	e8 fe 1f 00 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8085c42:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085c46:	48 89 c6             	mov    %rax,%rsi
 8085c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085c4d:	48 89 c7             	mov    %rax,%rdi
 8085c50:	b8 00 00 00 00       	mov    $0x0,%eax
 8085c55:	e8 7b b6 fc ff       	callq  80512d5 <cstr_cat>
 8085c5a:	e9 3e 02 00 00       	jmpq   8085e9d <subst_asm_operand+0x4e9>
 8085c5f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8085c62:	83 e0 3f             	and    $0x3f,%eax
 8085c65:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085c68:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085c6b:	83 f8 30             	cmp    $0x30,%eax
 8085c6e:	0f 8c 14 00 00 00    	jl     8085c88 <subst_asm_operand+0x2d4>
 8085c74:	48 8d 05 98 7e 00 00 	lea    0x7e98(%rip),%rax        # 808db13 <L.127>
 8085c7b:	48 89 c7             	mov    %rax,%rdi
 8085c7e:	b8 00 00 00 00       	mov    $0x0,%eax
 8085c83:	e8 3f 7a fc ff       	callq  804d6c7 <tcc_error>
 8085c88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085c8c:	8b 08                	mov    (%rax),%ecx
 8085c8e:	83 e1 0f             	and    $0xf,%ecx
 8085c91:	83 f9 01             	cmp    $0x1,%ecx
 8085c94:	0f 85 0d 00 00 00    	jne    8085ca7 <subst_asm_operand+0x2f3>
 8085c9a:	b8 01 00 00 00       	mov    $0x1,%eax
 8085c9f:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085ca2:	e9 46 00 00 00       	jmpq   8085ced <subst_asm_operand+0x339>
 8085ca7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085cab:	8b 08                	mov    (%rax),%ecx
 8085cad:	83 e1 0f             	and    $0xf,%ecx
 8085cb0:	83 f9 02             	cmp    $0x2,%ecx
 8085cb3:	0f 85 0d 00 00 00    	jne    8085cc6 <subst_asm_operand+0x312>
 8085cb9:	b8 02 00 00 00       	mov    $0x2,%eax
 8085cbe:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085cc1:	e9 27 00 00 00       	jmpq   8085ced <subst_asm_operand+0x339>
 8085cc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8085cca:	8b 08                	mov    (%rax),%ecx
 8085ccc:	83 e1 0f             	and    $0xf,%ecx
 8085ccf:	83 f9 0c             	cmp    $0xc,%ecx
 8085cd2:	0f 85 0d 00 00 00    	jne    8085ce5 <subst_asm_operand+0x331>
 8085cd8:	b8 08 00 00 00       	mov    $0x8,%eax
 8085cdd:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085ce0:	e9 08 00 00 00       	jmpq   8085ced <subst_asm_operand+0x339>
 8085ce5:	b8 04 00 00 00       	mov    $0x4,%eax
 8085cea:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085ced:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8085cf0:	83 f8 01             	cmp    $0x1,%eax
 8085cf3:	0f 85 14 00 00 00    	jne    8085d0d <subst_asm_operand+0x359>
 8085cf9:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085cfc:	83 f8 04             	cmp    $0x4,%eax
 8085cff:	0f 8c 08 00 00 00    	jl     8085d0d <subst_asm_operand+0x359>
 8085d05:	b8 04 00 00 00       	mov    $0x4,%eax
 8085d0a:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085d0d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085d10:	83 f8 62             	cmp    $0x62,%eax
 8085d13:	0f 85 2d 00 00 00    	jne    8085d46 <subst_asm_operand+0x392>
 8085d19:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085d1c:	83 f8 04             	cmp    $0x4,%eax
 8085d1f:	0f 8c 14 00 00 00    	jl     8085d39 <subst_asm_operand+0x385>
 8085d25:	48 8d 05 ff 7d 00 00 	lea    0x7dff(%rip),%rax        # 808db2b <L.128>
 8085d2c:	48 89 c7             	mov    %rax,%rdi
 8085d2f:	b8 00 00 00 00       	mov    $0x0,%eax
 8085d34:	e8 8e 79 fc ff       	callq  804d6c7 <tcc_error>
 8085d39:	b8 01 00 00 00       	mov    $0x1,%eax
 8085d3e:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085d41:	e9 66 00 00 00       	jmpq   8085dac <subst_asm_operand+0x3f8>
 8085d46:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085d49:	83 f8 68             	cmp    $0x68,%eax
 8085d4c:	0f 85 2d 00 00 00    	jne    8085d7f <subst_asm_operand+0x3cb>
 8085d52:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085d55:	83 f8 04             	cmp    $0x4,%eax
 8085d58:	0f 8c 14 00 00 00    	jl     8085d72 <subst_asm_operand+0x3be>
 8085d5e:	48 8d 05 df 7d 00 00 	lea    0x7ddf(%rip),%rax        # 808db44 <L.129>
 8085d65:	48 89 c7             	mov    %rax,%rdi
 8085d68:	b8 00 00 00 00       	mov    $0x0,%eax
 8085d6d:	e8 55 79 fc ff       	callq  804d6c7 <tcc_error>
 8085d72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8085d77:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085d7a:	e9 2d 00 00 00       	jmpq   8085dac <subst_asm_operand+0x3f8>
 8085d7f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085d82:	83 f8 77             	cmp    $0x77,%eax
 8085d85:	0f 85 0d 00 00 00    	jne    8085d98 <subst_asm_operand+0x3e4>
 8085d8b:	b8 02 00 00 00       	mov    $0x2,%eax
 8085d90:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085d93:	e9 14 00 00 00       	jmpq   8085dac <subst_asm_operand+0x3f8>
 8085d98:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8085d9b:	83 f8 71             	cmp    $0x71,%eax
 8085d9e:	0f 85 08 00 00 00    	jne    8085dac <subst_asm_operand+0x3f8>
 8085da4:	b8 08 00 00 00       	mov    $0x8,%eax
 8085da9:	89 45 dc             	mov    %eax,-0x24(%rbp)
 8085dac:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8085daf:	e9 05 00 00 00       	jmpq   8085db9 <subst_asm_operand+0x405>
 8085db4:	e9 09 00 00 00       	jmpq   8085dc2 <subst_asm_operand+0x40e>
 8085db9:	83 f8 ff             	cmp    $0xffffffff,%eax
 8085dbc:	0f 85 16 00 00 00    	jne    8085dd8 <subst_asm_operand+0x424>
 8085dc2:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085dc5:	81 c0 9e 01 00 00    	add    $0x19e,%eax
 8085dcb:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085dce:	e9 6e 00 00 00       	jmpq   8085e41 <subst_asm_operand+0x48d>
 8085dd3:	e9 09 00 00 00       	jmpq   8085de1 <subst_asm_operand+0x42d>
 8085dd8:	83 f8 01             	cmp    $0x1,%eax
 8085ddb:	0f 85 16 00 00 00    	jne    8085df7 <subst_asm_operand+0x443>
 8085de1:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085de4:	81 c0 9a 01 00 00    	add    $0x19a,%eax
 8085dea:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085ded:	e9 4f 00 00 00       	jmpq   8085e41 <subst_asm_operand+0x48d>
 8085df2:	e9 09 00 00 00       	jmpq   8085e00 <subst_asm_operand+0x44c>
 8085df7:	83 f8 02             	cmp    $0x2,%eax
 8085dfa:	0f 85 27 00 00 00    	jne    8085e27 <subst_asm_operand+0x473>
 8085e00:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085e03:	81 c0 a2 01 00 00    	add    $0x1a2,%eax
 8085e09:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085e0c:	e9 30 00 00 00       	jmpq   8085e41 <subst_asm_operand+0x48d>
 8085e11:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085e14:	81 c0 aa 01 00 00    	add    $0x1aa,%eax
 8085e1a:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085e1d:	e9 1f 00 00 00       	jmpq   8085e41 <subst_asm_operand+0x48d>
 8085e22:	e9 09 00 00 00       	jmpq   8085e30 <subst_asm_operand+0x47c>
 8085e27:	83 f8 08             	cmp    $0x8,%eax
 8085e2a:	0f 85 e1 ff ff ff    	jne    8085e11 <subst_asm_operand+0x45d>
 8085e30:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085e33:	81 c0 b2 01 00 00    	add    $0x1b2,%eax
 8085e39:	89 45 e0             	mov    %eax,-0x20(%rbp)
 8085e3c:	e9 00 00 00 00       	jmpq   8085e41 <subst_asm_operand+0x48d>
 8085e41:	b8 00 00 00 00       	mov    $0x0,%eax
 8085e46:	48 89 c6             	mov    %rax,%rsi
 8085e49:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085e4c:	48 89 c7             	mov    %rax,%rdi
 8085e4f:	b8 00 00 00 00       	mov    $0x0,%eax
 8085e54:	e8 5b ba fc ff       	callq  80518b4 <get_tok_str>
 8085e59:	49 89 c3             	mov    %rax,%r11
 8085e5c:	48 8d 05 fa 7c 00 00 	lea    0x7cfa(%rip),%rax        # 808db5d <L.130>
 8085e63:	49 89 c2             	mov    %rax,%r10
 8085e66:	b8 40 00 00 00       	mov    $0x40,%eax
 8085e6b:	48 89 c6             	mov    %rax,%rsi
 8085e6e:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085e72:	48 89 c7             	mov    %rax,%rdi
 8085e75:	4c 89 d2             	mov    %r10,%rdx
 8085e78:	4c 89 d9             	mov    %r11,%rcx
 8085e7b:	b8 00 00 00 00       	mov    $0x0,%eax
 8085e80:	e8 bb 1d 00 00       	callq  8087c40 <__preinit_array_end+0x1a0>
 8085e85:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 8085e89:	48 89 c6             	mov    %rax,%rsi
 8085e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085e90:	48 89 c7             	mov    %rax,%rdi
 8085e93:	b8 00 00 00 00       	mov    $0x0,%eax
 8085e98:	e8 38 b4 fc ff       	callq  80512d5 <cstr_cat>
 8085e9d:	c9                   	leaveq 
 8085e9e:	c3                   	retq   

0000000008085e9f <asm_gen_code>:
 8085e9f:	55                   	push   %rbp
 8085ea0:	48 89 e5             	mov    %rsp,%rbp
 8085ea3:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
 8085eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8085eae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 8085eb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 8085eb6:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
 8085eba:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
 8085ebe:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
 8085ec2:	b8 08 00 00 00       	mov    $0x8,%eax
 8085ec7:	49 89 c2             	mov    %rax,%r10
 8085eca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 8085ece:	48 89 c6             	mov    %rax,%rsi
 8085ed1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8085ed5:	48 89 c7             	mov    %rax,%rdi
 8085ed8:	4c 89 d2             	mov    %r10,%rdx
 8085edb:	b8 00 00 00 00       	mov    $0x0,%eax
 8085ee0:	e8 8b 0d 00 00       	callq  8086c70 <memcpy>
 8085ee5:	b8 00 00 00 00       	mov    $0x0,%eax
 8085eea:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8085eed:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8085ef0:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8085ef3:	39 c8                	cmp    %ecx,%eax
 8085ef5:	0f 8d 7d 00 00 00    	jge    8085f78 <asm_gen_code+0xd9>
 8085efb:	e9 0e 00 00 00       	jmpq   8085f0e <asm_gen_code+0x6f>
 8085f00:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8085f03:	48 89 c1             	mov    %rax,%rcx
 8085f06:	83 c0 01             	add    $0x1,%eax
 8085f09:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8085f0c:	eb df                	jmp    8085eed <asm_gen_code+0x4e>
 8085f0e:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8085f11:	48 63 c0             	movslq %eax,%rax
 8085f14:	48 89 c1             	mov    %rax,%rcx
 8085f17:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8085f1e:	00 00 00 
 8085f21:	48 0f af c8          	imul   %rax,%rcx
 8085f25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8085f29:	48 89 ca             	mov    %rcx,%rdx
 8085f2c:	48 01 d0             	add    %rdx,%rax
 8085f2f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8085f33:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8085f37:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8085f3e:	00 00 00 
 8085f41:	48 01 c8             	add    %rcx,%rax
 8085f44:	8b 08                	mov    (%rax),%ecx
 8085f46:	83 f9 00             	cmp    $0x0,%ecx
 8085f49:	0f 8c 27 00 00 00    	jl     8085f76 <asm_gen_code+0xd7>
 8085f4f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8085f53:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8085f5a:	00 00 00 
 8085f5d:	48 01 c8             	add    %rcx,%rax
 8085f60:	8b 08                	mov    (%rax),%ecx
 8085f62:	48 63 c9             	movslq %ecx,%rcx
 8085f65:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 8085f69:	48 89 ca             	mov    %rcx,%rdx
 8085f6c:	48 01 d0             	add    %rdx,%rax
 8085f6f:	b9 01 00 00 00       	mov    $0x1,%ecx
 8085f74:	88 08                	mov    %cl,(%rax)
 8085f76:	eb 88                	jmp    8085f00 <asm_gen_code+0x61>
 8085f78:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8085f7b:	85 c0                	test   %eax,%eax
 8085f7d:	0f 84 05 00 00 00    	je     8085f88 <asm_gen_code+0xe9>
 8085f83:	e9 88 02 00 00       	jmpq   8086210 <asm_gen_code+0x371>
 8085f88:	b8 00 00 00 00       	mov    $0x0,%eax
 8085f8d:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8085f90:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8085f93:	83 f8 03             	cmp    $0x3,%eax
 8085f96:	0f 8d 5c 00 00 00    	jge    8085ff8 <asm_gen_code+0x159>
 8085f9c:	e9 0e 00 00 00       	jmpq   8085faf <asm_gen_code+0x110>
 8085fa1:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8085fa4:	48 89 c1             	mov    %rax,%rcx
 8085fa7:	83 c0 01             	add    $0x1,%eax
 8085faa:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8085fad:	eb e1                	jmp    8085f90 <asm_gen_code+0xf1>
 8085faf:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8085fb2:	48 63 c0             	movslq %eax,%rax
 8085fb5:	48 8d 0d a6 7b 00 00 	lea    0x7ba6(%rip),%rcx        # 808db62 <reg_saved>
 8085fbc:	48 89 c2             	mov    %rax,%rdx
 8085fbf:	48 01 d1             	add    %rdx,%rcx
 8085fc2:	0f b6 01             	movzbl (%rcx),%eax
 8085fc5:	89 45 b8             	mov    %eax,-0x48(%rbp)
 8085fc8:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8085fcb:	48 63 c0             	movslq %eax,%rax
 8085fce:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
 8085fd2:	48 89 c2             	mov    %rax,%rdx
 8085fd5:	48 01 d1             	add    %rdx,%rcx
 8085fd8:	0f b6 01             	movzbl (%rcx),%eax
 8085fdb:	85 c0                	test   %eax,%eax
 8085fdd:	0f 84 13 00 00 00    	je     8085ff6 <asm_gen_code+0x157>
 8085fe3:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8085fe6:	83 c0 50             	add    $0x50,%eax
 8085fe9:	48 89 c7             	mov    %rax,%rdi
 8085fec:	b8 00 00 00 00       	mov    $0x0,%eax
 8085ff1:	e8 ad 7b ff ff       	callq  807dba3 <g>
 8085ff6:	eb a9                	jmp    8085fa1 <asm_gen_code+0x102>
 8085ff8:	b8 00 00 00 00       	mov    $0x0,%eax
 8085ffd:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8086000:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086003:	8b 4d f0             	mov    -0x10(%rbp),%ecx
 8086006:	39 c8                	cmp    %ecx,%eax
 8086008:	0f 8d fd 01 00 00    	jge    808620b <asm_gen_code+0x36c>
 808600e:	e9 0e 00 00 00       	jmpq   8086021 <asm_gen_code+0x182>
 8086013:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086016:	48 89 c1             	mov    %rax,%rcx
 8086019:	83 c0 01             	add    $0x1,%eax
 808601c:	89 45 bc             	mov    %eax,-0x44(%rbp)
 808601f:	eb df                	jmp    8086000 <asm_gen_code+0x161>
 8086021:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086024:	48 63 c0             	movslq %eax,%rax
 8086027:	48 89 c1             	mov    %rax,%rcx
 808602a:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8086031:	00 00 00 
 8086034:	48 0f af c8          	imul   %rax,%rcx
 8086038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808603c:	48 89 ca             	mov    %rcx,%rdx
 808603f:	48 01 d0             	add    %rdx,%rax
 8086042:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 8086046:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 808604a:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8086051:	00 00 00 
 8086054:	48 01 c8             	add    %rcx,%rax
 8086057:	8b 08                	mov    (%rax),%ecx
 8086059:	83 f9 00             	cmp    $0x0,%ecx
 808605c:	0f 8c a4 01 00 00    	jl     8086206 <asm_gen_code+0x367>
 8086062:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086066:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 808606d:	00 00 00 
 8086070:	48 01 c8             	add    %rcx,%rax
 8086073:	48 8b 08             	mov    (%rax),%rcx
 8086076:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 808607d:	00 00 00 
 8086080:	48 01 c1             	add    %rax,%rcx
 8086083:	0f b7 01             	movzwl (%rcx),%eax
 8086086:	83 e0 3f             	and    $0x3f,%eax
 8086089:	83 f8 31             	cmp    $0x31,%eax
 808608c:	0f 85 8c 00 00 00    	jne    808611e <asm_gen_code+0x27f>
 8086092:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086096:	48 b9 3c 00 00 00 00 	movabs $0x3c,%rcx
 808609d:	00 00 00 
 80860a0:	48 01 c8             	add    %rcx,%rax
 80860a3:	8b 08                	mov    (%rax),%ecx
 80860a5:	85 c9                	test   %ecx,%ecx
 80860a7:	0f 84 71 00 00 00    	je     808611e <asm_gen_code+0x27f>
 80860ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80860b1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80860b8:	00 00 00 
 80860bb:	48 01 c8             	add    %rcx,%rax
 80860be:	48 8b 08             	mov    (%rax),%rcx
 80860c1:	b8 30 00 00 00       	mov    $0x30,%eax
 80860c6:	49 89 c2             	mov    %rax,%r10
 80860c9:	48 89 ce             	mov    %rcx,%rsi
 80860cc:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 80860d0:	48 89 c7             	mov    %rax,%rdi
 80860d3:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
 80860d7:	4c 89 d2             	mov    %r10,%rdx
 80860da:	b8 00 00 00 00       	mov    $0x0,%eax
 80860df:	e8 8c 0b 00 00       	callq  8086c70 <memcpy>
 80860e4:	0f b7 45 98          	movzwl -0x68(%rbp),%eax
 80860e8:	83 e0 c0             	and    $0xffffffc0,%eax
 80860eb:	83 c8 32             	or     $0x32,%eax
 80860ee:	66 89 45 98          	mov    %ax,-0x68(%rbp)
 80860f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80860f6:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 80860fd:	00 00 00 
 8086100:	48 01 c8             	add    %rcx,%rax
 8086103:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
 8086107:	48 89 ce             	mov    %rcx,%rsi
 808610a:	8b 08                	mov    (%rax),%ecx
 808610c:	48 89 cf             	mov    %rcx,%rdi
 808610f:	b8 00 00 00 00       	mov    $0x0,%eax
 8086114:	e8 c8 84 ff ff       	callq  807e5e1 <load>
 8086119:	e9 e8 00 00 00       	jmpq   8086206 <asm_gen_code+0x367>
 808611e:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086121:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 8086124:	39 c8                	cmp    %ecx,%eax
 8086126:	0f 8d 20 00 00 00    	jge    808614c <asm_gen_code+0x2ad>
 808612c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086130:	48 b9 40 00 00 00 00 	movabs $0x40,%rcx
 8086137:	00 00 00 
 808613a:	48 01 c8             	add    %rcx,%rax
 808613d:	8b 08                	mov    (%rax),%ecx
 808613f:	85 c9                	test   %ecx,%ecx
 8086141:	0f 85 05 00 00 00    	jne    808614c <asm_gen_code+0x2ad>
 8086147:	e9 ba 00 00 00       	jmpq   8086206 <asm_gen_code+0x367>
 808614c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086150:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8086157:	00 00 00 
 808615a:	48 01 c8             	add    %rcx,%rax
 808615d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 8086161:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8086168:	00 00 00 
 808616b:	48 01 d1             	add    %rdx,%rcx
 808616e:	48 8b 11             	mov    (%rcx),%rdx
 8086171:	48 89 d6             	mov    %rdx,%rsi
 8086174:	8b 08                	mov    (%rax),%ecx
 8086176:	48 89 cf             	mov    %rcx,%rdi
 8086179:	b8 00 00 00 00       	mov    $0x0,%eax
 808617e:	e8 5e 84 ff ff       	callq  807e5e1 <load>
 8086183:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086187:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 808618e:	00 00 00 
 8086191:	48 01 c8             	add    %rcx,%rax
 8086194:	8b 08                	mov    (%rax),%ecx
 8086196:	85 c9                	test   %ecx,%ecx
 8086198:	0f 84 68 00 00 00    	je     8086206 <asm_gen_code+0x367>
 808619e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80861a2:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80861a9:	00 00 00 
 80861ac:	48 01 c8             	add    %rcx,%rax
 80861af:	48 8b 08             	mov    (%rax),%rcx
 80861b2:	b8 30 00 00 00       	mov    $0x30,%eax
 80861b7:	49 89 c2             	mov    %rax,%r10
 80861ba:	48 89 ce             	mov    %rcx,%rsi
 80861bd:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 80861c4:	48 89 c7             	mov    %rax,%rdi
 80861c7:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
 80861ce:	4c 89 d2             	mov    %r10,%rdx
 80861d1:	b8 00 00 00 00       	mov    $0x0,%eax
 80861d6:	e8 95 0a 00 00       	callq  8086c70 <memcpy>
 80861db:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
 80861e1:	83 c0 04             	add    $0x4,%eax
 80861e4:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
 80861ea:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 80861f1:	48 89 c6             	mov    %rax,%rsi
 80861f4:	b8 02 00 00 00       	mov    $0x2,%eax
 80861f9:	48 89 c7             	mov    %rax,%rdi
 80861fc:	b8 00 00 00 00       	mov    $0x0,%eax
 8086201:	e8 db 83 ff ff       	callq  807e5e1 <load>
 8086206:	e9 08 fe ff ff       	jmpq   8086013 <asm_gen_code+0x174>
 808620b:	e9 9a 02 00 00       	jmpq   80864aa <asm_gen_code+0x60b>
 8086210:	b8 00 00 00 00       	mov    $0x0,%eax
 8086215:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8086218:	8b 45 bc             	mov    -0x44(%rbp),%eax
 808621b:	8b 4d e8             	mov    -0x18(%rbp),%ecx
 808621e:	39 c8                	cmp    %ecx,%eax
 8086220:	0f 8d 14 02 00 00    	jge    808643a <asm_gen_code+0x59b>
 8086226:	e9 0e 00 00 00       	jmpq   8086239 <asm_gen_code+0x39a>
 808622b:	8b 45 bc             	mov    -0x44(%rbp),%eax
 808622e:	48 89 c1             	mov    %rax,%rcx
 8086231:	83 c0 01             	add    $0x1,%eax
 8086234:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8086237:	eb df                	jmp    8086218 <asm_gen_code+0x379>
 8086239:	8b 45 bc             	mov    -0x44(%rbp),%eax
 808623c:	48 63 c0             	movslq %eax,%rax
 808623f:	48 89 c1             	mov    %rax,%rcx
 8086242:	48 b8 48 00 00 00 00 	movabs $0x48,%rax
 8086249:	00 00 00 
 808624c:	48 0f af c8          	imul   %rax,%rcx
 8086250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8086254:	48 89 ca             	mov    %rcx,%rdx
 8086257:	48 01 d0             	add    %rdx,%rax
 808625a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 808625e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086262:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8086269:	00 00 00 
 808626c:	48 01 c8             	add    %rcx,%rax
 808626f:	8b 08                	mov    (%rax),%ecx
 8086271:	83 f9 00             	cmp    $0x0,%ecx
 8086274:	0f 8c bb 01 00 00    	jl     8086435 <asm_gen_code+0x596>
 808627a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 808627e:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 8086285:	00 00 00 
 8086288:	48 01 c8             	add    %rcx,%rax
 808628b:	48 8b 08             	mov    (%rax),%rcx
 808628e:	48 b8 10 00 00 00 00 	movabs $0x10,%rax
 8086295:	00 00 00 
 8086298:	48 01 c1             	add    %rax,%rcx
 808629b:	0f b7 01             	movzwl (%rcx),%eax
 808629e:	83 e0 3f             	and    $0x3f,%eax
 80862a1:	83 f8 31             	cmp    $0x31,%eax
 80862a4:	0f 85 d1 00 00 00    	jne    808637b <asm_gen_code+0x4dc>
 80862aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80862ae:	48 b9 3c 00 00 00 00 	movabs $0x3c,%rcx
 80862b5:	00 00 00 
 80862b8:	48 01 c8             	add    %rcx,%rax
 80862bb:	8b 08                	mov    (%rax),%ecx
 80862bd:	85 c9                	test   %ecx,%ecx
 80862bf:	0f 84 05 00 00 00    	je     80862ca <asm_gen_code+0x42b>
 80862c5:	e9 ac 00 00 00       	jmpq   8086376 <asm_gen_code+0x4d7>
 80862ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80862ce:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80862d5:	00 00 00 
 80862d8:	48 01 c8             	add    %rcx,%rax
 80862db:	48 8b 08             	mov    (%rax),%rcx
 80862de:	b8 30 00 00 00       	mov    $0x30,%eax
 80862e3:	49 89 c2             	mov    %rax,%r10
 80862e6:	48 89 ce             	mov    %rcx,%rsi
 80862e9:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
 80862f0:	48 89 c7             	mov    %rax,%rdi
 80862f3:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
 80862fa:	4c 89 d2             	mov    %r10,%rdx
 80862fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8086302:	e8 69 09 00 00       	callq  8086c70 <memcpy>
 8086307:	0f b7 85 28 ff ff ff 	movzwl -0xd8(%rbp),%eax
 808630e:	83 e0 c0             	and    $0xffffffc0,%eax
 8086311:	83 c8 32             	or     $0x32,%eax
 8086314:	66 89 85 28 ff ff ff 	mov    %ax,-0xd8(%rbp)
 808631b:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
 8086322:	48 89 c6             	mov    %rax,%rsi
 8086325:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8086328:	48 89 c7             	mov    %rax,%rdi
 808632b:	b8 00 00 00 00       	mov    $0x0,%eax
 8086330:	e8 ac 82 ff ff       	callq  807e5e1 <load>
 8086335:	0f b7 85 28 ff ff ff 	movzwl -0xd8(%rbp),%eax
 808633c:	83 e0 c0             	and    $0xffffffc0,%eax
 808633f:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 8086342:	48 09 c8             	or     %rcx,%rax
 8086345:	66 89 85 28 ff ff ff 	mov    %ax,-0xd8(%rbp)
 808634c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 8086350:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8086357:	00 00 00 
 808635a:	48 01 c8             	add    %rcx,%rax
 808635d:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
 8086364:	48 89 ce             	mov    %rcx,%rsi
 8086367:	8b 08                	mov    (%rax),%ecx
 8086369:	48 89 cf             	mov    %rcx,%rdi
 808636c:	b8 00 00 00 00       	mov    $0x0,%eax
 8086371:	e8 31 8c ff ff       	callq  807efa7 <store>
 8086376:	e9 ba 00 00 00       	jmpq   8086435 <asm_gen_code+0x596>
 808637b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 808637f:	48 b9 34 00 00 00 00 	movabs $0x34,%rcx
 8086386:	00 00 00 
 8086389:	48 01 c8             	add    %rcx,%rax
 808638c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 8086390:	48 ba 20 00 00 00 00 	movabs $0x20,%rdx
 8086397:	00 00 00 
 808639a:	48 01 d1             	add    %rdx,%rcx
 808639d:	48 8b 11             	mov    (%rcx),%rdx
 80863a0:	48 89 d6             	mov    %rdx,%rsi
 80863a3:	8b 08                	mov    (%rax),%ecx
 80863a5:	48 89 cf             	mov    %rcx,%rdi
 80863a8:	b8 00 00 00 00       	mov    $0x0,%eax
 80863ad:	e8 f5 8b ff ff       	callq  807efa7 <store>
 80863b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80863b6:	48 b9 38 00 00 00 00 	movabs $0x38,%rcx
 80863bd:	00 00 00 
 80863c0:	48 01 c8             	add    %rcx,%rax
 80863c3:	8b 08                	mov    (%rax),%ecx
 80863c5:	85 c9                	test   %ecx,%ecx
 80863c7:	0f 84 68 00 00 00    	je     8086435 <asm_gen_code+0x596>
 80863cd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 80863d1:	48 b9 20 00 00 00 00 	movabs $0x20,%rcx
 80863d8:	00 00 00 
 80863db:	48 01 c8             	add    %rcx,%rax
 80863de:	48 8b 08             	mov    (%rax),%rcx
 80863e1:	b8 30 00 00 00       	mov    $0x30,%eax
 80863e6:	49 89 c2             	mov    %rax,%r10
 80863e9:	48 89 ce             	mov    %rcx,%rsi
 80863ec:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 80863f3:	48 89 c7             	mov    %rax,%rdi
 80863f6:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
 80863fd:	4c 89 d2             	mov    %r10,%rdx
 8086400:	b8 00 00 00 00       	mov    $0x0,%eax
 8086405:	e8 66 08 00 00       	callq  8086c70 <memcpy>
 808640a:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
 8086410:	83 c0 04             	add    $0x4,%eax
 8086413:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
 8086419:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 8086420:	48 89 c6             	mov    %rax,%rsi
 8086423:	b8 02 00 00 00       	mov    $0x2,%eax
 8086428:	48 89 c7             	mov    %rax,%rdi
 808642b:	b8 00 00 00 00       	mov    $0x0,%eax
 8086430:	e8 72 8b ff ff       	callq  807efa7 <store>
 8086435:	e9 f1 fd ff ff       	jmpq   808622b <asm_gen_code+0x38c>
 808643a:	b8 02 00 00 00       	mov    $0x2,%eax
 808643f:	89 45 bc             	mov    %eax,-0x44(%rbp)
 8086442:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086445:	83 f8 00             	cmp    $0x0,%eax
 8086448:	0f 8c 5c 00 00 00    	jl     80864aa <asm_gen_code+0x60b>
 808644e:	e9 0e 00 00 00       	jmpq   8086461 <asm_gen_code+0x5c2>
 8086453:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086456:	48 89 c1             	mov    %rax,%rcx
 8086459:	83 c0 ff             	add    $0xffffffff,%eax
 808645c:	89 45 bc             	mov    %eax,-0x44(%rbp)
 808645f:	eb e1                	jmp    8086442 <asm_gen_code+0x5a3>
 8086461:	8b 45 bc             	mov    -0x44(%rbp),%eax
 8086464:	48 63 c0             	movslq %eax,%rax
 8086467:	48 8d 0d f4 76 00 00 	lea    0x76f4(%rip),%rcx        # 808db62 <reg_saved>
 808646e:	48 89 c2             	mov    %rax,%rdx
 8086471:	48 01 d1             	add    %rdx,%rcx
 8086474:	0f b6 01             	movzbl (%rcx),%eax
 8086477:	89 45 b8             	mov    %eax,-0x48(%rbp)
 808647a:	8b 45 b8             	mov    -0x48(%rbp),%eax
 808647d:	48 63 c0             	movslq %eax,%rax
 8086480:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
 8086484:	48 89 c2             	mov    %rax,%rdx
 8086487:	48 01 d1             	add    %rdx,%rcx
 808648a:	0f b6 01             	movzbl (%rcx),%eax
 808648d:	85 c0                	test   %eax,%eax
 808648f:	0f 84 13 00 00 00    	je     80864a8 <asm_gen_code+0x609>
 8086495:	8b 45 b8             	mov    -0x48(%rbp),%eax
 8086498:	83 c0 58             	add    $0x58,%eax
 808649b:	48 89 c7             	mov    %rax,%rdi
 808649e:	b8 00 00 00 00       	mov    $0x0,%eax
 80864a3:	e8 fb 76 ff ff       	callq  807dba3 <g>
 80864a8:	eb a9                	jmp    8086453 <asm_gen_code+0x5b4>
 80864aa:	c9                   	leaveq 
 80864ab:	c3                   	retq   

00000000080864ac <asm_clobber>:
 80864ac:	55                   	push   %rbp
 80864ad:	48 89 e5             	mov    %rsp,%rbp
 80864b0:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80864b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80864bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80864bf:	48 8d 05 9f 76 00 00 	lea    0x769f(%rip),%rax        # 808db65 <L.131>
 80864c6:	48 89 c6             	mov    %rax,%rsi
 80864c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80864cd:	48 89 c7             	mov    %rax,%rdi
 80864d0:	b8 00 00 00 00       	mov    $0x0,%eax
 80864d5:	e8 06 0d 00 00       	callq  80871e0 <strcmp>
 80864da:	85 c0                	test   %eax,%eax
 80864dc:	0f 84 28 00 00 00    	je     808650a <asm_clobber+0x5e>
 80864e2:	48 8d 05 83 76 00 00 	lea    0x7683(%rip),%rax        # 808db6c <L.132>
 80864e9:	48 89 c6             	mov    %rax,%rsi
 80864ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80864f0:	48 89 c7             	mov    %rax,%rdi
 80864f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80864f8:	e8 e3 0c 00 00       	callq  80871e0 <strcmp>
 80864fd:	85 c0                	test   %eax,%eax
 80864ff:	0f 84 05 00 00 00    	je     808650a <asm_clobber+0x5e>
 8086505:	e9 05 00 00 00       	jmpq   808650f <asm_clobber+0x63>
 808650a:	e9 fe 00 00 00       	jmpq   808660d <asm_clobber+0x161>
 808650f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086513:	48 89 c7             	mov    %rax,%rdi
 8086516:	b8 00 00 00 00       	mov    $0x0,%eax
 808651b:	e8 c0 0d 00 00       	callq  80872e0 <strlen>
 8086520:	48 89 c6             	mov    %rax,%rsi
 8086523:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086527:	48 89 c7             	mov    %rax,%rdi
 808652a:	b8 00 00 00 00       	mov    $0x0,%eax
 808652f:	e8 2f b2 fc ff       	callq  8051763 <tok_alloc>
 8086534:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8086538:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 808653c:	48 b9 28 00 00 00 00 	movabs $0x28,%rcx
 8086543:	00 00 00 
 8086546:	48 01 c8             	add    %rcx,%rax
 8086549:	8b 08                	mov    (%rax),%ecx
 808654b:	89 4d ec             	mov    %ecx,-0x14(%rbp)
 808654e:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8086551:	81 f8 aa 01 00 00    	cmp    $0x1aa,%eax
 8086557:	0f 8c 20 00 00 00    	jl     808657d <asm_clobber+0xd1>
 808655d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8086560:	81 f8 b1 01 00 00    	cmp    $0x1b1,%eax
 8086566:	0f 8f 11 00 00 00    	jg     808657d <asm_clobber+0xd1>
 808656c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808656f:	81 e8 aa 01 00 00    	sub    $0x1aa,%eax
 8086575:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8086578:	e9 79 00 00 00       	jmpq   80865f6 <asm_clobber+0x14a>
 808657d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8086580:	81 f8 a2 01 00 00    	cmp    $0x1a2,%eax
 8086586:	0f 8c 20 00 00 00    	jl     80865ac <asm_clobber+0x100>
 808658c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808658f:	81 f8 a9 01 00 00    	cmp    $0x1a9,%eax
 8086595:	0f 8f 11 00 00 00    	jg     80865ac <asm_clobber+0x100>
 808659b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 808659e:	81 e8 a2 01 00 00    	sub    $0x1a2,%eax
 80865a4:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80865a7:	e9 4a 00 00 00       	jmpq   80865f6 <asm_clobber+0x14a>
 80865ac:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80865af:	81 f8 b2 01 00 00    	cmp    $0x1b2,%eax
 80865b5:	0f 8c 20 00 00 00    	jl     80865db <asm_clobber+0x12f>
 80865bb:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80865be:	81 f8 b9 01 00 00    	cmp    $0x1b9,%eax
 80865c4:	0f 8f 11 00 00 00    	jg     80865db <asm_clobber+0x12f>
 80865ca:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80865cd:	81 e8 b2 01 00 00    	sub    $0x1b2,%eax
 80865d3:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80865d6:	e9 1b 00 00 00       	jmpq   80865f6 <asm_clobber+0x14a>
 80865db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80865df:	48 89 c6             	mov    %rax,%rsi
 80865e2:	48 8d 05 86 75 00 00 	lea    0x7586(%rip),%rax        # 808db6f <L.133>
 80865e9:	48 89 c7             	mov    %rax,%rdi
 80865ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80865f1:	e8 d1 70 fc ff       	callq  804d6c7 <tcc_error>
 80865f6:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80865f9:	48 63 c0             	movslq %eax,%rax
 80865fc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8086600:	48 89 c2             	mov    %rax,%rdx
 8086603:	48 01 d1             	add    %rdx,%rcx
 8086606:	b8 01 00 00 00       	mov    $0x1,%eax
 808660b:	88 01                	mov    %al,(%rcx)
 808660d:	c9                   	leaveq 
 808660e:	c3                   	retq   

000000000808660f <constraint_priority>:
 808660f:	55                   	push   %rbp
 8086610:	48 89 e5             	mov    %rsp,%rbp
 8086613:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 808661a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 808661e:	b8 00 00 00 00       	mov    $0x0,%eax
 8086623:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8086626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 808662a:	0f be 08             	movsbl (%rax),%ecx
 808662d:	89 4d f0             	mov    %ecx,-0x10(%rbp)
 8086630:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8086633:	83 f8 00             	cmp    $0x0,%eax
 8086636:	0f 85 05 00 00 00    	jne    8086641 <constraint_priority+0x32>
 808663c:	e9 6e 01 00 00       	jmpq   80867af <constraint_priority+0x1a0>
 8086641:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8086645:	48 89 c1             	mov    %rax,%rcx
 8086648:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
 808664f:	00 00 00 
 8086652:	48 01 d0             	add    %rdx,%rax
 8086655:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8086659:	8b 45 f0             	mov    -0x10(%rbp),%eax
 808665c:	e9 05 00 00 00       	jmpq   8086666 <constraint_priority+0x57>
 8086661:	e9 09 00 00 00       	jmpq   808666f <constraint_priority+0x60>
 8086666:	83 f8 41             	cmp    $0x41,%eax
 8086669:	0f 85 12 00 00 00    	jne    8086681 <constraint_priority+0x72>
 808666f:	b8 00 00 00 00       	mov    $0x0,%eax
 8086674:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8086677:	e9 1a 01 00 00       	jmpq   8086796 <constraint_priority+0x187>
 808667c:	e9 09 00 00 00       	jmpq   808668a <constraint_priority+0x7b>
 8086681:	83 f8 61             	cmp    $0x61,%eax
 8086684:	0f 85 05 00 00 00    	jne    808668f <constraint_priority+0x80>
 808668a:	e9 09 00 00 00       	jmpq   8086698 <constraint_priority+0x89>
 808668f:	83 f8 62             	cmp    $0x62,%eax
 8086692:	0f 85 05 00 00 00    	jne    808669d <constraint_priority+0x8e>
 8086698:	e9 09 00 00 00       	jmpq   80866a6 <constraint_priority+0x97>
 808669d:	83 f8 63             	cmp    $0x63,%eax
 80866a0:	0f 85 05 00 00 00    	jne    80866ab <constraint_priority+0x9c>
 80866a6:	e9 09 00 00 00       	jmpq   80866b4 <constraint_priority+0xa5>
 80866ab:	83 f8 64             	cmp    $0x64,%eax
 80866ae:	0f 85 05 00 00 00    	jne    80866b9 <constraint_priority+0xaa>
 80866b4:	e9 09 00 00 00       	jmpq   80866c2 <constraint_priority+0xb3>
 80866b9:	83 f8 53             	cmp    $0x53,%eax
 80866bc:	0f 85 05 00 00 00    	jne    80866c7 <constraint_priority+0xb8>
 80866c2:	e9 09 00 00 00       	jmpq   80866d0 <constraint_priority+0xc1>
 80866c7:	83 f8 44             	cmp    $0x44,%eax
 80866ca:	0f 85 12 00 00 00    	jne    80866e2 <constraint_priority+0xd3>
 80866d0:	b8 01 00 00 00       	mov    $0x1,%eax
 80866d5:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80866d8:	e9 b9 00 00 00       	jmpq   8086796 <constraint_priority+0x187>
 80866dd:	e9 09 00 00 00       	jmpq   80866eb <constraint_priority+0xdc>
 80866e2:	83 f8 71             	cmp    $0x71,%eax
 80866e5:	0f 85 12 00 00 00    	jne    80866fd <constraint_priority+0xee>
 80866eb:	b8 02 00 00 00       	mov    $0x2,%eax
 80866f0:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80866f3:	e9 9e 00 00 00       	jmpq   8086796 <constraint_priority+0x187>
 80866f8:	e9 09 00 00 00       	jmpq   8086706 <constraint_priority+0xf7>
 80866fd:	83 f8 72             	cmp    $0x72,%eax
 8086700:	0f 85 12 00 00 00    	jne    8086718 <constraint_priority+0x109>
 8086706:	b8 03 00 00 00       	mov    $0x3,%eax
 808670b:	89 45 ec             	mov    %eax,-0x14(%rbp)
 808670e:	e9 83 00 00 00       	jmpq   8086796 <constraint_priority+0x187>
 8086713:	e9 09 00 00 00       	jmpq   8086721 <constraint_priority+0x112>
 8086718:	83 f8 4e             	cmp    $0x4e,%eax
 808671b:	0f 85 05 00 00 00    	jne    8086726 <constraint_priority+0x117>
 8086721:	e9 09 00 00 00       	jmpq   808672f <constraint_priority+0x120>
 8086726:	83 f8 4d             	cmp    $0x4d,%eax
 8086729:	0f 85 05 00 00 00    	jne    8086734 <constraint_priority+0x125>
 808672f:	e9 09 00 00 00       	jmpq   808673d <constraint_priority+0x12e>
 8086734:	83 f8 49             	cmp    $0x49,%eax
 8086737:	0f 85 05 00 00 00    	jne    8086742 <constraint_priority+0x133>
 808673d:	e9 09 00 00 00       	jmpq   808674b <constraint_priority+0x13c>
 8086742:	83 f8 69             	cmp    $0x69,%eax
 8086745:	0f 85 05 00 00 00    	jne    8086750 <constraint_priority+0x141>
 808674b:	e9 09 00 00 00       	jmpq   8086759 <constraint_priority+0x14a>
 8086750:	83 f8 6d             	cmp    $0x6d,%eax
 8086753:	0f 85 05 00 00 00    	jne    808675e <constraint_priority+0x14f>
 8086759:	e9 09 00 00 00       	jmpq   8086767 <constraint_priority+0x158>
 808675e:	83 f8 67             	cmp    $0x67,%eax
 8086761:	0f 85 0d 00 00 00    	jne    8086774 <constraint_priority+0x165>
 8086767:	b8 04 00 00 00       	mov    $0x4,%eax
 808676c:	89 45 ec             	mov    %eax,-0x14(%rbp)
 808676f:	e9 22 00 00 00       	jmpq   8086796 <constraint_priority+0x187>
 8086774:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8086777:	48 89 c6             	mov    %rax,%rsi
 808677a:	48 8d 05 0c 74 00 00 	lea    0x740c(%rip),%rax        # 808db8d <L.134>
 8086781:	48 89 c7             	mov    %rax,%rdi
 8086784:	b8 00 00 00 00       	mov    $0x0,%eax
 8086789:	e8 39 6f fc ff       	callq  804d6c7 <tcc_error>
 808678e:	b8 00 00 00 00       	mov    $0x0,%eax
 8086793:	89 45 ec             	mov    %eax,-0x14(%rbp)
 8086796:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8086799:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 808679c:	39 c8                	cmp    %ecx,%eax
 808679e:	0f 8e 06 00 00 00    	jle    80867aa <constraint_priority+0x19b>
 80867a4:	8b 45 ec             	mov    -0x14(%rbp),%eax
 80867a7:	89 45 f4             	mov    %eax,-0xc(%rbp)
 80867aa:	e9 77 fe ff ff       	jmpq   8086626 <constraint_priority+0x17>
 80867af:	8b 45 f4             	mov    -0xc(%rbp),%eax
 80867b2:	e9 00 00 00 00       	jmpq   80867b7 <constraint_priority+0x1a8>
 80867b7:	c9                   	leaveq 
 80867b8:	c3                   	retq   

00000000080867b9 <asm_modrm>:
 80867b9:	55                   	push   %rbp
 80867ba:	48 89 e5             	mov    %rsp,%rbp
 80867bd:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
 80867c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 80867c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 80867cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80867d0:	8b 08                	mov    (%rax),%ecx
 80867d2:	83 e1 3f             	and    $0x3f,%ecx
 80867d5:	85 c9                	test   %ecx,%ecx
 80867d7:	0f 84 35 00 00 00    	je     8086812 <asm_modrm+0x59>
 80867dd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80867e0:	c1 e0 03             	shl    $0x3,%eax
 80867e3:	81 c0 c0 00 00 00    	add    $0xc0,%eax
 80867e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 80867ed:	48 ba 04 00 00 00 00 	movabs $0x4,%rdx
 80867f4:	00 00 00 
 80867f7:	48 01 d1             	add    %rdx,%rcx
 80867fa:	0f be 11             	movsbl (%rcx),%edx
 80867fd:	48 01 d0             	add    %rdx,%rax
 8086800:	48 89 c7             	mov    %rax,%rdi
 8086803:	b8 00 00 00 00       	mov    $0x0,%eax
 8086808:	e8 96 73 ff ff       	callq  807dba3 <g>
 808680d:	e9 dc 02 00 00       	jmpq   8086aee <asm_modrm+0x335>
 8086812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086816:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 808681d:	00 00 00 
 8086820:	48 01 c8             	add    %rcx,%rax
 8086823:	0f be 08             	movsbl (%rax),%ecx
 8086826:	83 f9 ff             	cmp    $0xffffffff,%ecx
 8086829:	0f 85 56 00 00 00    	jne    8086885 <asm_modrm+0xcc>
 808682f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086833:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 808683a:	00 00 00 
 808683d:	48 01 c8             	add    %rcx,%rax
 8086840:	0f be 08             	movsbl (%rax),%ecx
 8086843:	83 f9 ff             	cmp    $0xffffffff,%ecx
 8086846:	0f 85 39 00 00 00    	jne    8086885 <asm_modrm+0xcc>
 808684c:	8b 45 f8             	mov    -0x8(%rbp),%eax
 808684f:	c1 e0 03             	shl    $0x3,%eax
 8086852:	83 c0 05             	add    $0x5,%eax
 8086855:	48 89 c7             	mov    %rax,%rdi
 8086858:	b8 00 00 00 00       	mov    $0x0,%eax
 808685d:	e8 41 73 ff ff       	callq  807dba3 <g>
 8086862:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086866:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808686d:	00 00 00 
 8086870:	48 01 c8             	add    %rcx,%rax
 8086873:	48 89 c7             	mov    %rax,%rdi
 8086876:	b8 00 00 00 00       	mov    $0x0,%eax
 808687b:	e8 98 ca ff ff       	callq  8083318 <gen_expr32>
 8086880:	e9 69 02 00 00       	jmpq   8086aee <asm_modrm+0x335>
 8086885:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086889:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8086890:	00 00 00 
 8086893:	48 01 c8             	add    %rcx,%rax
 8086896:	0f be 08             	movsbl (%rax),%ecx
 8086899:	89 4d e0             	mov    %ecx,-0x20(%rbp)
 808689c:	8b 45 e0             	mov    -0x20(%rbp),%eax
 808689f:	83 f8 ff             	cmp    $0xffffffff,%eax
 80868a2:	0f 85 15 00 00 00    	jne    80868bd <asm_modrm+0x104>
 80868a8:	b8 05 00 00 00       	mov    $0x5,%eax
 80868ad:	89 45 e0             	mov    %eax,-0x20(%rbp)
 80868b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80868b5:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80868b8:	e9 ec 00 00 00       	jmpq   80869a9 <asm_modrm+0x1f0>
 80868bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80868c1:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80868c8:	00 00 00 
 80868cb:	48 01 c8             	add    %rcx,%rax
 80868ce:	8b 08                	mov    (%rax),%ecx
 80868d0:	83 f9 00             	cmp    $0x0,%ecx
 80868d3:	0f 85 58 00 00 00    	jne    8086931 <asm_modrm+0x178>
 80868d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80868dd:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80868e4:	00 00 00 
 80868e7:	48 01 c8             	add    %rcx,%rax
 80868ea:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 80868f1:	00 00 00 
 80868f4:	48 01 c8             	add    %rcx,%rax
 80868f7:	48 8b 08             	mov    (%rax),%rcx
 80868fa:	85 c9                	test   %ecx,%ecx
 80868fc:	0f 84 05 00 00 00    	je     8086907 <asm_modrm+0x14e>
 8086902:	e9 2a 00 00 00       	jmpq   8086931 <asm_modrm+0x178>
 8086907:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 808690b:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8086912:	00 00 00 
 8086915:	48 01 c8             	add    %rcx,%rax
 8086918:	0f be 08             	movsbl (%rax),%ecx
 808691b:	83 f9 05             	cmp    $0x5,%ecx
 808691e:	0f 84 0d 00 00 00    	je     8086931 <asm_modrm+0x178>
 8086924:	b8 00 00 00 00       	mov    $0x0,%eax
 8086929:	89 45 ec             	mov    %eax,-0x14(%rbp)
 808692c:	e9 78 00 00 00       	jmpq   80869a9 <asm_modrm+0x1f0>
 8086931:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086935:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808693c:	00 00 00 
 808693f:	48 01 c8             	add    %rcx,%rax
 8086942:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 8086946:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 808694d:	00 00 00 
 8086950:	48 01 d1             	add    %rdx,%rcx
 8086953:	8b 11                	mov    (%rcx),%edx
 8086955:	c1 e2 18             	shl    $0x18,%edx
 8086958:	c1 fa 18             	sar    $0x18,%edx
 808695b:	8b 08                	mov    (%rax),%ecx
 808695d:	48 39 d1             	cmp    %rdx,%rcx
 8086960:	0f 85 3b 00 00 00    	jne    80869a1 <asm_modrm+0x1e8>
 8086966:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 808696a:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8086971:	00 00 00 
 8086974:	48 01 c8             	add    %rcx,%rax
 8086977:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 808697e:	00 00 00 
 8086981:	48 01 c8             	add    %rcx,%rax
 8086984:	48 8b 08             	mov    (%rax),%rcx
 8086987:	85 c9                	test   %ecx,%ecx
 8086989:	0f 84 05 00 00 00    	je     8086994 <asm_modrm+0x1db>
 808698f:	e9 0d 00 00 00       	jmpq   80869a1 <asm_modrm+0x1e8>
 8086994:	b8 40 00 00 00       	mov    $0x40,%eax
 8086999:	89 45 ec             	mov    %eax,-0x14(%rbp)
 808699c:	e9 08 00 00 00       	jmpq   80869a9 <asm_modrm+0x1f0>
 80869a1:	b8 80 00 00 00       	mov    $0x80,%eax
 80869a6:	89 45 ec             	mov    %eax,-0x14(%rbp)
 80869a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80869ad:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 80869b4:	00 00 00 
 80869b7:	48 01 c8             	add    %rcx,%rax
 80869ba:	0f be 08             	movsbl (%rax),%ecx
 80869bd:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 80869c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 80869c4:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 80869cb:	00 00 00 
 80869ce:	48 01 c8             	add    %rcx,%rax
 80869d1:	0f be 08             	movsbl (%rax),%ecx
 80869d4:	83 f9 ff             	cmp    $0xffffffff,%ecx
 80869d7:	0f 84 08 00 00 00    	je     80869e5 <asm_modrm+0x22c>
 80869dd:	b8 04 00 00 00       	mov    $0x4,%eax
 80869e2:	89 45 e8             	mov    %eax,-0x18(%rbp)
 80869e5:	8b 45 f8             	mov    -0x8(%rbp),%eax
 80869e8:	c1 e0 03             	shl    $0x3,%eax
 80869eb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 80869ee:	48 01 c1             	add    %rax,%rcx
 80869f1:	8b 45 e8             	mov    -0x18(%rbp),%eax
 80869f4:	48 01 c1             	add    %rax,%rcx
 80869f7:	48 89 cf             	mov    %rcx,%rdi
 80869fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80869ff:	e8 9f 71 ff ff       	callq  807dba3 <g>
 8086a04:	8b 45 e8             	mov    -0x18(%rbp),%eax
 8086a07:	83 f8 04             	cmp    $0x4,%eax
 8086a0a:	0f 85 5e 00 00 00    	jne    8086a6e <asm_modrm+0x2b5>
 8086a10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086a14:	48 b9 05 00 00 00 00 	movabs $0x5,%rcx
 8086a1b:	00 00 00 
 8086a1e:	48 01 c8             	add    %rcx,%rax
 8086a21:	0f be 08             	movsbl (%rax),%ecx
 8086a24:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
 8086a27:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8086a2a:	83 f8 ff             	cmp    $0xffffffff,%eax
 8086a2d:	0f 85 08 00 00 00    	jne    8086a3b <asm_modrm+0x282>
 8086a33:	b8 04 00 00 00       	mov    $0x4,%eax
 8086a38:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8086a3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086a3f:	48 b9 06 00 00 00 00 	movabs $0x6,%rcx
 8086a46:	00 00 00 
 8086a49:	48 01 c8             	add    %rcx,%rax
 8086a4c:	0f b6 08             	movzbl (%rax),%ecx
 8086a4f:	c1 e1 06             	shl    $0x6,%ecx
 8086a52:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8086a55:	c1 e0 03             	shl    $0x3,%eax
 8086a58:	48 01 c1             	add    %rax,%rcx
 8086a5b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 8086a5e:	48 01 c1             	add    %rax,%rcx
 8086a61:	48 89 cf             	mov    %rcx,%rdi
 8086a64:	b8 00 00 00 00       	mov    $0x0,%eax
 8086a69:	e8 35 71 ff ff       	callq  807dba3 <g>
 8086a6e:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8086a71:	83 f8 40             	cmp    $0x40,%eax
 8086a74:	0f 85 25 00 00 00    	jne    8086a9f <asm_modrm+0x2e6>
 8086a7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086a7e:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8086a85:	00 00 00 
 8086a88:	48 01 c8             	add    %rcx,%rax
 8086a8b:	8b 08                	mov    (%rax),%ecx
 8086a8d:	48 89 cf             	mov    %rcx,%rdi
 8086a90:	b8 00 00 00 00       	mov    $0x0,%eax
 8086a95:	e8 09 71 ff ff       	callq  807dba3 <g>
 8086a9a:	e9 4f 00 00 00       	jmpq   8086aee <asm_modrm+0x335>
 8086a9f:	8b 45 ec             	mov    -0x14(%rbp),%eax
 8086aa2:	81 f8 80 00 00 00    	cmp    $0x80,%eax
 8086aa8:	0f 84 22 00 00 00    	je     8086ad0 <asm_modrm+0x317>
 8086aae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086ab2:	48 b9 04 00 00 00 00 	movabs $0x4,%rcx
 8086ab9:	00 00 00 
 8086abc:	48 01 c8             	add    %rcx,%rax
 8086abf:	0f be 08             	movsbl (%rax),%ecx
 8086ac2:	83 f9 ff             	cmp    $0xffffffff,%ecx
 8086ac5:	0f 84 05 00 00 00    	je     8086ad0 <asm_modrm+0x317>
 8086acb:	e9 1e 00 00 00       	jmpq   8086aee <asm_modrm+0x335>
 8086ad0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8086ad4:	48 b9 08 00 00 00 00 	movabs $0x8,%rcx
 8086adb:	00 00 00 
 8086ade:	48 01 c8             	add    %rcx,%rax
 8086ae1:	48 89 c7             	mov    %rax,%rdi
 8086ae4:	b8 00 00 00 00       	mov    $0x0,%eax
 8086ae9:	e8 2a c8 ff ff       	callq  8083318 <gen_expr32>
 8086aee:	c9                   	leaveq 
 8086aef:	c3                   	retq   

0000000008086af0 <get_reg_shift>:
 8086af0:	55                   	push   %rbp
 8086af1:	48 89 e5             	mov    %rsp,%rbp
 8086af4:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8086afb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8086aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8086b03:	48 89 c7             	mov    %rax,%rdi
 8086b06:	b8 00 00 00 00       	mov    $0x0,%eax
 8086b0b:	e8 b9 27 ff ff       	callq  80792c9 <asm_int_expr>
 8086b10:	89 45 f0             	mov    %eax,-0x10(%rbp)
 8086b13:	8b 45 f0             	mov    -0x10(%rbp),%eax
 8086b16:	e9 05 00 00 00       	jmpq   8086b20 <get_reg_shift+0x30>
 8086b1b:	e9 09 00 00 00       	jmpq   8086b29 <get_reg_shift+0x39>
 8086b20:	83 f8 01             	cmp    $0x1,%eax
 8086b23:	0f 85 12 00 00 00    	jne    8086b3b <get_reg_shift+0x4b>
 8086b29:	b8 00 00 00 00       	mov    $0x0,%eax
 8086b2e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8086b31:	e9 72 00 00 00       	jmpq   8086ba8 <get_reg_shift+0xb8>
 8086b36:	e9 09 00 00 00       	jmpq   8086b44 <get_reg_shift+0x54>
 8086b3b:	83 f8 02             	cmp    $0x2,%eax
 8086b3e:	0f 85 12 00 00 00    	jne    8086b56 <get_reg_shift+0x66>
 8086b44:	b8 01 00 00 00       	mov    $0x1,%eax
 8086b49:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8086b4c:	e9 57 00 00 00       	jmpq   8086ba8 <get_reg_shift+0xb8>
 8086b51:	e9 09 00 00 00       	jmpq   8086b5f <get_reg_shift+0x6f>
 8086b56:	83 f8 04             	cmp    $0x4,%eax
 8086b59:	0f 85 12 00 00 00    	jne    8086b71 <get_reg_shift+0x81>
 8086b5f:	b8 02 00 00 00       	mov    $0x2,%eax
 8086b64:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8086b67:	e9 3c 00 00 00       	jmpq   8086ba8 <get_reg_shift+0xb8>
 8086b6c:	e9 09 00 00 00       	jmpq   8086b7a <get_reg_shift+0x8a>
 8086b71:	83 f8 08             	cmp    $0x8,%eax
 8086b74:	0f 85 0d 00 00 00    	jne    8086b87 <get_reg_shift+0x97>
 8086b7a:	b8 03 00 00 00       	mov    $0x3,%eax
 8086b7f:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8086b82:	e9 21 00 00 00       	jmpq   8086ba8 <get_reg_shift+0xb8>
 8086b87:	48 8d 05 17 70 00 00 	lea    0x7017(%rip),%rax        # 808dba5 <L.135>
 8086b8e:	48 89 c7             	mov    %rax,%rdi
 8086b91:	b8 00 00 00 00       	mov    $0x0,%eax
 8086b96:	e8 b7 a5 fc ff       	callq  8051152 <expect>
 8086b9b:	b8 00 00 00 00       	mov    $0x0,%eax
 8086ba0:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8086ba3:	e9 00 00 00 00       	jmpq   8086ba8 <get_reg_shift+0xb8>
 8086ba8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8086bab:	e9 00 00 00 00       	jmpq   8086bb0 <get_reg_shift+0xc0>
 8086bb0:	c9                   	leaveq 
 8086bb1:	c3                   	retq   

0000000008086bb2 <isnum>:
 8086bb2:	55                   	push   %rbp
 8086bb3:	48 89 e5             	mov    %rsp,%rbp
 8086bb6:	48 81 ec 10 00 00 00 	sub    $0x10,%rsp
 8086bbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 8086bc1:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8086bc4:	83 f8 30             	cmp    $0x30,%eax
 8086bc7:	0f 8c 13 00 00 00    	jl     8086be0 <isnum+0x2e>
 8086bcd:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8086bd0:	83 f8 39             	cmp    $0x39,%eax
 8086bd3:	0f 8f 07 00 00 00    	jg     8086be0 <isnum+0x2e>
 8086bd9:	b8 01 00 00 00       	mov    $0x1,%eax
 8086bde:	eb 05                	jmp    8086be5 <isnum+0x33>
 8086be0:	b8 00 00 00 00       	mov    $0x0,%eax
 8086be5:	e9 00 00 00 00       	jmpq   8086bea <isnum+0x38>
 8086bea:	c9                   	leaveq 
 8086beb:	c3                   	retq   
 8086bec:	00 00                	add    %al,(%rax)
	...

0000000008086bf0 <memcmp>:
 8086bf0:	48 83 fa 07          	cmp    $0x7,%rdx
 8086bf4:	76 62                	jbe    8086c58 <memcmp+0x68>
 8086bf6:	48 89 f0             	mov    %rsi,%rax
 8086bf9:	48 09 f8             	or     %rdi,%rax
 8086bfc:	a8 07                	test   $0x7,%al
 8086bfe:	74 38                	je     8086c38 <memcmp+0x48>
 8086c00:	0f b6 07             	movzbl (%rdi),%eax
 8086c03:	44 0f b6 06          	movzbl (%rsi),%r8d
 8086c07:	48 83 ea 01          	sub    $0x1,%rdx
 8086c0b:	31 c9                	xor    %ecx,%ecx
 8086c0d:	44 38 c0             	cmp    %r8b,%al
 8086c10:	74 19                	je     8086c2b <memcmp+0x3b>
 8086c12:	eb 4c                	jmp    8086c60 <memcmp+0x70>
 8086c14:	0f 1f 40 00          	nopl   0x0(%rax)
 8086c18:	0f b6 44 0f 01       	movzbl 0x1(%rdi,%rcx,1),%eax
 8086c1d:	48 83 c1 01          	add    $0x1,%rcx
 8086c21:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
 8086c26:	44 38 c0             	cmp    %r8b,%al
 8086c29:	75 35                	jne    8086c60 <memcmp+0x70>
 8086c2b:	48 39 d1             	cmp    %rdx,%rcx
 8086c2e:	75 e8                	jne    8086c18 <memcmp+0x28>
 8086c30:	31 c0                	xor    %eax,%eax
 8086c32:	c3                   	retq   
 8086c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8086c38:	48 8b 06             	mov    (%rsi),%rax
 8086c3b:	48 39 07             	cmp    %rax,(%rdi)
 8086c3e:	75 18                	jne    8086c58 <memcmp+0x68>
 8086c40:	48 83 ea 08          	sub    $0x8,%rdx
 8086c44:	48 83 c7 08          	add    $0x8,%rdi
 8086c48:	48 83 c6 08          	add    $0x8,%rsi
 8086c4c:	48 83 fa 07          	cmp    $0x7,%rdx
 8086c50:	77 e6                	ja     8086c38 <memcmp+0x48>
 8086c52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8086c58:	48 85 d2             	test   %rdx,%rdx
 8086c5b:	75 a3                	jne    8086c00 <memcmp+0x10>
 8086c5d:	eb d1                	jmp    8086c30 <memcmp+0x40>
 8086c5f:	90                   	nop
 8086c60:	44 29 c0             	sub    %r8d,%eax
 8086c63:	c3                   	retq   
	...

0000000008086c70 <memcpy>:
 8086c70:	48 83 fa 1f          	cmp    $0x1f,%rdx
 8086c74:	48 89 f8             	mov    %rdi,%rax
 8086c77:	0f 86 d3 00 00 00    	jbe    8086d50 <memcpy+0xe0>
 8086c7d:	48 89 f1             	mov    %rsi,%rcx
 8086c80:	48 09 f9             	or     %rdi,%rcx
 8086c83:	83 e1 07             	and    $0x7,%ecx
 8086c86:	0f 85 d4 00 00 00    	jne    8086d60 <memcpy+0xf0>
 8086c8c:	4c 8d 5a e0          	lea    -0x20(%rdx),%r11
 8086c90:	48 89 f1             	mov    %rsi,%rcx
 8086c93:	49 89 c0             	mov    %rax,%r8
 8086c96:	49 c1 eb 05          	shr    $0x5,%r11
 8086c9a:	4c 89 df             	mov    %r11,%rdi
 8086c9d:	48 c1 e7 05          	shl    $0x5,%rdi
 8086ca1:	4c 8d 54 3e 20       	lea    0x20(%rsi,%rdi,1),%r10
 8086ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 8086cad:	00 00 00 
 8086cb0:	48 8b 39             	mov    (%rcx),%rdi
 8086cb3:	49 89 38             	mov    %rdi,(%r8)
 8086cb6:	4c 8b 49 08          	mov    0x8(%rcx),%r9
 8086cba:	4d 89 48 08          	mov    %r9,0x8(%r8)
 8086cbe:	4c 8b 49 10          	mov    0x10(%rcx),%r9
 8086cc2:	4d 89 48 10          	mov    %r9,0x10(%r8)
 8086cc6:	4c 8b 49 18          	mov    0x18(%rcx),%r9
 8086cca:	48 83 c1 20          	add    $0x20,%rcx
 8086cce:	4d 89 48 18          	mov    %r9,0x18(%r8)
 8086cd2:	49 83 c0 20          	add    $0x20,%r8
 8086cd6:	4c 39 d1             	cmp    %r10,%rcx
 8086cd9:	75 d5                	jne    8086cb0 <memcpy+0x40>
 8086cdb:	49 8d 4b 01          	lea    0x1(%r11),%rcx
 8086cdf:	48 c1 e1 05          	shl    $0x5,%rcx
 8086ce3:	48 01 ce             	add    %rcx,%rsi
 8086ce6:	4c 8d 0c 08          	lea    (%rax,%rcx,1),%r9
 8086cea:	48 89 d1             	mov    %rdx,%rcx
 8086ced:	83 e1 1f             	and    $0x1f,%ecx
 8086cf0:	48 83 f9 07          	cmp    $0x7,%rcx
 8086cf4:	76 6f                	jbe    8086d65 <memcpy+0xf5>
 8086cf6:	48 83 e9 08          	sub    $0x8,%rcx
 8086cfa:	48 c1 e9 03          	shr    $0x3,%rcx
 8086cfe:	48 8d 3c cd 08 00 00 	lea    0x8(,%rcx,8),%rdi
 8086d05:	00 
 8086d06:	31 c9                	xor    %ecx,%ecx
 8086d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 8086d0f:	00 
 8086d10:	4c 8b 04 0e          	mov    (%rsi,%rcx,1),%r8
 8086d14:	4d 89 04 09          	mov    %r8,(%r9,%rcx,1)
 8086d18:	48 83 c1 08          	add    $0x8,%rcx
 8086d1c:	48 39 f9             	cmp    %rdi,%rcx
 8086d1f:	75 ef                	jne    8086d10 <memcpy+0xa0>
 8086d21:	83 e2 07             	and    $0x7,%edx
 8086d24:	48 01 ce             	add    %rcx,%rsi
 8086d27:	49 01 c9             	add    %rcx,%r9
 8086d2a:	48 85 d2             	test   %rdx,%rdx
 8086d2d:	74 29                	je     8086d58 <memcpy+0xe8>
 8086d2f:	31 c9                	xor    %ecx,%ecx
 8086d31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8086d38:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
 8086d3d:	45 88 04 09          	mov    %r8b,(%r9,%rcx,1)
 8086d41:	48 83 c1 01          	add    $0x1,%rcx
 8086d45:	48 39 d1             	cmp    %rdx,%rcx
 8086d48:	75 ee                	jne    8086d38 <memcpy+0xc8>
 8086d4a:	f3 c3                	repz retq 
 8086d4c:	0f 1f 40 00          	nopl   0x0(%rax)
 8086d50:	49 89 f9             	mov    %rdi,%r9
 8086d53:	48 85 d2             	test   %rdx,%rdx
 8086d56:	75 d7                	jne    8086d2f <memcpy+0xbf>
 8086d58:	f3 c3                	repz retq 
 8086d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8086d60:	49 89 f9             	mov    %rdi,%r9
 8086d63:	eb ca                	jmp    8086d2f <memcpy+0xbf>
 8086d65:	48 89 ca             	mov    %rcx,%rdx
 8086d68:	eb e9                	jmp    8086d53 <memcpy+0xe3>
 8086d6a:	00 00                	add    %al,(%rax)
 8086d6c:	00 00                	add    %al,(%rax)
	...

0000000008086d70 <memmove>:
 8086d70:	48 39 f7             	cmp    %rsi,%rdi
 8086d73:	48 89 f8             	mov    %rdi,%rax
 8086d76:	76 40                	jbe    8086db8 <memmove+0x48>
 8086d78:	48 8d 3c 16          	lea    (%rsi,%rdx,1),%rdi
 8086d7c:	48 39 f8             	cmp    %rdi,%rax
 8086d7f:	73 37                	jae    8086db8 <memmove+0x48>
 8086d81:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
 8086d85:	48 89 d6             	mov    %rdx,%rsi
 8086d88:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
 8086d8c:	48 f7 de             	neg    %rsi
 8086d8f:	48 01 f7             	add    %rsi,%rdi
 8086d92:	4c 01 c6             	add    %r8,%rsi
 8086d95:	48 85 d2             	test   %rdx,%rdx
 8086d98:	74 48                	je     8086de2 <memmove+0x72>
 8086d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8086da0:	0f b6 14 0f          	movzbl (%rdi,%rcx,1),%edx
 8086da4:	88 14 0e             	mov    %dl,(%rsi,%rcx,1)
 8086da7:	48 83 e9 01          	sub    $0x1,%rcx
 8086dab:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
 8086daf:	75 ef                	jne    8086da0 <memmove+0x30>
 8086db1:	f3 c3                	repz retq 
 8086db3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8086db8:	48 83 fa 1f          	cmp    $0x1f,%rdx
 8086dbc:	77 2a                	ja     8086de8 <memmove+0x78>
 8086dbe:	49 89 c1             	mov    %rax,%r9
 8086dc1:	48 85 d2             	test   %rdx,%rdx
 8086dc4:	0f 84 ce 00 00 00    	je     8086e98 <memmove+0x128>
 8086dca:	31 c9                	xor    %ecx,%ecx
 8086dcc:	0f 1f 40 00          	nopl   0x0(%rax)
 8086dd0:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
 8086dd5:	45 88 04 09          	mov    %r8b,(%r9,%rcx,1)
 8086dd9:	48 83 c1 01          	add    $0x1,%rcx
 8086ddd:	48 39 d1             	cmp    %rdx,%rcx
 8086de0:	75 ee                	jne    8086dd0 <memmove+0x60>
 8086de2:	f3 c3                	repz retq 
 8086de4:	0f 1f 40 00          	nopl   0x0(%rax)
 8086de8:	48 89 f1             	mov    %rsi,%rcx
 8086deb:	48 09 c1             	or     %rax,%rcx
 8086dee:	83 e1 07             	and    $0x7,%ecx
 8086df1:	0f 85 99 00 00 00    	jne    8086e90 <memmove+0x120>
 8086df7:	4c 8d 52 e0          	lea    -0x20(%rdx),%r10
 8086dfb:	48 89 f1             	mov    %rsi,%rcx
 8086dfe:	49 89 c0             	mov    %rax,%r8
 8086e01:	49 c1 ea 05          	shr    $0x5,%r10
 8086e05:	4c 89 d7             	mov    %r10,%rdi
 8086e08:	48 c1 e7 05          	shl    $0x5,%rdi
 8086e0c:	4c 8d 4c 3e 20       	lea    0x20(%rsi,%rdi,1),%r9
 8086e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8086e18:	48 8b 39             	mov    (%rcx),%rdi
 8086e1b:	49 89 38             	mov    %rdi,(%r8)
 8086e1e:	48 8b 79 08          	mov    0x8(%rcx),%rdi
 8086e22:	49 89 78 08          	mov    %rdi,0x8(%r8)
 8086e26:	48 8b 79 10          	mov    0x10(%rcx),%rdi
 8086e2a:	49 89 78 10          	mov    %rdi,0x10(%r8)
 8086e2e:	48 8b 79 18          	mov    0x18(%rcx),%rdi
 8086e32:	48 83 c1 20          	add    $0x20,%rcx
 8086e36:	49 89 78 18          	mov    %rdi,0x18(%r8)
 8086e3a:	49 83 c0 20          	add    $0x20,%r8
 8086e3e:	4c 39 c9             	cmp    %r9,%rcx
 8086e41:	75 d5                	jne    8086e18 <memmove+0xa8>
 8086e43:	49 8d 4a 01          	lea    0x1(%r10),%rcx
 8086e47:	48 c1 e1 05          	shl    $0x5,%rcx
 8086e4b:	48 01 ce             	add    %rcx,%rsi
 8086e4e:	4c 8d 0c 08          	lea    (%rax,%rcx,1),%r9
 8086e52:	48 89 d1             	mov    %rdx,%rcx
 8086e55:	83 e1 1f             	and    $0x1f,%ecx
 8086e58:	48 83 f9 07          	cmp    $0x7,%rcx
 8086e5c:	76 3c                	jbe    8086e9a <memmove+0x12a>
 8086e5e:	48 83 e9 08          	sub    $0x8,%rcx
 8086e62:	48 c1 e9 03          	shr    $0x3,%rcx
 8086e66:	4c 8d 04 cd 08 00 00 	lea    0x8(,%rcx,8),%r8
 8086e6d:	00 
 8086e6e:	31 c9                	xor    %ecx,%ecx
 8086e70:	48 8b 3c 0e          	mov    (%rsi,%rcx,1),%rdi
 8086e74:	49 89 3c 09          	mov    %rdi,(%r9,%rcx,1)
 8086e78:	48 83 c1 08          	add    $0x8,%rcx
 8086e7c:	4c 39 c1             	cmp    %r8,%rcx
 8086e7f:	75 ef                	jne    8086e70 <memmove+0x100>
 8086e81:	83 e2 07             	and    $0x7,%edx
 8086e84:	48 01 ce             	add    %rcx,%rsi
 8086e87:	49 01 c9             	add    %rcx,%r9
 8086e8a:	e9 32 ff ff ff       	jmpq   8086dc1 <memmove+0x51>
 8086e8f:	90                   	nop
 8086e90:	49 89 c1             	mov    %rax,%r9
 8086e93:	e9 32 ff ff ff       	jmpq   8086dca <memmove+0x5a>
 8086e98:	f3 c3                	repz retq 
 8086e9a:	48 89 ca             	mov    %rcx,%rdx
 8086e9d:	0f 1f 00             	nopl   (%rax)
 8086ea0:	e9 1c ff ff ff       	jmpq   8086dc1 <memmove+0x51>
	...

0000000008086eb0 <memset>:
 8086eb0:	48 89 f8             	mov    %rdi,%rax
 8086eb3:	a8 07                	test   $0x7,%al
 8086eb5:	0f 84 e5 00 00 00    	je     8086fa0 <memset+0xf0>
 8086ebb:	48 85 d2             	test   %rdx,%rdx
 8086ebe:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
 8086ec2:	41 89 f1             	mov    %esi,%r9d
 8086ec5:	48 89 f9             	mov    %rdi,%rcx
 8086ec8:	75 16                	jne    8086ee0 <memset+0x30>
 8086eca:	e9 dc 00 00 00       	jmpq   8086fab <memset+0xfb>
 8086ecf:	90                   	nop
 8086ed0:	4d 85 c0             	test   %r8,%r8
 8086ed3:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
 8086ed7:	0f 84 bf 00 00 00    	je     8086f9c <memset+0xec>
 8086edd:	49 89 d0             	mov    %rdx,%r8
 8086ee0:	44 88 09             	mov    %r9b,(%rcx)
 8086ee3:	48 83 c1 01          	add    $0x1,%rcx
 8086ee7:	f6 c1 07             	test   $0x7,%cl
 8086eea:	75 e4                	jne    8086ed0 <memset+0x20>
 8086eec:	49 83 f8 07          	cmp    $0x7,%r8
 8086ef0:	0f 86 8a 00 00 00    	jbe    8086f80 <memset+0xd0>
 8086ef6:	40 0f b6 fe          	movzbl %sil,%edi
 8086efa:	4d 89 c2             	mov    %r8,%r10
 8086efd:	89 fa                	mov    %edi,%edx
 8086eff:	c1 e2 08             	shl    $0x8,%edx
 8086f02:	09 fa                	or     %edi,%edx
 8086f04:	89 d7                	mov    %edx,%edi
 8086f06:	48 89 fa             	mov    %rdi,%rdx
 8086f09:	48 c1 e2 10          	shl    $0x10,%rdx
 8086f0d:	48 09 fa             	or     %rdi,%rdx
 8086f10:	49 89 d1             	mov    %rdx,%r9
 8086f13:	49 c1 e1 20          	shl    $0x20,%r9
 8086f17:	49 09 d1             	or     %rdx,%r9
 8086f1a:	49 83 f8 1f          	cmp    $0x1f,%r8
 8086f1e:	48 89 ca             	mov    %rcx,%rdx
 8086f21:	76 3c                	jbe    8086f5f <memset+0xaf>
 8086f23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8086f28:	49 83 ea 20          	sub    $0x20,%r10
 8086f2c:	4c 89 0a             	mov    %r9,(%rdx)
 8086f2f:	4c 89 4a 08          	mov    %r9,0x8(%rdx)
 8086f33:	4c 89 4a 10          	mov    %r9,0x10(%rdx)
 8086f37:	4c 89 4a 18          	mov    %r9,0x18(%rdx)
 8086f3b:	48 83 c2 20          	add    $0x20,%rdx
 8086f3f:	49 83 fa 1f          	cmp    $0x1f,%r10
 8086f43:	77 e3                	ja     8086f28 <memset+0x78>
 8086f45:	49 8d 50 e0          	lea    -0x20(%r8),%rdx
 8086f49:	41 83 e0 1f          	and    $0x1f,%r8d
 8086f4d:	48 83 e2 e0          	and    $0xffffffffffffffe0,%rdx
 8086f51:	49 83 f8 07          	cmp    $0x7,%r8
 8086f55:	48 8d 54 11 20       	lea    0x20(%rcx,%rdx,1),%rdx
 8086f5a:	48 89 d1             	mov    %rdx,%rcx
 8086f5d:	76 21                	jbe    8086f80 <memset+0xd0>
 8086f5f:	49 8d 48 f8          	lea    -0x8(%r8),%rcx
 8086f63:	48 c1 e9 03          	shr    $0x3,%rcx
 8086f67:	48 8d 4c ca 08       	lea    0x8(%rdx,%rcx,8),%rcx
 8086f6c:	0f 1f 40 00          	nopl   0x0(%rax)
 8086f70:	4c 89 0a             	mov    %r9,(%rdx)
 8086f73:	48 83 c2 08          	add    $0x8,%rdx
 8086f77:	48 39 ca             	cmp    %rcx,%rdx
 8086f7a:	75 f4                	jne    8086f70 <memset+0xc0>
 8086f7c:	41 83 e0 07          	and    $0x7,%r8d
 8086f80:	4d 85 c0             	test   %r8,%r8
 8086f83:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
 8086f87:	74 15                	je     8086f9e <memset+0xee>
 8086f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8086f90:	40 88 31             	mov    %sil,(%rcx)
 8086f93:	48 83 c1 01          	add    $0x1,%rcx
 8086f97:	48 39 d1             	cmp    %rdx,%rcx
 8086f9a:	75 f4                	jne    8086f90 <memset+0xe0>
 8086f9c:	f3 c3                	repz retq 
 8086f9e:	f3 c3                	repz retq 
 8086fa0:	48 89 f9             	mov    %rdi,%rcx
 8086fa3:	49 89 d0             	mov    %rdx,%r8
 8086fa6:	e9 41 ff ff ff       	jmpq   8086eec <memset+0x3c>
 8086fab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8086fb0:	f3 c3                	repz retq 
	...

0000000008086fc0 <strcat>:
 8086fc0:	53                   	push   %rbx
 8086fc1:	48 89 fb             	mov    %rdi,%rbx
 8086fc4:	f6 c3 07             	test   $0x7,%bl
 8086fc7:	75 5b                	jne    8087024 <strcat+0x64>
 8086fc9:	48 8b 13             	mov    (%rbx),%rdx
 8086fcc:	49 ba ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r10
 8086fd3:	fe fe fe 
 8086fd6:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
 8086fdd:	80 80 80 
 8086fe0:	48 89 d9             	mov    %rbx,%rcx
 8086fe3:	4a 8d 04 12          	lea    (%rdx,%r10,1),%rax
 8086fe7:	48 f7 d2             	not    %rdx
 8086fea:	48 21 d0             	and    %rdx,%rax
 8086fed:	4c 85 c8             	test   %r9,%rax
 8086ff0:	75 32                	jne    8087024 <strcat+0x64>
 8086ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8086ff8:	48 83 c1 08          	add    $0x8,%rcx
 8086ffc:	4c 8b 01             	mov    (%rcx),%r8
 8086fff:	4b 8d 14 10          	lea    (%r8,%r10,1),%rdx
 8087003:	49 f7 d0             	not    %r8
 8087006:	4c 21 c2             	and    %r8,%rdx
 8087009:	4c 85 ca             	test   %r9,%rdx
 808700c:	74 ea                	je     8086ff8 <strcat+0x38>
 808700e:	48 89 cf             	mov    %rcx,%rdi
 8087011:	80 3f 00             	cmpb   $0x0,(%rdi)
 8087014:	74 13                	je     8087029 <strcat+0x69>
 8087016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 808701d:	00 00 00 
 8087020:	48 83 c7 01          	add    $0x1,%rdi
 8087024:	80 3f 00             	cmpb   $0x0,(%rdi)
 8087027:	75 f7                	jne    8087020 <strcat+0x60>
 8087029:	e8 32 02 00 00       	callq  8087260 <strcpy>
 808702e:	48 89 d8             	mov    %rbx,%rax
 8087031:	5b                   	pop    %rbx
 8087032:	c3                   	retq   
	...

0000000008087040 <strchr>:
 8087040:	40 84 f6             	test   %sil,%sil
 8087043:	0f 84 f7 00 00 00    	je     8087140 <strchr+0x100>
 8087049:	40 f6 c7 07          	test   $0x7,%dil
 808704d:	0f 84 67 01 00 00    	je     80871ba <strchr+0x17a>
 8087053:	0f b6 07             	movzbl (%rdi),%eax
 8087056:	84 c0                	test   %al,%al
 8087058:	0f 84 d6 00 00 00    	je     8087134 <strchr+0xf4>
 808705e:	40 38 c6             	cmp    %al,%sil
 8087061:	48 89 f8             	mov    %rdi,%rax
 8087064:	75 20                	jne    8087086 <strchr+0x46>
 8087066:	e9 5c 01 00 00       	jmpq   80871c7 <strchr+0x187>
 808706b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8087070:	0f b6 10             	movzbl (%rax),%edx
 8087073:	84 d2                	test   %dl,%dl
 8087075:	0f 84 b9 00 00 00    	je     8087134 <strchr+0xf4>
 808707b:	40 38 d6             	cmp    %dl,%sil
 808707e:	66 90                	xchg   %ax,%ax
 8087080:	0f 84 b0 00 00 00    	je     8087136 <strchr+0xf6>
 8087086:	48 83 c0 01          	add    $0x1,%rax
 808708a:	a8 07                	test   $0x7,%al
 808708c:	75 e2                	jne    8087070 <strchr+0x30>
 808708e:	40 0f b6 d6          	movzbl %sil,%edx
 8087092:	49 b8 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r8
 8087099:	fe fe fe 
 808709c:	48 89 d1             	mov    %rdx,%rcx
 808709f:	48 c1 e1 08          	shl    $0x8,%rcx
 80870a3:	48 09 d1             	or     %rdx,%rcx
 80870a6:	48 89 ca             	mov    %rcx,%rdx
 80870a9:	48 c1 e2 10          	shl    $0x10,%rdx
 80870ad:	48 09 ca             	or     %rcx,%rdx
 80870b0:	48 8b 08             	mov    (%rax),%rcx
 80870b3:	49 89 d2             	mov    %rdx,%r10
 80870b6:	49 c1 e2 20          	shl    $0x20,%r10
 80870ba:	49 09 d2             	or     %rdx,%r10
 80870bd:	48 89 cf             	mov    %rcx,%rdi
 80870c0:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
 80870c4:	48 f7 d7             	not    %rdi
 80870c7:	48 21 fa             	and    %rdi,%rdx
 80870ca:	48 bf 80 80 80 80 80 	movabs $0x8080808080808080,%rdi
 80870d1:	80 80 80 
 80870d4:	48 85 fa             	test   %rdi,%rdx
 80870d7:	74 20                	je     80870f9 <strchr+0xb9>
 80870d9:	eb 30                	jmp    808710b <strchr+0xcb>
 80870db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 80870e0:	48 83 c0 08          	add    $0x8,%rax
 80870e4:	48 8b 08             	mov    (%rax),%rcx
 80870e7:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
 80870eb:	49 89 c9             	mov    %rcx,%r9
 80870ee:	49 f7 d1             	not    %r9
 80870f1:	4c 21 ca             	and    %r9,%rdx
 80870f4:	48 85 fa             	test   %rdi,%rdx
 80870f7:	75 12                	jne    808710b <strchr+0xcb>
 80870f9:	4c 31 d1             	xor    %r10,%rcx
 80870fc:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
 8087100:	48 f7 d1             	not    %rcx
 8087103:	48 21 ca             	and    %rcx,%rdx
 8087106:	48 85 fa             	test   %rdi,%rdx
 8087109:	74 d5                	je     80870e0 <strchr+0xa0>
 808710b:	0f b6 10             	movzbl (%rax),%edx
 808710e:	84 d2                	test   %dl,%dl
 8087110:	74 22                	je     8087134 <strchr+0xf4>
 8087112:	40 38 d6             	cmp    %dl,%sil
 8087115:	75 12                	jne    8087129 <strchr+0xe9>
 8087117:	e9 ad 00 00 00       	jmpq   80871c9 <strchr+0x189>
 808711c:	0f 1f 40 00          	nopl   0x0(%rax)
 8087120:	40 38 d6             	cmp    %dl,%sil
 8087123:	0f 84 8f 00 00 00    	je     80871b8 <strchr+0x178>
 8087129:	48 83 c0 01          	add    $0x1,%rax
 808712d:	0f b6 10             	movzbl (%rax),%edx
 8087130:	84 d2                	test   %dl,%dl
 8087132:	75 ec                	jne    8087120 <strchr+0xe0>
 8087134:	31 c0                	xor    %eax,%eax
 8087136:	f3 c3                	repz retq 
 8087138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 808713f:	00 
 8087140:	40 f6 c7 07          	test   $0x7,%dil
 8087144:	48 89 f8             	mov    %rdi,%rax
 8087147:	74 14                	je     808715d <strchr+0x11d>
 8087149:	80 3f 00             	cmpb   $0x0,(%rdi)
 808714c:	75 07                	jne    8087155 <strchr+0x115>
 808714e:	eb 75                	jmp    80871c5 <strchr+0x185>
 8087150:	80 38 00             	cmpb   $0x0,(%rax)
 8087153:	74 e1                	je     8087136 <strchr+0xf6>
 8087155:	48 83 c0 01          	add    $0x1,%rax
 8087159:	a8 07                	test   $0x7,%al
 808715b:	75 f3                	jne    8087150 <strchr+0x110>
 808715d:	48 8b 08             	mov    (%rax),%rcx
 8087160:	48 bf ff fe fe fe fe 	movabs $0xfefefefefefefeff,%rdi
 8087167:	fe fe fe 
 808716a:	48 be 80 80 80 80 80 	movabs $0x8080808080808080,%rsi
 8087171:	80 80 80 
 8087174:	48 89 ca             	mov    %rcx,%rdx
 8087177:	48 01 f9             	add    %rdi,%rcx
 808717a:	48 f7 d2             	not    %rdx
 808717d:	48 21 ca             	and    %rcx,%rdx
 8087180:	48 85 f2             	test   %rsi,%rdx
 8087183:	75 19                	jne    808719e <strchr+0x15e>
 8087185:	0f 1f 00             	nopl   (%rax)
 8087188:	48 83 c0 08          	add    $0x8,%rax
 808718c:	48 8b 08             	mov    (%rax),%rcx
 808718f:	48 8d 14 39          	lea    (%rcx,%rdi,1),%rdx
 8087193:	48 f7 d1             	not    %rcx
 8087196:	48 21 ca             	and    %rcx,%rdx
 8087199:	48 85 f2             	test   %rsi,%rdx
 808719c:	74 ea                	je     8087188 <strchr+0x148>
 808719e:	80 38 00             	cmpb   $0x0,(%rax)
 80871a1:	74 93                	je     8087136 <strchr+0xf6>
 80871a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 80871a8:	48 83 c0 01          	add    $0x1,%rax
 80871ac:	80 38 00             	cmpb   $0x0,(%rax)
 80871af:	75 f7                	jne    80871a8 <strchr+0x168>
 80871b1:	f3 c3                	repz retq 
 80871b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 80871b8:	f3 c3                	repz retq 
 80871ba:	48 89 f8             	mov    %rdi,%rax
 80871bd:	0f 1f 00             	nopl   (%rax)
 80871c0:	e9 c9 fe ff ff       	jmpq   808708e <strchr+0x4e>
 80871c5:	f3 c3                	repz retq 
 80871c7:	f3 c3                	repz retq 
 80871c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 80871d0:	f3 c3                	repz retq 
	...

00000000080871e0 <strcmp>:
 80871e0:	48 89 f0             	mov    %rsi,%rax
 80871e3:	48 09 f8             	or     %rdi,%rax
 80871e6:	a8 07                	test   $0x7,%al
 80871e8:	75 62                	jne    808724c <strcmp+0x6c>
 80871ea:	48 8b 07             	mov    (%rdi),%rax
 80871ed:	48 3b 06             	cmp    (%rsi),%rax
 80871f0:	75 5a                	jne    808724c <strcmp+0x6c>
 80871f2:	49 b8 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r8
 80871f9:	fe fe fe 
 80871fc:	48 b9 80 80 80 80 80 	movabs $0x8080808080808080,%rcx
 8087203:	80 80 80 
 8087206:	4a 8d 14 00          	lea    (%rax,%r8,1),%rdx
 808720a:	48 f7 d0             	not    %rax
 808720d:	48 21 c2             	and    %rax,%rdx
 8087210:	48 85 ca             	test   %rcx,%rdx
 8087213:	75 22                	jne    8087237 <strcmp+0x57>
 8087215:	0f 1f 00             	nopl   (%rax)
 8087218:	48 83 c7 08          	add    $0x8,%rdi
 808721c:	48 83 c6 08          	add    $0x8,%rsi
 8087220:	48 8b 07             	mov    (%rdi),%rax
 8087223:	48 3b 06             	cmp    (%rsi),%rax
 8087226:	75 24                	jne    808724c <strcmp+0x6c>
 8087228:	4a 8d 14 00          	lea    (%rax,%r8,1),%rdx
 808722c:	48 f7 d0             	not    %rax
 808722f:	48 21 c2             	and    %rax,%rdx
 8087232:	48 85 ca             	test   %rcx,%rdx
 8087235:	74 e1                	je     8087218 <strcmp+0x38>
 8087237:	31 c0                	xor    %eax,%eax
 8087239:	c3                   	retq   
 808723a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8087240:	3a 06                	cmp    (%rsi),%al
 8087242:	75 0f                	jne    8087253 <strcmp+0x73>
 8087244:	48 83 c7 01          	add    $0x1,%rdi
 8087248:	48 83 c6 01          	add    $0x1,%rsi
 808724c:	0f b6 07             	movzbl (%rdi),%eax
 808724f:	84 c0                	test   %al,%al
 8087251:	75 ed                	jne    8087240 <strcmp+0x60>
 8087253:	0f b6 07             	movzbl (%rdi),%eax
 8087256:	0f b6 16             	movzbl (%rsi),%edx
 8087259:	29 d0                	sub    %edx,%eax
 808725b:	c3                   	retq   
 808725c:	00 00                	add    %al,(%rax)
	...

0000000008087260 <strcpy>:
 8087260:	48 89 f2             	mov    %rsi,%rdx
 8087263:	48 89 f8             	mov    %rdi,%rax
 8087266:	48 09 fa             	or     %rdi,%rdx
 8087269:	83 e2 07             	and    $0x7,%edx
 808726c:	75 6a                	jne    80872d8 <strcpy+0x78>
 808726e:	48 8b 0e             	mov    (%rsi),%rcx
 8087271:	49 bb ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r11
 8087278:	fe fe fe 
 808727b:	49 ba 80 80 80 80 80 	movabs $0x8080808080808080,%r10
 8087282:	80 80 80 
 8087285:	48 89 ca             	mov    %rcx,%rdx
 8087288:	4a 8d 3c 19          	lea    (%rcx,%r11,1),%rdi
 808728c:	48 f7 d2             	not    %rdx
 808728f:	48 21 fa             	and    %rdi,%rdx
 8087292:	4c 85 d2             	test   %r10,%rdx
 8087295:	48 89 c2             	mov    %rax,%rdx
 8087298:	75 26                	jne    80872c0 <strcpy+0x60>
 808729a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 80872a0:	48 83 c6 08          	add    $0x8,%rsi
 80872a4:	48 89 0a             	mov    %rcx,(%rdx)
 80872a7:	48 83 c2 08          	add    $0x8,%rdx
 80872ab:	48 8b 0e             	mov    (%rsi),%rcx
 80872ae:	49 89 c8             	mov    %rcx,%r8
 80872b1:	4e 8d 0c 19          	lea    (%rcx,%r11,1),%r9
 80872b5:	49 f7 d0             	not    %r8
 80872b8:	4d 21 c8             	and    %r9,%r8
 80872bb:	4d 85 d0             	test   %r10,%r8
 80872be:	74 e0                	je     80872a0 <strcpy+0x40>
 80872c0:	0f b6 0e             	movzbl (%rsi),%ecx
 80872c3:	48 83 c6 01          	add    $0x1,%rsi
 80872c7:	88 0a                	mov    %cl,(%rdx)
 80872c9:	48 83 c2 01          	add    $0x1,%rdx
 80872cd:	84 c9                	test   %cl,%cl
 80872cf:	75 ef                	jne    80872c0 <strcpy+0x60>
 80872d1:	f3 c3                	repz retq 
 80872d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 80872d8:	48 89 fa             	mov    %rdi,%rdx
 80872db:	eb e3                	jmp    80872c0 <strcpy+0x60>
 80872dd:	00 00                	add    %al,(%rax)
	...

00000000080872e0 <strlen>:
 80872e0:	40 f6 c7 07          	test   $0x7,%dil
 80872e4:	74 67                	je     808734d <strlen+0x6d>
 80872e6:	80 3f 00             	cmpb   $0x0,(%rdi)
 80872e9:	74 67                	je     8087352 <strlen+0x72>
 80872eb:	48 89 f8             	mov    %rdi,%rax
 80872ee:	eb 05                	jmp    80872f5 <strlen+0x15>
 80872f0:	80 38 00             	cmpb   $0x0,(%rax)
 80872f3:	74 54                	je     8087349 <strlen+0x69>
 80872f5:	48 83 c0 01          	add    $0x1,%rax
 80872f9:	a8 07                	test   $0x7,%al
 80872fb:	75 f3                	jne    80872f0 <strlen+0x10>
 80872fd:	48 8b 08             	mov    (%rax),%rcx
 8087300:	49 b8 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r8
 8087307:	fe fe fe 
 808730a:	48 be 80 80 80 80 80 	movabs $0x8080808080808080,%rsi
 8087311:	80 80 80 
 8087314:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
 8087318:	48 f7 d1             	not    %rcx
 808731b:	48 21 ca             	and    %rcx,%rdx
 808731e:	48 85 f2             	test   %rsi,%rdx
 8087321:	75 21                	jne    8087344 <strlen+0x64>
 8087323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8087328:	48 83 c0 08          	add    $0x8,%rax
 808732c:	48 8b 08             	mov    (%rax),%rcx
 808732f:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
 8087333:	48 f7 d1             	not    %rcx
 8087336:	48 21 ca             	and    %rcx,%rdx
 8087339:	48 85 f2             	test   %rsi,%rdx
 808733c:	74 ea                	je     8087328 <strlen+0x48>
 808733e:	eb 04                	jmp    8087344 <strlen+0x64>
 8087340:	48 83 c0 01          	add    $0x1,%rax
 8087344:	80 38 00             	cmpb   $0x0,(%rax)
 8087347:	75 f7                	jne    8087340 <strlen+0x60>
 8087349:	48 29 f8             	sub    %rdi,%rax
 808734c:	c3                   	retq   
 808734d:	48 89 f8             	mov    %rdi,%rax
 8087350:	eb ab                	jmp    80872fd <strlen+0x1d>
 8087352:	31 c0                	xor    %eax,%eax
 8087354:	c3                   	retq   
	...

0000000008087360 <strncmp>:
 8087360:	31 c0                	xor    %eax,%eax
 8087362:	48 85 d2             	test   %rdx,%rdx
 8087365:	0f 84 a5 00 00 00    	je     8087410 <strncmp+0xb0>
 808736b:	48 89 f1             	mov    %rsi,%rcx
 808736e:	48 09 f9             	or     %rdi,%rcx
 8087371:	83 e1 07             	and    $0x7,%ecx
 8087374:	0f 85 9e 00 00 00    	jne    8087418 <strncmp+0xb8>
 808737a:	48 83 fa 07          	cmp    $0x7,%rdx
 808737e:	0f 86 94 00 00 00    	jbe    8087418 <strncmp+0xb8>
 8087384:	48 8b 0f             	mov    (%rdi),%rcx
 8087387:	48 3b 0e             	cmp    (%rsi),%rcx
 808738a:	0f 85 88 00 00 00    	jne    8087418 <strncmp+0xb8>
 8087390:	48 83 ea 08          	sub    $0x8,%rdx
 8087394:	74 7a                	je     8087410 <strncmp+0xb0>
 8087396:	49 b9 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r9
 808739d:	fe fe fe 
 80873a0:	4e 8d 04 09          	lea    (%rcx,%r9,1),%r8
 80873a4:	48 f7 d1             	not    %rcx
 80873a7:	49 21 c8             	and    %rcx,%r8
 80873aa:	48 b9 80 80 80 80 80 	movabs $0x8080808080808080,%rcx
 80873b1:	80 80 80 
 80873b4:	49 85 c8             	test   %rcx,%r8
 80873b7:	75 57                	jne    8087410 <strncmp+0xb0>
 80873b9:	48 89 c8             	mov    %rcx,%rax
 80873bc:	eb 23                	jmp    80873e1 <strncmp+0x81>
 80873be:	66 90                	xchg   %ax,%ax
 80873c0:	48 8b 0f             	mov    (%rdi),%rcx
 80873c3:	48 3b 0e             	cmp    (%rsi),%rcx
 80873c6:	75 50                	jne    8087418 <strncmp+0xb8>
 80873c8:	48 83 ea 08          	sub    $0x8,%rdx
 80873cc:	0f 84 8e 00 00 00    	je     8087460 <strncmp+0x100>
 80873d2:	4e 8d 04 09          	lea    (%rcx,%r9,1),%r8
 80873d6:	48 f7 d1             	not    %rcx
 80873d9:	49 21 c8             	and    %rcx,%r8
 80873dc:	49 85 c0             	test   %rax,%r8
 80873df:	75 7f                	jne    8087460 <strncmp+0x100>
 80873e1:	48 83 c7 08          	add    $0x8,%rdi
 80873e5:	48 83 c6 08          	add    $0x8,%rsi
 80873e9:	48 83 fa 07          	cmp    $0x7,%rdx
 80873ed:	77 d1                	ja     80873c0 <strncmp+0x60>
 80873ef:	48 85 d2             	test   %rdx,%rdx
 80873f2:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
 80873f6:	75 24                	jne    808741c <strncmp+0xbc>
 80873f8:	48 89 f8             	mov    %rdi,%rax
 80873fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8087400:	0f b6 00             	movzbl (%rax),%eax
 8087403:	0f b6 16             	movzbl (%rsi),%edx
 8087406:	29 d0                	sub    %edx,%eax
 8087408:	c3                   	retq   
 8087409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8087410:	f3 c3                	repz retq 
 8087412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8087418:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
 808741c:	0f b6 07             	movzbl (%rdi),%eax
 808741f:	3a 06                	cmp    (%rsi),%al
 8087421:	75 d5                	jne    80873f8 <strncmp+0x98>
 8087423:	48 85 c9             	test   %rcx,%rcx
 8087426:	74 38                	je     8087460 <strncmp+0x100>
 8087428:	84 c0                	test   %al,%al
 808742a:	74 34                	je     8087460 <strncmp+0x100>
 808742c:	48 8d 47 01          	lea    0x1(%rdi),%rax
 8087430:	48 83 c6 01          	add    $0x1,%rsi
 8087434:	48 01 cf             	add    %rcx,%rdi
 8087437:	eb 18                	jmp    8087451 <strncmp+0xf1>
 8087439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8087440:	48 39 f8             	cmp    %rdi,%rax
 8087443:	74 1b                	je     8087460 <strncmp+0x100>
 8087445:	84 d2                	test   %dl,%dl
 8087447:	74 17                	je     8087460 <strncmp+0x100>
 8087449:	48 83 c0 01          	add    $0x1,%rax
 808744d:	48 83 c6 01          	add    $0x1,%rsi
 8087451:	0f b6 10             	movzbl (%rax),%edx
 8087454:	3a 16                	cmp    (%rsi),%dl
 8087456:	74 e8                	je     8087440 <strncmp+0xe0>
 8087458:	eb a6                	jmp    8087400 <strncmp+0xa0>
 808745a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 8087460:	31 c0                	xor    %eax,%eax
 8087462:	c3                   	retq   
	...

0000000008087470 <strrchr>:
 8087470:	55                   	push   %rbp
 8087471:	31 ed                	xor    %ebp,%ebp
 8087473:	53                   	push   %rbx
 8087474:	89 f3                	mov    %esi,%ebx
 8087476:	48 83 ec 08          	sub    $0x8,%rsp
 808747a:	85 f6                	test   %esi,%esi
 808747c:	75 09                	jne    8087487 <strrchr+0x17>
 808747e:	eb 1d                	jmp    808749d <strrchr+0x2d>
 8087480:	48 8d 78 01          	lea    0x1(%rax),%rdi
 8087484:	48 89 c5             	mov    %rax,%rbp
 8087487:	89 de                	mov    %ebx,%esi
 8087489:	e8 b2 fb ff ff       	callq  8087040 <strchr>
 808748e:	48 85 c0             	test   %rax,%rax
 8087491:	75 ed                	jne    8087480 <strrchr+0x10>
 8087493:	48 83 c4 08          	add    $0x8,%rsp
 8087497:	48 89 e8             	mov    %rbp,%rax
 808749a:	5b                   	pop    %rbx
 808749b:	5d                   	pop    %rbp
 808749c:	c3                   	retq   
 808749d:	48 83 c4 08          	add    $0x8,%rsp
 80874a1:	31 f6                	xor    %esi,%esi
 80874a3:	5b                   	pop    %rbx
 80874a4:	5d                   	pop    %rbp
 80874a5:	e9 96 fb ff ff       	jmpq   8087040 <strchr>
 80874aa:	00 00                	add    %al,(%rax)
 80874ac:	00 00                	add    %al,(%rax)
	...

00000000080874b0 <__libc_csu_init>:
 80874b0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
 80874b5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
 80874ba:	48 8d 2d df 05 00 00 	lea    0x5df(%rip),%rbp        # 8087aa0 <__preinit_array_end>
 80874c1:	4c 8d 25 d8 05 00 00 	lea    0x5d8(%rip),%r12        # 8087aa0 <__preinit_array_end>
 80874c8:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
 80874cd:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
 80874d2:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
 80874d7:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
 80874dc:	48 83 ec 38          	sub    $0x38,%rsp
 80874e0:	4c 29 e5             	sub    %r12,%rbp
 80874e3:	41 89 ff             	mov    %edi,%r15d
 80874e6:	49 89 f6             	mov    %rsi,%r14
 80874e9:	48 c1 fd 03          	sar    $0x3,%rbp
 80874ed:	49 89 d5             	mov    %rdx,%r13
 80874f0:	31 db                	xor    %ebx,%ebx
 80874f2:	e8 81 05 00 00       	callq  8087a78 <_init>
 80874f7:	48 85 ed             	test   %rbp,%rbp
 80874fa:	74 1a                	je     8087516 <__libc_csu_init+0x66>
 80874fc:	0f 1f 40 00          	nopl   0x0(%rax)
 8087500:	4c 89 ea             	mov    %r13,%rdx
 8087503:	4c 89 f6             	mov    %r14,%rsi
 8087506:	44 89 ff             	mov    %r15d,%edi
 8087509:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 808750d:	48 83 c3 01          	add    $0x1,%rbx
 8087511:	48 39 eb             	cmp    %rbp,%rbx
 8087514:	75 ea                	jne    8087500 <__libc_csu_init+0x50>
 8087516:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
 808751b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
 8087520:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
 8087525:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
 808752a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
 808752f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
 8087534:	48 83 c4 38          	add    $0x38,%rsp
 8087538:	c3                   	retq   
 8087539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000008087540 <__libc_csu_fini>:
 8087540:	f3 c3                	repz retq 
	...

0000000008087550 <__floatundisf>:
 8087550:	48 89 f8             	mov    %rdi,%rax
 8087553:	48 c1 f8 20          	sar    $0x20,%rax
 8087557:	85 c0                	test   %eax,%eax
 8087559:	78 0d                	js     8087568 <__floatundisf+0x18>
 808755b:	f3 48 0f 2a c7       	cvtsi2ss %rdi,%xmm0
 8087560:	c3                   	retq   
 8087561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8087568:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
 808756d:	df 6c 24 e8          	fildll -0x18(%rsp)
 8087571:	d8 05 ad 01 00 00    	fadds  0x1ad(%rip)        # 8087724 <.LC0>
 8087577:	d9 5c 24 f4          	fstps  -0xc(%rsp)
 808757b:	f3 0f 10 44 24 f4    	movss  -0xc(%rsp),%xmm0
 8087581:	c3                   	retq   
 8087582:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
 8087589:	1f 84 00 00 00 00 00 

0000000008087590 <__floatundidf>:
 8087590:	48 89 f8             	mov    %rdi,%rax
 8087593:	48 c1 f8 20          	sar    $0x20,%rax
 8087597:	85 c0                	test   %eax,%eax
 8087599:	78 0d                	js     80875a8 <__floatundidf+0x18>
 808759b:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
 80875a0:	c3                   	retq   
 80875a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 80875a8:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
 80875ad:	df 6c 24 e8          	fildll -0x18(%rsp)
 80875b1:	d8 05 6d 01 00 00    	fadds  0x16d(%rip)        # 8087724 <.LC0>
 80875b7:	dd 5c 24 f0          	fstpl  -0x10(%rsp)
 80875bb:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
 80875c1:	c3                   	retq   
 80875c2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
 80875c9:	1f 84 00 00 00 00 00 

00000000080875d0 <__floatundixf>:
 80875d0:	48 89 f8             	mov    %rdi,%rax
 80875d3:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
 80875d8:	48 c1 f8 20          	sar    $0x20,%rax
 80875dc:	85 c0                	test   %eax,%eax
 80875de:	df 6c 24 f0          	fildll -0x10(%rsp)
 80875e2:	78 0c                	js     80875f0 <__floatundixf+0x20>
 80875e4:	f3 c3                	repz retq 
 80875e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 80875ed:	00 00 00 
 80875f0:	d8 05 2e 01 00 00    	fadds  0x12e(%rip)        # 8087724 <.LC0>
 80875f6:	c3                   	retq   
 80875f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 80875fe:	00 00 

0000000008087600 <__fixunssfdi>:
 8087600:	f3 0f 11 44 24 fc    	movss  %xmm0,-0x4(%rsp)
 8087606:	31 c0                	xor    %eax,%eax
 8087608:	8b 54 24 fc          	mov    -0x4(%rsp),%edx
 808760c:	89 d2                	mov    %edx,%edx
 808760e:	48 85 d2             	test   %rdx,%rdx
 8087611:	74 1f                	je     8087632 <__fixunssfdi+0x32>
 8087613:	48 89 d1             	mov    %rdx,%rcx
 8087616:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
 808761d:	48 c1 f9 17          	sar    $0x17,%rcx
 8087621:	81 e1 ff 00 00 00    	and    $0xff,%ecx
 8087627:	81 e9 96 00 00 00    	sub    $0x96,%ecx
 808762d:	83 f9 28             	cmp    $0x28,%ecx
 8087630:	7e 06                	jle    8087638 <__fixunssfdi+0x38>
 8087632:	f3 c3                	repz retq 
 8087634:	0f 1f 40 00          	nopl   0x0(%rax)
 8087638:	81 e2 ff ff 7f 00    	and    $0x7fffff,%edx
 808763e:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
 8087645:	85 c9                	test   %ecx,%ecx
 8087647:	78 07                	js     8087650 <__fixunssfdi+0x50>
 8087649:	48 89 d0             	mov    %rdx,%rax
 808764c:	48 d3 e0             	shl    %cl,%rax
 808764f:	c3                   	retq   
 8087650:	31 c0                	xor    %eax,%eax
 8087652:	83 f9 e9             	cmp    $0xffffffe9,%ecx
 8087655:	7c db                	jl     8087632 <__fixunssfdi+0x32>
 8087657:	f7 d9                	neg    %ecx
 8087659:	48 89 d0             	mov    %rdx,%rax
 808765c:	48 d3 e8             	shr    %cl,%rax
 808765f:	c3                   	retq   

0000000008087660 <__fixunsdfdi>:
 8087660:	f2 0f 11 44 24 f8    	movsd  %xmm0,-0x8(%rsp)
 8087666:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
 808766b:	31 c0                	xor    %eax,%eax
 808766d:	48 85 d2             	test   %rdx,%rdx
 8087670:	74 1f                	je     8087691 <__fixunsdfdi+0x31>
 8087672:	48 89 d1             	mov    %rdx,%rcx
 8087675:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
 808767c:	48 c1 f9 34          	sar    $0x34,%rcx
 8087680:	81 e1 ff 07 00 00    	and    $0x7ff,%ecx
 8087686:	81 e9 33 04 00 00    	sub    $0x433,%ecx
 808768c:	83 f9 0b             	cmp    $0xb,%ecx
 808768f:	7e 07                	jle    8087698 <__fixunsdfdi+0x38>
 8087691:	f3 c3                	repz retq 
 8087693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 8087698:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
 808769f:	ff 0f 00 
 80876a2:	48 21 c2             	and    %rax,%rdx
 80876a5:	48 b8 00 00 00 00 00 	movabs $0x10000000000000,%rax
 80876ac:	00 10 00 
 80876af:	48 09 c2             	or     %rax,%rdx
 80876b2:	85 c9                	test   %ecx,%ecx
 80876b4:	78 0a                	js     80876c0 <__fixunsdfdi+0x60>
 80876b6:	48 89 d0             	mov    %rdx,%rax
 80876b9:	48 d3 e0             	shl    %cl,%rax
 80876bc:	c3                   	retq   
 80876bd:	0f 1f 00             	nopl   (%rax)
 80876c0:	31 c0                	xor    %eax,%eax
 80876c2:	83 f9 cc             	cmp    $0xffffffcc,%ecx
 80876c5:	7c ca                	jl     8087691 <__fixunsdfdi+0x31>
 80876c7:	f7 d9                	neg    %ecx
 80876c9:	48 89 d0             	mov    %rdx,%rax
 80876cc:	48 d3 e8             	shr    %cl,%rax
 80876cf:	c3                   	retq   

00000000080876d0 <__fixunsxfdi>:
 80876d0:	db 6c 24 08          	fldt   0x8(%rsp)
 80876d4:	db 7c 24 e8          	fstpt  -0x18(%rsp)
 80876d8:	48 8b 54 24 e8       	mov    -0x18(%rsp),%rdx
 80876dd:	0f b7 4c 24 f0       	movzwl -0x10(%rsp),%ecx
 80876e2:	48 85 d2             	test   %rdx,%rdx
 80876e5:	75 07                	jne    80876ee <__fixunsxfdi+0x1e>
 80876e7:	31 c0                	xor    %eax,%eax
 80876e9:	66 85 c9             	test   %cx,%cx
 80876ec:	74 17                	je     8087705 <__fixunsxfdi+0x35>
 80876ee:	81 e1 ff 7f 00 00    	and    $0x7fff,%ecx
 80876f4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
 80876fb:	81 e9 3e 40 00 00    	sub    $0x403e,%ecx
 8087701:	85 c9                	test   %ecx,%ecx
 8087703:	7e 0b                	jle    8087710 <__fixunsxfdi+0x40>
 8087705:	f3 c3                	repz retq 
 8087707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 808770e:	00 00 
 8087710:	31 c0                	xor    %eax,%eax
 8087712:	83 f9 c1             	cmp    $0xffffffc1,%ecx
 8087715:	7c ee                	jl     8087705 <__fixunsxfdi+0x35>
 8087717:	f7 d9                	neg    %ecx
 8087719:	48 89 d0             	mov    %rdx,%rax
 808771c:	48 d3 e8             	shr    %cl,%rax
 808771f:	c3                   	retq   

Disassembly of section .init:

0000000008087a78 <_init>:
 8087a78:	48 83 ec 08          	sub    $0x8,%rsp
 8087a7c:	48 8b 05 1d 66 00 00 	mov    0x661d(%rip),%rax        # 808e0a0 <_GLOBAL_OFFSET_TABLE_+0x420>
 8087a83:	48 85 c0             	test   %rax,%rax
 8087a86:	74 05                	je     8087a8d <_init+0x15>
 8087a88:	e8 73 85 f7 f7       	callq  0 <_start-0x804a2c0>
 8087a8d:	48 83 c4 08          	add    $0x8,%rsp
 8087a91:	c3                   	retq   

Disassembly of section .fini:

0000000008087a94 <_fini>:
 8087a94:	48 83 ec 08          	sub    $0x8,%rsp
 8087a98:	48 83 c4 08          	add    $0x8,%rsp
 8087a9c:	c3                   	retq   

Disassembly of section .plt:

0000000008087aa0 <.plt>:
 8087aa0:	ff 35 e2 61 00 00    	pushq  0x61e2(%rip)        # 808dc88 <_GLOBAL_OFFSET_TABLE_+0x8>
 8087aa6:	ff 25 e4 61 00 00    	jmpq   *0x61e4(%rip)        # 808dc90 <_GLOBAL_OFFSET_TABLE_+0x10>
 8087aac:	00 00                	add    %al,(%rax)
 8087aae:	00 00                	add    %al,(%rax)
 8087ab0:	ff 25 e2 61 00 00    	jmpq   *0x61e2(%rip)        # 808dc98 <_GLOBAL_OFFSET_TABLE_+0x18>
 8087ab6:	68 00 00 00 00       	pushq  $0x0
 8087abb:	e9 e0 ff ff ff       	jmpq   8087aa0 <.plt>
 8087ac0:	ff 25 da 61 00 00    	jmpq   *0x61da(%rip)        # 808dca0 <_GLOBAL_OFFSET_TABLE_+0x20>
 8087ac6:	68 08 00 00 00       	pushq  $0x8
 8087acb:	e9 d0 ff ff ff       	jmpq   8087aa0 <.plt>
 8087ad0:	ff 25 d2 61 00 00    	jmpq   *0x61d2(%rip)        # 808dca8 <_GLOBAL_OFFSET_TABLE_+0x28>
 8087ad6:	68 10 00 00 00       	pushq  $0x10
 8087adb:	e9 c0 ff ff ff       	jmpq   8087aa0 <.plt>
 8087ae0:	ff 25 ca 61 00 00    	jmpq   *0x61ca(%rip)        # 808dcb0 <_GLOBAL_OFFSET_TABLE_+0x30>
 8087ae6:	68 18 00 00 00       	pushq  $0x18
 8087aeb:	e9 b0 ff ff ff       	jmpq   8087aa0 <.plt>
 8087af0:	ff 25 c2 61 00 00    	jmpq   *0x61c2(%rip)        # 808dcb8 <_GLOBAL_OFFSET_TABLE_+0x38>
 8087af6:	68 20 00 00 00       	pushq  $0x20
 8087afb:	e9 a0 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b00:	ff 25 ba 61 00 00    	jmpq   *0x61ba(%rip)        # 808dcc0 <_GLOBAL_OFFSET_TABLE_+0x40>
 8087b06:	68 28 00 00 00       	pushq  $0x28
 8087b0b:	e9 90 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b10:	ff 25 b2 61 00 00    	jmpq   *0x61b2(%rip)        # 808dcc8 <_GLOBAL_OFFSET_TABLE_+0x48>
 8087b16:	68 30 00 00 00       	pushq  $0x30
 8087b1b:	e9 80 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b20:	ff 25 aa 61 00 00    	jmpq   *0x61aa(%rip)        # 808dcd0 <_GLOBAL_OFFSET_TABLE_+0x50>
 8087b26:	68 38 00 00 00       	pushq  $0x38
 8087b2b:	e9 70 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b30:	ff 25 a2 61 00 00    	jmpq   *0x61a2(%rip)        # 808dcd8 <_GLOBAL_OFFSET_TABLE_+0x58>
 8087b36:	68 40 00 00 00       	pushq  $0x40
 8087b3b:	e9 60 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b40:	ff 25 9a 61 00 00    	jmpq   *0x619a(%rip)        # 808dce0 <_GLOBAL_OFFSET_TABLE_+0x60>
 8087b46:	68 48 00 00 00       	pushq  $0x48
 8087b4b:	e9 50 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b50:	ff 25 92 61 00 00    	jmpq   *0x6192(%rip)        # 808dce8 <_GLOBAL_OFFSET_TABLE_+0x68>
 8087b56:	68 50 00 00 00       	pushq  $0x50
 8087b5b:	e9 40 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b60:	ff 25 8a 61 00 00    	jmpq   *0x618a(%rip)        # 808dcf0 <_GLOBAL_OFFSET_TABLE_+0x70>
 8087b66:	68 58 00 00 00       	pushq  $0x58
 8087b6b:	e9 30 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b70:	ff 25 82 61 00 00    	jmpq   *0x6182(%rip)        # 808dcf8 <_GLOBAL_OFFSET_TABLE_+0x78>
 8087b76:	68 60 00 00 00       	pushq  $0x60
 8087b7b:	e9 20 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b80:	ff 25 7a 61 00 00    	jmpq   *0x617a(%rip)        # 808dd00 <_GLOBAL_OFFSET_TABLE_+0x80>
 8087b86:	68 68 00 00 00       	pushq  $0x68
 8087b8b:	e9 10 ff ff ff       	jmpq   8087aa0 <.plt>
 8087b90:	ff 25 72 61 00 00    	jmpq   *0x6172(%rip)        # 808dd08 <_GLOBAL_OFFSET_TABLE_+0x88>
 8087b96:	68 70 00 00 00       	pushq  $0x70
 8087b9b:	e9 00 ff ff ff       	jmpq   8087aa0 <.plt>
 8087ba0:	ff 25 6a 61 00 00    	jmpq   *0x616a(%rip)        # 808dd10 <_GLOBAL_OFFSET_TABLE_+0x90>
 8087ba6:	68 78 00 00 00       	pushq  $0x78
 8087bab:	e9 f0 fe ff ff       	jmpq   8087aa0 <.plt>
 8087bb0:	ff 25 62 61 00 00    	jmpq   *0x6162(%rip)        # 808dd18 <_GLOBAL_OFFSET_TABLE_+0x98>
 8087bb6:	68 80 00 00 00       	pushq  $0x80
 8087bbb:	e9 e0 fe ff ff       	jmpq   8087aa0 <.plt>
 8087bc0:	ff 25 5a 61 00 00    	jmpq   *0x615a(%rip)        # 808dd20 <_GLOBAL_OFFSET_TABLE_+0xa0>
 8087bc6:	68 88 00 00 00       	pushq  $0x88
 8087bcb:	e9 d0 fe ff ff       	jmpq   8087aa0 <.plt>
 8087bd0:	ff 25 52 61 00 00    	jmpq   *0x6152(%rip)        # 808dd28 <_GLOBAL_OFFSET_TABLE_+0xa8>
 8087bd6:	68 90 00 00 00       	pushq  $0x90
 8087bdb:	e9 c0 fe ff ff       	jmpq   8087aa0 <.plt>
 8087be0:	ff 25 4a 61 00 00    	jmpq   *0x614a(%rip)        # 808dd30 <_GLOBAL_OFFSET_TABLE_+0xb0>
 8087be6:	68 98 00 00 00       	pushq  $0x98
 8087beb:	e9 b0 fe ff ff       	jmpq   8087aa0 <.plt>
 8087bf0:	ff 25 42 61 00 00    	jmpq   *0x6142(%rip)        # 808dd38 <_GLOBAL_OFFSET_TABLE_+0xb8>
 8087bf6:	68 a0 00 00 00       	pushq  $0xa0
 8087bfb:	e9 a0 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c00:	ff 25 3a 61 00 00    	jmpq   *0x613a(%rip)        # 808dd40 <_GLOBAL_OFFSET_TABLE_+0xc0>
 8087c06:	68 a8 00 00 00       	pushq  $0xa8
 8087c0b:	e9 90 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c10:	ff 25 32 61 00 00    	jmpq   *0x6132(%rip)        # 808dd48 <_GLOBAL_OFFSET_TABLE_+0xc8>
 8087c16:	68 b0 00 00 00       	pushq  $0xb0
 8087c1b:	e9 80 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c20:	ff 25 2a 61 00 00    	jmpq   *0x612a(%rip)        # 808dd50 <_GLOBAL_OFFSET_TABLE_+0xd0>
 8087c26:	68 b8 00 00 00       	pushq  $0xb8
 8087c2b:	e9 70 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c30:	ff 25 22 61 00 00    	jmpq   *0x6122(%rip)        # 808dd58 <_GLOBAL_OFFSET_TABLE_+0xd8>
 8087c36:	68 c0 00 00 00       	pushq  $0xc0
 8087c3b:	e9 60 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c40:	ff 25 1a 61 00 00    	jmpq   *0x611a(%rip)        # 808dd60 <_GLOBAL_OFFSET_TABLE_+0xe0>
 8087c46:	68 c8 00 00 00       	pushq  $0xc8
 8087c4b:	e9 50 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c50:	ff 25 12 61 00 00    	jmpq   *0x6112(%rip)        # 808dd68 <_GLOBAL_OFFSET_TABLE_+0xe8>
 8087c56:	68 d0 00 00 00       	pushq  $0xd0
 8087c5b:	e9 40 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c60:	ff 25 0a 61 00 00    	jmpq   *0x610a(%rip)        # 808dd70 <_GLOBAL_OFFSET_TABLE_+0xf0>
 8087c66:	68 d8 00 00 00       	pushq  $0xd8
 8087c6b:	e9 30 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c70:	ff 25 02 61 00 00    	jmpq   *0x6102(%rip)        # 808dd78 <_GLOBAL_OFFSET_TABLE_+0xf8>
 8087c76:	68 e0 00 00 00       	pushq  $0xe0
 8087c7b:	e9 20 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c80:	ff 25 fa 60 00 00    	jmpq   *0x60fa(%rip)        # 808dd80 <_GLOBAL_OFFSET_TABLE_+0x100>
 8087c86:	68 e8 00 00 00       	pushq  $0xe8
 8087c8b:	e9 10 fe ff ff       	jmpq   8087aa0 <.plt>
 8087c90:	ff 25 f2 60 00 00    	jmpq   *0x60f2(%rip)        # 808dd88 <_GLOBAL_OFFSET_TABLE_+0x108>
 8087c96:	68 f0 00 00 00       	pushq  $0xf0
 8087c9b:	e9 00 fe ff ff       	jmpq   8087aa0 <.plt>
 8087ca0:	ff 25 ea 60 00 00    	jmpq   *0x60ea(%rip)        # 808dd90 <_GLOBAL_OFFSET_TABLE_+0x110>
 8087ca6:	68 f8 00 00 00       	pushq  $0xf8
 8087cab:	e9 f0 fd ff ff       	jmpq   8087aa0 <.plt>
 8087cb0:	ff 25 e2 60 00 00    	jmpq   *0x60e2(%rip)        # 808dd98 <_GLOBAL_OFFSET_TABLE_+0x118>
 8087cb6:	68 00 01 00 00       	pushq  $0x100
 8087cbb:	e9 e0 fd ff ff       	jmpq   8087aa0 <.plt>
 8087cc0:	ff 25 da 60 00 00    	jmpq   *0x60da(%rip)        # 808dda0 <_GLOBAL_OFFSET_TABLE_+0x120>
 8087cc6:	68 08 01 00 00       	pushq  $0x108
 8087ccb:	e9 d0 fd ff ff       	jmpq   8087aa0 <.plt>
 8087cd0:	ff 25 d2 60 00 00    	jmpq   *0x60d2(%rip)        # 808dda8 <_GLOBAL_OFFSET_TABLE_+0x128>
 8087cd6:	68 10 01 00 00       	pushq  $0x110
 8087cdb:	e9 c0 fd ff ff       	jmpq   8087aa0 <.plt>
 8087ce0:	ff 25 ca 60 00 00    	jmpq   *0x60ca(%rip)        # 808ddb0 <_GLOBAL_OFFSET_TABLE_+0x130>
 8087ce6:	68 18 01 00 00       	pushq  $0x118
 8087ceb:	e9 b0 fd ff ff       	jmpq   8087aa0 <.plt>
 8087cf0:	ff 25 c2 60 00 00    	jmpq   *0x60c2(%rip)        # 808ddb8 <_GLOBAL_OFFSET_TABLE_+0x138>
 8087cf6:	68 20 01 00 00       	pushq  $0x120
 8087cfb:	e9 a0 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d00:	ff 25 ba 60 00 00    	jmpq   *0x60ba(%rip)        # 808ddc0 <_GLOBAL_OFFSET_TABLE_+0x140>
 8087d06:	68 28 01 00 00       	pushq  $0x128
 8087d0b:	e9 90 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d10:	ff 25 b2 60 00 00    	jmpq   *0x60b2(%rip)        # 808ddc8 <_GLOBAL_OFFSET_TABLE_+0x148>
 8087d16:	68 30 01 00 00       	pushq  $0x130
 8087d1b:	e9 80 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d20:	ff 25 aa 60 00 00    	jmpq   *0x60aa(%rip)        # 808ddd0 <_GLOBAL_OFFSET_TABLE_+0x150>
 8087d26:	68 38 01 00 00       	pushq  $0x138
 8087d2b:	e9 70 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d30:	ff 25 a2 60 00 00    	jmpq   *0x60a2(%rip)        # 808ddd8 <_GLOBAL_OFFSET_TABLE_+0x158>
 8087d36:	68 40 01 00 00       	pushq  $0x140
 8087d3b:	e9 60 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d40:	ff 25 9a 60 00 00    	jmpq   *0x609a(%rip)        # 808dde0 <_GLOBAL_OFFSET_TABLE_+0x160>
 8087d46:	68 48 01 00 00       	pushq  $0x148
 8087d4b:	e9 50 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d50:	ff 25 92 60 00 00    	jmpq   *0x6092(%rip)        # 808dde8 <_GLOBAL_OFFSET_TABLE_+0x168>
 8087d56:	68 50 01 00 00       	pushq  $0x150
 8087d5b:	e9 40 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d60:	ff 25 8a 60 00 00    	jmpq   *0x608a(%rip)        # 808ddf0 <_GLOBAL_OFFSET_TABLE_+0x170>
 8087d66:	68 58 01 00 00       	pushq  $0x158
 8087d6b:	e9 30 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d70:	ff 25 82 60 00 00    	jmpq   *0x6082(%rip)        # 808ddf8 <_GLOBAL_OFFSET_TABLE_+0x178>
 8087d76:	68 60 01 00 00       	pushq  $0x160
 8087d7b:	e9 20 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d80:	ff 25 7a 60 00 00    	jmpq   *0x607a(%rip)        # 808de00 <_GLOBAL_OFFSET_TABLE_+0x180>
 8087d86:	68 68 01 00 00       	pushq  $0x168
 8087d8b:	e9 10 fd ff ff       	jmpq   8087aa0 <.plt>
 8087d90:	ff 25 72 60 00 00    	jmpq   *0x6072(%rip)        # 808de08 <_GLOBAL_OFFSET_TABLE_+0x188>
 8087d96:	68 70 01 00 00       	pushq  $0x170
 8087d9b:	e9 00 fd ff ff       	jmpq   8087aa0 <.plt>
 8087da0:	ff 25 6a 60 00 00    	jmpq   *0x606a(%rip)        # 808de10 <_GLOBAL_OFFSET_TABLE_+0x190>
 8087da6:	68 78 01 00 00       	pushq  $0x178
 8087dab:	e9 f0 fc ff ff       	jmpq   8087aa0 <.plt>
 8087db0:	ff 25 62 60 00 00    	jmpq   *0x6062(%rip)        # 808de18 <_GLOBAL_OFFSET_TABLE_+0x198>
 8087db6:	68 80 01 00 00       	pushq  $0x180
 8087dbb:	e9 e0 fc ff ff       	jmpq   8087aa0 <.plt>
 8087dc0:	ff 25 d2 62 00 00    	jmpq   *0x62d2(%rip)        # 808e098 <_GLOBAL_OFFSET_TABLE_+0x418>
 8087dc6:	68 88 01 00 00       	pushq  $0x188
 8087dcb:	e9 d0 fc ff ff       	jmpq   8087aa0 <.plt>
